Removing some unnecessary methods from host and function parameters (#51499)
Move deprecate from Debug to deprecatedCompat (#51522)
visitEachChild not traversing all nodes (#51543)
Fix asyncDelegator reporting "done" too early (#51274)
Fix auto-import when `paths` points to project reference redirect (#51492)
Refactor module resolution `Extensions`, fix lookup priorities (#51471)
Improving Date.getTime documentation (#51365)
Update package-lock.json
fix(51277): Array find thisArg fix from being void (#51278)
fix(51112): skip checking binding parameters for functions that contains arguments (#51258)
Undo accidental style changes from Map/Set PR (#51529)
Fix smoke test substitution (#51494)
Add smoke tests to CI (#51464)
Update package-lock.json
Fix incorrect spelling of packageId (#51483)
Add alias ResolutionMode for ModuleKind.ESNext | ModuleKind.CommonJs | undefined (#51482)
Handle reusing type reference resolution in resolution cache correctly (#51475)
Fix __importDefault when used on typescript libraries (#51474)
Update package-lock.json
Emit buildinfo if file deleted isnt global (#51472)
Remove ts.{Map,Set,ESMap,Iterator} and associated types (#51439)
Remove no-unnecessary-qualifier from eslintrc (#51456)
Make lkg task depend on local task instead (#51468)
Simplistic watch mode for runtests (#51461)
Detangle unittests to reference helpers directly (#51450)
Fix missing awaits in Herebyfile (#51465)
Fix JSDoc eslint rule for properties and methods (#51462)
Add --no-typecheck option for runtests/runtests-parallel/min/local (#51460)
Fix --bundle=false on Windows (#51459)
Replace eslint-plugin-jsdoc by extending local jsdoc-format rule, saving ~20% of our linting time (#51438)
Remove leftover todo from mjs/cjs transition (#51453)
Bump volta/packageManager in package.json (#51445)
Update package-lock.json
Depend on build-src in runtests (#51436)
Add known keys of the mapped type constraint to its members (#50081)
TypeReference directive reuse (#49750)
Merge pull request #51387 from jakebailey/typeformer-2
Remove dynamicImport and setDynamicImport
Remove outFiles from launch.json
Disable slow CodeQL queries
Remove globalThisShim and globalThis modification for TypeScriptServicesFactory
Remove Promise redeclaration
Move compiler-debug into Debug namespace, which allows the compiler to be tree shaken
Ensure ts object passed to plugins contains deprecatedCompat declarations
Directly import namespaces for improved esbuild output
Export ts namespace from tsserver for hacky-post patching
Remove mkdirp
Don't use needsUpdate for quick tasks
Modernize localize script, use new XML library
Use jsonc-parser instead of LKG compiler in build
Update baselines for corrected line endings in lib files
Change build system to hereby
Rename Gulpfile to Herebyfile for improved git diff
Add ts to globalThis in run.js for convenience during debugging
Consolidate checks that test if the current environment is Node
Add dts bundling
Add build via esbuild
Get codebase building pre bundling
Remove typescriptServices, protocol.d.ts, typescript_standalone.d.ts
Convert require calls to imports
Fix all internal JSDoc comments
Add JSDoc eslint rule
Undo changes needed to load codebase into ts-morph
Fix up linting, make lint clean
Make processDiagnosticMessages generate a module
Add gitlens settings suggestion
Generated module conversion step - .git-ignore-blame-revs
Generated module conversion step - inlineImports
Generated module conversion step - stripNamespaces
Generated module conversion step - explicitify
Generated module conversion step - unindent
Explicitly reference ts namespace in tsserverlibrary
Make a few changes to allow all code to be loaded as one project
Fix nightly post-#50528 merge (#51432)
Fixed a regression with discriminating unions based on a union property against `undefined` with `strictNullChecks: false` (#49648)
Pass in information for the module name resolution when resolutions from file are partially used (#49738)
fix(51374): ts(80004): Quick fix... > Annotate with type from JSDoc :: object types (#51378)
Enables passing `--declaration`, `--emitDeclarationOnly`, `--declarationMap`, `--soureMap` and `--inlineSourceMap` to `tsc --build` (#51241)
Update package-lock.json
Update package-lock.json
Avoid unnecessary buildInfo read if host supports caching it (avoids in --build scenario) and some reporting cleanup (#51403)
Improve reduction of similar intersections in type inference (#51405)
Change watchdog tagged users (#51411)
There is no use of creating reference map with --out since its not used anyways (#51379)
Enum unification and improvements (#50528)
Update package-lock.json
Serialize and use files that can be emitted as affectedFilesPendingEmit (#51364)
Write original fileInfo when its not just string = version = signature in readable baseline (#51391)
fix test baseline
do not report use-before-declaration error in async IIFE initializer (#50199)
Fixed the issue with some longer variadic tuples with `any` rest being incorrectly assignable to shorter variadic tuples (#50218)
Fix services' type's `isLiteral` implementation (#50929)
Update package-lock.json
Update package-lock.json
Fix #50869, only cache calculated type for non-context sensitive parameters (#50976)
Bump version to 5.0.
Set impliedNodeFormat on sourceFile we get from host to ensure the field is set correctly (#50977)
Fixes the tests that got disabled when generating config set es2016 expecting to find libFile and remove incorrect affects flag from listFilesOnly (#51243)
Store array only if dtsOnly emit is pending to compress buildinfo (#51246)
Update package-lock.json
Update package-lock.json
Update package-lock.json
Only call return() for an abrupt completion in user code (#51297)
Fix for broken baseline in yieldInForInInDownlevelGenerator (#51345)
fix for-in enumeration containing yield in generator (#51295)
Fix assertion functions accessed via wildcard imports (#51324)
fix(51301): Fixing an unused import at the end of a line removes the newline (#51320)
Update CodeQL workflow and configuration, fix found bugs (#51263)
Update package-lock.json
fix(51245): Class with parameter decorator in arrow function causes "convert to default export" refactoring failure (#51256)
Update package-lock.json
fix(50654): "Move to a new file" breaks the declaration of referenced variable (#50681)
Dom update 2022-10-25 (#51300)
Remove "No type information for this code" from baseline (#51311)
fix(50068): Refactors trigger debug failure when JSX text has a ' and a tag on the same line. (#51299)
Update package-lock.json
Fix early call to return/throw on generator (#51294)
Add a GH Action to file a new issue if we go a week without seeing a typescript-error-deltas issue (#51271)
Update package-lock.json
Update package-lock.json
Fix apparent typo in getStringMappingType (#51248)
Update package-lock.json
Generate shortest `rootDirs` module specifier instead of first possible (#51244)
Fix typo in canWatchDirectoryOrFile found by CodeQL (#51262)
Include 'this' type parameter in isRelatedTo fast path (#51230)
Fix super property transform in async arrow in method (#51240)
Update package-lock.json
Make the init config category order predictable (#51247)
fix(50551): Destructuring assignment with var bypasses "variable is used before being assigned" check (2454) (#50560)
Update package-lock.json
Revert structuredTypeRelatedTo change and fix isUnitLikeType (#51076)
change type (#51231)
fix(51222): Go-to-definition on return statements should jump to the containing function declaration (#51227)
markAliasReferenced should include ExportValue as well (#51219)
Update package-lock.json
Remove old tslint comments (#51220)
Fixed a false positive "await has no effect on the type" diagnostic with mixed generic union (#50833)
fix: avoid downleveled dynamic import closing over specifier expression (#49663)
Rename internal functions to `narrowTypeBySwitchOnTypeOf` and `narrowTypeByInKeyword` (#51215)
Update package-lock.json
fix(49196): add jsdoc snippet for interface member functions (#51135)
fix(51170): Completing an unimplemented property overwrites rest of line (#51175)
Remove some unnecessary code discovered by rollup (#51204)
LEGO: Merge pull request 51200
LEGO: Merge pull request 51190
Update package-lock.json
Update package-lock.json
Add more tracing to node16/nodenext resolution (#51168)
Update package-lock.json
Add an extra regression test for awaited unresolvable recursive union (#51167)
fix(50416): correctly names disabled export refactors (#50663)
feat(37440): Provide a quick-fix for non-exported types (#51038)
Remove VSDevMode.ps1 and createPlaygroundBuild (#51166)
fix(51112): omit parameter names that precede the type (#51142)
feat(51163): show QF to fill in the missing properties for the mapped type. (#51165)
Remove bug-causing carve-out in conditional type instantiation that hopefully is no longer required (#51151)
Check nested weak types in intersections on target side of relation (#51140)
Update package-lock.json
Fix isExhaustiveSwitchStatement to better handle circularities (#51095)
Overloads shouldn't gain @deprecated tags of other overloads in quick info (#50904)
Update package-lock.json
Remove unused declarations array in extractSymbol's TargetRange (#51091)
fix(51100): ensure tsserver shuts down when parent process is killed (#51107)
Fix nightly publish oops in Gulpfile (#51131)
Update package-lock.json
fix(51072): ts.preProcessFile finds import in template string after conditional expression with template strings (#51082)
Convert scripts/Gulpfile to checked mjs/cjs so they can run without compilation (#50988)
fix(51017): Make lineText in the references response opt-out (#51081)
Properly defer resolution of mapped types with generic `as` clauses (#51050)
Update package-lock.json
Plugin probe location is higher priority than peer node_modules (#51079)
Plugins in project were adding up after every config file reload (#51087)
Fix incorrect options type to WatchOptions (#51064)
Update package-lock.json
Covert some of the config testing to baselines for easy validation (#51063)
Remove unused defaultWatchFileKind method since useFsEvents is default for tsserver and tsc (#51044)
Use typescript.d.ts in APISample tests (#51061)
Remove configureLanguageServiceBuild, instrumenter (#51048)
Update GitHub Actions (#51045)
Update package-lock.json
Adding a JSDoc comment to the es5 type declarations to describe the functionality of Date.now() (#50630)
Fix crash in goto-def on `@override` (#51016)
fix(50750): Object type literal with string literal property in contextual typing position causes language service error on all literal type references (#50757)
Update package-lock.json
Update package-lock.json
Include type parameter defaults in contextual typing (#50994)
Allow Unicode extended escapes in ES5 and earlier (#50918)
Update package-lock.json
Add option to OrganizeImports for removal only (#50931)
feat: codefix for `for await of` (#50623)
Properly compute `SymbolFlags.Optional` for intersected properties (#50958)
Fully resolve aliases when checking symbol flags (#50853)
Update LKG to 4.8.4 (#50987)
Update package-lock.json
Fix `<=` and `>` comparisons when compared against prerelease versions (#50915)
Fix comparability between type parameters related by a union constraint (#50978)
Merge pull request #50041 from microsoft/fix/47969
Update package-lock.json
Pick correct compilerOptions when checking if we can share emitSignatures (#50910)
During uptodate ness check with buildInfo, check if there are errors explicitly with noEmit (#50974)
Update package-lock.json
Handle if project for open file will get recollected because of pending cleanup from closed script info (#50908)
fix(49594): Typescript 4.7.3 bracketed class property compilation error strictPropertyInitialization:true (#49619)
Merge pull request #49912 from microsoft/fix/47508
Update package-lock.json
Fixing pr comments
Update package-lock.json
Update package-lock.json
Use paths in package.json 'files' array that work with npm 6 and later. (#50930)
Remove 'async' dependency, used only in errorCheck.ts, modernize file (#50667)
LEGO: Merge pull request 50921
Update package-lock.json
Pluralized `hasInvalidatedResolution` -> `hasInvalidatedResolutions` (#50912)
Make hasInvalidatedResolution non internal for program and add it watchApi (#50776)
Fix assert in addIndirectUser in FAR (#50905)
LEGO: Merge pull request 50900
Update package-lock.json
package.json `exports` should have priority over `typesVersions` (#50890)
Remove .github/tsc.json (#50664)
fix(49993): skip the quick fix for an expression with an enum type (#50625)
fix(49200): skip duplicated method declarations (#50609)
fix(37030): Expand Selection in function and arrow function skips body block (#50711)
DOM update 2022/09/21 (#50884)
fix(50866): emit modifiers from export declarations (#50874)
LEGO: Merge pull request 50877
Fix debug.ts __debugKind check (#50871)
Consistently add undefined/missing to optional tuple element types (#50831)
Improve escape sequence handling in private names (#50856)
Fix import statement completions followed by interface declaration (#50350)
feat(49962): Disallow comparison against NaN  (#50626)
Fixing spaces
Fixing baseline errors
Merge branch 'main' into fix/47969
fix(50591): RangeError: Maximum call stack size exceeded (#50594)
Allow a union property of a private/protected member and an intersection property including that same member (#50328)
Update package-lock.json
Add rules from eslint's recommended set that triggered good lints (#50422)
Improve checking of `in` operator (#50666)
Gabritto/jsemitfixsilly (#50849)
Don't elide imports when transforming JS files (#50404)
LEGO: Merge pull request 50842
Improve check of whether type query node possibly contains reference to type parameter (#50070)
LEGO: Merge pull request 50825
Fixed an issue with destructured bindings from a generic union constraint not being narrowed correctly (#50221)
Update package-lock.json
Fix test around RegExp match vs. exec results (#50813)
Fixes for pr
make `RegExpExecArray` always include index 0 (#50713)
Accepting baselines
Rewording documentation
fix(50796): omit questionToken in object literal method completions (#50802)
Fix crash caused by incorrect bounds check (regression in 4.8) (#50797)
Update package-lock.json
The error "Object is possibly null or undefined" is ambiguous. (#49797)
Update user baselines +cc @sandersn (#43554)
Removing duplicated code
Partially revert #41044, restoring parameter destructurings in d.ts files (#50779)
LEGO: Merge pull request 50783
Update package-lock.json
Fix equality narrowing and comparable relation for intersections with {} (#50735)
LEGO: Merge pull request 50771
Update package-lock.json
fix(50717): tsc crashes when it sees a JSDoc tag inside an @override annotation (#50724)
Discriminant of type `never` should never be matched (#50755)
Update package-lock.json
Fix test baselining for tsserver host timeouts (#50748)
Fix workflow typo (#50746)
Handle more places where package direcroy is converted to canonical file path (#50740)
Revert removal of nonInferrableAnyType (#50691)
Update twoslash workflow (#50738)
Don't run linter after tests runs (#50597)
Fix backticks in our JSDoc comments (#50737)
Support for auto-accessor fields from the Stage 3 Decorators proposal (#49705)
Update package-lock.json
Update package-lock.json
Don't leave space for property access on non-integer literals (#50703)
Preserve special intersections in mapped types (#50704)
Don't remove space before dot if in property access on numeric literal (#50695)
Baseline host state when baselining tsserver tests (#50678)
Update LKG and devDep of typescript to v4.8.3 (#50689)
Update package-lock.json
Remove error message in node16 (#50673)
Ignore `--help` and `-?` in `tsc init` generated `compilerOptions` (#50628)
Forward intersection state flag to conditional type target check (#50620)
Update package-lock.json
Simplify CI detection (#50661)
Fix eslint not looking at certain scripts, fix lints (#50660)
Make useFsEvents as default strategy for the watching (#50366)
Remove unused cancellation from build (#50658)
Update package-lock.json
Update package-lock.json
Report every instance of TS1208 (#50101)
Check if its same buildinfo only for directly referenced projects and not recursively (#50617)
Allow `{}` to narrow in same special cases as `unknown` (#50601)
`in` operator shouldn't narrow `{}` originating in `unknown` (#50610)
Update package-lock.json
fix(50079): show deprecated on JSX attributes (#50084)
Use bidirectional comparability in narrowing (#50592)
Remove unused baselines (#50593)
{} & null and {} & undefined should always be never  (#50553)
Defer distributing index over generic object types (#50540)
Do not canonicalize the file names when getting absolute paths during nodenext resolution (#50557)
Update package-lock.json
fix(50340): typeof ... === "undefined" check on discriminated union of undefined and object type doesn't narrow correctly (#50344)
Only normalize intersections that include {} (#50535)
Rename API to importPlugin (#50554)
Managing control flow
Update package-lock.json
Move contributing related info out of README to CONTRIBUTING (#50543)
Retain name and propertyName in declaration emit copies of binding patterns if property name is a keyword (#50537)
Update package-lock.json
Remove redundant pretest script (#50518)
Handle intersections in isGenericTypeWithoutNullableConstraint (#50497)
LEGO: Merge pull request 50506
LEGO: Merge pull request 50493
LEGO: Merge pull request 50484
Reuse computed type of condition expressions (#49881)
Update package-lock.json
fix(50427): allow convert function expressions (#50430)
Push package-lock.json updates via typescript-bot token (#50476)
fix(50415): Language server debug failure - Did not expect GetAccessor to have an Identifier in its trivia (#50470)
Rephrase error message to be 100% technically correct (#50471)
add unknown to DateTimeFormatTypes (#50402)
Don't include .gitattributes in package (#50475)
Optimize substitution types (#50397)
Fix typechecking related lints that changed post 4.8, update LKG to 4.8.2 (#50472)
feat(7481): Operator to ensure an expression is contextually typed by, and satisfies, some type (#46827)
Update package-lock.json
Remove AUTHORS.md, .mailmap, authors.ts script (#50410)
Fix auto import crash due to difference in `paths` handling (#50419)
fix(50435): Duplicate seeming Code Actions for convert const to let (#50442)
Jsdoc property description (#50269)
Remove top level loc folder (#50421)
Update package-lock.json
fix(50375): Errors for missing enum-named properties should attempt to preserve names (#50382)
Discard union types before considering weak type checks on unit-like types (#50423)
Syntax operations also need to ensure project is present for the open script infos since update could be pending to make sure open script info has project (#50418)
Update package-lock.json
fix(50224): Intellisense for strings within a type's Union doesn't work properly for JSX (#50231)
Use package.json files array instead of .npmignore (#50408)
Update package-lock.json
Split CI linting/playwright out into separate jobs (#50406)
Use a mapped type to enforce type-safety on `forEachChild`. (#50409)
Replace eslint rulesdir with eslint-plugin-local, convert eslint rules to JS (#50380)
Make canHaveModifiers/Decorators public (#50399)
Update package-lock.json
Swap `forEachChild` to use a table of functions instead of a `switch` statement. (#50225)
LEGO: Merge pull request 50389
Update package-lock.json
Update package-lock.json
Re-caret dependencies so deps like eslint continue to be bumped (#50368)
Fixes for `decorators` property deprecations (#50343)
Remove some unused deps and dead code (#50367)
fix(50075): do not strip undefined from the function class properties (#50169)
Unify default import resolution across specifier target codepaths (#49814)
Update package-lock.json
If resolvedFileName differs with realPath only in casing use the resolvedFileName before realpath so that errors can be reported with forceConsistentCasingInFileNames (#50364)
mark Intl.LocalesArgument as readonly (#50135)
Add a jump-table for visitEachChild (#50266)
Add fourslash function for validating syntactic classification (#50362)
Run eslint at root, rather than on src and scripts individually (#50327)
LEGO: Merge pull request 50353
Ensure all scripts are checked, fix errors (#50326)
LEGO: Merge pull request 50337
Update package-lock.json
fix first match in `RegExpMatchArray` being possibly undefined when `noUncheckedIndexedAccess` is enabled (#49682)
Ignore related info in diagnostic deduplication (#50309)
🔨 Fix missing "Implement interface" code fix for mapped types with implicit `keyof T` in their definition (#49999)
Update baseline after out-of-order merge (#50320)
Update package-lock.json
Make literal types not comparable to weak object types without property overlap (#49865)
Strip literal freshness of contextually typed literals (#49884)
On windows handle the long paths in realpathSync.native (#50306)
Forward intersectionState flag when comparing indexed access constraints (#50261)
fix(49149): remove unneeded array overload to Object.freeze (#50029)
fix(49629): fix crash in find-all-refs when using module.exports/export= with arrays/primitives (#50291)
Make `React` import fix not block component import fix (#50307)
Fix export = error message to not have redundant language (#50308)
Run ESLint over our JS files, fix all lints (#50172)
LEGO: Merge pull request 50298
Update package-lock.json
LEGO: Merge pull request 50295
Revert "Fixed an issue with contextual type for intersection properties (#48668)" (#50279)
Update package-lock.json
Report aggregate statistics for solution as well as some solution perf numbers (#50267)
refactor: follow gh-50257 JSX.IntrinsicClassAttributes logic (#50271)
Update package-lock.json
fix: produceLKG does not work on Windows (#50140)
use cache for program creation on watch mode. (#49958)
Make build info tolerant to json errors (#50265)
Fix up code so we don't crash when TS itself is emitted with let/const (#50151)
Remove shims project (#50049)
Simplify normalizeSlashes (#50154)
Don't treat object properties as potential JS contructors without JSDoc class tag (#49735)
fix: crashes when JSX.IntrinsicClassAttributes is an alias type close GH-50254 (#50257)
update baseline (#50252)
Update package-lock.json
JSDoc @type tag optional parameters (#48132)
Use binary search in file system cache (#50163)
feat(49903): omit declare on type declarations (#49925)
fix CFA for BindingElement. #49759 (#49836)
Merge multiple symbols even when re-exported (#49987)
Fix System module `export import =` (#49788)
Fix misleading Date constructor documentation (addresses #49350) (#49649)
feat(49928): Provide quick fix for a missing callback function (#49930)
feat(lib/es2015): Add typed overloads to `Reflect` (#35608)
feat(49834): Suggestion: filter enum member ids from their own jsdocs (#49843)
Bump version to 4.9. (#50239)
Update package-lock.json
Fixed a false positive related to binding patterns and spread expressions (#49684)
LEGO: Merge pull request 50219
Update package-lock.json
LEGO: Merge pull request 50212
Update package-lock.json
Update package-lock.json
Fix contextual typing on yield and return expressions in generator function (#49736)
Update package-lock.json
fix(50188): omit QF on function arguments (#50189)
Update error messages for CJS imports resolving to ES modules (#50088)
LEGO: Merge pull request 50179
Update package-lock.json
Fix return value and error reporting for getIterationTypesOfMethod (#50146)
Ensure that file watcher is closed only once for affected file locations that share watcher because of different names but same real path (#50150)
Add rule to auto-paren optional chain in normal prop or element access (#50156)
Fix bugs in module specifier generation with `paths`/`typesVersions` (#49792)
fix(50077): skip convertOverloadListToSingleSignature refactoring if position is in function body (#50093)
Downgrade es5-ext via overrides (#50061)
Update package-lock.json
Restore ordering of operations involving type parameters and unions (#50116)
Better typings for Promise.resolve(), like #31117 (#33074)
Update package-lock.json
fix(49935): omit parentheses in the operand of the unary expression (#50111)
No synthetic Awaited for unconstrained type when not a type variable (#50100)
Fix implied formats, file watching, new source file creating during edits (#50098)
Improve import type support for commonjs exports (#49745)
Update package-lock.json
LEGO: Merge pull request 50110
Update package-lock.json
LEGO: Merge pull request 50104
Update package-lock.json
fix(49869): throw an error on optional binding pattern parameter in JavaScript (#50094)
Transform decorators that reference private names into a 'static {}' block (#50074)
Add an additional test for favoring the asserted type in type predicate narrowing (#50065)
LEGO: Merge pull request 50091
Update package-lock.json
fix dts generation of jsdoc (#49904)
Pass correct module resolution state when reading package.json info so that they are correctly tracked in the resolution (#50085)
feat(47983): Negative tuple index access should not be allowed (#49901)
Fix trailing formatting edit when range ends mid-token (#50082)
Update package-lock.json
feat(49358): use filename based on exported name (#49875)
Report error only on local declaration with additional related information (#49746)
Update pr_owners.txt
Update to npm 8, pin in package.json via volta and corepack (#49941)
Changes to resolve pr comments
Normalize effective constraint intersection before checking if source is a part of it (#49956)
Don't uninstall typescript before npm ci in GHA (#50062)
Use proper type for result of resultModuleNamesReusingOldState (#50012)
Favor asserted type in type predicate narrowing (#50044)
Account for type parameters in missing function codefix (#49727)
Fix(49525): Adds documentation for the Proxy type. (#49674)
Resolve parsingContextErrors TODO (#50011)
fix(50048): remove token name from id (#50051)
Fixed changes to previous commit:
Walk tokens with the correct walker (#50042)
Parse parameter decorators outside of Await context when appropriate (#50040)
Follow up changes to es5.d.ts
String.prototype.replace docs fix.
Update package-lock.json
Properly handle null and undefined in getCommonSupertype (#50021)
LEGO: Merge pull request 50024
Remove uses of visitNodes and visitNode in visitEachChild (#49992)
More fixes to uncalled function checks in && expressions (#49868)
Protect watcher from double close (#49990)
fix(49964): handle auto-import dependencies/omit duplicate constraints (#50004)
Fixed closing JSDoc when adding multiple blocks (#49888)
fix(49854): fix start index to emit statements after super (#49858)
fix(49719): Incorrect error 2301 when using ES standard class properties (#49725)
Update DOM lib for 4.8 RC (#49976)
Update package-lock.json
fix(49704): Code folding not working in file with simple syntax error (#49743)
Copy type parameters to function with @type tag (#49960)
Clean up inference of type parameters, contravariant types (#49915)
Document order-dependence of isLocal flag (#49959)
Added type checks to avoid false positive results
fix(49838): "Extract function" refactoring action is disabled for a wrong reason (#49840)
Update package-lock.json
Don't leak EvolvingArray out of code flow (#49943)
feat(49786): show completions in expression with type arguments (#49810)
fix(49392): show optional class methods with enabled strict option (#49768)
check base constraint when checking operand of plus (#49918)
Update package-lock.json
Update package-lock.json
Improve narrowing logic for `instanceof`, type predicate functions, and assertion functions (#49625)
Update package-lock.json
Properly propagate ObjectFlags.NonInferrableType, clean up non-inferrable code paths (#49887)
Fix(49472): Added docs for Set and Map types (#49522)
Fixed an issue with generic naked T not being allowed as async generator's return (#49023)
noUncheckedIndexedAccess with enums Type narrowed
Delete unused code in object literal binding (#49879)
Update package-lock.json
Fixed initializaiton-time inference for class properties assigned through element access (#49374)
Update package-lock.json
🐛 Fix smart selection of propery signatures having JSDoc comments (#49804)
Update package-lock.json
Move DebugTypeMapper to debug.ts (#49864)
Update package-lock.json
Update package-lock.json
Defer types like `keyof (T & {})` (#49696)
Handle pseudo-references in getFlowCacheKey (#49828)
Add path completions for package.json exports with wildcards (#49644)
Fixed outdated expectation comments (#49691)
fix: correct name length criterion for spelling fixes (#49575)
Make contextFlags an explicitly required parameter (#49720)
fix(49685): omit incorrect visibility error when setter precedes getter (#49697)
fix(49642): resolve JsDoc comments/tags if accessors exist in symbol declarations (#49654)
Add debug format helpers for more enums (#49732)
Remove dependence on `module` compiler option to consider mts/cts files always modules (#49815)
More documentation on the impliedNodeFormat SourceFile field (#49816)
Always resetErrorInfo if structuredTypeRelatedTo succeeds (#49718)
Protect against a language service host mutating its underlying source for `getScriptFileNames` (#49813)
Add visible alias statements for non-visible binding patterns when emitting declaration (#48869)
Constrain infer type parameters made to preserver distributivity for inlined homomorphic mapped types (#49793)
fix(49544): allow comma token after accessors (#49545)
Retire $ExpectError awareness from DefinitelyTypedRunner (#49756)
Infer rest type without using assignContextualParameterTypes (#49740)
Update package-lock.json
Set Error.prototype.cause type to unknown (#70) (#49639)
Minor fixes (#49791)
fix(49426): Object method snippet completions incorrectly add this parameters (#49757)
Cache results of expensive repetitive type operations (#49760)
Elide import equals in transpileModule if referenced only by export type (#49664)
Update package-lock.json
Update package-lock.json
Update package-lock.json
Update package-lock.json
Fix for Awaited<T> inference (#49748)
Update package-lock.json
Get type arguments lazily for instantiating inferred type parameter constraint (#49744)
Fix mapper used to instantiate distributive conditional manufactured in declaration emit (#49737)
Instead of storing timestamp of when last d.ts file was modified, store its name so buildinfo becomes portable again (#49717)
Add variance results to tracing, capture variance verification on annotated type params (#49712)
Fixed an issue with self-referential awaited union (#49677)
For missing constraint quickfix insert position, Use node name end rather than related span end (#49673)
Demote priority of JS completions (#49716)
Update package-lock.json
Pass contextFlags when getting contextual type of JSX elements/attributes (#49707)
Add reference to TypeScript-Compiler-Notes in CONTRIBUTING.md (#49689)
Fix mis-completed variable name in tracepoint (#49715)
Use value meaning for computed property name for visibility check (#49678)
To handle d.ts emit errors that could affect other files, in incremental mode use d.ts emit text + diagnostics as signature of the file (#49543)
Reuse start position in binarySearchKey (#49641)
Fix parser TODO (#49679)
Update package-lock.json
Disallow expression with type parameters as left side of property access (#49464)
Add case to capture enum subtype reduction
Add a simple queue implementation with better performance than `Array.shift` (#49623)
fixes #49491 (#49493)
fix(49449): change error location when passing objects/arrays to an argument of type (#49593)
Ensure resolved signature is cached before processing call errors (#49598)
Fix(49473): Added docs for RegExpMatchArray  (#49499)
Add `fractionalSecond` part type to DateTimeFormat().formatToParts (#49569)
Use separate marker types for variance annotation validation (#49616)
Update package-lock.json
fix(49546): create computed property name for symbol props (#49554)
fix(49548): show completions after keywords in block (#49600)
LEGO: Merge pull request 49612
LEGO: Merge pull request 49602
LEGO: Merge pull request 49599
Fix arrow expressions in conditional expressions, take N+1 (#49531)
Update 4.8 DOM from Typescript-DOM-lib-generator (#49596)
Add TS Server option to exclude files from auto-imports (#49578)
Add error when importing/exporting types in JS files (#49580)
Downgrade node-fetch back to v2 (#49592)
LEGO: Merge pull request 49590
Allow nongeneric string mapping types to exist (#47050)
Fix renaming of node_modules (#49568)
Tune FAR aggregation (#49581)
Update all depedencies, including ESLint 8, refresh lockfile (#49550)
fix(49566): Implicit this.property completions not returned while writing property (#49574)
Update package-lock.json
feat(49385): forbid inlay hints for some kind of initialized declarations (#49412)
Properly re-scan `>` token in type argument list determination logic (#49560)
Allow exports map entries to point at `.ts` source files (#48563)
Expand constraint suggestion related span and add quick fix (#49481)
Handle `this` in isEntityNameVisible (#49521)
Update package-lock.json
Ensure scripts compile, are checked in strict mode (#49524)
fix(49483): throw error on await inside non-async function (#49496)
Enable TS Server plugins on web (#47377)
Forbid unused property renaming in destructuring binding in function types (#41044)
fix #49235 Objects that pass the spread syntax can no longer be assigned to assignable types. (#49337)
Fix incorrectly added resolution to resolutionsWithOnlyAffectingLocations (#49523)
Fresh `{}` is subtype of `object` (#49503)
Update package-lock.json
LEGO: Merge pull request 49494
Update package-lock.json
Eliminate (ts as any).SyntaxKind (and similar) in favor of Debug.format functions (#49485)
Improve performance of Debug.format functions (#49487)
fix(49478): add return type to method signature (#49482)
Instantiation expression can be followed by line break or binary operator (#49353)
fix missing 'internal' comment
Merge 'decorators' into 'modifiers' on various nodes (#49089)
Avoid repeating codefix work when resolving auto-import specifiers for completions (#49442)
LEGO: Merge pull request 49455
Update package-lock.json
Always recreate the file watcher when rename event occurs (#48997)
Serialize inaccessible class declarations the same as class expressions in declaration emit (#49440)
Give cjs export assigned types an alias symbol (#49407)
Revise and simplify CFA for `typeof` check expressions (#49422)
Handle package.json watch in tsc and tsserver. (#49328)
Build improvements (#48784)
Update package-lock.json
Fix up "Use symbolic GitHub Actions Node.js versions (#49403)" (#49420)
Fix(49198): Added missing definition for Atomics.waitAsync and es2022 sharedmemory file (#49204)
Replace ts.hasOwnProperty.call(...) with hasProperty(...) (#49410)
Use symbolic GitHub Actions Node.js versions (#49403)
fix(47821): skip nodes with export modifiers (#47829)
Fix definite assignment analysis issue caused by `x !== null` checks (#49387)
remove unnecessary files (#49401)
feat(47558): check JSDoc link tags in TypeScript/JavaScript files (#47822)
Update package-lock.json
Update package-lock.json
Explicit types should prevent ATA from doing package.json discovery (#49380)
Move legacy decorators into separate transform (#48669)
Expose import mode calculation functions (#49360)
fix(49223): checker.getTypeAtLocation for ExpressionWithTypeArguments returns an error any type (#49284)
Add nightly-only error on ImportType resolution mode assertion (#49356)
Use node's algorithm for calculating the longest matching export/import pattern (#49361)
fix(48653): throw an error on an invalid optional chain from new expression (#48656)
fix(49306): add isImportTypeAssertionContainer helper (#49313)
Update package-lock.json
Remove `undefined` from source type of renaming destructuring assignment with default (#41042)
Fix check in isMappedTypeGenericIndexedAccess (#49341)
Update package-lock.json
Use NonNullable<T> in more scenarios (#49330)
Fix46246 (#46357)
fix(49151): format type parameters/arguments (#49165)
Issue serialization error when attempting to serialize a late-bound name from a mapped type (#49221)
fix(49178): check expression with type arguments in inlay hints (#49179)
Allow accessors to override non-class or abstract properties  (#41994)
Fix index fallback of CJS package from ESM-mode import when `main` is present but does not resolve (#49327)
fixes #48630 array binding pattern with only OmittedExpressions does not check RHS of for-of loop (#49008)
Update package-lock.json
Update package-lock.json
LEGO: Merge pull request 49300
Update package-lock.json
Update package-lock.json
Improve intersection reduction and CFA for truthy, equality, and typeof checks (#49119)
More specific inference for constrained 'infer' types in template literal types (#48094)
fix(30003): formatter deletes comment after trailing comma (#49168)
Port #48978 forward to the revised FAR code (#49267)
Update package-lock.json
moduleDetection: auto makes cjs files parse as modules, module: node sets moduleDetection: force (#49268)
Fix crash from inaccurate type guard implementation (#49252)
Handle the case where the FAR results map is empty (#49254)
Fix extensions for noDtsResolution in node16/nodenext (#49233)
Fix the implicit glob key so that recursive keys are not differing just directory separator for wildcard directory (#49246)
fix(47562): Add option to suppress type hint if variable name matches type name (#48529)
fix(49131): allow type keyword inside functions (#49134)
Limit type argument inference from binding patterns (#49086)
Key validity of import=require in module: node off of module and not target (#49222)
When building projects in watch mode, only schedule projects that need build or need update to bundle (#48865)
Instantiate original target type in substituteIndexedMappedType (#49205)
Add es2018.intl ref to es2020.intl (#49152)
Update package-lock.json
Fix path completions for typesVersions (#49154)
Update CONTRIBUTING.md to mention issue claiming and force pushing (#49090)
Use changeCompilerHostLikeToUseCache in synchronizeHostData (#48980)
Clean up FAR aggregation (#48619)
Fix uncalled function check usage detection for && expressions (#49157)
LEGO: Merge pull request 49148
Update package-lock.json
fix confused comment (#49094)
fix(49058): Language service crashes for static member in class with unresolved base members (#49059)
No errors on apparent type of bigint or symbol, even for recent targets (#49104)
LEGO: Merge pull request 49130
Update package-lock.json
LEGO: Merge pull request 49117
LEGO: Merge pull request 49108
Update package-lock.json
Merge pull request #48954 from a-tarasyuk/fix/48948
LEGO: Merge pull request 49098
move tests to conformance/salsa from compiler
add messages to plainJSErrors
Update package-lock.json
Make watch/FS testing code friendlier for project loading in module transformation (#49087)
feat: support error when comparing with object/array literals (#45978)
fix: getDefaultLibFilePath should normalize __dirname (#49051)
LEGO: Merge pull request 49081
fix(7410): allow using JSXElement as JSXAttributeValue (#47994)
Allow referencing type-only exports as namespace members in ImportTypes and TypeQueries (#49056)
LEGO: Merge pull request 49069
Update package-lock.json
Accepted es2020Intl baseline.
Merge pull request #49029 from DavidSouther/fix/44466-contextual-keyword-assertion
Add regression test for #46192 (#49057)
fix: update types for RTF.p.formatToParts() result (#46508)
Identify when file name is matched by default include spec (#49040)
fix(48912): fractionalSecondDigits is 1, 2 or 3. (#49042)
LEGO: Merge pull request 49044
Fixed an issue with contextual type for intersection properties (#48668)
Add missing source property to Intl formatRangeToParts methods (#48754)
Add JSDoc's @inheritDoc Support for Static Class Members for TypeScript (#46719)
fix(49001): handle missing imports in addMissingMember QF (#49009)
fix: fractionalSecondDigits configure (#49014)
fix(48673): allow Find All References on access modifier for constructor (#48813)
fix(48887) exposing rest helper functions externally (#48888)
Report error for invalid 'this' type during 'await' (#48946)
Fix module specifier generation crash from typesVersions (#49035)
Fix type parameter comparability to consistently allow comparisons on unconstrained type parameters (#48861)
Remove spurious lookAhead, as this fn is already in a lookAhead
Use all modifiers test
fix(44466): Fixes parsing contextual keyword casts as arrow functions
LEGO: Merge pull request 49016
LEGO: Merge pull request 49010
Update package-lock.json
Bump version to 4.8.
Flag resolution mode assertions in non-nightly builds (#49002)
Fix missing parsingContext restore at return in parseDelimitedList (#48999)
Respect importModuleSpecifierEnding inside node_modules packages (#48995)
Fix more tests missing 'it' call in 'describe' (#48994)
Add ES2022 `Intl.Segmenter` type (#48800)
Harden combineProjectOutputForReferences against empty results (#48978)
Clear ExportMapCache on cancellation requested (#48979)
fix(48878): return errorType on invalid nodes in getTypeAtLocation (#48967)
Allow export map entries to remap back to input files for a program (#47925)
Fix node16 tests (#48974)
Remove some unused baselines. (#48964)
No error on toplevel return in JS (#48874)
Skip ambient modules in globalThis (#48938)
Revert "feat(47595): allow using private fields in type queries" (#48959)
Skip missing nodes in formatting (#48953)
Revert "Don't treat a colon in a conditional expression branch as part of an arrow function" (#48940)
fix(48948): disallow constructor name in class accessors and generators
When source file is redirected, set the prototype correctly in node factory (#48862)
Don’t let other completions shadow type keywords in type locations (#48939)
Run `mocha` using `process.execPath` instead of harcoding `"node"` (#48797)
Document encodeURIComponent/encodeURI's argument as unencoded (#48803)
Add tests case for function check type being correctly paranthesized in quick info (#48836)
Start Node ESM stable version at Node16 (#48879)
Fix blocking of recursive dependencies in getNarrowedTypeOfSymbol (#48941)
Don't go past import in cross-project renaming (#48758)
Temporarily revert unconstrained type parameter strictness in TS 4.7 (#48923)
fix(48557): Add missing JSDoc parameters  (#48560)
Fix formatter's processChildNodes (#48921)
Add a regression test for completion list in object literal involving inferred obj with optional members (#48910)
LEGO: Merge pull request 48913
Update package-lock.json
LEGO: Merge pull request 48909
Update package-lock.json
fix(48759): throw an error on using import expression with type arguments (#48787)
Fix #47753 - Organize imports removes type imports that are only referenced in @link (jsdoc) (#47824)
Use same error for iteration in <=ES5 (#48881)
Update package-lock.json
Dont reload config file when package.json change is detected (#48866)
fix(48851): exclude in from document highlights (#48853)
Fix export default expression comment (#48323)
Eagerly resolve module specifiers for auto-import completions in `--moduleResolution node12+` (#48752)
feat(48743): allow autocompletion in parameter object destructuring in JavaScript (#48757)
Add JS-specific diagnostic message for `resolve()` in Promise where type argument can't be inferred (#48533)
Stop tag after @callback from crashing (#48860)
Add Node v18 to CI (#48824)
Update package-lock.json
Fix `getExportSymbolOfValueSymbolIfExported` (#48769)
Update package-lock.json
Improve support for numeric string types (#48837)
Fix workflow syntax error (#48842)
Don't run scheduled GitHub actions on forks (#48693)
Update package-lock.json
Fix auto-import completions sometimes not updating existing imports (#48815)
Fix emit for undefined SourceFile (#48774)
Fix: verification of incremental correctness that was not working because of using wrote writeFile (#48751)
Fixed string literal completions for partially-typed strings when overload could get matched (#48811)
Update package-lock.json
fix(48556): throw an error on jsx spread attributes with an invalid type (#48570)
Format completion snippet text before escaping (#48793)
Handles time on vfs and write non empty shadowed files in baseline even if they were not read (#48703)
During emit, if shape signature for the file is same as version, then update it with emitted d.ts file (#48616)
If we are updating dts of any of the file and it affects global scope, everything needs update in signature and dts emit (#48600)
Fix handling of prologue statements when there are parameter property declarations (#48775)
Fix meta property symbol lookup (#48773)
Ensure enum aliases referenced in other enum members do not get marked as referenced (#48770)
Fix transformed constructor code when there is code between prologue statements and super call (#48765)
Update package-lock.json
Disallow line break between entity name and type arguments in typeof expression (#48755)
Constraints for mapped types with filtering 'as' clauses (#48699)
Instead of maintaining cache id etc, reset the "working" exports map cache. (#48579)
Allow triggering twoslash bisection manually (#48721)
Update package-lock.json
Find Source Definition (#48264)
Fix lints after dep update (#48707)
Fixed multiple prologue directives with parameter properties (#48687)
Update package-lock.json
Checkout needs everything (#48689)
Fix workflow syntax
setup-node needs a version spec (#48688)
WIP (#48682)
Update signatures to avoid post-LKG error (#48677)
fix(48657): allow JSXElement names to be IdentifierNames (#48661)
More permissive parsing of instantiation expressions (#48659)
Handle declaration file names consistently (#48647)
Variance annotations on class expressions + deferred valiation (#48645)
Update package-lock.json
Fix the issue with not serializing impliedFormat when signature and version of the file are same (#48614)
Make LKG and nightly declaration emit the same (#48641)
Update affected files pending emit when emitting using SemanticDignosticsBuilderProgram (#48519)
Allow twoslash-repros action to be run on-demand
Don't skip tests named *Fourslash.ts (#48615)
don't have type annotations on suggested object literal methods (#48607)
LEGO: Merge pull request 48633
Explore fewer constraints in getResolvedBaseConstraint (#48613)
LEGO: Merge pull request 48621
Reuse type nodes from optional parameters even when not written as a union with `undefined` (#48605)
Fix semantic merge conflict
Update update-package-lock.yaml
Update update-lkg.yml
Update sync-branch.yaml
Update set-version.yaml
Update nightly.yaml
Update ci.yml
Update accept-baselines-fix-lints.yaml
Update new-release-branch.yaml
Update release-branch-artifact.yaml
fix(48487): allow using private names as the self-assignment entity name (#48496)
LEGO: Merge pull request 48612
disentangle the meaning of `SymbolLinks.target` (#47098)
preserve this when extracting functions (#41992)
Fix semantic merge conflict
Write version for baselining in buildinfo (#48602)
Do not reset control flow analysis on index signatures (#48427)
Write more useful types in .types test outputs (#48578)
Preserve the distributivity of inlined conditional types in declaration emit (#48592)
Ensure late painted statements are only transformed once, so inner substitutions are consistently read (#48558)
Add additional tests for intra expression inference (#48584)
More refactoring of tsc baselines to help with easier updates (#48572)
Permit type alias variance annotations only for certain object types (#48589)
Some refactoring for baselining for easy update (#48516)
manually update webworker to remove AbortSignal.abort (#48580)
Only report isDefinition when FAR is triggered on a definition (#48566)
Update Intl.DisplayNames types for better spec compliance (#48442)
fix(48544): allow to convert default exports to names for import type nodes (#48550)
fix(48540): Extract to typedef from (invalid) type with comments in JS file causes assertion failure (#48545)
Update DOM for 4.7 beta (#48577)
Add more options to `DateTimeFormatOptions.timeZoneName` (#48467)
feat(46907): Add `Intl.ListFormat` type declarations (#47254)
Run API tests with 'strict' and 'exactOptionalProperties'. (#48574)
Improve inference for context sensitive functions in object and array literal arguments (#48538)
Add 'extends' clause to 'infer' type (#48112)
[Feature] - Automatically create sort groups based on newlines (#48330)
fix: ensure ts source file with no-default-lib that augments the global scope gets emitted with incremental program (#48412)
narrow type for generic variables inside TypeQuery (#48434)
fix(48109) - 'Convert to arrow function' refactoring adds extra indent (#48440)
Allow arrow function parameter parsing to bail out during speculation, redo (#48493)
Remove non-baselining fourslash FAR validation (#48564)
Properly check singleton labeled tuple before unwrapping (#48554)
fix(48418): allow using empty tuple (#48420)
fix(48406): resolve JSDoc host of property signature (#48407)
fixed code duplication (#48425)
Remove nightly-only flagging for nodenext features (#48555)
fix(48542): omit parameter info of contextual union type (#48549)
fix(48541): forbid function extraction to arrow function with expression body (#48548)
Convert many tests from verify.singleReferenceGroup to verify.baselineFindAllReferences (#48518)
Fix crash when circular reference in variance annotations (#48539)
fix(48520): fix getting parameter type by index (#48521)
LEGO: Merge pull request 48534
LEGO: Merge pull request 48526
Sync fourslash shims and shims-pp (#48507)
Respect @BaselineFile in fourslash tests and tidy up quickInfoDisplayPartsVarShims (#48506)
LEGO: Merge pull request 48512
Fix API under exactOptionalPropertyTypes (#48505)
Reserve a core in runtests-parallel on non-CI machines (#48502)
Correct node used for isDefinition calculation (#48499)
fix(48405): emit dummy members from a mapped type (#48481)
CFA for dependent parameters typed by generic constraints (#48411)
No contextual typing from return types for boolean literals (#48380)
fix(47733): omit JSDoc comment template suggestion on node with existing JSDoc (#47748)
Ensure that we copy empty NodeArrays during transform (#48490)
Add a new compiler option `moduleSuffixes` to expand the node module resolver's search algorithm (#48189)
feat(27615): Add missing member fix should work for type literals (#47212)
Add label details to completion entry (#48429)
Enable method signature completion for object literals (#48168)
Fix string literal completions when a partially-typed string fixes inference to a type parameter (#48410)
fix(48445): show errors on type-only import/export specifiers in JavaScript files (#48449)
Fix newline inserted in empty block at end of formatting range (#48463)
Prevent looking up symbol for as const from triggering an error (#48464)
Revise accessor resolution logic and error reporting (#48459)
fix(48166): skip checking module.exports in a truthiness call expression (#48337)
LEGO: Merge pull request 48450
LEGO: Merge pull request 48436
fix(48031): show circularity error for self referential get accessor annotations (#48050)
Revert "Fix contextual discrimination for omitted members (#43937)" (#48426)
revert #44956 - remove hyphen separator (#48416)
Add explicit tests for unconstrained type param not being assignable to `{}` and `Record<string, any>` (#48421)
LEGO: Merge pull request 48422
fix(47081): show completion list in parenthesized object literal arguments (#47104)
Fix test build post-LKG (#48403)
LEGO: Merge pull request 48400
Update package-lock.json
Make the unconstrained type parameter and {} assignability rule not apply under strictNullChecks (#48366)
Merge diagnosticsProducing and nonDiagnosticsProducing checkers into a single checker supporting lazy diagnostics (#36747)
Fix document registry cache key calculation for `paths` compiler option (#48389)
align ClassStaticBlockDeclaration with IIFE in CFA (#44969)
Fix#48281 - Indentation not respected when executing various refactorings (TypeScript/JavaScript) (#48340)
fix(48218): Split Intl.DisplayNames options (#48262)
fix(48034): Get a literal string of type intersection in a template literal type (#48044)
Optional variance annotations (#48240)
fix: export default anonymous function works with prefixText and suffixText when disabled (#48259)
fix(48053) Description of tsBuildInfoFile is misleading in generated tsconfig.json (#48072)
LEGO: Merge pull request 48371
Update package-lock.json
Make AutoImportProvider look in ATA cache (#48329)
LEGO: Merge pull request 48346
LEGO: Merge pull request 48342
Add server tracepoints (#48282)
fix(48291): omit jsdoc modifiers (#48304)
Infer extracted local variable name from property name (#37902)
Add isolatedModules error for ambiguous imports referenced in decorator metadata (#42915)
fix(48191): Duplicates comments on "Add definite assignment assertion to property" (#48299)
feat(48231): allow unique symbol for constant variables (#48270)
Change sortText for class member completions (#48196)
fix(48277): show parameter type inlay hints after ? operator (#48283)
Handle JS synthetic rest args in contextual parameter assignment (#48263)
Consistently avoid pulling on the source return type when the target return type is any (#47306)
Exclude mapped types with optionality modifiers and 'as' clauses from constraint logic (#48273)
Fix parser regression for bad related diagnostic on missing matching brackets (#44158)
Exclude mapped types with 'as' clauses from certain checks (#47889)
fix(47597): ignore commented imports following template expression (#47657)
Update issue templates (#48261)
Fix top level logical assignment leak (#40536)
fix(48081): omit error on importing variables defined with require() (#48115)
Add `boolean` to supported literals within `Object.freeze` (#48117)
Update package-lock.json
Update package-lock.json
Introduce set with custom equals and getHashCode (#48169)
Add assertion on invalid cache set (#43845)
Add moduleDetection compiler flag to allow for changing how modules are parsed (#47495)
Properly reduce intersections to never in identity relation (#48111)
Fix/dependent parameters obj methods (#48110)
Clean up a load of unused dependencies, broken jake script (#48214)
Move `hasOwn` from Object instance to Object constructor (#48207)
Make direct assignments to cjs exports considered literal contexts (#39816)
Fix conditional type type parameter leak (#31455)
Don't eagerly simplify reducible generic union index types (#46812)
Preserve the homomorphism of inlined mapped types in declaration emit (#48091)
Handle nonmaster branches in user suite tests (#48128)
Rename SyntaxKind.JSDocComment -> JSDoc (#44416)
🤖 Sync option descriptions <- website (#46465)
Bail on 0- and 1-length lists in `removeSubtypes` to avoid spurious circularity problems (#46981)
Don't crash on non-literal computed property names during getPropertyAssignment (#48079)
Tidy up navto and find-file-references (#48106)
LEGO: Merge pull request 48129
Show error when trying to instantiate a union of abstract and concrete constructors (#48114)
Add a test for emit of a computed property based on an aliased symbol (#47978)
Fix crash when `this` is typed as a generic `T` with no type constraints (#47991)
fix(43154): emit typeof type for static methods with a computed name (#46923)
Describe jsxFragmentFactory option default value (#46798)
fix(40617): handle uninitialized class member with computed key (#45974)
support generic type when checking implicit conversion of symbol to string (#44578)
Note git's core.longpaths in CONTRIBUTING (#45069)
Fix contextual discrimination for omitted members (#43937)
Fixes #35735: Avoids listing missing properties for types with only call/construct signatures (#40973)
fix(44477): emit full path to access expressions in comments (#44545)
Prevent crash on code fixes on default keyword (#48028)
Require `tag` parameter and allow `Locale` object as argument to `Intl.Locale()` constructor (#48019)
LEGO: Merge pull request 48119
Add an overload to Object.freeze that preserves literal types (#33767)
fix: add this type for Reflect.defineProperty (#33544)
Add test for call (#48015)
Fix const enum comments (#47990)
Add explicit assertion on somewhat commonly incorrectly passed argument (#48078)
Add import assertions to type only imports and import types to force the resolution mode of the specifier (#47807)
Esm imports of cjs files should unconditionally have a default patched on (#48062)
Update package-lock.json
fix(47946): check literal types in export assignments with declared JSDoc types (#47951)
Fix modifier order for class member completions (#48066)
Fix incorrect parser error assumption in semicolon handling leading to incremental parser brokenness (#48067)
Use full `isReadonlySymbol` check rather than declaration flags (#48064)
Add `Intl.Locale` parameter type to `toLocale[X]String` signatures. (#47811)
Add missing `getReducedType` call in `getConditionalTypeInstantiation` (#48061)
fix(47853): Convert to template string issue (#47976)
Expose text property of SourceFileLike for some Public APIs (#44599)
Don't treat a colon in a conditional expression branch as part of an arrow function (#47550)
go-to-type-definition, and find-all-refs should work for import.meta (#44364)
Revert "Use related spans for "implement abstract class" errors" (#48029)
Merge branch 'FlyingPumba-related-spans-for-implement-abstract-class-error'
Merge branch 'related-spans-for-implement-abstract-class-error' of https://github.com/FlyingPumba/TypeScript into FlyingPumba-related-spans-for-implement-abstract-class-error
Update package-lock.json
fix(47158): Removes comments when line variable declaration (#47407)
early return if pattern type is never (#47927)
fix(47296): add outlining spans for parenthesized expressions (#47307)
Update package-lock.json
LEGO: Merge pull request 47985
LEGO: Merge pull request 47973
Update package-lock.json
LEGO: Merge pull request 47967
Only suggest `@param` codefixes in TS (#47959)
update baseline (#47960)
feat(44956): remove hyphen separator (#47777)
Fix object.assign first param constraint (#40909)
Standardized aka.ms links for tsc and tsconfig (#47129)
Remove unnecessary check in getNarrowableTypeForReference (#47953)
LEGO: Merge pull request 47948
fix(47024):fix type of DateTimeFormat and NumberFormat (#47117)
feat(47281): use unknown type instead of any (#47308)
Use webworker typings for webServer (#46944)
fix issue where duplicate default exports aren't detected (#46871)
Uncalled function checks only works with single conditional (#42835)
Remove unnecessary check for misaligned complex rest parameters (#47934)
fix(47391): omit | token from jsdoc linkTag text (#47575)
feat(47619): add support for extracting jsx string literal attribute to a constant (#47624)
Fix #38482 making ThisParameterType<T> more general (#47162)
LEGO: Merge pull request 47930
fix(47820): forbid extraction jsdoc (#47830)
Instantiation expressions (#47607)
fix(47261): allow linkcode/linkplain tags in see tag (#47403)
fix(47256): show deprecated on index signatures (#47400)
feat(47223): show completion in jsdoc template tag (#47317)
feat(47595): allow using private fields in type queries (#47696)
Make Intl.Locale baseName and language properties required (#47720)
mark length of readonly tuple as readonly (#47717)
Merge `InlayHintOptions` into `UserPreferences` (#47729)
Add support for formatRange to Intl.DateTimeFormat  (#47740)
Fix inference for generic-typed constructor parameter when no explicit constructor is present (#47750)
Triple-slash reference type directives can override the import mode used for their resolution (#47732)
fix(47713): allow JSDoc tags on CaseClause nodes (#47741)
Fix incorrect rest element type inside contextually typed parameter (#47909)
Fix 47746 - Missing properties quickfix does not handle generic parameters (#47790)
Eliminate redundant or meaningless elaborations in type relations (#47738)
Update package-lock.json
Allow extensionless `main`s for cjs mode packages even from an esm import (#47893)
[GH Actions] Implicitly use AUTHORIZATION header instead of PAT-in-URL (#47894)
Explicitly annotate return type of getCommentRange (#47860)
LEGO: Merge pull request 47875
LEGO: Merge pull request 47871
Ensure empty array literal is assignable to never[] (#47816)
LEGO: Merge pull request 47861
Update package-lock.json
Update version to 4.7 and update baselines. (#47856)
ESM mode nonrelative imports should assume index.js entrypoints even if no package `main` is present (#47854)
Ensure subtype relation ordering for readonly properties (#47069)
Consider a symbol visible for declaration emit when it is the target of an ambient module's export= (#47835)
Correctly resolve imports ending with "." and ".." (#47850)
fix(46803): remove unused react imports with enabled react-jsxdev, react-jsx (#47247)
Enable path completions for node12/nodenext (#47836)
LEGO: Merge pull request 47843
Update package-lock.json
Add missing isolatedModules error for `export import` (#47838)
Avoid auto-importing from barrel re-exporting index files that are likely to make an import cycle (#47516)
feat(11378): check param names in JSDoc (#47257)
fix(46611): allow to use jsdoc type on class methods (#46688)
Update package-lock.json
mergeSymbol in checker:Remove block-scoped duplicate declaration errors in plain JS (#47825)
fix(47076):Fix error term of declaration in modules (#47087)
Fix destructuring and narrowing interaction (#47337)
Constructor function methods:Add two missing tag lookups (#47742)
Avoid pulling on setter type when only getter type is needed to break circularity (#47818)
fix(47787): show QF to delete parameter in getter (#47797)
Compute writeType from set accessors for union and intersection properties (#47674)
fix(47788): forbid convertToMappedObjectType QF in invalid index signatures (#47798)
LEGO: Merge pull request 47801
Update package-lock.json
Trace document registry operations (#47785)
Log per-project FAR and update baselines (#47781)
Fix substitution types of indexed access types of substitution types (#47791)
fix(47783): show globals completion in case keyword outside of switch statement (#47786)
fix(47782): forbid super() extraction outside this container (#47784)
LEGO: Merge pull request 47761
Update package-lock.json
Update package-lock.json
Refactor named imports to default instead of namespace when esModuleInterop is on and module is an export= (#47744)
fix(32941): include Template tag constraint to QuickInfo response (#47567)
Use 'static {}' for static fields when available and useDefineForClassFields is false (#47707)
fix(45917): show completions in string literal followed by a comma (#46970)
Auto-import perf: Do symbol name/flags filtering before cache rehydration (#47678)
Update package-lock.json
feat(27601): include JSDoc comments for destructuring arguments (#46886)
i18n:Inappropriate localization (#46924)
Bump node-fetch from 2.6.1 to 2.6.7 (#47564)
"Convert parameters to destructured object": enable for functions with just one parameter (#46945)
Update package-lock.json
Fix @link https:// formatting (#47705)
fix(47670): remove import alias that uses the same name (#47676)
Update package-lock.json
support quickinfo and go-to-definition on `typeof this` (#47085)
Use node moduleResolution everywhere (#47687)
Correctly check computed property names in type-space get/set accessors (#47156)
fix typefacts of intersection (#47583)
Fix captured const in downlevel for-await (#47680)
Transform param patterns/initializers after object rest (#47095)
Fix inlay hint crash for jsdoc function type syntax (#47684)
Fix captured let/const in 'for' condition or incrementer (#47681)
LEGO: Merge pull request 47677
Bump copy-props from 2.0.4 to 2.0.5 (#47342)
Manual revert of AbortSignal.abort in webworker.generated.d.ts (#47675)
LEGO: Merge pull request 47666
LEGO: Merge pull request 47664
LEGO: Merge pull request 47661
LEGO: Merge pull request 47659
Update terminal.integrated.shell.linux config in devcontainer.json (#47192)
remove unused errors in checkGrammarModifiers (#47198)
LEGO: Merge pull request 47655
Fix confusing file name in generated diagnostics file (#46821)
fix(47582): skip extraction if the type node is in the range of the type parameter declaration (#47596)
LEGO: Merge pull request 47649
LEGO: Merge pull request 47647
Update package-lock.json
Allow usage of local value symbol merged with type-only import (#47642)
Add `assert` keyword in completions (#47644)
LEGO: Merge pull request 47645
Fix duplicate completions from two different copies of a node_modules package (#47584)
Revert to temporary AbortSignal fix (#47643)
Proposal: simplify auto import descriptions (#47631)
LEGO: Merge pull request 47641
LEGO: Merge pull request 47640
LEGO: Merge pull request 47635
Update package-lock.json
Allow moduleSymbolToValidIdentifier to be uppercase for JSX tags (#47625)
Add codefix and completions for promoting existing type-only imports to non-type-only (#47552)
Don't block completion after end of type parameters in JSX elements (#47501)
fix: enum self reference (#47287)
Update DOM 2022-01-26 (#47623)
Fix diagnostic serialization crash (#47604)
fix(47561): use parameter name from enclosing declaration (#47609)
Update package-lock.json
feat(42684): allow deprecated JSDoc tag to be used on aliased nodes (#47293)
Fix JsDocTags inheritage and setter/getter quickInfo (#46801)
Don't trace bindSourceFile cache hits (#47602)
Allow structure reuse if a declaration file within a package is updated (#47472)
Update package-lock.json
Fix detecting an existing `Map`/`Set`
Update package-lock.json
Update package-lock.json
Fix narrowing of intersection with function type (#47483)
Fix parser test cases missing 'it' calls (#47545)
fix(47165): ignore spaces in goToDefinition imports (#47541)
return early from fixUnreachableCode if syntactic errors exists (#47463)
fix(47524): skip assertion on checking this in fixImplicitThis QF (#47527)
Fixed Go To Definition using jsconfig (#47434)
Associate paths with nodes when tracing (#47530)
Fix import assertion occurrences crash and make import assertion parsing more generous (#47535)
Update to TypeScript 4.5.5, fix semantic lints. (#47529)
Update package-lock.json
Add a comment to `maybeSetLocalizedDiagnosticMessages`
Avoid global mutations
fix(47492): more detailed parseTryStatement error message (#47504)
Avoid crash for import code fixes with dotted require (#47433)
Modify debug assertion to avoid crashing on SyntaxList (#47500)
Update dom.generated.d.ts (#47507)
Do not show the additional file/errors table when there's 1 file with many errors (#47345)
Update package-lock.json
fix(47451): Implicit 'any' quick fix text grabs text from wrong file (#47493)
Delay "File change detected" reporting until createProgram (#47427)
🤖 Update TypeScript DOM Libs (#47445)
Add missing currencyDisplay to resolved number format options (#44006)
Deprecate ScriptElementKind.jsxAttribute (#47414)
Better reuse of package.json cache, module resolution cache, and package.json auto import filter (#47388)
fix(47438): show auto-complete for this inside class static blocks (#47460)
Bind RHS of comma expressions too (#47049)
feat(47439): omit optional key from jsx output (#47467)
Make Map constructor argument optional and nullable (#43396)
Update package-lock.json
fix(47417): allow undefined type to be added to JSDoc types (#47449)
Update package-lock.json
Deprioritize import paths made up of only dots and slashes (#47432)
Rewrite logic for JSX attribute completion detection (#47412)
Allowed non-this, non-super code before super call in derived classes with property initializers (#29374)
Fix type error in fourslash.ts (#47430)
Fix implicit glob detection when ancestor directory contains `.` (#47418)
optimize `__createBinding`
fix(47415): don't show addConvertToUnknownForNonOverlappingTypes QF in JS (#47424)
fix(46406): add Template Literal types to decorator metadata serialization (#46913)
Fix for crash for auto import completions with a rooted rootDirs entry (#47411)
Fix for crash in navbar with double ambient modules (#47395)
Add names for refactoring functions. (#47375)
Avoid printing comments on static fields twice. (#47363)
Process package.json exports with auto-import provider (#47092)
Fix the related repos CI (#47386)
Add missing mapped type indexed access constraint (#47370)
Fix checker initialization crash with esModuleInterop and global merges resolving to ImportEquals aliases (#47348)
Update package-lock.json
Update package-lock.json
fix ATA toplevel dep detection (#47164)
Use relative paths for the end of compile report (#47344)
fix(46402): create valid property keys/jsx attribute names (#46716)
Prevent merged class/namespace from overlapping with `Record<string, unknown>` (#47088)
Fix conditional type constraint exploration + signature relations (#47341)
Add `Error.prototype.cause` (#47020)
Adds a github actions workflow which pings related repos with a blank commit once a month to ensure their automation stays running (#46747)
docs(common): url link format updated (#47336)
Update package-lock.json
Use node ipc for TS Server (#46418)
Update package-lock.json
Gabritto/semicolons (#46832)
Control flow analysis for dependent parameters (#47190)
Update package-lock.json
fix(46845): Add missing "locale" field to Intl.DisplayNamesOptions (#46849)
Update package-lock.json
Update package-lock.json
Update package-lock.json
Discourage typo fixes in PR template (#46908)
Update package-lock.json
Update package-lock.json
Update package-lock.json
Update package-lock.json
Fix baselines from bad merge (#47177)
fix merging of function and derived class (#47170)
Emit class fields as-is with `target: es2022` (#47018)
fix(47004): ignore arguments name in PropertyAssignment (#47054)
fix(47056): report errors for all properties with errors (#47057)
fix(46824): remove duplicate private identifier errors (#47116)
Update package-lock.json
update es2020.intl DisplayNames#of (#47157)
Update package-lock.json
Fix multiple issues with indexed access types applied to mapped types (#47109)
fix(47134): show all meanings for type-only imports and exports (#47138)
fix(47062): support generic arrow function with default type parameter in tsx (#47112)
Fix enums and namespace merge (#47059)
Fix extract type crash (#47136)
Revert change to getFalsyFlags (#47125)
Update package-lock.json
fix(44693): emit declaration of JSDoc overridden properties with different types (#46797)
Enable customDescriptionGenerator in launch template, update eslint setting (#47089)
Explicitly Omit unspreadable properties from rest type in the generic case (#47078)
chore: add packageManager field to support corepack (#46756)
use default type parameter rather than `unknown` when show quick help (#46792)
fix: do not use ts.NodeArray in factory inputs (#46843)
Add 12 more grammar errors (#47075)
Exempt tslib from indirect call transform (#47070)
Plain JS grammar errors (#47067)
fix(47043): as const cast wrong colour when using typescript 4.5.2 (#47066)
Update package-lock.json
fix(46606): show completion in jsdoc property tag (#46657)
Add a test for a destructured union with tuple members (#46656)
Fix Awaited<T> for onfulfilled callbacks with more than one argument (#46951)
fix(45713) Improve error report summaries (#45742)
Update package-lock.json
Unwrap parens when checking for JSDocFunctionType in conditional expression (#46962)
fix(46998): Hover on as const shows type const = /*unresolved*/ any (#47000)
Fix strict/es5+ octal literal 2x error #46810 (#46823)
Properly union inferred template literal string types (#46782)
fix(42678): detect access to uninitialized variable in IIFE (#42776)
"No repeated property names" error in object literals is duplicated in strict mode (#46929)
Use features for selected module resolution rather than all features for type reference directives, since they can add restrictions to resolutions (#47007)
Improve isValidSpreadType check (#47010)
Completions sorting overhaul (#46703)
Fix checker initialization crash (#46973)
fix(46563): show completions at this type (#46581)
feat(46986): offer QF for using await outside of async context (#46994)
Add DanielRosenwasser to PR owners. (#47006)
fix(46345): omit temp variable for computed property name in ambient context (#46446)
fix(46195): handle numeric separators and larger integers correctly in codefix for large integers (#46389)
Add jakebailey to pr_owners.txt (#46996)
Pin chalk to ^4.1 (#46985)
Describe defaults of more options (#46498)
Don't call afterEach within beforeEach (#46963)
Fix parsing of parenthesized functions in conditional expressions (#46960)
Update package-lock.json
fix(44639): Transpilation of optional chaining combined with type casting results in function call losing its context (#44666)
Fix formatting the end of a selection (#46875)
Import chalk with import() syntax (#46931)
Add function names for code fixes. (#46728)
Update package-lock.json
Update package-lock.json
Switch deferredNodes from a Map to a Set. (#46751)
Update package-lock.json
Update package-lock.json
Plain JS binder errors (#46816)
fix(46366): handle enum string access as enumMemberName (#46431)
Stop calling our own @deprecrated APIs (#46831)
enable go-to-type-definition on type nodes (#46714)
fix(42238): emit this parameter in function declaration (#46511)
Fix broken module resolution after large/rapid edits in nodenext (#46818)
Update symlink cache from AutoImportProvider resolution even if host project already contains the file via its realpath (#46830)
Allow nightly-only flags in `-insiders` builds (#46829)
implement code fix for override of js files (#45780)
Update package-lock.json
fix(43359): emit default exports with named exports that have the same names with types (#44718)
fix(46712): Add "exceptZero" for "signDisplay" option of Intl.NumberFormat() (#46740)
Revert changes to matchFiles/readDirectory made since 4.3 (#46787)
Removed replacement from jsx completions (#46767)
fix(46605): show completions in object literal parameters (#46743)
Remove unnecessary annotations/casts/aliases (#46727)
Fix extra newline in class member snippet completions (#46737)
Fix RWC missing file detection (#46673)
Update package-lock.json
fix(45907): don't use static member name to inherit JSDocs from instance members (#46274)
Big[U]Int64Array.at returns bigint, not number (#46733)
fix(45692): merge non-primitive in spread-union (#45729)
fix(44059): omit duplicate types (#45739)
fix(33325): allow extract refactoring on selected statement without trailing semicolon (#45765)
fix(46666): add outlining spans for comments preceding call expressions (#46682)
Add `target: "es2022"` (#46291)
fix(46615): remove useless assertion. change error suggestion for rest params (#46628)
Make specifier generation from export map information conditional on module resolution mode (#46670)
fix(46589): omit ? in method signature completion for optional methods (#46594)
Duplicate GDPR fragment from VS Code repo (#46625)
Control flow analysis for destructured discriminated unions (#46266)
Allow import assertions on esm imports under module: nodenext (#46630)
fix(46512): allow to use tag names containing keywords with - (#46546)
Fix contextual typing for symbol-named properties (#46558)
Improve recursion depth checks (#46599)
Properly check whether union type contains only primitive types (#46645)
Fix git remote in cherry pick script (#46647)
Exclude identity relation from mapped type relation check (#46632)
Update package-lock.json
fix(43292): forbid highlighting multiline template strings (#46531)
Fix `findUpDir.ts` and uses
Bump version to 4.6 and accept baselines. (#46612)
Check for type parameters on original type when getting type argument completions (#46614)
LEGO: Merge pull request 46601
remove placeholders in class member snippets (#46598)
LEGO: Merge pull request 46597
Set hasAddedOrRemovedSymlinks when discovering an existing file by its link (#46569)
Enable auto imports in member snippet completions (#46592)
Fix mapped type instantiation circularity (#46586)
Add error on new module/moduleResolution modes when used in non-nightly TS (#46557)
Fix react-jsx spread children invalid emit (#46565)
Update GDPR comment formatting (#46585)
Improve errors on module: node12 and extensionless relative imports (#46486)
LEGO: Merge pull request 46584
Add method signature completions (#46370)
LEGO: Merge pull request 46566
🤖 Update TypeScript DOM Libs (#46222)
Update package-lock.json
Check for array types when instantiating mapped type constraints with `any` (#46218)
Support resolveJsonModule in new module modes (#46434)
allow `typeof this` after for-loops (#46181)
Slightly less conservative check in isConstraintPosition (#46526)
Always cache relations involving intersection types (#46523)
Bypass caching in removeStringLiteralsMatchedByTemplateLiterals (#46525)
Update package-lock.json
Fix crash pulling on global types before they're initialized (#46471)
LEGO: Merge pull request 46520
Fix isNewIdentifierLocation after generator (#46491)
LEGO: Merge pull request 46510
LEGO: Merge pull request 46504
LEGO: Merge pull request 46502
LEGO: Merge pull request 46501
LEGO: Merge pull request 46496
Update package-lock.json
Fix auto import crash on weird JS aliasing (#46490)
Bind assignments to 'this' within static blocks in JS files (#46472)
Fix isNewIdentifierLocation after async (#46485)
fix(46433): forbid using keywords as parameter names (#46459)
Defer computation of isDistributionDependent to avoid circularities (#46474)
Update package-lock.json
Simplify relationship check for conditional type on target side (#46429)
fix(46466): add missing async keyword before type parameters (#46467)
Pass absolute path to directoryExists (#46086)
Fix typos in es5.d.ts (#46321)
Fix ordering of module specifiers based on package.json presence (#46437)
@link parses trailing <...> as part of linkName (#46450)
LEGO: Merge pull request 46451
@link: format trailing () as part of linkName (#46428)
LEGO: Merge pull request 46447
Update package-lock.json
Remove defaultValueDescription: "n/a" from options (#46280)
LEGO: Merge pull request 46430
Improve logic for choosing between co- and contra-variant inferences (#46392)
LEGO: Merge pull request 46424
Avoid hard-wired build-tree paths
`scripts/build/utils` simplify exec
LEGO: Merge pull request 46415
Error on mapped type w/properties (#46346)
Update package-lock.json
Changes to enable the module conversion script
Update package-lock.json
fix: ES6 Modules => ES Modules in error messages (#46378)
Import assertion: do no parse } if { is not present (#46388)
fix(45799): skip checking arguments used as a key in object literals (#45814)
Fix React auto-import blocking component imports in --preserve (#46368)
Update package-lock.json
Fix explainFiles on files under nodenext with types references (#46367)
No error for markdown links in @see (#46348)
fix(46305): omit converting jsx (react-jsx) spread attributes to Object.assign for ES2018 and up (#46317)
Fix stack overflow in JSX discriminated union logic (#46354)
fix(suggestion): Remove 80001 from cjs/cts files. (#46270)
Update package-lock.json
Pass symbol under inspection into checkIndexConstraints (#46350)
Set impliedNodeFormat on sourceFiles maufactured in watch mode (#46349)
fix(39744): make template literals more spec compliant (#45304)
Improve checks for infinitely expanding recursive conditional types (#46326)
Update package-lock.json
Set import mode on synthetic imports (#46327)
Improve perf of unions with many primitives (#45220)
fix(45336): add a blank line before the comment expression to avoid disrupting return statement (#46287)
Update package-lock.json
Update package-lock.json
Auto-imports: fix some exports being incorrectly stored as re-exports of others due to key conflict (#45792)
Update package-lock.json
LEGO: Merge pull request 46264
Use a binary search when looking for the token at a given position (#46250)
LEGO: Merge pull request 46260
In plain JS files, only suggestion did-you-mean errors (#46151)
LEGO: Merge pull request 46255
LEGO: Merge pull request 46248
Fix extension automatic script kind detection for new extensions (#46205)
Accept new moduleResolution options on commandline (#46239)
LEGO: Merge pull request 46238
Update package-lock.json
Properly support scoped package self name lookups (#46212)
Only set package data map under watch mode (#46211)
Limit package.json realpath lookup to only successful resolutions (#46209)
Feat/quick fix for types (#42126)
Update package-lock.json
LEGO: Merge pull request 46203
Update package-lock.json
Update package-lock.json
LEGO: Merge pull request 46179
LEGO: Merge pull request 46178
LEGO: Merge pull request 46173
LEGO: Merge pull request 46170
LEGO: Merge pull request 46168
improve response time of invalid rename attempts (#46158)
Follow and respect export maps when generating module specifiers (#46159)
LEGO: Merge pull request 46161
Fix main (#46160)
Modify synthetic default generation code for dual-mode module resolution (#46156)
Allow for class static vars to be called static (#44813)
feat: display the tsconfig generated when running tsc --init (#45930)
fix(sourcemap): accept a sourceMappingURL that ends with a newline (#45983)
Update package-lock.json
Track source and target relationship stack depth seperately, only increase on change in value (#41821)
Minimal fix for auto-importing node_modules in node12/nodenext (#46148)
fix(45919): allow using JSDoc types for arrow function with type predicate (#45952)
feat(36080): forbid to use JSDoc visibility modifiers in private fields (#46056)
Update package-lock.json
Add `module: es2022` (#44656)
Fix issues + Support template literal types as discriminants (#46137)
LEGO: Merge pull request 46138
fix(26635): allow casts only when JSDoc type directly attached to an expression (#45960)
fix(44021): reference jsx pragma when JsxFragment is used (#45894)
fix(45876): Remove "ascii character" order from docs for Float64Array.sort (#45883)
fix(45999): show parameter inlay hints before initializer (#46040)
Update parameter types of RegExp compile method (#46038)
LEGO: Merge pull request 46133
Update package-lock.json
LEGO: Merge pull request 46126
LEGO: Merge pull request 46117
LEGO: Merge pull request 46113
Update package-lock.json
LEGO: Merge pull request 46108
`keyof` should always include remapped keys (#45923)
Fix indexing error in guessDirectorySymlink (#46105)
LEGO: Merge pull request 46106
LEGO: check in for main to temporary branch. (#46093)
LEGO: check in for main to temporary branch. (#46092)
LEGO: check in for main to temporary branch. (#46091)
LEGO: check in for main to temporary branch. (#46090)
LEGO: check in for main to temporary branch. (#46089)
LEGO: check in for main to temporary branch. (#46088)
Updates the DOM APIs (#46080)
Type-only import specifiers (#45998)
Make `never` inferences with template literal types only in special cases (#46075)
Update package-lock.json
LEGO: Merge pull request 46079
LEGO: Merge pull request 46077
Properly handle missingType in intersections (#46052)
LEGO: Merge pull request 46070
LEGO: Merge pull request 46064
Update package-lock.json
LEGO: Merge pull request 46060
LEGO: Merge pull request 46058
Update package-lock.json
`moduleResolution: node12` support (#45884)
Default tsc --init to es2016 (#45934)
Resolve with -lib in TypeScript lib node lookup (#46046)
Transform JSX spread children (#45693)
ES private field check (#44648)
Update package-lock.json
fix(45607): add snippet for type only import statements (#45873)
Adds more Intl.ResolvedDateTimeFormatOptions, and hooks up Intl for ES2021 (#45905)
Create type aliases for unresolved type symbols (#45976)
Revert "Stop looking at binding patterns for type argument inference" (#46013)
Update package-lock.json
Avoid Promise<Awaited<T>> in return type inference (#45925)
LEGO: Merge pull request 46014
Added Jsx Snippet Completion feature (#45903)
Make isDefinition aware of declaring symbol (#45920)
Fix GH-32798: Allow == null to narrow unknown to null | undefined (#45853)
LEGO: Merge pull request 46008
LEGO: Merge pull request 46002
Update package-lock.json
Remove referenceGroups/noReferences from fourslash (#45988)
LEGO: Merge pull request 45997
Update github workflows node10 -> node16 (#45996)
fix(45987): fix pasring invalid names (#45994)
LEGO: Merge pull request 45989
Fix const assertions on enums
Update package-lock.json
Fix typo in findAllReferences.ts (#45973)
fix(45489): add test to cover comparison operator with intersection type (#45936)
Import assertion (#40698)
fix(45802): keep children of mismatched jsx element (#45839)
Update package-lock.json
LEGO: Merge pull request 45947
Fixed trimming comments on the remaining range (#45807)
LEGO: Merge pull request 45940
LEGO: Merge pull request 45935
LEGO: Merge pull request 45931
Update package-lock.json
Simplify a branch of the Awaited type and clean up comments (#45918)
Remove vestigial baselines (#45916)
fix(45850): Preserve const enums should keep import refs for exported const enums exported via named exports (#45858)
LEGO: Merge pull request 45914
Fix main by using '.default' on the new ms release (#45910)
Fix for resolvedTrueType and resolvedFalseType of conditionType not resolved (#45838)
Update pr_owners.txt (#45911)
Update package-lock.json
LEGO: Merge pull request 45904
LEGO: Merge pull request 45895
fix: add corresponding message for override error in js files (#45656)
Support resolving `@typescript/[lib]` in node modules  (#45771)
Go back to the old spelling of NumberFormatPartTypes to not break DT (#45889)
LEGO: Merge pull request 45892
Update package-lock.json
fix(44880): allow narrowing aliased conditions for catch variables (#45797)
feat(45679): support 'did you mean' diagnostics for string literal union (#45723)
Update package-lock.json
Adds back NumberFormatPartType to the global types from intl (#45843)
Fix infinite recursion in control flow analyzer inlining logic (#45845)
fix(45840): remove duplicate entries in diagnosticMessages.json (#45841)
Update package-lock.json
LEGO: Merge pull request 45842
LEGO: Merge pull request 45837
LEGO: Merge pull request 45833
LEGO: Merge pull request 45832
LEGO: Merge pull request 45831
LEGO: Merge pull request 45829
LEGO: Merge pull request 45827
Intl fix for nightly (#45820)
LEGO: Merge pull request 45822
LEGO: Merge pull request 45816
Update package-lock.json
LEGO: Merge pull request 45812
Adds 'Awaited' type alias and updates to Promise.all/race/allSettled/any (#45350)
LEGO: Merge pull request 45808
LEGO: Merge pull request 45803
Track non-null unknown types in control flow analysis (#45575)
Update package-lock.json
Fix name resolution in typedef and allow defaults for template tags (#45483)
Add `--preserveValueImports` (#44619)
Tail recursive evaluation of conditional types (#45711)
Allow type comparison when target is generic mapped type with key remapping (#45700)
feat(45010): handle unclosed fragment in `getJsxClosingTagAtPosition` (#45532)
Intl 2021 Updates (#45647)
Add support for raising if you set a tsconfig entry of target/module with the right setting in the root (#44964)
Update package-lock.json
Stop looking at binding patterns for type argument inference (#45719)
Fix missing abstract keyword in completion (#45710)
Include index signatures for tagged primitives in keyof (#45773)
Update package-lock.json
Update package-lock.json
LEGO: Merge pull request 45725
Update package-lock.json
LEGO: Merge pull request 45720
improve error message for using property of type as type (#45354)
LEGO: Merge pull request 45709
LEGO: Merge pull request 45706
Don't suppress comments when adding or removing braces to/from arrow function. (#45597)
LEGO: Merge pull request 45699
fix(45687): allow selection to next token (#45695)
LEGO: Merge pull request 45694
Revert "fix(45501): don't remove spaces between empty object literals with enabled insertSpaceAfterOpeningAndBeforeClosingEmptyBraces (#45514)" (#45682)
Remove unused code coverage command (#45684)
Minor fixes to "Convert To Async" refactor (#45536)
Fix the default text for --useDefineForClassFields (#45513)
Update package-lock.json
Update package-lock.json
Close package json watches in watch mode on close (#45642)
Update lib types to mark Annex B as deprecated (#43710)
Update package-lock.json
Fix verify.baselineCompletions (#45615)
Update package-lock.json
Update package-lock.json
Fix 'as const'-like behavior in JSDoc type cast (#45464)
Update es5.d.ts (#45454)
Don't include literals from enum members in completions (#45588)
Use realpathSync.native on case-insensitive file systems (#44966)
Update packages (#45587)
Update package-lock.json
Properties on intersections should be readonly only if all declarations are (#45263)
Let AutoImportProviderProject resolve JS when allowJs and maxNodeModulesJsDepth allows (#45524)
LEGO: Merge pull request 45568
Fixed JS completions type spread (#45484)
Add rich navigation indexing action (#45431)
fix(45501): don't remove spaces between empty object literals with enabled insertSpaceAfterOpeningAndBeforeClosingEmptyBraces (#45514)
Adds a script for removing unused diagnostics (#44324)
Update CONTRIBUTING.md (#45552)
Only provide hints for simple literals when 'literals' is specified. (#45557)
Some cleanup around inlay hints types to get more-precise checking. (#45391)
Restore HTMLDocument constructable value in DOM (#45554)
Update package-lock.json
fix for 45006 (#45020)
feat(44888): omit completions in an object expression with an instantiated class type (#45044)
feat(16755): show QF to declare missing properties in a call expression with an object literal argument (#44781)
Fix incorrect suggestion for package that bundles types (#45507)
feat(44720): allow renaming string literal in switch/case (#45084)
support contextual return type of iife (#45007)
Reuse checker's property accessibility check for completions (#45388)
Update package-lock.json
`getReferencesAtLocation`: fix handling of destructoring imports
Update package-lock.json
Increase type instantiation depth limit (#45025)
feat(18147): skip uncessary parenthesis (#44769)
feat(43963): change var to a parameter in destructured function parameters (#44767)
Expose getTypePredicateOfSignature (#44863)
fix(45294): show parameter inlay hints for template strings (#45305)
Create SECURITY.md (#45474)
Enable `max-statements-per-line` lint rule (#45475)
Update package-lock.json
LEGO: Merge pull request 45456
LEGO: Merge pull request 45453
fix(45233): allow type assertion in ExportAssignment with JSDoc type definition (#45342)
fix(45417): show inlay hints for null and literal-like identifiers (#45426)
LEGO: Merge pull request 45444
LEGO: Merge pull request 45442
Update package-lock.json
fix: nodeWillIndentChild judge for BinaryExpression with JsxElement child (#44695)
Update package-lock.json
Update package-lock.json
Fix unassignable properties by adding undefined with exactOptionalPropertyTypes (#45032)
Update tsc-instrumented for project build (#45383)
fix(45393): show parameter name hints for unary literal expressions (#45399)
fix(45345): throw an error on overridden member that is defined in multiple interfaces (#45352)
Use getFileAndProject in session provideInlayHints to ensure language service updates are applied (#45394)
Fix __spreadArray for non-concat-spreadables (#45386)
Fix typo in helpers.ts (#45365)
LEGO: Merge pull request 45375
LEGO: Merge pull request 45374
LEGO: Merge pull request 45368
LEGO: Merge pull request 45362
Update package-lock.json
LEGO: Merge pull request 45359
LEGO: Merge pull request 45357
LEGO: Merge pull request 45356
Update package-lock.json
LEGO: Merge pull request 45351
Bump version to 4.5.
Fix symbol display exception when handling incomplete class (#44936)
Improve error message TS1210 (#44892)
feat(45163): add QF to declare missing jsx attributes (#45179)
LEGO: Merge pull request 45346
Fix index signature assignability from optional properties in --exactOptionalPropertyTypes mode (#45185)
Fix check for generic types in control flow analysis (#45148)
Update package-lock.json
Fix completions in return when in function with contextual 'this' (#45340)
Enable events on web server (#45313)
Revisions for the new --help (#44800)
Some tweaks for backtick strings
Update package-lock.json
Migrate over 4.4 lib dom and webworker (#45324)
Store symbol table map key in CachedSymbolExportInfo (#45289)
`convertStringOrTemplateLiteral.ts`: Re-fix `escapeStringForTemplate`
Fix getting completion details for meta properties (#45031)
fix(45221): suggest unknown symbols in type positions (#45323)
Visit children of jsdoc type aliases in the binder (#45312)
Do not classify Infinity and NaN (#44778)
Update package-lock.json
fix(45224): show inlay hints for setter parameter (#45229)
fix(45102): do not suggest refactoring for functions contains arguments reference (#45116)
Fix position of keyword in "Add 'override' modifier" code fix (#45274)
Dev: Have a clickable link for a new baseline created (#44552)
Update package-lock.json
fix: omit inlay hints for setters (#45228)
Ensure all `SortText` entries have the same length (#45292)
LEGO: Merge pull request 45299
Add test for intersection narrowing bug (#45296)
expose getImmediateAliasedSymbol() publicly (#44644)
Replace non-null assertion with optional chain on assert nodes (#43788)
fix(45192): show implement interface QF for re-exported types (#45245)
Fix decorator metadata references to type-only-imported namespaces (#44915)
Actually instantiate the type of the annotation used for contextual types (#45285)
Update package-lock.json
Update package-lock.json
Update package-lock.json
fix(44812): add outlining spans for comments inside blocks (#44847)
Fix bigInt completions (#45059)
Use arrow functions to bind globals correctly in web scenarios (#45242)
Avoid provide hints for binding patterns (#44961)
Avoid no-op export map updates (#45238)
Fix getChildCount/At methods in EndOfFileTokens (#44991)
Update package-lock.json
Allow narrowing for any left-hand in operand (#45152)
Fix compiler crash on property symbols without declarations (#45190)
Fix import statement completions for export= in JS files (#45128)
fix(45225): do not show add missing member QF for libraries files (#45231)
Fix template string refactoring and nodeFactory bug
Update package-lock.json
feat(45210): add inlay hints for getters and setters (#45214)
Update package-lock.json
fix(45182): allow property access in arrow function (#45193)
fix(44837): add graceful recovery for require completions (#45151)
Add transitive pnpm import statement completions test (#45186)
Supress hints for access expr too (#45121)
fix(45114): throw an error when using '#' as an identifier (#45124)
fix(45157): omit error after property declaration without semicolon (#45165)
Update package-lock.json
Update package-lock.json
Update package-lock.json
Consider module augmentations in files referenced by imports in watch/incremental (#45156)
Filter auto imports by symbol flags before resolving module specifiers (#45168)
Update package-lock.json
Update package-lock.json
Check cancellation token during exportInfoMap generation (#45138)
feat(42639): allow narrowing type in 'in' operator with the identifier on the left side (#44893)
Update package-lock.json
Don’t try to create auto import provider when host program doesn’t exist (#45126)
Fix and validate post-increment/decrement in module emit (#44968)
Fix auto import crashes caused by unrelocatable symbols (#45055)
Detect preference for U`node:`-prefixed node core modules (#45080)
LEGO: Merge pull request 45092
LEGO: Merge pull request 45088
LEGO: Merge pull request 45087
LEGO: Merge pull request 45085
Update package-lock.json
LEGO: Merge pull request 45083
LEGO: Merge pull request 45081
Check for watched directories before clearing map (#44947)
fix(45049): fix diagnostic for missing property initializer (#45052)
fix(44701): allow renaming string literal in rhs/lhs of equality (#44708)
Properly propagate silentNeverType in intersections (#45073)
Dont swallow declaration emit errors when issued on nodes without names (#44995)
LEGO: Merge pull request 45072
Shorten baseline names (#45054)
fix(44168): exclude adding export to existing exported identifier (#44755)
fix(44902): resolve members in Union or Intersection types (#44904)
LEGO: Merge pull request 45067
Avoid bogus circularity error on context sensitive constructor property assignments (#44601)
LEGO: Merge pull request 45060
Fix auto import require of CJS module with module:es2015+ and allowSyntheticDefaultExports (#44955)
Specific diagnostic suggestions for unexpected keyword or identifier (#43005)
Fix namespace name conflict detection in "Convert named imports to namespace import" action (#45019)
chore(typo): fix comment (#45016)
Update package-lock.json
Fixes JSDoc @type function with variable args is interpreted incorrectly (#44864)
Support syntactic diagnostics in partial mode (#44859)
Fix "Union types are not being narrowed down correctly in 4.3 #44401" (#44771)
Update package-lock.json
LEGO: Merge pull request 45000
Watch mode watches for changes in package.json files used in resolution (#44935)
LEGO: Merge pull request 44989
LEGO: Merge pull request 44987
LEGO: Merge pull request 44982
LEGO: Merge pull request 44979
LEGO: Merge pull request 44977
Add collision check for 'Reflect' when using super in static initializers (#44876)
Update package-lock.json
Update package-lock.json
fix(35050): Decorator emit incorrect within `try` block (#41951)
Detect circularities printing recursive conditional types (#43733)
Update package-lock.json
Fix decorator emit regression for static fields (#44933)
fix(44926): change noImplicitOverride description (#44929)
Update package-lock.json
Apply disableReferencedProjectLoad to getOriginalLocationEnsuringConfiguredProject (#44836)
Improve "Convert to template string" with template-strings
Consistently ignore attributes with hyphenated names in JSX (#44873)
Refactor export map cache to not store transient symbols (#44816)
fix(44868): handle import type in shorthand assignment (#44881)
Update package-lock.json
Update package-lock.json
Change PerformanceObserver to be compatible with new Node types (#44884)
Add evaluation tests for class static initializers (#44878)
Update package-lock.json
Fix class name reference in class expr (#44877)
Update package-lock.json
Further optional delete corrections (#44862)
Correctly check for 'delete' on optional properties in 'exactOptionalPropertyTypes'. (#44854)
Update LKG to enable improved narrowing in 4.4. (#44842)
Update package-lock.json
feat(44799): allow auto import codefix for shorthand property assignment (#44827)
ensure export modifier is used before default modifier (#44570)
Update package-lock.json
fix(44448): disallow 'delete' operator for optional properties (#44612)
Validate symbol-named properties against symbol index signatures (#44815)
fix(44725): handle this parameter in tagged template call (#44734)
Fix types in the boolean trivial lint rule (#44801)
Fix bad line number assertion in `ScriptInfo.positionToLineOffset`
Update package-lock.json
Fix constant reference check in CFA (#44762)
Reduce exceptions (#44710)
feat(44736): add go-to-definition on overridden members (#44740)
Issue unawaited promise error on symbol-less expressions (#44491)
LEGO: Merge pull request 44791
Update package-lock.json
LEGO: Merge pull request 44780
LEGO: Merge pull request 44776
LEGO: Merge pull request 44770
Update package-lock.json
LEGO: Merge pull request 44766
LEGO: Merge pull request 44763
LEGO: Merge pull request 44757
Update package-lock.json
Forbid duplicate tests only in compiler+fourslash runner (#44752)
Change static fields emits (#43114)
Resolve module specifiers for auto imports in completion list (in incomplete chunks) (#44713)
fix(44738): fix eslint rules (#44739)
Migrate latest dom types into libdom.d.ts  (#44684)
Control flow analysis of aliased conditional expressions and discriminants (#44730)
Proposal class static block support (#43370)
LEGO: Merge pull request 44741
Add inlay hints support (#42089)
Update package-lock.json
LEGO: Merge pull request 44737
Fix auto imports in opening JSX tag (#44724)
LEGO: Merge pull request 44728
LEGO: Merge pull request 44717
Update package-lock.json
LEGO: Merge pull request 44716
Skip typedef in services getJSDocTags (#43677)
LEGO: Merge pull request 44714
regard TemplateLiteral as discriminant property (#44569)
LEGO: Merge pull request 44707
json modules should not treated as affecting global scope (#44690)
LEGO: Merge pull request 44705
LEGO: Merge pull request 44704
LEGO: Merge pull request 44703
Fix check for overwritten properties in object spreads (#44696)
avoid computing a full shape for indirectly invalidated files (#44090)
LEGO: Merge pull request 44699
Indirect calls for imported functions (#44624)
Improve parsing in await and yield context (#44680)
Fix 'arguments' check in class field initializer or static initialization block (#44393)
LEGO: Merge pull request 44687
importModuleSpecifierEnding changes .ts string completions to .js (#44602)
Report exact position of invalid characters in scanner (#44671)
Index signatures for symbols and template literal strings (#44512)
fix(44676): fix constToLetQuickFix selection range (#44677)
`getEditsForFileRename`: fix `updateTsconfigFiles` w/ empty `include`
Update package-lock.json
Update package-lock.json
fix(44637): add spaces between exports assignment equal token (#44655)
fix(44465): remove only unused declarations instead of the entire line (#44490)
fix(44377): omit type alias declarations from JavaScript (#44378)
Allows plugin to register commands (#44291)
Forbid duplicates in baselines (#44652)
Make files safe for Windows (#44651)
Rename strictOptionalProperties -> exactOptionalPropertyTypes and remove from strict family (#44626)
`services/utilities/getMeaningFromLocation()`: fix w/ export specifiers
feat(28491): add QF to declare missing properties (#44576)
Make export-module and reference maps invertible (#44402)
allow `this` in typeQuery (#43898)
Slightly more conservative check in isConstraintPosition function (#44621)
Don't attach declarations to symbols in mapped types with 'as XXX' clauses (#44609)
support JSDoc comments inherited for parameter properties (#44329)
Skip base type checks that can cause circularities (#44615)
Fix late bound method name assignment, added tests (#43344)
New command line help developer experience. (#44157)
Fixes to inference and mapped types in --strictOptionalProperties mode (#44595)
Update descriptions for all compiler options (#44409)
Issue "Cannot find name did-you-mean" errors as suggestions in plain JS (#44271)
Fix bug due to sharing of `.type.members`
Update package-lock.json
Correct tuple relations in --strictOptionalProperties mode (#44568)
Ensure singleton types always compare identical (#44565)
Update package-lock.json
Improve __spreadArray perf, and other fixes related to SpreadElement (#44527)
Make handleDtsMayChangeOf void-returning (#44322)
Update package-lock.json
Init (#44206)
Include actual generated module specifiers in module specifier cache (#44176)
Add missing JSXSpreadAttribute case to JSX completion logic (#44514)
Re-name really long file (#44413)
Fix typo in open-cherry-pick-pr.ts (#44517)
fix(43298): copy comments on converting from arrow function to anonymous function (#44236)
feat(44263): add quick fix for misspelled override error (#44266)
Include type reference directives in symlink cache, wait until program is present to create it (#44259)
Update package-lock.json
Add SolutionBuilderHostBase.getCustomTransformers to be used when emitting. (#44489)
Update playground build script (#44456)
Update package-lock.json
Update the version in baselines (#44447)
Fix duplicate visit of param tag comments (#44443)
Do not incorrectly add line separators for non-synthetic nodes when emitting node list (#44070)
Update package-lock.json
fix: check if sysFormatDiagnosticsHost is defined (#44344)
Update LKG. (#44423)
Handle strict flag when writing tsbuildinfo (#44394)
fix(44273): preserves 'override' modifier in JavaScript output (#44290)
Add flag to change `catch` variables' default types to `unknown` (#41013)
 Improve non-ambient class and function merge error  (#44352)
Rename TSConfig option categories (#42514)
Update package-lock.json
Tsserver tests can be baselined (#44326)
Fixes subset of bugs (three tests fixed) listed in issue #41974 (#44367)
Update package-lock.json
Strict optional properties (#43947)
Switch references to master to main in the codebase + validating infra post-main migration (#44347)
Add a testcase that fails when someone tried to make an Object.keys PR (#44368)
Update package-lock.json
Consider inferences between mapped type templates lower priority (#44126)
fix(44123): forbid convert to async for generator callbacks (#44147)
Update package-lock.json
Fix unintended 'as const' name lookup error (#44311)
Dont update timestamps of output files if noEmit was specified (#44306)
Move string trim methods from utilities to core (#44308)
Add type brands for fileId and fileIdListId (#44280)
Add traces for module resolution reuse (#44282)
Update package-lock.json
redirectsTarget is keyed with Path (#44278)
Ensure AutoImportProviderProject can share source files with main program (#44274)
More updates to program reuse with different option changes (#44276)
Fix outFile check (#44277)
Use correct state when getting it from redirected program (#44275)
fix(44249): JSX: "extract to constant" generates invalid code when using fragment syntax (#44252)
Add unqualified JSDoc member references (#44202)
Cache parsed path mapping patterns (#44078)
Update package-lock.json
feat(44190): check misspelled base members in override checks (#44213)
Refactor tsbuild watch tests (#44258)
Properly remove generic types that are constrained to 'null | undefined' in getNonNullableType (#44219)
IntelliSense doc string.replace typo (#41385)
IntelliSense doc string.replace typo (#41385)
IntelliSense doc string.replace typo (#41385)
IntelliSense doc string.replace typo (#41385)
Update package-lock.json
don't duplicate function properties when emiting definitions of overload signatures (#44235)
Simplify or optimize regexes with polynomial time worst cases (#44197)
Ensure static index signatures have an errorNode available (#44129)
Implement a two-way mirroring between the wiki and its public repo
Add @linkcode and @linkplain tags (#44208)
Avoid `convertExport` when there's a non-identifier or a bogus one
Kick out of normalizePath if there's nothing to do (#44173)
fix: internal createSignature support undefined declaration (#44109)
Update package-lock.json
support QualifiedName when narrowing inside loops (#43592)
Avoid calling replace in normalizeSlashes when it would do nothing (#44100)
Add jsdoc member names: Class#method (#44150)
Private identifiers use standard identifier scanning (#44184)
Move class name capture for private state until after declaration evaluates (#44186)
Fix regression no codefix for ts2657 (#43635)
Correct path segment regex (#44149)
Improve parser recovery for unclosed/mismatched JSX elements (#43780)
fix(WeakMapConstructor): readonly iterable items (#43905)
Error for abstract property with initialiser (#43615)
Fix the code that checks for variadic signatures
Update package-lock.json
Revert #43460 and #40884 (#44175)
Preserve generics in contextual types for rest arguments (#44122)
Fix logic for determining whether to simplify keyof on mapped types (#44042)
Update package-lock.json
improve jsdoc for array fill methods (#43627)
fix(43799): Support bigint type for Intl.NumberFormat.formatToParts (#44015)
fix(43796): Sort @deprecated completions lower than others (#43880)
feat(eslint): consistent-type-assertions (#43556)
`skipParenthesesUp()` is exactly the same as `walkUpParenthesizedExpressions()`
Update package-lock.json
Generate SourceMap mappings string using array of character codes and fewer String.fromCharCode calls (#44031)
Don’t offer import statement completions at `from` position (#44125)
Simplify codeql github action (#44124)
Update package-lock.json
Dont allow generic narrowing when contextually typed by a binding pattern (#44081)
Fix typo in host.ts (#43930)
Update package-lock.json
Cache accessibe symbol chains and serialized type parameter name generation (#43973)
Loosen up the first argument type for `String.raw`
fix(43879): forbid async in the left hand in a for-of statement (#43886)
fix(43030): fix instantiated null/undefined type from JS initializer (#43933)
Update package-lock.json
Bump version to 4.4. (#44028)
Test for  Update the type reference cache with correct project options (#44008)
Update package-lock.json
Update diagnostic message and quickfix for parameter property (#44010)
Update package-lock.json
Update the type reference cache with correct project options (#44004)
Don't eagerly get apparent type of spread expression contextual type (#44002)
Revert #35877 - fix receiver on calls of imported and exported functions (#43993)
Add writeFile and customTransformers to build and buildReferences (#43984)
Remove accidentally added file in baselines (#43998)
Support semantic highlights for JS files  (#43992)
Correctly use ownMap from module resolution cache (#43986)
Improve errors for incorrectly nested export default (#43967)
Update package-lock.json
Fix perf regression from #42556 (#43949)
Fix package.json auto imports for pnpm without project references (#43892)
Revert "typeRelatedToSomeType passes through intersectionState (#43707)" (#43983)
Dont allow namespace reexport symbols when looking up valid local names (#43969)
When directory watcher is invoked with any file from node_modules package, invalidate for file paths in that package (#43974)
fix(43939): forbid converting getters to async/await (#43944)
Fix typo in system.ts (#43895)
Update package-lock.json
Allow filterType to consider union constraints of non-union types when determining never-ness (#43763)
Unwrap substitutions on conditional check types before comparing them (#43888)
Add single-element fastpath to getSupertypeOrUnion (#43934)
fix(43957): insert Override keyword after static modifier (#43959)
Update package-lock.json
Use options from referenced project for including resolved imports in the file when using sources of project reference (#43914)
Update package-lock.json
Displayparts resolves non-values in link tags (#43903)
Use project relative preference for declaration emit (#42232)
Handle localness in special cases by checking exported variable assignment (#43851)
getExternalModuleMember:always resolve alias of moduleSymbol (#43718)
Update package-lock.json
Simplify arity errors, rewording spread errors (#43855)
Complete `constructor` keyword after property declaration (#43654)
fix(43408): emit nullable/optional types on getters (#43476)
Use single quotes consistently in diagnostic messages. (#43634)
Update package-lock.json
Enforce keyword order of `abstract` and `override` (#43829)
Allow `override` as parameter property (#43831)
typeRelatedToSomeType passes through intersectionState (#43707)
Fix `node.getStart()` for nodes spanning multiline JSDoc comments (#43854)
Update package-lock.json
Relate non-augmenting subtypes without resorting to structural comparison (#43624)
Add instantiation rules for reverse mapped types (#42449)
Update handbook link in readme (#43813)
Refrain from attempting to perform parameter fixing on a generic signature multiple times (#43835)
Update package-lock.json
Don’t create invalid type-only imports during add missing import (#43828)
Contextual typing checks property assignments for type annotation (#43598)
Fix completions of exports elsewhere in same file (#43755)
Update package-lock.json
update contextual discrimination to include omitted members (#43633)
Update package-lock.json
fix(43559): allow renaming in files with no-default-lib enabled (#43579)
Omit spaces after https in jsdoc comments (#43800)
Compute dervied generic-ness for substitutions and create lower priority inferences for substitutes (#43765)
Don’t allow an object literal with a spread as a fallback for destructuring a property not present in all constituents (#43783)
fix(42829) ignore preceeding jsx whitespace (#43452)
Update package-lock.json
Module Resolution and Type Reference directive cache updates and its API changes (#43700)
Handle getter setter quickInfo (#43769)
Remove pin, it’s fixed (#43766)
Comment copy edit
Add `infer T` constraint inference rule matching up mapped type templates across check/extends types (#43649)
Pin octokit types (#43762)
Update package-lock.json
Completion list for type literals in type arguments (#43526)
Fix object literals lack of this references (#43572)
Fix getCodeFixesAtPosition for ts(2339) thows error False expression: Token end is child end (#43645)
Added skipDestructiveCodeActions argument to organize imports server command (#43184)
Instantiate getter when infering setter parameter value (#43564)
Check type flags before checking multiple-meaning object flags (#43745)
Stop checking getter/setter compatability twice (#43741)
Clean up ObjectFlags enum (#43732)
Use faster, stricter prop type comparison when merging props in union prop creation (#43696)
Fix organize imports overlap (#43228)
Skip up-to-date checks during force build (#43666)
Remove preprinter, add parenthesizer callback to emit (#43652)
Wire up 'writing' parameter through protected derived class detection (#43455)
Update package-lock.json
Don't re-alias top-level type aliases with local type aliases (#43701)
Reducing tsbuildinfo size further (#43695)
Update package-lock.json
Node factory should insert override modifier between static and astnc (#43699)
Enforce keyword order between override and static/async (#43660)
Do not erase signatures in getSignatureOfTypeTag (#43688)
Update package-lock.json
Fix @typedef/@callback scope (#43682)
Consider identical instances of the same symbol equivalent when creating union and intersection properties (#43560)
Expand exception to contravariant constraint elision to all type variables (#43599)
Add telemetry properties for import statement completions (#43664)
fix(43444): add support JSDoc function signatures on returned function expressions (#43607)
Add jsdoc to all js statements (#43659)
Reinstate constraint check for template literal types (#43661)
Fix sending correct symbol when using commonjs require and destructuring (#43511)
Trim indexed access and type variable constraint error output (#43540)
Don’t error for missing await when promise is referenced in condition body (#43593)
@link and @see resolve C.m as a class property reference (#43625)
Don't start jsdoc tag before whitespace (#43602)
Catch hover on as const (#43588)
Update package-lock.json
Update package-lock.json
Process only existing files and directories in the test harness
ignore static and declared member if checking override (#43569)
Improve rendering of JSDoc comment text with displayparts (#43390)
While writing tsbuildinfo sort the properties of compiler options to make sure they stay same if nothing changes. (#43601)
Update package-lock.json
Specified diagnostic for CLI flags mismatched with/out --build (#43199)
Fix Add all missing imports when ordered alphabetically (#43453)
Properly handle tagged primitives in control flow analysis (#43538)
Again: Improve error messages for empty DOM interface property access (#43007)
Corrected parsing for decorators on 'this' parameters (#43175)
Gh 41788 incorrect output for esprivate with nested class in esnext (#42663)
Fix getTypeFromJSDocVariadicType in callback tag (#43562)
Update package-lock.json
Use control flow to type CommonJS exports (#42751)
fix(43495): insert Override keyword after accessibility modifier (#43504)
fix(43535): preserves 'override' modifier in JavaScript output (#43536)
Update user baselines +cc @sandersn (#42842)
Enforce `override` precedes `readonly` (#43545)
fix(43347): fix crash occurred when export type to existing commonJs imported name (#43369)
Always grammar checker for override (#43544)
fix(43160): improve error location for functions without explicit return (#43367)
Add asserts to type only symbols meaning exclusion (#43382)
Go to definition: pass `unverified` through server (#43483)
Handle document Registry to distinguish between files with same name and document registry key(compiler options affecting source file) but different ScriptKind (#43474)
fix quickinfo of narrowed private filed (#43356)
Fix getRecursionIdentity function to always return some identity (#43527)
fix(42605): support refactoring for export default assignment without equal (#42936)
Make origin union cache key unique for key lists still under construction (#43339)
Allow nested reverse mapped type printback (#42485)
When reusing input type nodes, only instantiate the type for comparison if it is a this type (#42584)
fix(43316): omit to suggest converting to async function if a void is explicitly returned (#43358)
Do not covariantly mix in constraints from contravarrying positions (#43439)
Add grunt user test (#43510)
Update package-lock.json
Update package-lock.json
Update package-lock.json
Disabled 'used before initialization' error for optional properties (#43100)
Add @link jsdoc auto-complete (#43475)
Add @deprecated to tree walk (#43473)
Added BindingElement to isSomeImportDeclaration (#43387)
Error if assignment after block (#41115)
Only issue matching token errors on non-dupe locations (#43460)
Update package-lock.json
Do not delete output file names that are same as input file name (#43448)
Fix template literal type relations (#43440)
fix(43313): add parentheses to a type assertions (#43315)
"fix(services): convert to es6 module generate invalid code with .default" (#43309)
Consider base types in isArrayLikeType (#43435)
Adding Diagnostic message for missing ']' and ')' in Array literal and conditional statements (#40884)
Remote duplicated assignment (#43399)
fix(43215): disallow using never as an interface name (#43217)
Consider class field properties to redeclare parent definitions (#43194)
Fix length of `JSDocTypedefTag`
Improve (and actually use) "always truthy promise" error (#43023)
Fix typo (#43404)
Update package-lock.json
Support relations and inference between template literal types (#43361)
Rename isWrite -> writing (#43405)
Update package-lock.json
Variant accessors (#42425)
--noImplicitOverride (#39669)
Add static index signature (#37797)
Import statement completions (#43149)
Cache resolved project references and watch wild card directories from them to update them (#42929)
Template literal types for contextually typed template literal expressions (#43376)
Update package-lock.json
Port realpath workaround from release-4.2 (#43384)
Don't build type catalog during server tracing (#43354)
Use 'abstract new' in InstanceType and ConstructorParameters (#43380)
Update typescript-eslint to latest (#43381)
`getSemanticDocumentHighlights`: don't fail...
Update package-lock.json
ES private class elements (#42458)
`deleteDeclaration`: don't crash on the top node.
Use last detected JSX import source pragma as canonical source, rather than first (#43351)
Do not calculate signatures if old state is not used (#43314)
@link support, second try (#43312)
Fix Issue #39155 (importModuleSpecifierEnding does not apply for module specifier completions) (#42467)
Delete issue_template.md (#43320)
Adjust scanning of keywordy jsx namespace names, add grammar error for jsx dotted names containing namespace names (#43104)
Update package-lock.json
Accepts baseline change caused by #43035 (#43322)
Update package-lock.json
Use shared binary trampoline in checker (#43035)
Improve narrowing of generic types in control flow analysis (#43183)
fix CommonJs modules no longer affecting the global scope (#43090)
Made TS6059 rootDir validation consistent for programmatic usage (#43145)
[GH-43213] Fix duplicate comments printed in quick info section (#43240)
Only catalog types when tracing (#43304)
Normalize target type after null-stripping unions in relationship checks (#43202)
Revert "Editor support for link tag (#41877)" (#43302)
Fix narrowing of intersections of type variables and primitive types (#43131)
Editor support for link tag (#41877)
fix(43254): show named tuple member type (#43273)
Fix dump of tracing legend (#43263)
Update package-lock.json
Refactor the test for easy maintainability (#43262)
Fixed reporting error for type arity (#43111)
Fix jsx formatting (#42671)
Update package-lock.json
Emit readable BuilderFileEmit kind (#43221)
Fix issue with some baselines for tsbuildinfo not getting generated (#43218)
Improvements to dts emit for tsbuildinfo (#43205)
Update package-lock.json
Bigint constructor forbids object null undefined (#43204)
Updated error message for TS2539 (#39827)
Build info baseline improvements (#43200)
Add missing relationship allowing a type to be assignable to a conditional when assignable to both branches (#30639)
Bloomberg computed property name fix (#43197)
Add a test for JSX namespace lookup with `jsx: preserve, jsxImportSource` (#41676)
Accept generics for defineProperty (#42424)
Fixed issue where non null assertion caused getFlowTypeOfReference to return the declared type if the type was already narrowed to never. (#35863)
Fix #38608 (#38610)
Don't crash when renaming a JS property declared via module.exports (#40297)
fix(41027): handle unused static members (#41103)
Update package-lock.json
Add target: ES2021  (#41239)
Fix missing func modifier (#40379)
fix(42265): Error accessing abstract property in constructor via destructuring (#42276)
Update package-lock.json
Ensure that when new file affecting global scope is added, the signatures are updated (#43084)
Optimize the size for tsbuildinfo (#43155)
Clearifies protected error message (#42599)
Don't inherit jsdoc tags from overloaded signatures (#43165)
Fix37991 (#43166)
fix(42380): include JSDoc comments in declarations for static/prototype methods (#42454)
Update package-lock.json
Update package-lock.json
Update package-lock.json
Exclude enum/number compatibility rule from comparable relation (#42472)
Remove undefined from optional properties when inferring to index signatures (#43086)
Update package-lock.json
Update parseInt parameter name and jsdoc (#42756)
Unnecessary elaboration about not being assignable to type parameters (#42952)
Properly instantiate inferred constraints in conditional types (#42747)
Update package-lock.json
Relax requirements on index signatures to 'any' when a type also contains a string index signature to 'any' (#43065)
fix(39836): allow type declaration/unknown type in catch arguments in JavaScript files (#42392)
Expose 'reservedInNestedScopes' option when creating temp and loop variables (#43083)
Update the DOM: March 03, 2021 (#43070)
Do a shallow clone for Docker tests. (#42966)
Update package-lock.json
capture thisArg of optionalChaining in parens (#35494)
Merge pull request #43055 from armanio123/FixDefineForClassFields
fix receiver on calls of imported and exported functions (#35877)
Update package-lock.json
Added tests
Delete old, different-case name of quickInfoJSDocTags.baseline (#43052)
Move fixed chunk size polling as a watch option and move it out of server (#42542)
Baseline completions and signature help (#43049)
fix(43006): skip trivia in a function name (#43021)
Add undefined to Symbol.valueDeclaration (#43033)
fix(42765): require should not work in ts files (#42792)
Update project.ts (#42900)
Fixed typo error. (#42816)
typo (#42899)
Update package-lock.json
Only filter ignored paths from module specifier generation if there exists a better option (#43024)
Support go-to-definition for imports of arbitrary files (#42539)
Add undefined to Symbol.declarations' type (#42975)
Update package-lock.json. (#43028)
Add 'data' property to completion entry for better coordination between completions and completion details (#42890)
Tracing: dump more information about types (#42962)
Update package-lock.json
Optimize checking involving large discriminated union types (#42556)
Update package-lock.json
Update package-lock.json
Fix preserveSourceNewlines sibling node comparison (fixes extra newlines in organize imports) (#42630)
Refactor emit substitution into transform (#42676)
Remove special `any` assignability for numeric index signatures (#41660)
Fix: checkAliasSymbol crash when checking for @deprecated (#42971)
Properly handle duplicate enum types in type inference (#42943)
Expose EncodedSemanticClassificationsRequest in protocol.d.ts (#42640)
Use yarn resolutions to inject nightly TS version across whole workspace in fabric test (#42961)
Update editorServices.ts (#42951)
Type lookup in getIntrinsicAttributestypeFromJsxOpeningLikeElement should match getIntrinsicTagSymbol (#42819)
Update package-lock.json
Merge pull request #42904 from a-tarasyuk/fix/42339
Merge pull request #42332 from a-tarasyuk/fix/42259
fix(42923): add go-to-definition on unresolved shorthand properties (#42924)
Do not cache directory structure for symlinked directories (#42868)
Update package-lock.json
Never-reducing intersections are not untyped function call targets (#42917)
Base signatures resolve only the type parameters local to the signature, not all type parameters (#42703)
Bail when comparing a specialized form of an already ongoing comparison (#42727)
Refactor to simplify project references tsc-watch and tsserver tests (#42926)
Improve JSON parser error recovery (#42657)
fix(42833): add return type to methods with overloads (#42881)
Update package-lock.json
Fix regexes. (#42921)
Extend the `MetaProperty` check to work for `new.target` too
Add missing MetaProperty stuffs
Eliminate well known symbols as a concept in the checker and rely on unique symbols (#42543)
Combine multiple overloads into a single contextual signature (#42620)
fix(42339): skip return if spread type is wrong
Update package-lock.json
Make 'calendar' and 'numberingSystem' open strings in es2020.intl. (#42886)
improve isRequireVariableDeclaration parameters (#42865)
Update package-lock.json
Update npm in user tests (#42841)
fix(42368): omit converting jsx spread attributes to Object.assign for ES2018 and up (#42554)
feat(lib/es2021): Add type parameter to `FinalizationRegistry` (#42274)
Improve error messages for computed class property names (#42675)
Fix for crash when using ca call expression on private identifier coming from an any typed variable. (GH #42860) (#42861)
Update scriptInfo.ts (#42855)
Fix duplicate auto-import completions (#42850)
Update package-lock.json
Improve @template lookup and resilience (#42851)
Specified diagnostic for iterating known array type without --downlevelIteration (#40070)
fix(41740): disallow renaming/exclude from references default keyword (#41947)
Provide completion for partial expression on closing jsx tags (#42029)
Check for missing type parameter names in JSDoc template tags (#42017)
Reduce void | undefined only in conjunction with subtype reduction (#42846)
Expand extractSymbol ranges (#42770)
Update user baselines +cc @sandersn (#42611)
fix(37578): Deprecate variable name AllowQualifedNameInPlaceOfIdentifier (#38726)
fix: fix RelativeTimeFormat type definition (#39661)
Ignore .devcontainer for npm (#42826)
Add a basic dev container (#42041)
Fix import fix on react or react dev (#41950)
Add error for missing await in conditionals
Update package-lock.json
Update package-lock.json
Update package-lock.json
Update package-lock.json
--inspect can no longer be used as a flag through gulp (#42701)
fix(42519): fix infer function return type quick fix with arrow functions without parens (#42532)
Refactor project references and source map tsserver tests so they are inline for easy editing (#42782)
No did-you-mean-to-call error on casts Part 2 (#42779)
No did-you-mean-to-call error on casts (#42626)
Update package-lock.json
feat(42735): add single line comments to selection ranges (#42763)
fix(42133): fix instantiated undefined type from JS initializer (#42662)
Avoid getting undefined `callSignatures`/`constructSignatures` in `getPropertyOfType`
Improve error message for overload that takes spread arguments
Refactor the tracing namespace organization
fix(42714): do not show inferFunctionReturnType QF on function body (#42737)
Update package-lock.json
Pin Node version for Volta users. (#42746)
Update package-lock.json
Bump version to 4.3. (#42728)
Handle if plugin doesnt specify name (#42717)
Revert assignability cases in getNarrowedType (#42231)
Refactor params for interface (#42652)
Allow only package names as plugin names (#42713)
Use a 10ms sampling frequency to filter tracing dumps
Re-do tracing initialization and tests around calls
Update package-lock.json
feat(42637): add generateReturn option to UserPreferences (#42642)
Add fallback error locations for nameless declarations, better class error locations (#42585)
Create synthetic `exports` symbol for commonjs `module` (#42655)
Fix Format Selection on JSDoc comments (#42411)
Signature help turns off current-parameter display for non-trailing rest parameters (#42592)
Update package-lock.json
Swapping the quote style of a string for completions should swap _all_ quotes in the string (#42650)
Use a (hopefully) more efficient regex for matching jquery in the safelist (#42653)
Replace _all_ tabs in pretty output, not just the first on each line (#42649)
Add check for no match into fs watch rename event handler (#42651)
Smarter subtype reduction in union types (#42353)
Fix completions crash on transient exported property named 'default' (#42583)
Update package-lock.json
fix(39022): wrap export references UnaryExpression to ParenthesizedExpression (#41156)
Strip nullable types from 'this' type in inference with optional chain calls (#42536)
Revert changes for template literal types, keeping tests. (#42588)
Use spaces instead of non-breaking spaces, narrow non-breaking spaces. (#42500)
Keep extended config's raw file, include, exclude relative to itself and correct it when setting extending options (#42544)
Sort import fixes by number of directory separators (#42614)
Update package-lock.json
Make object literal properties new identifier locations when not contextually typed (#42612)
Limit tuple size resulting from spread (#42448)
Update user baselines +cc @sandersn (#42420)
Update package-lock.json
fix 38503. (#39716)
Switched 'ts.performance' to a mixed mode only uses native performance APIs when necessary (#42586)
Update package-lock.json
Don’t create missing nodes for identifiers that would be valid in a newer script target (#42520)
Remove Travis CI (#42507)
Fix indentation of multiline conditional expressions (#42484)
Fix discriminant property narrowing through optional chain with null (#42503)
Fix formatter determination of initial indentation of list items after the first (#42352)
Use related spans for "implement abstract class" errors
Only skip any checks for unwrapped tuples in conditionals, rather than all nondistributive conditionals for backcompat (#42447)
Narrow QualifiedName inside typeof (#42540)
Propegate contextual types through nonnull assertion operators (#42526)
@typedef: Improve error spans from declaration emit (#42501)
Add regression test for #37314 (#42525)
Include all properties from the mapped modifier type when calculating index types for mapped types with name types (#41976)
Update package-lock.json
Only look for file exists and read file on supported locale directories that we build (#42505)
Update package-lock.json
Merge pull request #42356 from armanio123/FixJSDocFormatting
Support top level "for await of" (#37424)
fixes microsoft/TypeScript#41286 (#41294)
In bundle declaration emit, refuse to rewrite nonrelative references to files outside the common source directory (#42306)
Fix incorrectly logging ts files instead of .js files as top files (#42463)
At starts jsdoc tag only after whitespace (#42364)
Narrow via discriminant property through optional chain (#42450)
Filter out global keywords of UMD module export declarations in completion providing auto import suggestions (#42141)
WIP-semantic in session based TS (#42438)
Update package-lock.json
Update user baselines (#42451)
Fix broken user and docker tests (#42431)
Only when typings file change for the project, schedule the update for the project (#42428)
Update package-lock.json
Preserve alias information where possible when looking up union and intersection base constraints (#42430)
Update package-lock.json
Fix "Cannot find name 'global'. Did you mean 'global'?" (#42262)
Optimize import fixes for projects with many symlinks (#42150)
Update user baselines +cc @sandersn (#42366)
Filter origin types when filtering union types (#42378)
Fix start position on JSDoc parsin
Update package-lock.json
Add missing unwrap call for the inferredExtendsType (#42409)
Fixed JSDoc with only one asterisk in comment
Fix typos in comments (#42396)
Update package-lock.json
Accept merge-conflicted baseline (#42398)
Update package-lock.json
Update package-lock.json
Include alias type arguments in keys for aliased types (#42365)
Fix type parameter lookup for TypeAlias LibraryManagedAttributes (#42245)
Feat/exclude completions of variable initializers (#42087)
Update user baselines +cc @sandersn (#41496)
feat(33715): include methods of class defined in a property (#42164)
Update package-lock.json
Fix double asterisk formatting in JSDoc
fix(41405): allow using property access as reference to function (#41429)
Fix indentation for closing > of ExpressionWithTypeArguments (#42341)
fix(42259): omit merging modules with different names
fix: const enums + isolatedModules emit invalid code (#41933)
fix forEachChildRecursively (#42300)
Do not suggest paths inside node_modules/.pnpm as module specifiers (#42095)
Improve naming of hasNonBindableDynamicName (#42297)
Better detect when typical nondistributive conditionals need to be defered by unwrapping their check and extends types (#42248)
feat(31388): allow binding elements starting with an underscore (#41378)
Update package-lock.json
'in' should not operate on primitive types (#41928 + @andrewbranch) (#42288)
Support re-aliasing of type alias instantiations (#42284)
fix(42166): allow assertion signature for private identifiers (#42176)
Update package-lock.json
Update baselines.
Update LKG.
fix(42088): fix crash on unreachability condition in for statement (#42110)
Update package-lock.json
Preserve type aliases for union and intersection types (#42149)
feat(26217): Add missing member fix should work for missing function (#41215)
If import is used in the file, prefer that import specifier over calculating new one (#42224)
Try file if matched pattern specifies the extension instead of all the time (#42246)
Reverts #39277 removing bundledPackageName (#41499)
feat(14248): add returns tag to JSDoc template (#42068)
Add support for abstract constructor types (#36392)
Finish #42230 by reverting webworker too (#42250)
Do for unions of many empty-object-spreadables what we did for unions of 2 (#42233)
Make optional properties assignable to string index signatures (#41921)
Revert the DOM query changes (#42230)
Update package-lock.json
Fix array spread with sideeffects (#41523)
Adjust TS2691 message for .ts import sources (#42184)
Update package-lock.json
Cache complex union and intersection relations (#37910)
Leading and middle rest elements in tuple types (#41544)
Retain CheckFlags.Late on symbols manufactured based on Late-bound symbols (#42205)
fix(41420): forbid optional chain in extends/implements (#41481)
Fix module resolution for import call emit (#41390)
remove duplicated type -- remove TriviaKind, keep TriviaSyntaxKind. (#42108)
Fix a small typo in the issue template. (#42208)
fix(37791): fix incorrect private field access in a computed property name (#38135)
Update lib dom for 4.2 (#42067)
fix(lib/es2015): Fix definition of `ProxyHandler` (#35594)
fix(42160): omit unnecessary parentheses around assertions (#42169)
fix(42019): include the jsdoc tags from the base declaration (#42098)
Improve documentation for basic array methods (#41961)
fix(lib/es2015): Fix types of `Reflect` methods (#41987)
Add information on gulp diff to the contributing guidelines (#42031)
Update package-lock.json
Update package-lock.json
Update package-lock.json
fix: host.isKnownTypesPackageName maybe undefined (#42050)
fix(41965): fix error in definite assignment assertion context (#41989)
fix(41867): completions - omit the deprecated flag if some declarations are not deprecated (#41941)
Shrink error span on @type errors for signatures (#42024)
fix(42099): fix JSDoc optional properties declaration emit (#42116)
Fix/jsx syntax quickinfo (#42124)
fix(42034): allow convert async function with empty catch (#42123)
fix(42128): Stricter type for ES5 Intl, redefine ES2020 intl (#42134)
Update package-lock.json
Hierarchical refactorings (#41975)
Update package-lock.json
Avoid rewriting bare module specifiers on rename when fix is not verifiably correct (#41959)
fix(41259) : JS autocomplete doesn't work for object literal shorthands (#41539)
Update issue templates (#42049)
completion for return const assertion. (#41475)
fix(40806): Add missing options and possible values of DateTimeFormat (#41880)
Add missing NumberFormatPartTypes types (#42066)
Update package-lock.json
Properly make inferences from partial source type (#42038)
Update package-lock.json
Fix auto import completion inserting wrong module specifier (#41955)
Fix find-all-refs crashing in some project references scenarios (#42025)
Use getPropertiesForObjectExpression in string literal object completions (#42020)
fix(41818): use last JSDoc comment related to host (#41858)
Under jsx: preserve, actually preserve expressions which contain only comments (#41757)
Dont check computed name visibility results when the computed name representation is not in use (#41806)
Fix more inferred template literal types (#42039)
Report implicit any error for 'yield' result with no contextual type (#41348)
Use fs.realpathSync.native when available (#41292)
Fix single-line comment disrupting return w/optional chain (#42026)
Add type annotation into services so _services_ API baseline is stable post-LKG (#42028)
Simplify visitNode's 'lift' argument (#42000)
Make the configurePrerelease script OK with version having a string type annotation (#42008)
Don’t require fourslash completions tests to specify replacementSpan when it’s zero-length (#42013)
Update package-lock.json
Fix #41800 correctly. (#41895)
Allow identical type parameter lists to merge in union signatures (#31023)
Ensure factory symbol remains unused in react-jsx mode when not referenced in user code (#41905)
Fix post-LKG API baselines (#41973)
Update package-lock.json
Simplify constraint depth limiter logic (#41972)
Add text-based fastpaths into LS token matching (#41924)
fix(41822): add isJSDocSeeTag (#41835)
Generalize the fastpath for comparisons of unions which are correspondences (#41903)
Spelling correction fixes should not be case-agnostic for two equally weighed options (#39060)
fix(41868): Infer parameter from usage does not work on arrow functions that are a PropertyDeclaration of a Class (#41869)
Merge pull request #41810 from microsoft/fixDeprecations
Update package-lock.json
Simplify expression type to fix build break (#41942)
Template literal types for template literal expressions (#41891)
Make findAllReferences work on triple-slash reference paths that resolve to scripts (#41936)
Find references of a module by filename (#41805)
fix(37539): extend scope for function expressions to include JSDoc (#41364)
Update package-lock.json
Watch extended configs if present (#41493)
Detect comparisons between large unions or intersections (#41574)
Elide export assignment when it does not resolve to a value (#41904)
LEGO: Merge pull request 41908
LEGO: check in for master to temporary branch.
fix(41845): add missing values to diagnostic message related to jsx option (#41873)
LEGO: Merge pull request 41900
LEGO: check in for master to temporary branch.
Update package-lock.json
LEGO: Merge pull request 41892
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 41884
LEGO: check in for master to temporary branch.
Keep track of why files are in the program (#40011)
Adds experimental support for running TS Server in a web worker (#39656)
Loosen author tag parsing (#41820)
Reuse input nodes where possible when serializing jsdoc implements clauses (#41783)
LEGO: Merge pull request 41878
LEGO: check in for master to temporary branch.
Preserve substitution types in check position of conditional types (#41841)
fix(41827): allow infer parameters from method signature usage (#41836)
Undo #39258 (isArray changes) see overview at #41808 (#41851)
Handle output file names descripency between tsc --b and actual program emit file path calculation (#41811)
import statement from "node" in js source file could produce correct declaration path.  (#41816)
Update package-lock.json
Update package-lock.json
fix(41526): add JSDoc type annotations before parameters (#41561)
Update accept-baselines-fix-lints.yaml (#41826)
fix(41295): handle deprecated callbacks (#41310)
Improve uncalled function checks with parenthesized expressions in condition (#41748)
JSDoc declaration emit should reuse input nodes where possible when serializing typedefs (#41760)
Merge pull request #41793 from Kingwl/noPropertyAccessFromIndexSignature_fix
Update package-lock.json
Merge branch 'master' into noPropertyAccessFromIndexSignature_fix
Rename codeFixNoPropertyAccessFromIndexSignature4.ts to codeFixNoPropertyAccessFromIndexSignature5.ts
Fix non-homomorphic mapped type constraint issues (#41807)
Merge pull request #41703 from a-tarasyuk/fix/41653
Fix deprecation messages to point to correct APIs
Merge pull request #41791 from microsoft/fix40643
Allow type-only imports on ImportEqualsDeclarations (#41573)
Fix insufficiently merged baselines (#41803)
Update package-lock.json
respect quote Preference
Fix codefix for noPropertyAccessFromIndexSignature
Reuse temp variable scope for converted loop body
Fix import tracker for dynamic import (#41473)
Read the base construct signature from the static base type, not the instance base (#41767)
Remove incorrect assert that triggers crash on completions of globalThis (#40278)
Update package-lock.json
Merge pull request #41543 from a-tarasyuk/fix/41534
Merge pull request #37283 from JoshuaKGoldberg/extends-constructor-typeerror
Used String on base class per suggestion
...except for the small master merge slipups
Merge branch 'master'
Allow qualified name for convert namespace import (#41592)
Add missing BinaryExpression source side cases to isMatchingReference (#41765)
Check nested conditional types for non-distributiveness in mapped types with 'as' clauses (#41713)
Propagate wildcard types in non-homomorphic mapped types (#41622)
Fix typos (#41723)
addImplementationSuccessElaboration admits declarations with no symbol (#41758)
Update package-lock.json
fix(41736): tsserver should not crash if external file does not exist (#41737)
Fix typos in comments (#41307)
Produce source maps for local typescriptServices build (#41589)
Improve uncalled function checks (#41599)
fix(41621): fixUnusedIdentifier - allow deleting prefix/postfix unary operators (#41624)
fix(41688): completions with infer keyword (#41704)
Update package-lock.json
fix(41653): convert arrow function to function expression that used as destructure initializer
Fix getTypeFacts for pattern template literal types (#41693)
Update package-lock.json
Properly cache types for shared control flow nodes (#41665)
replace whole path if directory separator appears for import completion. (#41412)
fix(41216): update baseline (#41687)
Remove obsolete go-to-definition code after CommonJS alias changes (#41522)
LEGO: Merge pull request 41678
LEGO: check in for master to temporary branch.
feat(41216): show JSDoc for aliases (#41452)
Trace checkDeferredNode to cover JSX elements (#41572)
Use stricter types for tracing event arguments (#41217)
fix(41194): ignore jsxFrag identifier in import declarations (#41441)
LEGO: Merge pull request 41673
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 41670
LEGO: check in for master to temporary branch.
Add a comment to clarify the #private field (#41547)
fix(41240): allow emitting numeric with underscored separators as-is in esnext target (#41435)
LEGO: Merge pull request 41661
LEGO: check in for master to temporary branch.
Fix show deprecated suggestion for alias (#41128)
Pass throwIfNoEntry to fs.statSync (#41604)
Update package-lock.json
Remove-unused-identifiers codefix skips assigned identifiers (#41168)
Add an action to update baselines/fix lints (#39898)
Split line and node counts by file extension (#39720)
fix(41534): fix children circular references
Update package-lock.json
Update JSX test errors (#41602)
Do not parse template arguments in JavaScript files. (#36673)
If there are no open files, do not schedule ensureProjectForOpenFiles (#41537)
fix(41227): change message about incorrect property access with possible replacement with static access (#41275)
Unused Identifier codefix better understands constructors and methods (#41555)
Update package-lock.json
Fix/jsx global preferred over config implicit (#41476)
fix(41492): make more friendly handling the missing call function in binary expressions (#41502)
Add tracing support to tsserver (#41374)
Update package-lock.json
Update package-lock.json
Update package-lock.json
Merge pull request #41507 from microsoft/fix32890
Fix definition of ts.Iterator
Merge pull request #41506 from weswigham/fix-post-LK-build
Fix post-LKG build
Actually install playwright in artifact build script
Merge pull request #41498 from amcasey/RemoveBeginEnd
Remove redundant type annotation
Merge pull request #41467 from weswigham/fix-incremental-jsx-crash
Update link to TypeScript-Handbook (#41460)
Comment position feedback
Merge branch 'master' into fix-incremental-jsx-crash
Fold tracing.begin and end into push and pop
Proposal: importModuleSpecifierPreference: project-relative (#40637)
Update user baselines +cc @sandersn (#41423)
dispose Mocha Runner after use to avoid MaxlistenersExceededWarning (#41403)
Update package-lock.json
LEGO: Merge pull request 41488
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 41485
LEGO: check in for master to temporary branch.
Add missed resolveSymbol in commonjs import resolution (#41479)
LEGO: Merge pull request 41480
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 41474
LEGO: check in for master to temporary branch.
Update package-lock.json
LEGO: Merge pull request 41471
LEGO: check in for master to temporary branch.
Add more team members to pr_owners.txt (#41416)
Fix crash on attempting to suggest a ts import for a synthetic js resolution
Revert "Revert "feat(40197): handle uncalled function checks in binary expressions (#40260)"" (#41462)
LEGO: Merge pull request 41436
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 41432
LEGO: check in for master to temporary branch.
String literal rename support (#39298)
LEGO: Merge pull request 41430
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 41427
LEGO: check in for master to temporary branch.
Update user baselines +cc @sandersn (#41195)
LEGO: Merge pull request 41419
LEGO: check in for master to temporary branch.
fix(40469): suggest QF convert 'Convert to named function' to function expressions (#40476)
fix(40610): handle template string concatenation (#40653)
fix(40632): skip emitting abstract members (#40699)
Add way to exclude files and directories to watch (#39243)
Update package-lock.json
feat(40750): add refactoring to infer a return type annotation to a function (#41052)
LEGO: Merge pull request 41393
LEGO: check in for master to temporary branch.
Dont look for properties of Object and Function type when looking to resolve named import from module with `export=` (#37964)
LEGO: Merge pull request 41384
LEGO: check in for master to temporary branch.
Fix Markdown spec link (#41375)
Bump 4.2 (#41377)
Update package-lock.json
LEGO: Merge pull request 41376
LEGO: check in for master to temporary branch.
fix(39858): generate valid async/await code for imported functions (#40154)
LEGO: Merge pull request 41373
LEGO: check in for master to temporary branch.
fix(40042): add modifiers in correct position for decorated methods (#40050)
fix(41078): add element access expressions support in convertFunctionToEs6Class (#41089)
Support xml namespace prefix for JSX elements and attributes (#37421)
fix(40257): fix type parameters range (#40265)
Add support for pedantic property access (#40171)
fix(38283): fix incorrect parsing of static modifier (#41127)
Add index signature for anonymous object literal type (#37903)
fix(40901): skip checking custom arguments name in a constructor (#40912)
Rename 'compat' to 'deprecatedCompat'. (#41000)
fix(35779): emit comments after trailing comma (#37887)
Separate delete-all-imports from other delete-all (#41105)
Merge pull request #41226 from a-tarasyuk/feat/eslint
feat(eslint): upgrade typescript-eslint/eslint
Update package-lock.json
Fix incremental emit issue where dependency relations implied by synthesized imports would not be detected (#41346)
Update package-lock.json
Update package-lock.json
Merge pull request #41330 from weswigham/jsx-import-source-as-auto-import
Update src/compiler/program.ts
Use same metho as importHelpers to add synthetic import
Add mroe incremental-affecting affixes to compiler options, add incremental test for changing jsxImportSource
Add affectsModuleResolution: true ot jsx and jsxImportSource options
Merge pull request #40985 from weswigham/static-decl-ref
Merge pull request #41331 from microsoft/fix39149
LEGO: Merge pull request 41335
LEGO: check in for master to temporary branch.
Update package-lock.json
Fix double alias of complex export/import/default/namespace combination
Merge pull request #41094 from microsoft/destructuringEvaluationOrder
fix(40671): suggest ConvertStringToTemplateLiteral refactoring for string with property/element acceses elements (#40942)
Auto-include types for the jsx import source in the new jsx transforms
Update control flow for nested binary exprs
noop in setTypeAcquisiton for undefined (#41291)
Update style
Fix missing file name of extended source file in synchronizeProjectList when it is missing on disk (#41222)
Log AutoImportProvider creation time (#41315)
Update package-lock.json
Merge pull request #41314 from weswigham/fix-global-jsx-ns-alias-crashes
Update control flow for correct destructuring evaluation order
Merge pull request #41312 from weswigham/maybe-bind-comma-lhs
Fix crashes when the global JSX namespace is an alias
Bind comma expression LHS call expressions
Merge pull request #41287 from weswigham/bind-exports-assigned-object-as-alias
Don't relate unmatched parameter positions in signatures (#41308)
fix(41208): add insertSpaceAfterOpeningAndBeforeClosingEmptyBraces to tsserver protocol (#41304)
When creating synthetic default symbol set parent as module symbol (#41282)
Update package-lock.json
Merge pull request #41075 from uhyo/fix-36958
feat(41249): allow import.meta with module: es2020 (#41274)
LEGO: Merge pull request 41290
LEGO: check in for master to temporary branch.
Fixup other fourslash test
Remove string literals from unions with matching template literals (#41276)
Bind `module.export = {Thing}` with alias symbols
Fix two issues with ConvertToTypeOnlyExport codefix (#40490)
fix(41244): ignore synthesized imports (#41267)
Merge pull request #41191 from weswigham/control-flow-comma-exprs
Merge pull request #41257 from weswigham/jsdoc-declaration-emit-names
LEGO: Merge pull request 41278
LEGO: check in for master to temporary branch.
Don't cache Ternary.Maybe results when recursion is encountered during variance measurement (#41218)
fix(40994): change type for optional properties (#41011)
LEGO: Merge pull request 41272
LEGO: check in for master to temporary branch.
Update package-lock.json
Merge pull request #41261 from amcasey/TracingPerf
Stop doing tracing work when tracing is disabled
LEGO: Merge pull request 41260
LEGO: check in for master to temporary branch.
Limit binding element visibility painting to those biding elements which are declarations of aliases
Fix visibility lookup for cjs require aliases
Merge pull request #41253 from microsoft/nativePerformanceHooks2
Fix dependency order and observer registration
Make 'getIndentString' just use a loop. (#41221)
LEGO: Merge pull request 41251
LEGO: check in for master to temporary branch.
Update package-lock.json
Update package-lock.json
Merge pull request #40593 from microsoft/nativePerformanceHooks
PR feedback
Don't emit duplicate triple-slash directives when using API to print a .d.ts (#40968)
Remove --skipPercent reference from README
Merge pull request #41180 from amcasey/ProgramTracing
fix(41176): Missing Compiler API predicate function: isTemplateLiteralTypeNode (#41177)
Merge pull request #41190 from weswigham/handle-binding-element-aliases
Update package-lock.json
Fix some rest cases and handling of unused results
Merge branch 'master' into destructuringEvaluationOrder
Style feedback
Remove shims, workaround for bug in peformance.measure
Support partial reverse mapped inferences with tuple types (#41106)
Adopt push-pop API
Add tracepoint in resolveTypeReferenceDirectiveNamesWorker
Add tracepoints within createProgram
Update package-lock.json
Update user baselines +cc @sandersn (#40950)
New error format (#40974)
Tracing work
Track control flow for comma expressions in call expressions
Don't reduce 'keyof M' for mapped types with non-distributive 'as' clauses (#41186)
Handle the new js binding element alias symbols in JS declaration emit
Update package-lock.json
Percent-encode source map URLs (#41102)
Update package-lock.json
Merge pull request #41151 from Andarist/fix/create-element-new-jsx-transform
Merge branch 'master' into fix/create-element-new-jsx-transform
Merge pull request #41166 from weswigham/empty-jsx-child
Accept updated baselines
Merge branch 'master' into empty-jsx-child
Merge pull request #41167 from weswigham/revert-extension-implicit-import
Accept updated baselines
Revert "Add extensions to jsx automatically added import, per babel change (#40871)"
Do not consider empty jsx expressions semantically important children
Properly reduce intersections of string literal and template literal types (#41162)
Optimizes project loading in few scenarios (#41126)
Add editor configurable filename-based ATA (#40952)
Move anonymous type instantiation cache from AST node to root type (#41084)
Update package-lock.json
Add auto-import for createElement when using the new JSX transform
Add tests related to the key prop when using new JSX transform
Update package-lock.json
Simplify tests for enablement in mark/measure, remove onProfilerEvent
Add unit tests for PerformanceHooks shim
Write message instead of crashing when native perf API not found.
Migrate 'ts.performance' to use native performance hooks when available
`performanceTimestamp`: use `performance.now` on node
fix: IOSession access this before calling super (#40645)
Update package-lock.json
Merge pull request #41070 from weswigham/use-minimal-endings-in-bundled-declaration-emit
`transformGenerators`: handle `CommaListExpression`
LEGO: Merge pull request 41095
LEGO: check in for master to temporary branch.
Fix destructuring evaluation order for initializers
LEGO: Merge pull request 41093
LEGO: check in for master to temporary branch.
Merge pull request #40597 from weswigham/allow-instanceof-array-to-narrow-readonly-array
LEGO: Merge pull request 41082
LEGO: check in for master to temporary branch.
fix(29881): infer quote preference for property access conversion in completions (#41041)
LEGO: Merge pull request 41077
LEGO: check in for master to temporary branch.
allow type narrowing with NonNullExpression
Use minimal endings when generating declarations for js
Fix auto imports for export default edge cases (#41068)
Merge pull request #40778 from weswigham/spread-compact-literals
Fix baselines now that dupe test is gone
Delete duplicate test
Merge branch 'master' into spread-compact-literals
Fix crash resolving ImportTypeNode in JSDoc (#40838)
fix: show deprecated error for alias (#40961)
Update package-lock.json
Update package-lock.json
Update package-lock.json
Handle noEmit and noEmitOnError with SemanticDiagnosticsBuilder (#40880)
Fix relative paths in commonjs decl emit w/property access (#40986)
Merge pull request #41017 from weswigham/fix-unchecked-cast-crash
Structure is reused should be on new program instead of old program (#41005)
Handle extra file extensions when wild card directory watch is invoked (#41018)
Fix overlapping changes when un-qualifying import use site within transformed export (#40987)
Fix crash due to unchecked cast in addImplementationSuccessElaboration
Update package-lock.json
Merge pull request #41001 from weswigham/overload-impl-elab
Fix lint
Small baseline change - find() will get the first declaration with a body
PR feedback
Rename variable
Add elaboration when call fails all overloads but succeeds against the implementation signature
fix(3758): show completion for object literals in an assignment pattern (#40976)
LEGO: Merge pull request 40988
LEGO: check in for master to temporary branch.
Revert "feat(40197): handle uncalled function checks in binary expressions (#40260)"
feat(40197): handle uncalled function checks in binary expressions (#40260)
Fix export binding of namespaced typedefs (#40980)
Merge pull request #40953 from weswigham/improve-completions-large-literal-perf
Add comment
Adjust typeof import name lookup to better match type query lookup
LEGO: Merge pull request 40984
LEGO: check in for master to temporary branch.
Fix missed tasks to add esnext.weakref (#40981)
Add isDeeplyNestedType logic to getResolvedBaseConstraint (#40971)
LEGO: Merge pull request 40975
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 40972
LEGO: check in for master to temporary branch.
Add currency sign to NumberFormatOptions type (#40709)
Don't emit duplicate triple-slash directives when using API to print a .d.ts
Test indexed access to `this` on intersections (#40967)
Merge pull request #40576 from weswigham/add-pyright
Use suggested command, add now-fixed log
Add pyright user test
Rephrase to use binarySearchKey
Fixes calculating resolved project reference to redirect for module resolution (#40954)
LEGO: Merge pull request 40965
LEGO: check in for master to temporary branch.
fix(40817): suggest import for default exported alias (#40845)
Use npm ci for nightly builds (#40905)
Add definitions for WeakRef and FinalizationRegistry (#38232)
lib: remove `length` field from SharedArrayBuffer (#40858)
fix: change deprecated FunctionLike type to SignatureDeclaration (#40795)
fix(40685): fix generating docs for arrow functions (#40728)
Update package-lock.json
LEGO: Merge pull request 40958
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 40956
LEGO: check in for master to temporary branch.
fix(40929) PromiseConstructor error message for newer versions of ECMAScript (#40931)
Improve the performance of requesting completions within a massive array literal
Fix class expression from being assignable if types don't match (#40660)
Merge pull request #40886 from weswigham/error-on-anonymous-type-with-nonlocal-unique-symbol
Skip past `module.exports = { Foo }` in go-to-defintion on 'Foo' (#40835)
Use other files when necessary to determine import style in JS (#40879)
Handles creating a reasonable AST when destructuring into a parens'd expresssion (#40115)
LEGO: Merge pull request 40948
LEGO: check in for master to temporary branch.
Update user baselines +cc @sandersn (#40918)
Update package-lock.json
LEGO: Merge pull request 40924
LEGO: check in for master to temporary branch.
fix(40320): Better errors when using properties/methods from newer versions of ECMAScript (#40650)
Update user baselines +cc @sandersn (#40748)
#40763 Fixed: Bad error message when forgetting a comma in an array of templ… (#40907)
Do not create packagejson imports and auto import provider in partial semantic server mode (#40890)
Remove unnecessary requirement for createHash since we already handle absence of it (#40891)
Properly compare path prefixes when generating module paths (#40885)
Fix function merged with export as namespace sourcefile (#40908)
Fix recursive types in @typedef (#40861)
Updated error message for TS1031 (#40889)
Limit when we allow nested unique symbols to be serialized to when their declaration is within the same file as the context
Properly compare path prefixes when generating module paths
Limit export= js declaration emit to only json source files (#40882)
Ensure whitespace jsx elements are not counted when determining if a jsx child is the only child (#40839)
Fix noUncheckedIndexedAccess with tuple rest types and generic index types (#40681)
Propagate wildcard types in template literal type construction (#40875)
Emit non-identifier enum member references as typeof parent[some name] (#40679)
Add extensions to jsx automatically added import, per babel change (#40871)
Fix typo in JSON.stringify doc (#40735)
Properly distribute over unions in keyof for mapped types with as clause (#40837)
Merge pull request #40755 from amcasey/SpreadLimit
Remove duplicate comment (#40667)
Use correct program when checking for reexports from AutoImportProviderProject (#40843)
Fix default property assigned prototype (#40836)
fix(40441): show deprecated error for deprecated property in namespace (#40605)
Match suffix _after_ prefix when inferring literals out of templates (#40841)
Install playwright on demand (#40722)
Merge pull request #40783 from armanio123/FixCommentOnStartLine
fix(40609): add tests to cover TemplateLiteralType extraction (#40834)
Update type diagnostic messages with --save-dev (#40776) (#40784)
fix(40609): fix crash for extracting type  alias with several type arguments (#40820)
LEGO: Merge pull request 40822
LEGO: check in for master to temporary branch.
Don’t offer non-relative non-paths path when baseUrl is undefined (#40813)
LEGO: Merge pull request 40814
LEGO: check in for master to temporary branch.
Update package-lock.json
LEGO: Merge pull request 40794
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 40790
LEGO: check in for master to temporary branch.
Update package-lock.json
LEGO: Merge pull request 40785
LEGO: check in for master to temporary branch.
Fixed bug with toggleLineComment ends in a start line
Use the existing checkCrossProductUnion helper
fix(40756): disable truncation for inferred type (#40764)
feat(40233): add JS Doc types to smart selection (#40338)
jsx option affects emit (#40775)
Accept updated baseline
Add test
Revert 7181c2af
LEGO: Merge pull request 40777
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 40757
LEGO: check in for master to temporary branch.
Enforce a size limit in getSpreadType
CommonJS imports support destructuring+property access (#40702)
feat: expose findAncestor. (#40325)
Remove old Typescript-*-Starter user tests (#40752)
Fix unnecessary new lines in output represented incorretly in the baseline (#40751)
Add missing visitor of template literal type (#40738)
Fix premature closing of AutoImportProviderProject for unbuilt monorepos (#40620)
Update user baselines +cc @sandersn (#40156)
Fix spec links in README (#40711)
Allow pattern literal types like `http://${string}` to exist and be reasoned about (#40598)
Allow discrimination to identical object types when discriminating contextual types (#40574)
Fix crash on js declaration emit of export assigned default augmented function (#40596)
Reorder LKG tasks so protocol build isn't using partial LKG (#40717)
Fix missing constraints for parenthesized `infer T` (#40406)
Allow an infer type node to resolve its own name (#40483)
fix(40510): add element access expressions support in convertToOptionalChainExpression (#40524)
Fix indentation of arrow functions returning parenthesized expressions (#40677)
LEGO: Merge pull request 40712
LEGO: check in for master to temporary branch.
Const contexts for template literals (#40707)
fix(39589): add await before return promise expression (#39649)
LEGO: Merge pull request 40705
LEGO: check in for master to temporary branch.
Update package-lock.json
LEGO: Merge pull request 40690
LEGO: check in for master to temporary branch.
fix(40640) add missing notApplicableReason in protocol (#40680)
LEGO: Merge pull request 40686
LEGO: check in for master to temporary branch.
feat(40674): make error messages more consistent (#40675)
feat(40663/40664): improve error messages for assignment assertions '!' (#40669)
LEGO: Merge pull request 40672
LEGO: check in for master to temporary branch.
Intrinsic string types (#40580)
Support properties of mapped types in assertion control flow analysis (#40482)
Fix typo in isChangedSignagure (#40668)
Properly preserve modifiers in homomorphic mapped types with 'as' clauses (#40633)
LEGO: Merge pull request 40641
LEGO: check in for master to temporary branch.
Fix children prop for `react-jsx` and `react-jsxdev` (#40630)
fix(39899): include in NavigationBar default exported call expression arguments (#40412)
Update package-lock.json
Fix iterable contextual type (#40592)
fix(40432): show as keyword in function context (#40481)
Update package-lock.json
Fix missing renamed compiler flags (#40606)
Handle the mapping between Array and ReadonlyArray in isTypeDerivedFrom
Update package-lock.json
LEGO: Merge pull request 40579
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 40573
LEGO: check in for master to temporary branch.
Update package-lock.json
LEGO: Merge pull request 40566
LEGO: check in for master to temporary branch.
Use unexpanded parameter list in serialization when the expanded list has a non-trailing variadic position (#40556)
Pull all history in branch sync script
Add quick fix to add 'void' to Promise resolved without value (#40558)
LEGO: Merge pull request 40563
LEGO: check in for master to temporary branch.
Support auto-import from paths alias without baseUrl (#40546)
Fix error on duplicate commonjs exports (#40545)
copy prologue directives to new file (#40306)
Issue a diagnostic when the node builder performs truncation despite the `NoTruncation` flag being set (#40477)
LEGO: Merge pull request 40547
LEGO: check in for master to temporary branch.
Fix incorrect name of index signature flag in implementation (#40541)
LEGO: Merge pull request 40537
LEGO: check in for master to temporary branch.
Update package-lock.json
LEGO: Merge pull request 40535
LEGO: check in for master to temporary branch.
Remove technically unnecessary 'module' option from 'harness' config. (#40526)
Consistent inferences when inferring to template literal type (#40518)
Update package-lock.json
Merge pull request #40095 from rhillefeld/master
Support element access aliases: exports["x"] = x (#40514)
Properly check types in template literal placeholders (#40498)
Don't crash when observing invalid 'export' in object literal (#40295)
Simplifying padLeft() to only allow spaces or zeros for padding. Updated padRight() to mirror padLeft() but without the option to use zeros since that would be an unlikely use case.
feat(14751): show static members at the top of the list for a class like completion (#40428)
--noUncheckedIndexedAccess (#39560)
Allow 'paths' without 'baseUrl' (#40101)
Updates Dom lib with TSJS changes, adding a new library for webworker iterable (#40500)
Import the semantic highlighter from typescript-vscode-sh-plugin (#39119)
Add emit support for jsx/jsxs experimental jsx runtime api (#39199)
A union including non-iterable types is not iterable (#40350)
Add lib es2020.sharedmemory (#39541)
Merge branch 'master' of https://github.com/microsoft/TypeScript
Modified existing padLeft() and padRight() functions to support strings other than a single space as padding. Used this new functionality to zero-pad the timestamp created by nowString().
Replaces the default module index resolver with '/index' instead of '' when handling internal routing for dts bundles (#39277)
Update package-lock.json
Change baseline name to avoid case-only conflict
Use ad-hoc code for nested destructuring in require (#40188)
Merge pull request #40063 from amcasey/ChromeTracing
Retains trailing cmments in a logical manner in extract type (#40245)
Alias for `module.exports.x = x` (#40228)
LEGO: Merge pull request 40480
LEGO: check in for master to temporary branch.
Fix JS declaration emit for acessors in a class/interface merge (#40456)
Fix see tag quickinfo (#40458)
LEGO: Merge pull request 40475
LEGO: check in for master to temporary branch.
Update package-lock.json
Template literal types and mapped type 'as' clauses (#40336)
fix(40322): bad completions for string literal type as indexed access type object (#40424)
Add see tag support (#39760)
fix(39676): skip removing unused parameters for functions used as callback references (#40299)
Update package-lock.json
feat(25770): add Quick Fix to convert LiteralType to MappedType (#40226)
fix(40150): use parameter name for a Promise callback function (#40191)
fix(40222): fix crash on using destructuring in a catch clause (#40240)
Remove assignability cases in getNarrowedType + an isArray improvement for readonly arrays  (#39258)
Remove trailing space from Gulpfile.js comment (#40199)
LEGO: Merge pull request 40437
LEGO: check in for master to temporary branch.
Add errors when providing type arguments for intrinsic JSX tags (#40293)
Consistently error when rest element isn't last in tuple type (#40254)
Remove Language specification link from README (#40407)
Add full stops in diagnostic messages (#40165)
Allow private symbols to be control flow narrowed (#39978)
Add DockerFile for ChromeDevTools (#39624)
Accept baseline from test added since merged PR was made
Better support class instances assigned to the module object for JS declarations (#40037)
fix(28516): forbid using async modifier with the abstract modifier (#39963)
Add optionalReplacementSpan to completions response (#40347)
fix(26141): show completions for string parenthesized types (#39697)
Add CodeQL security scanning (#38939)
Fixes stack overflow when exporting a lot in commonjs (#38994)
fix(lib/es2015): Remove `Reflect.enumerate(…)` (#38967)
Mark spec files as archived (#40373)
Remove optionality for Promise resolve callback (#39817)
Reprioritize cross-project module specifier suggestions for auto-import (#40253)
fix(31126): show completions in nested namespace name (#39663)
Add support for vscode-js-debug's customDescriptionGenerators (#40308)
fix(39410): don't remove variables with type definition during converting named export to default (#39505)
include stdout in `runSequence` thrown error
Unignore the package-lock.json in the root Dockerignore, fixing docker suite tests
Fix call hierarchy item serialization and server tests (#40348)
Correct bottoming-out tracing for recursiveTypeRelatedTo
Checkjs implies allowjs (#40275)
Fix crash intersecting dynamic import w/esModuleInterop (#40249)
Nested assignment to a require alias isn't a declaration (#40186)
LEGO: Merge pull request 40339
LEGO: check in for master to temporary branch.
Fix extract symbol crash on unterminated literals; don’t offer to extract `export = ...` (#40272)
Add missing description to CONTRIBUTING.md (#40329)
Fix misplaced comma in auto imported specifier (#40273)
Update package-lock.json
LEGO: Merge pull request 40318
LEGO: check in for master to temporary branch.
feat(part of 40169): add spelling suggestion/quick fix for module/namespace exported members (#40211)
Update package-lock.json
Add instantaneous events when depth limits are hit
Treat trailing 'void' as optional for assignability (#40231)
Use a correct Object.entries polyfill (#40268)
Update package-lock.json
fix(40010): add outlining for comments before variables statements (#40016)
LEGO: Merge pull request 40289
LEGO: check in for master to temporary branch.
Specified error diagnostic for invalid variable names (#40105)
Disable diagnostic consistency checking for large tests (#40280)
Update package-lock.json
LEGO: Merge pull request 40282
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 40277
LEGO: check in for master to temporary branch.
Fix `getContextualTypeForBindingElement` for arrays
LEGO: Merge pull request 40271
LEGO: check in for master to temporary branch.
Update package-lock.json
LEGO: Merge pull request 40255
LEGO: check in for master to temporary branch.
don't emit "unused @ts-expect-error" in unchecked js files (#40046)
Merge pull request #40244 from amcasey/EmptyCommit
Swallow empty-commit error
Update CONTRIBUTING.md for code contributors (#40230)
LEGO: Merge pull request 40236
LEGO: check in for master to temporary branch.
Fix commonjs require of ES export (#40221)
Update package-lock.json
Update package-lock.json
fix(31046): add new diagnostic message for incompatible constructor signature (#40073)
Record the recursion ID of each type, if available
Trace structuredTypeRelatedTo, rather than recursiveTypeRelatedTo
Revert System changes and consume fs directly
Trace key operations
fix(25770): add diagnostic message for the possible mapped type used as an index (#39973)
fix(26325): use a unique name for reserved words in 'constructor like' function name (#39684)
Fix typo in (Readonly)Set.keys comment (fixes #40164) (#40176)
Add compactDisplay and signDisplay to NumberFormatOptions (#40039)
Update package-lock.json
Merge pull request #40161 from amcasey/NoNpmUpdate
Delete extra npm update
Merge pull request #40146 from amcasey/PackageLock
Add missing contextual type to static PropertyDeclarations
Allow trailing params of 'undefined', 'unknown', and 'any' to be optional in non-strictNullChecks JS (#40057)
Revamp dockerfile for office-ui-fabric to reduce noise (#40147)
Update user baselines +cc @sandersn (#39881)
Typescript Language Specification amended (#40120)
Update bot email address
Git ignore package-lock.json and forcibly update in workflow
Add a workflow to update package-lock.json daily
Adopt package-lock.json and npm ci
Optimize external source maps without full cache (#40130)
Fixes crash on chained property access on require (#40135)
Fix tuple name homogeneity check (#40118)
Revert "Optimize source mapping into external source map sources (#40055)" (#40126)
Add missing properties to stdlib (#38678)
LEGO: Merge pull request 40127
LEGO: check in for master to temporary branch.
Optimize source mapping into external source map sources (#40055)
LEGO: Merge pull request 40119
LEGO: check in for master to temporary branch.
Merge pull request #40043 from gluxon/uvException-hotspot
Ping @sandersn on new user baseline commits (#40117)
Add unit tests for VersionRange (#40114)
The falsy part of any/unknown is any/unknown (#39529)
LEGO: Merge pull request 40112
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 40108
LEGO: check in for master to temporary branch.
fix(10019): allow renaming labels (#40064)
Fix lack of error on default export of nonexistant name (#40094)
LEGO: Merge pull request 40099
LEGO: check in for master to temporary branch.
Alias for commonjs require in JS (#39770)
Revert "Add '(approximate)' to the beginning of quick info requests in PartialSemantic mode (#40061)" (#40072)
Recursive conditional types (#40002)
Add '(approximate)' to the beginning of quick info requests in PartialSemantic mode (#40061)
Added zero-padding to timestamp output
Set stackTraceLimit to 0 in fileSystemEntryExists
Ensure file, include and exclude specs used are strings  (#40041)
fix jsx completions after attributes (#39859)
fix(15230): change the diagnostic message about a non-module file in an --isolatedModules project (#40032)
Small branch sync script change
feat(40004): make isNamedTupleMember public (#40005)
Revert to including only open files in partial semantic server mode (#40026)
Avoid the double-symbol trick for enums
fix(13503): fix crash on calling getTypeAtLocation with the SourceFile nodes (#39994)
No this-property assignments in TS (#40009)
Improve deprecated suggestion node position (#39702)
fix export * as default syntax (#39803)
Bind alias ThisProperty assignment declarations (#39908)
Export anonymous functions in 2 steps, declare as variable and then assign to exports. (#39820)
Use isUncalledFunctionReference for aliases too (#39950)
Update CI node versions (#39940)
Insert auto imports after header comment (#39924)
Add missing 'importName' for private field helpers (#39932)
Handle empty package.json files (#39937)
LEGO: Merge pull request 39927
LEGO: check in for master to temporary branch.
Renames in servermode per feedback (#39883)
Find tagless JSDoc as preceding token (#39912)
LEGO: Merge pull request 39921
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 39917
LEGO: check in for master to temporary branch.
Merge pull request #37891 from Neonit/jsDocIndentationPreservation
LEGO: Merge pull request 39913
LEGO: check in for master to temporary branch.
Handle the fact that noResolveResolution resolution is reused (#39889)
LEGO: Merge pull request 39904
LEGO: check in for master to temporary branch.
Rename and use the default ref instead of having a `workflow_dispatch` option
Add an 'Update LKG' action (#39897)
Bump version to 4.1. (#39894)
LEGO: Merge pull request 39896
LEGO: check in for master to temporary branch.
Merge pull request #39892 from microsoft/make-uint8-constructor-backward-compatible
LEGO: Merge pull request 39891
LEGO: check in for master to temporary branch.
Make numeric Array constructors take ArrayLikeBuffer union
Update user baselines (#39857)
LEGO: Merge pull request 39880
LEGO: check in for master to temporary branch.
Update user baselines
LEGO: Merge pull request 39868
LEGO: check in for master to temporary branch.
Add separate flag serverMode for server mode (#39735)
Limit auto import provider project size (#39855)
In JS declaration emit, move imports painted in nested contexts to the root private context (#39818)
Update user baselines (#39502)
Redo in narrowing for intersections (#39637)
Merge pull request #39824 from microsoft/fix35484
The iteration type of overloaded iterator signatures derives from the intersection of their return types (#39722)
PR Feedback
Fix formatting scanner on JSX text that looks like trivia (#39718)
Issue35876: Give better error message when Classic Module Resolution with incorrect path (#38105)
Make `getLocalSymbolForExportDefault` look harder for an export
Updates Uint8ArrayConstructor to match MDN documentation. (#38449)
Restore reference change
Temporary revert to compare user test baselines
fix(39245): change related diagnostic for missing rest parameter arguments (#39356)
Allow assignments to a narrowable reference to be considered narrowable
Fix this-parameter emit for JSDocFunction types (#39814)
Fix location for duplicate function implementation errors
Make @enum,@this tag construction stricter (#39791)
Add diagnostic info to getNameForExportedSymbol crash (#39790)
Merge pull request #39776 from amcasey/OverloadErrors
Undo accidental change from #39772 (#39779)
Add contextual type for generator return type (#39772)
Merge pull request #39774 from amcasey/Mocha
Move off deprecated mocha types
Reduce unnecessary error computation
Handle unresolved baseType when trying to get completions for static member (#39731)
Lower priority for speculative variadic tuple inferences (#39723)
Fixes slow nav to issue by keeping project with result. (#39721)
Use new octokit API method in review request script (#39719)
LEGO: Merge pull request 39706
LEGO: check in for master to temporary branch.
Make AutoImportProviderProject work with symlinked monorepos (#39679)
Add a fastpath for comparing common mapped types like Pick which avoids manufacturing intermediate type identities (#39696)
Fix emit/formatting issues in refactors (#39506)
Fix 38219: signature helper works for optional function condition. (#39672)
Fix 31995: make cached key more precise to avoid returning wrong cached value. (#39670)
not escape unicode char for import path string. (#39463)
Support loading of child project if found project is not pure solution has some of its own files and project references (#39613)
Add disableReferencedProjectLoad to stop loading child projects to allow users to disable loading large solutions (#39593)
switch typeof any could be checked for unreachable (#39389)
fix 39453 (#39579)
LEGO: Merge pull request 39682
LEGO: check in for master to temporary branch.
Consistent errors on circular base types (#39675)
Properly preserve numeric string named properties in declaration files (#39658)
Triple slash references must resolve against the resolved file name (.d.ts and not original source file) since they are rewritten in the .d.ts emit (#39645)
tests(39373): add addition tests (#39631)
Adds latest version of TypeScript to the repro code (#39641)
Explicitly add dependency on node to compiler tsconfig, remove es6+ string method usage (#39636)
Minor fixes to consmetic build issues in user test PR script
fix(39373): add diagnostic message about using a private name for class declarations without name (#39567)
Add twoslash repros to the compiler (#39628)
Resolve only relative references in open files on syntax server (#39476)
fix(39515): fix getting a position for an element before the line break CRLF/LF on the line that contains 'after' element (#39554)
fix(38868): add separator for type parameters (#39621)
Support variadic tuple inference from trailing optional to non-optional (#39614)
Better error message for unparenthesized function/constructor type notation in union/intersection types (#39570)
Do not resolve require calls in typescript files even if it contains dynamic import (#39617)
Flag mapped types with circular property types and do not attempt to print them structurally (#39552)
Use combined node flags (#39403)
Fix incorrect deprecated mark (#39611)
Don’t give all instantiated signatures in JS strict arity (#39606)
Use jsxFragmentFactory entity name for factory name lookup from checking fragments (#39475)
fix(33511): show jsx namespace default import quick fix if it does not exists in the current scope (#38419)
Fix tsc --watch crash on module augmentations when module resolution changes (#39604)
Load ETW module from a specified path (#39599)
Add refactor convertToOptionalChainExpression (#39135)
Merge pull request #37029 from armanio123/AddToggleCommentFeature
Fix find-all-references on undefined (#39591)
Merge remote-tracking branch 'upstream/master' into AddToggleCommentFeature
Merge pull request #39490 from microsoft/fix37113
Merge branch 'master' into fix37113
Merge pull request #39264 from microsoft/migrateMapsAndSets
Fix typo (#39562)
Don’t create expando declarations on alias symbols (#39558)
Fix typo (#39585)
fix(types/mocha): change deprecated Mocha types (#39573)
PR comments and minor bugs
Merge pull request #39537 from microsoft/fix/helpers/use-hasownproperty-call
Add ClassExpression, FunctionExpression and ArrowFunction to check for cancellation token from classifier (#39557)
Handle typeAcquisition could be undefined (#39551)
Remove object literal freshness in control flow based array types (#39518)
CI: Use checkout@v2 (#38822)
Fix @param type parameter lookup (#39532)
Fixed syntax error
Merge remote-tracking branch 'upstream/master' into AddToggleCommentFeature
Fixed baseline
PR comments
Revert "Removed public commands"
Merge branch 'master' into fix/helpers/use-hasownproperty-call
Fixes searches for export * as 'identifier' (#39533)
Fix default import/export helper usage
fix static method reference non-static (#38730)
Fix39458 (#39508)
fix(39524): convert access property suggestion to string (#39527)
Insert auto-imports in sorted order (#39394)
LEGO: Merge pull request 39510
LEGO: check in for master to temporary branch.
Better checking of @param/@property tags (#39487)
fix(25155): add space before optional parameters/properties (#38798)
Add regression test for #38834 (#39479)
Fixes searches for symbols exported using export * as (#39507)
fix(39421): omit prefix text for rest binding element (#39433)
fix(39440): show QF for abstract classes with methods which include 'this' parameter (#39465)
Remove unnecessary assert (#39483)
LEGO: Merge pull request 39501
LEGO: check in for master to temporary branch.
Update user baselines (#39220)
Type `this` in more constructor functions (#39447)
LEGO: Merge pull request 39497
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 39493
LEGO: check in for master to temporary branch.
Fix namespace import/export helper usage
Properly handle rest parameters in function declarations with @type annotations (#39473)
Ensure type/namespaceish statics are included in the list of namespace merge members (#38920)
Fix getTypeAtLocation for dotted implements clauses (#39363)
Add workflow_dispatch to our nightly publish script. (#39485)
Fix crash in decorator metadata calculation when serializing template literal type nodes (#39481)
Merge branch 'master' into migrateMapsAndSets
Fix test semantic merge conflict between #39348 and #39130 (#39478)
Move deprecated jsdoc tags to compat/deprecations.ts
Dont include auto type reference directives (#39472)
Merge branch 'master' into migrateMapsAndSets
Fix for relating covered discriminants in unions (#39393)
Process type nodes in codefixes/refactors for auto-imports recursively (#39130)
Mark @typedef as a type declaration (#39468)
fix(23871): change insertNodeAfter to replaceNode to avoid extra newlines (#38045)
LEGO: Merge pull request 39467
LEGO: check in for master to temporary branch.
Don't narrow against unions of constructor functions with instanceof (#38099)
Parse *= separately in types (#39457)
LEGO: Merge pull request 39460
LEGO: check in for master to temporary branch.
fix(39332): handle quotes preference in interface method signatures (#39348)
Avoid check for union keys (#39314)
In JS, assignment to `void 0` isn't a declaration (#39452)
Retain the original eslint arg order (#39450)
Merge pull request #39418 from a-tarasyuk/feat/25259-diagnostic
Merge pull request #39379 from a-tarasyuk/bug/39346
Adds a script for hooking up dev builds of TS to the playground (#38859)
Split the GH actions CI into multiple stages (#39210)
LEGO: Merge pull request 39448
LEGO: check in for master to temporary branch.
autocomplete works for const assertion. (#39412)
feat(25259): change diagnostic message
LEGO: Merge pull request 39417
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 39416
LEGO: check in for master to temporary branch.
Fix control flow analysis for nested try-catch-finally statements (#39399)
LEGO: Merge pull request 39408
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 39404
LEGO: check in for master to temporary branch.
allow consecutive newlines in jsdoc tag comments (#38036)
Node-based @deprecated checks (#39323)
Emit fallback for decorator metadata for type only imports (#39337)
Fix for relating covered discriminants in unions
LEGO: Merge pull request 39382
LEGO: check in for master to temporary branch.
fix(39346): show completion in inherited classes from the composited base interface
Revert the type change to ts.Map (#39366)
Drop dead files from LKG (#39330)
Copy typesMap.json in produceLKG.ts (#39329)
LEGO: Merge pull request 39360
LEGO: check in for master to temporary branch.
Use MS repo for making monaco builds (#39316)
Fix crash on completion in jsdoc namepath (#39347)
JSDoc uses same newlines as normal scanner (#39351)
Disable signature help on unresolved bare identifiers; add more declaration info on other unresolved calls (#39352)
Fix type of computed name following spread (#39319)
fix(32297): add quick-fix action to delete parameter destructuring elements (#38764)
Merge pull request #38792 from microsoft/reportBaseAgainstBooleans
Merge pull request #38754 from a-tarasyuk/feat/25259
Add assertion.
Accepted baselines.
Exempt bare 'boolean's from the check.
feat(25259): add better error to report for equals instead of the colon in object literals
Merge pull request #39109 from Kingwl/lambda_span
Infer implied arity before inferring from 'this' argument (#39328)
Delete lib/lib.esnext files no longer found in built/local
Delete lib/diagnosticMessages.generated.json
Consistent narrowing to 'never' in conditional and switch statements (#39191)
No speculative inferences for variadic tuples (#39281)
Merge pull request #38776 from a-tarasyuk/bug/29890
Use mapped rest type member when expanding rest parameter names (#39317)
fix(39047): handle extra spaces after the catch statement (#39306)
Allow distinct string enum members with identical property names to form unions in mapped types (#39101)
LEGO: Merge pull request 39318
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 39309
LEGO: check in for master to temporary branch.
fix(29890): wrap variable/method/property to jsx expression
LEGO: Merge pull request 39286
LEGO: check in for master to temporary branch.
Preserve newlines between try/catch/finally, if/else, do/while (#39280)
not narrow static property without type annotation in constructor. (#39252)
Migrate more places to use Map/Set
Switch to ES Map/Set internally (#33771)
fix(38840): omit completions for a spread like argument in a function definition (#38897)
fix(38785): include in NavigationBar child items from default exported functions (#38915)
LEGO: Merge pull request 39276
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 39270
LEGO: check in for master to temporary branch.
Avoid effect of element access expression (#39174)
Update typescript-eslint to 3.4.1-alpha.1 (#39260)
Handle 'keyof' for generic tuple types (#39218)
Disable unsound T[K] rule in subtype relations (#39249)
LEGO: Merge pull request 39257
LEGO: check in for master to temporary branch.
Upgrade typescript-eslint version (#39242)
Handle recursive type references up to a certain level of expansion in inference (#38011)
Do not consider binding patterns in contextual types for return type inference where all the signature type parameters have defaults (#39081)
LEGO: Merge pull request 39233
LEGO: check in for master to temporary branch.
Do not add reexported names to the exportSpecifiers list of moduleinfo (#39213)
Update user baselines (#39214)
Leverage syntax cursor as part of reparse (#39216)
Update failed test tracking to support Mocha 6+ (#39211)
Update user baselines (#39196)
LEGO: Merge pull request 39203
LEGO: check in for master to temporary branch.
Variadic tuple types (#39094)
Merge pull request #37907 from Jack-Works/feat/class-to-classname
Merge pull request #39112 from microsoft/lego/hb_998_20200617161036026
Merge pull request #39136 from microsoft/lego/hb_998_20200618041040315
Merge pull request #39141 from microsoft/lego/hb_998_20200618101048830
Merge pull request #39125 from microsoft/lego/hb_998_20200617221056165
Merge pull request #39107 from microsoft/lego/hb_998_20200617101042356
Merge pull request #39104 from microsoft/lego/hb_998_20200617041034351
Merge pull request #39097 from microsoft/lego/hb_998_20200616221103922
chore: resolve suggestions
Expand auto-import to all package.json dependencies (#38923)
inline local functions
Update bigint declaration file (#38526)
Update user baselines (#39077)
LEGO: Merge pull request 39189
LEGO: check in for master to temporary branch.
Add missing index.ts files to user projects (#39163)
Add reason for a disabled code action (#37871)
Minor fix for assertion predicates (#38710)
Update LKG (#39173)
Reparse top level 'await' in modules (#39084)
change
chore: more change
chore: resolve review
chore: save space
fix: lint error
test: add test for it
chore: make isJsxAttr required
chore: revert change in checker
feat: re-impl react class name fix
Revert "feat: add a codefix to fix class to className in react"
feat: support spell checking in JSX attribute
feat: add name suggestion for JSX
feat: add a codefix to fix class to className in react
Add deprecated related feature (#38523)
Rename `callbackfn` params to `predicate` where possible (#39150)
Adds [unit] and [unitDisplay] to NumberFormatOptions (#38013)
Code fix for accidental calls to get-accessors (#38749)
Allows emitting buildInfo when --noEmit is specified (#39122)
LEGO: Merge pull request 39148
LEGO: check in for master to temporary branch.
fix rename cause import change wrongly (#38462)
LEGO: check in for master to temporary branch.
reset soft with master for single commit (#38720)
LEGO: check in for master to temporary branch.
Avoid semi
LEGO: check in for master to temporary branch.
In JSDoc, parse postfix-? below conditional types/tuple types (#39123)
Show a diff when the  public api baselines fail (#39108)
Add a type-guard overload of Array.every (#38200)
Fix crash in reporting unresolved project reference as part of compilerOptions verification (#39095)
LEGO: check in for master to temporary branch.
Update baseline
Add outlining spans for call expression or arrow body
LEGO: check in for master to temporary branch.
Small fix in `getObjectLiteralIndexInfo`
Fix two test typos
LEGO: check in for master to temporary branch.
Refactor node factory API, use node factory in parser (#35282)
Fixes issues with reload because of output emit (#39030)
Make debug mode work with new VS Code JS debugger (#39098)
LEGO: check in for master to temporary branch.
Assignment operator is definite assignment (#39087)
Syntax only server creates inferred project with all the open files w… (#38561)
Merge pull request #37721 from benmccann/NumberFormatOptions-notation
Merge branch 'master' into NumberFormatOptions-notation
Merge pull request #39093 from microsoft/fix-oodate-baseline-
Update README.md (#39074)
fix out-of-date baseline
Move notation to es2020.intl.d.ts
Merge branch 'master' into NumberFormatOptions-notation
Include reexported names in list of exported names (#38809)
Fix crash when serializing the return type of a generic call to Array.prototype.flat (#38904)
Merge pull request #38917 from typescript-bot/user-baseline-updates
Update user baselines
Small fix in `getIsContextSensitiveAssignmentOrContextType`
Simplify `visitObjectLiteralExpression`
Fix handling of `aruments` in the emitter
Fix declaration emit for property references of imported object literal types (#39055)
Merge pull request #39052 from microsoft/dom-update-2020-06-12
Fix casing for wild card keys for implicit globs to get wild card directories to watch (#39049)
DOM update 2020-06-12
fix(a11y): make ISSUE_TEMPLATE/Bug_report.md more accessible for folks with screen readers (#39013)
Update request-pr-review script to latest version of octokit (#39031)
Merge pull request #38688 from microsoft/fix-implements-tag-emit
pin version of octokit
skip implements types with no symbols
Merge branch 'master' into fix-implements-tag-emit
Merge pull request #39025 from microsoft/isDynamicName-skip-parens
isDynamicName skips parentheses for element access
Allow `e: unknown` in `catch` arguments
Serialize (noncontextual) keyword named namespace members with export declarations in both declaration emitters (#38982)
Patch to use this.timeout() > 0 rather than this.enableTimeout() to work with mocha 8+
Handle missing return type nodes and nested type references missing type arguments in existing jsdoc node serialization (#39011)
Add containerName to CallHierarchyItem (#38997)
Fix isSameEntityName (#38999)
Fix typo for 'blocklist' (#39001)
Update baselines (#39000)
Merge pull request #37727 from Kingwl/logical_assignment
Make isEntityNameVisible duplicate the node builder logic to always consider type parameters as visible if they are the resolution result (#38921)
Schedule failed lookup updates (#38560)
Remove non null assertion on oldSourceFile.resolvedModules (#38984)
Merge pull request #38358 from a-tarasyuk/bug/38081
use blocklist instead of blacklist (#38988)
LEGO: Merge pull request 38957
LEGO: check in for master to temporary branch.
Deprecate reloadFs so the tests are more clear in what they are achieving and its easier to track changed behaviour (#38954)
LEGO: Merge pull request 38949
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 38943
LEGO: check in for master to temporary branch.
Make `hasCorrectArity` handle tuples properly
fix error when use spread arguments twice
Fix merging of JS value & TS type decl
LEGO: Merge pull request 38938
LEGO: check in for master to temporary branch.
`getSymbolDisplayPartsDocumentationAndSymbolKind`: use actual `symbol.flags` for `getAliasedSymbol`
LEGO: Merge pull request 38931
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 38926
LEGO: check in for master to temporary branch.
Merge pull request #38378 from jessetrinity/refactorTriggerReason
Merge pull request #38536 from typescript-bot/user-baseline-updates
Fix two tests
Update user baselines
LEGO: Merge pull request 38908
LEGO: check in for master to temporary branch.
address PR comments
Merge pull request #38734 from a-tarasyuk/bug/34934
Emit build info even on noEmitOnError or tsc --build (#38853)
Some changes to tsc baselines for clarity (#38850)
LEGO: Merge pull request 38898
LEGO: check in for master to temporary branch.
fix(38081): allow transforming object binding to named imports
add support to convert lambda to function and vice-versa (#28250)
LEGO: Merge pull request 38888
LEGO: check in for master to temporary branch.
Skip default when initially iterating exports in __importStar, same as __exportStar (#38808)
fix line endings
Merge branch 'master' into m-lambda-to-fn
Improve error range for ts2657 (jsx expr must have parent element), add code fix for it (#37917)
fix(32341): add prefix name for module exports properties (#38541)
fix(19385): add space after brace in the multiline string template (#38742)
fix(38815): dive in arrow functions to check only this usage instead of checking all statements (#38865)
LEGO: Merge pull request 38882
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 38875
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 38873
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 38862
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 38858
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 38857
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 38852
LEGO: check in for master to temporary branch.
fix merge conflicts
polish tests
remove outdated tests
convert import trigger reason test
convert import trigger reason only
convert export trigger reason test
convert export cursor only changes
remove declaration
Revert "update refactorConvertImport_partialSelection"
remove unused test method
fix up some bools
accept new baseline
convert get set test
update test names
extract symbol test
extract type test
add refactorNotAvailableForTriggerReason
fix some indices
use verify trigger reason for import export
arrow function refactor test
change type of RefactorTriggerReason
accept new baseline
convert import tests
convert export tests
use enum for RefactorTriggerReason
accept new baseline
update refactorConvertImport_partialSelection
extract symbol
fix lint errors
extractType explicitCursorRequest
extractType
convertImport
loosen convertExport conditions
enable explicit requests for addOrRemoveBracesToArrowFunction
add trigger reason to protocol
Merge pull request #38783 from Swap76/master
Merge pull request #38821 from a-tarasyuk/bug/23716
LEGO: Merge pull request 38827
LEGO: check in for master to temporary branch.
Merge pull request #38813 from dabalyan/patch-1
Convert HTML tags in doc-comments into markdown
fix linting error
Merge remote-tracking branch 'upstream/master' into m-lambda-to-fn
LEGO: Merge pull request 38797
LEGO: check in for master to temporary branch.
Fixed uncomment bug
Use getFileAndLanguageServiceForSyntacticOperation
LEGO: Merge pull request 38790
LEGO: check in for master to temporary branch.
Merge pull request #38049 from JoshuaKGoldberg/literal-to-primitive-relation-reporting
fix(38722): change error message for use-before-declaration on const enum (#38728)
Merge pull request #37894 from microsoft/always-error-on-property-override-accessor
Delete .gitmodules
fix(23716): show generic type in tagged template expression
LEGO: Merge pull request 38781
LEGO: check in for master to temporary branch.
Merge pull request #38415 from Kingwl/navTree-fix
LEGO: Merge pull request 38777
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 38775
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 38774
LEGO: check in for master to temporary branch.
Fix relation between generic mapped types and types with index signatures (#38761)
LEGO: Merge pull request 38769
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 38765
LEGO: check in for master to temporary branch.
Removed public commands
LEGO: Merge pull request 38741
LEGO: check in for master to temporary branch.
Fixed lint errors
Fixed more lint issues.
Fixed lint issues
Added comment and uncomment selection
Fixed uncomment bug
Removed TextRange and added FileRangeRequestArgs
Updated d.ts baselines
Added simplified result to ToggleComment
Fixed toggleLineComment jsx cases
Added jsx to singleLineComment
Fix multiline name
Added toggleLineComment, toggleMultilineComment with jsx and tests
Fix multi-file usage
Merge branch 'master' into always-error-on-property-override-accessor
fix(34934): exclude private properties from Js completion list
Less code
Updated baselines.
Feed generalized source type to elaboration.
Updated baselines.
Check constraints deeply on singleton types.
Merge remote-tracking branch 'origin/master' into literal-to-primitive-relation-reporting
Merge pull request #38719 from microsoft/revert-32011
Revert "Wrap classes with decorators or static properties in an IIFE, even for ES2015+ (#32011)"
Merge branch 'master' into always-error-on-property-override-accessor
Preserve module marker in es2015+ module emit for tool compatability (#38712)
Merge pull request #38481 from a-tarasyuk/bug/38463
Fix recently added test so it is cross-plat
remove errant tab
Switch to isSymbolAccessible for both.
Merge branch 'master' into fix-implements-tag-emit
fix(33286): add outlining for arrow function with one parameter (#38631)
Merge branch 'master' of https://github.com/microsoft/TypeScript into bug/38463
Accept baseline
fix names
Fix type and simplify code
Merge pull request #37800 from jtbandes/diagnose-accidental-accessor-call
Make new error an error, not message
Merge branch 'master' into diagnose-accidental-accessor-call
Merge pull request #38607 from a-tarasyuk/bug/38295
fix untagged argument lint
fix(38299): use string literals as keys to creating rest result (#38600)
Merge pull request #38425 from dsherret/fixJSDocTagFactoryFuncReturnTypes
Merge pull request #38498 from ShuiRuTian/make-atomics.notify-type-correct
Intersection check for empty object type shouldn't cause circularities (#38673)
Fix @implements emit for namespaced base types
Merge branch 'master' of https://github.com/microsoft/TypeScript into bug/38295
Merge branch 'master' of https://github.com/microsoft/TypeScript into bug/38463
fix(38682): use stable typescript version (#38683)
Add d.ts for Intl.RelativeTimeFormat (#36084)
fix(38295): handle duplicate object literal keys which contain '+' and '-' tokens
Merge branch 'master' of https://github.com/microsoft/TypeScript into bug/38463
fix(38463): show completions for index access properties
Merge branch 'master' into logical_assignment
Support naming tuple members (#38234)
LEGO: Merge pull request 38670
LEGO: check in for master to temporary branch.
fix: extract const in jsx (#37912)
Merge pull request #38500 from a-tarasyuk/bug/38485
Merge pull request #38656 from a-tarasyuk/bug/33233
Merge pull request #38659 from TimvdLippe/patch-3
No contextual types from circular mapped type properties (#38653)
Merge branch 'master' into patch-3
Merge pull request #38660 from TimvdLippe/patch-4
Ensure formatter can always get a newline character (#38579)
Fix debug command for Node debugging
Remove mentions of runtests-browser in CONTRIBUTING.md
LEGO: Merge pull request 38655
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 38650
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 38639
LEGO: check in for master to temporary branch.
fix(33233): add outlining for comments before property access expression
LEGO: Merge pull request 38633
LEGO: check in for master to temporary branch.
Use control flow analysis to check 'super(...)' call before 'this' access (#38612)
LEGO: Merge pull request 38614
LEGO: check in for master to temporary branch.
accept new baseline
fix rebase conflict
add missing semi
Add more check
fix mission baseline
avoid shouldCaptureInTempVariable
Remove newline
fix assignment check of logical assignment
Add type narrow
Add more case
Refactor logical assignment
fix operator
make ci happy
Fix cfa
Update src/compiler/transformers/utilities.ts
Add more check
Add cfa
Add contextual types infer
Add mission semi
Add more case
Add logical assignment operator
Make `processTaggedTemplateExpression` visit a returned node
goToDefinition: find only the value if it's the RHS of an assignment
Fix regression organize imports duplicates comments (#38599)
Fix crash in JS declaration emit (#38508)
Include unknown in spread prop override check (#38577)
Merge pull request #38576 from wincent/typos
Fix (cosmetic) typos in checker.ts comments
Perform intersection reduction before and after getApparentType (#38565)
fix(33836): allow readonly modifier for a field with only get accessor (#36543)
Fix build type error (#38525)
Merge pull request #38480 from typescript-bot/user-baseline-updates
Update user baselines
Merge pull request #38489 from microsoft/removeDuplicateInfo
Merge pull request #38502 from alan-agius4/export-star-colon
Fix detecting default project when file is part for more than one project but not part of default configured project (eg because its output of that projet) (#38429)
Merge pull request #38240 from a-tarasyuk/feat/add-outlining-spans-for-object-destructuring-elements
feat(38225): change diagnostic message for remove braces from arrow function body (#38226)
fix(37877): include in NavigationBar default exported child items (#38255)
fix: add missing semi-colon to `__exportStar` unnamed function
regression(38485): allow using rawText property in processing a tagged template
make last para of Actomics.notify optional.
LEGO: Merge pull request 38492
LEGO: check in for master to temporary branch.
Merge pull request #38439 from lissein/void-0-template-strings
Update baselines.
Add and use the 'intersperse' helper function.
LEGO: Merge pull request 38488
LEGO: check in for master to temporary branch.
Fix for jsdoc modifiers on constructor params (#38403)
Don't add duplicates of JSDoc comments.
Added tests for union types with identical doc comments.
Improve assert message in binder (#38270)
fix broken regex on "src/services/completions.ts#getCompletionData" (#37546)
report error for duplicate @type declaration (#38340)
fix(38073): hide 'Extract to function in global scope' action for arrow functions which use 'this' (#38107)
Update user baselines (#38472)
Update user baselines (#38405)
Changed template strings to emit void 0 instead of undefined (#38430)
Fix js missing type arguments on existing nodes and jsdoc object literal declaration emit (#38368)
Fix some JSDoc factory function return types.
LEGO: Merge pull request 38424
LEGO: check in for master to temporary branch.
Make isDynamicFileName available publicly (#38269)
Fix tranced es5 classes after new scope
LEGO: Merge pull request 38411
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 38404
LEGO: check in for master to temporary branch.
Exclude arrays and tuples from full intersection property check (#38395)
Fix crash caused by assertion with evolving array type (#38398)
Update user baselines (#38128)
LEGO: Merge pull request 38393
LEGO: check in for master to temporary branch.
moveToNewFile: handle namespace imports too
Unify logic in typeof narrowing (#33434)
LEGO: Merge pull request 38375
LEGO: check in for master to temporary branch.
feat(37782): 'declare method' quick fix for adding a private method (#37806)
expose jsdoc factory (#29539)
Add support of contextual quick info (#37451)
Update LKG 2020 05 06 (#38371)
Allowed comment directives to be multiline (#38228)
Fix regression in name resolution in parameter (#38351)
fix(36055): forbid union type with invalid types in the 'in' operator (#37786)
Updating dependencies (#37788)
LEGO: Merge pull request 38355
LEGO: check in for master to temporary branch.
Consistent narrowing by discriminant (#38311)
fix(37703): forbid required parameter after optional (#38155)
add outlining spans for the tuple type (#38179)
add outlining spans for array destructuring elements (#38191)
Fix `updateBinary` `operator` parameter (#38129)
Add missing arguments to typeToTypeNode. (#38336)
Properly handle private/protected members in unions of object types (#38277)
Harden node builder APIs to no longer return `undefined` for a node when `NodeBuilderFlags.IgnoreErrors` is provided (#38273)
Fix incorrect line text computation to stop comment directive searching (#38296)
Fix index signatures on unions of intersections (#38278)
fix(38177): add auto-import for missing argument type in new functions/methods (#38213)
Make `getAwaitedType` private
feat(36266): add a quick fix for incorrect return types in async functions
Adjust to newer changes
disallows exponentials with BigInts for targets lower than ES2016
Fix jsdoc variadic type nodes not being remapped to equivalent TS in output (#38276)
LEGO: Merge pull request 38280
LEGO: check in for master to temporary branch.
Fix crash on duplicate default exports (#38272)
Fix: convertFunctionToEs6Class cannot recognize `x.prototype = {}` pattern (#35219)
LEGO: Merge pull request 38268
LEGO: check in for master to temporary branch.
fix order and tests
Merge remote-tracking branch 'upstream/master' into diagnose-accidental-accessor-call
move to invocationErrorDetails
LEGO: Merge pull request 38253
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 38245
LEGO: check in for master to temporary branch.
Adds support for looking up past Blocks in expando objects (#38031)
Early couldContainTypeVariables check in instantiateType (#37844)
Control flow for constructor initialized properties (#37920)
Guard against recursion in inferTypeForHomomorphicMappedType (#38224)
Error on this.xxx access of previously declared but uninitialized property (#38030)
Include a stack in InitializationFailedResponse (#38223)
this: undefined in modules (#37784)
Merge branch 'master' of https://github.com/microsoft/TypeScript into feat/add-outlining-spans-for-object-destructuring-elements
feat(38225): change diagnostic message for remove braces from arrow function body
I did everything you said I followed all the rules
Handle undefined in indent helper (#38217)
Bump version number to 4.0 (#38215)
Revert "Revert "Add check for delete expression must be optional (#37921)" (#38154)" (#38173)
LEGO: Merge pull request 38178
LEGO: check in for master to temporary branch.
Skip comparing optional property flag when comparing against discriminant properties (#38101)
Revert "Add check for delete expression must be optional (#37921)" (#38154)
Revert #37106 (#38172)
LEGO: Merge pull request 38171
LEGO: check in for master to temporary branch.
Reset error variable in downlevel for-await-of loop (#38170)
Revert "make splice `deleteCount` required in es5.d.ts (#32643)" (#38169)
fix(38138): show suggestions for identifier in class property initializer (#38157)
Fix values and types merging in JS module exports (#37896)
Special-case export assigned namespaces in getSpecifierForModuleSymbol so they behave like their containing module symbol (#38151)
Fix truthiness call check for this-property access (#38163)
Fix temp variable scoping in async generators (#38121)
convertToAsyncFunction: Disable for `.then` with both fulfillment and rejection handlers (#38152)
Fix temp vars referenced in parameter (#38130)
Issue an error on cross-file merges we cant emit (#38148)
Have the `ChangeTracker` filter out edits that are no-ops (#38123)
Fix newline issues when adding multiple imports (#38119)
LEGO: Merge pull request 38132
LEGO: check in for master to temporary branch.
Update user baselines (#38109)
Filter undefined from binding elements with initialisers without undefined in the type (#38122)
Prefer a likely literal over anonymous type in --noImplicitAny codefixes (#36015)
Filter undefined only in binding patterns in params (#38116)
Used DH's suggested heuristic
fix(37825): exclude private fields from completions in subclasses (#37906)
fix(38080): add outlining spans for TypeLiteral (#38089)
Add check for delete expression must be optional (#37921)
LEGO: Merge pull request 38104
LEGO: check in for master to temporary branch.
Update user baselines (#37995)
Fix preserveNewlines printer option when a list child has the same start or end as its parent (#37846)
Navto covers all projects (#38027)
LEGO: Merge pull request 38100
LEGO: check in for master to temporary branch.
Delay pulling on signature contextual type until absolutely needed (#37851)
Fix js declaration emit for inherited and this-typed inherited fields (#37970)
Remove superCallShouldBeFirst error (#37947)
fix(15398): skip adding line breaks when replacing JS checks directives (#38086)
Fix use-before-def with methods on esnext+useDefineForClassFields (#38033)
Add outlining spans for object destructuring elements
LEGO: Merge pull request 38084
LEGO: check in for master to temporary branch.
Excluded type unions from the generale source types
Handle non literal computed name when trying to get the name for object literal property name in json object (#37988)
Fix typo in issue template titles (#38042)
fix(37242): add reference to return type for JSDocFunctionType (#37911)
Fix doc comment template on assignment expressions (#38032)
Propagate nonInferrableType in &&, || and ?? operators (#38035)
LEGO: Merge pull request 38072
LEGO: check in for master to temporary branch.
Lint fix
This had better be the last unit test fix...
Again fixed up manual unit tests
Eased up on some of the more aggressive reporting changes
Fixed a couple of tsserver unit tests
Report primitive type in literal-to-primitive relation complaints
replace the original not-callable error
prefix-unused-parameter-with-_ codefix now works in jsdoc @param (#36152)
fix(37242): add reference to return type for JSDocFunctionType
Use string representation for negative numeric property names (#37936)
Update user baselines (#37946)
Fix crash on declaration emit for globalThis (#37992)
fix(37940): add space after parameter decorator (#37959)
Typo at Uint8Array[Symbol.toStringTag] (#37989)
fix(refactor): keep comments after refactor (#35937)
Improve error message for computed enums (#37790)
No iteration type errors during CFA (#37965)
LEGO: Merge pull request 37976
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 37969
LEGO: check in for master to temporary branch.
Added error when Enum member initaliser references itself (#34655)
Add fastpath to isRelatedTo for type references (#37481)
Accept recent tests with updated baseline code (#37945)
Update user baselines (#37935)
Update __exportStar helper to skip default and __esModule members (#37236)
chore(ts-toolbelt): remove deprecated test (#37932)
Retain imports in declaration emit if they augment an export of the importing file (#37820)
fix(37781): import missing argument types for a new method (#37857)
Error on missing BigInt in es2020 (#37899)
Add _0_is_declared_here pointing to accessor declaration
Better error message for accidental calls to get-accessors
Avoid circular reference in this-property assignments (#37827)
Minor cleanup
fix(37150): ignore private fields in string index type checking (#37183)
fix(37364): show completions for string literal index on mapped type (#37367)
Reorder tsconfig and move one more function
Fix indentation preservation in JSDoc (#37717)
No recursive intersection property checks (#37854)
No excessive stack depth global errors (#37873)
move into new, centrally (?) located file
refactoring done except for deduping
Add node 13 to CI
Remove node 8 from the github actions (#37870)
Codefix invokes generate get-set accessor refactor
Fix crash from missing valueDeclaration on intersection property (#37696)
Fix parenthesization rules for yield (#37849)
add fourslash tests for codefix
Fix code block in jsdoc (#37864)
Lock playwright version (#37869)
Error on invalid uses of namespace export (#37715)
Remove extraneous string escape from convert to template string refactor (#37743)
Always error when property overrides accessor or vice versa
Set contextual type on elaborated error node rather than passing it, so its discriminated (#37828)
fix build break by updating missed baseline
Fix async function block return expr error in js (#37845)
LEGO: Merge pull request 37848
LEGO: check in for master to temporary branch.
Use comments from host variable declaration when exporting a signature in js declarations (#37594)
Fix metadata serialization for invalid jsdoc types (#37836)
Fix easy misunderstanding "! ===" (#37838)
fix(37817): omit comments in name accessor (#37822)
Skip `isBlockScopedNameDeclaredBeforeUse` error in interface or type declarations
Minor improvement
Make skipLibCheck: true the default in --init (#37808)
Disambiguate types with same name from different namespaces in mapToTypeNodes (#37543)
Accurate Array.prototype.flat definition (#32131)
Look for outer type parameters on VariableStatements (#37819)
Extra check in assignment of intersections with generic constituents (#37537)
Generic functions are never context sensitive (#37811)
Fix serialisation of static class members in JS (#37780)
Allow Source Mapping inside destructuring assignment (#37298)
Consider arrays and tuples within one another as possibly requiring deferral (#37776)
Fix crash for private identifier in expando assignments (#37764)
LEGO: Merge pull request 37766
LEGO: check in for master to temporary branch.
Cache the regularized form of union types (#37749)
Reduce intersections with conflicting privates, elaborate on reasons (#37762)
Fix variable name collisions (#37761)
Remove error when spreading optional any (#37757)
fix(37456): add tests for JsxOpeningElement nodes (#37752)
Quick fix for functions lacking return expressions (#26434)
Fix goto implementation does not suggest all subtypes (#33652)
Fix rename for type symbols imported as a different name (#37745)
fix(37431): allow only one space between async keyword and method name (#37504)
Reuse input type nodes when serializing signature parameter and return types (#37444)
Add replacement span for string literal (#37490)
Explicitly merge module augmentation members into the exports added by export * declarations (#37691)
fix(37456): omit type arguments from JsxSelfClosingElement, JsxOpeningElement nodes (#37739)
Add replacer function overload for replaceAll (#37476)
Disallow partial matches for discriminant properties when generating error messages (#37589)
fix(37519): forbid trailing comma in a index signature (#37535)
Fix crash on bad namespace parse (#37626)
Add node to zone.js' tsconfig types (#37499)
Add support for extraFileExtensions on WatchCompilerHost (#37726)
Fix post-LKG build
fix #32843 : evaluate right scope when checked if all type parameter are unused for jsdoc `@template` (#33320)
Fix emit of simple module.exports.C.prototype pattern (#37719)
Add support for NumberFormatOptions notation
support 'in' type guard of intersections (#37106)
Don’t offer `this.` completions on `self`, `window`, `global`, `globalThis`. Disambiguate `this.` completions from others in details requests. (#37652)
Rerun LKG to remove 'awaited' type (#37616)
Don't delete comments when deleting unused declarations (#37467)
Fix narrow-by-constructor logic (#37698)
Update user baselines (#37498)
Fix build after merging #35862
Fixed issue where missing method call went unreported if the call target symbol did no have an id assigned or if the called property was used inside the if block on a different target. (#35862)
Make never rest type top-like (#35438)
Fix contextual types for maybe-async callbacks (#37205)
Add link to documentation in tsconfig.json template generated by tsc --init  (#34686)
Improve error message for invalid return type of JSX component (#32702)
Fix #31319 : Narrow unit-unit inequality tests using comparability (#33071)
update baseline (#37692)
fix(33054): allow variables starting with an underscore in for/of statement (#36739)
fix(36909): wrong error message when trying to named-import an export (#36925)
Fix Number.is* to accept unknown again (#34932)
feat(37092): improve error message about missing default export (#37212)
Handle comment directives in incremental parsing (#37632)
Support completions for local named exports (#37606)
Fix import order (#37510)
Adds a preview link to the baseline emits for sourcemaps (#37111)
Report error when cannot read file (#37611)
Fix sys.debugMode when using VSCode's new preview debugger (#37558)
Revert 'awaited' type (#37610)
Handle packages inside another node modules package when auto importing (#37561)
When the global file is deleted mark all files as changed (#37538)
Release the documents from language service using key instead of calculating it on the spot since we want to use correct paths for the files (#37596)
Fix emit for optional chain with non-null assertion (#36539)
Don’t suppress completions after yield (#37609)
Ensure computed property names are always checked (#37307)
Sort the arrays of fileNames in the build info (#37541)
Add test for #35011 (#37312)
Enhancement new expression with type arguments without parenthesized argument list error message (#37576)
Handle if reading tsconfig file fails (#37563)
Revert cloneNode overrides in the DOM (#37568)
Convert to async function: handle type arguments to then/catch (#37463)
Do not include global errors in semantic errors from the file (#37545)
LEGO: Merge pull request 37553
LEGO: check in for master to temporary branch.
Check JSDocPropetyTag (#37544)
fix: hyphened name not auto-completed by the ls (#37455)
Handle import type and export type in preprocess (#37508)
LEGO: Merge pull request 37517
LEGO: check in for master to temporary branch.
Bring over last 3.9 dom changes (#37502)
Narrowing from truthy unknown to object (#37507)
Add the 'awaited' type operator (#35998)
Update user baselines (#37354)
  If emitting declaration file, update the d.ts signature in state to not have to save all files when different file changes without changing its shape (#37483)
Handle auto import scenarios when using project references (#37482)
Fix `getSignatureOfTypeTag` (#37473)
Add code fix for importsNotUsedAsValues error (#37468)
Track tuple type recursion in inferFromObjectTypes (#37479)
Allow rich response for compile on save (#37462)
Allow nested conditionals to be related via constraints (#37208)
Fix poor error span for unclosed JSX tags in the presence of whitespace/comments (#37419)
Add huge maximal length for noTruncation mode (#37461)
Preserve newlines from original source when printing nodes from TextChanges (#36688)
Allow assertion signatures to narrow by discriminant (#37310)
fix(37287): check appropriate context with enabled useDefineForClassFields (#37323)
Dom update 2020-03-18 (#37464)
Simplify return type of Object.fromEntries (#37457)
Always generate configFileDiag if file is going to be added to configured project (#37443)
feat(37409): add fix all quick fix to fixInvalidJsxCharacters (#37436)
LEGO: Merge pull request 37446
LEGO: check in for master to temporary branch.
Support for/of variables in assertion checking (#37432)
fix(37194): fix crash on go to the definition in variable assignment (#37253)
Fix `Node#getStart(sourceFile, true)` throwing when node has a js doc and no parent (#37439)
Merge branch 'master'
Merge branch 'master' into extends-constructor-typeerror
Undind unintentional whitespace changes
Fix #33732 (#36077)
fix(36247): disallow 'constructor' as a parameter property name (#37285)
Clarified file-not-found error for reference paths without extensions (#35956)
Fix declaration emit when the packages are included through symlinks (#37438)
fix(36936): fix crash caused by resolving non existent export (#37077)
feat(36908): add 'property overwritten by spread' error for jsx attributes. add related span for conflicting declaration in spread (#37329)
Add codefix for --noImplicitThis (#27565)
Add script to work around GH issue with suggested reviewers (#37422)
Flatten immediately nested conditional types in the false position (#36583)
 When the imported module is through node_modules and symlink to folder that isnt node_modules (#37387)
Fix assignment of intersections to objects with optional properties (#37195)
On second thought, removed the {}s
LEGO: Merge pull request 37390
LEGO: check in for master to temporary branch.
 getPropertiesOfUnionOrIntersectionType: handle types with index signature (#31979)
Add valueOf declarations for TypedArrays (#36668)
Add trimTrailingWhitespace Editor Option (#36905)
feat(33792): add new quick fix service to handle missing call in condition (#37152)
Make substitution types even if the substitution base isnt a type variable (#37348)
Add outlining spans for case clauses (#37374)
Handle when default project for file is solution with file actually referenced by one of the project references (#37239)
feat(36249): add quick-fix action to declare a property as private which starts from underscore (#36632)
[minor] Adds some docs to the LSP interface  (#36740)
LEGO: Merge pull request 37377
LEGO: check in for master to temporary branch.
Fix test failure as part of #35922
Fix tests failure due to #36317
Filter the type of a binding pattern to not include undefined is the pattern parent has an initializer (#37309)
improve error message TS2307 (#27054)
Show token hints for missing closing braces (#36317)
Support template literals in preProcess (fixes #33680) (#33688)
Fix crash when host.getSourceFile returns undefined (#37373)
Treat write-only-access to a class member with setter as a reference. (#35922)
Fix 33436 (#35225)
Remove 'path' from assert call (#37372)
Add implementation for fixExpectedComma (#33879)
fix(36102): fix extra new line in Organize Imports (#36911)
More clear comment for String.prototype.match() (#36301)
Don't parse duplicate JSDoc for ExpressionStatement starting with ParenthesizedExpression (#36289)
make splice `deleteCount` required in es5.d.ts (#32643)
add config to insert space for empty braces (#35427)
Move useSourceOfProjectReferenceRedirect to program so other hosts can use it too, enabling it for WatchHost (#37370)
  Ensure that we have seenAffectedFiles map when files are added to pending emit because they were present in the old state (#37302)
No infinite recursion in excess property and weak type checks (#37360)
adds error message for using value as type argument (#37359)
Increase the idle time before which ensureProject for open file is called (#37121)
Recognise master branch-equivalent as master
LEGO: Merge pull request 37353
LEGO: check in for master to temporary branch.
Update user test baseline script to diff against a single authoratative WIP master branch (like RWC) (#37350)
Optimize module resolution cache for watch and editor (#37055)
Use objects instead of closures for type mappers (#36576)
Implement constructor type guard (#32774)
No union subtype reduction during type inference (#37327)
LEGO: Merge pull request 37345
LEGO: check in for master to temporary branch.
Add constructor functions for {Symbol,Node}Links (#36845)
add promise.any (#33844)
LEGO: Merge pull request 37334
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 37331
LEGO: check in for master to temporary branch.
Add flag to omit default case (#33574)
Support NetBSD platform (#34756)
LEGO: Merge pull request 37325
LEGO: check in for master to temporary branch.
Infer to erased signatures (#37261)
LEGO: Merge pull request 37318
LEGO: check in for master to temporary branch.
Handle WatchCompilerHost without timeout methods to retrieve correct Program (#37308)
cleanup: remove unused variable assignment (#33917)
Removed unused host variable in createProgramHost (#37278)
Fix longer type-only property access in non-emitting heritage clauses (#37264)
Added runtime TypeError for non-function, non-null __extends
fix(28163): change outdated options (#37268)
Reset hasChangedAutomaticTypeDirectiveNames once new program is created (#37266)
Fixes duplicated comment when executing code fix to add missing enum member (#28163)
Merge pull request #37260 from uniqueiniquity/watchFileExistsFix
Update tests to be more precise
Update baselines
Fix file exists check for watch program
LEGO: Merge pull request 37243
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 37237
LEGO: check in for master to temporary branch.
Reinstate incorrectly removed esnext.bigint (#37233)
LEGO: Merge pull request 37232
LEGO: check in for master to temporary branch.
Added @ts-expect-error to @ts-ignore directives (#36014)
LEGO: Merge pull request 37229
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 37220
LEGO: check in for master to temporary branch.
add string.prototype.replaceAll (#33845)
Don't inferFromIndexTypes() twice (#34501)
Fix emitting `?.`
Don't crash when there's no class type to derive a 'this' type from (#37164)
Preserve arity for preserving js optional parameters (#37173)
LEGO: Merge pull request 37202
LEGO: check in for master to temporary branch.
More precise property-overwritten-by-spread errors (#37192)
fix(36883): accessor allows `this` parameter but is not checke… (#36889)
fix(36238): allow aliases in spelling suggestions (#37168)
Emit an `any` for namepath types (#37176)
fix(37135): handle PrivateIdentifiers in isPropertyName (#37184)
Thread host.useCaseSensitiveFileNames through program and node builder into specifier generation (#37170)
`symbol.parent` really is possibly sometimes undefined here. (#37159)
Reinterpret a type parameter constrained to any as an upper bound constraint (#29571)
LEGO: Merge pull request 37185
LEGO: check in for master to temporary branch.
Clean up convert-to-async refactor (#36858)
Stop looking for the default configured project at node_modules (#35011)
fix: Intl.PluralRulesOptions to behave according to spec (#33414)
Update LKG (#37175)
Retain reexports in js emit even when they export nothing (#37124)
LEGO: Merge pull request 37172
LEGO: check in for master to temporary branch.
Use merged symbol to pick up js-alias-merged members on export assignments (#37162)
Update user baselines (#37147)
Remove bogus @implements errors (#37114)
LEGO: Merge pull request 37154
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 37146
LEGO: check in for master to temporary branch.
Remove ordering restrictions in control flow analysis (#37134)
LEGO: Merge pull request 37133
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 37128
LEGO: check in for master to temporary branch.
Reduce intersections by discriminants (#36696)
Revert #36907 (#37122)
Full support for CommonJS auto-imports in JS (#37027)
Update LKG (#37116)
Hoist initial assignment to exported names in cjs to they are not blocked by bindings made by __exportStar (#37093)
LEGO: Merge pull request 37098
LEGO: check in for master to temporary branch.
Grammar error on `export type *` (#37064)
office-ui-fabric: silence progress counter again
Harden findAllReferences.ts against `symbol.declarations = undefined` cases (#37088)
Forcibly remove _the other_ submodules
Forcibly remove submodules
Update LKG (#37087)
LEGO: Merge pull request 37089
LEGO: check in for master to temporary branch.
Fix Get/Set being enumerable (#32264)
Reapply contextual type when recalculating array literals as tuples (#37071)
Proper treatment of splicing tuples in array literals
Exempt ambient [#]private from unused error (#37050)
Remove crashing diagnostic code that wasn't helping us (#36913)
Include input PR title in bot PR title
Measure module and type reference directive times (#37054)
Update the authors script to generate the content of authors.md (#36867)
Adds underlines to differences in strings (#36409)
Adding support for @implements. (#36292)
LEGO: Merge pull request 37080
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 37074
LEGO: check in for master to temporary branch.
fix(36989): 'async' modifier cannot be used in an ambient context.ts (#37010)
LEGO: Merge pull request 37068
LEGO: check in for master to temporary branch.
Allow --composite false or --composite null on the command line (#36997)
Remove unnecessary assert (since we allow already open file to be opened again even through openFile command - partially) from updateOpen command (#37059)
Detect circularities when removing 'undefined' from defaulted params (#37023)
LEGO: Merge pull request 37058
LEGO: check in for master to temporary branch.
Expose call count for instantiateType in extendedDiagnostics (#36797)
Update baseline (#37049)
No error on `this` exprs in static property inits (#36781)
Retain undefined initializations (#36806)
Update user baselines (#37033)
Unwrap substitutions both before _and_ after potential simplification (#32116)
Revert "Support declaration emit for late bound element accesses assigned to functions in both TS and JS (#36593)" (#37034)
Properly handle control flows from returns in try/catch within IIFE (#36901)
Handle getScriptVersion correctly to ensure program structure is checked correctly (#36808)
Ignore data- props when excess property checking (#36952)
Reduce lerna loglevel (#37024)
Adds floating block comments to the outlining spans response (#36880)
Check for undefined `source.symbol` (#37021)
Support declaration emit for late bound element accesses assigned to functions in both TS and JS (#36593)
Baseline arity checks for jsx sfc tags (#36643)
Add js-equivalent test for the binary expression stress and introduce  trampoline into getJSSyntacticDiagnosticsForFile (#36724)
Add helpers to helper list, per comment on #36806
Harden telemetryOnOpenFile (#36993)
Declare dependencies between helpers in the declaritive fashion introduced by #35967 (#37001)
Remove unneeded branch from getHelperName (#36998)
LEGO: Merge pull request 37018
LEGO: check in for master to temporary branch.
test(helpers): Update test baselines
fix(helpers): Use `hasOwnProperty.call`
Switch Debug.assertX functions to use asserts conditions (#36995)
Convert UnionOrIntersectionType.couldContainTypeVariables to ObjectFlags (#36947)
Use couldContainTypeVariables to short-circuit instantiateType (#36951)
Add --force to vue-next dockerfile since latest image version errors without it
Update user baselines (#37003)
Rescedule nightly publish to 11pm pst, (7am ust)
Update user baselines (#36999)
Fix crash on aliased,exported @enum tag in jsdoc (#36996)
Use getters to define live export bindings refresh (#35967)
Update user baselines (#36992)
LEGO: Merge pull request 36991
LEGO: check in for master to temporary branch.
Update user baselines (#36973)
Properly handle both special export forms when renaming (#36914)
Set CI=true in the office-ui-fabric docker test so it doesnt use a progress indicator (#36982)
Fix class emit in converted loop body (#36795)
Update CONTRIBUTING.md (#36553)
LEGO: Merge pull request 36980
LEGO: check in for master to temporary branch.
sanitize yarn-node path in output (#36953)
Add elaboration & quickfix for async-able arrow function (#36342)
Fix find-refs crash on JSDocNamepath (#36941)
Name workflow
Probably dont need artifact drops on release branch PRs
Add task mirroring devops release branch artifact building pipeline
Update user baselines (#36942)
Some would say it's trigger'd
Publishing to npm isnt the default on github for reasons
Make the nightly publish cron task also respond to a publish-nightly event
Port nightly publish task to actions
Update scripts for octokit 17 (#36915)
Fix access of protected members on generic this-type (#36928)
LEGO: Merge pull request 36934
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 36923
LEGO: check in for master to temporary branch.
Fix copy-paste error in navigateToItemIsEqualTo (#36912)
Try removing fetch-depth 0 config to improve speed, add sync-branch workflow
Cast version result so it isnt declaration emitted as a literal type once it has a wellknown value
Add set-version workflow
Expose importModuleSpecifierEnding to protocol (#36725)
use const instead of let for new class iife assignments (#36907)
Copy diagnostic messages to built/local to fix localization process (#36903)
azure-sdk test: move typescript location (#36902)
Remove trailing whitespace from copyright notice (#36886)
feat(36048): handle uncalled function checks in ternaries (#36402)
fix(33377): use quoteStyle option for string literals completions (#36720)
Fix typo in getChangesSinceVersion (#36885)
Unify padding impls and consistently use them
Fix lint
Cast sys.bufferFrom results in cases where global buffer and sys copy of buffer mismatch
Fix implicit dependencies on es6 lib exposed by node changes
One _big_ script block (since it seems like FS edits are not persistent across steps?)
Fix API baseline paths in script
Limit dispatch triggers
Add new release branch workflow
getDate not getDay, also 1-based months please
Fix initialization error when destructuring from object literal that includes a spread assignment (#36865)
Add buildTsc to preTest for user test runner (#35781)
Include stdout in test worker error messages (#35921)
fix(29565): Add missing super() quickFix errors for constructo… (#36601)
fix(29908): Declare static method/property quickfix can add st… (#36854)
Wrap classes with decorators or static properties in an IIFE, even for ES2015+ (#32011)
Update user baselines (#36801)
Import style punditry (#36814)
Fix organizeImports with type-only imports (#36807)
Exempt ambient private properties from noImplicitAny (#36640)
fix(30003): formatter deletes comments after trailing comma (#36674)
Marked internal createAnonymousType type as allowing undefined Symbols (#36016)
Set correct pos for NamespaceExport (#36794)
Update user baselines (#36796)
Fix renaming an ExportSpecifier name when propertyName is present (#36790)
Update user baselines (#36765)
No template refactor on plain strings (#36785)
Adds puppeteer to test whether typescript.js runs in the browser (#35471)
Fix npm test if os.cpus().length == 1 (#35753)
Add --git-dir and --work-tree to user tests (#35362)
Avoid expensive relationship checking in mapped type member resolution (#36754)
fix(36416): empty import path causes server crash (#36751)
Don't npm install the parent project with no args (#35359)
Fix getTypeAtLocation for `as const` to not issue a diagnostic (#36741)
Merge branch 'Swatinem-separate-nodetypes'
Merge branch 'separate-nodetypes' of https://github.com/Swatinem/TypeScript into Swatinem-separate-nodetypes
Fix get candidate for overload failure checking (#36744)
Merge branch 'master' into separate-nodetypes
Update versionMajorMinor to match package.json
Bump package.json version to reflect reality
Do not report errors when we fail to find a module symbol at an import specifier when invoked via API (#36742)
Error when property is specified more than once via a spread (#36727)
Throw syntax error for `}` and `>` in JSX text (#36636)
Use type-only imports in auto-imports when it would be an error not to, and use auto-imports in “implement interface” fix (#36615)
Allow intersections (and substitutions) to be checks against discriminable unions (#36663)
  Handle walkThroughSnippet:/ and untitled:/ as dynamic files (#36722)
Either clone or pull, don't do both (#35230)
Update user baselines (#36669)
redo #28564 (#36665)
Fix jsdoc comment parsing initial state (#36661)
Support property declarations in jsdoc template generation (#36658)
Cache results of isGenericObjectType and isGenericIndexType (#36622)
Optimize deferred type references (#36607)
Faster exit from isTypeRelatedTo with identityRelation (#36590)
Update user baselines (#36641)
Add vue-next to docker suite (#33865)
Update user baselines (#36617)
Also edit the cherry-pick script to handle non-master base branches while we are here
Patch cherry pick script for new octokit
add support for Lift Template Literal Restriction (#23801)
Fix crash when trying to import a non-exported type (#36619)
Expose hasOnlyExpressionInitializer as a public type guard (#33229)
Add rxjs to the docker suite (#33500)
Drop support for defunct Chakra host (#33797)
Make Response.performanceData public (#36595)
Enable @typescript-eslint/space-before-function-paren, @typescript-eslint/no-unused-expressions (#36569)
De-duplicate indentations in JSX Texts (#36552)
fix(33600): disallow convertFunctionToEs6Class Quick Fix for IIFE (#36580)
Update user baselines (#36578)
Fix contextually typed object literal completions where the object being edited affects its own inference (#36556)
resolvedJSDocType should cache on node, not symbol (#36561)
Fix `export *` that resolves to something type-only (#36558)
Do not adjust location for import/export keywords with more than one possible binding (#36560)
Fix wrong script info used to resolve line/offset for call hierarchy items (#36559)
Support 'find references' on most declaration-related keywords (#36490)
Fix declaration for Array.prototype[Symbol.unscopables] (#36540)
Fix overzealous renaming of emit helpers in es module emit (#36541)
Fix crash in emitTokenWithComment (#36542)
Fixes to handle file names in module resolution watching and createGetCanonicalFileName (#36106)
Filter out private fields in string literal property completions.
Improvements based on @sandersn's notes
Add a similar test for `target.symbol.valueDeclaration`
Avoid testing `isClassDeclaration` if there's no `valueDeclaration`
Fixes JSX attribute escaping when parent pointers are missing (#35743)
fix spelling errors (#36523)
fix(35069): insert blank line after last new import (#36531)
Report config file parsing diagnostics correctly with tsc --b (#36520)
Fix use-before-def errors for ESNext property declarations (#36465)
Fix contextually typed parameter issues (#36476)
Capture fakes.version instead of the current version string in baselines (#36518)
Fix type-only imports in interface 'extends' and import=/export= (#36496)
Actually use the caches resolvedJSDocType (#36516)
Class fields w/esnext+[[Define]]:no shadow error (#36405)
Subtypes of ErrorConstructor extend it (#35549)
@typedef's nested Object syntax disallows type arguments (#36172)
Dont use sourcemap if it contains inlined sources (#36384)
Fix commas in JSON (#36497)
createPrivateIdentifier: names must start with # (#36506)
Add constructor functions to aliasable expressions (#36108)
Nested this container (#36495)
fix(36481): allow renaming private fields (#36499)
Fix potential leaks in checker (#36491)
Make javascript require goto def similar to ts import equals (#36487)
fix(36385): return failed exit code if tsconfig doesn't exist and there are no input files. (#36474)
NoEmit and incremental are allowed with listFilesOnly (#36488)
Merge pull request #36063 from uniqueiniquity/addWeakCompletionProperty
Disallow incremental with noEmit (#36483)
Fix js declaration emit for exporting default which looks like namespace merge (#36482)
fix(33362): 'extract to function' for variable that is assigne… (#36455)
Merge pull request #36383 from uniqueiniquity/redirectInfo
Use deepEqual in tests for clarity
Don’t use 'import =' for auto-import when esModuleInterop is on unless it’s already been done (#36475)
Update config.yml (#36419)
Allow type-only namespace imports in implements clauses (#36464)
Add # to completion trigger character, (#36462)
When looking at outlines for try functions, allow for not finding a child to provide a span when requesting  outlines (#36389)
Type-only auto imports (#36412)
Fix getExpandoSymbol for already-expando symbols (#36457)
fix(36140): handle quotesPreference option in interface implementation (#36398)
Issue better error for exporting primitive type (#36424)
fix(36068): Incorrect quick fix for undeclared private field i… (#36373)
Allow `infer` type variables to have constraints inferred (#32093)
Trampolines for large binary expressions (#36248)
Respond to CR
Remove distinction between CI lint and local lint (#36430)
Handle error reporting of files when new file is created after its opened in editor (#36271)
Add tests
es2018: visit other binding elements when transforming object destructuring with rest (#35872)
Add --force option to npm install commands in dockerfiles (#36431)
Track changes to redirect info
Fix crash on erroneous enum member merged with exported type alias (#36429)
ESNext+[[Define]]: reference to param props illegal (#36425)
Emit statements before super (#36417)
Adds extension recommendation for rbuckton.tsserver-live-reload (#36426)
Fix crash on missing parent pointer in binder when transpiling export as ns (#36387)
Add more detailed log for bad codefix request (#36420)
Update user baselines (#36411)
Handle header comments better by comparing its end line with first node line (#36413)
Add prefix/suffix only to binding element name (#33538)
Consider SymbolFlags.Method as function-esque during js declaration emit (#36274)
fix(lib/es2019): `Symbol.description` may be `undefined` (#36263)
Update user baselines (#36382)
Merge branch 'master' into redirectInfo
Add tests
Disallow 'declare' modifier on private named properties (#36381)
Dont add "use strict" prologue in json emit (#36380)
Update type-only import semantics to allow type queries (#36092)
Produce redirect info about files when requested
noErrorTruncation affects semantic diagnostics (#36306)
Add `as` completions (#36359)
Do not short-circuit module visibility calculation when alias visibility is requested (#36339)
Be more tolerant with private identifier parsing, issue more targeted errors, and support private identifiers in forgotten 'this' codefix (#36188)
Add jest to fp-ts user test (#36360)
Fix local and exported type alias merging (#36237)
Add a list of PR owners for tooling to use (#36357)
Include super.XXX(...) assertion method calls in CFA (#36293)
Completions for `asserts` and `declare` (#36355)
Adds support for showing default exports in the navtree (#35477)
feat(29624): better errors for non-exported types (#36187)
forceConsistentCasingInFileNames affects module resolution (#36334)
Update LKG.
resolveJsonModule affectsModuleResolution (#36290)
experimentalDecorators and emitDecoratorMetadata affect builder state (#36297)
useDefineForClassFields affects emit (#36308)
Fix isProgramUpToDate when changing rootFileNames (#36011)
Remove the compiler diag 1360 after it got missed in #35751 (#36332)
remove duplicate message (#36125)
feat(36231): Improve message for "Remove declaration for: ..." (#36283)
Improve diagnostics and add code fixes for top-level await (#36173)
fix(34621): show suggestions in class property initializer (#35999)
fix(35043): TS Server: references does not mark isDefinition o… (#36051)
fix(36023): fix crash in document highlight service (#36233)
Fix for issue #32528: Prevent meta property from appearing twice (#35844)
Improve variance measurement (#36261)
LEGO: Merge pull request 36253
LEGO: check in for master to temporary branch.
Instead of checking if file exists before file read, handle exceptions from file read (#36244)
Fix erroneous optional chain narrowing (#36145)
Handle untitled files from vscode which are of format: untitled:^Untitled-1 (#36240)
Codefix: Don’t return a `fixId` if there’s definitely nothing else that can be fixed (#35765)
fix(35954): Change spelling for private field incorrectly fixes to a string property (#36079)
fix(35944): show spell checking quick fix for non-existent private named property access (#36195)
Move individual duration properties into a `performanceData` object (#36210)
importsNotUsedAsValue affects semantic diagnostics (#36001)
Fix completions triggered on existing private identifier property access (#36191)
Use fs.existsSync to check for cancellation (#36190)
sys: Use readdir withFileTypes option to skip lots of stat syscalls (#35286)
Revert "Add related diagnostic to "used before defined" if type is a function that returns a union with undefined (#33171)" (#35751)
remove private named properties from rest and spread types (#35950)
throw an error when no default export present (#35815)
Update LKG (#36164)
Fix lints
Handle Identifier declarations in getDeclarationSpaces (#36136)
Use watch invoked with `node_modules/.staging` as watch for refreshing complete node_modules, so that npm install is reflected correctly (#36039)
Handle invalid package.json typings fields when generating specifiers (#36137)
Remove the check that if base file name starts with ^ is dynamic file name since those files can exist (#36109)
Allow references to uninitialized ambient properties (#36112)
Check combined intersection properties against target index signatures (#35143)
Get jsdoc host from chained assignment (#36111)
Remove CFA discriminant check restrictions (#36114)
Correctly resolve tags for function overloads (#30253)
Fixes broken emit with useDefineForClassFields + private field (#35898)
Fix crash in codefixes re: braces of class body (#36087)
Update user baselines (#36046)
Fix narrowing of optional chains (#36089)
Fixed unreported strict property initialization violations. (#35891)
Report time spent in updateGraph (#35675)
Tweak the test and add more duplicate name assignment tests
Allow destructuring the same property multiple times
Disable declaration emit for json files (#36066)
More actionable "must have annotation" message (#35839)
Parse error on private identifier optional chain (#35987)
Make unchecked property assertion optional
Resurrect `SuppressAnyReturnType`, but make it used only at the toplevel
Remove `SuppressAnyReturnType`
Fix `signatureToSignatureDeclarationHelper`
Add test
Rename new property
Add property for unchecked completions
fix(31909): show suggestions for second type argument of generic (#36024)
Do not omit the anyFunctionType from intersections (#35658)
Renamed references to 'configurePrerelease'. (#35997)
Add `s` to `importsNotUsedAsValue` (#36037)
Contextually typed binding element initializers (#35855)
Fix ThisParameterType<T> type (#36013)
CustomElementConstructor: should be construct signature (#36030)
Fix `getEffectiveTypeAnnotationNode`
Shorten test baseline names (#35993)
Type-only imports and exports (#35200)
Add assumeChangesOnlyAffectDirectDependencies as a option to skip checking and generating .d.ts files for files indirectly importing affected file (#35711)
feat(lib/es2020): Add `Promise.allSettled(…)` (#34065)
Fix cmdline aliases specs
fix(35179): formatter incorrectly remove spaces (#35979)
Fix type parameter leak (#35949)
Merge pull request #30565 from D0nGiovanni/m-template-literal-2
Fixed find all references for private identifiers. (#35887)
Cleaned up refactoring names, descriptions.
Fix error on `interface`s in `.js` files (#35969)
Remove refactoring from template expression to string concatenation.
Fixed outlining spans for chained method calls. (#35860)
Make `checkPropertyNotUsedBeforeDeclaration` ignore properties of properties
Reuse "getBestMatchingType" logic during elaboration to allow for more specific elaborations (#35278)
Update DOM from TSJS-lib-generator (#35938)
Disable timeout when debugging
Private named instance fields (#30829)
Add es2020 transformation (#35518)
show an error if --showConfig is enabled and tsconfig.json does not exist (#35723)
fix(35474): formatter incorrectly adds space after increment (#35550)
Support bigints in ES2020 (#33874)
Add base constraint completions for JSX attributes (#35803)
Add ES2020 to diagnostic messages (#35814)
fix file extension (#35825)
Add support for Call Hierarchies in language server (#35176)
Add top-level await for esnext and system modules (#35813)
Fixed lints.
Merge remote-tracking branch 'origin' into convert-to-template
Add module: es2020 (#33893)
Implement export as namespace from (#34903)
Increase selectivity of subtype relationship for signatures (#35659)
Readonly support for jsdoc (#35790)
Fix JSDoc param type completions when name hasn’t been written yet (#35787)
Update user baselines (#35791)
remove JSDOC object->any rewrite for noImplicitAny (#35661)
Ignore @private/@protected on constructor functions (#35782)
Correctly set filesByName map when reusing program to ensure it is same as old (#35784)
Move executeCommandLine ambient code into tsc (#35788)
Filter out self-fulfilling completions (#35709)
Use resolvedPath consistently in the builder (#35757)
Fix `scripts/hooks/post-checkout`
Merge pull request #35742 from uniqueiniquity/addPositionAssert
Update user baselines (#35756)
Add jsdoc support for @public/@private/@protected (#35731)
Update user baselines (#35755)
Remove unnecessary internal tags, handle bad input
Do not list output files that just change their modified time when using --listEmittedFiles (#35714)
Baselining tsc `--watch` output just like `tsc` baselines for easier updates (#35710)
Fix implement interface codefix for synthetic member symbols (#35718)
Refactor to make failure messages more consistent
Fix decoding of HTML entities in TSX/JSX (#35739)
Add asserts to narrow down position issue
Properly reflect CFA effects of return in try or catch blocks (#35730)
Fix completions when the ts installation and project are on two different windows drive (#35733)
Add `ignoreInterpolations` util to fourslash for fuzzy diagnostic matching (#35652)
Fix formatting scanner on multiline JSX attribute strings (#35705)
Update user baselines (#35687)
Update user baselines (#35685)
Don’t offer import fix for members of arrays or classes (#35635)
Update user baselines (#35671)
Update user baselines (#35665)
  Do not write files directly from builder when noEmitOnError is true  (#34832)
Update user baselines (#35662)
Update user baselines (#35643)
Fix33448 (#35513)
Fix binding of this-assignments w/computed properties (#35639)
Handles different references and renames involved with import export and import type node (#34813)
Dedent external runner message text
Add watchOptions to tsconfig and allow supplying them on command line as well (#35615)
Open bigger set of configured projects when opening composite project for operations that operate over multiple projects like rename (#33287)
Improve some completions on generic object literals (#34855)
Update user baselines (#35618)
Handle consistent file name during editor and tsc --watch scenarios (#34622)
Add ts namespace reference to tsc, since it now doesnt have one
Rename debug.ts so its name differs from its namespace (#35596)
Move executeCommandLine.ts into its own project (#35595)
Issue/34870 (#35586)
Fix spelling codefix for optional chain property access (#35583)
Sort extract constant above extract function (#35580)
Move most harness globals into namespaces (#35530)
Update user baselines (#35535)
Update user baselines (#35532)
Update user baselines (#35500)
Update user baselines (#35519)
Don’t auto-import undefined (#35504)
Move codefix types into services/types.ts (#35506)
test(ts-toolbelt): recursive iteration types (#33810)
Make no inferences from binding patterns with no defaults (#35454)
Use namespace import for esnext when esModuleInterop is off (#35475)
Remove unneeded Array and Promise JS rewrites (#35482)
Update user baselines (#35490)
Add nested global member creation to shim (#35473)
Update config.yml (#35388)
Update user baselines (#35450)
Remove redundant checker functions and use patterns more friendly to modules (#35399)
Remove duplicate definition of `Push` (#35397)
Update user baselines (#35436)
Emit unused identifier suggestion diagnostics in declaration files and ambient nodes (#35119)
Update user baselines (#35401)
Fix `getTypeFromJSDocValueReference`
Don't filter away private completions if in the same context
Fix build from incomplete merge
Fix compileOnSaveEmit when using source of project reference redirect with --out (#35335)
Refactor: No more than 1 namespace declaration per file (#35373)
Fix control flow analysis for break/continue with label (#35377)
Handle when output file would be in subFolder specified by outDir/declarationDir (#35366)
Improve control flow type caching (#35332)
Create returnOnlySignature only when inferences will possibly be made (#35173)
assign error to method definition node if a return type is empty (#35309)
When calculating spreads, merge empty object into nonempty object to … (#34853)
Normalize type references before relating them (#35266)
Emit defineProperty calls before param prop assignments (#34987)
useDefineForClassFields skips emit of ambient properties (#35058)
Clean up error messages for using TypeScript syntax in JavaScr… (#35254)
Actually use the moer complete update function in visitEachChild (#35301)
Add fp-ts to .gitignore (#35295)
Scan types of `yield` expressions in classes too
Fix `getIntrinsicAttributesTypeFromJsxOpeningLikeElement`
Allow `--inspect=port` in `gulp runtests`
Fix azure-sdk dockerfile for latest rush
Add fp-ts to user tests (#35249)
Allow references to globalThis to be made in declaration emit (#35279)
Have definite assignment assertions on property signatures mark them as typescript (#35270)
Update user baselines (#35275)
Add inference priority level for conditional types in contravariant positions (#35199)
Update user baselines (#35272)
Update user baselines (#35271)
Fix printing and emit for definite assignment assertions (#35095)
Map stale empty object type in union into fresh empty object type after spread is complete (#34839)
Update user baselines (#35251)
Make `getSourceFileToImportFromResolved` prefer files in `program.getSourceFiles()`
Update user baselines (#35218)
Fix the usage of pattern matching in module resolution for check of hasZeroOrOneAsteriskCharacter (#35209)
Fix crash with Object.defineProperty for imported alias (--allowJs) (#35198)
DOM update 2019-11-19 (#35207)
Add preceding semicolon on await insertion when parentheses are included (#34627)
Fix check for `get`/`set` recommendation (#34885)
Revert "Skip costly tests" (#35197)
Improve positioning of the implement interface codefix (#34928)
More tests for super.method call chain, improve vary-by (#35013)
fix emit for delete on optional chain (#35090)
Properly strip readonly from rest argument types (#35169)
Adds back the script to request a playrgound build (#35168)
fix: mardkown link syntax error (#35123)
Fix excess property checking for unions with index signatures (#34927)
Update LKG (#35128)
Fix #35060 (#35065)
disallow 'await' and 'yield' in property and enum member initializer (#34892)
optimize transform of optional chaining and nullish coalescing (#34951)
Support dynamic file names with project root path (#35111)
Adds 'did you mean' to the CLI args parser (#35063)
Update user baselines (#35075)
Properly analyze switch statement bypass control flow (#35087)
Do not allow freshness to move errors out of the current file, ensure json documents are deeply unfreshened and fully widened (#35048)
Fix import type resolution in jsdoc, mark 2 (#35057)
strip QuestionToken from MethodDeclaration and PropertyDeclaration emit (#34954)
Fix chalk import (#35040)
Defer switch exhaustiveness checks (#35000)
More version sanitization
Don’t assume importing some JSON means you want everything imported with .js extensions (#34961)
Add "auto" to importModuleSpecifierPreference (#34981)
Fix missing semicolon
Strip more timestamps and versions from docker logs to better handle the more verbose logging from office-ui-fabric
Fix `isInJsxText` after JSXOpeningElement with type arguments (#34958)
Fix up some of the ignore files, and removing the create language service script (#33684)
Fix control flow analysis in try-catch-finally (#34880)
Fix switch statement exhaustiveness checking (#34840)
Properly instantiate object types created from rest parameters (#34826)
(34894): Wrong information in error message for overridden acc… (#34901)
Add related diagnostic to "used before defined" if type is a function that returns a union with undefined (#33171)
Use empty object for invalid package json contents instead of undefined (#34906)
Improve error message when compiling a .js file (#34861)
Propagate 'undefined' instead of the optional type marker at an optional chain boundary (#34588)
Remove the ping for playgrounds on TS deploys (#34862)
Update user baselines (#34851)
Update user baselines (#34845)
Exclude types originating in literals from recursion depth limiter check (#34742)
add template literal spans (#34699)
Update user baselines (#34838)
Update user baselines (#34820)
Report generic rest parameters as unreliable variance positions (#33020)
Add circularity checking during deferred type argument creation (#34791)
Generate more correct property name nodes in declaration emit (#34741)
Fix alias naming and structure bugs in js declarations (#34786)
Evaluate RHS of binding/assignment pattern first (#34806)
Add isIntersectionConstituent to relation key (#34789)
JSDoc type reference understands require with entity name (#34804)
Update user baselines (#34759)
This handles when packages are symbol links in mono repo like scenarios to use source files instead of output d.ts from project reference (#34743)
Fix checker handling for empty type argument lists (#34790)
Fix a crash when transforming functions in modules. (#34513)
Fix incorrectly looking for position in call/new expression arguments when looking for indentation of type arguments (#34779)
Update issue reports agian (#34768)
Update issue templates (#34767)
Adds accept header to the dispatch request when requesting a playground build of monaco (#34763)
Fix extract type on JS function params (#34745)
Fix type reference to merged prototype property assignment (#34764)
make `globalThis` have an empty `declarations` (#34561)
Show all matching enum flags in debug flag formatter (#34689)
Fix error when exporting const enums (#33060) (#34721)
Include *.json in the root files if they are specified as root (#34676)
Fix typo in watchMode.ts (#34701)
Update inconsistent use of the word multiline/multi-line in test cases (#34733)
Update CONTRIBUTING.md
Fix reachability analysis for ?? operator (#34702)
Avoid a crash with `@typedef` in a script file. (#33847)
Fix regression in mixin emit by removing unneeded line of code (#34715)
Fix expando handling in getTypeReferenceType (#34712)
Restore delayed merge check to getTypeFromJSDocValueReference (#34706)
Do not consider element accesses which are neither statically bindable nor late bound as special assignments (#34679)
getTypeFromJSDocValueReference: handle import types (#34683)
Add GitHub Actions (#34614)
Merge pull request #34648 from orta/readme_links
Prioritize loading plugin from probeLocations over peer node_modules
Merge pull request #34659 from amcasey/FARGlobalThis
Don't assume that all symbols have declarations
Fix crash in assigning function with this ref to alias (#34650)
Treat any mix of element/prop access as declaration in JS (#34649)
Update the README links
Merge pull request #34631 from amcasey/ComputedPropName
Merge pull request #34521 from amcasey/LazyDirectoryCreation
Handle undefined from getPropertyNameForPropertyNameNode
Use longer lambda parameter names
Change `master` branch version to 3.8 (#34629)
Accepted baselines.
Update version to 3.8.
Address more potential `this` issues
Fix undefined `this`
Merge pull request #34607 from microsoft/fix33490
Merge pull request #34597 from microsoft/optionalChainControlFlow
Extend the correct tsconfig.json. (#34615)
Extend the correct tsconfig.json.
Ensure export= symbol from JavaScript always has a valueDeclaration (#34553)
Accept new baselines
Add regression tests
Fix type inference regression
Accept new baselines
Add tests
And a few more
Merge pull request #34574 from orta/add_docs_tsserver_debug
Improve the launch template
Add option to configure automatic optional chain completions (#34552)
Ensure original files are included in tsconfig.release.json (#34584)
[WIP] Improve optional chaining checker performance (#33794)
Handle more cases
Ensure functions that have prototype properties assigned by Object.defineProperty get marked as classes (#34577)
Extend tsconfig.release.json from the sibling tsconfig.json to ensure files aren't forgotten.
Don't immediately return in getMemberSymbols.
Bind @class in the right place -- bindWorker not bindChildrenWorker (#34575)
Fix crash in expando assignment to alias (#34566)
Emit computed property temps even w/o init w/useDefineForClassFields (#34406)
Perform checks prior to calling `addTypeProperties`.
Merge pull request #34496 from microsoft/fix34272
Optional chain control flow analysis fixes
Merge pull request #33938 from uniqueiniquity/classifcationAssertion
fix assertion condition
Remove redundant and misplaced perfLogger startup statement (#34551)
Fix stack overflow in circular assignment declaration (#34543)
Add completion test for partial generic object (#34559)
Merge pull request #34505 from amcasey/ListFilesOnly
Accepted baselines.
Update comment.
Accepted baselines.
Add user preference to the protocol.
Added option 'includeAutomaticOptionalChainCompletions' to disable '?.' completions.
Delete redundant test
Added test.
Dropping assert for 3.7
Rewrite tests
Add additional properties to switch declaration
Consolidate checks in emitFilesAndReportErrors
Add listFilesOnly command-line option
Extract shared helper
LEGO: Merge pull request 34549
LEGO: check in for master to temporary branch.
Merge pull request #34527 from microsoft/rootDir
Fix auto-imports from auto type acquisition definitions (#33766)
Accept module resolution trace baseline where baseUrl is specified as "../" in tsconfig
Merge branch 'master' into rootDir
Merge pull request #34525 from microsoft/testChanges
Merge branch 'master' into testChanges
Merge pull request #34487 from microsoft/skipTsBuildinfoEmit
Fixed scenario names
Fix scenario name
Feedback on formatting
Add test with incremental program with only d.ts files
Some changes to incremental tests
Update another writeFile call-site
Resolve more jsdoc value references as types (#34515)
Make ImageData(Uint8ClampedArray)'s 3rd param optional (#34519)
Fix quick info for methods whose contextual type is a mapped type property (#33930)
Fix completions of optional properties in generic positions (#33937)
factory: parenthesize for-of expression when necessary (#34229)
Merge pull request #34524 from orta/fix_32675
Make sure that global module re-exports are short-cutted to be added to completions
Merge pull request #34530 from connorjclark/patch-1
Update bug template to link to nightly playground
Dedupe inherited jsdoc comments (#34522)
Fix lint rules
Use getNormalizedAbsolutePath to combine basePath and config value for file names Fixes #34502 by being consistent in path normalization
LEGO: Merge pull request 34526
LEGO: check in for master to temporary branch.
Add test for #34502
Sample to baseline output
Does not add a duplicate completion when offering an export which was re-declared as a global - fixes #32675
outFile to baseline
rootDir tests are baselined
resolveJsonModule as baseline test
transitiveReferences as baseline
Merge baselining and tsc logic into one
missingExtendedConfig to baseline test
empty files to baseline test
Write ExitStatus as enumng-rootDir-is-in-the-tsconfig.js
Inline function to tidy up control flow
Stop pre-emptively creating directories
factory: correctly parenthesize conditional head (#34227)
LEGO: Merge pull request 34514
Demo as baseline test instead
Convert some more tests into baselines
Some changes to incremental tests
LEGO: check in for master to temporary branch.
doc(lib/es5): Fix grammar in DateConstructor.UTC documentation (#34509)
Do not write build info if there are no files to emit
Merge pull request #34495 from microsoft/forceDts
Merge pull request #33921 from sQVe/refactor/correct-misspelled-response
refactor(spelling): correct misspelled response
Update user baselines (#34411)
Merge pull request #34365 from elibarzilay/fix-exit-code-on-bogus-build-file
Remove property-override-method error (#34494)
Restore 'type' and 'namespace' to All completion filter (#34491)
Fix crash when exporting+aliasing globalThis inside `declare global` (#34408)
Better format for the exit code test
Fixes missing error exit code when a bogus input file is specified
Typofix: `..._OutputsSkupped` -> `..._OutputsSkipped`
Merge pull request #34212 from microsoft/fix34021
Accept new baselines
Properly attach alias symbol to `readonly T[]` types
Add forceDtsEmit flag to getEmitOutput Fixes #33936
Accept new baselines
CR feedback + Consistent error spans on case/default clauses
Do not write build info if there are no files to emit
Merge pull request #34403 from microsoft/commandlinePath
Add test for #30457
Make sure commandline options are absolute paths so they dont conflict with tsbuildinfo paths Fixes #33667
Add test for --tsbuildinfo not as absolute or relative path
Update Math.round in es5.d.ts (#33920)
Update user baselines (#34345)
Allow inferFromUsage to do auto-imports (#33915)
Update DOM from TSJS-lib-generator (#33753)
Accept new baselines
Add tests
Use control flow analyzer for switch case fallthrough checks
Update user baselines (#34112)
LEGO: Merge pull request 34111
LEGO: check in for master to temporary branch.
Update user baselines (#34002)
Add assertion when classification has unexpected length
Merge pull request #33647 from microsoft/defaultProject
Merge pull request #33883 from microsoft/revert-32887-incrementalNoEmit
Use correct default project for file if that project is opened at later time Fixes #31926
Merge pull request #33906 from falsandtru/github
fix #33427 (#33486)
Handle when import alias has to parent (therefore is synthetic module symbol) (#33813)
Merge pull request #33914 from amcasey/ConflictMarker
Update issue templates
Handle string literals in merge conflict regions
Merge pull request #33831 from microsoft/falseAssertions
Update user baselines (#33909)
Update user baselines (#33905)
Fix noImplicitAny check on ambient private getters (#33896)
LEGO: Merge pull request 33904
LEGO: check in for master to temporary branch.
Update user baselines (#33887)
Revert "Disallow incremental with noEmit"
Include project reference in release config so LKG build works (#33864)
avoid space before dot question (#33840)
Add external mapShim/debug modules (#33712)
Update user baselines (#33838)
'amd' missing from error message for error TS1323 (#33803)
More succinct
Fix bounds check
Accept new baselines
Update tests
Add tests
Merge branch 'master' into falseAssertions
Merge pull request #33821 from microsoft/fix33806
Merge pull request #33825 from mrnugget/patch-1
Accept new baselines
Add tests
Support typeof and instanceof
Change link to tutorial in README
Accept new baselines
Add tests
Update user baselines (#33817)
Accept new baselines
Update tests
Reflect CFA effects of optional chains in equality checks
LEGO: Merge pull request 33820
LEGO: check in for master to temporary branch.
Fix for incorrect 'this' type for optional call (#33799)
Update user baselines (#33816)
Code following truthiness assertion with false argument is unreachable
Update user baselines (#33801)
Detect unbindable exports before setting CommonJS module indicator (#33784)
Merge pull request #33804 from a-tarasyuk/feature/update-eslint
update eslint. fix eslint @typescript-eslint/no-unnecessary-type-assertion errors
'amd' missing from error message for error TS1323
Update user baselines (#33775)
LEGO: Merge pull request 33793
LEGO: check in for master to temporary branch.
Add template .vscode/* settings, ignore real ones (#33758)
LEGO: Merge pull request 33789
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 33782
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 33776
LEGO: check in for master to temporary branch.
Update user baselines (#33773)
Update user baselines (#33772)
Fix crash in transformations (#33768)
Revert old lkg and re lkg (#33769)
Backfill TypeReference.typeArguments in the API (#33714)
Update user baselines (#33740)
LEGO: Merge pull request 33759
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 33745
LEGO: check in for master to temporary branch.
Improve error message when reserved word is used as identifier (#33702)
Update LKG (#33710)
Fix the third crash in the chrome user suite test by remembering to pass excludeThisKeyword (#33711)
Merge pull request #33709 from microsoft/moveMessageNumbers
Ensure prepend texts are set when skipping internals (#33694)
Update baselines.
Change error codes.
Better error message for mistaken import (#33706)
Rename this function so it stops shadowing a local we use elsewhere (#33692)
Better error message for mistaken import (#40)
LEGO: Merge pull request 33705
LEGO: check in for master to temporary branch.
Merge pull request #33681 from microsoft/autoTypeReference
Improve error message when reserved word is used as identifier
Fixes binding well known symbol assignment via element access (#33687)
nullish coalescing commit (#32883)
fix (lib): Loosen predicate return types of typed arrays, adapt docs (#31343)
Fix crash in contextual typing of defaulted element access declarations (#33686)
Add error message for set accessor vsibility issues (#33683)
Allow special element access assignments to create declarations (#33537)
Merge pull request #33584 from orta/small_ts
Add support for Optional Chaining (#33294)
Merge pull request #33678 from microsoft/fix33617
Implement declaration emit for accessors in the js declaration emitter (#33649)
Merge pull request #33622 from microsoft/fix33580
Fix issue when types installed after watch/editor is opened for auto type reference that is for global types not being detected Fixes #32285
Accept new baselines
Add regression tests
Properly handle recursive type references in type inference
Merge branch 'small_ts' of https://github.com/orta/TypeScript into small_ts
Remove the post-publish script
Accept new baselines
Update tests
Accept new baselines
Fix error message
Merge pull request #33642 from microsoft/undoListFiles
Revise error messages + related spans + no errors on never-returning functions
Enable forceConsistentCasingInFileNames by default in newly generated configs (#39) (#33614)
Add test when file is part of non default configured project before the default one
More refactor
Refactor
Merge pull request #33636 from microsoft/rootReferenceRedirect
Update user baselines (#33635)
Undo showing redirected files in --listFiles
Support some late-bound special property assignments (#33220)
Updated: Only auto-import from package.json (#32517)
Add support for capturing cpu profiles into tsc itself (#33586)
Respect //@ts-nocheck in TS files (#33383)
Better template literals support in checker (#32064)
Fix the issue when file is attached to project because its a root file name but program contains instead its d.ts Fixes #33323
Add the test that fails with find all references
Prevent collision of imported type with exported declarations in current module (#31231)
Handle alias symbols in getTypeOfDottedName
Update DOM (#33627)
Merge pull request #33625 from m-henderson/mh/33603-error-message-for-missing-member
Merge branch 'master' into mh/33603-error-message-for-missing-member
update message, generate diagnostics, update src and accept baselines
Merge branch 'master' into small_ts
Allow `allowJs` and `declaration` to be used together (#32372)
Accept new baselines
Add tests
Error on assertion and non-returning function calls that aren't CFA-ed
Enable eslint cache (#33619)
Add useDefineForClassFields flag for Set -> Define property declaration (#33509)
Add semicolon preference to formatter options (#33402)
Merge branch 'master' of https://github.com/microsoft/TypeScript into small_ts
Rename the smaller build to '@typescript/language-services' and have a separate build step for creating and publishing vs configuring the build
Merge pull request #33567 from microsoft/resolution
Merge pull request #33050 from microsoft/recursiveTypeReferences
Merge pull request #33372 from m1gu3l/patch-1
Merge master
Update the baselines
Merge pull request #33178 from jwbay/nonNullableCallSignaturesTreeWalk
Merge pull request #33598 from microsoft/fix33582
Add tsc baselining test for scenario that changed.
Merge master
Accept new baselines
Add regression test
Limit this.foo(...) reachability checks to explicit this types
Accept change in existing baseline
Merge pull request #33593 from typescript-bot/user-update-Microsoft-20190803
Merge branch 'master' into resolution
Merge pull request #33566 from microsoft/baselining
Merge branch 'baselining' into resolution
Update user baselines
Merge pull request #3 from typescript-bot/user-update-jwbay-20190801-nonNullableCallSignaturesTreeWalk
Update emitting timestamps during testing
More work on generating a small typescript build
Merge branch 'baselining' into resolution
Accept the baselines
Remove all baselines
Merge branch 'master' into baselining
Merge pull request #32028 from microsoft/referencesPrototypeSourceFile
Accept API baseline changes
Reword the option description per feedback
Update the error summary reporter to take sys as parameter
Add getTypeArguments method to TypeChecker interface
Merge branch 'master' into recursiveTypeReferences
Improve the gitignore / npm ignore
Add a command for stripping the dependency down
Merge pull request #33581 from microsoft/fix-lint-20190924
Fix after merging latest baselining branch
Merge branch 'baselining' into resolution
Make time and tick local to test case so it doesnt affect the baseline
change eslint-disable rule name
Fix that works with both LKG and built compilers
Fix linting issue
try eslint-disable-next-line instead
Fix lint on master
Merge pull request #33578 from typescript-bot/user-update-Microsoft-20190802
Merge pull request #33263 from microsoft/infer-from-usage/similarity-to-builtins
Merge branch 'master' into recursiveTypeReferences
Update user baselines
Accept new baselines
Add tests
Merge pull request #32695 from microsoft/assertionsInControlFlow
Cache propagating variance flags in the relationship cache (#32225)
Hoist and distribute type parameter constraints over type parameters … (#33453)
Introduce flattened error reporting for properties, call signatures, and construct signatures (#33473)
Relax the constraints of isValidBaseType to allow base types to be constructor types (#33146)
use forEachEntry
Merge pull request #33477 from Nathan-Fenner/error-on-extra-jsx-prop
Merge pull request #33563 from orta/remove_gulpfile_errors
Update user baselines (#33557)
Add doc comments for fileExists and directoryExists implementation
Update user baselines
Sort the paths for module specifier by closeness to importing file path Fixes #32970
update missing baselines
Remove errors from the gulpfile
Fix linting issues
Include type operators in aliased type checks
Merge branch 'master' into recursiveTypeReferences
Merge pull request #33228 from microsoft/fix32976
Merge pull request #33057 from jablko/patch-2
Fix forEachChild
Merge branch 'master' into assertionsInControlFlow
Accept new baselines
Add tests
Show redirected files in --listFiles
Add test that fails to emit declarations correctly
Add test to verify tsc like command line input
Expose method to baseline fs
Merge pull request #33510 from microsoft/controlFlowLoopCaching
Merge pull request #33536 from orta/ping_for_playgrounds
check for SyntaxKind.JSXAttribute instead of located-ness of name prop
Fix grammar issues on CONTRIBUTING.md (#33535)
When a packed version of TypeScript ios requested, also send a request to create a build of monaco for the playground
Minor simplification
Update user baselines (#33534)
Cheaper caching scheme
Merge pull request #33380 from microsoft/isolatedModules
Update user baselines (#33508)
Fix ESLint extension config (#33501)
Allow readonly arguments to Promise.all(), etc.
Merge pull request #33503 from microsoft/moreApisForBuild
Enable caching for control flow paths that precede loops
report extraneous jsx attribute error on attribute name instead of entire attribute assignment
report error on extra jsx prop instead of component name
Properly handle try-finally statements in isReachableFlowNode
Add output file names api for supporting ts-loader
getConstraintDeclaration gets the first declaration with a constraint… (#33426)
Reintroduce cloneInferredPartOfContext to fix overloaded inferences with returnMappers (#33478)
Narrow unknown under inequality when assumed false (#33488)
Attach flow nodes only when allowUnreachableCode !== true
test: update error log
fix: change error1023 key name
fix: permit string/number literal in union type
fix: add "either" in code 1023 message
Fix incorrect parameter types for AsyncIterator next/return (#33354)
Reverse mapped types should have inferable indexes if their source had an inferable index (#33450)
Handle parentless nodes in isParameterPropertyDeclaration (#33472)
Handle parentless nodes in isParameterPropertyDeclaration
Merge pull request #33469 from amcasey/gh33332
🤖 User test baselines have changed
Make extractSymbol explicitly drop JSDoc nodes
Accept new baselines
Added example of sortFn
Cache last isReachableFlowNode result + switch statement CFA fix
Merge pull request #33157 from fuafa/convert-const-to-let
fix conflicts
fix typo
Merge pull request #33447 from typescript-bot/user-update-Microsoft-20190801
Accept new API baselines
Ignore references in with statements in getTypeOfDottedName
Report grammatic and type-based unreachable code errors in the same way
Revert "More efficient scheme for caching flow node reachability"
More efficient scheme for caching flow node reachability
Update user baselines
Merge pull request #33418 from Kingwl/duplicate_async
Fix linting issues
for-in or for-of expression is evaluated before loop back edge
Fix inference circularity error triggered by exhaustive switch analysis
Fix call to Debug.fail in compiler
Accept new baselines
Further CFA handling of exhaustive switch statements
Treat exhaustive switch statements like non-returning functions in CFA
Separate Tokens and Identifiers from other Nodes
Force a gc before printing diagnostics
Remove all submodules - just force clone and reset on run instead (#33425)
Update user baselines (#33411)
Use isReachableFlowNode to check for implicit return
Add build-eslint-rules to npm prepare script (#33417)
Dedicated isReachableFlowNode function to determine reachability
fix duplicate async modifier codefix
Use declared type for references in unreachable code (again)
Merge pull request #33400 from microsoft/make-perf-count-functions-public
Make perf count functions public
Merge pull request #33390 from Swatinem/identifiers-nan
Fix `Identifiers: NaN` diagnostic when having JSON SourceFiles
Even more renaming
Merge pull request #32965 from ajafff/ts-in-js
Update baselines with any[] inferences
Merge branch 'master' into infer-from-usage/similarity-to-builtins
Revert "Use declared type for references in unreachable code"
Use declared type for references in unreachable code
Fixed typo
Show more items in the navbar (#33040)
Merge pull request #33336 from JoshuaKGoldberg/enum-syntax-error-specifics
Merge pull request #33300 from JoshuaKGoldberg/too-large-integer-bigint-codefix
Merge pull request #33358 from microsoft/dtsOnlyEmit
Handle --isolatedModules and d.ts emit in the builder
Add failing test cases for isolatedModules after enabling declaration emit
Allow .d.ts with --isolatedModules Fixes #29490
Merge branch 'master' into dtsOnlyEmit
Fix typo
Added '}' to allowed characters in diagnostic message
Merge branch 'master' into referencesPrototypeSourceFile
Merge branch 'master' into ts-in-js
Merge pull request #32345 from dragomirtitian/GH-32325-improve-const-function-extraction
Merge pull request #33199 from jack-williams/fix-32809
Update src/services/refactors/extractSymbol.ts
Better Array.sort compareFn docs
Merge branch 'master' into assertionsInControlFlow
Accept new baselines
Merge pull request #31777 from a-tarasyuk/feature/eslint
Address CR feedback
Assume void variables are initialized
Do not emit .js files if only d.ts file will be impacted.
update eslint-formatter-autolinkable-stylish
LEGO: Merge pull request 33343
LEGO: check in for master to temporary branch.
Accepted a few more baselines, why not
Added more helpful syntax error for enum member commas
Separate emitOnlyDtsFiles and forcing dts emit (for builder signature detection where we want it irrespective of settings)
Baseline emitted files that are written even if same file contents
Baseline tsbuild info section files from written files
Get the last output from the written files
Use clean and written files to verify the tsbuild incremental compilation = clean build compilation
Refactor to write baseline of sourcemaps that are written
update typescript-eslint to the latest version
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
Update user baselines (#33322)
LEGO: Merge pull request 33324
LEGO: check in for master to temporary branch.
Added explicit check for scientific notation
Added codefix for numeric literals >= 2 ** 53
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
LEGO: Merge pull request 33292
LEGO: check in for master to temporary branch.
Add test + reshuffle/rename new code
Update user baselines (#33281)
Add heuristic for extracting irreducible `null` and `undefined` types from intersections of unions (#33150)
Renames and more cleanup
Tonnes of cleanup
Fallback type is always any now
Infer void from expr statement usage, not calls
Merge branch 'master' into referencesPrototypeSourceFile
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
Merge pull request #32266 from fuafa/properties-priorities
Update user baselines (#33261)
Fix smart selection bug with TemplateTails (#33108)
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
Update user baselines
Merge pull request #33252 from microsoft/fix33131
fix eslint errors
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
Fix lint error
Mark deep indexed access comparisons as expanding (#33144)
Add browser field entries for all require calls in sys.ts (#33242)
Merge branch 'master' into fix33131
Accept new baselines
Add regression test
Accept new baselines
Make lower priority inference when entire source is matched in target
Elevate mapped types over type parameters in the same way as naked type parameters in intersection inference prioritization (#33223)
Ensure that TS can run in a browser by checking for a process obj before using it in the perf logger (#33141)
someTypeRelatedToType now passes isIntersectionConstituent (#33213)
Bind typedef/enum on all assignment decl kinds (#33240)
Handle browserify-ignored module result for etw logger (#33225)
Merge branch 'master' into infer-from-usage/similarity-to-builtins
Update user baselines (#33238)
Merge branch 'feature/eslint' of https://github.com/a-tarasyuk/TypeScript into feature/eslint
fix eslint errors
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
Accept new baselines
Add regression tests
Accept new baselines
Update user baselines (#33212)
Fix visitLexicalEnvironment to properly merge hoisted declarations (#33219)
Don't instantiate-in-context-of when inferring to type variable
Merge pull request #33216 from microsoft/transpileIncremental
Value for transpile option in CommandLineOption
Fix transpiling when options specify incremental or tsbuildinfofile Fixes #33184
Merge branch 'master' into infer-from-usage/similarity-to-builtins
update typescript-eslint, eslint-plugin-jsdoc, del. remove @types/del
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
LEGO: Merge pull request 33194
LEGO: check in for master to temporary branch.
Only error when testing functions that are not used in the following block
update eslint, typescript-eslint, eslint-plugin-jsdoc
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
Flag non-nullable values with call expressions in `if` statements as errors
Accept new baselines
Tweak isAliasedType
Handle seenEmittedFiles which was not being set when emit of a file was complete (#33145)
Fix the semantic diagnostics caching in builder to handle conversion from relative to buildInfo to absolute path (#33168)
Add type parameter inference
Update user baselines (#33162)
Merge pull request #33148 from minestarks/formatting-object-literals
Accept new baselines
Defer resolution of type arguments in aliased type references
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
Add convert const to let
Fixes #32923
Merge pull request #33124 from armanio123/FixGotoMultipleFile
Turn on findBuiltinTypes
Better outlining spans for prototype methods (#32782)
Accept new baselines
Fix instantiation of alias type arguments for deferred type references
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
Fix writing multi-line text without semicolons (#32903)
Fixed goto when declarations are on multiple files
Fix bugs in combineUsages/getSignatureFromCalls
Update user baselines (#33083)
Merge branch 'master' into infer-from-usage/similarity-to-builtins
add support for extract as interface (#31644)
Exclude method symbols when relating tuple types
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
Added errorCount to WatchStatusReporter to detect 2 or more errors (#33082)
goto-def should treat constructor functions as functions (#33109)
Accept new baselines
Only defer aliased array and tuple types
Copied from old branch
Merge branch 'master' into infer-from-usage/similarity-to-builtins
Close over common variables in inferTypeFromReferences (#33095)
Fix fourslash test
Handle missing global array type
Accept new baselines
Minor fixes
fix eslint errors
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
Remove unnecessary tslint-ignore (#33091)
add completion for promise context (#32101)
Merge branch 'master' into infer-from-usage/similarity-to-builtins
Improve names in infer-from-usage (#33090)
Merge branch 'master' into recursiveTypeReferences
Merge pull request #33064 from armanio123/FixNavbarMultilineUnterminated
Improve names in infer-from-usage
Fix infer from usage prop assignment (#33088)
Fix fourslash server (#33063)
Properly handle recursive array and tuple types in printback
Instantiate deferred type references like anonymous types
Recursive tuple types + fix instantiation of recursive type references
Added optional trailing slash regex
Merge pull request #32672 from armanio123/FixNavbarMultiline
Merge pull request #33056 from amcasey/TripleSlashRestrictions
Make trailing slash required on cleanText regex
Use the in operator
Make triple-slash comment classification more restrictive
Support deferred resolution of type arguments in type references
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
Change doc-string for Unreliable variance flag. (#33036)
Merge branch 'master' into referencesPrototypeSourceFile
Should not report that files are not part of config for files that are not going to be emitted
Test with --out as well
Fix prototype property type lookup (#33034)
Verify config file errors
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
Merge branch 'master' into referencesPrototypeSourceFile
Cache JS inferred class type symbol (#33010)
Add assert comments in CodeFixes and Refactors (#33016)
LEGO: check in for master to temporary branch. (#33011)
Update baselines
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
Fix discovery and execution of root-level tests in the parallel runner (#32980)
Improve “Add missing await” fix-all (#32922)
Walk up parenthesized type nodes when looking for the type alias hosting a node (#32924)
Add support for jsdoc properties with hyphen (#32631)
Handle network style paths for watching (#32888)
update eslint
@typescript-eslint/quotes
update typescript-eslint packages to 2.0.1-alpha.14
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
remove .eslintrc from scripts
Fix default behavior for transpileModule when fileName not provided (#32982)
change createMap<boolean> to createMap<true>
Constructor functions as classes (#32944)
Instantiate generic conditional infer source types in the context of the target conditional (#31545)
Fix Cannot read property 'text' of undefined crash (#32734)
Resolve SymbolFlags.Type only at first in jsdoc getTypeFromTypeReference (#32947)
Update user baselines (#32975)
Update Feature_request.md (#32974)
Update String#toLocale{Lower,Upper}Case methods (#32961)
Merge pull request #32969 from collin5/b30851-2
add baseline for unknown type spread
update typescript-eslint, eslint
@typescript-eslint/unified-signatures
update typescript-eslint packages to 2.0.1-alpha.8
restrict object spreading on unkown type
remove useless baselines
Detect more TS syntax in JS files
Accept new API baselines
Update API to be backwards compatible
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
Support 'asserts this' and 'asserts this is T' type predicates
Update user baselines (#32946)
Add more info to the readme on the topic of the `runtests` command (#32942)
Run user test submodule update in the correct directory (#32921)
Right. Environment variable on windows should be uppercase.
Update user baselines (#32930)
jsdoc template tags might be unmatched (#32936)
Lowercase `M` to `m` in all reference to the microsoft github org (#32938)
Add produceLKG flag to cherry-pick PR script
Add JSX codefix if available (#32281)
checkJs: require JSDoc type argument for Array, Object, and Promise in noImplicitAny (#32829)
Merge pull request #32919 from microsoft/fix32752
Always run Public API tests, allow lowercase skippercent (#32892)
Update node types dependency (#32424)
refactor: modify the TokenFlags default value (#32112)
Accept new baselines
Add additional test
Accept new API baselines
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
remove 'project' option from default .eslintrc configs
add --ci option to lint command to run eslint with the .eslintrc.ci config
remove typescript dependency from boolean-trivia, no-double-space rules
remove useless comment
Add InferencePriority.Circularity per CR feedback
 Allow to omit the begin parameter of %TypedArray%.prototype.subarray (#32125)
Report error when using generic class in js file (#31723)
Add check for Records in reportNonexistentProperty function (#31701)
remove useless condition as argumentExpression is always defined (#31567)
small refactor to cut back on type assertions (#32920)
Merge pull request #31185 from collin5/b30851
Fixed navigationbar regex
Merge pull request #32765 from orta/debug_scanner
fix(docs): Fixed the docs for Array#slice not spec (#31182)
Accept new API baselines
Point es2020 in esnext.d.ts (#32776)
Reuse unchanged ambient declarations in incremental parsing (#32849)
Accept new baselines
Add regression test
Stricter criteria for eliminating types in unions during inference
Merge pull request #32911 from jack-williams/jw-equals
Comment correction
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
set augmentations, moduleAugmentations as readonly
Merge pull request #32904 from microsoft/getRidOfCrappyLiterals
Accepted baselines.
Perfer the non-module name of a symbol when writing the name of a symbol (#32880)
A bit of cleanup.
Accepted baselines.
Get base primitive type for unary operators.
Accepted baselines.
Report on base primitives for certain operations.
Fix export=global auto import exclusion (#32898)
Update versions to 3.7 (#32879)
Merge pull request #32893 from ajafff/classexpressionpropertymodifiers
report invalid modifiers on class expression properties
Merge pull request #32887 from microsoft/incrementalNoEmit
Disallow incremental with noEmit Fixes #32882
Merge pull request #32788 from microsoft/tsbuildFixes
Update user baselines (#32886)
lint all ts files in scripts. remove tslint: directive. add extended eslint config for CI environment
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
add .eslintrc for src and scripts. update typescript-eslint
Fix references to path-mapped ambient modules in declaration files (#32878)
Do not escape actual template literals on emit (#32844)
Merge pull request #32847 from microsoft/jsEditPerf
Add cancellation token check for function expression, arrow expression and class expression just like their counter part declarations This helps in early exit if request is cancelled and intellisense in js files is super quick with edits
Do cleanup after opening files only if opening a file.
Merge pull request #32726 from fuafa/completion-after-private
Update user baselines (#32837)
PR feedback
Elide /index from auto-import when using rootDirs compiler option (#32828)
Add error message for keywords with escapes in them (#32718)
Merge pull request #32825 from microsoft/printProjects
Do not emit 'this' for __awaiter helper at the top level of a strict-mode file. (#32823)
Print program only if there are files are added or removed from the program.
Add support for import.meta in System modules (#32797)
disable array-type for es2019.array.d.ts
remove spaces from @internal tag
harness: change const to var
change const to let
remove TODO comments
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
Merge branch 'master' into assertionsInControlFlow
Call getResolvedSignature only when needed for generics or overloads
Merge pull request #32563 from orta/fix_31298
Allow accessors in ambient class declarations (#32787)
Allow functions and ambient classes to merge (#32584)
Merge pull request #32745 from microsoft/fsWatchInode
Merge pull request #32791 from microsoft/documentHighlightsFilesToSearch
Merge pull request #32789 from amcasey/FileNotFoundError
Fix lint error
Ignore unknown files to search from in document highlights
Tweak message text
Correct string template
Merge pull request #32785 from amcasey/FileNotFoundError
Add error related to file not in rootDir and file not part of included root files at the references
Fix the incorrectly accepted suggestion
Use an explicit type
Use defaults for transpileModule (#31563)
Support tree-shakable imports for --target es2015 (#32742)
Update src/compiler/sys.ts
Update src/compiler/sys.ts
Handle status and error messages for better checking
Transitively upstream blocked project should not build
Circular reference in the build queue is build stoppable error
Verify demo build
Remove error on invalid jsdoc tokens (#32769)
Restore logging of the program file list
Use switch instead of instatating an array and when looking inside a module
Include fewer paths in exception
Merge branch 'master' into assertionsInControlFlow
Accept API baseline changes
Less aggressive monomorphism for flow nodes
add additional tests to no-keywords
Accept baseline API changes
Make flow nodes more monomorphic
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
revert lib/react16.d.ts
remove useless semicolons
disable no-redeclare
Accept new baselines
Excess discriminated types match all discriminable properties (#32755)
Fixed lint issues
fix formatting
no-unused-expressions: [error, { allowTernary: true }]
array-type: [ default: array, generic: array ]
Adds a debug command to the scanner
Merge pull request #32668 from orta/fix_31209
fix eslint paths
Reflect control flow effects of calls to never-returning functions
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
add eslint setting for .vscode
Truncate to 150 chars and added unit tests
fix eslint errors. remove tslint:* comments
Only add unnecessary-await suggestion on await expressions (#32754)
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
Merge pull request #32688 from uniqueiniquity/skipCOSForDTS
remove useless TODO comment
Move helper function outside class
Merge pull request #31366 from ypresto/fix-comment-unknown
Merge pull request #31980 from sisisin/fix/typo-comment-at-import-tracker
Merge pull request #32454 from 0verk1ll/develop
Only check import = reference when target is Value (#32747)
Add some logging to the sys.watchFile and sys.watchDirectory
Fix unicode escapes in jsx identifiers and extended unicode characters in jsdoc (#32716)
Improve excess property checking for intersections (#32582)
Support extended unicode escapes in identifiers, per es6 spec (#32725)
Change to missing file watcher on linux and darwin explicitly to avoid watching deleted inode
Resolve module specifier relative to moduleFile.originalFileName (#32722)
Update user baselines (#32732)
Allow compile on save with decorator emit
Adds another test around parsing jsdoc
Merge pull request #32612 from mrcrane/etw-logger
Merge master
Remove unnecessary 'commandSucceeded' variable
Suggestions now use diagnosticCollection (#32740)
Handle the variadic args for inline console.logs
Merge branch 'Saulzi-master'
Update based on PR feedback
split lint task to list-scripts, lint-compiler. add list-scripts, lint-compiler to postTest
Adjust isIdentifierText to skip multiple characters when a code point is multiple chars long (#32720)
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
Fix inferred TNext of generator to use TNext of contextual return type (#32719)
Fix class member completion disappear after a property declaration with a private modifier
Fix emit for object rest on a module export (#32699)
Preserve const enums should keep import refs (#28498)
Do not include built/local/enu when producing LKG (#32723)
Add 'readFileWorker' instead of modifying 'readFile'
Fixes export destructured variables reference (#32007)
Merge branch 'master' of https://github.com/Saulzi/TypeScript into Saulzi-master
Escape apparent substitution in synthesized NoSubstitutionTemplateLiterals (#32580)
Define interface for TSConfig. Change compilerOnSave to compileOnSave (#32481)
Address code review feedback
simple-indent: remove useless types definition
fix eslint errors
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
lint src/, scripts/ folders separately
change eslint tests formatting
simple-indent
Move const enums and typeof facts maps out of createTypeChecker (#32691)
Accept new API baselines
Remove unused code
Fix `readonly` occurrences highlighting (#32583)
Support 'asserts' type predicates in control flow analysis
Remove more try-finally blocks
Remove try-finally blocks
Fix binding of jsdoc typedefs with no in-comment name attached to an expression statement (#32610)
Make auto-imports more likely to be valid for the file (including JS) & project settings (#32684)
Prioritize “property names” over punctuation in smart select (#32687)
Add test
Avoid compile on save for declaration files
Update user baselines (#32683)
Amend scanner to support astral characters in identifiers when parsing es6+ (#32096)
Merge pull request #32613 from microsoft/singleHostFsWatchFile
Update browser table
Use 'noop' for NullLogger
Merge pull request #32626 from orta/fix-31312
Merge pull request #32663 from orta/fix_31195
Merge pull request #31946 from orta/30246
Fixed issue for navbar when having multiline string literals
Update user baselines (#32658)
Supress console.log & others inside the TS Server runtime so that language service plugins don't accidentally use them and kill the server - fixes #31209
Merge pull request #32661 from orta/fix_32655
Retarget to es6 and fix the resulting bugs (#32221)
Add PerfLogger and NullLogger to simplify conditional logic
Ensure that the comma is removed when all named imports are removed via moveToFile - fixes #31195
Don’t issue used-before-initialization errors in declaration files (#32579)
A merged interface with an inherited member should satisfy an abstract base class member (#32539)
Fix a typo in the error message around language service plugins
Prevent infinite recursion resolving nested conditional types with import types in them (#32097)
Reflect effects of assertion calls in control flow analysis
Merge pull request #32640 from microsoft/parsingDeepParenthesizedExpression
Merge branch 'master' of https://github.com/microsoft/typescript into 30246
Don't exclusively check for just JS but scope down the check to not include the expando'd objects
Merge pull request #32641 from microsoft/resolutionMethods
Wire in compilerOptions of the program in to the host's resolveModuleNames and resolveTypeReferenceDirectives api Fixes #31056
Store already known not parenthesized arrow expression positions for faster exit in case of deep parsing Fixes #31987
Ensure that when import/export are used natively in the JS runtime that the check for alias symbol is re-applied - re comment in #26912
Allow expando additions to an imported object in JavaScript - fixes #31312
remote unused eslint rules
Merge branch 'feature/eslint' of https://github.com/a-tarasyuk/TypeScript into feature/eslint
remove useless semicolon
Accept new baselines
fix formatting. revert type assertion
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
Use single stats watcher per filename Fixes #28690
Remove project status, watches etc when project is no longer part of build order
Some refactoring
File move
Use optional module "@microsoft/typescript-etw" for ETW logging
Merge pull request #32565 from amcasey/TripleSlashClassification
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
Merge pull request #32558 from microsoft/fix32247
Update LKG (#32578)
Merge pull request #32594 from microsoft/fix32416
fix eslint errors
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
@typescript-eslint/array-type
Support more terminators for parsing jsdoc filepaths
Accept new baselines
Add regression test
Properly instantiate contextual type for object literal methods
Record full inference status in visitation cache
Intersect 'this' types in union signatures (#32538)
Bind a jsdoc enum as SymbolFlags.TypeAlias and not SymbolFlags.Enum (#32520)
Accept new baselines
Add more tests
Add more comments
Merge pull request #32561 from microsoft/retainFreshlyCreatedProject
Less aggressive reduction of intersection types
scope out duplicate code into setMembersDeclaredBySpreadAssignment function
Decrement line ends if they end with a carriage return. (#31220)
Handle namepaths inside JSDoc type expressions a bit better - fixes #31298
Support classification of triple-slash references
Merge branch 'master' into referencesPrototypeSourceFile
Don't exclude non-anonymous object types in identity checks
Retain the  configured project opened during opening client file even if opened file isnt included in that project This helps not create and remove project on every open if tsconfig file isnt referenced by any open file
Add test case before change where config project is created just to remove it
Accept new baselines
Add regression tests
Accept new baselines
Property assignment uses parent type annotation (#32553)
Infer between closely matching types in unions and intersections
Fix smart select on last blank line of file (#32544)
#32458 stop ES5 __values with no Symbol.iterator getting stuck in loop
prioritize exclude class or right of dot
Merge pull request #32531 from microsoft/importFixCompletion
change deprecated rule @typescript-eslint/prefer-interface to @typescript-eslint/consistent-type-definitions
move eslint rules from eslint-plugin-microsoft-typescript to scripts/eslint
Merge pull request #32386 from microsoft/fix32349
Strip more kinds of timestamps and versions from dockerfile output (#32519)
When the exported symbol is merged symbol from declaration use that name to verify quality Fixes #27880
Merge branch 'master' into fix32349
Merge pull request #32460 from microsoft/fix32434
Accept new baselines
When inferring from XXX to T | XXX make no inferece for T (instead of never)
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
Update __awaiter to be more spec compliant (#32462)
Fix object spread runtime semantics (#32514)
Minor cleanup plus more comments
Combine multiple separate code paths
update eslint
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
Fix issues uncovered by DT tests
Always infer between distinct type references to same target
Merge branch 'master' into fix32434
Accept new baselines
Add additional test
Make lower priority inferences when inference process is blocked
Merge pull request #32490 from microsoft/assertFix
Fix the assert of reporting file infos still attached to the project for circular json reference
Fix type keyword completions (#32474)
Update user baselines (#32483)
remove tslint:* directive
@typescript-eslint/triple-slash-reference
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
use a map instead of an array
Merge pull request #32473 from jakeboone02/patch-1
Fix capitalization in parseInt description
Merge pull request #32461 from orta/script_target_value_
Adds baseline updates
remove tslint, tslint:disable-next-line, update @typescript-eslint/*
jsdoc/check-alignment
no-null/no-null
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
sort text for class member, JSX attribute, RHS of dot
Set sort text while adding sysmbols
Set the ModuleKind value for ESNext to be 99 so it doesn't change between releases (and yet another module system?!)
Treat Array<T> and ReadonlyArray<T> as synonymous in inference
Set the ScriptTarget of ESNext to be 99 so it doesn't change between releases
Undo accidental push to master
Set the ScriptTarget of ESNext to be 99 so it doesn't change between releases
Fix lint error
LEGO: Merge pull request 32459
LEGO: check in for master to temporary branch.
Accept new baselines
Accept new baselines
Update tests
Update tests
Accept new baselines
Reduce union and intersection targets when source is singleton type
Revert "Proposal: If there’s a package.json, only auto-import things in it, more or less (#31893)" (#32448)
Add Semicolons to Gulpfile.js
addTypeToIntersection performance improvement (#32388)
Fix build/lint due to differences in master and LKG (#32450)
LEGO: Merge pull request 32445
LEGO: check in for master to temporary branch.
Get contextual type of yield from contextual signature of containing function (#32433)
Merge pull request #32425 from microsoft/scopedPackageAquisition
Improve algorithm for inferring to union types
Merge pull request #32429 from microsoft/jsDocTokenParsing
Fix missing tokenToString for the backtick Fixes #32073
Merge pull request #32421 from orta/improve_mulitline_exceptions
Fix the export on TestServerHostCreationParameters to fix build break after LKG Its not detected currently is because LKG doesnt have #32156
Handle scoped package names in typing installer Fixes #32075
Merge pull request #32377 from minajevs/fix29666
Control flow for element access expressions (#31478)
Make it easier to read multi-line exceptions
Merge angle-bracket fix
Merge branch 'master' into fix29666
Fix for angle-bracket type assertion
typeAssertionKeywords tests
Merge pull request #32382 from dragomirtitian/GH-29769-generic-auto-completion-missing-primitives
Improve accuracy of remove unnecessary await fix (#32384)
Fall back to (Async)IterableIterator if (Async)Generator not found (#32303)
Merge pull request #31815 from gb714us/bug/31631
Update user baselines (#32403)
LEGO: Merge pull request 32404
LEGO: check in for master to temporary branch.
Merge pull request #32243 from orta/fix-30536
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
Merge pull request #32359 from orta/fix_14589
Handle feedback from #32359
Accept new baselines
Add regression tests
Merge pull request #32362 from microsoft/fix32230
Add kind to JsxAttributes (#32369)
Instantiate contextual type for return type in getReturnTypeFromBody
Parse quoted constructors as constructors, not methods (#31949)
Fixed auto completion after a < token to return types not values.
Cache & widen assigned js prototype type (#32381)
Don't indent properties if an object literal follows directly from another object on the same line
Add 'Remove unnecessary await' suggestion and fix (#32363)
Proposal: If there’s a package.json, only auto-import things in it, more or less (#31893)
Add quick fix to add missing 'await' (#32356)
LEGO: Merge pull request 32379
LEGO: check in for master to temporary branch.
Fix regression of generic T assignability to Partial<T> (#32354)
Added new keword compeltion filter for assertions
Fixed failing test due to changed details
Added "readonly" to Type Keywords
Add kind to JsxAttributes.
Accept new baselines
Add regression test
Merge pull request #32360 from microsoft/incrementalPaths
Fix type parameter inference cache invalidation
Ensure that the filePaths in compiler options are absolute before getting relative path to buildInfo directory Fixes #32353
Merge branch 'master' into referencesPrototypeSourceFile Uptodate to 3.6.0-dev.20190711
delete isfulfilled to pass tests
Don't add extra indentation for objects inside function parameters
Update DOM: Remove carriage returns from comments (#32352)
Improved parameter names for call signatures resulting from unions when only one parameter name is available. (#32056)
Update user baselines (#32346)
Improved const extraction for function expressions and arrow functions. The behavior applies if the function: - is contextually typed (because otherwise no type annotation for the variable would have been generated anyway) - is not generic - doesn't have parameters inferred as any
LEGO: Merge pull request 32343
LEGO: check in for master to temporary branch.
Merge pull request #28290 from rflorian/add-codefix-cannot-find-name-in-for-loop
Generate a unique type parameter name for each nested type parameter (#31544)
Fix lookup of optional methods in declaration emit (#32094)
Update DOM from TSJS-lib-generator (#32335)
Add option disableSourceOfProjectReferenceRedirect to disable using sources of project reference redirect from editor
Merge pull request #32334 from andrewbranch/no-missing-await-on-unary-arithmetic-expressions
Rename parameter
Remove "Did you forget to use await" for unary arithmetic expressions
Update user baselines (#32324)
Merge branch 'feature/eslint' of https://github.com/a-tarasyuk/TypeScript into feature/eslint
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
Fixed lint error
Added addMissingConst codefix for comma separated initializers
Merge pull request #32239 from andrewbranch/enhancement/missing-await-errors
Improve multiple overloads error span (#32315)
Source of project reference behave as if those files cannot be emitted.
Merge pull request #32260 from microsoft/fix32169
Add negative test case for addMissingConst codeFix with unexpected array elements
Finish addMissingConst codefix for single variable and array literal assignments
Only add "Did you forget await" for function args when the parameter type is not promise-like
Update error code
Fix bad rebase
Refactor to use related info everywhere
Did you forget to use await? on arguments of function calls
Update baselines
Did you forget to use await? for call and construct signatures
Did you forget to use await? on iterables
Did you forget to use await? for operators
Merge pull request #32092 from microsoft/report-multiple-overload-errors
Update more baselines (?)
Updates the baselines for the typo fixes
Update baselines
Merge branch 'master' into report-multiple-overload-errors
Added fourslash tests for standalone and array initialization cases and started implementing them
Errors using DiagnosticsSync commands
import/no-extraneous-dependencies
fix eslint errors after merge
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
Refactoring
Add properties priority for completion
Accept new baselines
Add regression test
Include conditional types in top-level type parameter check
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
Improve type checking and inference for Generators and Async Generators (#30790)
Widen object literal this types (#32240)
Skip typechecking of source of project reference redirect
Adds support for completions after ASI inserted expressions
Merge branch 'master' into report-multiple-overload-errors
Refactor tests so its easy to edit and reason about them
Merge pull request #32232 from typescript-bot/user-update-Microsoft-20190603
Merge pull request #29717 from petersandor/jsdoc-tag-author-email-support
Merge pull request #32077 from andrewbranch/bug/31114
Remove TODO
Update baselines
Merge branch 'master' into report-multiple-overload-errors
Update user baselines
Merge pull request #32178 from microsoft/improveTupleDestructuring
Merge pull request #32079 from microsoft/instantiationCountLimiter
Merge pull request #32208 from microsoft/fix31766
Merge pull request #32217 from typescript-bot/user-update-Microsoft-20190602
Update baselines
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
Update user baselines
Add regression test
Restore union-like behavior for inference to conditional types
Merge branch 'add-codefix-cannot-find-name-in-for-loop' of https://github.com/rflorian/TypeScript into add-codefix-cannot-find-name-in-for-loop
Merge branch 'master' into add-codefix-cannot-find-name-in-for-loop
Revert unrelated fourslash test changes
Address PR comments
Add support for sharding tests across multiple workers (#32173)
Refactoring
Check for parse errors in emitted JS (#32009)
Fix not emitted statement in then clauses producing syntactically invalid output (#32010)
Fix incorrectly exported type
Merge pull request #31801 from andrewbranch/semicolons
Merge pull request #32071 from andrewbranch/bug/31070
Update user baselines (#32195)
Elide the exact node version rush complains about from the docker output (#32204)
Merge pull request #31912 from andrewbranch/bug/31657
Merge branch 'master' into referencesPrototypeSourceFile
Verify the scenarios when d.ts directory of dependency doesnt exist
Merge pull request #32167 from microsoft/tryReuseProgram
Fix strict bugs in user pr script
Merge pull request #32117 from andrewbranch/bug/31460
Update baselines
Merge pull request #32147 from microsoft/noDtsWhenNotUsingProjectReferences
Update baselines
Merge branch 'master' into report-multiple-overload-errors
Merge pull request #32181 from microsoft/use-only-immediately-preceding-jsdoc
Merge pull request #32124 from austincummings/affectsEmitToModuleAndEsModuleInterop
Merge pull request #32076 from stristr/master
Merge pull request #32049 from microsoft/noDuplicateIntersectionSignatures
Fix linting error
Accept new baselines
Add more tests
Fix esModuleInterop affectsEmit change test
Accept new baselines
Pad tuple type initializers of parameter array binding elements
remove explicit escaping for placeholder opening
use stringLiteral property text instead of decodeRawString
Use only immediately preceding JSDoc
Accept new baselines
Add regression tests
Accept new baselines
Remove logic that pads array literals contextually typed by tuple types
Add tests for module and esModuleInterop affectsEmit change
Add affectsEmit to module and esModuleInterop options
Update baselines with new error numbers
Merge branch 'master' into report-multiple-overload-errors
Fix lint
Merge pull request #32034 from dragomirtitian/GH-32013-improve-error-messages-for-calling-types
Merge branch 'master' into report-multiple-overload-errors
Convert related spans to message chains
Improved error spans for call errors:
Merge branch 'master' of github.com:Microsoft/TypeScript
make prnums for experiments get pulled from GH tags
Added tests for new error messages on calls to unions.
Improved error message for calling/constructing types
Rework declaration emit visibility calculation for namespaces (#32156)
Add vscode docker test (#32152)
Merge branch 'master' into referencesPrototypeSourceFile
Update src/server/project.ts
When checking sourceFile is from external library, use sourceFile.resolvedPath since thats how the source files are queried and thats the real path Fixes #32086
Accept new baselines
Add regression test
Switch DiagnosticMessageChain to be a tree
Add xterm test to docker suite (#32149)
Merge pull request #31985 from microsoft/buildInfoData
Fix more tests
Create original project when location is in source of project reference redirect
Merge pull request #31988 from amcasey/SyntacticClassifications
Merge pull request #32138 from microsoft/jsdoc-match-backticks
Update user baselines (#32136)
Fix lint, remove overloads
Add fourslash test of jsdoc backtick parsing
update eslint, @typescript-eslint/*
remove tslint configuration
no-redeclare
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
@typescript-eslint/indent
Accept new baselines
Compare type parameters, constraints, and defaults in signature identity
Use intersectTypes instead of filterType
JSDoc:Treat tokens between backticks as comments
Add throw on not rebaseable to unmatched PRs, too
Check if triggering PR is in triggered set only if triggered pr exists (otherwise is master sync)
More tests
Make args types internal
Add sourceOf project reference redirect to filesByName list for redirect path so that module symbol is correctly resolved
allow const-assertion on aliased enum symbol (#32110)
Merge pull request #32088 from orta/fix-32068
Add some negative test cases and accept baselines
Treat negative numbers as non-dynamic names
Do not report multiple diagnostics per signature.
Fix declaration emit for negative number property declarations
Merge pull request #31480 from andrewbranch/bug/25487
Merge branch 'master' into report-multiple-overload-errors
Improve error messages and related spans
Merge pull request #32105 from typescript-bot/user-update-Microsoft-20190503
Update user baselines
Fix tuple and array comparisons during identity checking (#32089)
Merge pull request #31945 from microsoft/skip-costly-tests
Handle making sure that two less thans are never converted into >>
Watch generated file if it doesnt exist when trying to translate it to to source generated position
Watch generated file if it doesnt exist when trying to translate it to to source generated position
Fix lint and remove done TODOs
Merge branch 'master' into report-multiple-overload-errors
Don't double-check JSX calls
Update baselines, except JSX
Merge pull request #32072 from orta/formatting_docs
Handle feeedback
Add instantiation count limiter
Fix incorrect noImplicitAny error on contextual union function signature
Update src/services/formatting/README.md
Update src/services/formatting/README.md
Make close() in interface Watch<T> public
Adds some docs for how a formatter works
Use existing reporting mechanism
Explicitly error when an exclude is provided by a test as it will be unused (#32014)
Look at properties of constraint-instantiated optional mapped types when deciding assignability
Merge pull request #32059 from typescript-bot/user-update-Microsoft-20190501
Merge pull request #31942 from andrewbranch/bug/30882
Update user baselines
Merge branch 'feature/eslint' of https://github.com/a-tarasyuk/TypeScript into feature/eslint
Accept new baselines
Add regression test
Remove duplicate call/construct signatures in intersections
fix eslint errors after merge
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
Merge pull request #32035 from microsoft/fixTupleDestructuringControlFlow
no-fallthrough
Accept new baselines
Add regression test
Out of bounds tuple elements have type 'undefined'
Merge pull request #31414 from dhruvrajvanshi/master
Update API baseline
Fix tests
Sanitize rush progress numbers in docker test output (#32029)
Use getEncodedSyntacticClassifications
Update cherry-pick pr script to use mergebase (#32031)
Check for language serivice enabled when including source files
Check only for .d.ts files
Log the config of the project
Remove secondary reference lookup implementation (#32016)
Improve error message and update baselines
Use source files instead of .d.ts files from project references
Merge pull request #32027 from microsoft/containerReference
Assert ranges exist when looped over in fourslash (#32012)
Add test to verify when source changes
no-fallthrough
Merge pull request #32026 from typescript-bot/user-update-Microsoft-20190505
Update user baselines
Eliminate references to defunct LSHost in comments (#32018)
Ignore identifier declarations when calculating symbol visibility (#31974)
Retain related info for 1-overloads
Container only ref needs to be ignored from uptodate status Fixes #31288
Share code a bit better
Fake up a namespace enclosing declaration when generating expando namespace members (#31971)
Use absolute paths for buildInfoDirectory
Add dockerfile based tests for `azure-sdk-for-js` and `office-ui-fabric-react` (#31948)
Merge pull request #31986 from microsoft/buildLocale
Merge pull request #31954 from suhasdeshpande/patch-1
Merge pull request #31950 from microsoft/unionObjectAndArrayLiterals
Use related spans to form a tree of errors.
Merge pull request #32001 from typescript-bot/user-update-Microsoft-20190504
Update user baselines
microsoft-typescript/no-in-operator
microsoft-typescript/only-arrow-functions
microsoft-typescript/no-keywords
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
@typescript-eslint/unified-signatures
@typescript-eslint/prefer-function-type
no-var
@typescript-eslint/interface-name-prefix
Trivially expose getEncodedSyntacticClassifications
Support --locale with --build Fixes #31960
Re-add multiple errors
Bundle info paths as relative to tsbuildinfo file
Updated test-cost file for laptops.
Add skip-percent alias for skipPercent
Merge pull request #31981 from typescript-bot/user-update-Microsoft-20190503
Convert options to relative paths
Make any paths in buildInfoFile to be relative to it.
Merge branch 'master' into report-multiple-overload-errors
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/eslint
@typescript-eslint/no-unnecessary-type-assertion
Move .test-cost.json
prefer-const
@typescript-eslint/camelcase
no-unused-expressions
no-template-curly-in-string
Update user baselines
@typescript-eslint/adjacent-overload-signatures
chore(tsserver): fix typo
semi-colon
Add unit test
fix tsserver picking hidden files created by emacs
Merge pull request #31587 from microsoft/definitionSpan
Notes on how to return errors from checkTypeRelatedTo
Working, just not the way I would like
Update DOM and baselines (#31806)
Initial attempt. Totally doesn't work.
Accept new baselines
Add tests
Added --noImplicitThis code fix for functions used as object properties (#31138)
Merge pull request #31878 from orta/yarn_lockfile
Revert previous fix and improve error message instead
Move class property transform (#31848)
Improve help message for skipPercent
Don't let the additional property setting on an object show up as a definition for the lanmguage server
Accept new baselines
Union array literals in inference similar to object literals
Add test cases for union and intersection constraints
Run all tests on CI
Consider non-public literal members in index type of constrained type parameters
Fix lint
Allow passing skipPercent
Fix smartSelection returning extra span inside string quotes when cursor is outside them
Add failing test for smartSelect string literals
Update user baselines (#31902)
Skip costly tests
@typescript-eslint/prefer-namespace-keyword
@typescript-eslint/no-unnecessary-qualifier
@typescript-eslint/class-name-casing
quotes
no-trailing-spaces
linebreak-style
microsoft-typescript/no-double-space
microsoft-typescript/type-operator-spacing
microsoft-typescript/object-literal-surrounding-space
exclude *.generated.d.ts files
@typescript-eslint/type-annotation-spacing
@typescript-eslint/prefer-interface
@typescript-eslint/no-inferrable-types
microsoft-typescript/boolean-trivia
no-new-func
no-throw-literal
brace-style
dot-notation
object-shorthand
space-in-parens
no-eval
no-empty
@typescript-eslint/no-this-alias
no-restricted-globals
microsoft-typescript/debug-assert
@typescript-eslint/semi
fix(lib): Fix `RegExp` constructor with `string|RegExp` and `flags` (#30586)
Rename to use contextSpan
add eslint
Filter primitives from union when checking for mismatched excess props if nonprimitive type is present (#31708)
Revert to using spread instead of mutating value later
Adds a yarnrc which makes sure that the lockfile isn't generated for people using Yarn
Merge pull request #31820 from microsoft/nodeModules
Merge pull request #31818 from microsoft/sharepointIssue
Merge pull request #31865 from amcasey/FunctionHintSpan
Add regression test
Correct outline hint spans for functions
Add __spreadArrays helper (#31166)
Merge pull request #31838 from microsoft/emptyIntersectionReduction
Update user baselines (#31857)
Merge pull request #31858 from microsoft/fixReadonlyPropertyWidening
Accept new baselines
Properly preserve CheckFlags.Readonly when widening properties
Merge pull request #31831 from shibukawa/patch-1
Improve ts6307 error (#31706)
Merge pull request #31290 from a-tarasyuk/bug/29880
Accept new baselines
Add tests
Update fourslash tests
Fix minor issue
Accept new baselines
Update tests
Intersections of disjoint types become never upon construction
Fix es2019.string.d.ts
Added test cases for JSXFragment span
When resolving from typings cache, handle node code modules Fixes #29865
Test when node typings dont get added on subsequent update graph because of invalid typing Test for #29865
Merge pull request #31802 from microsoft/wideningInAccessExpressions
Do not watch tsconfig files from folders that we canot watch Fixes #30818
Merge branch 'master' into wideningInAccessExpressions
Merge branch 'master' into wideningInAccessExpressions
create outlining span for JsxFragment
Merge pull request #31807 from microsoft/revert-30467-move-class-property-transform
Revert "Move class property transformation into new transformer. (#30467)"
Update DOM and baselines
Merge pull request #31784 from microsoft/numericEnumMappedType
Merge branch 'master' into definitionSpan
Handle module specifiers
Accept new baselines
Add tests
Minor fix
Consistent widening in property and element access expressions
Handle Lable
Handle jsx Opening, Closing and Self closing tags
Add test for semicolon detection in auto-import
Detect semicolons in file before writing quick fixes
Update fourslash tests that shouldn’t insert semicolons
Fourslash server tests
Update fourslash tests to have semicolons
Update user baselines (#31793)
More tests
Accept new baselines
Generate declaration file from tests
Handle export keyword of export assignment
More tests
Move class property transformation into new transformer. (#30467)
Accept new baselines
Add tests
Fix minor issue
Handle default keyword of default export
Taking typos out one line at a time
Deleting a branch that does not exist does not work (we should never download the ref anyway)
More tests
merge -> rebase in experiment sync script text
Fix deprecation warnings in experiment sync script
Dont clean - pipeline should already be clean and a clean will clean node_modules
Slightly reorder experimental sync commands
Handle numeric enums in mapped types + fix obscure crash
Cache ranges by text
Take optional string of range text for singleReferenceGroup
Unify contextual signature type parameter assignment (#31574)
Take optional texts to verify parameter for rangesWithSameTextAreRenameLocations
More tests
Merge pull request #31432 from microsoft/builderAPI
Update error message as requested by @danielrosenwasser
Set declaration span only if its not same as own span
More tests
Handle when declarationSpan from declarationNode is undefined
More tests
More Tests
Rewire experimental update script to handle PR triggers
Add script for pack response postback (#31748)
Handle computed property names
More tests
Handle destructuring assignments
LEGO: Merge pull request 31742
LEGO: check in for master to temporary branch.
Include the project filepath in the error message for files not being listed in the 'include' pattern. TS6307
Merge pull request #31687 from microsoft/enumImplicitIndexSignatures
Merge pull request #31711 from microsoft/fixDestructuringWithFallback
Accept new baselines
Add more tests
Consider object literals in unions to have properties of type 'undefined'
Merge pull request #31685 from uniqueiniquity/stopInvalidatingOnOpenFileSave
Accept new baselines
Add regression tests
Accept new baselines
When binding pattern contextually types x || y, x contextually types y
More tests
Propagate saved variance flags from cached comparisons (#31688)
Use for-of declaration list + expression as span for preview
More test cases
Update user baselines (#31699)
Dedent message so its not code-blocked
Reverse log order
Change test instead of behavior
origin/master because ref is fetched not pulled
Trim whitespace, fetch origin master
Cant use stdio inherit and stash a result away
Strictify the cherry-pick pr script
Show property assignment for special property assignments in js files
Add initial edition of cherry-pick script (#31705)
Merge pull request #31704 from microsoft/fixThisIndexSignatureAssignment
More tests
For property name of binding element use binding element as preview node
More tests
Refactor and add wildcard scenario
Export assignment identifier use ExportAssigment as declaration
Accept new baselines
Add regression test
Permit assignment this.xxx when class has index signature
More tests
Merge branch 'master' into add-codefix-cannot-find-name-in-for-loop
Fix lint error
Accept new baselines
Add tests
Respond to CR
Add test
Merge branch 'master' into enumImplicitIndexSignatures
Merge pull request #31680 from microsoft/fixGenericReturnTypeInference
Add comment
Small fix to user PR script (#31679)
Stop invalidating resolution when file stays open
Use import export sepcifier as declaration for the property name of import export as well
Accept new baselines
Add regression tests
Merge pull request #31662 from microsoft/fixTypeAliasInference
Merge pull request #31482 from andrewbranch/bug/31338
More test fixes
Rename declarationRange to declarationRangeIndex
Update user baselines (#31674)
Accept new baselines
Add regression tests
Use proper variances when inferring between type alias instantiations
Accepted baselines
Update version to 3.6.0.
Return type inference should not include parameter inferences
More tests
Cache widened types (#31586)
Update user baselines (#31615)
Defer union or intersection property type normalization (#31486)
Fix linter errors
Use node.expression as error node for call diagnostics
Start fixing fourslash tests
31304 - Autocomplete for enum values fails when typing "/" (#31362)
Merge pull request #31588 from microsoft/noLogWhenPluginFound
Include declarationSpan as relevant declaration span when defintion or other places are declaration name Fixes #30849
Do not log errors when ts server plugin is not found in one folder but is eventually resolved. Fixes #30106
Merge pull request #31560 from andrewbranch/bug/31485
Merge pull request #31568 from andrewbranch/bug/31347
Merge branch 'master' of https://github.com/Microsoft/TypeScript into bug/29880
Merge pull request #31572 from microsoft/normalizedIntersectionLimiter
Expose getTypeOfArrayLiteralOrObjectLiteralDestructuringAssignment with better name (#31564)
Fix handling of empty 'types', 'typings', etc. fields in package.json (#31539)
Collect _all_ symlinks a file may have witnessed when attempting to generate specifiers (#31571)
Accept new baselines
Add test
Limit size of union types resulting from intersection type normalization
Improve error messages when indexing into a type (#31379)
Merge branch 'master' of https://github.com/Microsoft/Typescript
Merge pull request #31542 from andrewbranch/bug/31481
Add test
Manually copy just postMessage changes (#31557)
Fix containsPrecedingToken for tokens whose preceding token is a missing node
Allow JS with isolated modules (#31483)
Merge pull request #31541 from microsoft/packageId
Add string properties declaration to the completion list
Merge pull request #31537 from microsoft/fixIndexedAccessConstraint
Don’t crash when creating a union signature from signatures that do and don’t have this types
Reuse getSimplifiedTypeOrConstraint function
Accept new baselines
Implement inferrable index signatures for enum types
Error when writing to readonly tuple in rest element range
Always use resolved file to figure out subModule name in package id Fixes #30429
Add failing test
Trace Package id at the module resolution site
Don’t touch imports used for module augmentation in non-declaration files since it could change JS emit
Add test case for #30429
Fix crash when checking invalid object rest (#31530)
Relocate Debug namespace to reduce duplication (#31524)
Fix compiler crash with object rest in catch binding (#31522)
Reset error record in downlevel for-of (#31519)
Fix for computed properties in instance initializers (#31517)
Expose ts.Diagnostics to fourslash
Make anyArray.filter(Boolean) return any[], not unknown[] (#31515)
Merge pull request #31503 from microsoft/casing
Accept new baselines
Add regression test
Simplify index and object types when obtaining indexed access constraint
Merge pull request #31521 from microsoft/relatedSpanSubsequentDeclarations
Accept baselines, I guess
Parse stray identifier-ish as JSXText instead of trivia
Accepted baselines.
Add related span to original declaration on disagreeing variable/property types.
Improve error message for JSXExpressions that are comma expressions
Update user baselines (#31496)
Merge pull request #31484 from microsoft/completionsSorting
Merge pull request #31505 from microsoft/fileNotFound
Revert "Allow synthetic identifiers to exist and give them escapedText"
Switch to using File not found message instead of trace message file does not exit Fixes #30872
Ignore drive letters when comparing casings of the files with forceConsistentCasingInFileNames Fixes #31327
Merge pull request #31476 from microsoft/cacheUnnormalizedIntersections
Prevent type parameter printing from recuring on the same symbol (#31453)
Add sortText depending scope of symbols Fixes #15024
Use range instead of two markers
Don’t remove imports that are used for module augmentation, just remove their import clauses
Add failing test
Test docCommentTemplate for prototype methods (#31477)
Add test
Allow synthetic identifiers to exist and give them escapedText
Merge branch 'master' into cacheUnnormalizedIntersections
Merge pull request #31454 from microsoft/fixThisTypeIndexSignature
Cache unnormalized intersection types
Accept new baselines
Add regression test
Don't ignore index signatures in this type constraints
Fix infinite loop: module.exports alias detection (#31436)
Fix newlines in smartSelection baselines to not be platform dependent (#31437)
Make more build options internal which correspond to internal compiler options Also fix return type of readBuilderProgram
Fix the test since tsbuildinfo is now always emitted (629bc0c)
Watch only built projects
Merge pull request #31028 from andrewbranch/feature/smart-select
Add api to build referenced projects
Accept new baselines
Improve error spans on chained method calls
Always emit tsbuild info if path says so (irrespecitive of if there exists bundle and project)
Add writeFileCallbacks to done method and also on host
Merge pull request #31262 from rpgeeganage/new_keyword_consistent_resolve
Merge pull request #31400 from microsoft/undoSubsitutionSimplification
Fix error message regressed by #30916 (#31276)
Add getParsedCommandLine as optional method on SolutionBuilderHost
Merge branch 'master' into builderAPI
Accept new baselines
Revert change to substitution type simplification
Merge pull request #31354 from microsoft/deferConditionalTypes
Merge pull request #31377 from microsoft/noThisParameterFiltering
Merge pull request #31361 from anikethsaha/master
Add comment providing context on the change
Accept new baselines
Remove simplification logic from getConditionalType + simplify substitution types
Merge pull request #31374 from weswigham/defer-conditionals-with-simplification
Chain RHS narrowing and truthiness narrowing in assignment expression narrowing (#31348)
Remove fourslash test
Remove this-parameter filtering in statement completion
Simplify conditionals upon comparison, rather than instantiation
Update user baselines (#31371)
Fix outdated comments for unknown type
ignore trigger chars within a string literal
Moved the badges below the Typescript Header
Instantiate constraint with default upon comparison (#31240)
Reuse existing type instantiations
Accept new baselines
Defer resolution of the true and false branches of conditional types
Merge pull request #31221 from microsoft/improveReverseMappedTypes
Merge pull request #31337 from microsoft/fixConditionalTypeParameterReference
Cache control flow results across invocations (#31003)
Maintain modifiers on `Omit` (#31205)
Accept new baselines
Add regression test
Consistently check conditional extends type for type parameter references
Merge branch 'master' into builderAPI
Api to get next invalidated project
UpdateBundleProject<T> to contain emit method
Move towards BuildInvalidatedProject api where one can query program and perform its operations
Fix whitespace issue in codefix file
Add secondary error code to relevant error code list in addMissingConstInForLoop codefix
Fix error from master merge
Merge branch 'master' into add-codefix-cannot-find-name-in-for-loop
Accept new baselines
Lower priority for inferences made from partial reverse mapped types
fix parsing of leading union/intersection operator (#31265)
Update user baselines (#31310)
Merge pull request #31301 from microsoft/fixCustomTransformers
Add opt-in behavior for custom transforms to support bundles
Enable getSemanticDiagnosticsOfNextAffectedFile for EmitAndSemanticDiagnosticsBuilder
Merge pull request #29676 from NicholasLYang/fixObjectRestEnumeration
Make update bundle return invalidated project if it cant update the bundle
Make invalidated projects as api so we can expose it later
Make invalidated project when only need to be built or updated
Merge pull request #31098 from andrewbranch/bug/30804
Updating README: Travis CI icon (#31279)
Fixed several typos, mostly in comments and parameter names. (#31287)
Update user baselines (#31289)
add refactor of extract type (#30562)
Move everything into state so we can pass it around
Merge pull request #31270 from ajafff/getParsedCommandLine-path
add assert
fixed the comments
Update user baselines (#31269)
parseProjectReferenceConfigFile: always set SourceFile.path
updated the baseline files
added test
modified the service file
avoid more useless type assertions (#31239)
Add unmeasurable variance kind for marking types whose variance result is unreliable (#30416)
Don't use `any[]` in `arrayFrom` (#31201)
Update user baselines (#31207)
add baseline tests for spreading instantiable type
check if instantiable type constraint allows spread
Create api for buildNextProject
Enable apis to create incremental program
Make SolutionBuilder as Public API
Accept new baselines
Add tests
Remove startWatching as explicit method from api
Permit reverse mapped types to be created from partially inferable types
Rename cleanAll to clean and take optional project as input
Make API to build project and wire cancellation token
Merge pull request #31216 from ajafff/parsejsonconfigfilecontent-configcache
parseJsonConfigFileContent: add extendedConfigCache parameter
Merge pull request #31213 from Microsoft/removeInternal
Fix accidental internal parameter to public API
Fixed broken twitter account link in README.md (#31210)
Don't use 'any[]' - return type are bivariant when relating to overloads.
Accepted baselines.
Merge pull request #31191 from Microsoft/fileFromNodeModules
Change `Omit` back to using `Pick<T, Exclude<keyof T, K>>` in order to maintain modifiers.
Don't pass a candidates array to getResolvedSignature (#31203)
Accepted baselines.
Added test.
Merge pull request #31119 from andrewbranch/bug/31020
Improve error message for use of 'await' in non-async context (#31194)
remove extra newline
add tests to check errors for use of 'await' in non-async function
do not suggest to mark constructor 'async'
fix existing tests to accept new behavior
add related info to error for use of for-await-of in non-async function
add relatedInfo to error message for 'await' used in non-async function
Include only files that can be emitted into the source file directory check for composite projects Fixes #31181
Add test when module resolution includes .ts file from node_modules
Update user baselines (#31188)
Merge pull request #31141 from Microsoft/fixInferenceToIndexedAccessWithSubstitution
Merge branch 'master' into builderAPI
Fix the failing baseline
Merge pull request #31128 from Microsoft/buildWatchCaching
Merge branch 'master' into buildWatchCaching
Use 'Omit' instead of 'Pick<Exclude<...>>' for object rest (#31134)
Add ES2019 Object.fromEntries function (#30934)
fix(lib): Loosen `Array` predicate return types (#31076)
JSDocTypeTag.typeExpression is not optional (#30452)
Merge pull request #31101 from Microsoft/cacheParseConfigFile
Move substitution type elimination to getActualTypeVariable
Better typings for promise.race based on conditional types (#31117)
Merge pull request #31078 from andrewbranch/bug/30752
Merge pull request #31116 from Microsoft/higherOrderConstructorTypes
Added custom error message when trying to assign constraint type to generic type parameter (#30394)
Better errors for indexing gettable/settable values (#26446)
Allow Boolean() to be used to perform a null check (#29955)
Merge pull request #31137 from Microsoft/fixConditionalInference
More test baseline adjustments.
Adjusted baseline for tests.
Adjusted tests to correct baseline with new __rest
Modified __rest output in test baselines.
Added a Object.prototype.propertyIsEnumerable check to __rest to prevent enumerable symbols from sneaking through.
Only instantiate types if we need to
Merge pull request #31150 from Microsoft/fixReadonlyIndexedAccess
Merge pull request #30779 from Microsoft/relateDiscriminants
Relate a source type that is sufficiently covered by a target discriminated union
simplify pragma comment parsing (#31144)
Merge pull request #31165 from Microsoft/targetAffectsEmit
Remove resetBuildContext
More refactoring
Instead of having two separate paths for building projects, (build all or invalidated use single path)
Make SolutionBuilder and SolutionBuilderWithWatch separate
Remove resolveProjectName as api
builderPrograms as ConfigFileMap
Diagnostics as ConfigFileMap
configFileCache, projectStatus, buildInfoChecked is now ConfigFileMap
Make FileMap Apis to match map but just ensure that keys are always paths Turn projectPendingBuild to config file map
Use maps for all the watch data structures
Make use of maps in build order calculation
More refactoring to move file map creation inside solution builder
Remove usage of fileMap for output unchanged timestamp modification and simplify to use configFileMap
Remove `getUpToDateStatusOfFile` from solution builder since that test anyways is tested with the --watch mode
Unchanged output time is no more required
Make api to return build order
Fix the graph ordering test case to check actual order and not just members as set
Remove unused variable
No need to calculate and store project references graph
Instead of maintaining queue for invalidated projects, use the pendingSet and graph queue
Merge branch 'master' into cacheParseConfigFile
Target affects emit hence mark the option so that all files are reemitted when target changes Fixes #31118
Merge pull request #31142 from Microsoft/binderPerf
Update user baselines (#31161)
Accept new baselines
Add additional tests
Accept new baselines
Add regression test
Remove over-eager check of AccessFlags.Writing in getIndexedAccessType
Fix binder performance regression
Accept new baselines
Add regression test
Fix inference to indexed access type containing substitution type
Accept new baselines
Add regression test
Properly instantiate true type when extends type is any or unknown
Accept new baselines
Add tests
check more case for empty binding patten (#25263)
Make changes to public API
Change the type of 'uriComponent' (passed to 'encodeURIComponent') from 'string' to 'string | number | boolean'. Fixes #18159 (#31103)
Enable caches while watch mode compilation
Merge pull request #31100 from Microsoft/tsBuildCacheModuleResolution
Fix #24991: Weaken narrowing for == (#29840)
Update existing baseline
Accept new baselines
Only defer function type inference when contextual type is function type
Update error code in baseline
Emit error on class fields named "constructor"
Merge pull request #31000 from Microsoft/ignoreStringIndexSignaturesOnly
Change error code
Add baselines
Add grammar error on quoted constructors for TS 3.5
resolveName: remove useless case (#28669)
fix 31012 allow noEmitOnError with isolatedModules (#34) (#31043)
add action for enabling experimentalDescorators option in user config… (#30484)
fix jsdoc iterator on expression of export assignment (#30558)
Update pull_request_template.md
add ES2020 matchAll APIs (#30936)
Accept API changes
Accept new baselines
Make `Omit` alias a separate type (#31115)
emit error on destructuring of rest property (#29609)
Avoid eagerly computing test payload (#27851)
Simplify hasExportDeclarations (#27846)
update error message and update baselines (#27628)
Only defer pure functions and pure constructor functions during inference
Add test for quoted constructors
Avoid recalculating versionPaths in loadNodeModuleFromDirectory (#27537)
When function parameters span multiple lines, make the function span start at the `(` (#26907)
fix compiler crash (#25925)
Simplify chaining of transforms (#22994)
allow literan enum const assertions (#30700)
Accept new baselines
Support higher order inferences for constructor functions
Accepted baselines.
Make `Omit` alias its own mapped type so that references to it never expand to `Pick<...>`.
Accepted baselines.
Added tests.
Cache files extended so we arent calculating the config again and again
Don’t use checkExpressionCached when checking spread element inside a loop
Merge pull request #31095 from andrewbranch/tslint-exclude-tests
Share module resolution cache among different program
Reuse map if module resolution is same for redirected and own files
Add getParsedCommandLine optional method on compiler host to be able to provide parsedCommandLine instead of redoing work
Merge pull request #31093 from andrewbranch/bug/30997
Exclude everything in tests
Add crashing test
Merge pull request #30971 from Microsoft/dtsSignatureChange
Exclude tests/cases from tslint
Fix crash getting error for type alias index signature without a type
[fix] ES5 Object.keys only accepts an object (#27089)
When unidirectionally merging symbols, do so recursively
Fix baseline file name changes
Add bad test case
Merge pull request #31008 from andrewbranch/bug/29358
Merge pull request #26151 from Kingwl/PropertyDeclarationExclamationToken
Update src/compiler/visitor.ts
Remove all but one server unit test
Copy smartSelect tests to fourslash
Add custom baseline format for smart selection
Parse generic function types in import type argument lists (#31079)
Rename _objectLiteralBrandBrand to _objectLiteralBrand. (#30797)
fix generate typenode from negative numerical literal (#30610)
Experimental management scripts (#31067)
Remove "generate types" code (#31075)
Fix contextual types for a single jsx child (#31040)
Skip primitive types comparison with array and object types (#31077)
Track parameter references errors in resolve name rather than secondary pass (#30349)
Fix iterable SetConstructor interface (#29777)
Add additional test to ensure merging more than augmentations still works
fix false positive 'variable is used before being assigned' in destructuring (#29636)
Remove the rule that replaces a union of literal types with the base type when comparing equality to a type that isn't a union of literal types. (#27588)
improve error message when type have same name (#27065)
Merge pull request #31063 from Microsoft/bai-community
Fix merging module augmentations to pattern ambient modules
Merge pull request #30743 from andrewbranch/bug/30675
30837 - Bad error message when default 'import'-ing an 'export =' without 'esModuleInterop' (#30847)
Add configure-experimental (#31064)
Better erreor messages for properties mis-handled as shorthand property declarations (#31039)
Update docs to reflect the removal of the "Community" milestone.
Update user baselines (#31058)
Only return the substitute in substitution instantiation when assignability fails (rather than subtype) (#31027)
Unify couldContainTypeVariables and the similar check done during instantiation (#30969)
handle generic types in getArrayifiedType (#30606)
baseline changes in other tests accepted
diagnostic messages conflicts resolved
Filter out zero-width selections
Consistify tabs/spaces in test and baselines
JSDoc author tag parsing updates (#17244)
Parse unexpected comments after email in author JSDoc tag (#17244)
Support email in author JSDoc tag
Merge pull request #29242 from Kingwl/attach_property_to_default_export
Add baselines for new tests
Merge pull request #30776 from andrewbranch/feature/10178
Revert accidental submodule change I guess
Revert accidental line ending change
Revert accidental line break added
Rename test to match
Rename to be smarter
Remove debug info
Skip lone variable declarations
Add stop for JSDoc comments
Special rules for binding elements, extend brace/whitespace logic to other kinds of bookended lists
Snap to nodes directly behind the cursor, create special rules for ParameterNodes
Solidify fake tree approach
Rethink sibling expansion by creating fake subtrees
Add rules for expanding selection to sibling nodes
Move to language service
Move most logic to separate file
Distinguish between same-line and different-line braces
Also skip TemplateHeads
Start imports
Add support for string literals
Add more tests, special handling for mapped types
Start smart select API
Check to make sure default npm exists at path before trying to use it (#30910)
Add tests for destructuring from variable with inferrable type
Clean up synthetic binding name creation and discriminating
Accept new baselines
Remove no longer extant gulp command from README (#31019)
Handle case where you have to add a destructuring after a try/catch block
Merge branch 'master' into ignoreStringIndexSignaturesOnly
Handle JSDoc backticks in the parser, not scanner (#30939)
Hide the table of perf results from the bot inside an expando element (#31007)
Remove unnecessary change
Enable renaming object binding patterns when needed
Add tests for binding elements that need to be renamed
Fix let/const selection for binding patterns
Add new baselines
Basic support for binding patterns in async/await code fix
Merge pull request #31002 from Microsoft/fixIsStringIndexSignatureOnlyType
Handle simple lib file in the test case
Merge branch 'master' into dtsSignatureChange
Code review feedback
Merge pull request #31005 from Microsoft/tsbuildTestPerf
Fix lateBoundSymbol test case to handle the simple lib file for the test
Merge branch 'master' into tsbuildTestPerf
Merge pull request #30970 from Microsoft/incrementalLateSymbol
Merge branch 'master' into incrementalLateSymbol
No need to fix hash of lib files since the content is now fixed
Make the tsbuild tests use simple libFile instead of bigger lib file set
Merge pull request #30980 from Microsoft/configChangeForEmit
Add test for #28334
Merge pull request #30944 from Microsoft/fixInferenceToMappedType
Accept new baselines
Add regression test
Ignore generic mapped types in isStringIndexSignatureOnlyType
Add diagnostics for relation cache size (#30999)
One more iteration
Revert and always use merged symbol to get members of late bound symbol Fixes #30891
Accept new baselines
Add regression test
Ignore string (but keep numeric) index signatures coming from constraints
Perform excess property checking on intersection and union members (#30853)
Even more succinct
Address CR feedback
Make sure to emit again if change in compiler option affects emit Fixes #30736
Combine semantic diagnostics of files using exported entities from modules and their dts emit
Handle dts change as well as signature update when exported module affects dts but not js file
When exported types from module change, the modules exporting these types indirectly mean d.ts change too (not just semantic diagnostics)
Remove unnecessary check since seenEmittedFiles is set when getting pending affected files
Write test case that baselines the incremental build result Testcase for #30780
When interfaces are merged, always ensure that the parent symbol of the late bound member symbol is declared symbol containing the node. Ensure that resolvedMembers adds the late bound symbol even when its resolved sunce lateBoundMember may or may not be added to resolved members depending on when its checked Fixes #30891
Test case for #30891
Merge pull request #30963 from Microsoft/fixObjectFlagsPropagation
Accept new baselines
Add regression test
Propagate ObjectFlags.NonInferrableType through widening
Update user baselines (#30958)
Bad error message when default 'import'-ing an 'export =' without 'esModuleInterop'
Explicitly encode keyof behaviors for never and unknown into getIndexType (#30753)
Accept new baselines
Add regression test
Fix inference from enum object type to generic mapped type
Merge pull request #30916 from jack-williams/array-elaboration
Gracefully parse 'super' with type arguments (#10677) (#30913)
Update user baselines (#30937)
Elaborate array and tuple relation errors
Merge pull request #30917 from Microsoft/fixIntersectionUnionConstraint
Accept new baselines
Add regression test
Remove incorrect optimization in getUnionConstraintOfIntersection
Update user baselines (#30885)
Update misspelling 'identifer' to 'identifier' (#30894)
Merge pull request #30877 from Microsoft/fixConditionalTypeSimplification
Merge pull request #30857 from Microsoft/fixInferenceToIntersection
Merge pull request #30769 from Microsoft/saferIndexedAccessTypes
Accept new baselines
Add regression test
Use object identity check instead of IsTypeIdenticalTo
Merge pull request #30856 from Microsoft/nonInferrableType
Update DOM 2019/04/11 (#30867)
Accept new baselines
Add tests
Only infer to single naked type parameters in intersections
Accept new baselines
Add regression test
Simplify non-inferrable property check to rely on propagation
Add new nonInferrableType with ObjectFlags.NonInferrableType
Fix some bad jsdoc comment indent (#30838)
Accept new baselines
Add test
Properly filter mapped types in getIndexType with noIndexSignatures=true
Remove old comment
Update user baselines (#30832)
Accept new baselines
Optimize T[K] where T has string index signature and no other members
Merge pull request #30786 from Microsoft/always-check-class-extends
Use suggestion instead of ignoring UMD global access
Add affectsSemanticDiagnostics to flag (and move to right spot)
Update baselines with new flag
Add period to compiler flag description to match others
Add baselines for UMD global access
Don’t emit diagnostic accessing UMD globals from modules when flag is set
Add test
Add allowUmdGlobalAccess flag
Accept new baselines
Merge pull request #30754 from Microsoft/update-dom-042019
Simplify obtaining base constraint of T[K] for writing
Merge pull request #30758 from andrewbranch/bug/30647
Merge branch 'master' into update-dom-042019
Merge pull request #30812 from typescript-bot/user-update-Microsoft-20190301
Update user baselines
Merge pull request #30801 from Microsoft/tweakUnionTypeInference
Accept new baselines
Merge branch 'master' into tweakUnionTypeInference
Add tests
Fix unsafe parameter coercions related to PragmaPseudoMap
Accept new baselines
Merge branch 'master' into saferIndexedAccessTypes
Do not request reviewers for fork-triggered PRs, just mention them
More conditional linkage in user PR responses when manually triggered
Merge branch 'master' into always-check-class-extends
Always check extends clause of classes
Small addition to user PR script to support fork/branch PRs
Cache substitution types (#30775)
Tweak union type inference to restore previous behavior
Merge pull request #30740 from Microsoft/moduleAndAmbientResolutionConflict
Merge pull request #30773 from Microsoft/update-user-tests
Added error for class properties used within their own declaration (#29395)
Fix missing baseline diff (#30770)
Accept new baselines
Add tests
Accept new baselines
T[K] ignores index signatures in T's constraint
Change the default type parameter constraints and defaults to unknown from {} (#30637)
Updated baselines again
Merge pull request #30734 from andrewbranch/bug/30664
Add/update baselines
Fix arity error sometimes reaching out of bounds of the arguments actually present
Add failing test for function calls that have at least one non-spread argument, a spread argument, and overall potentially too few arguments
Update TypeScript-React-Native-Starter
Merge branch 'master' into property-use-before-declare
Merge pull request #30552 from Microsoft/omit
Update DOM 04-04-2019
Updated annoying 'globalTypes' list.
Accepted baselines.
Fix tests to be non-global.
Add the Omit helper type.
Make anonymous function formatting apply to anonymous generators too
Fixed post-merge introduced lint errors
When old program resolved to module and that file is included, dont consider as ambient resolution. Fixes #30422
Accepted baselines.
Update version to '3.5.0'.
Merge pull request #30726 from Microsoft/fix30653
Add new baselines
Fall back from globalReadonlyArrayType to globalArrayType when transpiling
Merge pull request #30721 from Microsoft/amdOut
VS IntelliCode-related changes (#30731)
add new message - TS1258 (#30704)
Merge pull request #30719 from andrewbranch/bug/30668
Accepted odd new baseline
Merge branch 'master' into property-use-before-declare
Addressed quick feedback items
Treat hoisted temp variables as a custom prologue
Accept new baselines
Minor fixes
Never create redirect for sourceFiles that get emitted to single output file Fixes #30591
Add test when module resolution resolves to original file of referenced project with --out Test for #30591
Merge pull request #30699 from andrewbranch/bug/30635
Add baselines for new test
Don’t crash in forEachIdentifierInEntityName
Add failing test
Merge pull request #30695 from andrewbranch/bug/30638
Report program's source files even when there are errors when building using --build mode
Use const contexts and tuple mapped types to simplify some explicitly elucidated types (#30654)
Update user test submodules (#30705)
Just look at the current node instead of context
Add new baselines
Be stricter while parsing arrow function heads in conditional expressions
More exploration of indexed access type constraints in type relations
Update user baselines (#30703)
Remove unused arguments
Add test for parenthesized variable and function keyword within ternary
Add new baselines for destructuring void
Handle destructuring zero elements from void
Add failing tests for destructuring void
Accept new baselines
Add getIndexedAccessOrUndefined function
getIndexedAccessType for assignment target uses intersections
Merge pull request #30513 from Microsoft/incrementalFromCommandLine
Add test for out file concat where command line --incremental flag changes between compilation
Improve soundness of indexed access type relations
Merge pull request #29493 from Kingwl/avoid-quickfix-for-declaration-file
optimize treeToArray
copy comments from string to template literal
Handle imports and exports in 'convert parameters to destructured object' (#30475)
Merge pull request #30568 from Microsoft/instantiateContextualTypes
Merge pull request #30626 from Microsoft/discriminantFromIntersectionErrors
Accepted baselines.
Generalize to intersection types when looking for discriminants in error reporting.
Accepted baselines.
Added test.
copy comments from template literal to string
Unify substitution type `any` handling into costruction and instantiation (#30592)
test also the output from visibility tests
add support for hex and unicode escapes
catch case when there is only single expr and optimize arrayToTree
optimize and add more tests for parenthesized case
update external files api
Merge branch 'master' into avoid-quickfix-for-declaration-file
Add test for incremental with --tsbuildinfo file without specifying --out or config
Merge branch 'master' into incrementalFromCommandLine
Merge pull request #30605 from Microsoft/sourceFileVersionTsc
Pull out the incremental compilation into a function so we can test it
Make it as api so we can test it
Ensure that from tsc with --incremental sets source file version Fixes #30588 and #30589
Always assert that source files are versioned when program is used with Builder
Update user baselines (#30595)
Compute per-element contextual type in getSpreadArgumentType
Make tsbuildInfoFile as commandline option to tsc (and not tsc -b)
Forbid accessing block-scoped variables on globalThis (#30510)
Accept new baselines
Add tests
Accept new baselines
Introduce ContextFlags to propagate origin of request for contextual type
refactor creation of template expression
support case when variable is re-assigned
clean test cases
support single quotes when decoding raw string
complete handling for octal escape
add skeleton for handling octal escape
add test cases
extract getEdits for template literal
optimize templateLiteral check
change from tuple to object literal
optimize getEdits string concatenation
extract getEdits for string concatenation
optimize nodesToTemplate
extract creation of templateHead
only show toString if expression is not binary
add possibility to invoke from parentheses
remove parentheses also when expression at ending
treat corner cases
optimize preceding expression
do not offer refactoring for tagged templates
combine preceding expressions to one
fix test case
add toString visibility from expression and from middle part
catch empty head of template literal
complete toString
complete toTemplate
add test cases
add working conversion to template literal
add diagnostic messages
add visibility tests
add test cases
add test cases
add skeleton
Instantiate contextual type using non-fixing mapper
Add script for posting perf results back to GH (#30526)
Fix find all references of inherited constructor (#30514)
Handle huge unions better in createUnionOrIntersectionProperty (#30411)
update types
Merge branch 'master' into attach_property_to_default_export
Fix crash caused by cyclic defaults (#30532)
Merge pull request #30524 from Microsoft/moduleResolutionError
Fix typo
Report output file not built error for any module resolution that ends up to source file Fixes #29918
Update user baselines (#30521)
Allow --incremental to be command line option
Add test for current --incremental behaviour
Merge pull request #30495 from Microsoft/fix29427
Merge pull request #30414 from Microsoft/jsSyntaxCompletions
Merge pull request #30438 from Microsoft/tsconfigChangeDetection
Check extended tsconfig time with oldest output time to report not upto date
Merge branch 'master' into tsconfigChangeDetection
Merge pull request #28609 from ajafff/class-decorator-generics
Merge pull request #30494 from Microsoft/fix29561
Merge pull request #30492 from Microsoft/prettyBuild
Adjust offset to account for 'this' parameter when emitting parameter decorators
Prevent substitution of 'super' in async super helper
Merge pull request #30491 from Microsoft/fix30066-master
Ensure --pretty with --build is passed correctly to create reporters Fixes #30282
Fix _superIndex emit when super access captured in async arrow
Use shorthand property assignment in convert parameters to object (#30468)
Remove circularity fallback deferral in `getConditionalType` (#30470)
Fix authors script (#30440)
Merge pull request #30439 from Microsoft/forceBuild
Fix convert to named parameters rest parameter tuple (#30286)
Update user baselines (#30463)
fix error on globalThis type extend (#30460)
Merge pull request #30084 from dragomirtitian/GH-26563
Merge pull request #30443 from Microsoft/fixTypeInferenceLogicError
Merge pull request #30363 from Microsoft/fixTypeParameterPromotion
Accept new baselines
Add test relating type predicates with and without this parameters
Make IdentifierTypePredicate.parameterIndex index into signature.parameters
Fix globalThis completions (#30441)
Fix logic error introduced in #30334
Passing --force option to build, builds project from start
Revert "Passing --force option to build, builds project from start"
Passing --force option to build, builds project from start
Merge pull request #30437 from Microsoft/validSourceFile
Check oldest output time with tsconfig time to see if its out of date Fixes #26503
implements not a keyword in js
Add more information when getValidSourceFile cant find the file in question. Log for #30180
Fixes #29524, a merged UMD-global (#30403)
Duh!! Static is allowed in JS.
Enable better error spans for async functions (#30413)
Filter ts only keywords from js file completion Fixes #29212
Merge pull request #30402 from Microsoft/resolveJsonModule
Merge branch 'master' into resolveJsonModule
Merge pull request #30410 from Microsoft/fixNonDeterministicTest
PR feedback
Pass time to the vfs of resolveJsonModule
Merge pull request #30409 from Microsoft/betterDiagnostics
rename convert to named parameters (#30401)
Display actual and expected diagnostic messages when they dont match
Merge pull request #30404 from Microsoft/correctBuilder
Use EmitAndSemanticDiagnosticsBuilder in builder from tsc
Exclude Json files from Project reference redirects from files to be emitted list Fixes #30382
Handle outDir and declrationDir correctly to generate output file names for the tsbuild
Merge pull request #30383 from Microsoft/fixFindAllRefsOfDefaultExport
Merge pull request #30380 from Microsoft/completionsWhileWritingSpread
Merge pull request #30384 from Microsoft/completionsInTypeParameter
Merge branch 'master' into fixFindAllRefsOfDefaultExport
Merge pull request #30381 from Microsoft/mapConstructor
Add extends of type parameter as type only location for completions Fixes #28511
Fix react-redux break on DT (#30375)
add tests for finding references of named and default exports
fix check for default export
Merge pull request #30374 from Microsoft/jsonSourceFile
Fix map constructor to accept readonly tuple Fixes #29721
Merge pull request #30376 from Microsoft/recursiveSymLinks
Fix completions when writing spread expression Fixes #29234
Handle recursive symlinks when matching file names Fixes #28842
Correct the generation of output file names for tsc --b Fixes #30356
Merge pull request #30344 from Microsoft/uptoDate
Merge pull request #30288 from Microsoft/nonModuleNonPrepend
Accept new baselines
Add test
Proper contravariance in type parameter promotion
Merge pull request #30348 from Microsoft/nonIncrementalPrepend
Accept new baselines
Add test
Only promote type parameters when they're referenced in input positions
Delete webtsc gulp tasks (#30350)
Mark tsc.release as incremental
Do not schedule updating bundle if the buildInfo file wont be generated for the project Fixes #30346
Giving too many arguments should error on the first argument that exceeds arity (#27982)
Fix mixin logic to preserve at least one constructor type even when the (#27701)
Handle generic mapped types in getTypeOfPropertyOfContextualType. (#27586)
Set oldestOutputFileName in uptodate status when updating just timestamps of output Fixes #29875
add related error span for default exports (#25396)
improve stripInternal with inline comments (#23611)
Merge pull request #30336 from Microsoft/update-pr-template
Merge pull request #30334 from Microsoft/inferenceContextCleanup
Update pull_request_template.md
Change casts to non-null assertions
Accept new baselines
Add tests
Remove redundant typeParameters property from InferenceContext
add jsx factory and hold text in jsxtext node (#29439)
InferenceContext has-a (not is-a) mapper and has-a new nonFixingMapper
Add regression test for #29692 (#30325)
Forbid contravariant inferences to conditional type branches (#30287)
Merge pull request #30292 from Microsoft/fixRestSignatureRelation
Update user baselines (#30317)
Rename contextualMapper to inferenceContext (which it always is)
Fixed isVariadic handling when signature parameters are expanded for itemInfoForParameters
Merge remote-tracking branch 'remotes/origin/master' into GH-26563
Merge pull request #30303 from Microsoft/fixSignatureQuickInfo
Fix signature cloning to ensure target and mapper are propagated
Merge pull request #30299 from Microsoft/showExpandedParameters
Accept new baselines
Show expanded parameter lists in signature help
Fix case where getParameterTypeAtPosition didn't return undefined for out of bounds
Merge pull request #30278 from Microsoft/fasterhash
Add output declaration files from referenced project into program if module: none
Merge pull request #30232 from Microsoft/incrementalWithNormalTsc
Rename setGetSourceFileAsHashVersioned
Rewrite fallback hash to be faster
Udpate LKG
Fix tests after rebase
Add incremental to normal tsc
Enable incremental program updates through tsbuildinfo in tsc --watch mode
Read program from buildInfo
Make watch use sourceFileHash so it can be used with --incremental as well
Merge pull request #29813 from Microsoft/incrementalBuildInfo
Conditional type simplifications & Globally cached conditional type instances (#29437)
Update LKG
Build project if existing project was built with different compiler version
Merge pull request #30259 from Microsoft/transformFlagCleanup
Add tests that will verify that all rebuilding with new compiler version builds again
Add assignability rule relaxing the assignability of partial mapped types (#30112)
Reset toplevel flag when higher priority inference takes place (#30265)
Add compiler  version to buildInfo
To test platform independent buildInfo baselines, move the logic to writeFile of SolutionBuilderHost
Merge branch 'master' into incrementalBuildInfo
Merge pull request #30215 from Microsoft/higherOrderFunctionTypeInference
Remove unused (and sometimes broken) targets and scripts (#30054)
Change to debug fail instead of assert never
Instantiating a signature in the context of another should infer from return type predicates if they match up (#30242)
Add fix for webpack history merge bug (#29339)
Merge pull request #30247 from Microsoft/recursiveDirectoryIgnore
Renumber transform flags
Merge branch 'master' into transformFlagCleanup
Fix check for function type (allow checked type to have overloads)
Merge pull request #30244 from Microsoft/declarationEmitError
Remove DestructuringAssignment and Generator flags
Ignore anything starting with ".git" Fixes #29782
In recursive directory watching ignore folders and files in node_modules starting with "." Fixes #30004
Remove Super/ContainsSuper transform flags
Handle error when type parameter of mapped type uses private type Fixes #30201
Restore ContainsLexicalThsi flag for performance
Merge pull request #30089 from Microsoft/convert-to-named-parameters
Fix issue of more inferences leading to worse results
Minor change to heuristic for deferring generic calls
remove unnecessary closures
Merge pull request #30107 from Microsoft/applyChangesToOpenFiles
remove sudo: false setting from travis.yml (#30231)
Rename the request as updateOpen
Fix unnecessary additional deletion paths from cleanLssl target
Update LKG
Store semantic diagnostics as well (for future tsc without build but incremental)
Update LKG
Remove unnecessary excludeArgument array and getExcludeArgument function
Merge branch 'master' into incrementalBuildInfo
Fix prologue emitting in case of modules with --out scenario
Add tests to verify output of --out with modules as output
Accept new baselines
Consistently defer generic functions to second type inference pass
Update user baselines (#30211)
Fix lint error
Accept new baselines
Add tests
Minor fix
Improve scheme for creating unique type parameter names
add test for non-transient symbol
Accept new baselines
Infer higher order function types when possible
Accept new baselines
Add tests
Defer calls to generic functions returning generic functions
Merge pull request #30179 from Microsoft/fixGetParameterNameAtPosition2
Accept new baselines
Add regression test
Fix out-of-bounds issue in getParameterNameAtPosition
Accept baselines with new build system
Update gulp to build using this branch
Update LKG with the branch build
Refactor the tests
use getTouchingToken
Because .tsbuildinfo is flag now, use .tsbuildinfo just like any other output to determine if project needs rebuild
Fix the build error
Merge branch 'master' into incrementalBuildInfo
Fix incorrect message when incremental is false with composite projects
Add options tsBuildInfoFile to provide name for the buildinfo file
Incremental false with composite not allowed
use interface for ValidVariableDeclaration
Minor fixes
Update user baselines (#30168)
Merge branch 'master' into deferGenericFunctionInference
Skip generic functions along with context sensitive arguments
remove inlineable
Always use same code path when transforming function bodies for es2015
Add regressions for conditional types that affect parameter variance (#30146)
Accepted baselines.
Update LKG.
Fix test by reverting change in textChanges that occured by mistake in 499bc70056c95f72bade0326aad38c671ae6d204
Accept baselines
Update the tsconfigs
Resolve aliases to jsx namespace symbol (#30160)
Changes to generation of .tsbuildinfo: - If composite or incremental then only the .tsbuildinfo will be generated - if --out or --outFile the file is outputFile.tsbuildinfo - if rootDir and outDir then outdir/relativePathOfConfigFromRootDir/configname.tsbuildinfo - if just outDir then outDir/configname.tsbuild - otherwise config.tsbuildinfo next to configFile
Merge pull request #30114 from Microsoft/contextualGenericRestParameter
Merge pull request #30109 from Microsoft/circularConstraintErrors
Only collect inferences which actually have inferences into the returnMapper (#30111)
add diagnostics message for refactor description
use sortAndDeduplicate instead of deduplicate
Convert CheckMode to a flags style enum
Remove 'this'-related tx flag usage from transformConstructorBody
minor refactors to convertToNamedParameters
refactor getGroupReferences
Merge branch 'master' into incrementalBuildInfo
Merge pull request #30136 from RyanCavanaugh/no-mkdir-race
Don't crash if someone created a folder while we were checking to see if it exists
Add globalThis (#29332)
Use identity with the permissive instantation to detect nongenric instances and disable variance probing on nongeneric instances (#29981)
Apply changes in reverse order even in new API to match behaviour with internal api
Merge pull request #30133 from Microsoft/revert-conditional-type-invariance
Update baselines
Revert "Merge pull request #27697 from mattmccutchen/issue-27118"
Merge pull request #30110 from Microsoft/revertExecFileSync
refactor utilities
Merge pull request #30094 from Kingwl/improve_completions_for_optional_props
Revert "Use execFileSync in typing installer"
Revert "Do not wrap npm path with quotes"
Merge branch 'master' into contextualGenericRestParameter
Dont create a union type to infer conditional type branches (#30010)
Make a fresh empty object literal not a subtype of a type with an index signaure (#29975)
Accept new baselines
Add regression test
Accept new baselines
Issue errors for all circular type parameter constraints
Make applyChangesToOpenFiles efficient to handle batch file opens, close and changes before updating projects Fixes #29667
Add request applyChangesToOpenFiles
Add test that batches all the open files to update program only once
remove unused LeadingTriviaOption and TrailingTriviaOption options
don't export useNonAjustedPositions
change startPosition and endPosition to leadingTriviaOption and trailingTriviaOption
Merge pull request #30095 from Microsoft/nodeExecFileSync
Do not wrap npm path with quotes Fixes #30086
check completions with assignable rather than identity
Retain substitution types through instantiation if possible (#30059)
Include misc script outputs in local build (#30092)
Fix baseline accept when there are multiple .delete files (#30091)
Remove NewTargetInComputedPropertyName hierachy fact
add tests
Removes 'TypeScript' transform flag
Merge pull request #30078 from Microsoft/updateNpmIgnore
Merge branch 'master' into convert-to-named-parameters
add new tests for bad class references
update failing tests
Improved argument description for parameters originating from tuples that were extracted from functions. (ie mapped functions)
Merge pull request #30062 from jwunderl/quick-fix-any-annotation
Fix `.npmignore` by adding the `.git` file (as opposed to just a directory, which is not the case for  git worktrees) and the `.failed-tests` file.
For now disable the new build
Enable building typescript.d.ts with current source
clarify intent in returnType creation
remove any annotation from declare method quickfix
fix comment
check usages of class if refactoring a constructor
Dont emit sourceMapUrl from prepend text into the --out file
Merge branch 'master' into incrementalBuildInfo
Add test when declarationMap and sourcemap are disabled in the referenced project
Fix the blank lines for internal enum members with --stripInternal
Test that shows stripInternal of enum member prints multiple blank lines for the enum members
Fix baseline-accept-rwc (#30052)
Fix incorrect emit when internal method is inside internal interface
Test when internal and text region dont mix well together
Allow away to only test baselines excluding all other file read checks that are not going to change per scenario
Fix the crash found while compiling src/compiler
Update user baselines (#30046)
Report error if overwriting buildInfo of another project reference
Have runtests always throw on failure, make rm stream signal end of read queue (#30035)
Update the message to not just mean javascript since we might need to regenerate .d.ts as well
Allow empty own source files
Refactoring for outFile tests
expose token flags and numeric flags (#29897)
Merge pull request #30028 from Microsoft/betterOverloadErrors
Update the programBuildInfo to be platform and change independent so we can baseline it safely
Redirect getProgramBuildInfo onto builder so that we can test it for baselines more easily
Correctly set sourceFileInfo for bundle when generating output without creating program
Add test to verify incremental build is same as if its built clean
Accepted baselines.
Give a related span pointing to the implementation signature when reporting incompatibility.
Be more specific in errors.
Accept public Baselines
Merge branch 'master' into incrementalBuildInfo
Fix emit when internal propogates through multiple levels of references
Combine d.ts and .js emit
Because we already have texts for fixing the emits, write them only if changed
Remove jake (hopefully for real this time) (#29085)
Enable other stripinternal test cases
Merge branch 'master' into convert-to-named-parameters
Fix issue with .tsbuildinfo the .d.ts emit when emitting without creating program
fix no space before equal operator in type parameter (#29990)
Handle synthetic references better
minor refactors
Handle emit when using prepends and the referencing project has --stripInternal true
Add sections to the prepend (to be later used for stripInternal)
Add test for multi level prepend
Tests for strip internal
Merge branch 'master' into incrementalBuildInfo
fix no space before equal operator in type parameter
Fix build breaks (#29977)
refactor expected test output
add tests for inherited constructor and method
include trailing trivia after expression in getAdjustedEndPosition if endPosition is include
Merge pull request #29959 from Microsoft/noResolvedTypeOverwrite
Remove diagnostic dependent output in `structuredTypeRelatedTo` (#29817)
Merge pull request #29948 from tomholub/patch-1
don't provide refactor in js file
Accept new baselines
Add tests
Improve contextual typing by generic rest parameter
Accept new baselines
Never overwrite resolved type of symbol
update docs: dated build cmd
copy argument comments to property
replace argument list instead of whole call when refactoring
create new ConfigurableStart and ConfigurableEnd options and rename them
rename refactor tests
Merge pull request #29816 from Microsoft/ti
Merge pull request #29935 from RyanCavanaugh/md5_2_sha
Merge pull request #29923 from Microsoft/freeTypeFlags
Use sha256 to hash file contents
Fix broken check in getUnionType (check was always true)
Simplify flags propagation logic
Update lodash dependency (#29903)
Move TypeFlags.PropapatingFlags to ObjectFlags to free up 3 flags
Merge pull request #29896 from dragomirtitian/GH-29778
Merge branch 'master' into incrementalBuildInfo
Add diagnostic context for expando property declarations (#29905)
Fixed tslint error.
Readd configure-insiders task to Gulpfile (#29907)
Remove ES2015 and ContainsDefaultValueassignments flags
fix reference checking
Disable node 6 (#29832)
return function expression name in getFunctionDeclarationNames
don't apply changes when unexpected reference is found
Accept new baseline for Improve error message for using value as type.
Improve error message for using value as type.
Use built local on CI and not LKG (#29886)
don't apply refactor when parameter has decorators
Make printer option to be writing bunfle file info and use the result instead
Move bundleFileInfo as printer options
add tests for comments
copy comments when refactoring
create functions for copying trailing comments and rename previous copyComment function
Merge pull request #29860 from RyanCavanaugh/noEval
Merge pull request #29847 from Microsoft/inferToUnionTypes
Merge pull request #29787 from Microsoft/inferToPartiallyHomomorphic
Add setInterval/setTimeout
Enable no-eval rule
Merge branch 'master' into inferToUnionTypes
Merge pull request #29858 from Microsoft/fixContextualRestTuple
Accept new baselines
Add regression test
Accept new baselines
Disable checkJS survey (#29830)
Merge pull request #27697 from mattmccutchen/issue-27118
Accept new baselines
Add regression tests
Accept new baselines
Update test
Accept new baselines
Make inferences to union types containing multiple naked type variables
Use getIndexedAccess to compute type for contextual rest parameters
Make the assignability rule for conditional types require the check types and distributivity to be identical.
Update user baselines (#29826)
Update user baselines (#29800)
Delete wayward comment
Accept new baselines
Add more tests
Process more complex constraints as per CR feedback
Handle when no .tsbuildinfo is to be generated
Merge pull request #29167 from saschanaz/es2019
Merge branch 'master' into incrementalBuildInfo
Emit bundle information into bundle field of buildinfo and only if bundled emit
Use execFileSync in typing installer
restore lib/*
Merge remote-tracking branch 'upstream/master' into es2019
Merge branch 'saschanaz-async-es2018'
Merge branch 'async-es2018' of https://github.com/saschanaz/TypeScript into saschanaz-async-es2018
Dont emit program information in --out scenarios
Merge pull request #29726 from bmeurer/modifierFlagsCache
Fix incremental build changes declaration dir
Add mechanism to dump and read program to build info
Generate buildInfo for non --out and prepend options as well
Merge branch 'master' into usePrependToSkipBuild
Fix linter warnings.
Merge pull request #27292 from kpreisser/fix26090
Fix missing comma
Ran `gulp baseline-accept` again to rebaseline the JSDoc tests
Merge pull request #29783 from Microsoft/jakeUseLkg
Merge branch 'master' into usePrependToSkipBuild
Add another test to generate baseline when sample's logic config file changes declaration dir
String.prototype.{trimStart,trimEnd} hit stage 4
Array.prototype.{flat,flatMap} hit stage 4
PR feedback.
revive esnext.symbol
restore flags
Merge branch 'master' into es2019
revive esnext.asynciterable
Add try priors as finally lock label andecedents rather than pre finally label antecedents (#29790)
Merge remote-tracking branch 'upstream/master' into async-es2018
Accept baseline diff
fix hasThisParameter to check for parameters length
Merge pull request #29785 from jessetrinity/add-auto-quotepreference
Accept new baselines
Add tests
Merge branch 'master' into convert-to-named-parameters
fix duplication of leading and trailing comments on refactored function
add option to suppressLeadingAndTrailingTrivia non recursively
Remove ES2018 transforms for ES2018 target (#26315)
Generate baselines for sample
Generate baseline of .tsbuildinfo sections
accepted new baselines
Added auto setting to quotePreference
Infer to partially homomorphic mapped types (such as Pick<T, K>)
Merge pull request #29740 from Microsoft/fixCircularMappedArrayTuple
Modifies the jakefile to use the LKG by default unless USE_BUILT=true is set
Also initialize transformFlags properly in NodeObjects.
Ran `gulp baseline-accept` to rebaseline the JSDoc tests
assertNever no longer crashes on string input (#29764)
Fix initialization of `TokenOrIdentifierObject#transformFlags`.
Merge pull request #29766 from Microsoft/USE-ALL-THE-ES2015-NAMES-WESLEY-WHAT-IS-SO-HARD-ABOUT-THAT
Accepted baselines.
Give good error messages on more types.
Added test.
Merge pull request #28465 from alangpierce/enforce-const-enum-access-for-isolatedmodules
getEffectiveBaseTypeNode: only use JSDoc augments if there is extends (#29349)
Factor out baseline generation into tsbuild helper so that sample can generate baselines as well
Merge pull request #29756 from Microsoft/fixStrictPropertyInitialization
Accept new baselines
Add regression test
Revert change to strict property initialization checks
Since dts file doesnt change the dts bundle info doesnt change either so no need to save the new buildInfo for dts emit
Merge pull request #29711 from jack-williams/switch-on-unknown
Accept new baselines
Add regression tests
Accept new baselines
Less aggressive logic for detecting circular mapped arrays and tuples
Merge branch 'master' into usePrependToSkipBuild
Use prologue directive information in buildInfo to emit prologues when manipulating js output bundle file
DOM update February 2019 (#29690)
Update test baselines
Factor out unparsed source file for own creation
Map dts file to sections to write and fix from
Even though .d.ts doesnt change, the map file most likely changes, so emit that
Use stored helpers to emit incrementally
Perform only emit on js file if no decl file change
Store pologue information in bundle info
Merge pull request #29696 from Microsoft/filter-unknown
Merge pull request #29695 from Microsoft/fixDtsTypeReferenceEmit
add tests for rest parameters
implement refactor for functions with a rest parameter
Merge pull request #29714 from Microsoft/fixInstanceofTypeofControlFlow
Merge pull request #29705 from Microsoft/fixParametersAndReturnType
Merge branch 'master' into fixDtsTypeReferenceEmit
Update user baselines (#29682)
Make modifierFlagsCache mandatory for Node objects
Accept new baselines
Add regression test
Make exception for synthetic 'this.x' in narrowTypeByInstanceof
Fix lint errors
Merge branch 'master' into switch-on-unknown
Merge branch 'master' into fixInstanceofTypeofControlFlow
Merge pull request #29712 from jack-williams/update-baseline-for-json-changes
Update baselines for types affected by JSON change
Fix NarrowTypeByTypeof, NarrowTypeByInstanceof, isPropertyInitializedInConstructor
Narrow unknown in switch
Merge pull request #28270 from AnyhowStep/json-parse-reviver-stringify-replacer-better-declaration
Accept new baselines
Add tests
Accept new baselines
Less restrictive constraints in Parameters and ReturnType types
Merge remote-tracking branch 'origin/master' into enforce-const-enum-access-for-isolatedmodules
Add helpers from source files to the bundleInfo to be used later
Add source information to bundle info and use it to emit header information later on
Use unknown for array predicates' return types
Merge pull request #28125 from fullheightcoding/typos
add more tests
fix refactor to find super references
Fix type reference dts emit failure
Merge pull request #29446 from fuafa/infer-js-doc
Merge pull request #29136 from ajafff/usedbeforedeclaration-objectspread
Merge branch 'master' into typos
Don't  refactor if variable declaration has type annotation
Merge pull request #29478 from Microsoft/fixContextualReturnTypes
Store commonSourceDirectory
Merge pull request #29665 from ajafff/readonly-error-message
Merge pull request #29647 from Microsoft/noConstraintsDuringInference
Handle GetAccessor and SetAccessor in isThisless (#27869)
Accept new baselines
Add breaking change repros
More refactoring
Merge branch 'master' into fixContextualReturnTypes
Merge pull request #29685 from Microsoft/fixSubtypeReductionEstimate
Increase accuracy of remaining subtype reduction work estimate
Minor improvements of code and comments.
Correctly adjust the backward reference of the next entry when deleting an entry.
Adjust the unit test to spot a missed bug in the delete() implementation.
Revert a few unneeded (stylistic) changes.
Rework the implementation of the shimMap to ensure iterators will behave the same as with native Maps.
Add a unit test for the shimMap (currently failing).
PR review: Fix typo.
Fix lint issues.
Follow-Up: Avoid the memory leak problem by simply not allowing existing iterators to continue once an entry has been deleted from the map.
Adjust the iteration behavior of the shimMap (used for IE 11) to visit values that are added while forEach is running.
Merge branch 'master' into usePrependToSkipBuild
Verify header updates
Dont do base build again for each incremental scenario
Some more reorg in test
Dont diff with only sources in incremental compilation, diff with the base build
Baseline incremental build baselines
Separate out the tests for tsbuild into its own folder
Accept new baselines
Revert previous changes, use flag to disable fixing during constraint check
Update user baselines (#29660)
Use same property name for BundleFileSection and UnparsedNode for easy node creation
Add SourceMapUrl to section
clarify error message for 'readonly' type operator
Create nodes for unparsed text, prepend text
Create prepend text sections in .buildInfo
Generate .tsbuildInfo if bundle uses references with prepend
If the project only needs prepend output to be changed, prepare to just manipulate output Step 1: Update the verbose log to reflect it
Fix UnparsedPrologue kind
Merge pull request #28240 from ajafff/add-to-types2
update baseline
Merge branch 'master' of github.com:Microsoft/TypeScript into add-to-types2
Merge pull request #29298 from ajafff/this-reference-in-parameter
Merge pull request #29115 from KromDaniel/patch-1
Merge pull request #28190 from ispedals/bug/24709
Merge pull request #27934 from mayn/spelling
Allow per-file setting for rename default behavior preferences (#29593)
Test case when final project isnt composite project
Merge pull request #29510 from Microsoft/constContexts
Merge pull request #29576 from Microsoft/fixContextuallyTypedParameters
More logs verification
Merge pull request #29650 from Microsoft/gulpMinParallel
Merge branch 'master' into prependWithBundleInfo
Merge pull request #29626 from Microsoft/toLowerCase
Handle "" correctly when cacheing file text
Make 'gulp min' build tsc/tsserver in parallel
Make the bundle info into buildInfo
Make file generic to be .tsbuildinfo
Merge branch 'master' into prependWithBundleInfo
Accept new baselines
Add regression test
Update user baselines (#29645)
Accept new baselines
Only check constraints after type argument inference is complete
Merge pull request #28489 from ajafff/shebang-comments
add tests
update tests formatting
preserve this parameter when refactoring
Merge pull request #26941 from jack-williams/narrow-unknown-with-triple-equals
Dont use tsbundleInfo to determine if bundle needs to be rebuilt
Create tests when bundleInfo file is not present
Dont assert but verify sourceMapGenerator
Update user pr script for latest version of octokit (#29639)
Handle --clean with .tsbuildinfo
Merge branch 'master' into constContexts
Merge pull request #29435 from Microsoft/readonlyArrayTuple
Use bundle info to store info about prologues, emit Helpers, references etc
Merge pull request #29637 from j-oliveras/patch-1
Update user baselines (#29633)
Bump version on issue template
Fix lint error
Accept new baselines
Handle readonly arrays and tuples in decorator metadata serialization
Merge branch 'master' into convert-to-named-parameters
Add tests for convert to named parameters refactor
Merge branch 'master' into readonlyArrayTuple
Refactor direct function calls
Move function getTypeNodeIfAccessible from inferFromUsage to utilities
Accept new baselines
Add subtype reduction complexity limit test
Accept new baselines
Merge pull request #29619 from Microsoft/simpleGulp
Higher complexity limit for unions of primitives only
Error on union types that are too complex to represent
Bump version to 3.4.
Handle get from readFileCache correctly. Fixes #29623
Tuples are known to be covaraint
Simplify gulp to just use 'tsc -b' to build, update to gulp@4
fix spelling errors
revert invalid baseline change
accept baseline changes
revert change of trailing comment parsing
Merge branch 'master' into shebang-comments
Accept new baselines
Add tests for decorators and declaration emit from error free source
Merge branch 'master' into readonlyArrayTuple
get appropriate parent jsdoc node for arrow functions
Merge branch 'master' into fixContextualReturnTypes
Merge branch 'master' into fixContextuallyTypedParameters
Merge pull request #29591 from Microsoft/removeUnnecessaryDeclarations
Include index signatures of the source in mapped type template target inferences (#29253)
Fixup restrictive instantiations to actually erase type parameter constraints (#29592)
Handle triple slash refs
Handle emit helpers in --out scenario
Handle prologues in prepend outputs
Tests for multiple prologues
Handle shebang when using prepend nodes
Generate readable source map baselines for -b --out scenario
Write testcase to baseline with strict, prologues, shebangs
Skip declaration emit for files that are just executables
Merge pull request #29422 from Microsoft/fix29006
Merge pull request #29584 from yacaovsnc/master
Merge pull request #29583 from Microsoft/gulpTsserver
Fix crash in watch-local
Add tsserver task to gulp
Remove extra http str in badge url
Accept new baselines
Address CR feedback
Accept whitespace change in baseline after merge
Merge remote-tracking branch 'origin/master' into enforce-const-enum-access-for-isolatedmodules
Don't report circularities when parameter has itself as contextual type
accept baseline change
Merge branch 'master' into add-to-types2
Merge branch 'master' of github.com:Microsoft/TypeScript into usedbeforedeclaration-objectspread
Merge branch 'master' into usedbeforedeclaration-objectspread
Simplify type flag check
Remove old test file that snuck in
Narrow to any primitive or object and update tests
Update test file and baselines
Add narrowing for unknown with strict equal
avoid add missing member in declaration file
Move random file in root into test folder (#29575)
Accept new baselines
Add tests
Accept new baselines
Merge pull request #29569 from Microsoft/inputFiles
Merge branch 'master' into fix29006
Merge branch 'master' into inputFiles
Fix master: handle generating type name for late bound dupe message more nicely (#29572)
Fix unnecessary union
Merge pull request #28034 from disisisid/master
Merge pull request #28124 from sanket0896/patch-1
Merge pull request #28181 from superkd37/patch-1
Merge pull request #27991 from manishbansal8843/gulpfile-correction-for-word2mdconversion
Merge pull request #27918 from collin5/b27914
Add todos for sourcemap that accidently got reverted.
Merge pull request #27480 from AjayPoshak/make-contrib-easy
Get dts content from sourceFile if present
Merge pull request #27121 from xl1/26977-typedarray
Create getters for js sourcemap, dts and dts map text getters in prepend nodes
Tweaks
Don't infer from initializers of parameters of contextually typed functions
Merge pull request #29463 from jack-williams/check-in-expression-with-union
Fix typo in runner selection in gulp
Add test to test the readFile called on prepend input file for emitting and verifying emit
Merge pull request #29555 from petebacondarwin/external-skip-trivia-fix
Merge pull request #29563 from Microsoft/fixSwitchControlFlow
Merge pull request #29556 from fuafa/trailing-comma
Accept new baselines
Add additional repro
Accept new baselines
Add regression test
Match control flow logic for switch statements to conditional expressions
Update user baselines (#29560)
Use the correct source when skipping trivia
fix trailing comma should not allowed in dynamic import argument
Merge pull request #26653 from Kingwl/improve_type_arguments_parser_1
Merge pull request #29546 from chrisrpatterson/update-badge-url
Updating badge url
Merge pull request #29532 from Microsoft/umdModuleGlobalMerge
PR feedback
exclude nested functions and classes at containingThis check
Fix lint error
Merge pull request #29534 from Microsoft/fix29355
Enable debug info by default when debugging the language server
Fix crash in signatureHelp
Handle find all references for symbol merged with UMD module and global var Fixes #29093
Replace most instances of getTextOfPropertyName in checker
Merge branch 'master' into PropertyDeclarationExclamationToken
do not provide refactoring when it contains this because this behaves differently in arrow than in function
Merge remote-tracking branch 'upstream/master' into m-lambda-to-fn
Accept new baselines
Add regression test for #29168
Accept new baselines
No union type reductions in contextual types
Accept baseline changes
Add tests
Accept baseline API changes
Validate const assertion operand
fix api
Merge branch 'master' into improve_type_arguments_parser_1
add test for convert to named parameters refactoring
implement new parameter creation
Merge pull request #29470 from amcasey/InterfaceImplementations
Support '<const> xxx' and 'xxx as const'
Add missing return statements (ugh)
Fix resolution of properties from prototype assignment in JS (#29302)
Address CR feedback
Include all flow nodes made within `try` blocks as antecedents for `catch` or `finally` blocks (#29466)
Accept new baselines
Add tests
Merge pull request #29447 from Microsoft/fixGulp
Accept new baselines
Add tests
Remove literal freshness when contextual type is a literal type
Don't treat interfaces as implementations
Make the relationship between partial mapped types and the empty object not apply for subtype relationship (#29384)
Add missing arity check on second inference pass (#29386)
Accept new baselines
Infer contextual types from return types through generic functions
Merge pull request #29161 from Microsoft/incrementalBuild
renames
Fix #29457
add missing type annotation
Merge branch 'flapenguin-fix-generic-types-intersections'
Merge branch 'fix-generic-types-intersections' of git://github.com/flapenguin/TypeScript into flapenguin-fix-generic-types-intersections
Merge pull request #29451 from amcasey/GH27937
PR feedback
Allow rest parameter type to be a readonly array or tuple
Illustrate a case that isn't handled correctly
Add fourslash tests
Consider JSX namespace imports when moving statements between files
Fix gulp builds not building some targets
implement new parameter creation
WIP
Merge branch 'master' into add-codefix-cannot-find-name-in-for-loop
fix quick fix infer parameter types from usage in js file
Accept new baselines
Add .d.ts generation test
Update user baselines (#29444)
Add opt-in user preference for prefix and suffix text on renames (#29314)
Accept new baselines
Add more tests
Fix typo
Fake up value declaration for synthetic jsx children symbol so they get excess property checked (#29359)
Merge branch 'master' into es2019
Merge branch 'master' into async-es2018
Add regression test. (#29433)
create refactoring for converting to named parameters
Accept new baselines
Add tests
Update array/tuple relationship checking
Merge pull request #28132 from a-tarasyuk/feature/28086
Elaborate jsx children elementwise (#29264)
Merge pull request #29421 from amcasey/DisabledLSHardening
Add regression test
Merge pull request #29385 from uniqueiniquity/renameImportPref
Accept new baselines
Merge pull request #29420 from Microsoft/fix29108
Support 'readonly' type modifier on array and tuple types
PR feedback
Fix trailing whitespace
Fix crash in getTextOfPropertyName
Harden telemetryOnOpenFile against disabled projects
Remove overzealous simple relationship check for unique symbols
Respond to CR
Merge pull request #29418 from Microsoft/exportEquals
Handle generating action for export equals with anonymous symbol Fixes #28845
Fix typo
Accepted 'witness' baselines; removed unnecessary !==
Merge pull request #29380 from Microsoft/sourceMap
Fix typo
Fix implement interface quickfix import types (#29410)
Save & recalculate declare flag modifier on late printed statements (#29412)
CompilerHostLikeForCache rename
Rename indexing variable
Merge pull request #26017 from ajafff/rest-param-destructuring
Merge pull request #29352 from Microsoft/qualified-name-param-tag-error
Added error for class properties used within their own declaration
Respect readonly mapped type modifier when mapping arrays and tuples
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/28086
Fix comment
Merge branch 'master' into sourceMap
Add user preference to opt-in to renaming import paths
Merge branch 'master' into incrementalBuild
Fix unneeded cast lints (#29383)
Merge pull request #29372 from JoshuaKGoldberg/codefix-enable-decorators
Use the SourceMapSource to get line and column instead of current source file Fixes #29300
Test to verify external source map range addition
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/28086
remove unused error message 2568
Extracted compilerOptions setting to helper function
Merge pull request #29022 from mprobst/no-resolve-libref
Added codefix to enable experimentalDecorators in the user's config file
Merge pull request #29363 from Kingwl/type_arguments_for_jsx
Add tests for noLib with <reference lib> and bundling.
Add tests for noLib with <reference lib>.
Do not process library reference directives with noLib set.
emit jsx type arguments
Add missing baseline references
Fix typo
Add more tests for qualified name param without top level object error
Allow circular umd-merged-with-augmentation refs to resolve to the module as intended (#29335)
Allow nonnull assertions in references (#29351)
Minor refactor in paramTagNestedWithoutTopLevelObject.ts
Add test for qualified name param without top level object error
Merge branch 'master' into qualified-name-param-tag-error
Merge pull request #29338 from Microsoft/fixConditionalTypeResolution
Accept new baselines
Add regression tests
Improve logic that determines when to resolve conditional types
Use specific error message for qualified param name without leading top level param name
Add diagnostic message for JSDoc qualified param name without top level param
Update user baselines (#29336)
Fix crash (#29333)
Merge pull request #29316 from Microsoft/randomIdentifier
Merge pull request #25445 from a-tarasyuk/bug/24542-bad-error-message-for-import-ing-an-export
Merge branch 'master' into incrementalBuild
Exclude JSDoc @extends from 'super()' checks (#29308)
Fix existing test
Merge pull request #26280 from Microsoft/tsconfig_canonicalpath
Merge pull request #29313 from Microsoft/getEditsForRename
Verify that completion with new identifier location returns isNewIdentifierLocation: true Fixes #24009
Fix the failing test case
Merge branch 'master' into tsconfig_canonicalpath
There is no need to check for file presence when trying to rename imports based on file rename Fixes #29031
Fix gulp baseline-accept (#29301)
Allow untyped calls on unions of untyped things (#29265)
Merge branch 'master' of https://github.com/Microsoft/TypeScript into bug/24542-bad-error-message-for-import-ing-an-export
PR feedback: change error #2497 message
Allow referencing 'this' in parameters of functions in the constructor
LEGO: Merge pull request 29285
LEGO: check in for master to temporary branch.
save work and fix lint
Symbol.prototype.description hit stage 4
Merge pull request #29266 from Microsoft/jsxNamespace
Use the sourceFile to determine the jsxNamespace at the location for organizingImports Fixes #28827
Add types entry to tslint build to prevent inclusion of unwanted types installed via user tests
Do not emit code for `@extends` tags in JS. (#29244)
Merge pull request #29252 from Microsoft/tscWatchIsolatedModules
Do not cache semantic diagnostics with --isolated modules Fixes #28332
Merge pull request #29250 from Microsoft/hasContextSensitiveReturnExpression
Merge branch 'master' of github.com:Microsoft/TypeScript into shebang-comments
Replace ternary expression
Merge pull request #28992 from Microsoft/tscWatchExportUpdate
Fix function declaration without body to be checked as context sensitive Fixes #29032
Merge branch 'master' into tscWatchExportUpdate
Merge pull request #29247 from ajafff/organizeimports-crash
update baselines
Merge branch 'master' of github.com:Microsoft/TypeScript into rest-param-destructuring
Merge branch 'master' into shebang-comments
Fix crash in organizeImports
add transformer for emit add property to default export
Merge pull request #29240 from Microsoft/inferredProjectToExternalProject
The assert that cached value of config file existance is always correct, might not be true if file watcher is not invoked before creating configured project Fixes #29191
Merge pull request #29214 from uniqueiniquity/nestedAsyncCodeFix
Merge pull request #29218 from uniqueiniquity/jsdocSpanForVarStatement
Simplify approach
Fix spelling of convertible
use existing util functions
Merge pull request #29216 from uniqueiniquity/multilineArgumentSpans
Add test
give jsdoc outline span before func exp assigned to var
Merge pull request #29215 from uniqueiniquity/classExpressionOutline
Add test
Use normal start for spans for args
Add test
Add class expression to set of nodes for outlining
Only provide suggestion for outermost async fix
Merge pull request #29147 from Kingwl/type_query_completions
Merge pull request #29110 from Microsoft/fixDiscriminantCheck
Merge pull request #29121 from Microsoft/mappedTypeConstraints
Merge pull request #29179 from Microsoft/typeParameterDefaultForwardReference
Merge pull request #29192 from Microsoft/initializerWidening
Accept new baselines
Add regression test
Accept new baselines
Don't widen contextually typed literals in initializer expressions
Update user baselines (#29187)
Merge pull request #29181 from uniqueiniquity/templateLiteralInNavTree
Show template literal in navtree function call args
Accept new baselines
Add regression test
Accept new baselines
Type parameter defaults can only reference previously declared type parameters
Use DirectoryStructureHost for fileExists and readFile
add ES2019 target
Handle declaration emit errors in tsbuild mode by backing up builder state This helps us revert to state where we pretend as if emit is not done (since we do not do emit if there are errors)
Write the tests for incremental build and declaration emit errors handling These will fail since its still TODO
Merge remote-tracking branch 'upstream/master' into async-es2018
fix typeof completions broken
property is used before its initialization: check more nodes
Handle prepend in incremental build. Always emit when program uses project reference with prepend since it cant tell changes in js/map files
Update the timestamps of outputs that dont need to be written because of incremental build This ensures that after `tsbuild` after incremental build of `tsbuild -w` doesnt result in unnecessary rebuilds
Use emit builder to emit only changed files.
Use oldProgram to create the new Program. This helps in storing the semantic diagnostics
Add method to release held Program in BuilderProgram
Revert BuilderProgram to be redirected object to Program in preparation to set Program in state to undefined for storing.
Make SolutionBuilder handle BuilderProgram in preparation to handle incremental builds
Make BuilderProgram as Program
Use watch factory instead of direct host functions in tsbuild to provide detailed information on watch invokations
Merge pull request #28902 from Microsoft/unitTestsSplit
Accept new baselines
Add tests
Properly compute lower bound of key type in a mapped type
duplicate `wait` instead of `wait` and `notify`
Update user baselines (#29109)
Refactor tsc-watch tests
More tsserver tests refactoring
Add unittests:: on all unittests describe blocks for easy run
More scenarios in their own test
Move the tests into their own folder for easy scenario search
Sym links into single test
Move more tests into resolutionCache and project errors
Separate out caching file system test
More refactoring for resloutionCache and project errors
Separate out LargeFileReferencedEvent test
ProjectUpdatedInBackground in a separate unittest
Separate out tests for project loading events into their own unittest file
Emit error tsserver tests into projectErrors
tsserver's typingInstaller test into typingsInstaller unittest
Move error tests from tsserver project system to projectErrors
More refactoring for compile on save
tsc-watch emit tests in to its own tests
Split resolutionCache and watchApi tests into its own unittest
Split watch environment into its own unittest
Add name of test in all describe blocks in it
Accept new baselines
Add regression test
Fix discriminant property check
Allow calls on unions of dissimilar signatures (#29011)
Merge pull request #29102 from Microsoft/declarationEmitForDefaultExportClassExtendingExpression
Accepted baselines.
Check whether class declarations have a name, falling back to "default".
Added test case.
Merge pull request #28886 from Microsoft/sourceMapDecoder
Merge pull request #29053 from Microsoft/fixDestructuringControlFlow
Accept new baselines
No public API changes
Accept new baselines
Improve error message for out-of-bounds tuple element access
Non-latebound computed property names should print as their underlying name type (#29084)
Fix the up-to-date-ness checks of sucessive `gulp` invocations (#29088)
Adjust travis branch spec to capture all release branches (#29086)
Merge pull request #29082 from Microsoft/widenIntersectionTypes
Reset constEnumOnlyModule flag on relevant symbol merges in binder (#29079)
Accept new baselines
Add regression test
Handle intersection types in getWidenedType
Merge pull request #28896 from JoshuaKGoldberg/n-identifier-after-numeric-literal-error
Fix all new lint failures (#29080)
Stretched the error to the end of 'n's
Merge branch 'master' of https://github.com/Microsoft/TypeScript into bug/24542-bad-error-message-for-import-ing-an-export
update baseline
PR feedback: change error #2497 message
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/28086
update baseline
--downlevelIteration errors should mention using later targets
Update CONTRIBUTING.md
Update CONTRIBUTING.md
Update CONTRIBUTING.md
Merge pull request #29069 from weswigham/remove-duplicate-function
Merge pull request #29068 from Microsoft/noGenericEmptyObject
Address CR feedback, take two
Remove duplicate function from checker
Merge pull request #29030 from alisabzevari/28977-enum-initializer-err-msg
Address CR feedback
Add regression test for #29047 (#29066)
Accept new baselines
Add regression test
isEmptyObjectType should check that argument is not generic mapped type
Accept new baselines
Add tests
Accept new baselines
Use synthetic access expressions for destructuring control flow analysis
#28977 Change error message according to review comments
#28977 Fix test baselines
#28977 Change const enum error message
Merge pull request #28888 from Microsoft/numericPropertyAccess
Merge pull request #28989 from begincalendar/fix-28987
Accept new baselines
Use getIndexedAccessType when computing destructured types
Disable truncation for codefixes in signatureToMethodDeclaration. (#28188)
Build - List "pretty-hrtime" as a dev dependency in root "package.json".
Add more tests that verify semantic diagnostics cache
Use contextual parameter types over binding pattern initializer types (#28967)
When removing the errors for the exports from the file, apart from removing transitive exports, remove the diagnostics of file that import these exports Fixes #28983
Merge pull request #28965 from Microsoft/simplifyIndexedAccess
Accepted baselines.
Merge remote-tracking branch 'origin/master' into numericPropertyAccess
Accept new baselines
Update tests
Simplify indexed accesses on mapped types with no depth limit
Merge pull request #28951 from Microsoft/fixLibToIterableAndES5
Accept new baselines
Add tests
Simplify indexed accesses on mapped types up to five levels deep
Update user baselines (#28961)
Fix error message when type argument arity is wrong (#28366)
Accepted baselines.
Added more tests, including some in 'removeComments' mode.
Don't use 'fill' in 'fill'.
Only use 'es2015.iterable' to avoid accidental es2015 feature usage.
Merge pull request #28946 from Microsoft/lowercaseLocaleDirectories
Merge pull request #28948 from Microsoft/discriminatedUnionIndexSignature
Merge pull request #28921 from ajafff/no-set
Merge pull request #28932 from j-oliveras/No-es2015-usages
Accept new baselines
Add tests
Fix handling of index signatures in discriminated unions
Always generate lowercase locale names so 'LKG's produce identical results on case-sensitive file systems.
Merge pull request #28627 from ajafff/arrow-arguments
Merge pull request #28919 from a-tarasyuk/feature/28893-allow-trailing-comma-on-tuple-types
Merge pull request #28940 from Microsoft/explicitUnknownConstraint
Merge pull request #28920 from Microsoft/improveBindTyping
Update user baselines (#28941)
Accept new baselines
Add tests
Accept new baselines
Add tests
Type parameter with 'unknown' constraint not assignable to '{}'
Add newline
Add newline, bad edit
Change usages of String.prototype.endsWith to ts.endsWith.
Change usage of String.prototype.startsWith to ts.startsWith.
Change usage of Array.prototype.find to ts.find.
Avoid uses of ES6 Set, use Array instead
Update fourslash list of global types
Fix findAllReferences for 'this' parameter declarations
Accept new baselines
Improve typing of 'bind' method on function types
TupleType - add additional tests to handle error on extra comma
28893 - update baseline
Allow trailing comma on tuple types
Merge pull request #28612 from vvakame/feat-showConfig-error
Merge pull request #28870 from Microsoft/discriminatedUnionInference
Merge pull request #28626 from j-oliveras/patch-1
Add note about comparing source positions
Better error message for invalid bigint literals ending with n
Accepted baselines.
Check if the expression had any trailing comments.
Remove unnecessary fields
Accept test changes
Actually verify when dependency and main project is open
Test to verify presence of .d.ts file
Watch missing map file and update the source mapping accordingly
Goto defintion will not go to source if map is present
Test that when map file is created the changes are reflected.
Add test to verify when depedency and main project is open
TODOs
Add tests and fix DocumentPositionMapper creation on updates to d.ts, source file, map file etc
Fix the edits clamping from #28583 after rebasing to master
Update source and declaration projects on update to declaration file or map file TODO: add tests
Keep alive declaration script info and map file info if source file info is alive
Life time of declaration, sources and map infos Map Info and sources is not ideal and need to revisited since we need to update mapper and projects correctly // TODO: lifetime of source project and declaration map
Dont unnecessarily make textStorage internal
Dont depend on project in document position mapper so that we can unload or remove projects independently
Add method on host to get DocumentPositionMapper so it can be cached.
Handle source and generated files more gracefully
Use file names instead of paths for reading files
Refactoring to createSourceMapperHost
Use program directly to get the sourceFile of source position
Do not close over program in getSourceFileLike
Merge pull request #28878 from typescript-bot/user-update-20181104
Merge pull request #28857 from JoshuaKGoldberg/identifiers-after-numeric-literals
Clarified error message; extended error to identifier end
Update user baselines
Accept new baselines
Add tests
Accept new baselines
Accepted baselines.
Added test case for trivia preceding dot in numeric LHS in property accesses.
Only infer from constituents with matching discriminants in unions
Merge pull request #28854 from Microsoft/fixExcessPropertyChecks
Merge pull request #28856 from weswigham/showConfig-exhaustive-test
Accepted new baselines
Removed excess new check
Added error for IdentifierStart immediately after a NumericLiteral
Merge pull request #28772 from r7kamura/feature/tsconfig-newline
Fix paths showConfig, exhaustively test showConfig
Merge pull request #28851 from Microsoft/deferConditionalTypes
Accept new baselines
Add additional tests
Accept new baselines
Improve excess property checking logic
Accept new baselines
Add regression test
Accept new baselines
Resolve conditional type only when check and extends types are non-generic
Revert over-eager bailout when trailing whitespace (#28848)
Merge pull request #28818 from Cow258/master
Skip implicit any suggestions with no codefix (#28822)
Infer from arrows from usage. (#28832)
Move await keyword to inside of function and test
Move await keyword to inside of function and test
Move await keyword to inside of function (Recovery & try test)
Merge pull request #28782 from weswigham/global-merge-no-crash
Move await keyword to inside of function and test
Merge pull request #28783 from weswigham/fix-typeparam-parent
Move await keyword to inside function
Merge pull request #28784 from Microsoft/controlFlowDestructuringLoop
Merge pull request #28780 from Microsoft/singlyOverlappyTypes
Add constructor case
Accepted baselines.
Only count singleton unit types.
Accept new baselines
Add regression test
Handle destructuring in control flow reference matching
Add missing case to declaration diagnostic handler
Fix crash on umd and module merge, allow umds to be accessed when merged with a non-UMD symbol
Merge remote-tracking branch 'origin/master' into singlyOverlappyTypes
Merge pull request #28695 from weswigham/overlappy-count-unit-only
Accepted baselines.
Types are only overlappy if their index types are single 'keyof's or literal types.
Accepted baselines.
Added tests for types with overlap across a single property name.
Add terminating newline to generated tsconfig.json
Merge pull request #28742 from Microsoft/fixIncrementalParsingBailout
Merge pull request #28745 from Microsoft/nonCheckJSAutoImport
Use compilerOptionsIndicateEs6Modules over program contains es6 modules for determining auto import offering. Also dont depend on uncheck js file for this. Fixes #28696
Fix logic that bails out of incremental parsing in certain contexts
Merge pull request #28718 from Microsoft/fixDefinitelyAssignableRelation
Accept new baselines
Add regression test
Exclude T[K] assignability check from definitelyAssignableRelation
--showConfig files list condition was inverted from what it needed to be (#28693)
Do not lookup name of default property symbols from the symbols value declaration (#28711)
Merge pull request #28704 from typescript-bot/user-update-20181003
Update user baselines
Count only unit types when counting overlapping keys
Merge pull request #28645 from Microsoft/pathPerf
Merge pull request #28675 from Microsoft/revert-28528
Revert "Don't consider 'typeof a' as using 'a' (#28528)"
Merge pull request #27087 from Microsoft/overlappyTypes
Add perf optimizations for path comparisons
Merge pull request #28629 from Microsoft/cacheHostResults
Merge branch 'master' into cacheHostResults
Merge pull request #28639 from Microsoft/noExplicitDeclarationDiagnostics
Dont explicitly get declaration diagnostics
Update user baselines (#28633)
Factor out caching logic so tsc (without watch can use it and --watch has its own cache logic).
PR feedback.
address comment
Cache results for readFile, fileExists, directory exists, sourceFiles for .d.ts files across the build (only first time)
ArrowFunction has no own 'arguments'
Update bug template to version 3.3
MethodSignature doesn't have 'arguments' (#28625)
Accept version change 3.2 => 3.3 in baselines
Merge pull request #28623 from ajafff/update-baselines
Merge branch 'master' into fix-generic-types-intersections
Update LKG.
update API baselines with new version number
Bump to 3.3.
address comment
 Allow union signatures to merge when they have differing argument counts (#28604)
Merge pull request #28610 from Microsoft/resolvedReferencedDirectMap
Create map from fileNames in referenced projects to resolvedProjectReference for quick determination of fileName to projectReferenceRedirect
Merge pull request #28607 from Microsoft/extendedDiagnostics
resolve TypeReference in class decorator at parent of class
Fix crash on property assignment of unresolved module (#28606)
Enable statistics reporting per program through temporary build api
Avoid infinite loop checking yield expression (#21728)
Fix typo (#28526)
Update user baselines (#28601)
Handle merging unknownSymbol (#28453)
Merge pull request #28585 from Microsoft/isTypeOnlyCompletion
Merge pull request #28533 from Microsoft/generateGetAndSet_noFindAllRefs
Merge pull request #28588 from dsherret/removeNonInternalStuffJsDocComment
Show diagnostic when error found with --showConfig option
Remove jsdoc on ts namespace.
Dont emit module resolution errors when looking up specifiers for container symbols (#28558)
Properly set symbolMeanings when calling getSymbolsInScope
Minor cleanups in checkUnusedIdentifiers (#28513)
Clamp calculated sourcemap positions rather than throwing (#28583)
Enable --strictPropertyInitialization (#27558)
Accepted baselines.
Use intersection of member names to find largest overlap.
Merge pull request #27376 from Microsoft/codeFixCannotFindModule_suggestion_falsePositive
Merge remote-tracking branch 'origin/master' into overlappyTypes
Merge pull request #28559 from amcasey/FileSize
Error when destructuring private property in a parameter (#28562)
Add telemetry test
Restore useText
In JS, constructor functions infer from call+construct (#28353)
Ensure getApplicableRefactors doesn't crash when given a position (#28361)
Consistently return 'void' from ChangeTracker methods (#28563)
Merge pull request #28572 from calebsander/fix/unused-baselines
Don't consider 'typeof a' as using 'a' (#28528)
Remove unused baselines
Merge branch 'master' into tsconfig_canonicalpath
Fix tests and lint
Update API baseline
When adding relative completions with rootDirs, still add completions for regular relative imports (#28561)
Fixed codeFixAll behavior and adjusted changed fourslash tests
Properly check if a codefix is needed
Review changes and adjustment of fourslash tests
Revert whitespace change
Add codefix for 'Cannot find name' diagnostic
Expose aggregate file sizes in FileStats
Expose file size from TextStorage
Strongly typecheck unions of intrinsic tag names (#28557)
forEachToken: correctly handle JSDocTag (#28369)
Better nameless parameter implicit any error (#28554)
Remove unused function (#28531)
Better checking of assignment declarations (#28387)
string|number inferences are low priority (#28381)
Add 'bigint' to type keywords (#28537)
Merge pull request #27019 from iliashkolyar/codefix_add_missing_new_operator
generateGetAccessorAndSetAccessor: Don't use FindAllReferences
Fix comments after sread expression, spread assignment (#28482)
When renaming an imported symbol, rename only in current file (#28406)
Merge pull request #28015 from prateekgoel/error-messages
Update user baselines (#28504)
Build better import paths for declaration emit/typeToString from reexports if possible (#27340)
Merge pull request #28313 from a-tarasyuk/feature/28297-make-error-message-at--a-constant-or-a-read-only-property--more-specific
Removed stray whitespace
Merge pull request #28496 from calebsander/fix/remove-unused-baselines
update baseline after merge the latest changes from master
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/28297-make-error-message-at--a-constant-or-a-read-only-property--more-specific
Use elipses for reverse mapped types in nested positions (#28494)
Remove no longer used baselines
Handle type argument lists as jsx completion starts (#28493)
Update LKG.
Merge pull request #28456 from Microsoft/nonExperimentalBigInt
Track type recusion and symbol instantiation depth seperately in createAnonymousTypeNode (#28490)
git rm file; not sure how we missed that.
Accepted baselines.
More general test case name.
Fixed up flags on test cases and stray newline.
Merge pull request #27669 from Microsoft/betterErrorForAccidentalCall
Merge pull request #28255 from leonaves/patch-1
Force inner indexed access simplification during inference, if possible (#28420)
Add implicit-any error on JSDocFunctionType with no return type (#28487)
Slightly improve missing property errors (#28298)
Ensure all default type params are mapped to some default even in circular scenarios (#28423)
fix lint
fix comment parsing at start of file
Improvements to generateTypes (#28458)
Merge pull request #28485 from Microsoft/conditionalTypeDecorator
Reduce duplicate code in getListByRange (#28455)
Merge pull request #28194 from iliashkolyar/add_missing_apostrophe_in_codefix
When serializing conditional types, use true and false type to determine emit Fixes #27999
Merge pull request #28473 from ajafff/test-jsdoc-importtype-resolution
Merge pull request #28478 from mita4829/master
Fix typo comment
Merge branch 'master' into async-es2018
Add test for #28468
Change isolatedModules to allow const enum declaration and disallow access
Merge pull request #28429 from Microsoft/fixEmptyObjectIntersection
Update user baselines (#28457)
Merge pull request #28450 from Microsoft/libErrors
Fix duplicated amd module comments in declaration bundle (#28451)
Check modifiers on variable like declarations only
Accepted baselines.
Merge pull request #28454 from Microsoft/codeFixAfterPrologue
Handle global augmentation in the module
PR feedback
Accepted baselines.
Updated test case.
Only complain about BigInt literals in pre-ESNext targets.
Include code fix after prologue Fixes #15515
Merge branch 'master' into codefix_add_missing_new_operator
Merge pull request #28340 from saschanaz/listindent-revive
Merge pull request #27629 from Microsoft/sourceMapGenerator
Report identical modifiers needed error when checking the file instead of reporting it as part of another file's type check
Merge pull request #28281 from ryanclarke/master
Remove lib file errors when all files are to be emitted. Fixes #26389
Remove SortedUniqueList
Change 'if' in combined switch case to two separate cases (#28444)
Add exports of current module to getSymbolsInScope (#28442)
Merge pull request #24396 from falsandtru/lib/Symbol.toStringTag
Merge pull request #28438 from Microsoft/maxNodeModuleJsDepth
Update Feature_request.md
Merge pull request #28343 from Microsoft/lib/update-nov-2018
Merge branch 'master' into sourceMapGenerator
Add affectsModuleResolution to compile options: maxNodeModuleJsDepth Fixes inferred project incorrectly modifying existing compiler options Fixes #27108
Merge pull request #28436 from Microsoft/circularTransitiveExports
Support finding references at `module` in `module.exports =` or `export` in `export =` (#28221)
Use seen map to avoid circular transitive exports to cause stack over flow Fixes #28433
Merge pull request #27988 from KnisterPeter/fix24931
add more testcases
Better reference usage detection
add test for remove modifier and parameter
add more modifiers
Add test case for codeFix
Remove obsolte ts namespace
Correct codefix by removing private modifier
Accept new baselines
Add regression tests
LEGO: Merge pull request 28428
LEGO: check in for master to temporary branch.
apply suggested changes
Merge pull request #28419 from Microsoft/elaborateAssert
Merge pull request #28418 from ajafff/internal-comments
Elaborate assert of infos attached to project
revert changes to tsbuild.ts
Merge pull request #28417 from Microsoft/relativeFilesThroughDynamicFile
Fix public API
Allow creation of relative path file infos only for open script infos Fixes #20476
Fix enum const initializer visibility painting (#28415)
Better project logging
Log project name when removing project
Some reorg
Add tests that create relative path even though the script info isnt dynamic
Merge pull request #27980 from EECOLOR/leading-slash-imports
Fix fourslash test
Accept new baselines
Preserve actual empty object type intersection
check if functionExpression name is used
Fix comments on pull request
Merge pull request #28405 from weswigham/no-summary-non-watch-zero-errors
Do not output summary if theres nothing to report
Merge pull request #28400 from Microsoft/gotoDefinition
Retain the casing in map files in file names
path mappings now supports rooted disk paths and urls - fixes #13730
Fix the issue with file being included in the referencing project on rename when it wasnt included earlier Fixes #28307
Merge pull request #28398 from Microsoft/renameInReferencedProject
Fix the issue with file being included in the referencing project on rename when it wasnt included earlier Fixes #28043
remove even more redundant internal comments
update getAvailableActions
Merge remote-tracking branch 'upstream/master' into m-lambda-to-fn
apply feedback from pr
resolve conflicts
Merge branch 'master' of https://github.com/Microsoft/TypeScript into feature/28297-make-error-message-at--a-constant-or-a-read-only-property--more-specific
fix for unnecessary duplication of comment
Merge pull request #28385 from Microsoft/metadata
Change type of metadata to unknown
Merge pull request #28386 from Microsoft/removeTwoTypeFlags
Fix lint errors
Accept API baseline changes
Add metadata to response if it exists for results from language service. Currently its wired through for completions requests. Handles #21999
Move FreshLiteral flag from TypeFlags to ObjectFlags
Update opposite direction of #28218 (#28384)
Remove pointless check
Avoid elaborating on generic indexes (#28294)
Merge pull request #28071 from pesca/improveCodeFix
Add related span pointing to this-shadowing location for implicitly-any this (#28299)
Remove JSDocTag#atToken (#28376)
Update user baselines (#28371)
Remove usage of TypeFlags.FreshLiteral for fresh literal types
Remove TypeFlags.UnionOfPrimitiveTypes
Make for..in expressions allowed to be null/undefined (#28348)
Merge pull request #28312 from Microsoft/genericRest
Update user baselines (#28341)
Strcter testing for global completions; and 'excludes' can only be a string (#28349)
Merge pull request #28346 from Microsoft/transitiveExports
Merge branch 'master' into genericRest
Merge pull request #25886 from calebsander/feature/bigint
Fix bug when augmenting parent-less symbol (#28345)
Don't error on bigint literal used in type
When removing old diagnostics for files referencing modules that export affected file with signature change, delete the diagnostics of the module as well as anything that exports that module Fixes #28328
Fix ambient initializer emit for bigint
Add test for bigint property
Fix error numbers
Address review comments
Add bigint tests
experimentalBigInt compiler flag
Scan bigint literals
Add "bigint" to `typeof x` in baselines
Add bigint type
Add diagnostic messages for bigints
Utilities for PseudoBigInt
Declaration files for BigInt
Parameters infer from body and call sites (#28342)
Update baselines
Nov 2018 DOM update
adjust test: always indented inside a list
strict types
indent size 8 based on list startline indentation
resolve TODO
tests
indent using list start position
indent using list start position before first list item
add getListByPosition
remove deprecated function
use last line indentation on formatter
accept baseline for changed error message #2540
exclude mention about constant from error message 'a-constant-or-a-read-only-property' to be more specific.
add new error message 'Cannot assign to {0} because it is a constant.'
Add related span for mixin constructor error (#28319)
Improve error message when scriptInfo is missing in mapTextChangeToCodeEdit (#28258)
Move infer-from-usage earlier in codefix list (#28318)
Exclude keywords from import completions (#28114)
Refactors can return ReadonlyArray<ApplicableRefactorInfo> (#28305)
module.exports aliases have correct flags (#28303)
infer from usage's unification uses multiple passes (#28244)
Accept new baselines
Add tests
Accept new baselines
Ensure '{ [key]: x } = obj' for generic key is the same as 'x = obj[key]'
Accept new baselines
Remove Rest<T, K> and use Pick<T, Exclude<keyof T, K>> instead
Accept new baselines
Only create Rest<T, K> types when object and/or key type is generic
Merge pull request #28300 from Microsoft/prettyErrorSummary
Define Rest<T, K> as Pick<T, Exclude<keyof T, K>> to ensure it is homomorphic
Report error summary in pretty mode during normal compilation
Fix `symbolCanBeReferencedAtTypeLocation` for namespace that exports itself (#28295)
Merge pull request #28271 from Microsoft/containerOnlyProgramFiles
Merge branch 'master' into genericRest
Check destructuring validity the same way element accesses and indexed accesses are checked (#24700)
Accept new baselines
Use Rest<T, K> for rest properties in object destructuring
Add Rest<T, K> type to lib.d.ts
Merge pull request #28287 from ajafff/cleanup-internal
remove some useless internal comments
Refactor convert to unknown codefix
Add codefix for 'convert to unknown' diagnostic
Instead of adding lib files, avoid creating diagnostics producing checker for container projects
Merge pull request #28266 from Microsoft/fixProjectLoadingFinishEvent
Merge pull request #28273 from Microsoft/buildSourceMapNavigation
Use mapDefined and combine event name inputs
Add showConfig tsc flag for debugging configs (#27353)
Dont ignore libs since that could result in unexpected error
Test to verify that file with --out and case mismatch works with source map
Handle case sensitivity correctly in source map decoder
Public API
Do not add source files to container only project
Update baselines
Allow intersections of readonlys to be assignable to a readonly intersection (#28218)
Fixes Microsoft/TypeScript#6955
Test to verify project loading events with default event handler
Avoid this-instantiation if not necessary for relationship (#28263)
Some reorg in creating sessions for testing
Fix incorrect event
Merge pull request #28234 from Microsoft/genericSpread
Fix broken twitter link in README
Update user baselines (#28249)
Merge pull request #19 from D0nGiovanni/d-lambda-to-fn
Make conditions more expressive
rename testcases
add newline
apply feedback from pr
add testcase and apply feedback from pr
apply feedback from pr
make guideline compliant
extract creation of funcDeclaration
extract creation of block
refactor small progress
refactor getInfo getAvailableActions
adapt one test case
fix for tslint error
add tests for modifiers
fix bug modifiers by toNamed
add tests for ReturnType and available Arrow as FnParam
add tests for ToNamed and available anon
add tests for ToAnon, ToArrow and available arrow
change refactor name
fix multi decl bug
add multi vardecl
add working getEditsForAction
add getAvailableActions
add skeleton
Change pathCompletions to stringCompletions, move more code there (#28245)
Merge pull request #28243 from Microsoft/containerOnlyRef
Fix test case for project reference with composite not true
Merge pull request #28209 from Microsoft/ignorePathsStartingWithDotInNodeModules
Redo resolution on ATA when previous resolution was to '.js' file (#28236)
Prefer getValidSourceFile over Debug.assertDefined(program.getSourceFile(*)) (#28242)
Accept new baselines
Update tests
Accept new baselines
Continue to error on rest from generic source type
Report error requiring references to have composite only if the program is not container only
Accept baseline with correct additional span location (#28238)
Use constraint for default default value if possible (#28222)
Fix declaration emit for cross-file enums (#28237)
Only suggest adding to types if present in compilerOptions
Bad callsite inferences fall back to body usage (#28235)
For path completions, include extension as a kindModifier (#28148)
Suggest adding to tsconfig after installing @types (#28211)
Support augmenting module with `export as namespace` (#27281)
Ignore wild card directory watchers with node_modules file or folder starting with .
Miscellaneous code cleanup relating to module resolution (#28092)
Remove `toSortedArray` and `toDeduplicatedSortedArray`, use `sort` and `sortAndDeduplicate` (#28214)
Accept new baselines
Add tests
Update user baselines (#28228)
remove unused 'debug' option. change 'jake runtests' description (#28226)
Avoid reformatting body of arrow function with single unused parameter (#28217)
Accept new baselines
Produce intersection types for spreads with generic types
Merge pull request #28212 from minestarks/configure-plugins-master
LEGO: Merge pull request 28216
LEGO: check in for master to temporary branch.
Set-only accessors spread to undefined (#28213)
Merge pull request #28106 from minestarks/configure-plugins
infer-from-usage suggestions can't be ignored, and always do something when invoked. (#28206)
Ignore any changes to file or folder that are in node_modules and start with "." Fixes #27673
Allow to combine --resolveJsonModule with --isolatedModules (#28207)
Have flatMap return a ReadonlyArray by default (#28205)
Always use `verify.completions` when testing completions (#28137)
Use same condition in isReferencedAliasDeclaration as isAliasResolvedToValue (#28171)
Merge branch 'master' into codefix_add_missing_new_operator
Add missing apostrophe to codefix suggestion
Support synthesized SourceFile parent in getOrCreateEmitNode (#24709)
Update .mailmap
Measure variance of aliased conditional types using variance markers (#27804)
Merge pull request #28170 from Microsoft/fixGenericMappedTypeConstraint
JSX uses mixed signatures and union sigs use subtype on partial match (#28141)
Accept new baselines
Add regression test
Parse an object literal property as shorthand unless followed by '(' or ':' (#28121)
Bring typeof switch inline with if (#27680)
Remove unused property ParameterInference#typeNode (#28115)
Constraint for { [P in K]: XXX } should be empty type
infer from usage JSDoc:Don't emit nested comments (#28161)
Update user baselines (#28157)
don't resolve import types in JSDoc of TS files (#28158)
Merge branch 'error-messages' of https://github.com/prateekgoel/TypeScript into error-messages
Error messages and tests
Error messages for extending a specific type
LEGO: Merge pull request 28146
LEGO: check in for master to temporary branch.
Do not merge commonJS exports into an alias (#28133)
Remove DirectoryOfFailedLookupWatch#ignore, use DirectoryOfFailedLookupWatch | undefined (#28091)
At '.' in array literal, don't close the array (#28120)
Merge pull request #28028 from ajafff/optimize-resolve-reusing-old-state
Add support for configuration inheritance via packages (#27348)
Update user baselines (#28129)
Merge pull request #28112 from Microsoft/fixInstanceofControlFlow
Fixed some typos.
Fixed typos in spec.md
Improve performance of suggestionDiagnostics for convertToAsyncFunction (#28089)
Merge existing JSDoc comments (#27978)
Remove getBucketForCompilationSettings (#28088)
Remove 'verify.fileAfterCodeFix', use 'verify.codeFix' (#28110)
Accept new baselines
Add regression test
Reset narrowing of 'x.y' only when 'x' has a narrowable type
Update CI (#28082)
Fix tests for node 11 (#28108)
Use regex+getTokenAtPosition to find dynamic import (#28104)
Add generateTypesForModule to public API (#28069)
Test update of DOM. (#28050)
Update user baselines (#28076)
Fix Object.defineProperty declaration expando-ness and renames (#28061)
Improve code fix for missing members
Like #27964 but for JSX (#28068)
Rename of non-intrinsic JSX element should rename the declaration (#28066)
Fix bug: only getCompletionEntriesFromTypings if completions are for top-level directory (#27226)
Merge pull request #28059 from ajafff/lsh-resolve-return-type
Add JSXText check into isValidLocationToAddComment (#27653)
Reject return type inferences to the autoType or autoArrayType (#27169)
Obey the excludeArgument parameter when checking JSX signature validity (#28002)
Infer over each mapped type constraint member if it is a union (#28006)
Merge pull request #27964 from Igorbek/issue27854
Fix lint
Merge branch 'master' into tsconfig_canonicalpath
update other interfaces and implementations
fix compile errors, accept baselines
fix return type of LangageServiceHost.resolve*
fourslash: Add 'goToMarkerOrRange' helper (#28057)
Remove hack to get target of GetAccessor symbol (#27868)
added await keyword to completions and added test (#27912)
Un-consolidate overloads for Map and WeakMap (#28052)
Support import completions for a re-export with a different name from the original (#28055)
Update user baselines (#28047)
Typo fix
Merge pull request #28027 from Microsoft/simplifyAddTypeToUnion
use Map instead of Array
Error messages and tests
Fix performance regression when reusing old state
Simplify addTypeToUnion function
Error messages for extending a specific type
Support 'isSourceFileFromExternalLibrary' for source files from '/// <reference types="" />'' (#28004)
Merge pull request #28005 from Microsoft/noReductionUnion
Merge pull request #27974 from Microsoft/errorUpdateWithChangeInTransitiveDeclarationFile
Check EOF token to get errors for JSDoc (#28000)
Do not do any reduction (even if it contains any) to the union type when getting contextual type Fixes #27975
Add new special assignment kinds for recognizing Object.defineProperty calls (#27208)
Fix alias of module.exports->exports->IIFE (#27992)
Corrected the order of passing arguments to word2mdJs
Merge pull request #27522 from jack-williams/trailing-void-args-are-optional
Fix JS merge crashes from lovefield (#27989)
findAllRefs: Fix bug when symbol.declarations is undefined (#27977)
Merge pull request #27560 from Microsoft/transitiveReferences
Use reference map from declaration file as exported map to handle deep import semantic diagnostics invalidation Fixes #27973
Merge branch 'master' into trailing-void-args-are-optional
Merge branch 'master' of https://github.com/Microsoft/TypeScript into bug/24542-bad-error-message-for-import-ing-an-export
Change cast to the proper type
Fix bug in reduceEachChild (fixes #27854) - add reducing of type arguments in tagged template expression
Add broken test for issue #27854
Remove now unnessesary casts (#27954)
Merge pull request #27952 from Microsoft/contextualSignature
Add ability to infer to the simplified form of a type variable (#27953)
When contextual type doesnt find property, use the index signature from unit type(fix the incorrectly used union type to get the signature) Fixes #27949
Unify JSX And Normal Call Checking Codepaths (#27627)
Merge branch 'master' into transitiveReferences
Fix compile errors in tsbuildWatchMode.ts (#27870)
add error showing where prop was also declared if is a dup
Merge branch 'master' into transitiveReferences
Fix isSourceFileFromExternalLibrary for file with redirect (#27917)
Update user baselines (#27922)
refactor baseline
Merge pull request #27871 from Microsoft/formatting
refactor diagnostics
use decl key value if any
Simplify the test
Merge pull request #27911 from Microsoft/fixCircularMappedType
Merge pull request #27898 from nd-02110114/patch-1
Merge pull request #27695 from Microsoft/mixedDiscriminantTypes
Add getEffectiveConstructSignatures (#27561)
Accept new baselines
Add regression test
Handle circular mapped type instantiations for arrays and tuples
Update user baselines (#27905)
delete link
Handle when advancing past , of call expression moves past endPos of formatting Fixes #26513
At '.' in object literal, don't close the object (#27850)
#27716: fix protected methods for intersection fo generic classes
Merge pull request #27849 from Microsoft/unionWithIndexedLiteral
noImplicitAny as suggestion (#27693)
Merge pull request #27844 from Microsoft/includeJson
Merge pull request #27714 from Microsoft/okToSkipJsonOverrite
When instantiating a mapped type, clone the type parameter. (#27597)
Use string/number signature to get contextual type Fixes #26587
Allow files to be included by `*.json` pattern in include of tsconfig Fixes #25636
assertNever special-cases nodes with SyntaxKind (#27712)
Add test cases for transitive reference with different module resolution
Merge pull request #27587 from Microsoft/fixUnionOfTupleIndexing
Merge branch 'master' into transitiveReferences
Skip writing json file if it is going to overwrite same location Fixes #24715
Merge pull request #27715 from Microsoft/handleEmitDeclarationOnly
Do not generate jsFile path if its emitOnlyDeclarations is set Fixes #27009
One more CR fix
Update user baselines (#27710)
Address CR feedback
Merge pull request #27609 from Microsoft/betterStaticError
Merge pull request #27688 from Microsoft/fixTsBuildIncrementalNoErrorScenario
Accept new baselines
Add tests
Accept new baselines
Discriminant must include at least one unit type and no instantiable types
importFixes: Skip alias when testing isTypeOnlySymbol (#27674)
Remove any existing errors in case of successful build in tsbuild watch mode Fixes #27685
Merge pull request #26810 from Kingwl/fix_lookup_regression_again_and_again
Merge branch 'master' into fix_lookup_regression_again_and_again
Allow discriminant property to contain some non-unit types
Always emit related diagnostic when a call expression can be fixed by adding a semicolon
Merge pull request #27643 from Microsoft/simpleTypeMap
Merge branch 'master' into transitiveReferences
Accept public api change
Merge pull request #27625 from Microsoft/fileAddedWithAmbientModule
Merge pull request #27563 from Microsoft/nonPollingWatcher
Converted legacySafelist to map to avoid using array prototype methods accidently to match with filename Eg. constructor.js was adding constructor function to aquisition.include which resulted in the mismatch between typing installer's typeAquisition (which was passed as JSON string and parsed back to null) and one in project That meant we kept on queuing the new typing installation request. Fixes #27435
containsTopLevelCommonjs:handle uninitialised vars (#27642)
Update user baselines (#27632)
inferFromUsage codefix now emits JSDoc in JS files (#27610)
Don't crash if spawnSync result's stderr is null (#27616)
Updated callback signature
Infer from usage better import types (#27626)
Merge branch 'master' into sourceMapGenerator
Fix bug: Ensure JSDoc type range is valid (#27343)
Accept new baselines
Update test
Error when indexing out of bounds in a tuple or union of tuples
Use ambient modules as references to keep track of reporting and usage of modules correctly Fixes #27585
Have scanJsDocToken scan keywords (#27162)
Use relative module specifiers in error messages if possible (#27441)
Fix name resolution of `exports` in JS (#27394)
Fix class/constructor-function merge (#27366)
Merge pull request #27577 from Microsoft/projectLoadEvent
Merge pull request #27608 from flowkraD/isPartOfTypeNode
Merge pull request #27612 from Microsoft/fixSwitchCaseControlFlow
Only functions can be constructor functions (#27369)
Update user baselines (#27606)
Accept new baselines
Add regression test
Remove duplicate code
Add missing check in getTypeAtSwitchClause
Report circular JSDoc type references (#27404)
Merge pull request #27573 from uniqueiniquity/alwaysAwait
Added ObjectKeyword check to isPartOfTypeNode
Merge pull request #27203 from sbaidon/signatureHelpInAdjacentBlockBody
Code review - remove 'isCallExpression' check
Merge branch 'master' into fixUnionOfTupleIndexing
Fix linting issue
Accept new baselines
Add tests
Accept new baselines
Remove unused (and incorrect) code in sys.ts
Properly handle unions of tuple types
Accept new baselines
Merge pull request #26707 from mprobst/async-super-rename-safe
Properly widen initializer types in binding elements
Formatting a union should not create a 1-element union type node (#27582)
Merge pull request #27581 from eddiejaoude/patch-1
Report the errors for static incompatibility only if instance types are assignable Fixes #26138
Discriminate jsx contextual types same as object contextual types (#27408)
Send even for ProjectLoadStart and ProjectLoadFinish Fixes #27206
Add object check to justify cast (#27576)
Store and check deferred nodes by containing file (#27378)
Added Microsoft code of conduct file
Elt access assignment uses declared, not narrowed type (#27574)
Always await expression of promise type in return position
Infer tuples for jsx children if contextually typed by a tuple (#27409)
Ignore the directory watchers invoked in non polling watch mode with no relative file name information Fixes #27326
Remove duplicate case in parseJsDocCommentWorker (#27164)
Add tests for project updates with tsserver
Test transitive references in folders side by side so that later we can add tsserver tests as well
Verify errors on transitively referenced files
Handle resolution caching when referenced tsconfig changes
Verify that own config change in module resolution gets reflected
Fix the fileByName cache when program is used completely which breaks the getSourceFile not return redirected file by its name
Handle caching of module resolution depending on project references
Use resolution options of project reference if the file is from the project reference
Resolve project references transitively
Widen export assignment types so they arent accidentally fresh (#27397)
narrowTypeByInstanceof understands ctor funcs (#27551)
Replace subtype check in derivedness check with flags and structure checks (#27403)
Fix git submodule update syntax (#27549)
Rename to _superIndex to test conflict
Merge pull request #27539 from Pachwenko/master
fixed typo in CONTRIBUTING.md
Merge pull request #27410 from Microsoft/freeUpTransformFlags
Support loading "index.d.ts" using "typesVersions" without "types", "typings", or "main" (#27514)
Allow trailing void arguments to be omitted
Merge pull request #27370 from Microsoft/fixInstanceOfFunction
Merge pull request #27490 from Microsoft/indexedAccessConstraint
Merge pull request #27515 from basarat/master
Merge pull request #27517 from brandonmbanks/typo-comments
fix comments
Fixes for review comments.
Per-property super accessors in async functions.
Also --init git submodules when running user tests (#27508)
Merge pull request #27360 from limonte/patch-1
fix typo in performance mark name
📝 Better description of Pick mapped type
textChanges: Reuse some methods (#27492)
Merge pull request #27313 from spratmannc/spratmannc/fixing-extends-helper
Merge pull request #27485 from IllusionMH/fix-completionInfo-exception-27338
Exclude the overlap between Type and Value when checking for parameter visibility (#27444)
Fix GH#18217 issue for FileLog. (#27430)
Update user baselines (#27498)
Merge pull request #27500 from Loghorn/patch-1
Merge pull request #27499 from surlymrz/surlymrz-patch-1
Remove unneeded check from getTransformationBody
Update spec.md
Insert async keyword as last modifier (#27491)
Accept new baselines
Add tests
Accept new baselines
No unsound assignments to T[K] when T and K are both generic
Merge pull request #27447 from mattmccutchen/issue-27117
Merge pull request #27443 from Microsoft/errorMessageLogger
Merge pull request #27395 from Microsoft/noFilesError
Merge pull request #26070 from ajafff/tuple-rest
Update CONTRIBUTING.md
Use safe some function to handle undefined declarations (fixes #27338)
Merge pull request #27483 from Microsoft/redirects
Clean up amalgamatedDuplicates (#27285)
Minor cleanup in bindNamespaceExportDeclaration (#27367)
PR feedback
Merge pull request #27438 from Microsoft/failedLookupNotMatchingPath
Add resolvedPath and originalFileName to redirected file Fixes #27207
Add tests for failing redirect reuse of program when host implements getSourceFileByPath Test for #27207
 Add docs for better support of local testing and faster clones
Merge pull request #27474 from AverageMarcus/patch-2
Merge pull request #27472 from AverageMarcus/patch-1
Added real world examples of good commit messages
Added link to Jake website
Merge branch 'master' into codefix_add_missing_new_operator
Don't complain about `modules` and `outFile` options when `emitDeclarationOnly` is set.
Merge pull request #27440 from Microsoft/invalidTypes
Default logger for projectService has assert on exceptions being logged in tsserver
When there is parse error do not verify actual errors
Handle the case of failed lookup location being not normalized. Also fixed issue where type defs with relative name didnt resolve when directoryExists is present on the host Fixes #27405
Only copy non error values in array when converting the json Fixes #27432
Fix typo in PseudoPragma* types (#27437)
Fix parent points in unreachable code (#27400) (#27406)
Issue #27301: Fixed crash when converting function to async (#27396)
ExpressionWithTypeArguments parent may be a JSDocAugmentsTag (#27229)
Free up space in the TransformFlags enum
Primitives should not be instanceof... anything (#27402)
Merge pull request #27204 from Microsoft/fixPerIteration
Allow empty files lists in tsconfigs with an extends member (#27383)
Refactoring to unify updating no input files error
Make RenameInfo a union (#27382)
Add 'prefixText' and 'suffixText' when renaming shorthand properties (#27356)
Ensure verify.noErrors tests json files
Merge branch 'master' of github.com:Microsoft/TypeScript
Remove project tests from default compiler flag
Skip default lib checking in all tsbuild tests (#27380)
Merge pull request #27357 from Microsoft/fixBivariantInferences
Don't implicit-any diagnostic for json module
Fix commonjs export= merging (#27368) (#27371)
Log text of relevant file after an exception (#27006)
navigationBar/Tree: Better description for anonymous function (#27063)
Support completions after 'async' in object literal (#27250)
Fix bug: Allow completions after '@' with no contextToken (#27325)
Merge pull request #27260 from valera-rozuvan/fix-27086
Accept new baselines
Add regression test
Merge branch 'master' into fixInstanceOfFunction
Update bug report issue template TypeScript version to 3.2. (#27361)
Fix crash in use-before-def checking of enum tag (#27350) (#27354)
Only add unique inferences to candidate arrays
chore(package.json): http -> https, add www. for homepage
Accept new baselines
Add regression test
Only make contravariant inferences from pure contravariant positions
Update API baselines (#27349)
Bump version to 3.2.
Update user baselines (#27339)
Merge pull request #27028 from Microsoft/typedBindCallApply
Add regression test for #25485 as it is already fixed (#27320)
Merge pull request #27331 from Microsoft/fixTypesVersionsFourslashTest-2
Accept new baselines
Merge branch 'master' into typedBindCallApply
Fix 'x instanceof ctor' where type of ctor is Function
Fixes the completionForStringLiteralNonrelativeImport13 test
Ensure session passes along fileToRename (#27323)
include baseline updates
Limit the narrow-to-fresh rule added with boolean literals to only boolean literals (#27274)
Fix non-selfclosing JSX tag contextual types (#27251)
adding missing semi-colon to extendsHelper
Update user baselines (#27309)
Fix 27086. Ignore directories starting with a dot.
Merge pull request #27271 from Microsoft/fix24570-3
Update GDPR annotations (#27242)
Merge pull request #27270 from Microsoft/fix24570-2
Fix iterated type in for-await-of
Add more tests for await
Add contextual typing for await operand
Support promise-like types in contextual return type of async function
Distribute indexes of indexed access types first (#27243)
Add release-3.1 to covered branches (#27253)
Set parent pointers on manufactured reference for property initialization check (#27246)
convertToAsyncFunction: Use ReadonlyArray / ReadonlyMap where possible (#27190)
Limit inference from apparent types to one level deep (#27225)
Fix error message for class type in JSDoc missing type arguments (#27222)
Add GDPR annotations (#27217)
Merge pull request #22776 from amcasey/GH22607
Update user baselines (#27213)
Fix per-iteration bindings in for-loop head
Fix signature help not showing in block body bug
Only report expando use-before-def for identical control flow containers (#27199)
Merge pull request #27195 from Microsoft/projectReferenceInputDetection
Merge branch 'master' into projectReferenceInputDetection
Merge pull request #27172 from Microsoft/moduleResolutionWithOutDir
Merge pull request #27196 from Microsoft/declarationAndComposite
Merge branch 'master' into codefix_add_missing_new_operator
Ensure all the usages of compilerOptions.declaration take into account compilerOptions.composite if needed.
Add codefix to generate types for untyped module (#26588)
Detect the input file of referenced project with fileNames from parsed command Fixes #25864 and #26054
Merge pull request #27175 from a-tarasyuk/bug/error-using-declaration-dir-with-composite
Merge pull request #27188 from uniqueiniquity/miscAsyncFixes
Merge pull request #27176 from a-tarasyuk/bug/26786-no-error-when-using-allowjs-with-composite
Thread typesMapLocation down to the ProjectService
Update test name
Clean up for type precision and clarity
Merge pull request #27157 from Microsoft/fixEmptyObjectFalsiness
Merge pull request #27156 from uniqueiniquity/promisesAndUnderscores
Merge branch 'master' into fixEmptyObjectFalsiness
use getEmitDeclarations helper
allow using declarationDir with composite option
deny using allowJs option with composite
Use originalFileName (fileName of input project reference file) to resolve module/typereferences/reference paths in it instead of output decl file path This also ensures that originalFileName, resolvedPath are set correctly even when we are reusing program structure Fixes #26036
Add traceResolution option to build options
Merge pull request #27170 from weswigham/fix-build-assert
Implement readDirectory on the watch mode CompilerHost
Elaborate into arrow return expressions and array types (#27040)
Merge branch 'master' into promisesAndUnderscores
Stop adding name of function being fixed and update baseline
Merge pull request #27139 from ajafff/config-extends
Add test
Ensure name for callback is generated even when it has no args
Merge pull request #26935 from ajafff/abstract-baseclass-property
Merge pull request #26851 from ajafff/assert-compilerhost-readdirectory
Fix enum tag circular references (#27161)
Stop creating empty identifier name
Add baseline
Respond to CR
Merge pull request #27155 from Microsoft/fixIncrementalWatchProjectWithReferences
When renaming module, ensure rename span is just the last component of the path (#27151)
convertToAsyncFunction: Reduce casts in getTransformationBody (#27158)
Allow drawing inferences to conditional type branches (#27012)
Improve indexed access inferences (#27015)
Fix bug where array element is undefined (#26433)
Merge pull request #26866 from NMinhNguyen/allowSyntheticDefaultImports-if-esModuleInterop
Include triggerSpan in protocol.RenameInfo (#27160)
No longer specially recognize underscore and update baselines
Update user baselines (#27141)
Fix bug: Get mapped location of definition for findAllReferencesFull (#27113)
Fix non-toplevel prototype assignment (#27096)
Accept new baselines
Add tests
Definite assignment checking for expando properties (#27128)
Handle out and outFile options correctly in tsbuild
Simply override extendedSourceFiles array
Fix the project reference verification to include json source file version check
Builder to use project reference redirects to output in the dependencies instead of source files
Add tests
Wrap expressions returned from promises in awaits when appropriate
Merge branch 'master' into tsconfig_canonicalpath
Use this.toPath
Never escape string literals from textChanges (#26971)
Fix bugs: Replace SourceFile if '--noUnusedLabels' changed (#27060)
Merge branch 'master' into tsconfig_canonicalpath
Add test
Run callback as expression statement when no arg to assign to exists
Accept new baselines
LEGO: Merge pull request 27145
LEGO: check in for master to temporary branch.
Fix resulting issue in compiler
Correct falsiness for {} empty object type
fix getExtendedConfig in commandLineParser
Merge branch 'master' into codefix_add_missing_new_operator
Fix cross-file merge of assignment decl valueDeclaration (#26918)
Merge pull request #27109 from uniqueiniquity/diagnosticLocation
Use head message at top level of elaboration if elaborating via possible call (#27107)
Update baselines
Add tests
Allow non-number array for source of TypedArray.from
Merge pull request #27082 from Microsoft/watchAPIAndProjectReferences
Merge pull request #27100 from Microsoft/revertResolveProjectReferencePathAPIChange
Add test
Handle function assigned to binding pattern
Add test
Report diagnostic on expression name if it exists
Use qutemarks around new instead of ticks around `new` in diagnostic (#27106)
Introduce boolean literal freshness (#27042)
Fixing react defaultize+generic default props interaction (#27088)
Revert the API change to resolveProjectReferencePath introduced in #27062
Fix the usage of createProgram in tsc
Merge pull request #27031 from uniqueiniquity/asyncCatchUniqueNames
PR feedback
Merge branch 'master' into watchAPIAndProjectReferences
Merge pull request #27078 from Microsoft/commonCompilerOptionsWithBuild
Merge branch 'master' into commonCompilerOptionsWithBuild
Make parseCommandLineWorker non generic
Merge pull request #27062 from Microsoft/tsbuildWatchImprovements
Merge branch 'master' into asyncCatchUniqueNames
Merge pull request #26135 from Microsoft/watchDirectoryOfNodeModulesScriptInfo
Use separate map with smaller scope to track renames
Merge pull request #26930 from uniqueiniquity/onlyReportExpectedPromiseArgs
Fix bug: VariableDeclaration may have SemanticMeaning.All if an `@enum` in JS (#27085)
For completion in string literal union, don't include strings already in the union (#26755)
Add clarifying comments
Accepted baselines.
Added tests.
Try to find object/intersection types with the most overlap when failing assignability against unions.
getEditsForFileRename: Don't resolve to `a.js` when `a.ts` is moved (#27081)
Use nextToken() after parsing a tag name so we can parse type keywords (#26915)
Fix watch of project with project references
Fix bug: Ignore @enum tag in TS (#27076)
Shorten more internal names to JS or TS (#27080)
typo: missing word: "to" (#27079)
Instead of watching individual script infos, watch the node modules folder for script infos in node modules
Add test for preserveWatchOutput on command line #26873
Fix bug: Ensure `export =` symbol always has a valueDeclaration (#26973)
Enable listFiles and listEmittedFiles as build option
Unify the commandline parsing worker
Refactoring
Remove unnecessary case
Respond to CR
Add and update tests
Use existing identifier when possible for renaming functions
Support testing jsdoc tags of completions (#26962)
Merge pull request #27064 from Microsoft/makeFileLevelOptimisticUniqueName
InsertNode instead of replace + handling call expressions
makeFileLevelOptmiisticUniqueName -> makeFileLevelOptimisticUniqueName
Consistently pass indent to 'parseTagComments' (#27055)
Avoid circularly resolving names when looking up type members using resolveName (#26924)
Report all project errors on incremental compile
Fix this-type in prototype-assigned object literals (#26925)
Handle prepend output to be emitted in downstream project even if declaration file doesnt change
Test case to verify the non local change doesnt build referencing projects
Handle circular project references
Add and update tests
Handle promise handler block bodies with no return and other cleanup
Instead of queueing build for downstream projects right when invalidating project, do it after build for invalidated project is complete
Merge branch 'master' into typedBindCallApply
Accept new baselines
Add 'bind' overloads for rest parameter arrays
Prefer error candidates with no rest parameters over those with
Fix inference when source and target both have rest parameters
isExpandoFunctionDeclaration only checks values (#27052)
Rename JS-specific concepts (#26795)
Update user baselines (#27048)
Merge pull request #27004 from RyanCavanaugh/noJsNewModuleCompletions
Report file not found error about the project and watch config file even if not present
Deadcode removal
Maintain project references more clearly - no need to maintain map from referencing projects to references - When queueing for downstream projects, always handle build order
Merge pull request #27035 from Microsoft/fixTypesVersionTests
Provide suggestions for common can-not-find-name errors (#27034)
Always create dependency graph and build order
Sanitize module resolution logs for typesVersions entries
Prefer elaborating on expressions which could be called to produce a correct type by suggesting such (#27016)
Merge pull request #27020 from Kingwl/improve_accidentally_calling_type-assertion_expressions
Cache global dependency graph and invalidate it only if doing full reload of the project or resetting builder context
Start shaping SolutionBuilder API
Remove dead code and rearrange code to handle resolveProjectNames always returns array of resolved config file name
Always resolve the config file to ResolvedConfigFile if its json, otherwise combine tsconfig.json
Merge branch 'master' into tsbuildWatchImprovements
Merge pull request #26983 from Tyriar/26850_invert_gutter
Merge pull request #26865 from chrissantos1995/bugs/fix-empty-files-diagnostics
Update baselines
[WIP] Record original name of renamed variable
[WIP] Use original identifier name to count up from when renaming collisions
[WIP] add test
Miscellaneous cleanup
Accept new baselines
Merge branch 'master' into typedBindCallApply
Minor fix
Accept new baselines
Add tests
Update getAugmentedPropertiesOfType
Update declarations
Initial review
improve test case and add related diagnostic
Merge pull request #27021 from ajafff/fix-functiontype-emit
Fix FunctionType emit when only parameter has no type
improve Diagnostics for accidentally calling type-assertion expressions
Codefix: add quick fix for missing 'new' operator
Update watches to wild card directories, input files, config files when project invalidates
Add related span pointing at missing arguments (#27013)
Accept new baselines
Inline builder context instead of it being outside for easier access and resetting
Add CallableFunction/NewableFunction to virtual file system
Accept new baselines
New CallableFunction and NewableFunction types in es5.d.ts
New --strictBindCallApply flag in compiler
Update user baselines (#27000)
Add partial reload support also watch wild cards correctly. Partially fixes #26524
Refactoring to handle case sensitivity of the host when caching
Try the ParsedCommandLine from cache instead of re-reading contents of tsconfig file
Remove unnecessary projectReferences from ExpandResult and referenceSpecs from ConfigFileSpecs
Accept new baselines
Better scheme for choosing between co- and contra-variant inferences
Add 'fileToRename' property to RenameInfo (#24702)
Don't offer module completions in non-module JS files
Invert gutter instead of setting colors
Take into account undefined nodeValue when recording diagnostic
Clean up emit pipeline to reduce callback overhead
Merge pull request #26568 from Microsoft/typesVersions
Ensure diagnostic reporting matches code fix ability
Merge branch 'master' into typesVersions
Merge branch 'master' of https://github.com/Microsoft/TypeScript into bug/24542-bad-error-message-for-import-ing-an-export
Improve use of SemanticMeaning in symbol display (#26953)
Avoid adding duplicate completion from contextual keyword (#26947)
Introduce literal freshness for literal enum member types (#26556)
Merge pull request #26895 from Microsoft/callableErrors
add comment
Merge branch 'master' into PropertyDeclarationExclamationToken
rename rescan function
Merge branch 'master' into improve_type_arguments_parser_1
Add location info to empty lists diagnostics when tsconfig file exists
findAllReferences: Consistently use 'this' parameter as definition site (#26950)
findAllReferences: Fix declarationIsWriteAccess for PropertyAssignment in destructuring (#26949)
Fix JSX completions after boolean property (#26943)
Merge pull request #26944 from Microsoft/casingOfTypeReferenceDirectives
Lowercase type reference directives when determining to reuse program structure (just like when we create new program)
Merge pull request #21957 from jack-williams/typeof-in-switch
Improve 'isWriteAccess' for findAllReferences (#26889)
Merge pull request #26825 from Microsoft/resolveJsonModuleEmit
Merge pull request #26817 from Microsoft/resolvingJsonModuleLikeJsExportsEqual
Merge pull request #26793 from minestarks/parentDirFix
Update narrowing baseline
Merge branch 'master' into typeof-in-switch
Change `typeof` narrowing to narrow selected union members (#25243)
Error accessing abstract property in constructor of abstract subclass
Merge pull request #26392 from mattmccutchen/declare-module-advice
Centralize diagnostic reporting for empty files diagnostic
Merge remote-tracking branch 'upstream/master' into async-es2018
Merge pull request #26589 from Microsoft/deduplicate_overloads
Merge pull request #26453 from ajafff/abstract-property-in-initializer
Merge pull request #26308 from ajafff/checkresolvedmodule
Merge pull request #25633 from Kingwl/strictParameter
Don't case on type node
Only perform async refactor if it won't delete code
Update user baselines (#26903)
Accepted baselines.
Renamed test.
Allow isSymbolAccessible to paint object literal declarations as visible (#24668)
Check privateness when emittign readonly/const props (#26920)
Merge pull request #26465 from rnathanday/master
Merge pull request #26848 from Microsoft/deferUnionIntersectionReduction
Merge pull request #26870 from ajafff/composite-files-check
Merge pull request #26837 from mattmccutchen/issue-26835
Merge pull request #26828 from Microsoft/narrowUnknownByObject
Merge pull request #26292 from Kingwl/tupleIndexAccessCheck
Merge pull request #26112 from rhys-vdw/22685-array-flat-fix
Merge pull request #26192 from ajafff/createprogram-nochecker
Merge pull request #23253 from Kingwl/definite-assignment-assertion-improve
Merge pull request #25822 from Kingwl/rechabilityImprove
Merge branch 'master' into tsconfig_canonicalpath
Support completions inside JSDoc before EndOfFileToken (#25568)
Allow literal initializers of readonly properties in declaration files (#26313)
PR Feedback
Remove duplicate function createTextRange (#23346)
Properly handle JS enum symbols (#26893)
Bind non-expando property assignments at top-level (#26908)
Update user baselines (#26888)
Accepted baselines.
Try finding the first type with a call/construct signature when relating to unions.
Refactor and clean up sourcemap decoder
Always check index type validity for all types when an error node is present so we always issue an error (#26789)
Dont consider export specifiers visible in their local scope (#26884)
Allow special assignments to have a contextual type of their declared  type if present (#26802)
Accepted baseleines.
Skip asterisks after newline when parsing JSDoc types (#26528)
Fixes for type parameter name resolution in JS (#26830)
Update user baselines (#26861)
Added test.
Collect jsdoc tags for type parameters (#26824)
better condition for file include exhaustiveness check
Enable allowSyntheticDefaultImports if esModuleInterop is enabled
Add newline to bottom of tsconfig files
Fix diagnostic reporting for empty files in tsconfig
update baseline
Merge branch 'master' into fix_lookup_regression_again_and_again
hand over to LanguageServiceHost.readDirectory
Assert CompilerHost.readDiretory for projectReferences with include
Accept new baselines
Defer reduction of identical function types in unions and intersections
Argument arity error should only consider signatures with correct type argument arity.
Merge pull request #26782 from Microsoft/reportFileChangeDetectedOnce
Narrowing unknown by typeof object to object | null Fixes #26327
Support json module emit when module emit is commonjs, amd, es2015 or esnext Fixes #25755 and #26020
Use widened type (just like importing using module.exports = in js file) Fixes #26429
Baseline the require of json file in js file
Merge pull request #26794 from samlanning/fix-equalownproperties
Merge pull request #26820 from RyanCavanaugh/resetParameterChanges
Update baselines to fix build (#26822)
Revert #26762, #26726, and #26317 in preparation for a clean PR fixing all the issues.
LEGO: Merge pull request 26816
LEGO: check in for master to temporary branch.
Merge pull request #26749 from uniqueiniquity/getWholeType
Add [Constructor]Parameter types to lib.d.ts (#26243)
Infer this parameters (#26800)
fix lookup regression again and again
Merge pull request #26790 from Microsoft/fixWeakObjectRelationCheck
Accept new baselines
Merge branch 'master' into fixWeakObjectRelationCheck
Allow for undefined in type
No excess property error for spread properties (#26798)
Make finer-grained errors get reported on function arguments (#26784)
Fix faulty path handling
Fix equalOwnProperties
Add test for ts.equalOwnProperties
Merge pull request #26788 from ajafff/remove-useless-condition
Fix namespace expando merge (#26690)
Accept new baselines
remove useless condition
Optimize relationship checks for arrays and tuples
Accept new baselines
Exclude generic types from weak object checks
Report file change detected only once when save takes place multiple times before timeout
Merge pull request #26777 from Microsoft/recursiveTypeSignatureHelp
Add test for signaure help with recursive type Test for #26155
Ignore newline and asterisk when parsing JSDoc typedef (#26775)
fix lookup regression again (#26762)
Make SymbolFlags.ObjectLiteral a Value (#26752)
Merge pull request #26751 from Microsoft/declarationEmitWithComposite
LEGO: Merge pull request 26765
LEGO: check in for master to temporary branch.
Remove unnecessary `getContainingClass` calls (#26753)
Completion for tuple index doesn't need to include quotes (#26750)
importFixes: Only provide a fix using the best module specifier for a given module (#26738)
Correctly mark visibile nodes when declaration isnt explicitly turned on but composite is true Fixes #26669
Add test to verify #26669 where declaration output is incorrect when declaration flag is not set explicitly in options
Fix error introduced by rebase
Use non-diagnostics-producing typechecker to get type
Add comment explaining special casing
Add tests and validate diagnostic spans
Allow codefix to apply to function expression in variable declaration
Look for correct description
Test for existence of diagnostic when running tests
Merge pull request #26746 from Microsoft/noUnionInferences
In JS, fix contextual type of this assignments (#26743)
moduleSpecifiers: Simpler criteria for preferring relative path vs baseUrl (#25803)
Merge pull request #26742 from Microsoft/addShortWatch
Accept new baselines
Update tests
Stop inferring unions for disjoint callback parameter inferences
Merge branch 'master' into typesVersions
Merge pull request #26741 from Microsoft/gulpWatch
Reset the build queue correctly Fixes issue reported in #26545#issuecomment-416961260
Fix overlapping test runs in 'gulp watch'
Move parsing of build options to commandLineParsing so it can be tested and it lines with other commandline parsing
Add shortname for watch option
Merge pull request #26676 from Microsoft/complexRestParameterTypes
codeFixInferFromUsage: Assume that using `x[0]` means that `x` is an array (#26739)
Merge pull request #26650 from amcasey/LogPid
Make generator function name a completion list blocker (#26640)
Merge pull request #26723 from Microsoft/buildCleanSourcemaps
LEGO: Merge pull request 26736
LEGO: check in for master to temporary branch.
Merge branch 'master' into complexRestParameterTypes
add test case and fix regression (#26726)
Fix typo
accept baseline
Merge branch 'master' into strictParameter
Add survey event (#26455)
Merge branch 'master' into typesVersions
Use semver ranges
Ensure JsonSourceFile has all the non-optional properties of SourceFile (#26162)
Merge pull request #26716 from Microsoft/lazyConfiguredProjectsFromExternalProject
Add js source maps to list of outputs when doing --build Fixes #26619
Use protocol.UserPreferences in server to store UserPreferences
Merge branch 'master' into lazyConfiguredProjectsFromExternalProject
lazyConfiguredProjectsFromExternalProject as userpreference instead of command line option
Support signature help for type parameters of a type (#26702)
Add semver range parsing support
Support import fix/completions for `export =` (#25708)
getEditsForFileRename: Avoid changing import specifier ending (#26177)
Add option --lazyConfiguredProjectsFromExternalProject to enable lazy load of configured projects referenced by external project Fixes #26696
Add path back-reference tests
noUnusedLocals: Destructuring assignment is a write (#26365)
Merge pull request #26590 from Microsoft/buildRefactoring
Merge pull request #26317 from Kingwl/parameter-initializer-lookup-fix
renames per PR feedback
Fix bug: Don't go to *any* constructor signature for jsx element (#26715)
Uncomment tests fixed with #23631 (#26700)
Memoize collecting set of all imported packages (#26263)
Switch to paths-like pattern matching
LEGO: Merge pull request 26713
LEGO: check in for master to temporary branch.
Merge branch 'master' into strictParameter
accept more case
add special check for parameter initializer lookup if targeting es2015+
Merge pull request #26679 from Microsoft/improveGetTypeOfExpression
Merge pull request #26698 from Microsoft/indexedAccessConstraints
Use array helper in computeCommonSourceDirectory and remove two unnecessary tests (#26416)
Get [type] parameter types from @type tag (#26694)
Accept new baselines
Add tests
Add tsserver test for completions and avoid excess properties (#25622)
Examine all constraints of indexed access types in relations
LEGO: Merge pull request 26697
LEGO: check in for master to temporary branch.
No assert for nameless typedefs (#26695)
Distribute indexed accesses when simplifying them (#26281)
In pickLongestCandidateSignature, instantiate using inferred type arguments (#26646)
Declaration emit includes function properties (#26499)
Fix bug: Don't let empty signature documentation override other documentation (#26638)
Update user baselines (#26687)
improve test case
Accept new baselines
Add regression test
Add early out for type assertions in getTypeOfExpression
Merge pull request #26678 from Microsoft/fixReturnOnlyInference
Accept new baselines
Add regression test
Ignore parameters when inferring from return type only signature
include leading non-ASCII horizontal whitespace in SyntaxKind.WhitespaceTrivia token
Accept new baselines
Add tests
Accept new baselines
Revise complex rest parameter handling in relations and inference
Merge pull request #26625 from ajafff/revert-destructuring-private-computed-name
Accept new baselines
Use getSpreadArgumentType when relating to complex rest parameter types
Allow weak type detection for intersection sources (#26668)
Update user baselines (#26664)
try get add missing member return type from context (#26250)
LEGO: Merge pull request 26654
LEGO: check in for master to temporary branch.
parse less than token rather than left shift in context of type arguments
Fix duplicate completions bugs (#26648)
Substitute process ID for "PID" in log file names
Get symbol at location for class expressions/keywords (#26636)
remove Animations from chrome-devtools' user test shim (#26494)
Update user baselines (#26632)
Don't create expando object literals in TS (#26525)
Revert #26360: Don't error on destructure of private property with computed property syntax
Use context free expression types in evolving array checking and cache context free type (#26585)
Make equalityComparer non-optional
fourslash: Allow to verify textChanges without changing file content (#26607)
Update user baselines (#26601)
Refactor sourcemap emitter
Remove jsTypings/semver.ts, add unit tests and logging
Merge pull request #26483 from Microsoft/fix20594
Merge pull request #26602 from Microsoft/fixMappedTypeDefinitelyAssignable
Accept new baselines
Add regression test
Accept new baselines
Ignore constraints of generic mapped types in definitelyAssignableRelation
Report error summary from the queue.
Merge pull request #26558 from Microsoft/fixInfiniteConstraints
Remove unused overloads of 'deduplicate' and 'deduplicateSorted'
Accept new baselines
Add regression test
Merge pull request #26566 from Microsoft/fixStrictCoAndContraInferences
Merge branch 'master' into typesVersions
Simplify or get constraint in distributive conditional type, but not both
Do not expose change in createCompilerHost
Keep only errors starting on new screen
Add preserveWatchOutput option to build option and report starting compilation and file changes detected status
Combine buildHost methods into SolutionBuilderHost's reportDiagnostic and reportStatus
Create api with watchHost to include in solution builder host
Use SolutionBuilderHost instead of using compilerhost for solution builder
Print version along with help when doing --build
Remove unnecessary usage of system and compilerHost
Unify tsbuild option parsing with command line options parsing
Move perform build to tsc instead of tsbuild
Ger rid of unnecessary upto date host and functions pulled out
Write first test with --build and --watch
Merge pull request #26569 from dsherret/issue26535_FixNullableDocumentRegistryTarget
Fixes to the advice for untyped module imports from unknown packages:
Remove todo.
When --noImplicitAny is enabled, don't report errors suggesting that a 'void' function can be 'new'ed (#26579)
Merge pull request #26564 from Microsoft/fix26497
Perform depth check for all type instantiations
Adjust subModuleName
Provide a default script target for the document registry.
Base version test on 'versionMajorMinor'
Added fourslash test
Initial support for 'typesVersions'
Emit lib reference directives in declaration output
Merge branch 'master' into fixInfiniteConstraints
Accept new baselines
Fix test
Add tests
Accept new baselines
Covariant inferences (other than never) preferred over contravariant
Merge pull request #26425 from mattmccutchen/issue-26405
Accept new baselines
Add tests
Guard against infinite type instantiations and constraints
Remove some duplicate code in convertToAsyncFunction unit tests (#26527)
Go back to the old narrowing algorithm (pre #26143) and avoid #26130 by skipping narrowing if the old algorithm produces a type to which the assigned type is not assignable.
Remove lockfile, add to gitignore, and add npmrc preventing its generation (#26519)
Track late bound names in binding patterns (#26336)
mark error type in baselines very not-aggressively (#26346)
Merge pull request #26523 from Microsoft/disableBuildAPI
Disable apis for tsc --build till we have the actual API figured out with tests
Remove unnecessary callback in runBaseline (#26500)
Merge pull request #25884 from Microsoft/optimizeOpenExternalProject
Merge pull request #26517 from Microsoft/fixMappedArrayTypeConstraint
Merge pull request #26481 from Microsoft/simplifyResolveCall
Accept new baselines
Add tests
Correct apparent type for homomorphic mapped types applied to array types
Update LKG and remove newly unnecessary non-null assertions (#26515)
Update user baselines (#26512)
Skip whitespace or asterisk in JSDoc param type and name (#26067)
Set "rootDir" for cancellationToken project (#26498)
Merge pull request #26431 from mattmccutchen/issue-26430
Update user baselines (#26490)
Merge pull request #26420 from Microsoft/largeNonTsFiles
Allow super references to constructor function methods (#26482)
Check SymbolFlags instead
Merge pull request #26340 from Microsoft/neverIndexedAccess
Ensure for-in loop variable is checked
Merge pull request #26458 from Microsoft/pathMappingResultsToNodeModules
Fix lint errors
Property assignments in Typescript (#26368)
For a this-property assignment with an empty object initializer, use type annotation if present (#26428)
Merge pull request #26473 from Microsoft/doGlobalImplicitThisRight
Accept new baselines
Use synthetic arguments instead of GetEffectiveArgumentXXX functions
Use string contains and nodeModulesPathPart const for "/node_modules/"
Merge pull request #26457 from Microsoft/baseUrlPathMappingResolveJsonModule
Fix invalid cast (#26462)
Narrow on element access of literal (#26424)
Accepted baselines.
Do it correctly.
Accepted baselines.
Updated test cases.
Accepted baselines.
Make it better.
Merge pull request #26451 from Microsoft/nonRecursiveOnHostsWithoutRecursiveSupport
Make file as externalLibrary import if path contains node_modules
Write tests to demonstrate how baseUrl + pathMapping to node_modules behaves
Do not include json file unless --resolveJsonModule is specified Fixes #26402
Test when module resolution because of path mapping takes to json file Test for #26402
Classes can extend Javascript constructor functions (#26452)
Remove special handling for JSDocPropertyLikeTag in getJSSpecialType (#26432)
disallow abstract property access in property initializer
Fixes #26128 - signature comp for  jsdoc @class. (#26160)
Return the nonrecursive directory watcher correctly on platforms that dont support recrusive directory watching Fixes #26288
Simplify chooseOverload function
Mapped types like Pick<T, K> should adopt property documentation from T.
Set rootDir in tsconfig-base.json (#26415)
Error on accessing private property through destructuring assignment, and mark property used (#26381)
Include all excluded arguments in one go instead of one by one
Check large file size only for non ts files
Update user baselines (#26419)
noUnusedLocals: `f(x = 1)` does not use `x` (#26366)
Merge pull request #26197 from Microsoft/largeFileEvent
Merge pull request #26140 from Kingwl/completionUnionType
Merge pull request #26377 from Microsoft/moduleResolutionWithSymLinks
Add documentation for originalPath
Merge pull request #26200 from Microsoft/watchWithStrict
Refactoring promises returning functions to use async and await (#26373)
Use original path from resolved module cache when available. Fixes #26273 Thanks to @ajafff, for partial fix  and test (#26310)
Treat NoSubstitutionTemplateLiteral like StringLiteral in more places (#26330)
Merge pull request #26289 from amcasey/LibSuggestions
moduleNameResolver: fix invalid assertion and avoid unnecessary work (#26319)
Allow type predicates in JSDoc (#26343)
Don't error on destructure of private property with computed property syntax (#26360)
Review feedback
Merge pull request #26296 from ajafff/modulenameresolver-cache
getDefaultExportInfo: Use `getImmediateAliasedSymbol` instead of `getAliasedSymbol` (#26364)
Merge pull request #26305 from ajafff/common-prefix
review comments
restore old algorithm
Dont use baseURL relative absolute paths in declaration emit, use absolute paths in bundle emit (#26341)
code review
Update user baselines (#26358)
check index access for fixed length tuple
Don't store @template constraint in a TypeParameterDeclaration node (#26283)
fixAddMissingMember: Support interface and don't crash on type parameter (#25995)
Don't include class getter in spread type (#26287)
Don't crash on computed property in destructure (#26334)
Accept new baselines
Add test
Make T[K] yield never when T is never
Check the ambientness of a symbol name before attempting to trim it (#26312)
Still generate signatures in SkipContextSensitive mode just to match on return types (#25937)
getScriptInfoOrConfig: Canonicalize tsconfig path before lookup
Merge pull request #26143 from mattmccutchen/issue-26130
Merge pull request #26244 from Microsoft/fixThisAndContextualTypes
fix handling if there is no commonPrefix
improve completions for union type in type arguments
Actually add sorting of elaboration text to user baselines
Ping ryan instead of mohammed for user PRs now
unittests/moduleResolution: actually assert in checkResolvedModule
handle failed lookups
make it work for root directory
Merge pull request #26245 from Kingwl/fix-compiler-crash
really, really fix test(?)
add test
fix commonPrefix handling
fix test
actually test the cache
fix moduleNameResolver cache
Don't compute suggestion diagnostics for lib files
moveToNewFile: Don't remove empty named imports (#26265)
goToTypeDefinition: Go to function return type (#25952)
Fix bug: `symbol.valueDeclaration` not guaranteed to be defined (#26267)
Add TEST-results.xml to the gitignore
Merge pull request #26234 from RyanCavanaugh/noVoidTest
fix compiler crash (#26209)
Support signature help for contextual parameter type (#26022)
Merge pull request #26236 from Microsoft/fixCircularReturnType
Add fourslash tests
Skip loading configured project just to report project info through synchronizeProjectList for project opened by external project
Add checks for remaining truthiness positions
Revise logic that computes the contextual type for a parameter
Dont delay external project update from openExternalProject Since external projects are needed to be uptodate when opening file, so in most likely scenarios these will be loaded anyways so there is no saving in postponing this work
Delay update graph when opening external project, and delay load configured project referenced from external project when opening it
Add flags on commandLineOption to indicate strictFlag or option affecting semanticDiagnostics
Hardcode xunit reporter output file into failed tests reporter
Merge pull request #26150 from Kingwl/CheckReturnUnknow
completions: 'true' and 'false' are type keywords (#26237)
infer number index signature in JS object literals (#26221)
If runner is xunit (as on CI) set output file
Merge branch 'master' into fixCircularReturnType
Merge branch 'master' into fixCircularReturnType
25840 - Add a more meaningful error message to the case when calling a public static method on an instance (#25922)
Accept new baselines
Add regression tests
Disallow exprs of type `void` to be used in truthiness checks
Use getReturnTypeFromAnnotation instead of ad hoc checks
visit exclamation token
Change esnext.asynciterable to es2018.asynciterable
Accept new baselines
Clean up return type checking logic
Accept new baselines
Ensure type parameters are erased in contextual signature from @type tag
Erase type parameters when fetching return type from JSDoc @type tag
Update user baselines (#26186)
Refresh semantic diagnostics when compiler options affecting semantic diagnostics generation changes Fixes #26195
Removing debugger statements from tests
Send event on referencing large file
Accept new baselines
add link to issue
Properly catch and error on circular function return types
add test
Merge pull request #26194 from bterlson/patch-1
Update README.md: JavaScript has modules and classes
Merge pull request #26169 from Microsoft/largeFile
Merge pull request #26173 from Microsoft/compositeProjectGoToDefinition
createProgram: don't use TypeChecker
remove useless test case
Fixes to ensure getDefinitionAndBoundSpan works correctly when using composite projects Project references need to be detached from the project when closing project In SourceMapDecoder handle when the redirected file to project reference is set as the output of the project Keep configured project alive if project it references has open ref Fixes #26164
Merge pull request #26137 from Microsoft/updateGraphIfDirty
Merge pull request #26171 from Microsoft/portGeneratedLibFiles8-2-2
Accept baselines
Port generated lib files
Flag JS Literals and ignore assignments/accesses to invalid props, instead of adding an index (#25996)
Update user baselines (#26156)
Do not read files greater than maxFileSize which is currently 4mb Fixes #24762
Merge pull request #26161 from Microsoft/portGeneratedLibFiles8-2
Accept baselines
Port generated lib files
add check for function return unknow type
Merge pull request #26121 from mattmccutchen/issue-23999
Have getAssignmentReducedType use the comparable relation instead of typeMaybeAssignableTo.
Merge pull request #25593 from Microsoft/errorInFileWithDeepImport
Instead of getSymbolAtLocation use resolveExternalModuleName without error reporting
Use updateGraphIfDirty to do quick check if project update is needed With this updateGraph is used only in locations we are certain project is dirty
Merge pull request #26102 from Microsoft/portLibFiles731
Merge branch 'master' into errorInFileWithDeepImport
Fixes #26122 - erroneous "TS2350" for js constructors called with incorrect parameters (#26124)
Make a map for semantic diagnostics from old state
Make ExportedModulesFromDeclarationEmit as ReadonlyArray of symbols combining exportSpecifiers emitted and dynamic import type nodes written
No need for method to get the exportedModulesFromDeclarationEmit
"Could not find a declaration file for module" error needs to use the unmangled package name where appropriate.
Merge pull request #26109 from Microsoft/invalidTsconfig
additional test
Merge branch 'master' of github.com:Microsoft/TypeScript into rest-param-destructuring
update test
Fix issue with Array#flatMap callback return type
Merge branch 'master' of github.com:Microsoft/TypeScript into tuple-rest
improve error message and update testcase
Merge branch 'master' into strictParameter
importFixes: When one file redirects to another, consider both for global import specifiers (#25834)
Make import fix for default import mention that it's a default import (#26105)
Always return a defined result from getTypeFromTypeNode (#26108)
Handle when property name turns out to be non string literal computed name because of errors in tsconfig file Fixes #26076
Merge remote-tracking branch 'origin/master' into portLibFiles731
Update more baselines from #25626 (#26107)
Merge remote-tracking branch 'origin/master' into portLibFiles731
Avoid trying to write the type of non-values (#25626)
Port generated lib files
Fix decorated accessor emit (#26016)
Jsdoc `@constructor` - in constructor properly infer `this` as class instance (#25980)
Refactor and improve caching in getTypeOfSymbol callees (#25842)
Merge pull request #26101 from Microsoft/Fix26083-2
Update ThirdPartyNoticeText to include KhronosGroup copyright notice for WebGL.
Port generated lib files
Port generated lib files
Merge pull request #25811 from Microsoft/subDirectoryOfRootWatches
Ignore trailing comma when resolving signature for quick info (#25841)
Merge pull request #26008 from ajafff/restbindingpattern
Merge pull request #25963 from ajafff/cleanup-factory
Merge pull request #26065 from ajafff/createbinary-arrow-parens
In JSDoc, resolve import types as values too (#26066)
Merge pull request #26063 from Microsoft/mappedTypesArraysTuples
Merge pull request #26093 from Microsoft/RyanCavanaugh-patch-1
Merge pull request #25944 from Microsoft/portGeneratedLibFiles
Update CONTRIBUTING.md
Update user baselines (#26088)
make it work with AssignmentRestElement
Update the public API after PR #26032
Infer array rest as tuple if possible
Merge pull request #26032 from Microsoft/projectReferences
Keep the original configured project alive created during findAllReferences
Move the original location getter to ProjectService. This is in anticipation of work needed to keep original projects alive
Merge pull request #26012 from Microsoft/compileOnSaveOptimization
Test that verifies we arent updating all projects unnecessarily when called with compileOnSave and project
Only bind module.exports if no local definition exists (#25869)
Merge pull request #25965 from ajafff/expose-escapeleadingunderscores
Merge pull request #25851 from Microsoft/configFileDiag
createBinary: parenthesize ArrowFunction in RHS
test sourceMap
merge tests
Accept new baselines
Add tests
Accept new baselines
Homomorphic mapped type support for arrays and tuples
Merge pull request #26029 from tschaub/fix-25916
Remove trailing whitespace from JSDoc comments
Support the JSDoc @enum tag (#26021)
add additional test for grammar and type checking
Merge pull request #25835 from Microsoft/getCurrentProgramOrUndefined
getDocCommentTemplateAtPosition: Return result if in empty comment (#26026)
Document ObjectLiteralElementLike (#26024)
createJavaScriptSignatureHelpItems: Use array helpers and simplify (#26025)
Update authors for release 3.0.1
Use isArray instead of isProjectsArray
Unify getProjects for compileOnSave and others like (navigation etc)
allow BindingPattern in FunctionRestParameter
Support deleting all unused type parameters in a list, and deleting @template tag (#25748)
If project name is specified in compile on save, do not update all projects to just use that project
allow BindingPattern in BindingRestElement
navigationBar: Fix bug for shorthand ambient module (#25992)
Fix bug for isValidTrigger when contextToken is undefined (#25993)
Fix bugs for go-to-definition on mapped type method (#25991)
Break createSignatureHelpItems into functions (#25948)
Use `import().T` for import completions/fixes of pure types in JS files (#25852)
Remove extraneous `const`, fixing #25714 (#25982)
Merge pull request #25978 from Microsoft/capturedGlobalThis
 Fix #25954 - Always retain export modifier if default modifier is present (#25974)
Simplify and inline getPropertySymbolsFromType (#25940)
Accepted baselines.
Provide a better error on arrow functions that capture the global 'this'.
Merge pull request #25966 from ajafff/shorthandPropertyAssignment-initializer-symbol
Merge pull request #25956 from fredrb/alias-jake-help-command
add quickinfo test
Expand span of @typedef with properties to include the @typedef tag (#25950)
correctly resolve Symbol of destructuring shorthand intializer
expose escapeLeadingUnderscores
accept baselines
minor cleanup in factory.ts
Merge branch 'master' into definite-assignment-assertion-improve
add help alias to jake --tasks in Jakefile.js
Merge pull request #25949 from Microsoft/resolveJsonModuleError
Merge branch 'master' into resolveJsonModuleError
Minor refactor in goToTypeDefinition (#25951)
signatureHelp: Factor out 'isSyntacticOwner' function (#25518)
Merge pull request #25541 from mattmccutchen/issue-25539
When json module is not found, include enabling --resolveJsonModule might help. Fixes #25722
Improve the error message when asserting to a type that is not comparable to the original.
Accept baselines
Port generated lib files
Merge pull request #25938 from Microsoft/fixRestTupleArityCheck
fourslash: Don't parse lib if 'nolib' is set (#23277)
Accept new baselines
Add regression test
Rest parameter with fixed size tuple should be same as regular parameters
Simplify getContainers (#23323)
Fix duplicate "this" completion (#25900)
In getPropertySymbolsFromContextualType, use union discriminant to filter types (#25914)
Fix inferFromUsage on index signatures (#25934)
Merge pull request #25859 from Microsoft/optimizePrimitiveIntersections
Update comment
Merge pull request #25913 from Microsoft/fixCircularConstraintCheck
Address CR feedback
Handle PropertyAssignment in getCommentOwnerInfo (#25911)
Merge pull request #25604 from mprobst/fix-exported-var-comments
Fix typos
Lookup files by resolved `Path` and not by `fileName` in sourcemapDecoder when querying program (#25908)
Accept new baselines
Add regression test
More simplification + consistent use of getConstraintOfTypeParameter
Fix #25820 - handle redirected files when comparing paths (#25902)
Merge pull request #25863 from mattmccutchen/issue-9744
Accept new baselines
Simplify logic in getBaseConstraint
Call toPath on sourceRoot to ensure it is always absolute (#25838)
Inspect all possible module paths when looking for the best one to create a specifier with (#25850)
Merge pull request #25901 from Microsoft/fix23339
Add `.mailmap` and `Test-results.xml` to .npmignore
Accept new baselines
Consistently include circularity check in type parameter constraints
moduleSpecifiers: Allow "*" as a path mapping (#25881)
Simplify getWidenedTypeFromJSSpecialPropertyDeclarations (#25868)
Report a semantic error for an arrow function with a "this" parameter.
Accept new baselines
Add regression test
Revise intersection optimizations to include string, number and symbol
Report compiler options errors as well as part of configFileDiag event Fixes #25741
findAllReferences/rename: Search in all open projects (#25648)
Ensure fixSpelling and importFixes still trigger on "Did you mean the instance/static member ..." (#25847)
Merge pull request #25680 from a-tarasyuk/bug/25667-getmodifiedtime-has-wrong-return-type
Merge pull request #25817 from Microsoft/fixGenericRestTypes
Reflect getCurrentProgram as Program|undefined in the ResolutionHostCache If there were any exceptions, the getCurrentProgram might return undefined so this is defensive check for program Fixes #25765
Don't report quickInfo inside a comment in a PropertyAccessExpression (#25813)
use missingFileModifiedTime instead check on undefined
Remove bad import completions tests (#25816)
`errorCodes` in `CodeFixRequestArgs` is non-optional (#25815)
Check module.exports (#25732)
improve completions keyword for function like body (#25824)
improve enum rechability check
Merge branch 'master' of https://github.com/Microsoft/TypeScript into bug/25667-getmodifiedtime-has-wrong-return-type
Update tests baselines
LEGO: Merge pull request 25818
LEGO: check in for master to temporary branch.
Accept new baselines
Add regression test
Properly handle all generic kinds of types in rest positions
Watch subdirectories in project root instead of watching project root so as to avoid watching excluded directories that are not part of config file Fixes #25629 and Microsoft/vscode#51139
Merge pull request #25809 from ajafff/verify-strict-options
Merge pull request #25806 from ajafff/expose-stripInternal
add correct test
correctly detect if strictNullChecks is enabled
API: expose CompilerOptions.stripInternal
Fix parsing of parenthesized JSDoc parameters (#25799)
Handle completions at name of namespace declaration (#25661)
Merge pull request #25752 from Microsoft/objectsAgainstArrays
LEGO: Merge pull request 25780
LEGO: check in for master to temporary branch.
add grammar check for labeled declaration (#25317)
Consistently use ScriptInfo for converting positions to Locations (#25623)
Don't bother trying to get the name of a default export (#25773)
Fix comment emit for namespaces & enums.
Do not emit comments if container had a comment suppression.
Retain synthetic comments on classes and their properties.
Reduce duplication of addSyntheticComment.
Fix comments for import and export declarations.
Retain synthetic comments on exported variables.
Accepted baselines.
Elaborate on the first non-array type when object literals are compared against 'T | T[]'.
Accepted baselines.
Added test.
Add test that getEditsForFileRename respects UserPreferences (#25745)
Fix formatting at trailing comma (#25706)
Fix invalid cast: JSDocSignature is not a SignatureDeclaration (#25734)
Fix type of TypeParameterDeclaration#parent (#25737)
Avoid using old node in import fix to use namespace import (#25729)
Merge pull request #25735 from j-oliveras/Fix_25657
Merge pull request #25733 from mattmccutchen/issue-25683
Fixes 25657. Jakefile: make concatenateFiles third parameter optional.
Check for optional type parameters before issuing a "wrong number of type arguments" error on a function call.
Revert the revert of explicitly typed special assignments (#25727)
Update user baselines (#25718)
Merge pull request #25612 from Microsoft/updateVersionTo3.1
Merge pull request #25699 from Microsoft/revert-explicitly-typed-special-assignments
Merge pull request #25698 from Microsoft/navigationBarUnrelatedGrandchildren
Revert "Explicitly typed special assignments are context sensitive (#25619)"
navigationBar: Don't merge unrelated grandchildren
Revert "Explicitly typed prototype assignments are context sensitive (#25688)"
Merge pull request #25565 from Microsoft/popFirst
Simplify rules for `isControlFlowEndingStatement` (#25693)
Merge pull request #25656 from j-oliveras/Fix_25653
Explicitly typed prototype assignments are context sensitive (#25688)
add use strict and simple parameter check
Change getModifiedTime type
Merge pull request #25507 from ajafff/leftmost-expr-tagged-template
Fix Buffer.from uses to handle node 5.4.1 bug (#25659)
Merge pull request #25649 from Microsoft/jsonFilesOnCommandLine
Change jsDocTagNames to lower case.
Support resolveJsonModule option when files contain the json file Fixes #25636
Merge pull request #25627 from Microsoft/preserveOutputInConfig
getContainingList: Handle TypeAliasDeclaration (#25614)
fixUnreachableCode: Don't delete whole block when non-first line is unreachable (#25625)
indentMultilineCommentOrJsxText: Fix bug when 'parts' is empty (#25645)
Fix incorrect handling of preserveWatchOutput flag is in config file Fixes #25620
Don't report unused diagnostics when the unused node has a parse error (#25598)
Explicitly typed special assignments are context sensitive (#25619)
Stricter test that JSDoc @type tag matches function signature (#25615)
Optimize the deletion and calculation of bigger set of semantic diagnostics to be calculated
Merge pull request #25610 from RyanCavanaugh/buildOnWatchStartup
Merge pull request #25608 from Microsoft/genericRestArityCheck
 mapTextChangesToCodeEditsUsingScriptInfo: Handle tsconfig.json text change (#25586)
Update issue template
Accept baselines
Update version
fixUnusedIdentifier: Support deleting @template tag (#25597)
Merge branch 'master' into genericRestArityCheck
Get return type from `@type` tag (#25580)
When running with -w, do an initial compilation
Accept new baselines
Add tests
Additional arity check following instantiation of generic rest parameter
Issue 19220 function parameter arity (#24031)
Use exported modules through declaration emit to invalidate the semantic diagnostics Fixes #24986
Ensure TypeChecker#getTypeAtLocation returns a defined result (#25583)
Expose visible to outside import declarations and dynamic imports through emitDts output
Merge pull request #25561 from ajafff/multiple-prologue-directives
Excess property understands conditional types (#25584)
Improve isPossiblyTypeArgumentPosition (#25043)
Merge pull request #25576 from typescript-bot/user-update-20180603
When `import("foo")` has module resolution error, error span should be "foo" (#25569)
Merge branch 'master' of github.com:Microsoft/TypeScript into multiple-prologue-directives
accept baseline
Accept new baselines
rename function
Improve test for 'symbol.exports' (#25523)
Merge branch 'master' into typeof-in-switch
In services, when overload resolution fails, create a union signature (2) (#25100)
Update user baselines
Change message for import *-ing an export= based on module type. Update tests/baselines
Improve comments in narrowBySwitchOnTypeOf
Add release-3.0 to supported branches
Update authors for release 3.0
Merge branch 'master' of https://github.com/Microsoft/TypeScript into bug/24542-bad-error-message-for-import-ing-an-export
Accepted baselines.
Added test.
Accepted baselines.
Place 'pop' first in 'Array'.
Improve isNewFile assert (#25419)
Reduce non-null assertions in getPropertySymbolsFromContextualType (#24675)
JSX closing tag completion: Include '>' if not already present (#25551)
Add test for reporting errors from deep import. Test case for #24986
Merge pull request #25566 from Microsoft/nonCommonJsResolveJsonIsError
Merge pull request #25464 from Microsoft/cacheRecursiveDirectoryWatchers
Use getEmitModuleKind to check module generation kind
Merge branch 'master' into cacheRecursiveDirectoryWatchers
Report errors for module generation other than "commonjs" with --resolveJsonModule Fixes #25517
Merge pull request #25556 from Microsoft/buildScriptUpdates
getJsxClosingTagAtPosition: Return a result if parent has same name and is unclosed (#25557)
Merge pull request #25520 from Microsoft/internalizeNonexistentHelpers
handle multiple prologue directives
Build script updates
Increase span of unreachable code error (#25388)
Merge pull request #25524 from RyanCavanaugh/useGetEmitDeclarations
Support completions for unique symbol exported from module (#25537)
Merge pull request #25535 from Microsoft/fixAsserts
Fix bogus use before def in jsdoc (#25532)
Fix crash in JS when checking destructuring shorthand assignment (#25529)
Pass sourceFile to getChildren in getTokenAtPositionWorker (#25505) (#25538)
getEditsForFileRename: Handle all projects and source-mapped files (#25522)
Merge pull request #25531 from RyanCavanaugh/fix25527
Compare normalized fileNames
Check for a module sysmbol existing before calling getReferencedSymbolsForModule
Merge pull request #25521 from Microsoft/dontWatchAmbientModules
Handle intersection types when looking up base types for visibility (#25418)
Don't crash when an implicit rootDir constraint is violated under composite:true
Merge pull request #25500 from mattmccutchen/issue-25498
Use getEmitDeclarations instead of .declarations
Do not watch modules that get resolved by ambient modules
Make getSuggestion APIs internal.
Merge pull request #25329 from uniqueiniquity/jsxFolding
Pass sourceFile as appropriate
Merge pull request #25422 from Microsoft/actualSignatureHelpTriggers
getLeftmostExpression: handle TaggedTemplateExpression
Fix crash in elaborateElementwise when the target property is known but it doesn't have a declaration (e.g., in a mapped type).
Fix lineText in references command (#25494)
Rework entity name decorator metadata fallback emit to not throw at runtime (#25421)
Introduce truncation into node builder and symbol display part writer (#24258)
Strip literal freshness from type queries (#25471)
Merge pull request #25477 from Microsoft/youProbablyMeantThisDeclaration
Update 'package-lock.json'.
Semicolon.
getJSDocReturnType gets return type from `@type` tags (#25486)
Index signatures contribute properties to unions (#25307)
Merge pull request #25341 from ajafff/factory-export-default
Merge remote-tracking branch 'origin/master' into youProbablyMeantThisDeclaration
make getEffectiveTypeParameterDeclarations public (#25472)
Update user baselines (#25482)
Merge branch 'master' of https://github.com/Microsoft/TypeScript into bug/24542-bad-error-message-for-import-ing-an-export
Merge branch 'master' into factory-export-default
Accepted baselines.
getSuggestionForNonexistentModule -> getSuggestionForNonexistentExport
Switch from 'Error' to 'Message' on related span messages.
Accepted baselines
Add a related span for suggested declaration locations in error messages.
Merge pull request #25253 from micnic/master
Caches the recursive directory watchers so we do not have to traverse and recreate more children watches Helps with #25018
Update LKG (#25470)
Rework symbol visibility checking to allow for multiple potential containers (#24971)
Actually cache intermediate results in getBaseConstraint (#25417)
navigateTo: Collect results from all referenced projects. (#25283)
Optimize sourcemap application more (#25425)
No merge for redirected source files in initializeTypeChecker (#25463)
Merge pull request #25439 from ajafff/factory-arrow-comma
Merge pull request #25423 from Microsoft/defaultExportName
Merge pull request #25457 from Microsoft/resolveJsonModuleInterop
Merge pull request #25313 from github-john-doe/typo
Merge pull request #25433 from a-tarasyuk/bug/24839-give-a-better-error-message-for-using-import-as-a-type
Do not report esModuleInterop needed error for json imports Fixes #25400
Support prototype assignment with a function declaration (#25300)
Handle getting name of default export that's an alias
Change message for import *-ing an export=. Update baselines
Update user baselines (#25436)
accept baselines
createArrowFunction: parenthesize comma sequence
Update baseline
Merge branch 'master' of github.com:Microsoft/TypeScript into factory-export-default
Add a suggestion - Did you mean 'typeof import()?. Add tests to handle undated error message
Add missing jsdoc tag names
Put error spans deep on nested object literals (#25140)
Merge pull request #25342 from ajafff/factory-leftmost-expression
Only provide signature help contextually on a character trigger.
Don't add completions from a discriminated union type when the discriminant doesn't match (#24770)
Added tests for syntactic context.
Remove 'name' property which was invalid.
Merge pull request #25408 from Microsoft/contextualTupleTypes
Support code-fix-all for importFixes (#25137)
Merge pull request #25363 from ajafff/factory-deprecated-signature
Merge pull request #25397 from a-tarasyuk/bug/25356-instance-property-is-not-a-block-scoped-variable
Merge pull request #25416 from Microsoft/tscDiagnostics
Restore `NewFileContent` type (#25406)
Merge pull request #25414 from Microsoft/classMembersInSuperClassFromUnknownNamespace
Fix typo to fix logging when built with --watch --diagnostics
Account for comments.
Amend test for comments, other string types.
parser: Fix testing for missing list (#25411)
Fix the completion when base type is unknown type from unknown namespace Fixes #25387
Renamed test.
Check if module reference requires type reference before path reference (#25385)
Canonicalize path before calling `startsWith` (#25364)
Merge pull request #25336 from Microsoft/fixResolveTypeMembers
Remove outdated comment
Update user baselines (#25399)
Update tests baseline. Change tests
Add new error message - Property {0} is used before its initialization.
Merge pull request #24915 from Microsoft/triggerSignatureHelpIArdlyKnowSignatureHelp
Fix fourslash tests
Accept new baselines
Add tests
More thoroughly test navigateTo (#25239)
Merge pull request #25377 from Microsoft/addressWesleyFeedback20180702
Change import type determination to not use a RE on the symbol name (#25381)
goToDefinition: Don't go to jsx constructor signature (#25382)
Merge pull request #25372 from Microsoft/fixAddMissingMember_all_dedup
Lints.
Use `addRelatedInfo`.
Merge branch 'master' into fixAddMissingMember_all_dedup
Accepted baselines and updated fourslash test.
Account for trigger reasons, as implemented by Roslyn.
Merge pull request #25368 from RyanCavanaugh/fix25355
Merge remote-tracking branch 'origin/master' into triggerSignatureHelpIArdlyKnowSignatureHelp
Merge pull request #25374 from Microsoft/SetMapConstructor
Merge pull request #25335 from Microsoft/codeFixAddMissingEnumMember_all
Merge pull request #25370 from RyanCavanaugh/fix25337
Handle JSON extension correctly
Merge pull request #25348 from ajafff/factory-createexpressionstatement
Accept new baselines
Infer contextual tuple types
Update API (#24966)
Remove shadowed variable
Merge pull request #25249 from Microsoft/openSameFileWithDifferentText
Merge pull request #25359 from Microsoft/useBeforeDeclareRelatedSpans
Add --out
rename: Re-use code for isDefinedInLibraryFile (#25367)
Merge branch 'master' into openSameFileWithDifferentText
Accepted baselines.
Addressed code review feedback.
Consolidate overloads in constructors for Map, Set, WeakMap, and WeakSet Fixes https://github.com/Microsoft/TypeScript/issues/23551 Fixes https://github.com/Microsoft/TypeScript/issues/25362
Baseline update
Give related error on declaration location for used-before-declared errors.
fixAddMissingMember: Improve deduplication in code-fix-all
moduleSpecifiers: specifier from "rootDirs" should be treated as relative (#25369)
.json also doesn't produce outputs
Handle multiple output .d.ts files changedness correctly
Adds related spans and error grouping for duplicate identifier errors (#25328)
Remove deprecated escapeidentifier and unescapeidentifier functions (#25333)
.d.ts files don't have outputs
Merge pull request #25361 from typescript-bot/user-update-20180601
remove unnecessary qualifier
add tests
add tests
factory: deprecate signatures using JSDoc
Update user baselines
Update README.md
accept baselines
expose createExpressionStatement and updateExpressionStatement
revert unnecessary change
getLeftmostExpression: handle AsExpression and NonNullExpression
createExportAssignment: parenthesize nested class or function expression
Accept new baselines
Add regression test
Use helper functions in a few more places (#21308)
Accept new baselines
Guard against recursion in resolveAnonymousTypeMembers
ChangeTracker: Combine deleteDeclaration, deleteNode, and deleteNodeInList (#25276)
Update API (#24966)
Combine code-fix-all for missing class member and missing enum member
Support LibraryManagedAttributes<TComponent, TAttributes> JSX namespace type (#24422)
Remove deprecated SymbolDisplayBuilder API (#25331)
Add test
Only include attribute span if one or more
Add outlining regions for jsxelements and jsxattributes
Simplify getRangeOfEnclosingComment (#25168)
JsxTagNameExpression can only be Identifier | ThisExpression, not any PrimaryExpression (#21555)
Split isConst into isVarConst and isEnumConst (#25312)
Merge pull request #25311 from Microsoft/betterAlwaysTrueFalseErrors
Merge pull request #25325 from uniqueiniquity/stopFoldingRegionDelimiters
Make regexp a constant
Add test
Stop including region delimiter comments in comment fold regions
Fix module specifier case handling for declaration emit (#25110)
Merge pull request #25320 from typescript-bot/user-update-20180505
Merge pull request #25182 from Kingwl/fix-missing-enum-member
Update user baselines
Merge pull request #25315 from Microsoft/strictifyTest
Accepted baselines.
Actually make the test file use '--strict'.
Merge pull request #25287 from Microsoft/skipToNonNullTargets
Assignement -> Assignment
Asignment -> Assignment
arugments -> arguments
arbitary -> arbitrary
abount -> about
anohter -> another
affectected -> affected
additinal -> additional
accross -> across
actuallty -> actually
Accepted baselines.
Use a more direct error.
Accepted baselines.
Don't elaborate on primitives at all.
Added test case.
Introduce more caching and deferral into jsx checking (#25302)
Add codes and categories to related information, officially (#25304)
Merge pull request #25294 from typescript-bot/user-update-20180504
Add bailout case to sourcemap searching code (#25212)
Remove dead code testing result of `resolveProjectReferencePath` (#25284)
Destructuring declaration prefers type annotation type (#25282)
Update user baselines
Accepted baselines.
Strip `null` and `undefined` from targets when relating from certain atomic types.
Merge pull request #25251 from Microsoft/betterAlwaysTrueFalseErrors
do not handle enum type member
Accepted baselines.
indicates -> indicate
Add test for goto-definition with project references (#24867)
Merge pull request #25281 from RyanCavanaugh/fixMapFilename
Remove redundant checks in getNameOfDeclaration (#25244)
Don't look for a file called 2.map
findPrecedingToken: default includeJsDocComment to true (#25262)
getTouchingToken: default includeJsDocComment to true (#25258)
When renaming at a tsx opening/closing tag, just rename the current element (#25273)
fixUnusedIdentifier: Remove arguments corresponding to unused parameters (#25011)
add Initializer if enum value is another enum
Point VSTS build badge to results of the latest build (#25248)
Only add completion for a symbol if it is accessible (#25096)
getEditsForFileRename: Test both before and after the rename (#25074)
getTokenAtPosition: default includeJsDocComment to true (#25015)
Use different cache for the ScriptInfoVersion
Merge pull request #25250 from Microsoft/gulpTypeScriptReporter
Update error code expectations.
semanitc -> semantic
Report errors in corrrect process for gulp-typescript-oop
Merge pull request #25231 from timocov/fix25225
Accepted baselines.
Give a better message up-front for incompatible equality errors.
Stop not emitting mappings for function and class names (#25210)
Retain the version information of script infos when they are deleted This helps in having to not restart the versioning, which could potentially have same version but different contents and project could confuse with it
Merge pull request #25190 from mprobst/fix-generic-type-emit
Merge pull request #25241 from Microsoft/fixFailedTestsUnlink
Fix control flow loop in yield expression (#25228)
Fix duplicate errors in js special assignments (#24508)
Add exists check before unlink
Fix lint race when not running tests in parallel (#25235)
Track name scope aloneside lexical scope
Add name to jsDocParsing link tag test (#25229)
Remove @internal from Program::isSourceFileDefaultLibrary
Merge pull request #25202 from RyanCavanaugh/addChakraAPIs
Update user baselines (#25226)
Set current scope for classes.
use better scope
accept baseline
Merge branch 'master' into fix-missing-enum-member
Merge pull request #24897 from Microsoft/restTuples
add quick fix for add missing enum member
Revert package.json change
Merge pull request #25211 from Microsoft/gulpBrowserify
Merge pull request #25004 from Microsoft/trackFailedTests
Merge pull request #25146 from Microsoft/gulpWatch
Clean up browserify task, remove unused 'debugMode.js' script
Treat link tag as comment (#25206)
Merge pull request #25203 from Microsoft/gulpUpToDate
Ensure upToDate also handles referenced project outputs
Don't try to write --pretty results to unsupported consoles in --build
Pipe through Chakra APIs for tsc.exe --build
Accept new baselines
Add tests
Contextual typing by tuple rest elements
Fix removal of default import (#25200)
Improve verify.renameLocations (#25192)
Merge pull request #25194 from Vimal-Raghubir/master
Support doc comment template at function expression (#25050)
Fix bad merge
Simplify addJSDocComment (#25196)
parseJSDocCommentWorker: Don't need `result` (#25197)
Fix test failure (#25199)
goToDefinition: Don't add duplicate definitions for PropertyAssignment and ArrowFunction at `m: () => {}` (#24995)
Merge branch 'master' into trackFailedTests
Don't crash on property access with type (#25170)
Fix completions trigger character on JSX opening tag (#25167)
Make GetEditsForFileRenameRequestArgs not extend FileRequestArgs (#25052)
Add refactor to convert named to default export and back (#24878)
Fix issue regarding WeakMap constructor
LEGO: Merge pull request 25191
LEGO: check in for master to temporary branch.
Remove unused function (#25138)
Fix decorator design:types emit for type variables.
Accept new baselines
Update tests
Complete support for rest elements in tuples
LEGO: Merge pull request 25165
LEGO: check in for master to temporary branch.
Multifaceted approach to performantly enabling fileExists outside of the synchronize step in the emit host (#25107)
Cache specifier resolutions for speed when emitting many types from the same place (#25112)
Fix --strictNullChecks error with getDefaultProjectForFile (#25060)
getEditsForFileRename: Don't update import with non-relative path if the imported file didn't move (#25159)
Don't provide a path completion if a directory name was already typed (#25055)
Accept new baselines
Fix issue
LEGO: Merge pull request 25156
Merge branch 'master' into restTuples
LEGO: check in for master to temporary branch.
Adds support for gulp.watch
Merge pull request #25144 from Microsoft/gulpfileFixes
Fix runtests-parallel, tsserverlibrary, up-to-date checks
Accept new baselines
Accept new baselines
Accept new baselines
Update tests
Update destructuring to support optional and rest elements in tuples
Parse nested prop and param tags the same way (#25139)
Merge pull request #25136 from Microsoft/useGetObjectFlags
Use `getObjectFlags` as suggested in previous PR.
Merge pull request #25115 from Microsoft/matchingTypeRefs
provide spelling suggestion for indexed access (#22225)
Accepted baselines.
Expand better error messages to anonymous object types with identical type aliases.
Add 'withContext' helper in createNodeBuilder (#24994)
getEditsForFileRename: For directory rename, preserve casing of suffix (#24975)
check return tag in getTypePredicateOfSignature (#25130)
Convert getInsertNodeAfterOptionsWorker to switch statement (#25128)
Merge pull request #25066 from Microsoft/gulpProjectRefs
Merge branch 'master' into gulpProjectRefs
Fix RWC baseline paths
Don't recommend to install '@types/foo' if that already exists (#24815)
Don't treat a declaration as a type argument position (#25046)
Merge pull request #25122 from mprobst/fix-case-insensitive
Fix crash when binding jsdoc-style inner namepaths (#25106)
Error on 'const' in class expression (#25125)
Mark some Type[] and Signature[] as ReadonlyArray (#25099)
Merge pull request #25124 from nrcoley/update-mailmap
Fix the build on case-sensitive file systems.
LEGO: Merge pull request 25120
LEGO: check in for master to temporary branch.
Accepted baselines.
Try to report errors on types who have matching type references.
Accepted baselines.
Added test.
Accept new LKG
Cleanup, remove some unneeded dependencies, make it easier to add gulp.watch support later
In JS, always check the extends tag of a class before its heritage clause (#25111)
Merge pull request #25102 from Microsoft/declarationEmitWithNoEmitAndWatch
Remove contributor info
navigationBar: Avoid double recursion on special property assignment (#25077)
Mark the declarations visible correctly when emit is disabled but asked to emit declarations for watch mode Fixes #25068
Add CompletionInfo command to protocol (#25080)
Update user baselines (#25091)
Fix bug: Still implement a method even if the return type is defined in another file (#24978)
Merge pull request #25075 from Dangoo/feat/add_intl-number-format_format-to-parts_types
Fix test messages to mention esnext.intl
refactorConvertToGetAccessAndSetAccess: Don't trigger on leading trivia (#25054)
fixUnusedIdentifier: Don't needlessly exclude jsdoc (#25014)
Add missing references in clparser and libs.json
Add Intl.NumberFormat.formatToParts types
Simplify getJSDocCommentAndTags (#24997)
Merge pull request #22226 from markusjohnsson/issue_22180
Update user baselines (#25070)
Accept baseline
Address lint warnings
Merge branch 'master' of github.com:Microsoft/TypeScript
Accept API baselines
Fix fs.copyFileSync not supported in Node 6
Disable gulp.watch for now
Remove excess exports from exec.js
Merge branch 'master' into gulpProjectRefs
Update gulpfile to support project references
Merge pull request #25049 from RyanCavanaugh/tsbuild-fixes
Add a testcase
Merge pull request #25048 from RyanCavanaugh/cachePathsInSourceMaps
Adds failed test tracking
Do fewer calls to getRelativePathToDirectoryOrUrl when writing sourcemaps
Fixes downstream prepend projects not being built correctly on upstream changes
Update user baselines (#24989)
Merge pull request #24244 from Andarist/redefining-helpers
Array literals contextually typed by tuple types with rest elements
Infer union types for rest elements in tuples
Merge branch 'master' into restTuples
Accept new baselines
Merge branch 'master' into restTuples
Fix jake diff (#25012)
Dont use unreliable inodes for checking file identity (#25008)
Fix protocol: Field is 'body', not 'edits' (#25005)
Merge pull request #24868 from Microsoft/parallelAsyncTests
Merge branch 'master' into parallelAsyncTests
Fix bug in importTracker: default and namespace imports are not exclusive (#24965)
Add default task
Remove unused thing
Parsing and rudimentary checking of tuples with rest elements
Merge pull request #24938 from RyanCavanaugh/esau-squash
Accept baseline
Introduce related spans into tsserver protocol (#24548)
PR fixups
Merge branch 'master' into esau-squash
Merge pull request #24982 from Microsoft/sourceMapBase
Fix sources array case sensitivity
Fix off-by-one error with sourcemaps
Update user baselines (#24952)
getEditsForFileRename: Don't update unrelated import (#24961)
moveToNewFile: Reuse code from importFixes for inserting import (#24957)
No dupe jsdoc for assignment inside an initializer (#24973)
Merge branch 'master' into esau-squash
Js/check type tags (#24967)
Merge pull request #24959 from Microsoft/moduleResolutionWithoutExtensionWithJson
Merge pull request #24933 from Microsoft/failedLookupWatchesWithClassicResolver
Accept new baselines
Add tests
Don't add diagnostic on unused import starting with underscore (#24958)
Handle package.json, jsconfig.json, tsconfig.json in the getDiagnostics of fourslash tests
Merge branch 'master' into esau-squash
In JS, fix crash with in a file with conflicting ES2015/commonjs exports (#24960)
Turn on SLC
Handle combinations of rootdir and outdir when calculating paths (#24941)
Handle the json extension when ResolvedModule result is json file Fixes #24932
Avoid huge inferred type (#24953)
LEGO: Merge pull request 24955
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 24950
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 24944
LEGO: check in for master to temporary branch.
Stop generating sectional sourcemaps (#24917)
Ryan feels shame as a major action
Properly widen type element types in inferred rest parameter types
Use LKG for g-d
Use LKG for scripts
Fix file casing
Merge branch 'master' into esau-squash
Updates for nightly publish
Fix insiders publish
LEGO: Merge pull request 24936
LEGO: check in for master to temporary branch.
Add publishing tasks
Remove extra dependency + build smaller tsc.js into lkg
Do not watch the parent folders recursively if not needed. This avoids watching folders like parent folder of the project root just to watch files created in the folder Fixes Microsoft/vscode#51139
Test for amd resolution setting the recursive directory watcher in the parents of root folder
LKG update
Move internal comments around all day
Fix input file path
Accept baselines
Don't bail wrongly in tsc -b -w
Remove -v from compile
Minor fixes
Merge pull request #24911 from Microsoft/fixAPISampleTests
Update baselines
Merge branch 'master' into fixAPISampleTests
Proper dependencies for lkg
Add fs-extra
Move internal flag around
Return exit codes from tsbuild
Merge pull request #24920 from Microsoft/vfsDiff
add vfs snapshot capability for future tests
Merge branch 'master' into fixAPISampleTests
PR Feedback
Add js to gitignore
Move Comparer around
Issue a better error
Add internal where needed
Don't believe prepend projects are UTUTD
Fix buildProtocol to handle lib+noresolve
Add produceLKG script
Rewrite jakefile
Support `@this` tags (#24927)
LEGO: Merge pull request 24926
LEGO: check in for master to temporary branch.
Add vfs diff, update tsbuild test
Accepted baselines.
Implemented support for trigger characters in signature help.
API sample is building again
Merge remote-tracking branch 'origin/master' into fixAPISampleTests
Use symlinks when looking for module names for declaration emit (#24874)
Fix API Sample tests
Accept new baselines
Better algorithm for combined co- and contra-variant inferences.
Update user baselines (#24908)
Fix path to core to fix configure prerelease (#24906)
Merge pull request #23989 from a-tarasyuk/bug/23180-generate-source-maps-with-relative-path
Better handling of circular JS containers in getTypeOfVariableOrParameterOrProperty (#24732)
LEGO: Merge pull request 24905
LEGO: check in for master to temporary branch.
Use / in paths in the auto-generated files' header (#24883)
mapRoot is not filePath
Merge branch 'master' of https://github.com/Microsoft/TypeScript into bug/23180-generate-source-maps-with-relative-path
Accept baseline changes in APIs
Merge branch 'master' into restTuples
LEGO: Merge pull request 24896
LEGO: check in for master to temporary branch.
Remove generated files (#24892)
Merge pull request #24890 from Microsoft/reuseProjectReferences
Reuse resolvedProjectReferences
Use correct search order for position location (#24886)
Collapse core/compiler/parser into parser
Set use flag (#24881)
Merge pull request #24870 from Microsoft/Fix24826
Baseline LKG update
Merge remote-tracking branch 'origin/master' into Fix24826
Merge pull request #24850 from RyanCavanaugh/projzilla
Remove error baseline
LEGO: Merge pull request 24877
LEGO: check in for master to temporary branch.
Merge and baseline accept
Add Variable to HasExports (#24871)
Support async tests in runtests-parallel
Accept baseline API changes
Accept new baselines
Flatten spread expressions of tuple types
Merge branch 'master' into projzilla
Merge pull request #24069 from Microsoft/amcasey-gulp-jake
Accept baselines
Merge pull request #24645 from Kingwl/this-type-accessibility
Merge with master
Merge pull request #24816 from Microsoft/updateGraphBeforeErrorChecking
Simplify tryDeleteDeclaration (#24808)
Merge pull request #23423 from Kingwl/add-braces
Update API
Fix #24826: Add mapping for ES2018 target to library
Fix regexp operand
Fix for linux
goToDefinition: Don't add duplicate definitions for VariableDeclaration and ArrowFunction at `f = () => {}` (#24863)
Merge branch 'master' into projzilla
Undo debug
addClassStaticThisReferences: Don't cross class boundary (#24860)
Debugging linux failure
Merge pull request #24820 from amcasey/RenameNormalize
LEGO: Merge pull request 24862
LEGO: check in for master to temporary branch.
Fix bug: In findAllReferences, don't crash on static method missing body (#24814)
Fix lint errors
Record parameter names in inferred tuple types
Accept new baselines
Expand rest parameter with tuple types when emitting signatures
LEGO: Merge pull request 24854
LEGO: check in for master to temporary branch.
Tests passing and lib loading
Almost working?
Give up again
Fix unittests config
Fix runtests async
Should not have existed
tsserverlibrary
The baselines are back in town
Jakefile rewrite WIP
Revert the jakefile
Update test to reflect new behavior
Attempt to rewrite the jakefile and fail
Merge branch 'master' of github.com:Microsoft/TypeScript
Merge branch 'master' of github.com:Microsoft/TypeScript
Projzilla phase 1
Accept new baselines
Optional elements in tuple types + empty tuple types + other fixes.
Merge pull request #24465 from RyanCavanaugh/tsbuild
Last round PR comments
Use native map
Normalize paths in GetEditsForFileRename
PR fixups
Updates the graph before checking if file is present in project for error checking When file is moved using getEditsForFileRename, the watch notification could be delayed This could result in project updates in background that could be delayed and result in file not present in the project after its synchronised Fixes #24547
fixStrictClassInitialization: Support array initializer (#24810)
Merge pull request #24811 from Microsoft/computedPropertyNameWithDefaultImport
fixUnusedIdentifier: Remove unused writes (#24805)
LEGO: Merge pull request 24813
LEGO: check in for master to temporary branch.
Always resolve the first identifier of computed property name to get the symbol and track it Fixes #24798
always visit them all (#24802)
move static flag predicate before get container
Actually forward sourcemaps to gulp-typescript doesnt disable sourcemaps (#24766)
fixUnusedIdentifier: Delete trailing comma in array binding pattern (#24800)
Merge branch 'master' into add-braces
Merge pull request #24712 from styfle/build-size
Merge pull request #24760 from krk/codefix-asterisk
Inlined asterisk token creation.
LEGO: Merge pull request 24785
LEGO: check in for master to temporary branch.
Modernize syntax by using arrow funcs
Add getDirSize checks to Jakefile LKG
Change getDirSize to default export
Rename get-dir-size to getDirSize
Rename get-dir-size.js to getDirSize.js
Remove unused promisify
build: add check for lib size
tryGetModuleNameAsNodeModule: Ignore file extension (#24774)
LEGO: Merge pull request 24775
LEGO: check in for master to temporary branch.
Merge pull request #24768 from Microsoft/fix24722
fixStrictClassInitialization: Don't provide a default for `string` or `number` (#24767)
Add completions from literal contextual types (#24674)
Merge pull request #24769 from Microsoft/ignoreWindowsUsersFolder
Support 'tsconfig.json' when converting TextChanges to CodeEdits (#24667)
Fix bug: In newFileChanges, setParentNodes in new source file (#24765)
Merge pull request #24756 from Microsoft/updateTPN-2
Do not watch folders like "c:/users/username", "c:/users/username/folderAtRoot" Fixes Microsoft/vscode#51139
Update header
Fix prologue order in async function
Add 'nameSpan' property to NavigationTree (#24698)
Accept new baselines
Allow generic rest parameters and infer tuples when possible
Merge pull request #24761 from ajafff/avoid-useless-closures
moveToNewFile: Infer quote preference (#24652)
Don't consider `x.` a new identifier location just because x has a number index signature (#24699)
checker: avoid useless closures
addMethodDeclaration codefix creates a generator function when target is child of a YieldExpression, resolves #24728
Handle import types in serializeType (#24701)
Update Third Party Notice text
LEGO: Merge pull request 24753
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 24740
LEGO: check in for master to temporary branch.
Improved watch mode
LEGO: Merge pull request 24734
LEGO: check in for master to temporary branch.
Improve handling of container projects and issue relative filename messages
Update messages
Merge pull request #24672 from bakkot/binding-comma
Improve valueDeclaration for js module merges (#24707)
Merge pull request #24677 from Microsoft/checkEvaluatorSyntax
Fix circularity error when extending class in same JSContainer (#24710)
LEGO: Merge pull request 24727
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 24720
LEGO: check in for master to temporary branch.
Lint
Include all lib files in tsbuild harness
Move proj ref logic to the right place
Include filename when reporting not found
Merge branch 'master' into tsbuild
Simplify parseJSDocIdentifierName (#24660)
Lint
Tidy
Don't crash on no args
Complicate the paths of the project for better sourcemap testing
Accept baselines for sourcemap sections
Add outfile-concat project refs test
Reorganize tsbuild unit test file
Use more nodelike paths for import types when possible (#24610)
Merge remote-tracking branch 'weswigham/sourcemap-concatenation-station' into tsbuild
If parsing a function type fails, parseTypeReference() to ensure something is returned (#24567)
LEGO: Merge pull request 24692
LEGO: check in for master to temporary branch.
add commnet
disallow static field access
LEGO: Merge pull request 24682
LEGO: check in for master to temporary branch.
Merge pull request #24669 from Microsoft/updateDom
Fails test if evaluator source text has errors
Merge remote-tracking branch 'origin/master' into updateDom
Merge pull request #24576 from ajafff/fix-syntax-error
Merge pull request #23893 from Microsoft/libReference
LEGO: Merge pull request 24673
LEGO: check in for master to temporary branch.
Allow trailing commas after-rest elements in destructuring
Update baseline tests
Merge branch 'master' into libReference
Visit the children of an import type/require call/dynamic import when looking for those (#24663)
Update baselines
Resolve aliases before using getTypereferenceType (#24594)
Always include Jsdoc comment in getTouchingPropertyName (#23379)
Update Third party notice doc
goToDefinition: Put variable definition before signature definition (#24649)
Port generated lib files
Change file name
Update LKG
Remove debugger statement
Use redefining helper pattern for better tree-shakeability
Merge pull request #24664 from Microsoft/builderAPIBreak
Fix property assignment on aliases (#24659)
Add 'parseOptionalJsdoc' helper (#24650)
Fix the issue with createSemanticDiagnosticsBuilderProgram, createEmitAndSemanticDiagnosticsBuilderProgram and createAbstractBuilder not assignable to CreateProgram<T> Fixes #24625
Tests to acknowledge the public watch api
Template tag allows specification of constraints (#24600)
Add 'unknown' to type keywords (#24606)
moveToNewFile: Update namespace imports (#24612)
Merge branch 'fixMissingScriptInfo' into tsbuild
Merge pull request #24637 from Microsoft/fixIndexedAccessSimplification
Merge pull request #24615 from Microsoft/jsonSourceMaps
moveToNewFile: Ignore reference to global (#24651)
Fix merge lexical environment to *always* respect prologue statements (#24602)
Add autoCloseTag language service (#24543)
Merge pull request #24596 from uniqueiniquity/handleMissingRegistryEntries
Merge pull request #24641 from kitsonk/issue-24638-host-possibly-undefined
Remove redundant null assertion
Merge pull request #24608 from uniqueiniquity/latestTypesRegistry
LEGO: Merge pull request 24648
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 24646
LEGO: check in for master to temporary branch.
allow access protected member in this parameter context
Treat host as possibly undefined for base64encode/base64decode
Accept new baselines
Add regression test
Simplify nested indexed access types
Merge pull request #24627 from Microsoft/typeofFunction
Accept new baselines
Add tests
Improve typeof x === "function" narrowing for non-unions
Merge pull request #24616 from dsherret/fix-createProgram
LEGO: Merge pull request 24618
LEGO: check in for master to temporary branch.
Fix createProgram js docs.
Disable source maps and declaration emit for the json module Fixes #24546
Fix bug when name resolution fails in a @typedef: Don't set `lastLocation` (#24585)
Make tag readonly
Always get latest tag of types-registry
Remove second get call
Replace has with get and check undefined
LEGO: Merge pull request 24601
LEGO: check in for master to temporary branch.
Add test
Visit super arguments even when no signature exists (#24591)
Handle installed package missing from registry
Store + use the resolved path of sourceFiles in proj. ref. scenarios
Include export specifiers in the list of syntactic defaults (#24549)
fix syntax error in unit test
Reduce size of span for unused declaration (revert #22388) (#24566)
Support import completion for merged declaration exports (#24539)
Scaffold watch mode
LEGO: Merge pull request 24571
LEGO: check in for master to temporary branch.
getEditsForFileRename: Support directory rename (#24305)
remove redundant assertions in fourslash tests (#24561)
Remove deprecated internal method (#24540)
Invalidation + separated downstream builds
implementations: Use declaration name for the span (#24537)
Merge pull request #24529 from Microsoft/suggestionDiagnosticsToken
Merge pull request #24536 from Microsoft/trailingCommaInJson
Merge pull request #24431 from Zzzen/master
Merge branch 'master' into suggestionDiagnosticsToken
Do not emit trailing comma in json module Fixes #24530
Merge pull request #24515 from Kingwl/esnext-symbol
Merge pull request #24524 from a-tarasyuk/bug/24514-use-strict-prologue-emitted-in-json-files
Merge pull request #24527 from sambostock/rename-flatten-to-flat
Better JS container binding (#24367)
Make suggestion diagnostics to wire cancellationToken This especially needed if its a js file without the ts-check, the file wont be typechecked in getSemanticDiagnostics Fixes part of #19458
Updated baselines
Do not emit 'use strict' prologue in .json files with --alwaysStrict
Rename ESNext `flatten` to `flat`
Fix preProcessFile tests
Merge branch 'master' into libReference
Merge pull request #24521 from typescript-bot/user-update-20180404
PR Feedback
Update user baselines
Merge remote-tracking branch 'ms/master'
Merge remote-tracking branch 'ms/master'
add esnext symbol proposal
Fixup sourcemap positions and text writer calculations
Candidate sectional sourcemap emit implementation
For type emit, walk non-parent containers when those containers have aliases leading to the target (#24507)
moveToNewFile: Remove newlines after last moved statement (#24503)
Update authors
Lookup type arguments correcly for taged templates when checking generic arity (#24496)
fixUnusedIdentifier: fix "Remove variable statement" codefix  (#24497)
Fix exported type resolution in commonjs (#24495)
Add refactor to convert namespace to named imports and back (#24469)
Support getting references even if quickInfo failed (#24476)
Fix cast: location may be a SourceFile (#24498)
LEGO: Merge pull request 24494
LEGO: check in for master to temporary branch.
Merge pull request #24471 from Microsoft/watchInSiblingOfRoot
Merge pull request #24436 from MicahZoltu/patch-1
Merge pull request #24438 from vpukhanov/issue-22674
Merge pull request #24439 from Microsoft/unknownType
Improve template literal tests (#24359)
We definitely have a type system
Add more errors; commandline help for --build; invalid flag combo detection
Better fix for bogus duplicate identifier in module exports (#24491)
Merge pull request #24481 from Microsoft/fix24173
Merge pull request #24442 from Kingwl/fix-implement-interface-with-extends-class
isValidMethodAccess: use getTypeOfPropertyOfType instead of getTypeOfFuncClassEnumModule (#24488)
Update user baselines (#24487)
Rename unknownType to errorType in merged code
Don't allow to rename string literal (#24477)
Merge branch 'master' into unknownType
Refactor and inline getNodeToInsertMethodAfter
fix broken test
Merge branch 'master' into fix-implement-interface-with-extends-class
Accept new baselines
Update tests
Remove eager resolution of distributive conditional types
Fix async generator return as well
Merge pull request #24474 from Microsoft/fix21115.2
Test for asyncIterator existance before defining
Simplify calculation of sourceFiles for getReferences (#24475)
Avoid duplicate import completions when a namespace is exported by two different modules (#24473)
Do not await iterated value in for-await-of
LEGO: Merge pull request 24472
LEGO: check in for master to temporary branch.
Instead of creating filter for subDirectories to watch in the ancestor directory of root, watch those subDirectories for failed lookup locations Before this change, when failed lookup location didnt fall in root directory, we tried to find the ancestor directory of the rootDirectory to watch. We also created subDirectory map for the directories that are being watched so we dont go through invalidation if path is unwanted directory With this change, we will watch those subdirectories instead of root. On windows node supports file system level recursive watching so the earlier approach was better because we reduced number of watches created But on other os, since node doesnt support it, we create the watches for existing folders outselves, so earlier approach becomes expensive. This should be better compromize to satisfy both types of OS. Fixes #24434
Fix duplicate identifier error with module.exports (#24466)
VFS fixes
Merge branch 'master' into libReference
Skip IntrinsicAttributes elaboration in JSX errors (#24461)
Add test that verifies watched directories and files when resolution of module references sibling folder to root with symlLink
Merge pull request #24463 from Microsoft/fix24288
Merge branch 'master' into tsbuild
Fix return and throw propagation for yield*
Accept new baselines
Update tests
keyof unknown should be never
moduleSpecifiers: Don't return a relative path to node_modules (#24460)
fixUnusedIdentifier: Don't remove parameter in override or non-last parameter in callback (#24306)
Include '...' on doc comment for rest parameter (#24462)
Add graph ordering tests
Merge pull request #24457 from Microsoft/fixBuild
LEGO: Merge pull request 24458
LEGO: check in for master to temporary branch.
Remove unneeded assertions
Add assertions
LEGO: Merge pull request 24450
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 24447
LEGO: check in for master to temporary branch.
add lookup for extends class when implement interface
Accept new baselines
Update tests
Add new diagnostic
Check we have non-unknown where we require non-nullable
Update undeclared method quickfix tests
addMethodDeclaration: add after quickfix location if possible (#22674)
Accept new baselines
Add tests
{ [P in unknown]: XXX } should resolve to { [x: string]: XXX }
Fixes Number.is* signatures to accept any input.
Accept new baselines
Fixes to keyof and narrowing by typeof check
'null' and 'undefined' are bottom types in non-strictNullChecks mode
Accept new baselines
Implement 'unknown' type in checker
Accept new baselines
Add 'unknown' keyword to scanner/parser/emitter
Accept new baselines
Free up one bit in TypeFlags
Rename existing unknownType to errorType
Use better toposorting algorithm
Merge branch 'master' of https://github.com/Microsoft/TypeScript
Merge pull request #24425 from Microsoft/revert23925
Accept baselines
Merge branch 'Kingwl-fix-es5-export-class-name-object'
Merge branch 'fix-es5-export-class-name-object' of https://github.com/Kingwl/TypeScript into Kingwl-fix-es5-export-class-name-object
Merge branch 'master' of https://github.com/Microsoft/TypeScript
LEGO: Merge pull request 24426
LEGO: check in for master to temporary branch.
Revert "Check detected npm path is existing"
Make configure prerelease script compile under strict null checks (#24417)
LEGO: Merge pull request 24411
LEGO: check in for master to temporary branch.
accept baseline
Document highlights on yield keywords highlight other occurrences in the same body
LEGO: Merge pull request 24404
LEGO: check in for master to temporary branch.
add more test and fix others
remove invalid check
Graph ordering test WIP
Don't constrain string tag values
Correctly skip upstream-blocked projects
Don't use invalid cached SourceFiles
Dump fork output on unclean exit (#24394)
Use external aliases in quickinfo and signature help return types (#24391)
Update user baselines (#24374)
Disallow nested object param syntax in callback tag (#24392)
LEGO: Merge pull request 24393
LEGO: check in for master to temporary branch.
Fix to issue 23326 for completions on new.target (#24342)
Fix for issue #6154 - overriding methods with properties in the derived class (#24343)
Merge pull request #24390 from Microsoft/isEmittedDeclarationFile
Fix strictNullChecks breaks
Do not trigger invalidation if emitted file is in declarationDir
Merge branch 'master' into tsbuild
Fix tests run in parallel
Hoisted declarations should occur after prologue directives (#24386)
Add resolution branding
Comments
Dont count duplicated errors in case-insensitive duped files in rwc (#24383)
moveToNewFile: Format the new file (#24379)
WIP
moveToNewFile: Respect UserPreferences#quote (#24365)
LEGO: Merge pull request 24377
LEGO: check in for master to temporary branch.
Merge pull request #24373 from j-oliveras/j-oliveras-template-version
Minor cleanups in importFixes (#23995)
remove failed test
Update Bug_report.md ts version to 3.0.0
Update issue_template.md ts version to 3.0.0
fix ambient context
fix export class declare with name object targeting es5 (#17494)
LEGO: Merge pull request 24370
LEGO: check in for master to temporary branch.
Merge branch 'master' into add-braces
remove some case
Merge pull request #24328 from Microsoft/getEditsForFileRename_oldFileStillPresent
Simplify convertToMappedObjectType (#24360)
Merge pull request #22022 from Kingwl/enum-eval-div-zero
LEGO: Merge pull request 24362
LEGO: check in for master to temporary branch.
add code fix convert to mapped object type (#24286)
LEGO: Merge pull request 24356
LEGO: check in for master to temporary branch.
Fix typo: seperate -> separate (#24338)
Support signature help for partially-filled-in type arguments `f<` (#24138)
Merge pull request #24348 from Microsoft/findRefInJson
Make undefined for default case less pervasive by removing once done with it
fix void return statement
revert wrong inline parameter
update body only
fix converter
stash
add tests and fix
add support for add or remove braces to arrow function
WIP more tests
Add fall-through test and correct comment about implied type
Fix getter of local symbol for export= when it is json module Fixes #24341
Add fix option to lint task (#24344)
Use compare paths for comparing diagnostic paths, since the canonicalization of fileName and unitName differ (#24340)
Check for keyof constraint type instead of syntactic check (#24098)
Use unknown serialization kind when type symbol isnt resolved (#24332)
Improve verify.codeFixAvailable (#24325)
Remove duplicate class 'NodeSet' (#24337)
moveToNewFile: Don't provide refactor if selection is just imports (#24336)
Enable '--strictNullChecks' (#22088)
Use symbolToTypeNode for class & interface references (#24330)
moveToNewFile: Support selecting the name of a declaration (#24331)
Don't need to check failedLookupLocations if resolved successfully
Support recommended completion for union (#24326)
Baseline accept
For completions, treat a '// @ts-check' file like a TypeScript one (#24321)
Passing tests
Merge pull request #24262 from armanio123/FixObjectLiteralExpression
getEditsForFileRename: Handle old file still being present
Merge pull request #24206 from Microsoft/documentRegistery
Add a test when orphan file changes before it gets added back to project
Merge pull request #24311 from amcasey/GH23287
Verify ref counts are set correctly when reusing the source file from script info cache
Add type for diagnostics where location is defined (#23686)
Merge pull request #24298 from Microsoft/noErrOnBackgroundUpdate
Check TransformFlags.ContainsJsx, rather than LanguageVariant.JSX
Merge pull request #23794 from Microsoft/fixDiscriminatedContextualType
Fix errors
Merge pull request #24312 from Kingwl/multiline-type-literal-formatter
Update user baselines (#24289)
Merge pull request #24139 from minestarks/dynamicprojectassert
Add suggestion diagnostics for unused label and unreachable code (#24261)
Merge pull request #24310 from Microsoft/nonWideningLiteralInferences
WIP
fix wrong formatting with multiline type literals with IntersectionType and UnionType
Testing WIP
Testing WIP
Added tests
Clean, etc
Merge pull request #24180 from Microsoft/updateVersion
Preserver jsx imports even when the compiler option is not set
Accept new baselines
Add tests
Accept new baselines
Handle union types in getRegularTypeOfLiteralType
fixUnusedIdentifier: If every VariableDeclaration is unused, remove the VariableStatement (#24231)
Infer non-widening literal types when type parameter constraint includes primitive types
WIP
Add noGetErrOnBackgroundUpdate session option to not queue diagnostics check for open files This will ensure that the getErr will be queued in by host and hence would make sure that it is cancellable. Handles one of the scenario delaying completions in #19458
Merge pull request #24296 from Microsoft/npmPackageSize
Merge branch 'master' into documentRegistery
builf lib.es2018.full.d.ts
Update LKG
Lint
Remove .js.map and .d.ts files added in #23844
Fix bug: Get merged module symbol in forEachExternalModule (#24295)
update .npmignore
Fix bug: VariableDeclaration initializer may be undefined (#24256)
Merge branch 'master' of https://github.com/Microsoft/TypeScript into bug/23180-generate-source-maps-with-relative-path
Merge pull request #24271 from Microsoft/portRegExpDotAllFix
Merge pull request #24265 from Microsoft/quoteTypeof
Port changes in #24238 to source file
LEGO: Merge pull request 24270
LEGO: check in for master to temporary branch.
Use single quotes around 'typeof' in message.
LEGO: Merge pull request 24263
LEGO: check in for master to temporary branch.
Get constraint with this argument of the type parameter for comparisons (#21210)
Fixed test regression, removed nodeContentIsAlwaysIndented
getEditsForFileRename: Do fresh module resolution instead of relying on cache (#24211)
Fix issue with formatting object literal csharp style
Add code fix to remove unused label (#24037)
getJSDocTypeParameterDeclarations: Avoid unnecessary array (#24257)
Merge pull request #24237 from amcasey/GH23640
Merge pull request #24234 from Microsoft/unusedIdentifierCorrectFile
getJSDocHost always returns a defined result (#24255)
Extract sorting helper
Merge pull request #24236 from Kingwl/quick-fix-for-import-type
Update user baselines (#24247)
Merge pull request #24238 from bluelovers/patch-1
Eliminate runtime type check
Delete redundant tests
getEffectiveTypeParameterDeclarations: Always return a defined result (#24251)
Some RWC tests had dupes in their input/outher files list because paths werent both resolved (#24235)
Merge pull request #24187 from Kingwl/disallow-in-function-like-initializer
es2018 regexp dotAll
only allow refactor if selected span overlaps name declaration
Sort exports when organizeImports is run
simply quick fix for import type missing typeof
WIP, need to lint
WIP
Unused variable error reporting needs to handle nodes that could not belong to current source file Eg. when resolving module, the another file gets checked and its locals are added to potentiallyUnused list Fixes #24215
Remove leveldown, stip absolute paths from test mk 2, accept reordered and new user baselines (#24227)
Set startPos at EOF in jsdoc token scanner so node end positions for nodes terminated at EoF are right (#24184)
moveToNewFile: Fix bug for missing importClause (#24224)
Improve ChangeTracker#deleteNodeInList (#24221)
More robust circularity detection in node builder (#24225)
fixUnusedIdentifier: Don't delete node whose ancestor was already deleted (#24207)
Accept changed baseline (#24222)
Merge pull request #24137 from Microsoft/fix23977
Use import types to refer to declarations in declaration emit (#24071)
moveToNewFile: Fix bug for VariableDeclaration missing initializer (#24214)
Merge pull request #24212 from Microsoft/Fix24199
Add undefined guard
Fix jsdoc type resolution [merge to master] (#24204)
Reduce map lookups (#24203)
moveToNewFile: Don't move imports (#24177)
Cache the latest source file from document registry so we can keep it alive when script info is orphan
Add test to verify the document is released from source file when info is orphan
Add callback tag, with type parameters (#23947)
Merge pull request #24192 from Kingwl/quick-fix-for-import-type
add quick fix for import type missing typeof
LEGO: Merge pull request 24188
LEGO: check in for master to temporary branch.
disallow acesssor generate in function like initializer
Sort the whole diagnostic, plus giving up on isolating tests (#24186)
Properly handle edge cases
Add Unicode ThirdPartyNotice
LEGO: Merge pull request 24183
LEGO: check in for master to temporary branch.
Accept baselines
Merge branch 'master' into updateVersion
Merge pull request #24136 from Microsoft/inferFromUsageFixes
Merge pull request #24178 from amcasey/SyntaxServerOpenFileTelemetry
Use newer signature help check (#24179)
Update version
Don't collect open-file telemetry on the syntax server
Have the bot link the build associated with the PR (#24176)
Merge branch 'master' of github.com:Microsoft/TypeScript
Fix lint
Correctly show instantiated signatures for JSX element signature help and quick info (#23492)
Use jsdoc aliases if visible when printing types (#24153)
Add temp module dir to gitignore to reduce git intellisense load when running user tests
Have bot force push his branch so he can run multiple times a day
Merge branch 'master' of github.com:Microsoft/TypeScript
Bump user test enumeration timeout
codeFixInferFromUsage: Avoid duplicate fix for variable declaration (#24169)
Merge pull request #24162 from Kingwl/fix-generate-accessor-starting-underscore
Update authors for release-2.9
Merge pull request #24158 from Kingwl/fix-trailing-comma-in-accessor-generator
Merge pull request #24160 from KSXGitHub/patch-1
Fix jsx element parsing within ternary (#24149)
Accept new baseline
LEGO: Merge pull request 24171
LEGO: check in for master to temporary branch.
Merge pull request #24161 from KSXGitHub/patch-2
LEGO: Merge pull request 24163
LEGO: check in for master to temporary branch.
fix generate accessor if starting with underscore
Give issue template's checklist checkboxes
Give checklist checkboxes
fix trailing comma in accessor generator
LEGO: Merge pull request 24157
LEGO: check in for master to temporary branch.
Handel synthetic rest parameter declarations
Fix bug: Converting 'module.exports = {...}' to ES6 doesn't introduce a default export (#24141)
Fix unused diagnostic for rename-destructuring `{ a: b }` (#24145)
Fix placement of indent for @ts-ignore comment (#24143)
Avoid duplicates when finding jsdoc (#24086)
Normalize this.currentDirectory
Merge pull request #24112 from Microsoft/packageJsonWithMainInSubDirectory
Fix conversion of TextChanges to FileCodeEdits for new file (#24126)
Move synthetic comments from arrow body expressions to return statement (#24135)
Merge pull request #24114 from Microsoft/inspectorToModules
Fix stack overflow in merge symbol (#24134)
Copy allowTextChangesInNewFiles property to protocol.ts (#24127)
Combine signatureHelp testing methods (#24132)
Accept new baselines
Add regression test
Optimize intersections of unions of unit types
External runner fixes (#24115)
Merge pull request #24074 from RyanCavanaugh/splitTransparentGoToDef
Remove assert
WIP
Comments/naming
Reorder, add `"http2"`, `"async-hooks"` and `"perf_hooks"`
Add 'inspector' to known node modules
Apart from typing, use main field in package json to resolve typescript files Fixes #23502
Do not remove extension js or jsx from the subModuleName if the subModule doesnt have js or jsx extension
Add test for module resolution with package json containing main field referencing js file in sub directory
Cache simplified indexed accesses to better handle circularly constrained indexed acceses (#24072)
Don't add a suggestion to convert to an es6 module if no commonjs import/export appears at top-level. (#24101)
Use SHA256 hash for project info telemetry (#24099)
Reduce aggression of parenthesis removal in ts transform (#24073)
Push through original mapping location
Alter basic auth strategy
Update API baselines
Merge pull request #24076 from Microsoft/fix24006
Merge pull request #24078 from Microsoft/fix24014
LEGO: Merge pull request 24097
LEGO: check in for master to temporary branch.
Inject token into push like vsts does
Fix async generator rejection handling
LEGO: Merge pull request 24077
LEGO: check in for master to temporary branch.
Cut back on more 'caught exceptions' from vfs
Merge branch 'master' into libReference
Return mapped locations in alternate fields
Add another test of js special assignment merging (#24070)
"gulp" -> "jake"
Merge pull request #24049 from armanio123/AddDeferredToProjectTelemetry
Merge pull request #24056 from a-tarasyuk/bug/23891-declarationDir-needs-to-be-handled-in-excludeSpecs
add tests
Merge pull request #24050 from Microsoft/fix-js-initializer-merging
Add fourslash test case
Assert:only merge into transient symbols
LEGO: Merge pull request 24061
LEGO: check in for master to temporary branch.
Add declarationDir to excludeSpec
LEGO: Merge pull request 24055
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 24051
LEGO: check in for master to temporary branch.
Fix repeated merging of js initializers
Merge pull request #24048 from amcasey/GH23366
Merge pull request #24047 from amcasey/GH23892
Small test fixes
Ignore case when sorting imports
Added deferred to FileStats telemetry
Stop deleting empty named import lists
First half of fix
Support '/' as a trigger character in path completions (#24042)
Add code fix to remove unreachable code (#24028)
Extract 'moduleSpecifiers' namespace out of importFixes (#24010)
VSTS prefers to pass secrets as command line params (#24041)
Improvements to find-all-references for import types (#23998)
LEGO: Merge pull request 24039
LEGO: check in for master to temporary branch.
Add script for automatically creating PRs for user test updates (#24036)
Dump XML test results (#24034)
Don't count '/' in division as a completions trigger (#24038)
Fix comment (#24035)
Update user baselines (#24032)
Add release-2.9 to covered branches
Merge pull request #23956 from Kingwl/emit-var-at-top
Add 'move to new file' refactor (#23726)
Generate names for type parameter declarations in inferred types (#23902)
Merge pull request #23954 from Kingwl/readonly-getter-support
fix incorrect find reference pos
Merge pull request #24000 from ajafff/regex-factory
LEGO: Merge pull request 24027
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 24020
LEGO: check in for master to temporary branch.
add prependRange and move more variable declaration
find reference at begin of constructor
Merge pull request #24003 from Microsoft/useEdgeForBrowserTests
Allow all private declarations to be emitted in declaration output (#23351)
Fix RWC test case sensitivity (#24012)
Remove unnecessary filtering of tsx completions (#24004)
LEGO: Merge pull request 24008
LEGO: check in for master to temporary branch.
Default to 'edge' instead of 'IE' for browser tests
Fix publish nightly on case sensitive FS (#23997)
Merge pull request #23972 from Microsoft/batchTestConfigurationsForBrowser
Add createRegularExpressionLiteral and expose createStringLiteral
PR Feedback
Merge branch 'master' into libReference
Add additional Array.from test case
Merge pull request #23923 from Zzzen/master
Merge pull request #23957 from paulkoerbitz/16675-better-error-message-for-dynamic-import
Fix crash in recursive declared type resolution (#23950)
Merge pull request #23982 from Microsoft/reduceVfsCaughtExceptions
Add telemetry for open JS files (#23833)
improve performance
update all reference in constructor
LEGO: Merge pull request 23991
LEGO: check in for master to temporary branch.
Fix #23180 - Generating source maps with relative path in sourceRoot option produces maps with absolute file paths
Adress review comments
Merge pull request #23887 from agentcooper/async-generator-resolve-promise
Do not check for await expression and always output yield await
Merge pull request #23976 from ialexryan/patch-3
LEGO: Merge pull request 23987
LEGO: check in for master to temporary branch.
Fix RWC tsconfig and lib paths (#23979)
Accept typo fix (#23983)
Rename test (#23978)
Reduce number of 'caught exceptions' raised by vfs
Merge pull request #23980 from ialexryan/patch-2
Merge pull request #23981 from ialexryan/patch-4
Fix comment typos in utilities.ts
Fix comment typo in types.ts
Merge pull request #23975 from ialexryan/patch-2
Fix comment typo in program.ts
Fix comment typo in resolutionCache.ts
Merge pull request #23974 from ialexryan/patch-1
Fix typo in parser.ts
fixUnusedIdentifier: Handle destructure with all bindings unused (#23805)
Batch enumerateFiles for multiple configurations into a single web request
Make new harness fake host more performant in large complications (#23951)
Merge pull request #23910 from Microsoft/moduleUpdates
Merge pull request #23966 from Microsoft/fixIndexedAccessAnyConstraint
Merge pull request #23925 from rhysd/fix-npm-default-location-detection
Handle BindingElement in fixUnusedIdentifier (#23819)
Add hook for adding transforms into the declaration emit pipeline after the main one (#23946)
Support '.' as a trigger character (#23890)
Merge pull request #23944 from RyanCavanaugh/projRefs
Accept new baselines
Add regression test
Exception for 'any' constraint only applies to type parameters
LEGO: Merge pull request 23965
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 23962
LEGO: check in for master to temporary branch.
Apply transformation to await expression
Accept baselines for new import call expression error in ES2015
Make error message for dynamic imports when module is ES2015 more helpful
add support for readonly modifier
LEGO: Merge pull request 23953
LEGO: check in for master to temporary branch.
convertToEs6Module: Replace 'module.exports =' with 'export default' without replacing nodes (#23948)
Treat 'import("")' as a module reference (#23949)
Pass setParentNodes through to parseJsonText
Project References Core support
Merge pull request #23915 from Microsoft/jsonCompletions
Avoid unnecessary newline when inserting node at start of class (#23935)
Add 'string' ScriptElementKind (#23821)
Expose ProjectService to plugins (#23824)
Rename
Merge pull request #23894 from Microsoft/importOutlining
generateGetAccessorAndSetAccessor: Preserve a parameter property declaration (#23318)
Replace `verify.rangesReferenceEachOther` with `verify.singleReferenceGroup` (#23933)
Remove verify.referencesAre, verify.referencesOf, verify.rangesReferenceEachOther (#23900)
Check detected npm path is existing
Document highlights on async/await keywords should highlight other occurrences in the same body fix #22944
LEGO: Merge pull request 23921
LEGO: check in for master to temporary branch.
Merge pull request #23920 from paulkoerbitz/master
Code review comments
Add comments to kinds
Revert adding named import binding list outlining spans
Change kind name to `imports`
Add WSH as an alias for WScript in scripthost.d.ts
LEGO: Merge pull request 23916
LEGO: check in for master to temporary branch.
Revert "Resolve promise inside async generator"
Always yield await in async generator
Accept new symbol baselines, ensure expected ordering for default libs
Suggest json files in completion when resolveJsonModule is set and module resolution is node Fixes #23899
findAllReferences: Treat a nested property in a jsdoc type literal as a definition (#23901)
Fix indentation
Merge branch 'master' into importOutlining
Remove unused interface (#23905)
Fix typo in comment
Fork gulp-typescript tasks to run out-of-process
Add 'lib' reference support
add libMap and libs exports
Move getSpellingSuggestion to core
Add support to update module resolutions on watches from mono repo like setup with path mapping Fixes #22349
Create a test case for module resolution when symlinked folder contents change and resolve modules Test case for #22349
Few renames to distinguish between fs File and File in the test case to load in the VFS with watch
Look at simplified types when checking distributive conditional constraints (#23884)
Fix find-all-refs for import("mod").Foo where Foo is a typedef (#23881)
Merge pull request #22167 from Microsoft/requireJson
Merge pull request #22072 from Microsoft/configFileWithIncorrectProjectRoot
Update test
Accept baselines
Add outlining span for named bindings in import declarations
Update the message for resolveJsonModule as per PR feedback
PR feedback
Merge remote-tracking branch 'origin/master' into importOutlining
Add outlining spans for import declarations
Merge pull request #23883 from Microsoft/outliningSpanKind
Accept baselines
Fix call to 'fail' in jakefile (#23845)
Resolve promise inside async generator
only disallow infinite or nan in const enum
disallow nan and infinity in enum member
Merge pull request #23882 from Microsoft/reduceStackDepthPart1
Merge pull request #23878 from Microsoft/vfsBaselines
Fix #22419: Add `kind` field to `OutliningSpan`
Add assertion message
Minor changes to reduce stack depth during emit
Merge branch 'master' into configFileWithIncorrectProjectRoot
Merge branch 'master' into requireJson
Add formatting rule for import type import keyword and open paren (#23872)
Fix bug: JSDocPropertyTag is a declaration (#23876)
Unpatch vfs resolver and default lib rename
Unpatch project tests
Don't close runtests-browser server when browser-launcher closes (#23875)
Move templates (#23874)
Update Question.md
Merge pull request #23873 from Microsoft/boldWarningsAgainstQuestions
Stress that questions should not be asked.
Implement feedback on "Improve completions testing" (#23842)
In insertNodeAfter, handle file with no trailing newline (#23814)
Merge pull request #23870 from RyanCavanaugh/master
Rename
Update Custom.md
Update Custom.md
Update Custom.md
Merge pull request #23866 from Microsoft/issue-templates
Update Feature_request.md
node builder should strive to preserve mapped type keyofness (#23815)
Updated stray baseline.
Update Bug_report.md
Ensure properties with computed names are visited (#23787)
Dont consider global augmentation top-level members as having the export modifier (#23846)
Update issue templates
Move property errors to the name for the error span (#23865)
Move symbol instance type to es5 to follow PropertyKey (#23864)
Stop using circularity-unchecked-caching (#23808)
Merge pull request #20763 from Microsoft/vfs
Merge pull request #23841 from Microsoft/sourceFileChangeAssert
Merge branch 'master' into sourceFileChangeAssert
Don't show a definition at a 'require' call (#23822)
Update LKG (#23844)
LEGO: Merge pull request 23856
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 23852
LEGO: check in for master to temporary branch.
Merge pull request #23191 from armanio123/AddVueSupport
Merge pull request #23839 from Microsoft/libsJson
Merge pull request #23834 from Microsoft/generateNamesEarlier
Rollback fileExtensionIs
Downlevel destructuring in module transformer if destructured variable has multiple names (#23832)
Flag default imports with named imports as needing importStar (#23795)
Centralize lib management for build
fixAddMissingMember: Add a new PropertyDeclaration at the end of the first set (#23837)
Use 'firstDefined' in 'enablePlugin' (#23825)
Fix the assert for orphan script info source change event
LEGO: Merge pull request 23840
LEGO: check in for master to temporary branch.
Pre-generate names ahead of time
Update completion order in test
LEGO: Merge pull request 23820
LEGO: check in for master to temporary branch.
Update documentation comments
Merge branch 'master' into vfs
More path cleanup
Add VSTS Build status badge to README (#23789)
Inform getDeclarationSpaces about how an imported exportAssignment may merge (#23816)
LEGO: Merge pull request 23813
LEGO: check in for master to temporary branch.
Fix typo: `||` should be parenthesized (#23811)
fixCannotFindModule: Special handling for node core modules like "fs" (#23807)
Merge pull request #23806 from Microsoft/objectAndUnconstrainedTypeParameter
Accept new baselines
Check that test cases produce expected types
Improve completions testing (#23591)
Accept new baselines
Add regression tests
Unconstrained type parameter not assignable to 'object'
Add code fix to convert 'require' in a '.ts' file to an 'import' (#23711)
PR feedback
No error for require, module.exports or exports in Javascript (#23743)
Fix discriminant checking in contextual types to avoid infinite recursion
LEGO: Merge pull request 23792
LEGO: check in for master to temporary branch.
Always export typedefs (#23723)
Merge pull request #23785 from dsifford/dsifford-lib-intl-fix
remove modifications to lib/*
Add used-before-declaration errors for class refs inside computed names (#23784)
Merge pull request #23597 from Microsoft/inferredProjects
Merge pull request #23783 from Microsoft/tscWatchInfo
Remove circle & jenkins (#23752)
add lib.es2018.intl + fix lib.es2017.intl
Merge pull request #23664 from a-tarasyuk/feature/strictPropertyInitialization-can-not-be-used-without-strictNullChecks
PR feedback
Merge branch 'master' into requireJson
Merge pull request #23782 from Microsoft/controlFlowNullTypeAndLiteral
Accept new baselines
Add regression tests
Check for null type instead of null keyword
Merge pull request #23753 from Microsoft/emptyOptions
Merge pull request #23697 from Ken703/bug/23047
Merge pull request #23768 from Microsoft/fixIndexedAccessAssignability
Accept new baselines
Add tests
Treat unconstrained T[K] the same as unconstrained T
update string template rule and test
LEGO: Merge pull request 23766
LEGO: check in for master to temporary branch.
Merge pull request #23751 from Microsoft/reduceIntersectionTypes
Merge pull request #23760 from j-oliveras/update_issue_template
Fix typo
LEGO: Merge pull request 23761
LEGO: check in for master to temporary branch.
Update issue template to match current nightly builds versions.
Merge pull request #23327 from Microsoft/importDotMeta
More logs in tsc.js
Specify ESNext module in test.
Check for both 'module' and 'target'.
Look for top-level imports/exports before diving into the tree.
Handle the test case when tsconfig file changes without needing to update the program Fixes #23687
Accept new baselines
Add tests
Relax switch-case narrowing restrictions (#23522)
Actually visit expression node on empty destructuring assignment (#23744)
Add implicit any errors for destructuring computed names which aren't late bound and have no corresponding index (#23489)
Merge branch 'master' into reduceIntersectionTypes
Merge pull request #23672 from Microsoft/intersectionWithUnionConstraint
Merge pull request #23660 from Microsoft/fixIndexTypeTargetConstraint
LEGO: Merge pull request 23748
LEGO: check in for master to temporary branch.
Remove readonly from object rest properties (#23746)
Merge branch 'master' into vfs
Partial migration of some shared vpath functionality to core
Copy consistient valueDeclarations on union/intersection symbols (#23190)
Remove redundant primitive types from intersections with literal types
Fix typo (#23725)
Add prettier user test and fix associated crash (#23715)
Add tests
Check base type for special property declarations (#23671)
Fix `insertNodeAtClassStart` for empty class with comment (#23342)
Merge remote-tracking branch 'origin/master' into importDotMeta
LEGO: Merge pull request 23699
LEGO: check in for master to temporary branch.
Auto format: no space between closing parenthesis and string template
Don't add import completion from a re-export in "./index" (#23623)
Use @types/travis-fold (#23694)
There exist type parameters with symbols but without TypeParameterDeclaration nodes (#23690)
Remove unused property 'referencedDiagnostics' (#23688)
Prototype-property assignment:fix name resolution crash (#23680)
Remove unnecessary check for ElementAccessExpression#argumentExpression being defined (#23685)
Handle diagnostic with unknown file (#23681)
Make signature help node building cancellable (#23543)
Accept new baselines
Add additional tests
Accept new baselines
Handle more situations involving combined constraints of intersections
Always parse an argument for an ElementAccessExpression (#23683)
importNameCodeFix: consistently put fixes to use existing imports before fixes for existing imports (#23663)
LEGO: Merge pull request 23674
LEGO: check in for master to temporary branch.
Accept new baselines
Add tests
Accept new baselines
Remove more intersections with empty value domains from union types
LEGO: Merge pull request 23668
LEGO: check in for master to temporary branch.
Properly check relationships for intersections with union constraints
Accepted baselines.
Make 'ImportMeta' more minimal.
Do not remove inferred project immediately and try to reuse it on next file open
Detach the removed typing files from the project
Helper for getting string comparer
Rearrange code such that project Root path of open file is always used in watching and removing the config file watches
Add warn that user can not use --strictPropertyInitialization without --strictNullChecks
Merge pull request #23636 from Microsoft/getErrWithInferredProject
Merge branch 'master' into fixIndexTypeTargetConstraint
Reorganize and remove duplication
Merge pull request #23645 from Microsoft/distributeKeyofUnion2
Accept new baselines
Add regression test
Reinstate type simplification for 'keyof T[K]' as target in relation
goToDefinition: Also add definitions for symbol if it does not match the signature symbol (#23657)
LEGO: Merge pull request 23658
LEGO: check in for master to temporary branch.
Improve error message for unused type (#23633)
Support import fix even when the error is that a type is used as a value (#23655)
LEGO: Merge pull request 23650
LEGO: check in for master to temporary branch.
Merge branch 'master' into vfs
Fix issues with runtests-browser
LEGO: Merge pull request 23644
LEGO: check in for master to temporary branch.
Accept new baselines
Add tests
Accept new baselines
Transform 'keyof (A | B)' to 'keyof A & keyof B'
Suggestion to convert to ES6 module should only trigger in projects which express some intent to use ES6 (#23576)
Fix the crash when reporting errors of file that was referenced by inferred project root, is opened right after closing the root file Fixes the crash reported in https://github.com/Microsoft/TypeScript/issues/23255#issuecomment-382653325
`module.exports = Entity` is an alias, just like `export = Entity` (#23570)
LEGO: Merge pull request 23635
LEGO: check in for master to temporary branch.
Make symbol display at ExportSpecifier use 'export', not 'import' (#23629)
Merge pull request #23592 from Microsoft/improveIndexTypes
Allow getting import completion details with misspelled name (#23624)
getEditsForFileRename: Update tsconfig "files" (#23625)
Deduplicate declarations in combined type/value symbols (#23593)
Merge pull request #21476 from Kingwl/concat-string-in-enum-member
Accept new baselines
Address CR feedback
LEGO: Merge pull request 23604
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 23599
LEGO: check in for master to temporary branch.
accept baseline
Added deferred project context test, marked JsFileExtension as deprecated
LEGO: Merge pull request 23590
LEGO: check in for master to temporary branch.
Skip arrow functions in checkAndReportErrorForMissingPrefix (#23584)
Add 'renameFile' command to services (#23573)
Fix assert in getjsdochost (#23575)
Add 'triggerCharacter' option for completions requests (#23491)
Merge pull request #23470 from JoshuaKGoldberg/standardized-non-pretty-newlines
Accept new baselines
Properties with numeric names have numeric literal types in keyof T
Use getFirstConstructorWithBody in one more place, and simplify other class members iteration (#23567)
Support getting JSDoc comment starting at a FunctionType node (#23546)
Merge pull request #23566 from ajafff/generator-cfa
LEGO: Merge pull request 23568
LEGO: check in for master to temporary branch.
resolveEntityName: don't return false (#23563)
avoid generated helpers in baseline
binder: don't inline generator function's control flow
LEGO: Merge pull request 23561
LEGO: check in for master to temporary branch.
Trailing whitespace, oh no!
Simplified to one output line
Used return value from clearScreenIfNotWatchingForFiles
LEGO: Merge pull request 23558
LEGO: check in for master to temporary branch.
Merge branch 'master' into vfs
More cleanup and reorganization
In JS, class supports `@template` tag for declaring type parameters (#23511)
Merge pull request #23430 from Microsoft/taggedTemplateTypeArguments
Make code fix to add 'this.' work for statics (#23527)
Fix bug: Don't rename 'default' in `export { default as x } from "m";` (#23434)
quickInfo: Get JSDoc tags from aliased symbol (#23526)
Accepted baselines.
Avoid duplicate code when checking for tagged templates.
Added test in case 'super' is ever possibly parsed as a tagged template string.
LEGO: Merge pull request 23550
LEGO: check in for master to temporary branch.
Merge pull request #23545 from Microsoft/revert22772
Revert change to PromiseConstructor in #22772
Cleanup and reorganize fakes
Accepted baselines.
Added test for ASI concerns.
Visit typedef type expressions so they contribute to referenced-ness (#23525)
Merge pull request #23484 from Microsoft/typingInstallerWatch
LEGO: Merge pull request 23540
LEGO: check in for master to temporary branch.
allow string concat in enum member declaration
Merge pull request #23408 from Microsoft/autoPretty
Standardized for --preserveWatchOutput too
Visit EOF to collect jsdoc import types (#23521)
Trim unused functionality
Merge branch 'master' into AddVueSupport
Merge pull request #23466 from falsandtru/lib/Promise.reject
Merge pull request #22772 from falsandtru/lib/promise
Update test
Revise IndexType to have stringsOnly property
Misc. improvements to addImplementationReferences (#23507)
findAllReferences: Reduce node.getSourceFile() calls (#23524)
Add typeof-for-switch
Revert "Improve PromiseConstructor"
Addressed PR comments
Simplify getParentSymbolsOfPropertyAccess (#23513)
Improve performance of duplicate check (#23516)
Accepted baselines.
Address CR feedback.
Use indexOf and substr to exclude node_modules and bowerComponents instead of using loop
Merge pull request #23438 from Microsoft/typingsFiles
Cache canonical global cache's package.json path
Renames as per PR feedback
Accept new baselines
For 'T extends { [x: string]: XXX }' constraint of T[keyof T] is XXX
Merge pull request #23494 from amcasey/PropagateUnnecessary
MissingDeclaration is only ever a Statement (#23485)
LEGO: Merge pull request 23497
LEGO: check in for master to temporary branch.
Merge remote-tracking branch 'master/master' into lib/promise
Improve PromiseConstructor
Propagage reportsUnnecessary in convertToDiagnosticsWithLinePosition
Trim unused functionality
Revert the change of PromiseLikeConstructor
Reorganize project structure.
Merge pull request #20671 from Kingwl/fix-import-not-existed-module
flags--;
Accept new baselines
Don't widen unique symbol types during type inference
Add axios' source to user tests (#23490)
Find-all-references: Don't crash on 'typeof import' (#23448)
Merge branch 'master' into vfs
Use watch recursive directories instead of watchFile for node_modules and bower components
Use ts-check instead of ts-node to avoid transpilation overhead on gulp startup (#23486)
Update to respond to PR feedback
Accepted baselines.
Avoid breaking change by introducing overloads for 'createTaggedTemplate'/'updateTaggedTemplate'.
Symbol kind for a method on a mapped type should still be 'method' (#23478)
Update configurePrerelease to not utilize ts internals (#23476)
Add '?' in quick info for optional properties/methods (#23480)
Rename `pushTypePart` to `pushSymbolKind` (#23481)
Merge pull request #23452 from uniqueiniquity/normalizeDocumentHighlightsPaths
goToDefinition: Remove isSignatureDeclaration, use isFunctionLike (#23475)
goToDefinition: Reduce duplicate code around createDefinitionInfo (#23473)
Add create-react-app and puppeteer user tests (#23471)
Fix bug: IfStatement#elseStatement can be undefined (#23467)
Merge pull request #23462 from JoshuaKGoldberg/combined-pretty-summaries
Remove unnecessary allocation
Treat expectedRanges as readonly
Only normalize for purposes of assert
convertFunctionToEs6Class: Copy comment from variable declaration (#23445)
Fix bug: VariableDeclaration initiazer may be undefined (#23439)
Helps to check in the test changes, too
Adjusted newlines in non-pretty output for consistency
findAllReferences: Mark *every* search symbol as seen, not just search.symbol (#23451)
Fix Promise.reject
LEGO: Merge pull request 23463
LEGO: check in for master to temporary branch.
Combined the "Found X error(s)" and "Compilation" complete --watch messages
LEGO: Merge pull request 23456
LEGO: check in for master to temporary branch.
Shrink span for convert-to-es6-module suggestion (#23441)
Merge pull request #23437 from Microsoft/getOutliningSpansDepthElseIf
Fix lint error and normalization issue
Merge branch 'master' into improveIndexTypes
Add test
Move normalization into services
Normalize paths to search for highlights
Delete "delete me" files (#23446)
LEGO: Merge pull request 23447
LEGO: check in for master to temporary branch.
Merge pull request #23443 from Microsoft/fixGulpfile
Convert gulp processDiagnostics builder to project compilation
Merge branch 'master' into AddVueSupport
Refactored getSupportedExtension to only copy array when necessary
convertToEs6Module: Avoid replacing entire function (#22507)
Merge pull request #23358 from joscha/joscha/fix-non-imports-matching
Remove condition
In outliningElementsCollector, treat 'else if' as having same depth as the 'if'
Simplify getConvertibleFieldAtPosition (#23315)
LEGO: Merge pull request 23428
LEGO: check in for master to temporary branch.
Use getPossibleSymbolReferenceNodes in one more place (#23378)
Add members for numeric and symbol named properties in mapped types
Accepted baselines.
Allow parsing tagged templates with type arguments in new expressions.
Accepted baselines.
Added test for tagged templates in new expressions.
Accept new baselines
Fixes and improvements to indexed access type relationships
revert change
detect nested non-imports
Fix spacing.
fix up
undefined instead of null
store lastToken
Accepted baselines.
Perform checking and resolution of tagged template type arguments.
Accepted baselines.
Strip away type arguments from tagged templates when emitting.
Accepted baselines.
Added basic support for parsing/emitting type arguments in tagged template expressions.
Fixed up test. Thanks arrow functions...
Accepted baselines.
Added tests.
Accepted baselines
Automatically configure tsc output and provide a new 'diagnosticStyle' option.
Merge branch 'master' into requireJson
Invoked should be property on watchers map instead of local variable since watchers arent closed if they need to be reopened
Invalidate the unresolved import resolutions when typing files are set This has 3 changes: 1. In updateGraph when enqueue the typing installation request (depending on unresolved imports) 2. When ActionSet event is received, invalidate only files with unresolved imports and resolve those. 3. When ActionInvalidate event is received, typing installer has detected some change in global typing cache location, so just enqueue a new typing installation request. This will repeat the cycle of setting correct typings and pickiing unresolved imports
Force new typings resolution only if there are more or less script infos in the project. This helps in reducing number of forced typing installation requests We anyways use changes in unresolved import array to determine if we need to enqueue new typing request Hence there is no need to soley rely on hasChanges from updateGraph which just indicates that we didnt reused the program (that does not mean new files were added to the program or changes in unresolved imports)
Remove the specialized type UnresolvedImportsMap which is just a redirection and helps only in test only
Typings cache is internal data structure
LEGO: Merge pull request 23401
LEGO: check in for master to temporary branch.
use state
Merge pull request #23386 from Microsoft/fix-jakefile-case-and-reference-circularity
Update tsserverlibrary.d.ts after missed baseline
Re-add fixName to tsserverlibrary.d.ts
Fix jakefile case and circular references
Merge pull request #23374 from Microsoft/npmInstallCommandTooLong
Switch webpack to submodule (#23372)
Merge pull request #23354 from RyanCavanaugh/referencesDogfood_1
Remove reference emit from diagnostics
Remove ref comments from processDiagnosticMessages
Merge branch 'master' into referencesDogfood_1
Update diagnostic tasks in jakefile
Combine getTouchingWord and getTouchingPropertyName (#22127)
Simplify tryGetImportOrExportClauseCompletionSymbols (#22961)
Don't copy trivia when implementing an interface (#23343)
Handle command too long failure in typings installer
generateGetAccessorAndSetAccessor: Share modifier-creating code (#23311)
Exclude generated files from user tests (#23371)
Simplify registerCodeFIx (#23349)
LEGO: Merge pull request 23369
LEGO: check in for master to temporary branch.
Add fixName property to CodeFixAction (#23350)
LEGO: Merge pull request 23360
LEGO: check in for master to temporary branch.
fix: do not match MySymbol.import("mod")
Fix bug: isSymbolReferencedInFile should return true for shorthand property assignment (#23314)
You have to do this everywhere now!
Remove TODO: GH#18795 comments (#23337)
Don't include "/index" in import from @types even with classic resolution (#23347)
Merge branch 'master' into referencesDogfood_1
Improve user test tsconfig (#23325)
.d.ts changed order
Remove all reference comments from services
Add explicit file lists to server tsconfig files
Fix harness file listing
Remove explicit harness file list from Jakefile
Explicitly list server source files in their current emitted order
Remove all reference comments from server/
Explicitly list compiler source files in their current emitted order
Remove all reference comments from compiler/
patternMatcher: Return single best match instead of list (#23166)
When testing references, also test documentHighlights respects filesToSearch (#23306)
generateGetAccessorAndSetAccessor: Fix typos and use type predicate (#23310)
Update outdated comments (#23320)
Allow exports assignments (#23319)
Merge pull request #23331 from aboveyou00/master
LEGO: Merge pull request 23332
LEGO: check in for master to temporary branch.
Fix typeo: rename udpateReportDiagnostic to updateReportDiagnostic
Include guards on comment kind in pragma extraction (#23313)
Accept new baselines
Update test
String index signatures do not apply to symbols
Add support for destructuring well-known and late-bound names (#23297)
handle any'd method signature types (ie, from special property declarations) (#23316)
'modulekind' -> 'moduleKind'
Accepted baselines.
Added tests around ES5, assigning to 'import.meta' and properties, global augmentations.
Provide an error when using 'import.meta' without setting 'esnext'.
Added semicolon.
LEGO: Merge pull request 23322
LEGO: check in for master to temporary branch.
In getWidenedTypeFromJSSpecialPropertyDeclarations, parent of PropertyAccessExpression must be a BinaryExpression (#22727)
patternMatcher: Just return 'undefined' for an invalid pattern (#23237)
Accepted baselines.
Basic checking for 'import.meta'.
Basic parsing/emitting support for 'import.meta'.
JSDoc:positional matching of destructured params (#23307)
Add 'disableSuggestions' to UserPreferences (#23283)
add refactor of convert private field to getter and setter (#22143)
Fix bug: ensure 'reportsUnnecessary' is actually sent by tsserver (#23293)
LEGO: Merge pull request 23302
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 23298
LEGO: check in for master to temporary branch.
Accepted baselines.
Added tests for 'import.meta'.
LEGO: Merge pull request 23290
LEGO: check in for master to temporary branch.
Fix bug: don't insert a semicolon when inserting a FunctionDeclaration (#23240)
Allow variable statements used as declaration sites to be marked visible (#22798)
Fix bug: Include comment for @param tag with nested tag (#23276)
Rename infoCheck to suggestionCheck (#23286)
Simplify handling of parameter properties in forEachRelatedSymbol (#23213)
Prioritize spelling fix over add-missing-member fix (#23268)
Support goto-definition for index signatures (#23220)
Accept new baselines
Update tests
Enable 'keyof T' for full string | number | symbol
Accept new baselines
Move 'PropertyKey' from es2015.core.d.ts to es5.d.ts
Add support for numbers and symbols in keyof (but keep it disabled)
LEGO: Merge pull request 23269
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 23254
LEGO: check in for master to temporary branch.
improve parser and error message if definite assignment assertions in object short hand
Merge pull request #23239 from Microsoft/skipWatchingTypeCacheInfos
findAllReferences: forEachRelatedSymbol can always include shorthand destructuring (#23223)
IndexInfo#declaration is always an IndexSignatureDeclaration (#23232)
Update user tests with improved lib settings (#23238)
Do not watch script infos that are part of global typings location
Do not send project update in background if there was no ensureUpdate pending on the project structure
There is no need to ensure project structure when tryiong to get inferred project The project operations will validate if its valid anyways
Add time stamp into the ti log.
Reverted unintentional formatting changes
Update user test baselines (#23181)
Allow both module.exports= and module.exports property assignments (#23228)
Clean up code for nonrelative path completions (#23150)
Merge pull request #23218 from TravCav/master
Remove unnecessary test file (#23214)
found another place to fall through in the checker
Don't add import completion for re-export with different name (#23211)
Accept new baselines
Limit getLiteralTypeFromPropertyName to only return string-like types
Merge pull request #23203 from HolgerJeromin/patch-1
Merge pull request #23050 from gagoman/fix/22923
removed always true condition
refactor: use union type in `DateConstructor`
Added deferred ScriptKind and renamed JsFileExtensionInfo to FileExtensionInfo
Move nameType to base Symbol, generate nameType properties where missing
Resolve json modules only when --resolveJsonModule is specified
Merge branch 'master' into requireJson
LEGO: Merge pull request 23184
LEGO: check in for master to temporary branch.
findAllReferences: Share code between populateSearchSymbolSet and getRelatedSymbol (#23028)
Fix issue #22923
When --noUnusedLocals/--noUnusedParameters is disabled, add suggestions instead of errors (#22361)
findAllReferences: Be consistent how we handle unions in root symobls (#23002)
Fix typo and use array helper (#23169)
redundant code
Fix crash in type resolution in JS IIFEs (#23171)
Merge pull request #23170 from TravCav/master
LEGO: Merge pull request 23168
LEGO: check in for master to temporary branch.
Merge pull request #23165 from TravCav/master
Allow extending any, with noImplicitAny errors (#23153)
Fix bug: `<div a="1" b/**/ >` is not a jsx initializer (#23138)
isDefaultExport is always false here.
removed unused code
Move nameType from SymbolLinks to TransientSymbol
LEGO: Merge pull request 23163
LEGO: check in for master to temporary branch.
Only include unique symbols when getting index types for access checks (#23145)
Merge pull request #23128 from amcasey/SyntaxServerNoProgram
Introduce a --syntaxOnly server mode
Merge pull request #22254 from JoshuaKGoldberg/pretty-watch-error-summaries
Merge pull request #23154 from Microsoft/portGenerat3edLibFiles4-4
Print js-constructor function type names (#23089)
Dont bind a local symbol for a default export without a name (#23152)
Port generated lib files
Report errors in JSX properties on the failing prop or the tag name (#23148)
Update LKG
Allow rest parameter trailing commas in ambient contexts (#23139)
Prototype assignments count as method-like (#23137)
Feedback: correct order in watch.ts; DRY tests
LEGO: Merge pull request 23136
LEGO: check in for master to temporary branch.
Fix factorial jsdoc search:chained assignments (#23115)
patternMatcher: Use helper functions to simplify loops over strings (#23095)
completions: Properly handle preferences.includeCompletionsWithInsertText (#23092)
Add type predicate helper functions to Type (#23066)
Merge pull request #19317 from igelbox/fix-insert-space-after-function-generic
No error referring to UMD symbol in CommonJS modules (#23129)
Allow multiple class base types; intersect them, as with interfaces (#23123)
Merge pull request #22261 from ajafff/factory-array
Actuallt preserve nonblock for of statements in forofs with object rest (#23122)
SyntaxKind.ImportTypeNode -> SyntaxKind.ImportType (#23120)
Merge pull request #22049 from Kingwl/spelling-fix
Merge pull request #23077 from uniqueiniquity/spacesInLogPath
Merge pull request #23112 from Microsoft/fixTPReferenceLookups
Consider jscontainer aliases as referencible even if they have other local meanings (#23119)
Enable member completions for import types (#23085)
LEGO: Merge pull request 23113
LEGO: check in for master to temporary branch.
Accept new baselines
Add regression test
Only look up identifiers that could actually be type parameters
Skip parens and non-null assertions when looking for this-context (#23097)
LEGO: Merge pull request 23108
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 23102
LEGO: check in for master to temporary branch.
Merge branch 'master' into spelling-fix
matchTextChunk: combine a) and b) cases (#23083)
Support completions for members with symbol names (#23091)
Merge pull request #23067 from Microsoft/fixTPReferenceInConditional
Merge pull request #23043 from alan-agius4/feature/compiler-host-falsy-file
Handle double quotes for every argument
Simplify matchTextChunk (#23081)
Path completions for import types (#23082)
Close over getLogPath
Use object destructuring instead of tuple
Work around bug with global completion with invalid identifier (#23086)
Consume extra parts of file path
Improve string literal completions from a signature (#23062)
Remove trailing whitespace
Unclosurefy patternMatcher (#23071)
Mark js-assignment functions' symbols as methods (#23078)
Remove unused properties from patternMatcher (#23076)
fix: `CompilerHost.getSourceFile` is being called for odd filenames besides the one being compiled
Simplify 'bestMatchKind' (#23073)
Update baselines for chained prototype assignments (#23075)
Ensure TSS_LOG handles paths with spaces
Merge pull request #23069 from Microsoft/portGenerat3edLibFiles4-2
Don't offer import completions in non-module files unless "--module" is set (#22951)
Module or `import` types (#22592)
Port generated lib files
Include arrow functions as javascript initializers (#23068)
Improve binding and jsdoc of chained special js assignments (#23038)
Accept new baselines
Add regression test
Less aggressive test for type parameter references in conditional types
LEGO: Merge pull request 23064
LEGO: check in for master to temporary branch.
textChanges: Don't crash when inserting type annotation on function with no parens (#23034)
Add 'getNameFromPropertyName' helper (#23036)
Fixed unit tests for error counts
LEGO: Merge pull request 23051
LEGO: check in for master to temporary branch.
Merge branch 'master' into pretty-watch-error-summaries
Merge pull request #23039 from Microsoft/fixConditionalConstraints
Remove _this, _super, and _newTarget name conflict errors (#22890)
Add union check to improved error message (#23027)
Accept new baselines
Add tests
Call ensureModifiers on private property modifiers (#23026)
Merge pull request #22849 from aozgaa/dev/aozgaa/cSharpObjLiteralFormatting
Constraint of 'T extends U ? T : F' should be 'T & U | F'
Combine getDocumentationComment implementations (#22722)
Simplify getPropertySymbolsFromBaseTypes (#23004)
Merge pull request #22251 from jack-williams/jack-williams/no-implicit-symbol-to-string
Merge pull request #22981 from a-tarasyuk/bug/advanced-options-do-not-work-with---init
Allow using Advanced_Options with --init. Exclude all possible Advanced_Options in tsconfig.json which were NOT defined in command line
Merge pull request #22989 from Microsoft/fixImpliedConstraint
Merge pull request #22593 from Kingwl/module-spelling-fix
Do not rely on ElementAttributeProperty if it is not present (#22936)
Elide type reference comments which are also imported (#22752)
update baselines
Merge branch 'master' into dev/aozgaa/cSharpObjLiteralFormatting
Mangle comment for sorcery (#23006)
Handful more usages of emitIfPresent on optional nodes (#22274)
Remove unused method (#23000)
Remove duplicate helper function (#23001)
Merge pull request #22275 from delftswa2018/21617-detailed-error-forof-iterators
Merge pull request #22506 from EcoleKeine/patch-2
Use isExternalModuleImportEquals in one more place (#22417)
add option for object literal indent
Propagate noDefaultLib comment into emitted declaration files (#23003)
Merge pull request #20374 from uniqueiniquity/symlinkTypeReferenceDirective
Merge pull request #22993 from dhruvrajvanshi/issue-22785
Fix bug: ClassDeclaration not guaranteed to be first declaration of a class (#22983)
Fall back to check expression if resolving an export assigned entity name fails (#22928)
Consider property accesses in heritage clauses as type-space references for calculating type reference directives (#22746)
Use 'map.get' instead of 'has' (#22998)
Emit amd-module and amd-dependency comments in emitter if printing declaration comments (#22740)
Propagate CheckFlags.Late through instantiateSymbol (#22749)
Copy comments from inferred types to generated nodes (#22730)
NodeBuilder only preserves parameter modifiers for constructors (#22706)
Error on rest parameter with trailing comma (#22262)
Merge pull request #22613 from Microsoft/configFileErrors
fixAddMissingMember: Remove special-casing for 'this' (#22987)
Handle ts-only declaration export aliases in system transformer (#22919)
Dont follow aliases when looking for default exported symbol (#22995)
Move JSX props support check and make syntactic (#22970)
Assert argument is provided to diagnostic (#22992)
Error on `for (const x in never)` (#22988)
Adding trailing newline to a baseline test file
Dont let an import that doesnt need helpers override one that does (#22966)
Add regression tests documenting current behavior of #14121 (#22748)
Allow strict mode reserved keywords in qualified type names; Fixes 22785
Accept new baselines
Add regression test
Fix parent node walk termination condition in getConstrainedTypeVariable
Don't allow to iterate over 'never' (#22964)
`@typedef` supports nested `@property` names (#22967)
Fix formatting
Merge pull request #22976 from Microsoft/childWatches
Merge pull request #22972 from weswigham/capture-LKG
PR feedback
Remove unnecessary test (#22962)
Do not watch child directories of the sym link folders Fixes #22668
Revert "Do not watch child directories of the sym link folders"
Do not watch child directories of the sym link folders Fixes #22668
Update LKG
Merge pull request #22959 from Microsoft/fixInferTypeParameterLeak
Merge pull request #22963 from Microsoft/incrementalEditWithJsDocNode
Accept new baselines
Add another test
Correct the incremental parsing when there is jsDoc node Fixes #22924
Simplify createChildren (#22270)
Merge pull request #22960 from Microsoft/portGeneratedLibFiles3-28
Use getAllSuperTypeNodes in more places (#22718)
Port generated lib files
Accept new baselines
Add regression test
Erase 'infer T' locations in conditional type constraints
fix accessor parse with line terminator (#22893)
isMethodLike recognises prototype-assignment methods (#22935)
Merge pull request #22941 from andfaulkner/patch-1
Fix typo in Array Type Literals section of spec
Inline isParameterOfConstructorDeclaration (#22838)
completions: isNewIdentifierLocation = false for string literal where all legal values are known (#22933)
Add 'isParameterPropertyModifier' helper (#22841)
findAllReferences: Consistently use getTextSpan (#22847)
Add regression test for GH #21871 (#22733)
findAllReferences: Respect search file set searching for references to an exported symbol (#22657)
Add 'fixAllDescription' property to CodeFixAction (#22616)
Support completion details for string literal completions (#22664)
Merge pull request #22898 from Kingwl/fix-return-type-lookup-rule
refactorConvertToEs6Module: Preserve quote style of imports (#22929)
Reuse getBinaryOperatorPrecedence (#22844)
Anything after Debug.failBadSyntaxKind is dead code (#22922)
Transform setter bodies if they contain es2015 (#22931)
Always test replacementSpan, and don't provide if it would just be an identifier (#22918)
Debug.failBadSyntaxKind should always be defined and return 'never' (#22091)
Test for isNewIdentifierLocation, and make true for type with index signature (#22910)
completions: Use keywordForNode helper instead of .getText() (#22751)
Handle toplevel this-assignment (#22913)
textChanges: Add insertCommentBeforeLine method (#22902)
textChanges: Use InsertNodeOptions instead of ChangeNodeOptions where possible (#22903)
textChanges: Use replaceRange in more places (#22904)
replaceNode: Always use non-adjusted end (#22519)
 Make T[never] = never instead of erroring or being any (#22787)
fix type lookup rule
pass in sourceFile and revert child to `TextRangeOfKind`
fix test
Merge branch 'master' into dev/aozgaa/cSharpObjLiteralFormatting
more tests
Tighten heuristic for definite dts moduleness to check for syntactic default (#22814)
Merge pull request #22775 from adriengibrat/FixFunctionApplyDefinition
textChanges: Clean up *Options interfaces (#22813)
Merge pull request #22886 from Microsoft/Fix22866
Fix function.apply type definition
importFixes: Distinguish when we need to import JSX constructor or JSX namespace (#22828)
Fix lint issues
In JS, this assignments in constructors are preferred and nullable initializers become any (#22882)
Remove unnecessary 'forEachEntry' call (#22653)
Fix #22866: Condition checking for name collision of generated variable names on emit happening
Declaration maps and transparent goto definition using them (#22658)
Merge pull request #22869 from Microsoft/fixConditionalTypeVariance
Merge pull request #22850 from Microsoft/tupleTypeInference
Remove unused function (#22848)
Accept new baselines
Change test to use type variables
Change to more conservative conditional type relationship
Accept new baselines
Add tests
Add tests
Add missing type relationship for conditional types
Update authors for release-2.8
Accept new baselines
Add regression tests
Don't infer between tuple types with different arity
Handle completions in interface / type literal similar to class (#22701)
Merge pull request #22842 from uniqueiniquity/outliningLineEnding
test synthesized object literal formatting
Merge pull request #22744 from RyanCavanaugh/fixCacheInvalidation
cSharp-style formatting for multi-line object literals
Run test in both module resolvers
Always include parent folder failed lookup locations
Make region outlining more sensitive to CRLF
Alternate but more general token comment emit fix + organizeImports fix (#22836)
Merge pull request #22830 from Microsoft/fixDestructuringWithConstraint
Accept new baselines
Add regression test
Obtain constraint from destructured property when applicable
Refactor `tryGetGlobalSymbols` into list of things to try (#22704)
Simplify functions for adding parse errors (#22513)
Merge pull request #22808 from Microsoft/moduleResolutionEvents
Merge pull request #22590 from amcasey/DiagEvents
Test suppression of diagnostic events
Add support for suppressing project events
Improve behaviour of `...` inside JSDoc functions (#22809)
Always make a new jsxAttributes type, dont reuse emptyObjectType (#22810)
Parse and check type arguments on JSX opening and self-closing tags (#22415)
Allow local class declarations to be returned as mixins (#22807)
Stop printing two spaces between heritage clauses (#22801)
Don't provide spelling suggestion for module (#22805)
Invalidate resolutions from typeRoots watch event as a fallback mechanism There are times when the directory watcher for failed lookup locations isnt invoked and is not very determinitstic So as a fallback, when we receive typeRoots watch event, handle failed lookup locations as well
Merge pull request #22803 from Microsoft/updateTo2.9
Accepted baselines.
organizeImports: Fix bug in reference-testing for renamed import (#22797)
Update version to 2.9.
Fixes for new mocha types (#22799)
Improve assertion violation message (#22522)
Revert change to `canUseEvents` in `IoSessionOptions` (#22791)
Correctly track thisContainer for this-property-assignments in JS nested containers (#22779)
Merge pull request #22729 from Microsoft/renameNodeModulesContainingAtTypes
Combine getLastChild helpers (#22418)
convertFunctionToEs6Class: Combine `deletes` and `deletedNodes` (#22742)
convertFunctionToEs6Class: Copy comments from constructor to class (#22738)
Fix test for overlapping changes (#22741)
Remove unnecessary exports (#22739)
Merge pull request #22591 from amcasey/SessionOptions
Merge pull request #22707 from Microsoft/fixIndexedAccessInConditionalType
Fix lint errors
Delete IoSessionOptions
In source files and blocks, bind function declarations before other statements (#22766)
Merge pull request #22764 from Microsoft/fixInferTypeDeclarationFiles
Fix Promise interfaces
Accept new baselines
Add regression test
Accept new baselines
Revise binder logic to correctly find 'infer T' containers
Revert strict containment check in checkInferType
Undo 'any' inference propagation (#22736)
Accept new baselines
Add regression test
Accept new baselines
Add test to verify errors on nested 'infer T' declarations
Properly generate 'infer T' declarations in typeToTypeNode
Accept new baselines
Add test
LEGO: Merge pull request 22754
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 22745
LEGO: check in for master to temporary branch.
Implicit constraints in non-distributive '[T] extends [U] ? X : Y' types
Support services settings (#22236)
Evaluate isPrototypePropertyAssignment lazily (#22728)
Fix when program module resolution in watch mode when node_modules folder itself gets the rename event Fixes #22712
Js constructor function fixes (#22721)
Two JSdoc parsing fixes (#22705)
LEGO: Merge pull request 22719
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 22714
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 22711
LEGO: check in for master to temporary branch.
Combine keyof T inferences (#22525)
Accept new baselines
Add tests
Accept new baselines
Add constraints to indexed access types in conditional types
Fix type when annotated with a JSDoc function type (#22692)
LEGO: Merge pull request 22703
LEGO: check in for master to temporary branch.
Put simpler condition in front of more complex one (#22696)
Use isFunctionLike instead of switch (#22698)
Simplify isImplementation (#22660)
findAllRefs: give entry for union its own definition (#22694)
Remove type assertion in sum function (#22670)
Merge pull request #22675 from Microsoft/fixWideningInDestructuring
Accept new baselines
Add regression test
Accept new baselines
Mark implied object destructuring patterns as object literal types
Parse JSDoc ...T and T= only at top-level JSDoc (#22661)
Fix indent (#22662)
Clean up isNameOfExternalModuleImportOrDeclaration (#22659)
Merge branch 'master' into requireJson
getAllJSDocTagsOfKind always returns a defined result (#22652)
Store import nodes in SourceFile.imports instead of StringLiteral nodes (#22495)
For import fix, for "foo/index" module, use "foo" as default export name, not "index" (#22651)
JSDoc `?Type` adds optionality to parameters (#22646)
Add 'isPrototypeAccess' helper (#22648)
Change es2015 transform to retain comments on for of loop bodies (#22396)
Fix await code action crashes when await is not in a function (#22623)
For `f.prototype.m = function() { this.x = 0; }` make `x` a member of `f`, not of the function expression (#22643)
Merge pull request #22520 from Microsoft/betterDelete
Fix completions and brace in empty  file (#22620)
Revert assertion addition (#22622)
Refactor declaration emitter into declaration transformer (#21930)
Make sure config file parsing errors are available through program Fixes #22570, #21940
Better test to see when console clearing happens
Simplify some code in parseTestData (#22587)
Disable assertion for deferredUnusedIdentifierNodes (#22604)
Do not close the file watches just to create new ones in the type installer Fixes #22581
Don't add external module completions in a pure commonjs file (#22583)
add spelling suggestion support for module
LEGO: Merge pull request 22586
LEGO: check in for master to temporary branch.
Update user tests for new jsdoc fixes (#22582)
Signature#declaration can be undefined (#22515)
Simplify implementation of firstOrUndefined and lastOrUndefined (#22572)
Use type predicate for getFirstJSDocTag (#22573)
Improve unmatched jsdoc param error (#22577)
useNonAdjustedEndPosition when replacing import node (#22517)
Update circle config to build all branches
inferFromUsage: Handle being at an unexpected location (#22569)
No error on unmatchable `@param` tags (#22510)
Pass stack trace limit to parallel workers, and always convert to number (#22527)
LEGO: Merge pull request 22561
LEGO: check in for master to temporary branch.
getJSDocParameterTags: Always return defined result (#22523)
Merge pull request #22526 from Microsoft/testModifiedTime
Instead of using current time, use predefined time for modification to ensure we can detect changes correctly and arent timing dependent Fixes #22455
Brackets and postfix= in `@param` add undefined (#22514)
Remove redundant call to `checkNodeDeferred` (#22516)
LEGO: Merge pull request 22521
LEGO: check in for master to temporary branch.
Do not send first missing file event as well.
Simplify parseJsxChildren (#22511)
Merge pull request #22512 from Microsoft/fixUseOfProcess
Merge pull request #22496 from Microsoft/suppressMultipleDelete
Do not use unguarded process in tsc.ts
Fix crash after `var = require('x')` type resolution (#22452)
Some Constructor's signature missing null type
LEGO: Merge pull request 22505
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 22502
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 22501
LEGO: check in for master to temporary branch.
Merge branch 'master' into requireJson
fixUnusedIdentifier: Don't remove setter parameter (#22488)
LEGO: Merge pull request 22498
LEGO: check in for master to temporary branch.
Merge pull request #22450 from Microsoft/reenableTest
Fix bug: Don't skip emitting JSX attributes (#21777)
Do not send delete event every poll for missing folder Fixes #22494
LEGO: Merge pull request 22489
LEGO: check in for master to temporary branch.
Ensure our readonly emptyArray stays non modified.
Merge branch 'master' into requireJson
Add js user tests (#22449)
Add submodule update step to circle (#22451)
Merge pull request #22448 from Microsoft/portGeneratedLibFiles3-9-2
Merge pull request #22421 from Microsoft/typesInTypeArguments
accept baselines
Made watch mode always report summary
Port generated lib files
Merge pull request #22409 from Microsoft/symbolKind
Enable the commented out test and convert folder entries to sorted list
Add comments and make some nit changes based on PR feedback
Merge pull request #22444 from obany/master
Fix typo in emitDeclarationOnly error message for declaration required
Disable test
update branch list
Reverted now-unused ProgramDiagnosticsAndEmit
Merge branch 'master' into pretty-watch-error-summaries
Port generated lib files (#22437)
Fix #22133: Expose getOutliningSpans on the server protocol (#22400)
Port changes from #22172, provide a callback to fs.close (#22405)
Simplified error message counts; internalized reporting to createWatchCompilerHost
annotateWithTypeFromJSDoc: Do less special-casing for arrow functions (#22407)
FunctionLike = SignatureDeclaration (#22365)
Allow types as well as values in possibly type argument location Fixes #22369
Treat 'yield;' as 'yield undefined;' (#22297)
Factor out a getYieldedTypeOfYieldExpression helper (#22416)
Handle resolving and unknown symbols in getLiteralTypeFromPropertyName (#22406)
Merge branch 'master' into requireJson
Merge pull request #21243 from Microsoft/watchOptions
Call process.stdout._handle.setBlocking(true) (#22389)
Directly assign values for watchFile and watchDirectory in node System
Symbol kind needs to use location before falling back to flags Fixes #22366
annotateWithTypeFromJSDoc: Use changes.insertTypeAnnotation instead of replaceNode (#22404)
Import types in JS with `var x = require('./mod')` (#22161)
Merge pull request #21974 from Microsoft/js-object-literal-assignments-as-declarations
Merge branch 'master' into vfs
Merge branch 'master' into js-object-literal-assignments-as-declarations
Improve error span:duplicate symbols cross-js/ts
Disallow JS/non-JS merge without crashing
Filter symbol property names out of index signature assignability checks (#22398)
Use getTextOfNode over getTextOfNodeFromSourceText(getSourceFileOfNode(node)) (#22387)
fixJSDocTypes: Use ChangeTracker (#22391)
Add 'isNamedDeclaration' helper to reduce casts (#22089)
Platform independent wildcard file include ordering (#22393)
Use single replacer for string escaping (#22335)
Accept user baseline changes
Address PR comments
Merge branch 'master' into js-object-literal-assignments-as-declarations
When every import is unused, error on the entire import declaration (#22386)
Port generated lib files (#22381)
inferFromUsage: use ChangeTracker and typeToTypeNode (#22379)
Increase size of span for unused declaration (#22388)
Mark SymbolTracker as deprecated publicly (#22384)
Set circle timeout to 5 minutes (#22363)
Merge pull request #22343 from Microsoft/codeFixActionNotUndefined
Fix ignore message indentation (#22340)
Simplify suppressLeadingAndTrailingTrivia (#22356)
Create the action only if the text change creation is successful.  … Make change for the infer type from usage could return undefined even if type is present if the type cannot be named Fixes #22184
Add test for undefined action returned Test for #22343
isValidMethodAccess: Instantiate signature this type if necessary (#21722)
Convert annotateWithTypeFromJSDoc refactor to a codefix (#22336)
Apply 'no-unnecessary-initializer' lint rule (#22014)
Avoid cast by providing type predicate to isExternalModuleAugmentation (#22119)
Update symbol template test case with errors to include union types
Add test case for taggedTemplate with symbol param and number return
LEGO: Merge pull request 22351
LEGO: check in for master to temporary branch.
update test for #20577 (#22310)
Remove TypeFacts.Discriminatable (#22346)
Use global NonNullable type for nonnull types (#22096)
For `<div a= >`, after `=`, do not try to parse an expression (#21373)
Make test timeout on travis huge (#22344)
Allow indexing generics with unique symbols (#22339)
Add inference priority for mapped type keys (#22246)
Convert use-default-import refactor to a codefix (#22334)
Update .npmignore (#22318)
Merge pull request #22323 from Microsoft/checkInferredConstraints
Merge branch 'master' into checkInferredConstraints
Merge pull request #22313 from Microsoft/fixDistributiveConditionalTypes
Accept new baselines
Add tests
Properly check inferred constraints for 'infer X' type variables
Accept new baselines
Add regression test
Accept new baselines
Merge branch 'master' into watchOptions
Defer distributive conditional type when check type is generic
Remove parens from single parameter arrow functions
Merge pull request #22151 from Microsoft/svcOfPendingReloadFile
Merge pull request #22308 from Microsoft/declarationEmitOfIndirectAlias
Much better comment preservation (#22141)
Merge branch 'master' into fix-insert-space-after-function-generic
Change esnext.promise to es2018.promise (#22292)
Do not try to resolve alias for default symbol Fixes #22257
Add tests when declaration emit for indirect alias usuage results in wrong error reporting Test for #22257
Merge pull request #22300 from Microsoft/distributeKeyofIntersection
Make convertFunctionToEs6Class a codefix (#22241)
Update baselines for user tests (#22276)
Prefer 'return Debug.fail()' over 'throw Debug.fail()' (#22092)
add spelling suggestion support for module import (#22283)
Don't rename static 'this' when renaming class (#22235)
Reduce duplicate code for TextChange overlaps (#22278)
Accept new baselines
Add tests
Accept new baselines
Transform 'keyof (A & B)' to 'keyof A | keyof B'
Merge pull request #22135 from uniqueiniquity/jsxFragmentHash
Parenthesize computed names if not an assignment expression (#22280)
Debug assert on parent rebind, mitigate circularity in symbol access checking (#22282)
Merge pull request #22281 from Microsoft/noNeverTypePropagation
Don't propagate 'never' types in type inference
LEGO: Merge pull request 22279
LEGO: check in for master to temporary branch.
Convert 'installTypesForPackge' refactor to a suggestion (#22267)
Apply 'no-unnecessary-qualifier' lint rule (#22009)
Fix #21617: Give detailed message on `for-of` of iterators without downlevelIteration
Fix bug where findAllReferences included a node outside of sourceFilesToSearch (#22062)
PropertyAssignment#initializer should be non-optional (#22209)
breakpoints: Fix invalid cast (#22153)
isControlFlowEndingStatement: don't try to enumerate all possible parent kinds (#22131)
Fix type of isIterationStatement (#22065)
Remove unnecessary length check in  `getSyntacticDocumentHighlights` (#22064)
support groups property (#22176)
findAllReferences: Make definition info independent of search location (#21748)
Merge pull request #22197 from Microsoft/fixConditionalTypes
Added --preserveWatchOutput flag (#21303)
LEGO: Merge pull request 22265
LEGO: check in for master to temporary branch.
mergeMapLikes: Improve type (#22237)
Simplify diagnostics fourslash tests (#22245)
Merge branch 'master' into fixConditionalTypes
update baselines
factory: replace Array parameters with ReadonlyArray
LEGO: Merge pull request 22260
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 22256
LEGO: check in for master to temporary branch.
Added an errors summary for --pretty --watch results
Check for symbol types in template expressions
Format unique symmbol string output with `unique symbol` and not `typeof` within checker (#22247)
Filter outer type parameters (similar to anonymous types)
Fix typo in inference (#22243)
Set syntheticLiteralTypeOrigin on synthetic `undefined`-type members (#22216)
Lookup JSX namespace within factory function (#22207)
Emit unqiue symbols with typeof if possible before issuing an error (#21403)
Stop binding type predicate types twice (#22210)
LEGO: Merge pull request 22244
LEGO: check in for master to temporary branch.
Merge pull request #22136 from Microsoft/moduleResolution
Merge pull request #22138 from uniqueiniquity/conflictingDefinitionsError
Accept new baselines
Consistently propagate 'any' and 'never' types in type inference
Add 'info' diagnostics (#22204)
LEGO: Merge pull request 22234
LEGO: check in for master to temporary branch.
Accept new baselines
Update tests
Distributive conditional type applied to 'never' produces 'never'
Added more tests for #22180
Infer parameter names and types when applying Delcare Method codefix (#22180)
Fix comment
Fix declaration emitted crash on mapped type with no type (#22213)
Add semicolons to import helpers (#22212)
Accept baseline changes
Update test
Accept API baseline changes
LEGO: Merge pull request 22215
Fix lint
LEGO: check in for master to temporary branch.
Propagate 'never' and the wildcard type in type inference
Remove assert for undeclared js-nested-exports
Simplify TextChanges#getChanges (#22157)
Support js nested namespace decls on exports
Add support for transpiling per-file jsx pragmas (#21218)
fourslash diagnostics tests: use objects instead of strings (#22193)
Merge branch 'master' into fixConditionalTypes
Accept new baselines
Update tests
Use '{}' instead of 'never' for no candidates in conditional inference
Ensure our readonly emptyArray stays non modified.
Accept API baseline changes
Disallow recursion
Increase rwc js verification timeout (#22191)
Remove excess comment ranges from initialized and property parameter emit (#22152)
Make some internal types @internal (#22190)
Improve error message for untyped import of scoped package (#22189)
Verify the output file paths for the json module emit
Report errors about correctness of the json file
error if import empty object form module not existed
Merge pull request #22087 from amcasey/AmbientModuleImports
Resolve the .json file only if module name contains the extension
Parse all json values at root
Need allowJs to be true to use the json module resolution
More tests and also do not add index signature for json module
Fix emit for json file
Bind and resolve the module for json file
Replace usage of jsonObject on JsonSourceFile
Resolve Json file when module resolution strategy is node
Merge branch 'master' into watchOptions
Merge pull request #22098 from alexeagle/pretty
Reload the text from file if there is pending reload of the script info before determining to use SVC Fixes #20806
Add test for scenario when script info being operated is pending on reload but has svc for the previous version Test for #20806
Update chrome-devtools baseline
Merge branch 'master' into js-object-literal-assignments-as-declarations
Merge branch 'js-prototype-assignment' into js-object-literal-assignments-as-declarations
Fix nested js-containers+proto assignment in types space
LEGO: Merge pull request 22148
LEGO: check in for master to temporary branch.
add support of codefix for Strict Class Initialization (#21528)
fix --pretty output when context is multi-line
Update category for TS4090 to Error
Organize imports within ambient module declarations
Factor worker method out of ts.OrganizeImports.organizeImports
Tidy isAmbientModule
organizeImports: Avoid using full FindAllReferences (#22102)
Merge pull request #22090 from Microsoft/fileDeletedWatchClose
Use refcounts on the resolution so we arent going through failed lookup locations when resolutions are cached.
Allow characters in JsxText inside JsxFragment that would not normally scan
isDeclarationName: support ComputedPropertyName (#22123)
Simplify findContainingList (#22128)
Minor cleanup in getRenameInfoForNode (#22130)
Use the module cache to resolve non relative module name as well
Add tests for module resolution order and reuse
Simplify uses of getPossibleSymbolReferencePositions (#22099)
Simplify isJumpStatementTarget and isLabelOfLabeledStatement users using type predicates (#22100)
Mark getOccurrences as deprecated in protocol.ts like it is in services/types.ts (#22067)
Fix js-prototype-assignment on declarations
Code cleanup
Incremental prototype+prototype assignment work
Trace should write messages to the logger
First draft of prototype assignment
Fix bug: don't call `addIndirectUser` if we're not tracking indirect users (#22121)
LEGO: Merge pull request 22122
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 22115
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 22109
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 22103
LEGO: check in for master to temporary branch.
Merge pull request #22007 from amcasey/UnusedImports
Separate isGlobalCompletion from CompletionKind (#22074)
Just map type variables to constraints at certain positions for narrowing so that we do not map primitives (#21384)
Make getTextOfIdentifierOrLiteral and getEscapedTextOfIdentifierOrLiteral only accept Identifier | StringLiteralLike | NumericLiteral (#22002)
Close the file watcher if present for the source file
Add test case when the deleted file's watch is not closed
Merge branch 'master' into watchOptions
fixClassDoesnotImplementInheritedAbstractMember: Don't perform fix for same class twice (#22073)
getSemanticDocumentHighlights: Use `toMultiMap` helper (#22059)
Update LKG (#22085)
LEGO: Merge pull request 22086
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 22079
LEGO: check in for master to temporary branch.
Set up structure of prototype assignments
Cleanup new code in binder
Use 'append' in chunkObjectLiteralElements (#22068)
Merge pull request #21990 from Microsoft/documentExportAssignment
Filter FAR results to initial SourceFile
Fix bug: Handle QualifiedName in getMeaningFromRightHandSideOfImportEquals (#21779)
Search till root just like tsc when the projectRootPath specified doesnt contain the info.path Fixes #21209
Support nested prototype declarations
Remove unneeded circleci branch in CircleCi config. (#22017)
Implement ts.OrganizeImports.removeUnusedImports
Better error message for excessive instantiation depth
Merge branch 'master' into js-object-literal-assignments-as-declarations
Update user tests (#22056)
Merge branch 'master' into js-object-literal-assignments-as-declarations
LEGO: Merge pull request 22055
LEGO: check in for master to temporary branch.
Remove assert hit by chrome devtools+update baselines
replace element access if suggession is not a valid identifier
LEGO: Merge pull request 22043
LEGO: check in for master to temporary branch.
Propagate wildcard type in union types
Accepted baselines.
Apply 'no-unnecessary-type-assertion' lint rule (#22005)
Add comment to isGlobalCompletion (#21973)
Supports more locations for completions contextual types (#21946)
Have Symbol#isReferenced check the SymbolFlags of the reference (#21996)
Fix the assert for undefined leaf in LineNode (#21924)
add template to jsdoc completion (#21978)
Merge pull request #22004 from amcasey/FARBadImport
Port generated lib files (#22003)
Remove redundant null check
Merge pull request #22001 from amcasey/OrganizeImportsMissedCommits
Use correct lowercase name
Make FAR handle non-existent imported symbols
Merge pull request #21751 from felicianotech/circleci
typingsInstaller:Remove triple-slash references (#21982)
Group imports before sorting and coalescing
Merge pull request #21909 from amcasey/OrganizeImports
Address PR feedback
Fix issues
Separate OrganizeImports into its own namespace and file
Fix lint errors
Introduce an organizeImports command
getTextOfPropertyName: Assert input value is a PropertyName (#21981)
Document 'ExportAssignment' slightly.
Simplify getBraceMatchingAtPosition (#21979)
Accept new baselines
Support recursive conditional types
textChanges: Clean up handling of newLineCharacter (#21970)
textChanges: Simplify getChanges (#21971)
Simplify getOccurrencesAtPosition (#21977)
Merge pull request #21947 from Microsoft/fixKeyofWildcard
Simplify bindPropertyAssignment inner loop
Move skipParentheses to utilities
Add symbols for just-added test
Merge branch 'master' into js-object-literal-assignments-as-declarations
Further cleanup
Cleanup in binder: rename and move
Fix bug: Interface type parameter merged with property is not unused (#21966)
Handle non-preserved const enums in debug messages (#21945)
Naming and duplication cleanup
Clean up js decl code in checker+utilities
Add isStringLiteralLike helper (#21953)
Support @param tag on property declaration initializer (#21907)
Accept new baselines
Add regression tests
Instantiation of 'keyof T' for wildcard type produces wildcard type
assertItemInCompletionList: Fix error messages (#21908)
fix typo in intellisense (#21914)
Clean up bindPropertyAssignment
Merge pull request #21927 from amcasey/JakeLint
Fix jake lint on Windows
Restrict declaration initializers too
Refactor binder and update baselines.
Support getting string literal completions based on a type argument constraint (#21168)
Correctly merge JS decls
Merge pull request #21919 from Microsoft/mappedTypeModifiers
Accept new baselines
Add tests
Add Required<T> to lib.d.ts
Accept baseline changes
Merge pull request #21910 from Microsoft/projectUpdateOnFileOpenClose
Handle the delayed updates due to user action correctly when ensuring the project structure is upto date Fixes #20629
Allow +/- to prefix 'readonly' and '?' modifiers in mapped types
Clean up findPrecedingToken and avoid returning whitespace-only jsx text token (#21903)
Merge pull request #21866 from Microsoft/fixIndexedAccessWildcard
Changed "Duplicate Identifier" to "enum cannot be merged..." (#18579)
Merge pull request #21900 from Microsoft/fix21620
Repro scenario for finding no project of #20629
Refactoring project updates in openFile
importFixes: Fix bug by using replaceNode and removing changeIdentifierToPropertyAccess (#21898)
Clarify assumptions in verifyImportFixAtPosition (#21899)
Merge pull request #21897 from Microsoft/fix21626
Fix emit when binder treats exported const as namespace
Merge pull request #21896 from Microsoft/fix21878
Fix duplicate label in es2017 async function
Merge pull request #21895 from Microsoft/jsxTagCompletion
Revert BOM emit change
Fix completion of jsx attributes in self closing element Fixes #21844
Give MethodDeclaration and MethodSignature parent types (#21892)
Port generated lib files (#21889)
documentHighlights: Handle some invalid modifier locations (#21893)
Fix error message for implicit-any property in object literal with symbol key (#21883)
Fix #21848: Allows to mutate `const` with non-null assertion (#21873)
Merge branch 'master' into fixIndexedAccessWildcard
Merge pull request #21845 from amcasey/GH21793
Multiple telemetry debug assert failure fixes (#21886)
Merge branch 'master' into fixIndexedAccessWildcard
Merge pull request #21839 from Microsoft/fixStructuralIdentity
Accept new baselines
Add regression test
Wildcard instantiation of indexed access should be wildcard
add beautifier rule for space after close paren and destructure bracket (#21859)
PR template typo: labeled / labelled (#21854)
Add type infer formatting (#21850)
LEGO: Merge pull request 21857
LEGO: check in for master to temporary branch.
Harden Extract Symbol against symbols without declarations
Merge pull request #21849 from amcasey/GH21816
Handle class declarations without names in Extract Symbol
Merge pull request #21835 from amcasey/GH21786
Merge pull request #21833 from amcasey/TextChangesRange
Handle variable declaration without initializer in Convert to ES6 Module
Call replaceNode rather than replaceRange
Merge pull request #21832 from amcasey/TextChangesSeparator
Update tests and baselines
Fix bogus jsdoc error
Merge branch 'master' into fixStructuralIdentity
Eliminate ChangeMultipleNodesOptions in favor of smart separators
Merge pull request #21847 from Microsoft/predefinedConditionalTypes
findAllRefs: Fix bug for `export` not at top-level of a module/namespace (#21846)
Allow window. prefix in default-assignment JS decl
Handle empty declaration list in Convert to ES6 Module (#21843)
Accept new baselines
Update tests
Add Exclude, Extract, NonNullable, ReturnType, and InstanceType types
Merge pull request #21004 from uniqueiniquity/updateATA
Add assertions for bad symbol declaration (#21837)
findAllReferences: Don't fail on broken re-export (#21841)
Fix bug: handle missing symbol.parent for non-accessible symbol (#21834)
Accept new baselines
Add tests
Add higher order structural identity relations
Return baselines to original state
Support function/class in JS nested decls
Handle case where package.json and package-lock.json don't agree
Merge pull request #21781 from amcasey/TextChangesReplace
Assert getExportEqualsLocalSymbol returns  a defined result (#21831)
Merge pull request #21782 from Microsoft/fixIdenticalConditionalTypes
Accept new baselines
Add tests
Properly detect identical conditional types in caching logic
4-nested object-literal assignment works in JS
Introduce *WithNodes paralleling textChanges.Replace*
Eliminate replaceWithSingle in favor of replaceRange
Change the meaning of useNonAdjustedStartPosition
Recursive object-literal-assignment declarations
In getSymbolAtLocation, return undefined instead of unknownSymbol (#21774)
Simplify TextSpan creation (#21306)
Add Scheduled Workflows/Cron.
Print deferred mapped symbols 1 level deep (#21311)
refactor: use union type in `DateConstructor` (#21757)
Merge pull request #21558 from Microsoft/symbolAndTypesOfString
Merge branch 'master' into symbolAndTypesOfString
Refactor JS static property assignment binding
Fix #20805 (#21755)
completions: Add assertions that symbols are defined (#21764)
Merge pull request #21750 from Microsoft/memberCompletionOfUnknownRightSideOfImport
Merge pull request #21743 from Microsoft/defaultProjectForFile
Don't use `export function` for a function whose name differs from its exported name (#21739)
hasSameKeys: Simplify and optimize for identical maps (#21763)
Fix formatting of conditional types (#21762)
Add `-dev` to version patch number in master (#21741)
Move insertSorted from server to core, use for diagnostic collections (#21401)
Merge pull request #21744 from Microsoft/fixGetConstrainedTypeParameter
getSpecialPropertyAssignmentKind uses type guards
Update baselines
Improve contextual type skip in checkObjectLiteral
Fix the member completion returned on right side of the import when it does not resolve to any symbol Fixes #20794
Merge pull request #21665 from armanio123/AddFileToLanguageServiceDisabled
Try out CircleCI.
LEGO: Merge pull request 21747
LEGO: check in for master to temporary branch.
Fix #21641, Add indirect location for default imports for synthetic defaults (#21703)
Merge pull request #21737 from Microsoft/fixDeferredConditional
Test:`o.x = o.x || {}` assignments in JS
Accept new baselines
Add regression test
Support `o.x = o.x || {}` assignments in JS
Fix getConstrainedTypeParameter function
Fix getDefaultProjectForFile check Fixes #21738
Don't check modifier legality, highlight anyway (#21335)
Merge pull request #21740 from Microsoft/gotoDefinition
Avoid the class declaration not found assert when the new expression doesnt contain construct signature
Construct signature is valid signature declaration Fixes #21501
Updated baseline
Simplify use of FindAllReferences in inferFromUsage (#20551)
Add test case when new expression target is not Class declaration
Removed internal on private property
Merge pull request #21709 from Microsoft/inferredTypeParameterConstraints
fix: `matchedText` module resolution incorrect length (#21647)
Accept new baselines
Add regression tests
Use typeMaybeAssignableTo in definitely false check
Fix bug: support non-Identifier previousToken in importFixes (#21650)
Test:basic `var x = x || {}` support in JS
Support `var x = x || {}` declarations in JS
Fix bug: Check for both "./" and ".\" (#21730)
Merge pull request #21693 from Microsoft/fileChangeThroughDeleteAndCreate
isValidPropertyAccessWithType: Simplify loop (#21725)
Fix space issue in mapped type formatting (#21712)
Get new line before writing log to log correct output
Merge branch 'master' into js-object-literal-assignments-as-declarations
LEGO: Merge pull request 21727
LEGO: check in for master to temporary branch.
Fix bug in normalizeAndPreserveTrailingSlash: For "./", return "", not "/" (#21704)
Accept new baselines
Add test
Discard constraint inferences of the type parameter itself
LEGO: Merge pull request 21717
LEGO: check in for master to temporary branch.
Accept new baselines
Add tests
Merge branch 'master' into inferredTypeParameterConstraints
Instantiate inferred type parameter constraints
Added backward compatibility and PR comments
Fix the lint error
Missing files are versions are stored as number
Fix ScriptElementKind for path mapping completions (#21695)
Merge pull request #21696 from Microsoft/fixMappedTypeWithSubstitution
Accept baseline changes from code refactoring
Infer constraints for 'infer T' declarations nested in type references
Accept new baselines
Add regression test
Simplify string literal completions (#21415)
Handle source file versioning better since the emit depends on it This ensures that when file is deleted and re-created, the file version isnt same to ensure emits correctly Fixes #21444
Handle all instantiable non-primitive types in homomorphic mapped types
Support incomplete identifier in JSX initializer completions (#21681)
Remove leading directory separator from path mapping completion (#21688)
Merge pull request #21585 from Microsoft/fix21584
Add top-level completion for path mapping (#21686)
Add test case for file change happening as part of file create and delete
fixInvalidImportSyntax: Preserve comment (#21684)
Escape quotes in bracketed completions (#21676)
remove GeneratorFunction global from lib.d.ts (#21615)
importFixes: Bundle module specifiers with import kinds, and replace ImportCodeActionMap with existing functionality (#20700)
LEGO: Merge pull request 21672
LEGO: check in for master to temporary branch.
Merge branch 'master' into vfs
Revert changes to unit tests
Revert changes to unit tests
LEGO: Merge pull request 21667
LEGO: check in for master to temporary branch.
Refactored exceededTotalSizeLimitForNonTsFiles to return the last filename analyzed if the service language is going to be disabled
We fixed formik :D (#21660)
Fix JSX contextual types to not eagerly become apparent, use 2-pass inference for JSX (#21383)
Merge pull request #21649 from Microsoft/conditionalTypesASI
LEGO: Merge pull request 21655
LEGO: check in for master to temporary branch.
Make the PollingInterval, PollingChunkSize, PollingUnchangedThresholds customisable
Rename switch `--emitDeclarationsOnly` to `--emitDeclarationOnly` (#21651)
EntityNameExpression doesn't need to include ParenthesizedExpression (#21588)
Support testing document highlights with "filesToSearch" (#21640)
Accept new baselines
Add regression test
Automatic semicolon insertion before 'extends' in conditional type
Fix assertion: class reference location may be 'default' keyword instead of class name (#21630)
Merge branch 'master' into watchOptions
class Project: implement `log` and `error` from `LanguageServiceHost` (#21635)
Fix return types of NodeBuilder methods (#21619)
Merge branch 'master' into vfs
Merge pull request #21627 from Microsoft/fixExtendsNever
Merge pull request #21610 from Microsoft/fixSharedTypeParameters
Fix bug: replacmentSpan for completion shouldn't include property name that doesn't start with completion name (#21587)
Fix harness getDirectores implementation to not include directory as prefix (#21633)
Detect and prevent creation of bad Identifier (#21581)
Use helper functions more in documentHighlights (#21336)
Accept new baselines
Add tests
Use more permissive wildcard type in definitely false check
Accept new baselines
Add regression test
Fix unintended sharing of typeParameters property in SymbolLinks
Merge pull request #21496 from Microsoft/inferTypes
Merge pull request #21316 from Microsoft/conditionalTypes
Properly classify output text in emitter
Accept new baselines
Add tests
Resolve to type in true branch for 'never extends never'
Merge branch 'conditionalTypes' into inferTypes
Merge branch 'master' into conditionalTypes
Only apply global augmentations before globals are available (#21563)
Accept new user test baselines (#21576)
Array.concat now takes ConcatArray, not ReadonlyArray (#21462)
Collect import helper needs during module info gathering (#21567)
Fix initializer assignability for unique symbol
Support exclamationToken in updateProperty and createProperty (#21577)
Merge pull request #21573 from Microsoft/optimizeUnionIntersection
Assert `exportingModuleSymbol` is defined (#21340)
Leverage existing function for choosing spread validity (#21564)
Initialize more common properties in Symbol constructor
Optimize creation of union and intersection types
Enable CFA on this keyword unconditionally (#21490)
Merge pull request #21559 from Microsoft/fix21543
Create import helpers for named imports if they contain default imports (#21550)
Fix over-aggressive transformation of super properties
Emit the symbol information for declaration names (could be string literals and more)
Add formik to the user suite (#21381)
Rework how default vs local name selection is done to be more correct (#21526)
Allow boolean literals to be generated from contextual types again (#21503)
Merge pull request #21545 from Microsoft/logMoreSysInfo
Log more info about compilation
Merge branch 'master' into vfs
Fix minor typos in documentation (#21538)
Improve debug failure for failed node cast (#21539)
Merge pull request #21537 from Microsoft/donotClearScreenWithDiagnostics
Merge pull request #21379 from amcasey/HighlightingAssert
Do not clear console in watch mode if --diagnostics or --extendedDiagnostics is specified
Don't treat class name contextToken as a completion list blocker if it is not the previousToken (#21534)
Merge pull request #21522 from Microsoft/alwaysGetDiagnosticsWhenEmitting
Removing the test added for cancellation during affected list since thats not possible anymore as the affected files would anyways be semantically checked This is just part missed during revert of 0b79f4a
Always get diagnostics when emitting irrespective of whether its declaration only emit The diagnostics reporting and expression resolution caching is quite intermingled at present. Hence when we tried to get the declaration output without getting diagnostics, the resolution for functions return expression is cached but errors arent reported Symbols arent marked as referenced. So at later time when trying to get the diagnostics since the expression resolution is cached, it doesnt even go through all checks For now get diagnostics irrespective of declaration only output to avoid this issue. Fixes #21518
Merge branch 'master' into vfs
Fix for Issue #21512 and code cleanup for Jakefile.js (#21513)
Update new tests from master
Add FAR test
Merge branch 'master' into vfs
Merge pull request #21505 from armanio123/SetNoEmitTrueJsConfig
Merge pull request #21484 from armanio123/AddBigLibrariesToSafeList
Merge pull request #21426 from amcasey/AssertsForGH20809
Accept new baselines
Add more error case checks
Accept new baselines
Always use strict rules for contravariant inferences
LEGO: Merge pull request 21508
LEGO: check in for master to temporary branch.
Minor fixes
Added Ace and PDFKit to typesMap
Addressed PR comments
LEGO: Merge pull request 21502
LEGO: check in for master to temporary branch.
Avoid crashing when a source file is attempted to merge with another declaration (#21494)
Merge pull request #21497 from amcasey/GH21433
Fix ordering in fourslash tests
Do no path canonicalization during config parsing (#20311)
Merge branch 'conditionalTypes' into inferTypes
Handle trivia in code fix forgotten-this
Clean up build steps
Migrate core.ts
Use the full local file path as the id for a submodule (#21471)
Improved datatables regex
Improved datatables regex
Added datatables library to safelist
LEGO: Merge pull request 21481
LEGO: check in for master to temporary branch.
Accept new baselines
Add tests
Update to use TypeFlags.Instantiable in instantiateSymbol
Merge branch 'master' into conditionalTypes
Merge branch 'master' into conditionalTypes
Merge pull request #21470 from Microsoft/optimizeInstantiation
LEGO: Merge pull request 21475
LEGO: check in for master to temporary branch.
Update authors
fixes tslint warning (#21469)
Add definitelyAssignableRelation
Merge pull request #21466 from Microsoft/isEmittedFileCheck
Log more info about platform for further diagnosis
Simplify isEmittedFile check instead of iterating through all source files. Fixes #21459
PR Feedback
LEGO: Merge pull request 21463
LEGO: check in for master to temporary branch.
Merge branch 'vfs' of https://github.com/Microsoft/TypeScript into vfs
Disable node6 build
Disable node6 build
Merge branch 'master' into vfs
Skip unnecessary type and symbol instantiations
Cache 'any' instantiations for faster conditional type resolution
Merge pull request #21431 from Microsoft/buildDuhpendencies
Fix dependency for 'publish-nightly'.
Check for definitely false condition first
Move bug URLs into assert messages
Infer intersection types for multiple contravariant candidates
Add asserts upstream from #20809
Properly handle inferred type parameters in declaration emitter
Move createTextChange to services/utilities.ts (#21416)
Unused type parameters should be checked by --noUnusedParameters, not (#21167)
Implement fallback hashing algorithm when crypto module is not available (#19941)
Merge pull request #21285 from Microsoft/nested-excess-property-checking-for-discriminated-unions
--emitDeclarationsOnly flag to enable declarations only output (#20735)
Merge branch 'master' into nested-excess-property-checking-for-discriminated-unions
Updated tests
Added NoEmit=true when jsconfig is present
When applying `// @ts-ignore` fix as a group, apply to a line only once. (#21413)
Check 'infer' declarations are in extends clause of conditional type
Change precedence of 'infer T' to match 'keyof T'
Accept new baselines
Remove pointless fourslash tests
Implement type inference in conditional types
Merge pull request #21410 from Microsoft/renameParseConfigFile
Rename parseConfigFile to getParsedCommandLineOfConfigFile
Add watchFile option to use fsEvents on parent directory
Merge branch 'master' into watchOptions
At `<div x=/**/`, completion insertText should be wrapped in braces (#21372)
Merge pull request #21352 from Microsoft/emitApiDiagnostics
Fix bug: Support `this.` completions even when isGlobalCompletion is false (#21330)
Improve assertion in computePositionOfLineAndCharacter (#21361)
Merge pull request #21404 from Microsoft/fix21363
Fix loop labels for for..await
LEGO: Merge pull request 21400
LEGO: check in for master to temporary branch.
Test for (and fix) order of import fixes (#21398)
In fourslash.ts, remove unused exports and use '{}' instead of 'any' (#21377)
Handle missing ts versions in registry
Fix bug in resolveMappedTypeMembers
Only conditional types that check naked type parameter distribute over unions
Merge pull request #21394 from amcasey/GH20559Update
Remove incorrect assert
Add flag to skip qualification check when symbol is already in the process of being qualified (#21337)
Merge pull request #21338 from Microsoft/vscodeDynamicFiles
Update version (#21319)
Make error span for wrong type arguments be just `<...>`,d not `f<...>(...)` (#21390)
Update build script
LEGO: Merge pull request 21387
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 21385
LEGO: check in for master to temporary branch.
Check syntax kind in isDeclarationNameOrImportPropertyName
LEGO: Merge pull request 21375
LEGO: check in for master to temporary branch.
Merge pull request #21370 from amcasey/GH20559
Handle extraction ranges including case clause expressions
Handle extracting case clause expression as constant
Add KeywordCompletionFilters.TypeKeywords (#21364)
Update build script
LEGO: Merge pull request 21366
LEGO: check in for master to temporary branch.
In getSpecialPropertyExport, add debug failure when symbol parent is not a module (#21347)
LEGO: Merge pull request 21354
LEGO: check in for master to temporary branch.
Expose sort and deduplicate diagnostics in Public API Fixes #20876
Merge pull request #21328 from Lazarus535/master
Merge pull request #21345 from Microsoft/fix-jsx-attribute-checking
Fix JSX attribute checking when spreading unions
Merge pull request #21343 from Microsoft/add2-semicolon-to-unused-class-members
Fixes #17080
Add semicolon to unused class member list
Merge branch 'master' of https://github.com/Microsoft/TypeScript
Fixes #17080
Allow dynamic files without external project and also use file names starting with ^ as dynamic file Fixes #21204
Merge branch 'master' into watchOptions
Merge branch 'master' into watchOptions
Fix bug: result of createUnionOrIntersectionProperty may be undefined (#21332)
Merge pull request #21305 from Microsoft/fix-dt-runner-ExpectError-handling
Fixes #17080 https://github.com/Microsoft/TypeScript/issues/17080 Added testcases from the Github bugreport (all working as intended now). Signed CLA.
Merge branch 'master' into vfs
Fixes #17080
Shared code path for getConditionalType and instantiateConditionalType
Fix formatting between for and await (#21254)
Remove unnecessary caching of substitution types
Cache substitution types and remove erasure that was too eager
Revise comments
Accept new baselines
Add tests
More consistent POSIX-like virtual file system.
Fix isTypeOfExpression in compiler API (#20875). (#20884)
add completion filter for function like body (#21257)
Make regexes instantiate only once
Add T is related to { [P in xxx]: T[P] } type relationship
Fix typo in message
Merge pull request #21312 from Microsoft/easierPrerelease
Move assertion to realpath evaluation
Allow for undefined return from TypeCheckerHost.getSourceFile to correspond with implementation
Handle failure to properly resolve type reference directives
Merge pull request #20234 from Microsoft/builderApi
Make nonnull assertions and binding patterns apparent declared type locations (#20995)
For `{ type: "a" } | { type: "b" }`, find references for the union property (#21298)
configureNightly -> configurePrerelease
Create a 'configure-insiders' and 'publish-insiders' task.
Merge branch 'master' into builderApi
Add createProgram on WatchCompilerHost
Disallow conditional type following 'extends'
Fix lint and test errors and add tests
Lint:document parameter name
Merge pull request #21271 from Microsoft/infer-keyof-to-any-not-empty
Respond to CR
Merge pull request #21242 from Microsoft/fix-indexed-access-relation
DT runner:Fix $ExpectError handling
Merge pull request #21281 from Microsoft/isEmittedFileCheckInInvalidateResolution
in goToDefinition, use array helpers and clean up code (#21304)
Fix parsing
Support testing definition range of a reference gruop (#21302)
Handle `undefined` input to firstDefined (#21300)
Avoid spreading array (#21291)
Merge pull request #21292 from Microsoft/fixReverseMappedContravariantInference
LEGO: Merge pull request 21294
LEGO: check in for master to temporary branch.
Accept new baselines
Add regression test
Properly handle contravariant inferences in inferReverseMappedType
Remove unused properties from interface Refactor (#21286)
Merge pull request #21282 from Microsoft/detailDebugFail
Merge pull request #21158 from amcasey/NewlineConsistency
LEGO: Merge pull request 21284
LEGO: check in for master to temporary branch.
Test:Nested excess property checking w/discriminated unions
Nested excess property checks:discriminated unions
Separate code path for conditional type instantiation
Merge pull request #21110 from jack-williams/strict-null-empty-destructuring
Fold newline logic into getNewLineOrDefaultFromHost
External test runner updates (#21276)
Report more detailed info during script debug failure
Check if the file added is emitted file after validating extensions May fix #21274
Handle CodeFixAction in mapCodeAction (#21247)
Add grammar error for `const { ...a: b } = {};` (#21267)
Fix formatter crash for `const { ...a: b } = {};`: forEachChild and emitBindingElement should handle `...` before the propertyName (#21268)
fix #21252, add package-lock.json to npmignore (#21260)
Support parsing `@template {T}` in addition to `@template T` (#21270)
Add a TriviaKind type to allow more specific types (#21237)
computeIndentation: Simplify control flow (#21239)
Move getCurrentDirectory to builder program
Merge pull request #21269 from Microsoft/fix-node_modules-deletion-in-external-compile-runner
LEGO: Merge pull request 21272
LEGO: check in for master to temporary branch.
Infer:string literal->keyof creates any props not {}
Fix deletion of node_modules in DT test
Merge pull request #21238 from Microsoft/issue-template-update
LEGO: Merge pull request 21255
LEGO: check in for master to temporary branch.
Expose createWatchCompilerHost as overload
Do not expose createWatchOfConfigFile and createWatchOfFilesAndCompilerOptions
Make SymbolContext a subtype of TextChangesContext
Merge branch 'master' into builderApi
In formatter, get lineAction directly from applyRuleEdits (#21245)
Merge pull request #21144 from amcasey/GH18274
Replace TextChangesContext with RefactorOrCodeFixContext
Merge pull request #21244 from Microsoft/allowNonExistentInputInGetDirectories
Ensure getNewLineFromContext never returns undefined
Clean up TODOs for #18445
Update issue_template.md
Actually get the apparent type of intersection members when calculating intersection apparent types (#21133)
Update test baselines
Update issue_template.md
Stop explicitly storing newline in refactoring/code fix contexts
Add explanatory comment
Merge pull request #21171 from Microsoft/renameSymLinks
Merge pull request #20515 from Microsoft/fileAddedAfterProjectOpen
Simplify test cases
Add more test coverage for unusedParameterInLambda
Special case arrow functions with only parameter unused
Fix the invalid file/directory location when getting file system entry for caching read directory results Fixes #20607
Minor cleanup in getDynamicIndentation (#21240)
Use packageId for suggestion to install `@types/packageName` (#21241)
Fix #21089: Do not infer from numeric index signature in Object.values and Object.entries (#21129)
Test assignability of indexed access types
Indexed access relation check object+index types
Update issue_template.md
Merge branch 'master' into conditionalTypes
Merge pull request #21215 from Microsoft/fix20461
Add watchDirectory to be using dynamic polling
Test case for watching using fs.watch recursively
Improve test to verify the count of callbacks for the watched directories through watchFile
Add tests for  #19989, #20023
Add support to test when watching directories through watchFile
Allow recursive directory watching on non supported file system
Add option to watch using fs.watch instead of watching through polling
Move the polling settings to sys instead of watch utilities
Fix the api test failures
Add test to verify timeout queues
Watch based on dynamic polling priority frequency queue
Update watchFile to take priority (which is currently polling interval being passed to the host)
Create polling interval as non optional parameter
Simplify check output errors
Rename and restructure non polling watch file
Use toLowercase as utility function
Rearrange the code to have functions after executing code
Simplify and correct the fsWatchFile callback handling with the stats invoked
Fix the error callback of the present directory watcher
Make issue template more enthusiastic
Combine `repeatString` helper functions (#21235)
Make getCombinedCodeFix API public (#21234)
Merge pull request #21205 from uniqueiniquity/resolveTripleSlashReferencePaths
Add completions from the 'this' type (#21231)
Add example to command description
update authors
PR Feedback
Log packageId in --traceResolution (#21233)
Namespaces do not have the same 'var' scope
Fix bug: getNonNullableType before getting signatures of method (#21212)
Add test for catch block without variable
Support labeled statement
Merge pull request #21219 from Microsoft/fix19020
Get packageId for relative import within a package (#21130)
Accept tsserverlibrary.d.ts and fix gulpfile
Add test for file path in tsconfig
Remove the colon from the message in tsconfig.json (#21174)
getStringLiteralCompletionEntries: switch on parent.type (#21169)
Update authors for release 2.7
Remove duplicate implementations
Revert path normalization in favor of checking for backslash
Merge pull request #21217 from Microsoft/fix20146
Merge pull request #21216 from Microsoft/fix19103
Fix destructuring assignment when assignment target is RHS
Merge pull request #21206 from Microsoft/fix20744
Fix symbol-named properties incorrectly requiring alignment with string indexer type
Fix incorrect parenthesization logic for conditional expression branches
Fixes var declaration shadowing in async functions
Optimize the sameMap function
Erase substitution types in type references and type alias instantiations
Merge pull request #21157 from Microsoft/fixEmptyArrayInference
Allow functions to be printed structurally in declaration emit even when they have symbols (#21203)
Fix temp variable emit for names used in nested classes
Add overloads for forEach{Leading,Trailing}CommentRange (#21190)
Add test
Normalize triple slash reference paths at resolve time
Merge branch 'master' into builderApi
Merge branch 'master' into builderApi
Accept corrected baseline (#21201)
Fully deprecate the symbol display builder, reimplement in terms of node builder (#18860)
fix: formatting for chaining methods (#21027)
Properly handle 'any' and 'never' as conditional check type
Accept new baselines
Introduce substitution types to use for constrained type parameters
Accept new baselines
Remove 'T extends U' type constructor
Revert to extends check being part of conditional type
LEGO: Merge pull request 21188
LEGO: check in for master to temporary branch.
Eagerly evaluate S extends T when S is definitely or definitely not assignable to T
LEGO: Merge pull request 21172
LEGO: check in for master to temporary branch.
Enable substitution for object literal shorthand property assignments in the system transform (#21106)
Skip outer expressions when checking for super keyword in binder (#20164)
Rename through all projects with the same file symLink
Merge pull request #21156 from Microsoft/fix-diff-omit
Group intersection code in getSimplifiedIndexedAccessType
Use filter instead of unnecessary laziness
Remove mapped types to never from intersections
Handle jsconfig.json in fourslash tests (#16484)
Add a `getFullText()` helper method to `IScriptSnapshot` (#21155)
Add test case for symLink and rename
Accept new baselines
Add regression tests
Test Diff and Omit
Keep string index from intersections in base constraint of index type
Merge pull request #21149 from Microsoft/tweakRecompileConditions
Accept new baselines
Use contra-variant inferences when co-variant inferences yield 'never'
LEGO: Merge pull request 21154
LEGO: check in for master to temporary branch.
Fix bug: get merged symbol of symbol.parent before checking against module symbol (#21147)
Move createTypesRegistry so more accessible
Fix tests
Revert unnecessary harness changes
Remove timestamp checking and move registry check into jstyping
Update installed types if older than those listed in the registry
Update representation of timestamp file to prevent some extra install calls
Use existing map to hold representations of timestamp files
Allow for local timestamp files and style fixes
Respond to CR
Add test for timestamps write
Add tests
Fix timestamp writing, npm install, and cache behavior
Refactor to avoid errors
Ensure proper JSON writing behavior of timestamps
[WIP] enable updating ATA files
Do not trigger the failed lookup location invalidation for creation of program emit files Handles #20934
Add test where emit of the file results in invalidating resolution and hence invoking recompile
Merge pull request #21131 from amcasey/GH15533
Parse comment on @property tag and use as documentation comment (#21119)
Merge pull request #21134 from Microsoft/fix-recursive-mapped-type-infinite-recursion
Update baselines
push/popTypeResolution for circular base constraints
LEGO: Merge pull request 21142
LEGO: check in for master to temporary branch.
Merge branch 'master' into fix-recursive-mapped-type-infinite-recursion
Test:incorrect mapped type doesn't infinitely recur
getConstraintOfTypeParameter:check circularity in base constraint
Rename getPackageNameFromAtTypesDirectoryWithoutPrefix to getUnmangledNameForScopedPackage
Merge pull request #17912 from Microsoft/fix2-getConstraintOfIndexedAccess
Add regression test for de-dup'ing.
Refine explanatory comment
Rename simplifyIndexedAccessType->getSimplifiedIndexedAccessType
Handle indexed mapped types in transformIndexedAccessType
Add comment explaining test-only workaround
Add regression test
Fix lint error
AsteriskToken should always have length 1 (#21126)
Merge branch 'master' into fix2-getConstraintOfIndexedAccess
Ensure checkParameterInitializer always gets called
Add review suggestions
Print the correct type in the top level chain as the message indicates (#21127)
Merge pull request #21107 from Microsoft/inferredProjectTypings
Use 'append' helper more (#21125)
Use 'append' helper (#21101)
Fix to remove extra space between function and array index. (#21113)
Update initializerType when checking RHS of empty object destructure
Fix WeakSet interface (#19756)
Enforce strictNullChecks for RHS of empty destructuring assignment
Do not always instantiate jsx signatures (#21108)
add fixAwaitInSyncFunction code fix (#21069)
Issue implicit any errors for mapped types without annotations (#21104)
De-dup typing module completions
Unmangle package names from typings during completion
When sending typings request use project's current directory as project root path This ensures that we arent picking typings from folder different from the current directory for the project
Add test for failure to use correct current directory in inferred project Test for #21040
Tidy up code to make it harder to call incorrectly
Add refactoring to convert CommonJS module to ES6 module (#19916)
Include directories in completions for path mapping (#21103)
Fix bug: normalize path after combining (#21100)
Clear jsDocCache for reused nodes (#21099)
For import fix, support path mapping value that begins in "./" or ends in ".ts" (#21035)
Offer per-member diagnostics for incorrectly implemented inherited members (#21036)
Delete redundant test (#21085)
Don't count self-reference in more cases (skip more nodes when setting lastNonBlockLocation) (#21095)
allow const enum in type query (#21083)
Merge pull request #21014 from amcasey/GH19115
Support completions that require changing from dot to bracket access (#20547)
Fixes #20026 (#20157)
Ensure visitor visits the awaitModifier of a ForOfStatement (#21078)
Fix this.timeout not actually applying the timeout within it blocks (#21079)
Mark references to dynamically-named properties as used (#21010)
Synthesize namespace records for proper esm interop (#19675)
Add noDoubleSpaceRule to jakefile (#21077)
Add stricter parameter types for Object.values and Object.entries (#20553)
Update failing test
Merge branch 'jwbay-import-quickinfo'
Merge branch 'master' of https://github.com/Microsoft/TypeScript
feat(es2018): add definitions for Array.prototype.flatten and Array.prototype.flatMap (#20431)
Port generated lib files (#21076)
Merge branch 'master' of https://github.com/Microsoft/TypeScript
Use substring instead of substr (#20578)
Merge branch 'import-quickinfo' of https://github.com/jwbay/TypeScript into jwbay-import-quickinfo
Merge branch 'benbraou-issue20410'
Merge branch 'issue20410' of https://github.com/benbraou/TypeScript into benbraou-issue20410
Fix build failure with newest `@types/mocha` (#21075)
If declaration emit input is a module, output should be a module (#20626)
Use getInternalName not getLocalName (#20168)
Optimized annotation according to Spec (#19906)
Add Related section (#20151)
Merge branch 'master' into issue20410
add support for insertSpaceBeforeTypeAnnotation (#20466)
Merge pull request #20726 from kujon/indexable_types
imporve conditional operator if  missing colon token (#20498)
ignore Initial check if left of DestructuringAsignment (#20906)
fix narrowType check with template literals (#21024)
Merge branch 'master' into builderApi
type-operator-spacing: Just check for presence of space, not double-space (#20817)
Move isObjectLiteralElement to public utilities (#20605)
Support all path mappings that end in "*" in completions (#21072)
Support timeouts in the parallel runner (#20631)
Use emptyObjectType for omitted members instead of unknownType (#20940)
Add helper functions to simplify getCompletionEntryDisplayNameForSymbol (#20552)
Have Set and Map constructors take ReadonlyArrays (#20606)
Fix bug: Resolve module symbol before checking whether module export is a re-export (#20989)
Support find-all-references starting from a `reference path` or `reference types` comment (#21007)
Remove unncessary existence check (#21029)
Fix lint failure (#21073)
Merge pull request #21066 from Microsoft/UpdateSearchGuidelines
Remove 'indexOf' helper, use 'arr.indexOf()' (#20194)
Improve parse error for double comma somewhere inside a call expression (#20399)
Remove mutually-recursive functions (#20425)
Fix invalid cast (#20426)
Port generated lib files (#21071)
Start linting for double spaces (#20820)
Update CONTRIBUTING.md
LEGO: Merge pull request 21060
LEGO: check in for master to temporary branch.
Add release-2.7 to covered branches
LEGO: Merge pull request 21054
LEGO: check in for master to temporary branch.
Merge pull request #20941 from mariusschulz/stringCompletionsForIndexedAccessTypes
LEGO: Merge pull request 21047
LEGO: check in for master to temporary branch.
Merge pull request #20991 from amcasey/GH18794
Merge pull request #21042 from amcasey/cannotFindModule
API: fix types to undefined union (#20909)
Fix conflict between formatting rules (#21038)
Stop limiting getEscapedNameForExportDefault to the first declaration
Convert test from JS to TS
Switch to block-bodied lambda
Merge pull request #20711 from Microsoft/defer-inference-for-recursive-mapped-types
Better name for deferred mapped type:ReverseMapped
Slightly simplify getCodeActions
Make fixCannotFindModule return an empty array if there is no code action
Add regression tests for rename display name
In checkAndAggregateReturnExpressionTypes, treat MethodDeclaration in an object literal same as a FunctionExpression (#20052)
Improve comment
Merge pull request #20924 from uniqueiniquity/jsxSpreadAttributeFormatting
Return string completions for indexed access types
Check for unused getter/setter in classes (#21013)
Only replace `implements` with a comma if the heritage clauses are sensible
Refine extends-to-implements code fix
Fix version of @types/node to 8.5.5 (#21019)
Merge pull request #20883 from HerringtonDarkholme/relax-type-constraint
fix #20449, insert space between decorators (#20491)
findConfigFile can return undefined (#20556)
Allowed trailing commas in type parameter/argument lists (#20599)
Added localization instructions to CONTRIBUTING.md (#20451)
Simplify marker names
Switch the pretty output to use colons to separate file:line:char so that lines are clickable in terminals (#20736)
Add kindModifier to mark if a completion item is for an optional field (#20839)
Correct fullDisplayName returned from rename
Add explanatory comment to FAR call-site
Add regression tests
Handle different default export forms the same way in import code fixes
bug(esnext): add definition for promise.finally (#20511)
Merge pull request #20912 from uniqueiniquity/jsxFragmentFormatting
Log TS Server version and process args  (#20847)
Fix quick info for require template string (#20851)
Update fourslash baselines too
quick fix of indexed access type (#20956)
Print inferred mapped property types as any not {}
Use 'mapDefined' array helper (#21006)
Remove unnecessary existence check (#21005)
Improve find-all-references for redeclared property in a derived interface (#21002)
Add fourslash tests and update missed baselines
add more information to quickinfo for imported symbols
Do not redefine __asyncValues if it already exists (#20460)
Fix quickinfo display of deferred mapped types
Fix printing of deferred mapped types' index signatures
Test:deferred mapped types
Fix printing of deferred mapped types
For `export default foo`, use 'foo' for the completion identifier name, not the module name (#20987)
Simplify DeferredMappedType construction
Add deferred mapped types
Support completions contextual types in more places (#20768)
Merge pull request #20854 from mjbvz/global-plugins-for-inferred
Merge branch 'master' into defer-inference-for-recursive-mapped-types
Use inference for filling JSX attributes in getJsxElementInstanceType (#20973)
Propagate both TypeFlags and ObjectFlags in getSpreadType
Merge branch 'master' into conditionalTypes
Merge pull request #20609 from Microsoft/getRootSymbols
In import fixes, use a ".js" extension if other imports do (#20624)
Call back into getTypeOfFuncClassEnumModule in getTypeOfVariableOrParameterOrProperty if valueDeclaration is irregular kind (#20939)
LEGO: Merge pull request 20978
LEGO: check in for master to temporary branch.
Merge pull request #20928 from Microsoft/initializerWithPropertyAccessUseBeforeDeclaration
Accepted baselines.
Check whether we have a class before testing whether we have a super-class.
Added tests.
LEGO: Merge pull request 20935
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 20930
LEGO: check in for master to temporary branch.
Add method signature handler to getTypeOfVariableOrParameterOrProperty (#20825)
Merge pull request #20910 from uniqueiniquity/allowDynamicNotOpenByClient
LEGO: Merge pull request 20927
LEGO: check in for master to temporary branch.
Update test
Ensure spread attribute formatting options match jsxexpression
Simplify test and add explanatory assertion
Merge pull request #20882 from Microsoft/fixNarrowTypeBySwitch
LEGO: Merge pull request 20919
LEGO: check in for master to temporary branch.
Add formatting tests
Update rules to match JSXElement
Add dynamic file open test
Allow dynamic files script info to be created when not opened by client
LEGO: Merge pull request 20892
LEGO: check in for master to temporary branch.
fix #20018, allow skip constraint when merging interfaces
Accept new baselines
Add regression test
Fix narrowTypeBySwitchOnDiscriminant function
LEGO: Merge pull request 20879
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 20874
LEGO: check in for master to temporary branch.
Merge pull request #20400 from Microsoft/limit-recursive-structured-type-resolution
Merge branch 'master' into limit-recursive-structured-type-resolution
Move recursion limiter to individual resolve* functions
User runner submodule improvements (#20868)
Reset partial memberlist on defered circularity to calculate the correct members (#20179)
Baseline
Load global plugins for inferred projects
Fix higher order inference on indexed access types (#20165)
Not all extended types have symbols (#20827)
Minor cleanup/comments
For import completion, use an existing namespace import (#20457)
LEGO: Merge pull request 20845
LEGO: check in for master to temporary branch.
Update typemock
LEGO: Merge pull request 20834
LEGO: check in for master to temporary branch.
Update build for node 6 to allow private package
Force case sensitive file names by default in tests, revert dd054e6
Show diff in baseline failure (temporary)
Merge pull request #20814 from Microsoft/fixUnionSignatures
LanguageServiceShim.getCompletionEntryDetails: Support undefined options (#20810)
Accept new baselines
Add regression test
Fix 'this' parameter handling in getUnionSignatures
Fix linting error
Fix lint errors
Work around private packages in Node 6
Merge branch 'master' into vfs
LEGO: Merge pull request 20807
LEGO: check in for master to temporary branch.
Additional PR feedback and cleanup
Minor PR feedback
Revert more baselines, add jake task for typemock
Addressed the suggestions
Merge pull request #20416 from JoshuaKGoldberg/tell-me-im-pretty
Converted to enum; marked internal
Merge pull request #19797 from charlespierce/implements_class_error_message
Merge pull request #19204 from Kingwl/fix-completions-with-template-literal-type
Temporarily revert baselines
LEGO: Merge pull request 20781
LEGO: check in for master to temporary branch.
Accept new baselines
Parse xxx? as JSDoc type when not followed by token that starts type
Fix devtools test (#20731)
Don't treat class name as a completion list blocker if the position comes after it (#20762)
Accept baselines
Merge branch 'master' into vfs
Don't add completion for method if the `this` parameter doesn't match (#20616)
Adjust formatting rule priority: Never delete space after `case` (#20615)
Include static 'this' accesses in references of class (#20483)
Accept new baselines
Move JsxAttributes and MarkerType from TypeFlags to ObjectFlags
Accept new baselines
bug(esnext) add overloads for flatten
bug(esnext): add definitions for flatten and flatMap
Handle constraints for distributive conditional types
LEGO: Merge pull request 20732
LEGO: check in for master to temporary branch.
Merge pull request #20729 from amcasey/GH19839
Additional test case for contextual type check
Update fourslash baseline
Allow JSXAttributes types to be shortcut-spread into the spread type like normal objects (#19047)
Fix get symbol at location to behave correctly for parameter assignments and jsx attributes (#20706)
Don't insert a blank line after extracted locals at the start of the file
Regression test for GH #20727
Annotate fewer extracted constants with types
Don't insert a blank line after extracted locals
Fixed an incorrect assumption K in Union works with numeric literals
Merge pull request #20713 from amcasey/GH19165
Fixed a mistake, whereby the check for the literal type was satisfied when any (not every) was a literal
Improved error messages for Union index signature params
Better error messages for aliased index types
Re-enable all tests
make jsx attributes mutable locations (#20710)
LEGO: Merge pull request 20720
LEGO: check in for master to temporary branch.
Stop assuming code fix test changes are in the originating file
Removed colors devDependency (#20430)
Add more tests of deferred mapped types
Update spelling
LEGO: Merge pull request 20708
LEGO: check in for master to temporary branch.
Simplify printing of deferred mapped types
Test:XMLHttpRequest inference to PartialDeep<T>
Get it working:
Merge pull request #20640 from uniqueiniquity/revertToJsDocInclusionList
LEGO: Merge pull request 20698
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 20693
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 20690
LEGO: check in for master to temporary branch.
First attempt. Basically broken.
LEGO: Merge pull request 20687
LEGO: check in for master to temporary branch.
Improve conditional type constraint checking
Get resolved module exports in symbol chain and not raw exports (#20661)
Fix typo
Allow multiple star-star globs in one pattern (#20639)
Merge pull request #20545 from RyanCavanaugh/codefixOmnibus
Merge pull request #20679 from RyanCavanaugh/removeLibTodo
Code review
Merge branch 'master' into getRootSymbols
Handle arrays with properties in assert.deepEqual (#20674)
Simplify test case (#20675)
Remove TODO
Inference for conditional and extends type operators
Merge pull request #20664 from RyanCavanaugh/clearResolutionCache
Rename TypeVariable to InstantiableType
Introduce TypeFlags.Instatiable
 Revert merge pull request #20429 (removing chai) (#20654)
LEGO: Merge pull request 20672
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 20666
LEGO: check in for master to temporary branch.
Fix test
Use TypeFlags.UnionOrIntersection not TypeFlags.Union (#20662)
Clear the module resolution cache when new @types appear
LEGO: Merge pull request 20660
LEGO: check in for master to temporary branch.
Make ChangeTracker#newLineCharacter public, to avoid having to pass newLineCharacter around as a parameter (#20574)
Remove unnecessary `getFirstChildOfKind` helper function (#20647)
Merge pull request #20648 from Microsoft/nonprimitive-spreads-to-empty-object
Clean up isGenericXXXType functions
Add 'T extends U' type operator
LEGO: Merge pull request 20646
LEGO: check in for master to temporary branch.
Update chrome devtools user test baseline (#20641)
Test:spread `object` retains lefthandside
`object` spreads to {}
Always check a return expression in a generator (#20621)
Resolve merge conflicts in codeFix
Unshallow submodule clones, update submodule ref (#20636)
Add type alias declarations to inclusion list docs
Revert "Loosen restrictions on jsdoc completion locations"
LEGO: Merge pull request 20638
LEGO: check in for master to temporary branch.
Fix error messeage (#20601)
Preserve literal types in contextual unions (#19966)
Reimplement #20320 differently to handle multiple check orders better (#20588)
Handle `!` following a keyword in isClassMemberStart (#20617)
Fix bug: FunctionDeclaration may have missing name (#20618)
LEGO: Merge pull request 20620
LEGO: check in for master to temporary branch.
Fix return type
Update projects tests to use vfs
Ensure getRootSymbols always works recursively
Numeric separators (#20324)
LEGO: Merge pull request 20586
LEGO: check in for master to temporary branch.
Remove unused internal function (#20582)
When user provided resolution is used, invalidate resolutions for all files In this case there is no way to tell if resolution has changed so resolution cache wont have answers
Add type relationships and distribute over union types
LEGO: Merge pull request 20579
LEGO: check in for master to temporary branch.
Merge branch 'master' into builderApi
Rename on WatchBuilderProgram
Api to get underlying program from builder
Create api to create Watch<BuilderProgram>
Change builder to BuilderProgram so it is similar to operating on program
Merge pull request #20467 from Kovensky/array-from-union-fix
Use builder state in the semantic/emit builder as well
Merge pull request #20517 from gagoman/16900
Merge pull request #20543 from Microsoft/in-keyword-narrow-string-indexer
LEGO: Merge pull request 20554
LEGO: check in for master to temporary branch.
Bail at the correct point when containingFunction is undefined
Convert builder state to mutable data, so that later we can create builder Program out of this
From builder use the builderState containing references and file infos
Fixes #20475 (no repro found yet)
Fixes #20542
Fixes #20527
Fix #20520
Fix #20523
Hack to allow concat to work even when an Array isn't assignable to ReadonlyArray (#20455)
Support a "getCombinedCodeFix" service (#20338)
Create builderState so that when FilesAffectedBy is only api needed, we arent tracking changed files
Narrowing of `in` handles string index signatures
Test:`in` doesn't narrow types with string indexers
Few renames
LEGO: Merge pull request 20532
LEGO: check in for master to temporary branch.
Merge pull request #20465 from Microsoft/dev/aozgaa/tsserverVersion
Merge branch 'master' into builderApi
test version request
Merge branch 'master' into dev/aozgaa/tsserverVersion
update descriptions
Update the builder to take options aligning with the WatchCompilerHost
Merge pull request #20464 from RyanCavanaugh/fix20402
fix docs for Math.ceil and Math.floor (#16900)
Dedupe local types from ATA and reuse old programs correctly
Update the project graph before checking if opened file is present in the existing project Fixes #20017
For import fix, prefer symlink over a real path (#20395)
Merge pull request #15256 from IdeaHunter/in-typeguard
Minor cleanup for label completions (#20502)
Use InternalSymbolName.Default more (#20480)
add supports of completion label list (#20362)
Update the emitting file, reporting errors part of the watch api
Add new error message when class implements class #19793
Add getDefaultLibLocation and getDefaultLibFileName and remove system from WatchCompilerHost
Move the system.write to trace on WatchCompilerHost
Handle setTimeout, clearTimeout, clearScreen and report watch Diagnostics
Move internal functions in the watch to separate namespace
Move watchFile and watchDirectory to WatchCompilerHost
Update the WatchCompilerHost creation
More functions moved from system to WatchCompilerHost
Change isTypePresencePossible, accept baseline
Initial implementation of conditional type operator
Immediately respond to `applyCodeActionCommand` requests (#20448)
Change type narrowing for optional properties
Remove whitespace
Add initial support for 'in' typeguarding
Instead of using system as object on WatchHost, create WatchCompilerHost that combines the functionality
Merge branch 'master' into builderApi
Merge pull request #20427 from JoshuaKGoldberg/watch-immediate-clears
Merge pull request #20291 from Microsoft/dev/aozgaa/tsserverProjectTestOrganization
Add textChanges methods to insert nodes at the start of multiline bodies (#20445)
Lazily compute signature type predicates (#17600)
Merge branch 'master' into watch-immediate-clears
Unit test failure; clearHostScreen function
Re-added blue color, with corrected 94m code
Accept Iterable|ArrayLike union in Array.from, test
Update baseline
add status request
Make before and after program create callbacks optional
Update baselines
Merge branch 'master' into fix2-getConstraintOfIndexedAccess
Rename WatchHost.moduleNameResolver to WatchHost.resolveModuleNames to align with compiler host
LEGO: Merge pull request 20462
LEGO: check in for master to temporary branch.
Rename Watch.synchronizeProgram to getProgram and return the updated program as part of this api
Merge pull request #20429 from Microsoft/unchai
Rename getProgram to getExistingProgram
Support exponentiation operator in const enums (#20424)
Merge branch 'master' into builderApi
Use 'filter' array helper (#20452)
Fill "empty" structured type marker with early symbols
Update test that import code fix doesn't use node_modules global import if classic resolution is set (#20453)
Update user tests baselines
Remove 'debugger' statement from test (#20444)
Fix deepEqual emptyArray tests
Merge pull request #20413 from JoshuaKGoldberg/patch-1
Remove dependency on chai
Added console clearing with a message to --watch starts
LEGO: Merge pull request 20420
LEGO: check in for master to temporary branch.
Fixed prettyContextNotDebugAssertion.errors baseline
Prettified timestamps and error reports in --pretty
Comment typo fix in es2015.ts: "propety"
fix(es2018): add a target and an initial lib (#20385)
"tsc --watch should clear screen on new compilation" Two: Electric Boogaloo (#20389)
LEGO: Merge pull request 20406
LEGO: check in for master to temporary branch.
Make sure autoArrayType is unique, even if no lib is available (#20344)
Always instantiate the extends clause, even in the presence of an error (#20232)
Merge pull request #20404 from Microsoft/fixUntypedFunctionCall
Accept new baselines
Add regression test
Check apparent type instead of function type in isUntypedFunctionCall
Remove periods from refactor/quickfix messages (#20237)
Merge pull request #20370 from Microsoft/cutoff-inference-for-recursive-mapped-types
Test:Mutually recursive types do not recur infinitely
Limit recursive structured type resolution
Simplify mappedTypeStack cache key
mappedTypeStack uses a string based on symbols
Merge pull request #20380 from Microsoft/literalContexts
Support a 'recommended' completion entry (#20020)
Merge pull request #20369 from minestarks/noemitcos
compileOnSaveAffectedFileList shouldn't return any files for noEmit projects
Merge pull request #20373 from amcasey/PropertyUnderscore
Merge pull request #20198 from Microsoft/jsdoc-values-as-namespaces
Don't mutate symbol flags after creation
Don't suggest import completions for /a/node_modules if we're in /b (#19928)
Accept new baselines
Update baselines with new SymbolFlags
Preserve literal types only when contextual type has literals of same kind
Merge branch 'master' into jsdoc-values-as-namespaces
Add SymbolFlag for containers of JS special decls
Merge pull request #20359 from amcasey/CorrectEnumBaselines
Fix whitespace lint
Test:inference to self-referential mapped type
Miscellaneous fixes to avoid duplicate completions (#20349)
Cut off inference for recursive mapped types
LEGO: Merge pull request 20368
LEGO: check in for master to temporary branch.
installTypesForPackage refactor: Trigger even if resolved to a ".js" file (#20353)
Update affected fourslash test
Don't offer to prepend an underscore to the name of an unused private property
Correct errorForUsingPropertyOfTypeAsType03
Merge pull request #20335 from amcasey/TS2713
handle multiline jsx strings correctly, emit escapes in jsx attributes correctly (#20309)
Elide import namespace from which only const enums are used (#20320)
Add baselines for the current state of enum members
Handle all non-namespace types
fix noImplicitReturns check when strictNullChecks is false (#20326)
In navigation tree, don't merge static with non-static (#20347)
LEGO: Merge pull request 20351
LEGO: check in for master to temporary branch.
prefix top-level describe clauses in tsserverProjectSystem
Merge branch 'master' into dev/aozgaa/tsserverProjectTestOrganization
revert 0a6a568d and 0e4b8196
Make AccessorDeclaration.body optional (#20329)
Enable ban-types lint rule (#19586)
Test:js object literal assignment as declaration
JS Object literal assignments are declarations
Apply TS2713 to classes
Remove location of other declaration from "Subsequent x declarations must have same type" errors (#20206)
LEGO: Merge pull request 20327
LEGO: check in for master to temporary branch.
Handle parentless nodes in nodeIsDecorated (#20314)
Accept baseline changes
Remove temporary error-avoidance hack
Update chrome devtools baseline
LEGO: Merge pull request 20316
LEGO: check in for master to temporary branch.
JS static prop assignments don't need same type
Error when LHS of instanceof is Union of Primitives #18519 (#19063)
Merge branch 'master' into jsdoc-values-as-namespaces
Disable import fix for method of 'export =' value (#20208)
Binder:clean up bindPropertyAssignment and friends
JS static properties:fix multi-file references+merging
Move utilities for getting type parameter constraints and defaults from public lazy members to services (#20162)
Handle shebang in import code fix (#20306)
Support parameter properties in `getRelatedSymbol` (#20202)
Support both baseUrl and relative paths when adding missing import (#19724)
Remove length limit on spelling suggestions; use levenshteinWithMax for performance (#19937)
LEGO: Merge pull request 20303
LEGO: check in for master to temporary branch.
Allow possibly undefined destructuring in ambient parameter declarations (#20230)
LEGO: Merge pull request 20297
LEGO: check in for master to temporary branch.
Deprecate virtualFileSystemWithWatch
Update chrome dev tools definitions
Update chrome-devtools baseline
Add empty 'module' declarations for chrome-devtools
Tests:more JS static property assignments
Fix type-annotation declaration in JS files
reindent
enable running all tsserverProjectSystem tests
Migrate tsserverProjectSystem to vfs
Always put assignments in locals.
Merge pull request #20173 from RyanCavanaugh/fixTypingsInstallerAgain_master
replaced @parm typo with @param (#20277)
LEGO: Merge pull request 20262
LEGO: check in for master to temporary branch.
Fix #19959 and #19958: Remove un-localizable messages (#20019)
LEGO: Merge pull request 20255
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 20246
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 20243
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 20236
LEGO: check in for master to temporary branch.
Merge pull request #20229 from Microsoft/fixParenthesizedAsyncArrowFunction
Switch to function spies
Handle emit only declaration file to always produce declaration file and skip the diagnostics check
To handle cancellation token, remove changed/affected files from the changeset only after getting the result
Merge pull request #20233 from amcasey/BlockCompletions
Port generated lib files (#20213)
Update test baseline
Offer global completions in all blocks
Update baselines
Binder-based prop-assignment decls: messy version
Set program as affected if emitting/diagnostics for whole program
Use the results from affected file enumerator apis as Affected File result
Make the builder state as internal and expose builder instead of builder state
Make the versions in the source file non zero when the source file is created
Add api to get the dependencies of the file
Allow watch host to specify module name resolver
Lint errors fix
Expose the watch and builder API in the typescript.d.ts
Use builder state to emit instead
Accept new baselines
Add regression test
Merge pull request #20211 from amcasey/GH20084
LEGO: Merge pull request 20226
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 20220
LEGO: check in for master to temporary branch.
Removes redundant comments (#20214)
Migrate tscWatchMode to vfs
Merge pull request #20212 from amcasey/ToEventArgs
Make sure 'async' isn't treated as a parameter modifier
Catch illegal jsdoc tags on constructors (#20045)
Use stricter types for event bodies
Use {} instead of any to improve type checking
Update public API baseline
Update project on PackageInstalledResponse
Unswap arguments
LEGO: Merge pull request 20210
LEGO: check in for master to temporary branch.
Fix visibility checking of mutually recursive exports (#19929)
Merge branch 'js-ctor-props-type-annotation-as-declaration' into jsdoc-values-as-namespaces
JS Property assignments create namespaces (hacky)
More tests and update baselines
JS:Treat type-annotated uninitialised vars as declarations
Add dt baseline folder to gitignore (#20205)
Support getJSDocCommentsAndTags for special property assignments (#20193)
Clean up outliningElementsCollector (#20143)
Update chrome-devtools baseline
Merge pull request #20181 from amcasey/TiRootPath
Merge pull request #20180 from amcasey/CaseSensitiveSafeList
Merge branch 'master' into jsdoc-values-as-namespaces
Test:Type references to nested JS classes
JS:resolve nested static classes+on func/class exps
Merge pull request #20166 from Microsoft/definiteAssignmentAssertions
Always send a response to installTypings even if all types are cached
Correct project root path passed to Typings Installer
Check hasOwnProperty before copying property
Convert legacy safe list keys to lowercase on construction
Port generated lib files (#20177)
Clean up lexical classifier (#20123)
Allow curly around `@type` jsdoc to be optional (#20074)
Parallel runner shouldnt print nan and freeze on unestimatable tests when above batch count (#20176)
Exclude global types from devtools user test (#20172)
Merge branch 'master' into definiteAssignmentAssertions
Accept new baselines
Add tests
Fix build in the presence of definite assignment analysis (#20170)
Merge pull request #20142 from Microsoft/fixTypeVariableInstanceof
Merge branch 'master' into definiteAssignmentAssertions
Merge pull request #20075 from Microsoft/strictPropertyInitialization
Merge pull request #20106 from Microsoft/jsdoc-errors-become-semantic-errors
Allow '!' only on variable declarations within variable statements
Merge branch 'master' into jsdoc-errors-become-semantic-errors
Cache result of isCheckJsEnabledForFile in getSemanticDiagnosticsForFile
Accept new baselines
Definite assignment assertion '!' on variable and property declarations
Accept new baselines
Add tests
Handle type variables in isTypeDerivedFrom
Accept new baselines
Add test
Add definite assignment checks for property accesses in constructor body
Simplify checkPropertyAccessExpressionOrQualifiedName
Merge pull request #20115 from Microsoft/dev/billti/port20109toMaster
Merge pull request #19864 from Microsoft/dev/aozgaa/eventPortTelemetry
test overriding Session.event
Update editorServices.ts
Fix semantic merge conflict (#20119)
LEGO: Merge pull request 20120
LEGO: check in for master to temporary branch.
Moved minified file exclusion
Fixed internal safelist
For import completion, if multiple re-exports exist, choose the one with the shortest path (#20049)
Merge branch 'master' into strictPropertyInitialization
Bundle fileName with CodeActionCommand (#19881)
Fix lint error
Accept new baselines
Add test
Exclude abstract properties from strict initialization checks
Update chrome devtools baselines
Test:ts-ignore works on jsdoc syntax errors
Report jsdoc errors as semantic errors
Simplify documentHighlights (#20091)
Accept new baselines
Add tests
LEGO: Merge pull request 20103
LEGO: check in for master to temporary branch.
Revise return control flow graph construction logic
Support semantic classification of alias (#20012)
In `getContextualTypeForBinaryOperand`, only need to look for `=` assignment operator, not e.g. `+=` (#20037)
lineAction: Use an enum instead of true | false | undefined (#20086)
LEGO: Merge pull request 20092
LEGO: check in for master to temporary branch.
cleanup NodeTypingsInstaller
remove comments
type `event` callback correctly
update baselines
defer callback and remove handler object
Merge pull request #20082 from armanio123/KendoOptionalMin
Exclude static properties
Support arbitrary prototype property assignments in navigation bar (#19923)
Fixed unbalanced parenthesis
Modified Kendo regex to include -ui folders and files without min
LEGO: Merge pull request 20081
LEGO: check in for master to temporary branch.
Merge pull request #19227 from Microsoft/infer-object-type-from-string-literal-to-keyof-T
Merge pull request #20048 from RyanCavanaugh/fixSafeList
Apply safelist exclusions even when include is not specified; recompute project contexts when installer reqs finish
Treat exhaustive switch as last statement in function #18882 (#20063)
Detect re-exports from "export *" in completions (#20043)
Strip "/index" from import fix module specifiers (#19962)
Accept new baselines
Add very error-ful test for chrome devtools js (#19992)
Merge pull request #20071 from Microsoft/error-on-excess-spread-arguments
Update tests
Add --strictPropertyInitialization compiler option
Mark returnFlowNode property as internal
Add strict property initialization checks
Attach return control flow graph to contructor declaration nodes
Improve spread arity mismatch error messages
Merge pull request #19976 from Microsoft/optimizeParser
Update spread tests w/new excess arguments error
Error on excess spread arguments
Revert "Change "isThisless" predicates to "mayReferenceThis" predicates (#20036)" (#20054)
make eventSender required for TypingsInstaller
baseline accept
expose just eventSender
Move event into IoSession
Merge pull request #15473 from Microsoft/dynamicNames
Use correct base primitive type
Use correct base primitive type
PR feedback
Merge branch 'master' into dynamicNames
LEGO: Merge pull request 20059
LEGO: check in for master to temporary branch.
move socketSender to IOSession
Treat `...` in jsdoc type as creating a synthetic rest parameter -- not as an array type (#19483)
Change "isThisless" predicates to "mayReferenceThis" predicates (#20036)
smartIndenter: Don't indent after control-flow ending statements like `break;` (#20016)
Merge pull request #19993 from weswigham/mark-submodules-dirty
LEGO: Merge pull request 20041
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 20029
LEGO: check in for master to temporary branch.
lint more
lint
use arrow to capture this
Merge branch 'master' into dev/aozgaa/eventPortTelemetry-IOSessionSocket
update baselines
expose event to overwrite in SessionOptions
Merge pull request #19655 from Microsoft/instantiate-this-in-type-parameter-constraints
Rename and inline functions
accept baseline
factor out socket-event-sending
Have CompletionEntryDetails source use a relative path (#19917)
Synchronize getEntityNameForDecoratorMetadata and serializeUnionOrIntersectionType (#19879)
Remove dead code that didn't get removed in #19979
Merge branch 'master' into optimizeParser
Update JSX intrinsic element test to match babel’s (#19946)
Accept new baselines
Merge branch 'master' into optimizeParser
LEGO: Merge pull request 20014
LEGO: check in for master to temporary branch.
Always require '=' before parsing an initializer (#19979)
LEGO: Merge pull request 20004
LEGO: check in for master to temporary branch.
react starter needs node ref, accept fixed leveldown (#19994)
Fix crash on non-dts-require (#19980)
Handle binding elements while looking for invalid `await` and `yield` (#19972)
Merge pull request #19991 from Microsoft/fix-bom
Make BOM a constant
Merge pull request #18925 from Microsoft/fix-spread-contextually-typed-by-binding-pattern
Treat `{}` in `T = {}` as `any` in JS files (#19977)
Improve lookahead for arrow functions to reduce speculative parsing
Also make clones/updates shallow
mark all submodule changes as ignored
Use UTF8 BOM in emit
Merge branch 'master' into dynamicNames
Revert "Break out of speculative parsing on bad parameter initializer (#19158)" (#19975)
Fix getReturnTypeFromBody widening
Merge branch 'master' into instantiate-this-in-type-parameter-constraints
Merge branch 'master' into fix-spread-contextually-typed-by-binding-pattern
Merge pull request #19968 from uniqueiniquity/jsxFragmentFix
Accept new baselines
Update baseline
Add test
add types for escape and unescape methods #18813 (#19015)
Extract JSXChildren checking
Use TokenFlags.PrecedingJSDocComment to guide JSDoc comment processing
Break out of speculative parsing on bad parameter initializer (#19158)
LEGO: Merge pull request 19964
LEGO: check in for master to temporary branch.
Merge pull request #19934 from Microsoft/add-starter-kit-to-user-tests
Merge branch 'master' into infer-object-type-from-string-literal-to-keyof-T
Migrate compileOnSave tests to vfs
Partial deprecation of non-vfs TestServerHost
Introduce TokenFlags enum
Merge branch 'master' into vfs
Merge pull request #19926 from Microsoft/improvePrimitiveComparable
LEGO: Merge pull request 19940
LEGO: check in for master to temporary branch.
Merge pull request #19935 from Microsoft/fixDiagnostics
Fix crash when running tsc with -diagnostics
Improve assert message
Merge pull request #19542 from RyanCavanaugh/fix19533
LEGO: Merge pull request 19932
LEGO: check in for master to temporary branch.
Merge pull request #19930 from Microsoft/constEnumWithWatch
Deprecate GeneratedFile
Merge pull request #19925 from Microsoft/fixUpSpecGenScript
Simplify literal/unique symbol widening
Update baselines
Fix quote lint
Add test w/submodules for our starter kits
Ensure that enum member value is computed before using it Fixes #19898
Deprecate CompilerResult
ExternalCompileRunner works with submodules
Merge pull request #19912 from Microsoft/fixEmptyArrayInference
Fix typo
Add test
Make comparable relationship bidirectional for primitive types
Add 'scripthost' to 'lib' for the 'generate-spec' target.
Fail fast on synthetic nodes in services (#19894)
Merge pull request #19887 from Microsoft/dt-runner-excludes-ExpectError
Use ts.stringContains instead of String.indexOf
Address PR comments
Simplify setting constEnumOnlyModule (#19735)
LEGO: Merge pull request 19914
LEGO: check in for master to temporary branch.
Accept API baseline changes
Accept new baselines
Update test
Update tests
Give lowest priority to inferences made from empty array literals
 fix completions for string literal types with template string (#19162)
Add support for variations in module/target in compiler tests
Consider the commonjs module indicator as a module indicator (#18490)
Retire Harness.compileFiles
Update Harness.compileFiles to use vfs
LEGO: Merge pull request 19890
LEGO: check in for master to temporary branch.
DefinitelyTypedRunner skips ExpectErrors
Remove commented tests
Allow applyCodeActionCommand to take an array (#19870)
For import completion of default import, convert module name to identifier (#19875)
Merge
Log more usefully when this test fails
Format + new regex
Remove testcases we don't like
If there is an `export default x;` alias declaration, disallow other default exports (#19872)
Mark all parameters as needed for metadata when one is decorated (#19849)
cleanup
accept baselines
send all events through common stream
Fix declaration emit for imported export alias specifiers (#19852)
Merge pull request #18348 from ubershmekel/no-space-after-comment
Only ignored params need underscores
Handle synthetic nodes correctly as namespace identifiers in system transform (#19623)
fix completions protected members in recursive generic types (#19192) (#19242)
Add Symbol.species to ArrayConstructor, MapConstructor, SetConstructor, ArrayBufferConstructor. (#18652)
Merge pull request #19815 from Microsoft/add-definitely-typed-runner
Merge pull request #17765 from tycho01/6229-known-length-tuples
Use CRLF and emit test output for stdout/stderr
Revert "Add TupleBase with unusable mutating Array methods"
LEGO: Merge pull request 19851
LEGO: check in for master to temporary branch.
Remove unnecessary wrapper classes in ts.formatting.Rule (#19744)
Remove positive baselines for user tests
Refactor user+dt runners into externalCompilerRunner
Remove trailing whitespace from unit tests (#19836)
processDiagnosticMessages.ts: linted, removed unused code (#18697)
Merge branch 'master' into vfs
Merge pull request #19838 from Microsoft/narrow-index-signature-property-access
Add a couple of test cases
Accept baselines
Changed error for setter when emitting declaration with private param type (#18593)
quickInfo: Display info for signature on a separate line from variable info (#18698)
Test:narrow properties from string index signatures
Narrow property access from string index signatures
Fix undefined error for diagnostic for instantiating an abstract class (#19809)
Merge pull request #19824 from Microsoft/fix-rwc-lib-in-tsconfig
Cache comparers
Fix getDefaultLibraryFile + turn off lib
RWC:Handle lib entries in tsconfig
Merge branch 'ajafff-update-types3'
Merge branch 'update-types3' of https://github.com/ajafff/TypeScript into ajafff-update-types3
Merge pull request #19039 from Microsoft/guard-name-in-getSuggestionForNonexistentSymbol
Improve asserts in getSuggestionForNonexistentSymbol
Cleanup after merge
Merge pull request #19791 from amcasey/ImportLineBreaks
Merge branch 'master' into vfs
Merge pull request #19786 from Microsoft/directoryRename
Remove package-lock.json before `npm install`
Change runner name from 'definitely' to 'dt'
PascalCase -> camelCase
Fix lint and allow null keyword
Handle other linebreak characters and add boundary checks
Use CharacterCode enum
DefinitelyRunner cleanup and speedup
Add hyphen in completionEntryDetails-full (#19808)
Move "space-before-function-paren" lint rule to list of rules waiting on a formatter (#19807)
Import fix add import require support (#19802)
Enable 'no-empty' tslint rule (#19769)
LEGO: Merge pull request 19812
LEGO: check in for master to temporary branch.
Fixed minor syntactics error (#19801)
Fix assertion -- an import may come from a require() call (#19667)
Enable 'no-invalid-template-strings' lint rule (#19790)
LEGO: Merge pull request 19805
LEGO: check in for master to temporary branch.
fix inconsistencies in import UMD code fixes adapting to module format (#19572)
LEGO: Merge pull request 19794
LEGO: check in for master to temporary branch.
Consistently use "JSX Attribute" completion kind (#19781)
Merge pull request #19452 from Microsoft/compareStrings
PR Feedback
Apply 'unified-signatures' tslint rule (#19738)
Update baselines after merge
Handle windows linebreaks in getSourceFileImportLocation
Apply 'object-literal-key-quotes' tslint rule (#19737)
Move "ban-comma-operator" to tslint rules that we won't use (#19780)
Use an enum for Msg (#19773)
Merge branch 'master' into dynamicNames
PR Feedback
Remove last bits of strictTuples flag
Discriminate contextual types (#19733)
Update baselines
Eagerly fall back to TupleBase
Handle the folder create/delete in the configured project
Update Jakefile with definitelyRunner.ts
Add DefinitelyTyped test runner
LEGO: Merge pull request 19783
LEGO: check in for master to temporary branch.
Add test case when inside wild card watched directory folder is renamed
Use documentation comments from inherited properties when @inheritDoc is present (#18804)
Update DOM iterable interfaces (#19752)
Enable 'no-unused-expression' tslint rule (#19734)
Remove test
Added empty constructors to TypedArrays from es2017 (#19680)
Make getContextualTypeOfApparentType mapType over unions (#17668)
Revised emit for computed property names, including with decorators (#19430)
Merge pull request #19730 from Microsoft/fileNotOnDisk
Merge branch 'master' into dynamicNames
Split runner selection from test selection (#19729)
Improvements to checkUnusedIdentifiers (#19607)
Add testcase for non existent file without absolute path when opened with/without projectRoot
Merge branch 'master' into 6229-known-length-tuples
Improve TupleBase docs and backward compatibility
Merge pull request #19745 from Microsoft/emptyArrayInference
Merge pull request #19774 from Microsoft/fixInvariantGenericErrors
Add TupleBase with unusable mutating Array methods
Port generated lib files (#19772)
Merge pull request #19770 from Microsoft/remove-readonly-from-spread-index-sigs
Merge pull request #19544 from uniqueiniquity/interfaceJsDoc
Silence NPM warnings when installing typings (#19749)
Merge pull request #19741 from Microsoft/fixMappedTypeModifiers
Add regression test
Fix invariant generic error elaboration logic
Apply 'variable-name' tslint rule (#19743)
Test:spread removes readonly from index signatures
Remove readonly from index signatures of a spread
Add tests
Empty array literal has a non-inferrable element type
Add tests
Check combined modifiers in mappedTypeRelatedTo
Fix new lint error
Merge branch 'master' into compareStrings
Shave off ~100ms by extracting ExpandingFlags
Merge branch 'master' into dynamicNames
Add localizable diagnostic for "Install '{0}'" (#19651)
Check for unused locals in commonjs modules (#19612)
Rename offsets in tests
For getCompletionsAtPosition, require a flag to provide completions with code actions (#19687)
Merge pull request #19726 from Microsoft/fixNeverTypeCall
Handle the script infos that are opened with non rooted disk path Fixes #19588
Apply 'prefer-for-of' tslint rule (#19721)
Add CompletionDetailsFull request (#19689)
Enable 'only-arrow-functions' lint rule (#19717)
Enable 'no-implicit-dependencies' lint rule (#19716)
Minor cleanups in pathCompletions.ts (#19685)
Support path completions inside node_modules (#19692)
Accept new baselines
Add tests
Call on never type is not an untyped function call
Test where script info path and program path differ because of current directory
Respond to CR
Add a few tuple tests and update baselines
Loosen restrictions on jsdoc completion locations
LEGO: Merge pull request 19718
Merge branch '6229-known-length-tuples' of https://github.com/tycho01/TypeScript into 6229-known-length-tuples
LEGO: check in for master to temporary branch.
Merge branch 'master' into 6229-known-length-tuples
Fix incorrect relative module name detection (#19702)
Add refactoring to use default import (#19659)
Use NodeFlags to detect nodes in ambient contexts instead of climbing ancestors (#17831)
Merge pull request #19701 from Microsoft/fixIntersectionTypeInference
Accept new baselines
Merge branch 'master' into fixIntersectionTypeInference
Merge pull request #19697 from Microsoft/fixFreshLiteralsInIntersections
Merge pull request #19671 from Microsoft/nominalInstanceof
Add regression tests
Apply 'interface-name' lint rule (#19695)
Enable 'no-this-assignment' lint rule (#19696)
Enable 'callable-types' tslint rule (#19654)
Accept new baselines
Properly handle intersection types in getUnmatchedProperty
Accept user test baselines
Split ArrayConstructor.from method into 2 overloads #19682 (#19693)
Port generated lib files (#19690)
Add regression test
Support quick info at `function` and `=>` locations (#19669)
Merge pull request #19688 from Microsoft/npmInstallAtTypes
Remove freshness from literal types in intersections
Handle cases when npm install doesnt get triggered with the actual file added Fixes #19597
Remember to provide source for completionDetails from client.ts (#19664)
Ensure that we continue recursing into TS transforms (#19650)
Add undefined to return type
Revert "Update tests to expect empty doc comment template"
Revert "Return empty doc comment instead of undefined"
Remove strictTuple flag and Tuple.length readonly
Complete to single line jsdoc comment if no params
Fix TokenOrIdentifierObject.getText() crash (#19673)
User code runner draft (#19539)
In typings installer, provide mandatory 'package.json' fields (#19663)
Move strict tuple test and add a couple of cases
Add "strictTuples" to list of strict flags
Merge branch 'master' into 6229-known-length-tuples
Use explicit undefined checkk
Merge branch 'master' into guard-name-in-getSuggestionForNonexistentSymbol
Switch from undefined guard to asserts
Test:this instantiation in type parameters
Properly handle Object and Function types
Check function type parameters for this references
Merge pull request #19619 from uniqueiniquity/indentJsxText
Use a different RegEx
Log top 5 largest files when TS language service is disabling. (#19315)
Merge branch 'master' into nominalInstanceof
Remove markers
Update test
Drop node 4, add node 8 for CI (#19617)
Merge pull request #19175 from armanio123/AddDefinitionAndBoundSpan
Refactor test and annotate object literal
fix completion module path (#19351)(#19367) (#19366)
Add JSXText indentation test
Indent all lines of single JsxText node
reduceRight is never used (#19605)
Merge pull request #19219 from Microsoft/abstract-property-access-error-in-own-constructor-only
Cache some LS calls in fourslash (#19517)
Accept new baselines
Add type annotation
Nix getBestChoiceType, [] subtyping, nominal union reduction for classes
Remove case-insensitive UI comparisons for now
Assert arrays passed to relativeComplement are sorted
Merge pull request #19249 from uniqueiniquity/jsxFragment
Merge branch 'master' into jsxFragment
PR feedback
Remove duplicate type (#19593)
Extend from tslint:latest (#19309)
Rename "isPartOfExpression" (#18469)
LEGO: Merge pull request 19600
LEGO: check in for master to temporary branch.
Use lowercased names for generated locale directories (#19581)
Parenthesize export assignments if needed (#19590)
Merge branch 'master' into dynamicNames
Unify deduplication, fix deferred global diagnostics
Merge branch 'master' into AddDefinitionAndBoundSpan
Merge pull request #19578 from amcasey/GH19395
The global "JSON" object should always exist (#19583)
Merge pull request #19589 from Microsoft/reorder-jsdoctag-kinds
Accept new baselines
Use nominal checks in union type subtype reduction
LEGO: Merge pull request 19591
LEGO: check in for master to temporary branch.
Make getCompletionEntryDetails and getCompletionEntrySymbol parameters non-optional (#19507)
Add support for enums and property signatures
Fix the order of JSDocTag kinds
Add utility function to check for strict option flags (#19427)
Merge pull request #19564 from Microsoft/fixGenericMappedTypeRelationships
Fix #102: More accurate error message for module in type reference (#19324)
Merge pull request #19401 from Microsoft/fix19349
Accept new baselines
Use nominal check in isTypeInstanceOf
Fix declaration emit for `typeof` default export (#19471)
Assert that enclosing declaration is not synthesized
Correct typo - pass correct argument
Add regression test for #19395
Merge pull request #19511 from Microsoft/add-tsconfig-after-running-rwc
Add test
In quick info, show all jsdoc tags (#19357)
Use Harness.isDefaultLibraryFile to detect lib.d.ts
Merge pull request #19552 from ajafff/parse-negative-numbers
Accept new baselines
Add tests
Make generic mapped type relationship more inclusive
Added comment
PR Feedback, cleanup
Updated comments
PR Feedback
Merge pull request #19513 from Microsoft/strictObjectLiterals
Undo unnecessary change
Accept new baselines
Redo subtype reduction with correct --noImplicitAny error reporting
convertToObject: handle negative numbers in JSON
Accept new baselines
Undo extra subtype reduction in getWidenedType
Improved logging
Update comments
Return doc comment template for interfaces and method signatures
Update tests to expect empty doc comment template
Return empty doc comment instead of undefined
Exclude legacy safelist files in external projects
LEGO: Merge pull request 19540
LEGO: check in for master to temporary branch.
Improve regex for tsconfig test
Generate tsconfig in tsc-instrumented instead
Accept new baselines
Perform subtype reduction when widened union type contains {}
LEGO: Merge pull request 19531
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 19526
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 19522
LEGO: check in for master to temporary branch.
Unify logic for getMembers/Exports of symbol
Reduce noise in PR, minor cleanup
Improve performance of deduplication of sorted arrays
Merge pull request #19515 from amcasey/DebugTI
Handle --debug-brk and --inspect-brk when launching TypingsInstaller
Ensure correct errors when emitting declarations
Only construct two rules providers in textChanges (#19502)
Overwrite assert.isFalse (#19506)
LEGO: Merge pull request 19510
LEGO: check in for master to temporary branch.
Add tsconfig.json for RWC projects that lack them.
Add missing semicolon
Accept new baselines
Add tests
Ensure void return in forEachType
More repetitive but less complex widening logic for literals/symbols
Ensure explicit default locale before each test
Disable sourcemaps during cancellationToken test (#19505)
Cleanup, merge #19475
Disable error sourcemaps during session test (#19504)
Accept new baselines
Accept API changes
Merge branch 'master' into strictObjectLiterals
Memoize rule provider (#19501)
Use a single union type for all inferred object literal types
Further simplification
Support completion details for special JsDoc completions (#19494)
Support multiple completions with the same name but different source module (#19455)
Normalize nested object literals
Use minimal lib for projects tests (#19488)
Remove unnecessary comment
Remove unnecessary comment
Cleanup and reordering
Simplify comparers
Use a map for read file lookups (#19487)
Stop using expensive directoryExists in unit/rwc tests where it does not matter (#19486)
More control over which collator to use in each situation
Stop collecting type baselines for RWC tests (#19482)
Merge pull request #19479 from Microsoft/reloadScriptsWithoutProject
Merge pull request #19457 from Microsoft/openFilesRetainProjectRoot
Add test case to verify reload works without open project
Reload contents of file from disk irrespective of project presence and file already containing its own text Fixes #19336
Normalize object literals in widened union types
Added test for preventing fragment with jsxFactory
Error when using fragment with jsxFactory
Remove unnecessary type annotation
Removed double tests of gotoDefinition
Consistent naming
Revert change in navigateTo
Minor name change
Clean up existing equality comparisons
Added 'equateStrings' for string equality comparisons (rather than sorting)
Addressed PR comments.
Fixed tsserverlibrary.d.ts tests
Rollback spread operator changes
Revert use of Intl/localeCompare for CS comparisons
Store the projectRootPath the script info was opened with so that we can reuse it later to search/set file watches
Test to verify that projectRootPath is taken into account when there are changes to config file
Manually inline a few cases to reduce repeated 'ignoreCase' conditionals in loops
Merge branch 'AddDefinitionAndBoundSpan' of https://github.com/armanio123/TypeScript into AddDefinitionAndBoundSpan
Added triple slash support
Clean up outdated string comparison logic
Missing properties in fresh object literals are known to be undefined
Respond to CR
Merge pull request #19147 from amcasey/ReturnDeclExpr
Extract refineNode into its own function
Merge branch 'master' into AddDefinitionAndBoundSpan
Demote some extraction ranges to produce better results
Renamed a couple of methods, refactored code for reusability
Merge pull request #19435 from Microsoft/foundWhileSearchingNodeModules
Set the files found during node_modules search correctly when reusing existing program structure This marks files reused correctly as from external library resulting in not using them for files to be emitted and computed for output structure Fixes #19327
Add the test case that fails and reports error for files not in root directory in watch mode Test case for #19327
Removed custom guard and added isArray
Skip symbol baselines for RWC tests (#19425)
Merge pull request #19426 from Microsoft/portLibFiles
Merge branch 'master' into fix19349
Fix build break (#19431)
PR cleanup
Use NodeFlags to detect nodes inside with statements instead of climbing ancestors (#17721)
For @types installing quickfix, only activate for implicit-any module (#19394)
Update issue_template to ts2.7 (#19422)
Merge pull request #19424 from Microsoft/inferenceFromGenericFunction
Port generated lib files
Add tests
Accept new baselines
Infer from base constraint signatures instead of erased signatures
accept baselines
Merge branch 'master' of https://github.com/Microsoft/TypeScript into update-types3
Remove escaped names of well known symbols from string completions
Merge branch 'master' into dynamicNames
Address PR feedback
Simplify property symbol logic in checkObjectLiteral
Revert some minor changes to clean up PR
Refactor widening
LEGO: Merge pull request 19396
LEGO: check in for master to temporary branch.
Merge pull request #19390 from Microsoft/fix19378
Simplify getLateBoundSymbol
Check for `--strict` along with `--noImplicitAny` for code fix
Fix lint (#19387)
Make it a noImplicitAny error to fail to provide type arguments to a superclass via @augments (#18778)
Subsequent variable declarations must have same type: Mention location of other declaration (#19356)
Merge pull request #19355 from Microsoft/sandersn/fix-getParameterSymbolFromJSDoc
Merge pull request #19319 from Microsoft/fixMappedTypeInferenceErrors
Minor cleanup
Minor cleanup
Cleanup, add watch capabilities
Merge pull request #19149 from Kingwl/fix-incorrect-super-without-base-class
Use `light` test flag by default (#19362)
Do not include lib in extract symbol tests unless required (#19361)
More tests for getParameterSymbolFromJSDoc
Update version (#19353)
LEGO: Merge pull request 19358
LEGO: check in for master to temporary branch.
Fixup line and offset of rename location of refactor (#19265)
Consolidate jsdoc node getters
Fix getParameterSymbolFromJSDoc
Test:jsdoc @param errors on vardecls/assignments
LEGO: Merge pull request 19342
LEGO: check in for master to temporary branch.
Fix "noStringLiteral" lint errors (#19310)
Remove some unnecessary `undefined` checks in extractSymbol (#19256)
Workaround for nonnull operator on indexed accesses (#19275)
Add regression test
Accept new baselines
Infer properties of type {} when argument of a mapped type is incorrect
Merge pull request #19314 from Microsoft/fix-tsc-instrumented
Merge pull request #19306 from Microsoft/doNoWriteFilesMultipleTimes
Use Promise instead of PromiseLike (#19305)
Remove extra blank line in logs (#19307)
Fixed incorrect insertSpaceBeforeFunctionParenthesis behavior on functions with type-arguments
Updated an incredible amount of tests.
Fix undefined error using `getEffectiveTypeRoots` (#19300)
findAllRefs: Support anonymous default export (#19302)
Fix https://github.com/Microsoft/TypeScript/issues/19270: ensure output name is a valid locale name (#19308)
Fix lint
Fix tsc-instrumented
Actually use cached semantic diagnostics
LEGO: Merge pull request 19312
LEGO: check in for master to temporary branch.
make getCurrentDirectory required (#19303)
Merge pull request #19304 from Microsoft/dedupe-jsdoc-annotation-refactors
Addressed PR comments: added simplified/full version, changed design
Merge pull request #19138 from Microsoft/configuredProjectRef
Do not cache the semantic diagnostics when compiler options has --out since we would anyways get all fresh diagnostics
Simplify emit changed files further Also use source file version as the signature of declaration file instead of computing it from text
Modify api to emit affected files using callback instead of generating in memory output Also marking few apis introduced during watch improvements changes that are suppose to be internal for now
Use get files affected by internally and hence use file paths as input
Add failing testcase where when d.ts file is in program, the files get emitted multiple times with --out setting
Respond to CR
Move isJSDocIndexSignature to utilities
Fix bugs in jsdoc annotation refactor
Add a better test for jsdoc index signatures.
Update annotateWithTypeFromJSDoc tests
Merge pull request #19301 from Microsoft/dev/bill/port19228toMaster
Remove erroneous error for JSDoc object literals
Update API baselines
Set the scriptKind from the host configuration if present
Disambiguate same-named refactors using description (#19267)
LEGO: Merge pull request 19297
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 19288
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 19281
LEGO: check in for master to temporary branch.
Respect newLine compiler option in language service output (#19279)
Fix #19257: Ensure a generated signature has a return type (#19264)
Update baselines
Collapse jsdoc annotation refactors to one
This wasnt required before... (#19262)
Merge pull request #19263 from Microsoft/directoryWatcherInsteadOfFileWatch
Add quickfix and refactoring to install @types packages (#19130)
Merge branch 'master' into directoryWatcherInsteadOfFileWatch
Handle when directory watcher is invoked on file change Fixes #19206
Respond to CR
Merge pull request #19239 from Microsoft/reduceWatchedDirectories
Added test for windows style paths watched directories
noUnusedLocals: Warn for recursive call to private method (#18920)
In tsserver, indent logged JSON (#19080)
Merge pull request #19250 from Microsoft/mark-fresh-spread-types-with-ContainsObjectLiteral
Dont try to run unit tests with rwc tests again (#19240)
Add exported members of all project files in the global completion list (#19069)
Fix lint
Test excess property checks of spreads of unions.
Mark fresh spread objects w/ContainsObjectLiteral
Update API baselines
Add baselines
Update tests
Add support for JSX fragment syntax
LEGO: Merge pull request 19248
LEGO: check in for master to temporary branch.
LEGO: Merge pull request 19241
LEGO: check in for master to temporary branch.
Do not watch root folders for failed lookup locations and effective type roots Fixes #19170
Changed command designed based on review input
Add release-2.6 to covered branches
Merge pull request #19230 from Microsoft/fix18186
Merge pull request #19232 from Microsoft/fix19187
LEGO: Merge pull request 19234
LEGO: check in for master to temporary branch.
Fix generated name scope when emitting async functions
Do not reduce subtypes of awaited union type
Merge pull request #19222 from Microsoft/projectCompilerOptions
Fix instantiated generic mixin declaration emit (#19144)
Merge pull request #16695 from aozgaa/fixIifeIndentation
Test:type inference from strings to keyof T succeeds
Infer keyof from string literals + contravariantly
Add comments about why we need two methods that return compilerOptions
Support 'package.json' not in package root (#19133)
Fix for-in emit under systemjs (#19223)
In convertFunctionToEs6Class.ts, share code for getting symbol (#19160)
Add getCompilerOptions method to project Fixes #19218
Abstract property access error only on this access
Test:abstract prop access in non-declaring ctor
Check own-constructor in abstract prop access error
LEGO: Merge pull request 19217
LEGO: check in for master to temporary branch.
fix super call from class that has no basetype but with same symbol interface (#19068)
Merge pull request #19185 from Microsoft/fixMappedTypesKeyofAny
Merge branch 'RyanCavanaugh-fix11857'
Merge branch 'fix11857' of https://github.com/RyanCavanaugh/TypeScript into RyanCavanaugh-fix11857
Accept new baselines
Add tests
Mapped type { [P in any]: T } should yield { [x: string]: T }
LEGO: Merge pull request 19181
LEGO: check in for master to temporary branch.
Properly handle mapped types with 'keyof any'
Merge pull request #19174 from Microsoft/correctlyScopedtaggedTemplates-master
Update generated files (#19177)
Fixed api reference tests
Accepted baselines.
Create truly unique names for tagged template strings.
Added test case.
LEGO: Merge pull request 19171
LEGO: check in for master to temporary branch.
In getContextuallyTypedParameterType, skip a `this` parameter when counting parameter index (#19155)
Merge pull request #18747 from Microsoft/refactor-jsdoc-types-to-typescript
Fix spacing lint
return more Debug.fails instead of undefined.
JSDoc->type refactor:Renames+improve never handling
LEGO: Merge pull request 19157
LEGO: check in for master to temporary branch.
Create source files lazily in tests (#19143)
Added DefinitionAndBoundSpan command
Merge pull request #19141 from amcasey/MissingNewlineAtEOF
Recreate old decorator metadata behavior (#19089)
Fix duplicated JSDoc comments
Insert a line break before a function at EOF if needed
Merge branch 'master' into refactor-jsdoc-types-to-typescript
Merge pull request #19135 from amcasey/GH18626
Update missed baseline
Transform nested dynamic imports (#18998)
Fix the way configured project's reference is managed so that the open file
Adding test case where opened file included in project is not added to ref count of configured project
Merge pull request #19118 from Microsoft/caseSensitivityInferredProjectRoot
Test refactor of JSDoc @template tag
Convert @template tag to type parameters in refactor
Introduce and consume suppressLeadingAndTrailingTrivia
Merge pull request #19132 from amcasey/JumpInFinallyTest
Merge pull request #18931 from amcasey/ExtractConstantThis
Merge pull request #19112 from Microsoft/fill-missing-type-arguments-during-error-reporting
Assert:checkTypeArguments isn't passed too many type arguments
Merge branch 'master' into refactor-jsdoc-types-to-typescript
Quick fix for no-implicit-any errors to add explicit type annotation (#14786)
Fix lint
Simplify checkTypeArguments based on PR comments
Add missing test coverage for jumps in finally blocks
Allow Extract Constant into enclosing scope in spite of RangeFacts.UsesThis
Merge pull request #18997 from amcasey/ExtractDeclaration
Update public api baseline
Merge pull request #18959 from Microsoft/configFileDiag
Merge pull request #19088 from Microsoft/resolutionCacheDefensiveChecks
Fix lint error
Add additional deep clone tests
Merge pull request #19091 from Microsoft/fixAnonymousTypeInstantiation
Allow extraction of variable decls used outside the extracted range
Merge pull request #18979 from amcasey/DeepClone
Merge pull request #19107 from Microsoft/fixRecursiveCallbacks
Accept new baselines
Add additional test
Account for type queries in type literals
checkTypeParameters now always calls fillMissingTypeArguments
Don't clobber the position of cloned nodes
Make sure project root paths of inferred projects are canonical when comparing
Merge pull request #19111 from Microsoft/useCaseSensitiveProjectRootToSearchConfigFile
Add ValueModule as a valid object literal type, as they are immutable (#19090)
Fix incorrect cast target (#19093)
Always log output of execSync (#19110)
Test:Incorrect number of type args during err reporting
Fill missing type arguments during error reporting
Update to use `help wanted` instead of `Accepting PRs` (#19105)
Merge branch 'master' into refactor-jsdoc-types-to-typescript
Handle case sensitivity when looking up config file for Script info Fixes #17726
Add and update jsdoc annotation refactoring tests
Convert all JSDoc parameters and return types of functions
Merge pull request #18965 from Microsoft/set-symbol-on-union-of-spreads
Merge pull request #19056 from Microsoft/fix16221
Merge pull request #18960 from Microsoft/builderHandlesChangeInResolution
Updated error baseline
Accept new baselines
Add regression test
Don't check for callbacks in recursive call that resulted from callbacks
Merge pull request #19046 from Microsoft/fix15395
Update the comment on emit handler method
Add package-lock.json to repository (#19099)
In issue template, recommend to use `typescript@next` (#19098)
Ensure Async Modifier is maintained through ES6 Class Conversion (#19092)
Set flags on fresh object types from getSpreadType
Instead of counting events with name, verify each event to not equal event name
Verify errors more correctly in tsc-watch mode
Update comment on emit handler functions
Merge pull request #19058 from Microsoft/whenWatchesFail
Merge branch 'master' into configFileDiag
Combine the event manager testing
Functioning parallel unittests (#18956)
Do not generate config file diagnostics event when the file opened doesnot belong to the configured project
Use filterMutate instead of removeWhere
Accept new baselines
Add regression test
Properly account for possibly referenced type parameters
Add regression test for #18668 (#19085)
Merge pull request #19053 from Microsoft/resolutionCacheDefensiveChecks
Add comment about swallowing exception
Add utitlity for stringContains
Stop erroneous match of midfile sourceMappingUrl (#19084)
Function to clear the per directory resolution
Modify the changesAffectModuleResolution check
Updated vfs
Remove `removeWhere` (#19082)
Merge pull request #19072 from Microsoft/completionInClassMember
Maintain Export Modifier when Refactoring to ES6 Class #18435 (#19070)
Do not rely on parent pointers in the binder (#19083)
Update Authors for TS 2.6
Merge pull request #18950 from amcasey/MissingMemberFormatting
Optimize getSynthesizedDeepClone
Move getSynthesizedDeepClone to services/utilities.ts
Replace more 'verify.rangeAfterCodeFix' with 'verify.codeFix' (#18800)
Improve JSDoc @augments diagnostics (#19011)
Merge branch 'master' into configFileDiag
Merge branch 'master' into resolutionCacheDefensiveChecks
Handle the case of completion of class member when member name is being edited Fixes #17977
Remove unnecessary uses of `any` in shims.ts (#19038)
Fix invalid cast (#18821)
Merge pull request #16586 from Microsoft/projectRootAsCurrentDirectoryInEmit
Merge pull request #19057 from Microsoft/fix17564
baseline updates
Merge branch 'master' into fix17564
Handle project close to release all the script infos held by the project
Swallow the directory watcher exceptions
Fix 'this' capturing for dynamic import
Fix Array.{reduce,reduceRight} methods (#18987)
Add deprecation warning to getSymbolDisplayBuilder (#18953)
Use the parent most node_modules directory for module resolution failed lookup locations
Fix recursive reference in type parameter default
Assert if the script info that is attached to closed project is present Adds assertion to investigate #19003 and #18928
Merge pull request #18706 from aozgaa/dev/aozgaa/JsDocExtendsSupport
Improve Object.{values,entries} static methods (#18875)
Merge pull request #18674 from aozgaa/dev/aozgaa/exceptionEvent
Handle type guard predicates on `Array<T>.find` (#18160)
update baselines
Handle the case when finishCachingPerDirectoryResolution is not called because of exception Fixes #18975
importFixes: Remove unnecessary undefined check (#19045)
Merge pull request #19005 from charlespierce/abstract_property_in_constructor
Fix emit for classes with both fields and 'extends null'
Fix linting error in new function
Merge pull request #18970 from Microsoft/lessLoggingInTsc
Fix semicolon lint
In resolveNameHelper, use a lastNonBlockLocation (#18918)
Use ancestor walk to determine if property access is within constructor #9230
In getSuggestionForNonexistentSymbol, guard name against undefined
In @typedef tag, handle property with no type (#19013)
Error when accessing abstract property in constructor #9230
better error message
add error for multiple tags
Merge branch 'master' into update-types3
A parameter not declared as a rest parameter is not one (#18825)
Have getNameOfDeclaration return `x` for `export default x`. (#18616)
accept baselines
Merge branch 'master' into dev/aozgaa/JsDocExtendsSupport
Merge pull request #18976 from Microsoft/strictCallbackParameters
Merge pull request #16363 from Microsoft/excess-property-checks-for-discriminated-unions
Remove duplicate assignment (#18994)
Mark getSynthesizedDeepClone @internal
Add tests
Merge branch 'master' into excess-property-checks-for-discriminated-unions
Accept new baselines
Always use callback parameter code path, but stricter if necessary
Visit default export expressions (#18977)
Use deep cloning, rather than thunking for repeated substitution
Introduce getSynthesizedDeepClone
Handle undefined in getSynthesizedClone
Merge pull request #18969 from Microsoft/uncalledDecoratorQuickFix
Merge branch 'master' into dynamicNames
Add test
Accept new baselines
Don't use callback parameter code path when strictly checking functions
Create fix for uninvoked decorators.
Added test.
Fine tune logging so that only triggers in watch are logged in normal logging vs verbose
Additional documentation
Merge pull request #18811 from Microsoft/uncalledDecorator
Update tests after the merge from master
Update baselines
Merge branch 'master' into excess-property-checks-for-discriminated-unions
Test:{} in union from spread gets implicit index signature
Set symbol on union of spreads
Support dynamic names on static members of class.
General tidying up and comments.
General tidying up and comments.
Additional tests
Switch to 'unique symbol'
Merge branch 'master' into projectRootAsCurrentDirectoryInEmit
Merge pull request #18958 from Microsoft/compilePublicApi
Let builder find out from imports/typereference directives if file references have changed. This is needed to ensure that the ambient module addition takes effect Fixes #15632
Do not report config file errors if the file opened isnt from configured project and that project doesnt have the config errors Fixes #16635
Compile public api so that all the updates are ensured to be correct
Merge pull request #18955 from Microsoft/binding-element-with-parent-type-any-is-any
Update baselines
Binding element with parent type any is any
Merge branch 'master' into dynamicNames
Skip more lib checks, improve test execution time a bit more (#18952)
Increase maximum depth of outlining span search (#18704)
Merge pull request #18936 from amcasey/GH18899
When emitting all files, emit the changed file first (#18930)
Add skip lib check to many tests (#18935)
Stop combining already-translated strings
Clean up code in getModifierOccurrences (#18948)
Fix whitespace around inserted property initializer
Fix whitespace around inserted static property
Merge pull request #18929 from amcasey/ExtractVoidNever
In getModifierOccurrences, support additional container kinds (#18947)
Support contextual type for property assignments in JS that are not declarations (#18820)
Call getLocaleSpecificMessage
Localize more Extract Function/Constant strings
Merge pull request #18934 from Microsoft/throttledCancellation
Latest mocha uses fullPath instead of titlePath (#18933)
Fix location of generateLocalizedDiagnosticMessages.js (#18923)
Wrap the cancellation token in throttled cancellation token from server
Stop extracting void and never constants
Merge pull request #18927 from amcasey/ExtractBaselineShowRange
Merge pull request #18926 from amcasey/ExtractConstantArrow
Include range markers in Extract Constant/Function baselines
Fix parsing of qualified name in @augments (#18914)
Disallow constant extraction into expression-bodied arrow functions
Fix `gulp lint` (#18921)
Merge pull request #18919 from amcasey/ExtractLocalRefinements
PR Feedback and API baselines
Merge branch 'master' into dynamicNames
Merge branch 'master' into fix-spread-contextually-typed-by-binding-pattern
Test:spread contextually typed by binding pattern
Binding pattern contextual type checks spread type
Stop inadvertently exempting expression statements from check
Merge pull request #18300 from Microsoft/correctlyCacheTaggedTemplates
Refine extraction of expression statements
Keep comments in production tsserverlibrary builds (#18913)
Merge branch 'master' into dynamicNames
Remove unnecessary *OrUndefined calls (#18889)
Merge pull request #18900 from amcasey/ReduceDup
Merge pull request #18117 from Microsoft/jsdoc-dotdotdot-binds-tighter-than-postfix
Accepted baselines.
Flatten the '__makeTemplateObject' helper to use less vertical screen real estate.
Accepted baselines.
Accept baselines (#18903)
Merge branch 'master' into dynamicNames
Use 'getTextOfNode'.
Added a test for an 'any'-type decorator.
Improve error message for uncalled decorators.
Merge pull request #17269 from Microsoft/watchImprovements
Baseline public API (#18897)
Separate namespace declarations in builder of intenal and exported interfaces and functions
Include localized diagnostics (#18702)
Allow parsing a qualified type name containing a reserved word (#18888)
Merge pull request #18864 from amcasey/GH18857
Ensure getResolvedSignature never returns `undefined` (#18883)
Handle repeated substitution of the same symbol during extraction
Refactor to reduce property duplication
Merge pull request #18861 from amcasey/ConstantInsertionPosition
Merge branch 'master' into watchImprovements
Making APIs as internal so that we can enable them after we have figured out final details
Merge branch 'master' into refactor-jsdoc-types-to-typescript
Describe the innermost scope as "enclosing scope" for constants
Localize 'in' in extraction description
Merge pull request #18654 from Microsoft/strictFunctionTypes
Add error elaboration test
Improve error elaboration for invariant generic types
Fix acquiring format options for getEditsForRefactor (#18848)
Move first/last shortcuts closer to the end of the helper flags.
Emit .d.ts file in test
Merge branch 'master' into watchImprovements
PR feedback
Update baselines
Merge branch 'master' into dynamicNames
Fix crash when extending non-EntityNameExpression (#18853)
Fix bug: Report errors on `extends` expression in JS even if an `@augments` tag is present (#18854)
Merge pull request #18603 from RyanCavanaugh/pluginWork
getSuggestionForNonexistentSymbol: Add comment (#18885)
Use idText in a few more places (#18842)
Enable "space-within-parens" lint rule (#18856)
Simplify RulesMap construction (#18858)
Update baselines
Accepted baselines.
Updated helper for marginally better minification.
Accepted baselines.
Added test for module & global examples.
Accepted baselines.
Added test and adjusted reporting logic.
Loosen restriction on usages in innermost scope
Reuse getSourceFileImportLocation
Addressed code review feedback.
Accepted baselines.
Accepted baselines.
Use a better check.
Addressing CR feedback
Improve insertion positions of extracted constants
Merge pull request #18831 from amcasey/AdditionSpecialCase
Print list of available refactors when we can't find one (#18843)
Merge branch 'master' into watchImprovements
Add helper functions for using `unescapeLeadingUnderscores` (#18793)
Accept new baselines
Merge branch 'master' into strictFunctionTypes
Merge pull request #18829 from amcasey/JsExtractTests
Eliminate special case for extracting from a binary operator chain
Accept new baselines
Only methods and constructors are bivariant in --strictFunctionTypes mode
Assert that Extract* baselines are syntactically valid
For any Extract* baseline that is valid JS, produce a JS baseline
Check JSDoc `@param` tag names (#18777)
Support accessing enum types from JSDoc (#18703)
Rename test baseline to be compatibile with windows (#18827)
Merge pull request #18810 from Microsoft/unusedErrorArgs
Merge pull request #18806 from armanio123/FixScriptBlockFormatting
Fixes to @augments handling (#18775)
Correctly transform jsdoc parameter types
Merge pull request #18824 from amcasey/ExtractFunctionRename
Rename extractMethod tests to extractFunction for consistency
Addedn rangeContainsRange helper function
Merge pull request #18783 from amcasey/ExtractConstant
Remove unnecessary cast (#18822)
Merge branch 'master' into refactor-jsdoc-types-to-typescript
Remove unused arguments in program.ts.
Merge pull request #16595 from alexeagle/pretty
Accepted baselines.
Give a more helpful error message when users try decorating using expressions that take no arguments.
Remove unused arguments.
Fall back to old behavior for tagged template emit in global files.
TODOs for repeated substitution
git Merge branch 'master' into correctlyCacheTaggedTemplates
Accepted baselines.
Ensure that the import helper is checked for tagged templates, and update its name.
Use project root as the current directory whenever possible to create the project
Added tests for import helpers with & without a declared template object creator.
Fixed formatting on script blocks, added regrestion tests, fixed minor bugs
--pretty output: move context after the file/error
Remove console logs in fourslash (#18803)
Add additional TODO about insertion positions
Use resources, rather than string literals, in test baselines
Forbid extraction of constants to class scopes in JS
Split range tests and helpers out of extractFunctions.ts
Rename extractMethods.ts to extractFunctions.ts for consistency
Add simple tests for Extract Constant
Rename extractMethod.ts to extractSymbol.ts
Generalize extract method to handle constants as well
Merge branch 'master' into projectRootAsCurrentDirectoryInEmit
Revert all the changes except test case
PR feedback
Split rwc input files (#18772)
Improve testing of code fixes, and improve diagnostic messages (#18742)
Update LKG (#18774)
Remove redundant handler for JSDocComment in `checkSourceElement` (#18771)
Transform jsdoc types in the refactor, not emitter
Yes space after multiline comments
Renamed PartialSystem as DirectoryStructureHost and CachedPartialSystem as CachedDirectoryStructureHost
Rename watchedProgram.ts to watch.ts
Move filenames to match refactoring rename
Change refactoring name and description
type WriteFileCallback: make param sourceFiles required. (#18731)
Accept new baselines
Update tests
Strict function type checking only for certain function types
Merge branch 'master' into correctlyCacheTaggedTemplates
Merge branch 'master' into watchImprovements
Add fix for crash in #18712 (#18751)
Handle @typedef tag with missing type (#18662)
Include nearest test name in uncaught errors, catch suite errors (#18694)
Fix crash when @augments tag has no type (#18739)
Span length is not optional (#18558)
Make it a parse error for an `@augments` jsdoc tag to not include a type (#18745)
Test:refactor JSDoc types to Typescript types
Refactor JSDoc types to Typescript types
Remove updateX functions for template parts (#18714)
Check for initializer before using it (#18708)
Add missing factory functions for template head, middle, tail, and no substituion template literal (#18709)
support @extends in jsdoc
Apply "array-type" lint rule (#18699)
Always collect type and symbol baselines (#18621)
Remove freshness, more comprehensive grammar checks and diagnostic messages
Merge pull request #18660 from Microsoft/globalAugmentationPrinter
Merge branch 'master' into dynamicNames
Keep a small reserve of tasks to not-batch, so all threads can have always have an initial task (#18696)
Minor cleanup to symbolWalker (#18549)
Fix getSourceFile return type (#18689)
Make it a parse error for an `@type` jsdoc tag to not include a type (#18664)
Use JSDoc `@type` tag type cast as a contextual type (#18690)
Cleanups in formattingScanner.ts (#18599)
Unify duplicate `getNameOfSymbol` functions (#18618)
Avoid calling `indexOf` when checking array element types (#18619)
Remove unnecessary "@internal" (#18665)
Accepted baselines.
Just always print out modifiers for global augmentations.
Add tests
Always perform structural comparison when variance check fails
add error message test
Remove unnecessary 'tryParse' (#18663)
Merge branch 'master' into correctlyCacheTaggedTemplates
Merge branch 'master' into dynamicNames
Accepted baselines.
Force 'declare' modifiers and correct global augmentation emit.
Added tests and accepted baselines.
Typo fix
Merge pull request #18625 from Microsoft/fix-getAdjustedStartPosition-on-first-line
PR comments
Merge pull request #18638 from Microsoft/addTestRegex
Update comment
Add custom formatter which has clickable links, reduce error duplication in gulp output (#18613)
Properly flag and structurally compare marker type references
Added test and accepted baselines.
Merge pull request #17919 from henrymercer/fix-empty-object-property-access
Merge pull request #18622 from amcasey/NoModifiers
Update baselines temporarily
getAdjustedStartPosition shouldn't skip to next line when on 1st line
JavaScript: handle lack of modifiers on extracted method
Fix formatting when keyword is parsed as part of a JSX identifier (e.g. `module-layout`) (#18598)
Revert dom.generated.d.ts and fix duplicate declarations
Remove batching on unittest thread, use historical data to inform batching (#18578)
Report external files in initial case
Merge pull request #18456 from RyanCavanaugh/pluginWork
remove newline
Handle unixy paths in RWC tests (#18585)
Look at correct 'package.json' location for a scoped package (#18580)
add tests
Adds VarDate and SafeArray<T> as pseudonominal types to lib.d.ts (#18566)
Consider underscore for type parameters in unused-local checks (#18539)
Actually capture oldTranspile baselines (#18584)
Merge pull request #18457 from Microsoft/tsIgnoreInTSFiles
Fix unittest parallel reporting (#18583)
explain changes and remove spurious assignment
Merge branch 'master' into fix-empty-object-property-access
revert method rename
Fix property access bug instead by wrapping entire access in brackets Modify parenthesizeExpressionForExpressionStatement to add brackets around an expression statement in which the left-most expression is an object literal.
Update tsconfig baselines
navigation tree / bar: Set span of anonymous function to span of VariableDeclaration containing it (#18575)
Merge branch 'master' into fixIifeIndentation
Use methods in dom.generated.d.ts to opt out of strict checks
Expand test to ensure property access on object literal has correct  behaviour
Accept new baselines
Handle special case of 'void' type arguments for covariant type parameters
Allow relative imports of '.js' files when `--noImplicitAny` is disabled (#18489)
Merge pull request #18264 from Microsoft/make-jsdoc-getters-public
Merge branch 'master' into make-jsdoc-getters-public
Merge pull request #18563 from amcasey/GH18546
Merge pull request #18192 from armanio123/FixExpressionExpectedAtEOF
Add comments
Merge pull request #18440 from Microsoft/fix-javascript-signature-instantiation
Use `find` array helper (#18557)
Stop requiring that the full range of a declaration fall within the selection
Handle contravariance in type inference
Accepted baselines.
Add quick path for computing array variance as it is already known
%s/getTemplateObject/makeTemplateObject
init progressbar dependencies within host start to avoid execution in a browser context (#18554)
Use dedicated marker types for variance determination
Removed duplicated JSDoc for TypedArrays and ArrayBuffer. (#18555)
TypedArrays: fixed find and findIndex callback param obj type. (#18493)
fix: Add missing opening quote (#18534)
Ensure that emitter calls callbacks for empty blocks (#18547)
Introduce --strictFunctionTypes mode
Merge pull request #18501 from Microsoft/formatOptions
Merge pull request #17954 from uniqueiniquity/regions
Remove extra OutliningSpan and simplify regex
Merge pull request #18451 from Microsoft/allow-booleans-in-spreads
Refactored out RegionRange
Revert spread-falsy-union/fix spread of primitive
Combine and simplify regex
Merge pull request #18512 from amcasey/TIMessageKinds
Merge pull request #18514 from amcasey/BrokenExtractTest
Fix broken test
Merge pull request #18508 from amcasey/ExtractSingleToken
Restructure handling to TI messages to enforce exhaustiveness
Merge pull request #18491 from amcasey/RequestCountDecr
Conditional declaration (#18506)
Restore single-token tests
Move RegionRange to private scope
Re-enable extraction of single tokens
Remove mistakenly added test file
Merge branch 'master' into allow-booleans-in-spreads
Update tests with improved spread-falsy-union rules
Refactor truthy-spread-union creation for performance
Fixed formatting for multiline initialization of object and class members (#18494)
Make formatOptions optional in GetEditsForRefactorRequestArgs
Accepted baselines.
Remove freezing behavior from tagged template helper.
Let the RWC harness iterate over files instead of building one big file (#18416)
Only decrement activeRequestCount on SetTypings responses
Better-scheduled parallel tests (#18462)
Update assertion: symbol in union type may be a Function (#18483)
Explicit fall-through.
Add name to amd definition in umd module if present (#18479)
Fixes to emit / format for codeFix (#18484)
Accepted baselines.
Add a test case for conditional expressions just in case.
Accepted baselines.
Merge pull request #17415 from armanio123/FixRenameInDefaultLibrary
Parenthesize new'd expressions based on the leftmost node (or the first node that is a call expression).
Accepted (incorrect) baselines.
Added printer test for 'new (f().x)'.
Handle undefined `symbol.declarations` in `cloneSymbol` (#18474)
Merge pull request #18417 from Microsoft/fail-spec-lambda-parsing-on-parameter-initialiser-missing-=
Fixed sourceFiles type error
Cleanup getDiagnosticsForProject (#18151)
Cleanup navTo (#18150)
For completions of union, exclude types with methods (#18124)
Allow to access `exports` from inside a commonjs module (#17745)
Simplify some code in `getSymbolAtLocation` (#18470)
Merge branch 'master' into FixRenameInDefaultLibrary
Allow template string with no substitutions to be used as a string literal type (#18452)
Use removeDefinitelyFalsyTypes for building partial type
extractMethod: Don't try to extract an ExpressionStatement consisting of a single token (#18450)
Add error for using generalized expressions with export assignments in ambient contexts (#18444)
Merge pull request #18438 from Microsoft/unionIntersectionUnit
Merge branch 'master' into allow-booleans-in-spreads
Don't normalize whitespace in fourslash tests (#18447)
In `isInPropertyInitializer`, don't bail out at a `PropertyAssignment` (#18449)
Merge branch 'master' into watchImprovements
Merge pull request #18427 from amcasey/GH17869
Merge pull request #18448 from amcasey/NestedReturn
Merge pull request #18424 from amcasey/ExtractTypeParameter
Merge pull request #18423 from amcasey/GH18188
Add files as one batch to preserve errors
Support '// @ts-ignore' comments in .ts files
Properly report external filenames
Actually be able to run RWC tests in parallel (#18453)
Update tests and baselines
Improve naming of getPartialTypeFromFalsyUnion
Allow all possibly falsy types in spreads
Update spread tests for booleans in spread types
Allow booleans in spread types
Only introduce return properties at the top level
Stop preventing extraction when a type parameter wouldn't bind
Call getShorthandAssignmentValueSymbol rather than getSymbolAtLocation
Accept new baselines
Update test
Remove intersections of object and nullable types from union types
Make isJavascript parameters required
Use createMissingNode for sentinel node
Merge branch 'master' into fail-spec-lambda-parsing-on-parameter-initialiser-missing-=
Test:javascript signature instantiation w/insufficient type args
Fix:Instantiate javascript constructor signatures
Don't count a write-only reference as a use (#17752)
extractMethod: Support renameLocation (#18050)
Add tests
Merge pull request #18426 from amcasey/FixBaselines
Forbid extraction of empty spans
Simplify event sent on background project update since its anyways just to update the error list
Fix fourslash baselines
Merge pull request #18343 from amcasey/InsertionPosition
Add missed baselines
Don't parse param init when = is required but missing
Fail spec parsing lambdas on parameter missing a =
Should not remove the reused resolutions in the file when file contents have not changed.
enclosingDeclaration can be undefined within getAccessibleSymbolChain (#18400)
Merge branch 'master' into watchImprovements
Merge pull request #18392 from Microsoft/fix-contextually-typing-arguments-object
Merge branch 'master' into watchImprovements
Merge pull request #18093 from RyanCavanaugh/detectBadPlugins
Merge pull request #18391 from Microsoft/fixMappedTypeInference
Merge pull request #18363 from Microsoft/fixIntersectionInference
Merge pull request #18246 from Microsoft/fixControlFlowStackOverflow
Change typed array signatures (#18367)
fix #18225, fix error message on abstract class instance (#18368)
Test:contextual typing of arguments obj in JS files
assignContextualParameterTypes handles arguments object
Accept new baselines
Add tests
Higher order inference for mapped, index and lookup types
Care about esnext where we look for es2015 (#18331)
Remove bisect.cmd, remove reference to missing dts, update usage (#18353)
Add tests
Fix fourslash tests
Preserve intersections on the source side in type inference
Merge branch 'master' into fix-empty-object-property-access
Change wording of scope description (#18342)
In import code fix, don't treat a re-export as an import (#18341)
Do not create map just to store empty reference files. Also update file as changed if file text is same but it had invalidated resolution
Add simple baseline tests for insertion positions
Accept new baselines
Update test
Only track flow analysis stack depth
Add test case to verify correct resolution file is picked when current resolution file is not removed but higher precedence file is created
Remove trailing space from emitLeadingComment
Delete staticAssertNever in favor of assertTypeIsNever
Merge branch 'master' into fixControlFlowStackOverflow
Separate counters for stack depth and visited flow nodes
Add `never` helper function (#18287)
Improve insertion position of extracted methods
Rename visitedFlowXXX to sharedFlowXXX
Revert changes to other baselines
Limit the resolution invalidation to max number of files as invalidation for larger cache might take more time than to just recalculate resolutions
Merge pull request #18165 from amcasey/GH18144
Update baselines
Merge pull request #18333 from Microsoft/fix-forEachChild-JSDocTypedefTag
Merge branch 'master' into jsdoc-dotdotdot-binds-tighter-than-postfix
Inline variable to aid control flow
Remove unnecessary check in emitNodeList (#18327)
Report error on first token of excessively large function or module body
Update baselines
Fix forEachChild's visit of JSDocTypedefTag
Merge pull request #18164 from amcasey/GH18140
Test: parsing of two-line @typedef jsdoc
Revert "Make permittedJumps a parameter to eliminate save-restore pattern"
Correct copied comment
Simplify and correct PermittedJumps computation
Make permittedJumps a parameter to eliminate save-restore pattern
Correct permitted jumps check
Eliminate intersections of unit types in union types
Explicitly avoid canonicalizing paths during configuration handling (#18316)
Return configured project being closed by config file
Handle the combination of a write and a void return
When loading a module from node_modules, get packageId even in the `loadModuleFromFile` case (#18185)
Ensure that emitter calls callbacks (#18284)
Merge pull request #18153 from Microsoft/optimizeArrays
Merge pull request #18315 from amcasey/TIDisabledProjects
Merge pull request #18296 from Microsoft/disable-lookahead-isStartOfParameter
Merge pull request #18317 from Microsoft/object-literal-enum-property-names
Refactor parsePostfixTypeOrHigher
Merge branch 'master' of https://github.com/Microsoft/TypeScript into update-types3
Update pretty baseline changed by #17675 (#18320)
Document assignment to aliasSymbol in getUnionTypeFromSortedList (#17434)
Merge branch 'master' into update-types3
Merge pull request #17675 from HerringtonDarkholme/master
Allow trailing newline to have fake position (#18298)
Update README.md
Update README.md (#17714)
fix initialization of shouldCreateNewSourceFiles (#17686)
Test Literal-typed computed property names in obj literals
Object literals computed property names allow literal-typed expressions
Don't get typings for projects with disabled language services
Merge pull request #18265 from amcasey/ThrottledOperations
Object.getOwnPropertyDescriptor() returns 'undefined' if property descriptor not found. (#18148)
Add typedef declaration space, unify typedef name gathering (#18172)
Adds comment
expose isExternalModuleNameRelative and moduleHasNonRelativeName (#17971)
Fix build break
Update the test cases for project changed event since it doesnt apply to the edits to open files
Add and fix some AST Node parent types (#18200)
ts.server.ProjectService.closeConfiguredProject returns true on success. (#18180)
Added only the source file (#18175)
Enable interface-over-type-literal lint rule (#17733)
Don't provide string literal completions for string enums (#18288)
Rename isStartOfType parameter used by isStartOfParameter
Merge pull request #18096 from Microsoft/fix-codefix-jsdoc-variablelike-decls
Support navTo for special assignment kinds (#18154)
extractMethod: Don't try to extract a single token (#18090)
Support find-all-references for `default` keyword (#17992)
getFormattingScanner: Ensure scanner is closed, and avoid global variables (#18293)
findAllReferences: Handle root symbols of binding element property symbol (#17738)
Get quickInfo from a contextual type if possible (#18119)
Support special JS property assignments in doc comment templates (#18193)
Update `fromCodeFixContext` (#18290)
Allow undefined/null to override all parameters (#18058)
Do not consider UMD alias symbols as visible within external modules (#18049)
Emit comments on system export default expressions on the surrounding export call epxression instead (#17970)
Emit updated export declarations when transformed from export * (#18017)
Allow singleline string writer to be recursively used (#18297)
Accepted baselines.
Update emit for tagged templates to use a per-site cached template objects.
Invalidate resolution of the failed lookup only if its one of the default extension or is one of the failed lookup location without that default extension
Better log for update graph and delay operations
Test:disable lookahead in isStartOfParameter
Add explanatory comment
Fix lint issues
Add `debugName` property to `Rule` (#18289)
Fix 18224 (#18259)
Allow quoted names in completions (#18162)
Reduce the file size for npm install test
Merge pull request #18279 from Microsoft/canonicalSignatures
Update how we get project/script info so that it doesnt start unnecessary update graph
Disable lookahead in isStartOfParameter/isStartOfType
Test new JSDoc surface area
Fix jsdoc lint
Minor changes
Make getJSDocTags public too
Add files to change set instead of delay reloading project on "change" command
Resolution is valid unless it is invalidated
Limit the number of unanswered typings installer requests
Use canonicalized forms when comparing signatures
Document ThrottledOperations.schedule
Revert to use refcount to keep track of directory watchers for failed lookup
Add getJSDocTypeTag to get `@type` tag
Make top-level getJSDoc* functions public
Merge pull request #18258 from Microsoft/improve-complexRecursiveCollections-baseline
Add test for #14574 (#18024)
Merge pull request #18231 from Microsoft/cacheAnonymousTypes
Improve baseline of complexRecursiveCollections
Merge pull request #18207 from Microsoft/recursive-type-reference-cache
Remove added type predicates
Merge branch 'master' into recursive-type-reference-cache
Add test
Disable control flow analysis in excessively large statement blocks
Merge pull request #18126 from Microsoft/propertyRelations
Fix linting errors
Accept new baselines
Optimize caching of type literals
Fix signature help
Improved caching scheme for anonymous types
Test to verify calls to isProgramUptoDate return true when there is no change in compiler options
Merge pull request #18014 from Microsoft/allow-bang+dotdotdot-as-start-of-type
Add depth limit to recursive type reference id generation
Update tests
Simplify return type parsing (#18206)
Make getPostfixSyntaxKind easier to read
Expand type references recursively in cache key
Remove the configured project if on next open file if it has no open files instead of immediately when closing last open file
Reduce storage of maps/sets for failed lookups
Added logic to check for EOF when creating a missing node.
Fix extract method for anon class expressions (#18168)
Update generated files (#18173)
Print number of files in the project when printing project
Update tests
Propagate isRestParameter through symbol instantiation (#18087)
Watch node_modules if possible
Watch for the automatic types that included as part of type resolution
Resolve only once in the given directory for name
Watch failed lookups recursively to reduce number of directory watches Also we dont need to watch type roots any more
Script infos while opening/closing shouldnt mark project as dirty if the contents dont change
Handle watches of missing directories and make project the module resolution host
Reduce number of watches for failed lookup locations as part of module resolution
Refactoring to watches and caching of system such that we minimize function expressions Also unified watcher info logging
Merge pull request #18174 from Microsoft/fixContextualTypeLogicalOr
Merge pull request #17669 from Microsoft/builder
Merge pull request #17820 from Microsoft/tsserverEventChangedFiles
Add regression test
Update Authors.md
Cache contextual type for || operator to avoid exponential compile time
Handle indexed access types in getSymbolAtLocation and findAllReferences (#18149)
Follow up on #16223 cleaning up Array declarations (#18116)
Remove `largeSource` argument to `convertMap.fromSource` (#18098)
Optimize array operations to reduce memory footprint
Add postfix [] ! ? type parsing tests
Parse postfix [] ! ? at the same precedence level
Merge pull request #18121 from amcasey/WalkerCancel
Allow cancellation during extract method's symbol walking
Merge pull request #17811 from RyanCavanaugh/fix17544
Merge pull request #18120 from RyanCavanaugh/fix457864
Don't crash when a JS file appears in an inferred context
Test jsdoc:... binds tighter than *n* postfix tokens
Merge pull request #17988 from amcasey/ExtractGeneric
JSDoc:... binds tighter than *n* postfix jsdocs
Add an ExpandingFlags const enum (#17740)
Add perf comment
Test coupling of type parameters
Test different parameters on classes and methods
Test that the return type of the extracted method counts as usage
Test that type parameters used in constraints are passed along
Document failure to handle type parameter shadowing
Test that in-scope type parameters are not passed explicitly
Switch from .js to .ts so that baselines are syntactically valid
Delete unused baselines
Comment out headers in Extract Method baselines
Handle loose type parameters in Extract Method
Codefix jsdoc types for anything with a .type
Simplify isContextSensitive (#17722)
Use getPropertyOfObjectType to get a superclass property (#18113)
Avoid climbing ancestors in `getAnyImportSyntax` (#17832)
Inline checkLiteralExpression (#17720)
Revert "Handle indexed access types in getSymbolAtLocation and findAllReferences (#17787)" (#18111)
Don't issue a use-before-declared error for a property that exists in a superclass (#17910)
Accept new baselines
Check all properties are present before checking types in relationships
Handle indexed access types in getSymbolAtLocation and findAllReferences (#17787)
Test:jsdoc codefix for variable-like declarations
Provide jsdoc type code fixes for all variable-like decls
Fix RWC - use replayLog, not recordLog (#18095)
Fix typo in comment
Generalise empty object literal property access fix to all object literals
Remove template strings in checker.ts (#18016)
Merge pull request #18077 from fwouts/regex-bug
Detect bad plugins and work around them
Merge pull request #18029 from Microsoft/allow-string-enum-in-element-access
Simplify getAccessibleSymbolChain (#18053)
Explain boolean exception in getIndexedAccessType
Merge branch 'master' into allow-string-enum-in-element-access
Move lone test case into central test file
Always use case-insensitive fs operartions for RWC (#18046)
Merge branch 'master' into fix2-getConstraintOfIndexedAccess
Test:T[keyof T] =/=> T[K] where K extends keyof T
Disallow T[K] = T[keyof T] where K extends keyof T
Merge pull request #18084 from Microsoft/deps
Move browser-resolve to devDependencies
Add test for #18071
Fix TypeScript printer bug when encountering regular expression literals
Use visitNode (#18059)
Use isPartOfExpression in extractMethod, not isExpression (#18047)
`moduleAugmentations` may contain an `Identifier` (#18009)
Merge pull request #18051 from Microsoft/fix17551
Visit destructuring computed names (#18052)
Merge pull request #17791 from Microsoft/dynamicFiles
Fix crash in name resolution with custom transforms and emitDecoratorMetadata
Merge branch 'master' into dynamicFiles
Merge pull request #18042 from Microsoft/fixMappedTypeIndexedAccess
Don't try to extract `import` to a method (#18025)
Test for action description of code actions, and simplify description for extracting method to file (#18030)
Add regression test
Accept new baselines
Perform indexed access type transformations consistently
Defer mapped type indexed access transformations
Fix crash when attempting to merge an import with a local declaration (#18032)
Call dynamic import transform on expression used by export equal statement (#18028)
Merge pull request #18027 from Microsoft/fix16924
Merge pull request #16686 from Microsoft/fix16467
Give mapped type properties a synthetic declaration name (#18023)
Fix issue #16803 do not error on getters/setters (#18031)
Escape \0 followed by a number as a hex escape to avoid printing an octal literal (#18026)
Added additional test
Test:string enum in element access
Allow string enums in element access
Switch to arrow for ts class wrapper IIFE
Merge pull request #17996 from Microsoft/fix16681
Merge branch 'master' into fix2-getConstraintOfIndexedAccess
Simplify `isExpression` check (#17741)
Mark some arrays as readonly (#17725)
Merge branch 'master' into excess-property-checks-for-discriminated-unions
Allow ! and ... as start-of-type tokens
Test:allow more jsdoc types in type parameter lists
Add helper functions for adding an item to an array only if it's not already contained (#17833)
Merge branch 'master' into 6229-known-length-tuples
Update LKG (#17993)
Merge pull request #16767 from Yogu/patch-2
Fix crash when exporting class without name
Update generated files (#17995)
Merge pull request #17907 from Microsoft/excessPropCorrection
Merge pull request #17994 from Microsoft/allow-question-token-as-start-of-type
Test:jsdoc nullable syntax legal in type arguments
Parsing:Allow QuestionToken as start of type
Expose isSourceFileFromExternalLibrary (#16112)
Merge pull request #17844 from amcasey/SymbolWalker
Merge pull request #17984 from Microsoft/typeReferenceRelations
Ports #17983 (#17986)
Comment getTypeReferenceId and getRelationKey
Update baselines
Test performance improvement:nested reference skip
Revert image label change (#17981)
Accepted baselines.
Add tests to verify project changed event sent
Fix instrumenter target + deprecation warning (#17973)
Merge pull request #17468 from RyanCavanaugh/newTypesMap
Merge pull request #17879 from Microsoft/fix17875
Merge
For JSX Attributes, map over unions of props for contextual types (#17790)
Edits from aozgaa review and simplify regex
Allow use before declaration for export= assignments (#17967)
Region now starts at beginning of comment, and reviewer edits
Merge branch 'master' into excessPropCorrection
Reuse exiting getFirstIdentifier function
Retrieve type parameter constraint using getConstraintFromTypeParameter
Add support for walking IndexTypes, IndexedAccessTypes, and MappedTypes.
Fix copy-paste error
Fix lint errors
Update SymbolWalker tests
Use Maps to store visited types and symbols
Reshape SymbolWalker API
Make SymbolWalker internal
Rebase SymbolWalker change onto master
Add api in builder to get changed files and use it to send project changed event
Merge pull request #17839 from RyanCavanaugh/ignoreScripts
Add test for #16955 which simulates npm install
Update the failed lookup watches without doing lookups. This helps in not having to deal with duplicate locations and checking if there exists watch Anyways the watches are refCount based so we would just addref and remove ref on the same watches
In Server when polling the file stat's do not send changed event in case the file doesnt exist.
Adding test for #16456 to verify watched directories in case-sensitive and non sensitive file system and fixing caching
Adding test for #16329 to verify the caching of file system when opening file
Update imaged with Java 8 and other patches (#17965)
Fix to use correct target type ID
Optimize relations for type references with unconstrained type arguments
Merge pull request #17922 from Microsoft/baseExpressionTypeParameters
Merge branch 'master' into 6229-known-length-tuples
export UsageEntry used by already exported functions 🌹 (#17853)
Add test for region spans
Ensure returned spans are ordered by start
Exclude region delimiters in multiline comments
Ensure region boundaries are entire line
Clean up unused functions
Fix name capture logic
Add regex sweep implementation
Add support for custom outlining regions
Merge branch 'watchImprovements' into builder
More PR feedback work
Simplify resolveBaseTypesOfClass (#17918)
Ensure string enums are generated in protocol.d.ts (#17914)
add strictTuples flag giving tuples known length
Add regression test
Accept new baselines
Add comment
Accepted baselines.
Actually misspell the property name.
Merge branch 'master' into fix-empty-object-property-access
Fix tests that had syntax errors with empty object literal property accesses
quickInfo: Don't check for `type === undefined`, check for `any` (#17815)
Fix stack overflow when resolving default construct signatures (#17878)
Clean up other statement to match style
Merge pull request #17709 from uniqueiniquity/objectsInArray
Fix empty object literal property access
Style changes and cleanup
Only give suggestions when the name is an identifier.
Add release-2.5 to covered branches
Add test that demonstrates bug
Test getConstraintOfIndexedAccess fixes and update baselines
Fix #17069 and #15371
Merge branch 'watchImprovements' into builder
Merge branch 'master' into watchImprovements
When getting default project from session, get it only if the script info is not orphan Since the closed script info's that are orphan arent removed immediately but on next open request, treat the orphan script infos as if they are not present in the session
Update .npmignore (#17905)
Accepted baselines.
Try to provide a spelling suggestion when object literals have excess properties.
Ensure that property suggestions are correctly escaped.
Merge pull request #16385 from aozgaa/isInMultiLineComment
Remove the unused function from the Project since builder has this logic now.
Merge branch 'watchImprovements' into builder
Made updates to not expose methods/types that arent needed.
Accepted baselines.
Added test for leading underscore property name suggestions.
Deduplicate inputfiles before running RWC tests (#17877)
Merge pull request #17903 from Microsoft/revert-17870-fix-getConstraintOfIndexedAccess
Revert "Fix getConstraintOfIndexedAccess"
Merge pull request #17870 from Microsoft/fix-getConstraintOfIndexedAccess
Revert public API changes to logger (#17899)
Update based on feedback
Type parameters from class should not be in scope in base class expression
respond to comments
remove duplicate verify
Remove debug assertions due to invalid syntax in generators transform
Treat explicit imports from `node_modules` as external library imports (#16364)
Simplify mapped-type handling in computeBaseConstraint
Test getConstraintOfIndexedAccess fixes and update baselines
Fix #17069 and #15371
Remove duplicate function (#17807)
Merge pull request #17631 from Microsoft/synthesizedNamespaces
Merge pull request #17838 from Microsoft/rev2.6.0
Merge pull request #16621 from aozgaa/formattingAfterParseError
Merge branch 'master' into fixIifeIndentation
Merge branch 'master' into formattingAfterParseError
test if `onlyMultiLine` flag changes answer
cleanup
Merge branch 'master' into isInMultiLineComment
clarify `JsxText` handling
Use simpler indentation for comments
add tests
rename tests
update test
`JsxText` has no leading comments
Addressed code review feedback.
Updated version in 'src' as well.
Have `grammarErrorAtPos` take the source file of its argument (#17834)
Replace 'isSourceFileJavaScript(getSourceFileOfNode())' with 'NodeFlags.JavaScriptFile' (#17835)
Array arguments to `concat` should be `ReadonlyArray`s (#17806)
Ignore scripts for types packages
fix some copy-pasting error (#17766)
Merge pull request #17710 from Microsoft/add-readonly-check-to-property-access-of-index-signature
Bump version to 2.6.0.
Indexed-assignment readonly err is not unknownType
Remove unnecessary call to `getApparentType` (#17788)
Merge pull request #17771 from Microsoft/fixCircularContextualType
Added host.useCaseSens..., memoized getDefaultLibFileName.
add test
Fix linter issues
Change function name to camelCase (#17751)
Fix lint errors.
consolidate isInComment and getRangeOfEnclosingComment
dont compute preceding token twice
`findPrecedingToken` handles EOF child more gracefully
findPrevious changes
cleanup
Actual fix + test
Use checkExpression to resolve symbols
Merge pull request #17796 from basarat/patch-1
Filter + log undefined elements from the codeActions array
Remove unused `UseTypeAliasValue` flag (#17779)
In services, show the aliasSymbol for a type even if it's not accessible in the current scope (#17433)
Make the failedLookuplocations to be readonly array
export interfaces used by exported functions 🌹
export ScopeUsages 🌹
Update to PR feedback
Accepted baselines.
Just track the local names of identifiers instead of ever using symbols.
Changed check for default library by first checking hasNoDefaultLib, second library path and third name of file.
Fixed failing tests and lint. Added unit tests.
Excluded the default library from rename service.
Introduce the concept of a Dynamic File
Update based on feedback
More work based on feedback
Fixes to session's handling of empty results (#17728)
Accept missing baseline updates for #13721
Updating according to feedback from PR
Simplified mutate map options
Merge pull request #17767 from tycho01/15768-generic-numeric-index-error
Add explanatory comments, consolidate main body
Make exportSymbol public (#17457)
Merge pull request #16631 from Microsoft/fix13721
simplify fix as suggested by @ahejlsberg
Add regression test
No contextual return type when type is circular
loosen number index check, fixes #15768
Add test case for nested object spread / methods
Add missing visitNode call to object literal members
Merge branch 'watchImprovements' into builder
Merge branch 'master' into watchImprovements
Make compiler options which map to a flag case-insensitive again (#17755)
More work on PR feedback update
PR feedback
More work on feedback from PR
Merge pull request #17602 from Microsoft/multiInferredProjects
Comment update
Merge pull request #17750 from Microsoft/importFixInferQuote
Accepted baselines.
Added test.
Added tests, pr feedback
More updates per PR feedback
Add support to infer the quote style for import quick fixes
Cleans up and adds nested case to test
[Master] fix 16407 - LS in binding element of object binding pattern (#16534)
Fix runtests-browser with latest node (#17735)
Merge pull request #17625 from RyanCavanaugh/extract-method-2
Add "preserveSymlinks" option (#16661)
Use `hasModifier` and `hasModifiers` helper functions (#17724)
PR Feedback
Merge
Merge branch 'master' into extract-method-2
Use isReadonlyArray
Use the function stack!
Style fixes
Style fixups
Do not inline sourcemaps in jake - source-map-support can't handle it (#17732)
Generalize to nested arrays and refactor
Various fixes
Various fixes
Fix many no-object-literal-type-assertion lint errors (#17278)
More work on PR feedback
More updates based on PR feedback
fix end-of-file assert failure
Accepted baselines.
Added test for class/namespace merging with an ESNext target.
A function should be context-sensitive if its return expression is (#17697)
Treat NoSubstitutionTemplateLiteral same as a StringLiteral (#17704)
Simplify `assignTypeToParameterAndFixTypeParameters` (#17706)
Add test for #16144 (#17712)
Test:property access respects readonly index signature
Lower RWC Harness Memory Overhead (#17692)
Add readonly check to property access of index signature
Merge pull request #17708 from Microsoft/fix-type-predicate-index-in-errors
add fourslash test
Test:type predicate uses correct index to report errors
Fix type predicate index in error reporting
Fix outlining of objects in array
Add simple version of `chooseOverload` for common case of single non-generic signature (#17589)
For duplicate source files of the same package, make one redirect to the other (#16274)
Remove unused internal utilities (#17380)
Add a leading space on binary operator token trailing comments (#17691)
Don't check function expression grammar if this is SkipContextSensitive (#17698)
Fix import addition location (#17327)
Merge pull request #17261 from unional/patch-2
findAllReferences: Type parameter is not globally visible (#16419)
Fix 16628: "undefined" exception when name of binding element in binding pattern is empty (#17132)
Session: don't return undefined if a response is required (#17165)
Inline childFromLineNumber and childFromCharOffset (#17018)
scriptVersionCache: Export less (#17202)
Merge branch 'master' into isInMultiLineComment
Retain comments inside return statements (#17557)
Merge pull request #17658 from Knagis/14559-non-polling-watcher
PR Feedback
TSLint now realizes when you attempt to use a rule which is not present (#17688)
Create synthetic default exports for dynamic imports (#17492)
Merge pull request #17404 from Microsoft/use-type-param-constraints-for-computed-prop-types
Merge pull request #17517 from tinganho/IgnoredCatchParameter
Add parentheses:clarify evaluation order of &&/||
Feedback from the PR
Use isTypeAny instead of checking flags directly
Add test case from #14439 (#17627)
Remove unnecessary check that type is ObjectType (#17418)
Merge branch 'master' into use-type-param-constraints-for-computed-prop-types
Add a seperate cache for the all attributes version of the jsx attributes type (#17620)
Add tests for #15358 (#17664)
Merge pull request #17394 from vvakame/openParentFormatting
Merge pull request #17660 from Microsoft/weak-type-errors-on-signature-only-types
validateSpecs: Use array helpers (#17275)
Add specific weak type error for callable types
Simplify server logger (#17271)
Don't count self-reference when setting `isReferenced` (#17495)
tsserverProjectSystem.ts: Remove unnecessary 'export's (#17201)
Deduplicate unresolvedImports (#17248)
Convert two arrays to readonly (#17685)
MultistepOperation: Don't need 'completed', just use `requestId === undefined` (#17173)
Merge branch 'master' into weak-type-errors-on-signature-only-types
Add lint rule to check that `Debug.assert` calls do not eagerly interpolate strings (#17125)
Fix parsing of globalPlugins and pluginProbeLocations: Don't include empty string (#17143)
Fix logging of module resolution errors (#17144)
Simplify parameters to updateProjectStructure and updateErrorCheck (#17175)
FileWatcher - handle empty directory path as the current directory Fixes #14559
fix #16567: better coloring on light theme terminal
Merge pull request #17604 from Microsoft/implicitlyExcludeNodeModules
fix lint errors
Merge branch 'master' into implicitlyExcludeNodeModules
fix lint errors
Get semantic diagnostics for the program from builder so that it caches the errors of unchanged files
Merge branch 'master' into isInMultiLineComment
supressFormatOnKeyInComments
Merge pull request #16953 from charlespierce/destructure_completion_nonpublic
Merge pull request #17633 from Microsoft/indexSignatureMappedType
Merge pull request #17634 from Microsoft/fixSignatureStackOverflow
Address CR feedback
Implementation for invalidating source file containing possibly changed module resolution
Partial implementation for invalidating the program (instead of source file as that would involve more work) so the files are picked up
Implementation of watching the failed lookup locations
Add test that fails because we dont watch module resolutions failed paths
Test for the module resolution caching
Use cache for module resolution even in watch mode
Switch back to have tsc.ts the only file thats different in tsc.js generation now that api has tests
Refactoring so that instead of just using from tsc --watch the new api is accessible all the time
Add tests to verify emitted files
Modify the api in builder so that it tracks changed files
Emit tests
Add tests for the tsc --watch
Refactor watched system from tsserver tests so that tscLib watch can leverage it
Refactor out the tsc logic into another file so we can use that to test it out
Use builder to emit the files from the tsc.js
Move the builder to compiler directory
Refactor so that builder handles only source files and program
Initial refactoring so that watch from tsc follows the tsserver projects
Program cannot be reused if the missing file is now present Also dont update filesByName array just to update missing file paths
Make the host cache store the fileName instead of undefined for the missing host files
Do not update graph in builder if compile on save is not on
Refactoring of the builder
Merge branch 'master' into watchImprovements
Update weakType test + baselines
Weak type errors for signature-only types too
Restrict parsing of literals and their expressions a _lot_ more (#17628)
Merge pull request #17521 from Microsoft/deferLookupTypeResolution
Add regression test
Propagate type comparer function in contextual signature instantiation
Add tests
{ [P in K]: T } is related to { [x: string]: U } if T is related to U
Accepted baselines.
Made the first-declaration check conservative in the TypeScript transform.
Accepted baselines.
Added failing test for a before-transform that indirectly replaces a namespace declaration.
Accept JSDoc cast comment baseline
[Master] fix 12985 emit leading and trailing comment around binary operator (#16584)
Extract Method (squash)
implementation comment
Merge branch 'master' into inferFromRelatedTypesOnly
Merge branch 'master' into isInMultiLineComment
exclude node_modules unless explicitly included
Use findAncestor in more places (#17601)
Adds support for inferred project isolation by projectRootPath
Test:infer from related types only
Only infer from members of object types if the types are possibly related
Merge pull request #17425 from ikatyang/fix-17392
JSDoc Instantiation Fixes (#17553)
Merge pull request #17455 from Microsoft/mappedTypeFixes
Amend comment about explicitly setting catch clause variables to 'undefined'.
Set a high stack trace limit in command-line and server scenarios (#17464)
Add tests
Accept new baselines
Typo
Properly handle constraints for types like (T & { [x: string]: D })[K]
Adds missing test cases
Addresses CR comment
Merge pull request #17497 from Microsoft/disposeWatchedDirectoriesOnlyIfPresentMaster
Merge branch 'master' into use-type-param-constraints-for-computed-prop-types
Add regression test cases and rename test
isTypeAssignableToKind:Chain isTypeAssignableTo calls
Improve name:isTypeAssignableToKind+cleanup TODOs
Accept baseline
Fix find-all-references for destructured getter (#17483)
Fixes CR comments
Move comparer types to public namespace (#17437)
Accept baselines
Addresses CR feedback
Fix runtests-browser in gulp, including RWC, remove into-stream (#17540)
Update LKG (#17538)
Merge pull request #17536 from minestarks/fix15223
Missing import codefix: Take scoped packages (@foo/bar) into consideration
Allow JSXAttribute to be IdentifierName (#17466)
Generate diagnostics without a leading comma, retain old spaces (#17534)
Accept new baselines
Add tests
Defer indexed access type resolution in more cases
adds test for try-catch-finally
remove debugger
Removes valid test cases from invalid test case file
Accept baselines
Add tests
Adds transformers for ignored catch parameter
Adds optional catch parameter into the compiler
Add diagnostics
Clean up
Forbid type assertions in '.js' files (#17503)
Replace a 'forEach' with 'find' (#17499)
Forbid non-null assertion in '.js' files (#17481)
Fix bad parameter comment (#17496)
Fix the errors in branch after port of #17469
Update the test
Added | undefined to properties for watching that can be undefined
dispose the watched wild card directories only if present
jsTyping: Better logging for addInferredTypings (#17249)
processDiagnosticMessages: Simplify code and emit (#17463)
Merge pull request #17474 from Microsoft/quickFixLeftOfPropertyAccess
Add check to ensure that property access suggestions are only performed on the accessed property.
Added failing test case.
Merge pull request #17430 from Microsoft/inferenceExcessProperties
Merge pull request #17382 from Microsoft/fixPartialTypeRelations
Remove debugger;
Fix tests
Remove double 'if' (#17436)
Add gulpfile support
Types Map WIP
Merge pull request #17462 from Microsoft/codeFixForErrorForPropertyOfTypeAsType
Remove unnecessary references in 'src/harness/tsconfig.json' - they're already referenced in 'src/harness/codefixes/fixes.ts'.
Updated baselines.
Added/augmented tests.
Add another use of the Comparer type (#17438)
Merge pull request #17459 from Microsoft/errorForPropertyOfTypeAsType
Added codefix for replacing qualified names with indexed access types.
Add test case for code fixes on qualified names used instead of indexed access types.
processDiagnosticMessages: Simplify check for uniqueness of names (#17331)
Added assertion.
Accepted baselines.
Provide a more helpful error message when incorrectly using qualified names in the case of 'Type.propertyName'.
Accepted baselines.
Add some missing `| undefined` in parser.ts (#17407)
Added test case.
JsTyping: Remove "safeList" global variable (#17304)
createMissingNode: Only assign '.text' or '.escapedText' on nodes of the correct type (#17439)
Add regression tests
Add missing check in getIndexedAccessForMappedType
Accept new baselines
fold into one check
Make isTypeOfKind delegate to isTypeAssignableTo
Missing import code fix - include export assignment properties when looking for module exports  (#17376)
Escape string literal before looking it up in enum's symbol table (#17441)
Fix #16778 - use previous type and not declared type (#17381)
Change isStartOfParameter to be more general (#17431)
Properly check mapped type constituents / Fix generic mapped type display
Merge pull request #17352 from Microsoft/jsdoc-param-type-literals
Make safelist an instance field of ProjectService (#17307)
Tests for #17371 (#17373)
Merge branch 'master' into jsdoc-param-type-literals
Update baselines
Address more PR comments
Fix infinite loop in jsdoc parsing (#17420)
Add regression test
Fix typo: Infered -> inferred (#17417)
Only check excess properties on final types from inference
Add comment clarifying isNotNeededPackage (#17321)
Retain literal type for prefix plus on number literal
Use ReadonlyArray in utilities.ts (#17413)
Actually let you disable colors with jake (#17414)
Rename `symbol.name` to `escapedName` and make `name` unescaped (#17412)
Remove unnecessary `MapLike`s in commandLineParser (#17324)
Update baselines
Address PR comments from Andy
generateTSConfig: Remove unnecessary variable (#17330)
Add 'name' property to Identifier (#17329)
Revert #17074 (#17326)
Merge pull request #17405 from Microsoft/publishParallel
Make the 'publish-nightly' target run tests in parallel.
Test:use type param constraints for computed prop types
Use type param constraints for computed prop types
Add SpaceBetweenOpenParens rule
Merge pull request #17354 from weswigham/fix-parameter-parsing-infinite-loop
getResolvedModule: Don't need to call hasResolvedModule (#16423)
Use scanner position instead of node members
Add repro
Accept new baselines
Add tests
Much simpler fix, rolls in really old fix, removed unused comment
Given T extends Foo, make Partial<T> related to Partial<Foo>
Indent list of open files (#17255)
Add current time to tsserver logs (#17268)
Tests covering the bug
Fix for loop which retains jsdoc behaviors
`@param` parsing:const enum to improve readability
Test: jsdoc `@param` type literals
Update JSDocParsing unit test baselines
Parse jsdoc type literals in params
Merge pull request #17302 from minestarks/removeimportfix
Convert Array to ReadonlyArray/Push in commandLineParser.ts (#17323)
Cleaner path splitting, refine file extension and case sensitivity handling
Fix quote styles to match
Merge pull request #17257 from armanio123/FixNodeModulesTodos
Merge pull request #17141 from Microsoft/master-17060
Fix exceptions on empty tuple errors (#17311)
simplify isFileSystemCaseSensitive test (#17169)
Merge branch 'master' into watchImprovements
Make many 'static' variables readonly (#17306)
Merge pull request #17314 from gcnew/checkTypeGuardConstraintConformance
Remove duplicate `emptyArray`s (#17305)
Merge pull request #17313 from Microsoft/fix-tslint-typeOperatingSpacingRule
Fix linter (#17312)
Added tests
Fix typeOperatingSpacingRule:use ReadonlyArray
Check the return type of type guard functions
Added explanation comment for excluding files.
Fix configure-nightly script to match new contents of core.ts (#17014)
Simplify use of array helpers (#17301)
Remove duplicate helper (#17296)
Bugs in missing import codefix
Binder: handle JS property assignment that comes after a method declaration with the same name (#16830)
MultiStepOperation: No need to create a 'NextStep' object, just use self as the NextStep (#17174)
Appropriately parenthesize keyof and typeof queries in array types (#17272)
Add 'clear' helper (#17209)
Make NodeArray readonly (#17213)
Introduce a ReadonlyMap interface and use it in core.ts (#17161)
getJSDocParameterTags: no need to handle JSDocFunctionType, just return undefined (#16837)
Merge pull request #17252 from Microsoft/contextually-type-this-in-object-literals-in-javascript
Add unknown property to test of contextual this type
ParameterDeclaration: `name` may be undefined (#17074)
Fix #17023 (#17180)
Merge pull request #17250 from Microsoft/quickfix-jsdoc-in-ts
Merge pull request #17254 from Microsoft/generic-Object-jsdoc-creates-index-signature
Add jsdoc to getNullableType now that it's public
Update es5.d.ts
Use jsdoc casts (#17251)
Added node_modules path check on getTodoComments method.
Merge branch 'master' into watchImprovements
Reduce the number of watched config files by watching the chain only in case of inferred root
Update name of `getIntendedTypeFromJSDocTypeReference`
Fix lint
Improve naming and style a little
JSDoc:Object<string, T> creates index signature
Contextually type this in object literals in JS
Make sure not to truncate the stringified type from typeToString
Issue template: Recommend to run `tsc` directly (#17246)
Merge pull request #17210 from Microsoft/readfile
JSDoc codefix:getTypeFromTypeNode >>> typeToString
Update jsdoc codefix tests; test function(...) syntax
Reuse stored types for any[] and Promise<any> instead of creating new ones (#17179)
convertFunctionToEs6Class: Bail if this is not a JavaScript file (#17149)
Fix error message
Added another todo as now we are watching too many files
Fix bug in importTracker: `getExportNode` must verify that we are on the LHS of a VariableDeclaration (#17205)
Minor cleanups in builder (#17208)
Codefix for ?! pre/postfix JSDoc types
Codefix for Array.<number> -> Array<number>
Transform trees rather than produce strings
Merge branch 'parse-jsdoc-with-ts-type-parser' into quickfix-jsdoc-in-ts
Merge pull request #17176 from Microsoft/parse-jsdoc-with-ts-type-parser
Improve test of jsdoc literal type parsing
Combine the logic to find config file as well as the watch. This should speed up the file open scenarios where the file belongs to same configured project as we would use cache to answer those fileExists answers
Use map for configured project instead of the array
Instead of watching directories, watch tsconfig files of inferred project root
Refactor root files addition/update for non inferred project
Remove the duplcate error about no input files found
Some refactoring to combine files removal from inferred project
Logging of the watch add/remove/event
Add codefix for jsdoc types in Typescript
Add simple jsdoc code fix changes
`readFile` may return undefined
Merge branch 'master' into parse-jsdoc-with-ts-type-parser
Parse more types in JSDoc function() syntax
Address more PR comments
Merge pull request #16600 from alexeagle/pretty2
Update baselines
Better JSDoc generic errors and faster isInJSDoc
Improve JSDoc function checking
Remove JSDocConstructor/ThisType and just use named parameters
Update baselines
use single instance of getCanonicalFileName
Add fourslash tests for function(new/this:T) syntax
Merge branch 'master' into watchImprovements
Combine moduleHasNonRelativeName with isExternalModuleNameRelative (#16564)
Add missing word in error message
Remove unnecessary 'ts.' qualifications (#17163)
Update baselines
Test JSDoc parsing using TS parser
Allows the delayed update graph and project structure which helps in batching the updates when there are multiple files added/removed/changed
Parse JSDoc types using the normal TS parser
Merge pull request #17078 from minestarks/removeimportfix
Use array helpers instead of 'reduce' (#17172)
Remove unneeded ExportType and ExportNamespace flags (#16766)
When adding completions for a module, don't get the type of the module if not necessary. (#16768)
displayPartWriter: Use try-finally to clear (#16807)
getSingleLineStringWriter: Use try-finally, and only one stringWriter (#16751)
getApplicableRefactors: Don't return undefined response (#16773)
Add logging to discoverTypings (#16652)
Clean up getJavaScriptCompletionEntries (#16750)
Add assertion to computePositionOfLineAndCharacter (#17121)
TODOs for the scheduling update graph and referesh projects
Merge pull request #17025 from Microsoft/master-16763
Remove the done TODO
Update baselines
Add test for export variable statement
Transform class member of export class declaration
Fixes the fourslash runner tests by handling hosts that cannot support read directory or getDirectories
Update tests
Add a bit more validation around comments
Indent filesToString (#17130)
Add assertion that module / type reference names are defined (#17124)
buildTreeFromBottom: Really simplify loop (#17105)
getSwitchClauseTypes: exit early if getTypeOfSwitchClause is undefined (#16865)
Merge pull request #17096 from Microsoft/improve-return-type-parse-error
Merge pull request #17079 from Microsoft/noTypeArgsSum
Use the cached file exists/directory exists for configured project since we watch the needed files
Cache the read directory results so that it doesnt end up reading it all the time
Convert most of core.ts to accept ReadonlyArray (#17092)
Merge pull request #17082 from Microsoft/master-16201
Use platform agnostic newline
Addressed feedback.
Fix case where we can return [undefined]
Fix comment behavior in remove unused named bindings
Remove incorrect comment
format error message with newlines
Fix caret update logic in fourslash tests
Rename SignatureFlags enum and improve its usage
Update types instantly when the type root changes.
Only update file list when there are changes in the watched directories
Make enum private and fix fillSignature predicate
Test:better error for wrong return token (: vs =>)
Merge pull request #17083 from amcasey/Vsts461481
Better error for wrong return (: vs =>) in types
In getDeclarationSpaces, treat a type alias as a SymbolFlags.Type, not a SymbolFlags.Value (#16624)
Switch fillSignature boolean params to single enum
buildTreeFromBottom: simplify loop (#17091)
Use array helpers in more places (#17055)
Consistently use `isInJavaScriptFile` helper (#17075)
Fix typo (#17064)
Completion for default export should be '.default' (#16742)
Correct FileWatcherEventKind in server polling method
Merge pull request #16969 from ikatyang/fix-16941
Add tests and update baselines
Treat both  object and Object the same
Minor cleanups in scriptVersionCache (#17021)
Improvements to LineIndex.edit (#17056)
Handle the deleted file in update graph better, so that in next update it is possible to schedule the update graph of project
Declare 'sum' so that it doesn't require type arguments.
Code fix to remove unused import should preserve default import
Fix call to getCodeFixesAtPosition (#17063)
Merge branch 'master' into master-16763
More detailed error logging in Fourslash
Applying edits in Fourslash can cause caret to move off-range
Merge pull request #17044 from filipesilva/patch-1
Type-check `sum` (#16823)
Remove ILineInfo type (#17017)
Optimize wildcard watchers and config directory watching as now we have missing file watching as well We dont need to explicitly watch config file directory as it will be watched: - if there was no files specified, in wild card directories - if there were files specified as missing file (if the file wasnt present)
When config file is deleted, apart from removing the projecty, reload the configured projects for open files from that project to ensure to pick them by another config file that can be present in parent directory
Reload the configured project only once even though there are multiple files open from that project
Update the todo list
Remove the functions to trigger watch callbacks now that it is auto on reloading FS
Move the server file system to handle watches on file/folder create, update and delete This will ensure that the calling of watches doesnt rely on writing test correctly
Add project roots in the list of root files even if they arent present on the disk This helps in reporting errors as well as syncing of the configured/external project when the files are created
Restructure updating the configured project from disk and actual project update Also reload the projects when extra extension in the host change
When opening a file, if it is using existing project, there is no need to update the project by re-reading the config file This will improve the opening file perf for file opens from same config project
Improve performance of JSDoc tag utilities (#16836)
Remove `createFileMap` (#16810)
Remove EmptySafeList (#16647)
Allow to narrow the type of an import (#16658)
Allow visitors to return undefined
Merge pull request #16954 from Microsoft/optimizeTypeRelations
Merge pull request #16952 from Microsoft/optimizeForEachChild
Cast identifier names to string in lint rule (#17027)
Add tests and update baselines
import keyword a left-hand-side expression
LineNode.add: return value never used (#17016)
Minor cleanups to ScriptVersionCache (#16983)
Use decodeSpan more (#16990)
Minor cleanups to EditWalker (#16980)
Minor cleanups to LineIndexSnapshot (#16981)
Inline `getDestructuringParameterName` (#16973)
Use Map<true> for sets (#16972)
Have `isObjectBindingPatternElementWithoutPropertyName` return the binding element (#16956)
Use 'push' and 'pop' methods instead of using array.length (#16979)
Clean up findChildIndex (#16984)
Never return undefined from `getExportsOfModule` (#17013)
Clean up creation of 'args' in client.ts (#17009)
Enable "object-literal-shorthand" lint rule (#16987)
Add missing docs for module: 'none' in tsc --init
gulp-typescript does handles config extension correctly now (#16992)
Use correct source root for tests (#16982)
Remove duplicate entries from tsconfig files (#16991)
Start using a union for FunctionLike things (#16988)
Created a branded type for identifier-escaped strings (#16915)
Merge pull request #16748 from aozgaa/implementOptionCrash
Merge pull request #16878 from aozgaa/caretPositionInFourslash
Merge branch 'master' into caretPositionInFourslash
i++
non-default args
Add package lock to gitignore (#16770)
remove `fixCaretPosition`
#15214 Remove nonpublic members from destructuring completion lists
Merge branch 'master' into optimizeTypeRelations
Merge branch 'master' into optimizeForEachChild
consolidate function call
update tests
update caret position based on edit range
Merge pull request #16696 from Microsoft/fix15663
Merge pull request #16844 from Microsoft/codefix-spelling-correction-for-typeparameters
Merge pull request #16847 from Microsoft/master-RWC
remove BOM
Test:spelling suggestions for more types
spelling:getPropertiesOfType instead of objectType
Merge pull request #16657 from aozgaa/formatOnOpenCurly
Merge pull request #16862 from Microsoft/dedupe-some-utility-code
Dedupe some utility code
Merge pull request #16846 from Microsoft/remove-unused-bindWorker-code
respond ot comments
Update RWC runner
check error early and return null to indicate that everything is going well
Remove unused code in bindWorker
Spelling code fix:suggestions from apparent type
Merge pull request #16697 from RyanCavanaugh/preserveMethodComments
Add tests
Merge pull request #16684 from amcasey/Vsts434619
Address PR feedback
only format open curly up to the open curly
Handle `depth` in all readDirectory implementations (#16646)
Merge pull request #16833 from ltearno/master
Add missing file unit tests
Watch files through the host
Confirm method is defined before calling
Clean up file watchers on project close
Track missing files
Update error case check
getSymbolOfEntityNameOrPropertyAccessExpression: combine common code from PropertyAccessExpression and QualifiedName cases (#16827)
Fix typo (#16826)
Comments incorrectly read 'TypeFlags' instead of 'ObjectFlags' at some places
Add alwaysStrict option (#16562)
Merge pull request #16704 from charlespierce/namespace_export_default
Clean up uses of ensureScriptKind (#16714)
respond to comment
Fix scope of @typedef references (#16718)
Replace FileMap with Map where there is no keyMapper (#16724)
disable spaceBeforeOpenCurly if newline rule is enabled
Remove duplicate switch cases (#16721)
findAllRefs: Find string references inside of template strings (#16723)
only format opencurly if no intervening tokens
Merge pull request #16736 from DickvdBrink/issue/15208
Merge pull request #16734 from HerringtonDarkholme/error
Merge pull request #16719 from mbrickn/patch-1
Merge pull request #16698 from Microsoft/master-16017
Fix gulp & types for gulp to 3 (#16771)
Provide better services for incomplete generic calls (#16535)
visit question token
remove unecessary check
Consistently use variable mangledScopedPackageSeparator instead of magic "__" string (#16713)
respond to comments
Add property comments as well
fix #16702: polish type predicate error message
Updated links to use https and avoid redirects
Add early bail out for token nodes
Code cleanup in jsTyping.ts (#16632)
Fix missed lint error
#16300 #16301 Diagnostics for default export in namespace
Merge pull request #16375 from Microsoft/skip-block-scope-for-global-symbol
Update symbols baselines from re-ordering of the signatures
Add tests and update baselines
Simplify forEachChild
Reorder promise.all signatures
Preserve method comments in JS->ES6 conversion. Fixes #16622
Merge pull request #16178 from Microsoft/master-fix13306
clarify comment
fix and add test
Ignore jsdoc when inferring rest args in JavaScript
Merge pull request #16664 from amcasey/TokenWorker
rename variables
Added test for unused typeparameters in a typealias declaration
Also check TypeAlias for unused type parameters Fixes #15208
Follow symbol through commonjs require for inferred class type
cleanup
add test
unspoof call expression start in iife
Merge branch 'master' into optimizeTypeRelations
Short-circuit getTokenAtPositionWorker
Merge pull request #16663 from mihailik/master
Enquote undefineds.
More efficient recording of intermediate results in type relations
`hasProperty` doesn't need to be generic (#16650)
add and update tests
format space before single-line blocks
format on open curly
Merge pull request #16544 from Microsoft/master-fixIncrementalParsingWithDynamicImport
Add tests
Use custom error message in Debug.fail (#16625)
Emit class annotation comment on downlevel classes
rename test
update tests
apply formatting after parse error
Add missing newline in --pretty diagnostics formatter
Use the same logic of getting current directory as the one used when emitting files through project It means we would use currentDirectory as project Root or script info's directory as the current directory Fixes issue reported in https://developercommunity.visualstudio.com/content/problem/57099/typescript-generated-source-maps-have-invalid-path.html
Merge pull request #16539 from Microsoft/updateBuilderOnlyIfItHasInfos
Merge pull request #16283 from Microsoft/fixRunParallel
Add semi-colon
Merge branch 'master' into fixRunParallel
Address comment: fix comment
Merge pull request #16566 from Microsoft/keywordFilters
Merge pull request #12336 from Microsoft/ownJsonParsing
Address PR
Show public/private/protected/readonly when looking for constructor parameter and otherwise parameter declaration or property declaraiton should result in no completion Fixes #15937
In TypeScript code, never bind JSDoc normally, just set parent pointers (#16555)
Merge branch 'master' into ownJsonParsing
Allow running in strict mode (#16557)
Merge pull request #16213 from charlespierce/await_yield_literals
Set the structureReused to be safemoudles when dynamic import change
Add tests
Wip-fix incremental parsing
Update the builder dependency graph only if it was created. This makes sure that we dont create this graph just because project was updated
Merge pull request #16530 from Microsoft/excess-property-check-error-span-for-spread-property
Merge pull request #16494 from Microsoft/dontCreateScriptInfosWithFileExistsAndReadFile
Add comment to new code in hasExcessProperties
Add comment for deletion of orphan script infos in file open
Fix #16521: mark thisArg as optional in typed array map function (#16526)
Use first declaration, not valueDeclaration
Move the cleanup of script infos to next file open This helps in reusing script infos even if the project is closed but next open recreates the same project
Test:error span for spread prop in excess prop check
Improve excess property check for spread property
Merge pull request #16525 from Microsoft/remove-undefined-from-optional-spread-properties
Remove undefined from optional spread properties
Merge pull request #16502 from Microsoft/fix16211
Switch to sameMap
Merge branch 'completionWithMeaning'
Merge branch 'master' into completionWithMeaning
combined logic in parseParameterOrPropertyTag (#16481)
Add tests and update baselines
Add "undefined" as return type
Merge pull request #16493 from Microsoft/master-housekeeping
Merge pull request #16505 from Microsoft/decl-emit-parenthesize-keyof
Remove unnecessary get type from JSDoc comment
Test:correct parens around keyof in decl emit
Add parentheses around keyof in declaration emit
Fix class extends+decorator with new class emit
Merge pull request #16497 from Microsoft/use-checker-for-decl-emit-of-optional-param-props
Fix constructor instantiation with defaults
Fix grammar check for empty type argument list and compiler crash
Test:declaration emit of optional parameter props
Add isOptionalUninitializedParameterProperty
Simplify generic function call error reporting (#16439)
Merge branch 'master' into master-fix13306
just update issue template
Use checker for decl emit:optional parameter props
Merge pull request #16309 from aozgaa/codeFixPrefixUnused2
Merge branch 'master' into completionWithMeaning
Merge pull request #16488 from Microsoft/add-jsdoc-to-eof-token
Merge pull request #16433 from Microsoft/suppressBraceCompletionOfQuotesinComments
Test @typedef in @typedef-only JS files
Add JSDoc to EOF token to catch missed @typedefs
Merge pull request #16406 from Microsoft/master-fix16402
Address PR
Update version
Cleanup script infos that are not part of any project when the project is closed or inferred projects are refreshed Also dispose some pointers so that the closures get disposed with project and script infos
Merge pull request #16463 from Microsoft/jsdoc-@template-in-scope-as-type-parameter
respond to comments
Merge pull request #16465 from Microsoft/skip-non-null-assertion-for-reference-expr
getPossibleSymbolReferencePositions: Always use full start (#16420)
Simplify isDeclarationNameOrImportPropertyName (#16421)
Merge pull request #16466 from Microsoft/fix-build-break
Fix reference to isTypeParameterDeclaration in services
Test: Allow ++ after non-null assertion
Checking references skips assertions+parentheses
Don't bind JSDoc namespace in a TS file (#16416)
Rename `isTypeParameter` to `isTypeParameterDeclaration` (#16422)
Update jsdoc of new function
Consolidate getting type parameter declarations
Cleanup getTypeParametersFromDeclaration et al
Merge pull request #16368 from Microsoft/stricterGenericChecks
Returned generic function is instantiated correctly
Type params introduced by @template are in scope
Add test
Add --noStrictGenericChecks compiler option
Support completions in destructuring in for-of (#16454)
Add isForInOrOfStatement utility (#16455)
Document highlights for a JSX tag should just be the matching tag, not all references (#16453)
Merge pull request #16446 from Microsoft/fixNeverIntersection
Add tests
Intersection with 'never' type always produces 'never'
Split import into var and type to avoid breaking backword compatability of tsserverlibrary (#16409)
fix offsetting and tests
Suppress brace completion of Quotes in Comments
Convert Extension to a string enum (#16425)
Update baseline
Dont create script snapshots for files that arent source files
request returns span
Add more excess property check tests for unions
Do not check excess properties for multi-discriminant unions
Fix comments
Merge branch 'master' into stricterGenericChecks
Merge branch 'master' into dynamicNames
Fix escaping and follow symbols for element access
Don't bind JSDoc type parameter in a TS file (#16413)
make indent work with trailing comments
Add hash of project file location to project info telemetry (#16397)
Add fourslash rename, find-all-reference on imported property
Merge pull request #16374 from minestarks/typingcacheversion
Implement LS on string-literal of dynamic import
Correct excess property error on ambiguous discriminated unions
--isolatedModules: Still allow re-export of type in a declaration file (#16399)
Merge pull request #16343 from Microsoft/weak-types-for-primitives
Merge pull request #16346 from Microsoft/fix15618
Merge pull request #16382 from Microsoft/ContainsMaster
rename tests
add tests
revert test changes
Only add underscore in * for-in * for-of * parameters
Support completions for qualified names in JSDoc (#16380)
Fix #16367: remove const modifier from tsserverlibrary.d.ts (#16381)
indent block comments according to first line
Added comments for fresh/regular unique symbol types
comment typo
Improve contextual types and return type checking
Fixed up comments.
Correct pluralization of 'Contain' to 'Contains', made the nodeflag internal.
Merge pull request #16377 from Microsoft/fix-synthetic-properties-in-hasExcessProperties
Merge pull request #16378 from Microsoft/master-PortChange
Merge pull request #16366 from Microsoft/useInspectBrkForTests
Merge pull request #16376 from Microsoft/fix14506
Include dynamic import during pre-processing needed by VS
Add incremental tests
Merge branch 'master' into fix15618
Remove unneccessary debug.fail as by defualt we will add commonJS module transformation step
Copy PossiblyContainDynamicImport from old source file to new one
Merge pull request #16310 from Microsoft/enableDebugInfo
Test synthetic properties w/hasExcessProperties
Adjust source map offsets for variables in downlevel async funcs and generators
hasExcessProperty only uses valueDeclaration if available
Test:Block-scoped definition of Promise works
Skip block scope check with no error location
Set typings cache location per TS version
Use --inspect-brk for test debugging
PR Feedback
Merge branch 'master' into stricterGenericChecks
Accept new baselines
Remove convoluted code that attempts to re-fix type parameters
Test:excess property checks--discriminated unions
Excess property checks for discriminated unions
Merge pull request #16335 from Microsoft/delay-signature-return-type-instantiation
Merge branch 'master' into delay-signature-return-type-instantiation
Update tests and baselines
Always use getPropertyOfObjectType in isKnownProperty
Update authors for TS 2.4
Update generated files
Merge pull request #16316 from Microsoft/fix14056
Improve contextual types using jsdoc tags
isInMultiLineComment
Merge pull request #16341 from Microsoft/fix15651
Test weak type errors with primitives
Detect weak type errors with primitive sources
Merge branch 'master' into fix15651
Fix lint failure (#16338)
Fix parameter emit for synthetic function types
Merge pull request #16330 from Microsoft/fix-js-infer-rest-args
Merge branch 'isInMultiLineComment' of https://github.com/aozgaa/TypeScript into isInMultiLineComment
Accept new baselines
Infer generic type for lambda with generic contextual signature
PR Feedback
temp
Merge pull request #13272 from Microsoft/externalExportStar
Test returning an infinite type in an intersection
Delay instantiation of signature return type
Support completions for JSDoc @param tag names (#16299)
enforcing curly braces (#16315)
Update baselines
Add tests for JS-inferred rest parameters
Create js-inferred rest params in getSignatureOfDeclaration
Support find-all-references for `export =` of class expression (#16327)
Fix typo in getTypeReferenceType
Merge branch 'master' into externalExportStar
Merge pull request #16311 from amcasey/mtime
Merge pull request #16307 from RyanCavanaugh/refactor_refactor
Merge branch 'master' into dynamicNames
Limit getTypeReferenceType to two passes
Better types from jsdoc param tags
Merge pull request #15935 from chuckjaz/external-file-source-map
Merge branch 'master' into stricterGenericChecks
Merge pull request #16305 from Microsoft/contextualGenericTypes
Add support for external file references in source maps
Rename function
Merge pull request #16282 from Microsoft/fix16086
Reuse already-computed modification time
Merge branch 'master' into fix16086
Tidy up
Handle missing body case
Enable debug info when running tests
prefix identifiers
Merge pull request #16196 from Microsoft/fix15959
Accept new baselines
Merge pull request #16306 from Microsoft/fix-nullable-filtering-in-spreads
Refactor refactor
Merge branch 'master' into contextualGenericTypes
Added tests and improve type of new expression
Remove redundant fourslash test
Fix fourslash test
Ignore nullability in contextual signature instantiation
add tests for trivia
Test spread in unions of null/undefined
update existing tests
Filter nullables after lifting union over spread
add tests
Accept new baselines
Move spreadUnion* tests into conformance suite
Fix fourslash tests
Verify JS function is constructor
Merge branch 'master' into fix15959
Add tests
Accept new baselines
Fix fourslash tests
rename codeFix
Allow contextual signature to be generic
Encorporting feedback
Merge branch 'master' into ownJsonParsing
Merge pull request #16277 from minestarks/safelistpackagenames
fix #15447: `object` is empty object type (#16290)
Stricter type relationship checking of generic signatures
Wip-report error when sof happen while running in parallel
Merge pull request #16281 from Microsoft/master-MergeDynamicImport
Fix emit when type import merges with local value
Undo change and go back to making a copy of leadingComments and trailingComments (#16273)
Merge pull request #16279 from Microsoft/fix15928
Add typingsInstaller unit test
Fix breaking tests
Revert "Revert "[Master] wip-dynamic import" (#16264)"
Typos in test cases
Merge branch 'master' into ownJsonParsing
Fix for..await emit for es2017
Merge pull request #16045 from aozgaa/codeFixAddMissingMethod
JSX Closing tags get priority over other completion types (#15922)
Merge pull request #16194 from Microsoft/fix-reexported-missing-alias
Typeof can refer to a class in a previous file with --out (#16269)
discoverTypings should look at typingSafelist.json values
importFixes: Support missing "React" at a JSXOpeningElement (#16066)
Make use of array helper functions (#16226)
random commit
Merge pull request #15308 from chuckjaz/external-files
Merge pull request #16266 from Microsoft/favour-exact-spelling-suggestion
Favour exact-match spelling suggestions
Revert "[Master] wip-dynamic import" (#16264)
Merge branch 'master' into ownJsonParsing
Merge pull request #14774 from Microsoft/master-dynamicImport
Update command line
Update baselines from moving out of es2018
Rename test file with ES2018 to ESNext
Remove ES2018 folder
Use ESNext instead of ES2018
Array cleanup (#16223)
Sorted rules alphabetically (#16252)
Preserve type parameters in generic contextual pure function types
Include SymbolFlags.Function in couldContainTypeVariables check
Address minor error messages
Merge pull request #16231 from amcasey/NoMapRoot
program.getSourceFile[ByPath] can return undefined
Delete dead code resulting from 20c11b4f3dc2ee36fd46edbdd6801d5a4298f901
Merge pull request #16225 from Microsoft/sandersn/weakType
No weak type checks with comparable relation
Merge pull request #16183 from amcasey/SourceMapProtocol
Merge pull request #16047 from Microsoft/sandersn/weakType
Merge pull request #16210 from amcasey/Vso411288
Accept new baselines
Centralize weak type checking + improve error message
Merge pull request #16182 from amcasey/MissingNullCheck
Add some new bind errors to a couple of the JS baselines
Add `@checkJs: true` to JS bind error tests
Make tokenToString return string|undefined (#16106)
Merge pull request #16181 from Microsoft/improve-style-of-browser-tests
Fix linting
Update name change of isSpreadExpression
Merge branch 'master' into master-dynamicImport
Update baselines
Address PR: remove __resolved when emit for commonJs and just do Promise.resolve().then(...)
Address PR: error message, fix capitalization, only allow functionLikeDeclaration and ImportCall for create Promise, use fall through comment
Address PR: change order of grammar check
Address PR: don't early exit when there are grammar errors
#15943 #15981 Update special cases for await / yield parsing
Use emptyArray, rather than []
Use unix cache location on the major BSDs (#16187)
Add regression tests
Apply --checkJs to bind diagnostics as well as check diagnostics
respond to comment
Completion list in the type expression should show types
repond to feedback
suppress type annotations in js file
Merge pull request #16110 from Microsoft/master-refactorJsDocTest
Remove trailing whitespace from tsconfig.json (#16197)
Allow JS constructor function to return non-void
Improve documentation and naming
remove comment
use length helper
rename fourslash method
Filter symbols based on the meaning at the location
Use factory for all fixes
Merge branch 'master' into ownJsonParsing
Rename isWeak -> isWeakType
Test reexport of a missing alias
Combining unknown type+value symbol->unknownSymbol
Cleanup from bootstrap attempt
Get rid bootstrap, jquery and selector buttons
Add support across files and static, js methods
add tests
Apply codefixes across files
Guess 1: null check is missing; Guess 2: ternary does the appropriate check
Stop prepending file:// to sourcemap paths
Improve the look and usability of browser tests
Merge pull request #16156 from Microsoft/report-jsdoc-syntax-errors
Merge pull request #16120 from Microsoft/fix15857
Use `it` instead of `describe` for tests (#16172)
Merge branch 'master' into fix15857
Update tests/baselines
Add tests
Get jsDoctype for property assignment
Merge branch 'master' into master-refactorJsDocTest
Merge pull request #16174 from Microsoft/max-10-errors-for-suggestions
Stop spelling suggestions after 10 name errors
Make node type predicates public (#16121)
Merge pull request #16157 from Microsoft/fix16153
Merge branch 'fix15857' of https://github.com/Microsoft/TypeScript into fix15857
Merge branch 'master' into fix15857
Merge branch 'master' into fix16153
Merge branch 'master' into dynamicNames
Merge pull request #16160 from Microsoft/fixBuildScripts
Merge branch 'master' into dynamicNames
Update build scripts for npm5
Merge branch 'master' into fix15857
PR feedback
Merge branch 'master' into addCodeFixMissingMethod
Fix issue with 'for await' over a union type
Merge branch 'master' into master-refactorJsDocTest
Update fail symbol baselines
Merge pull request #16122 from Microsoft/master-fix16092
Test reporting jsdoc syntax errors
Report jsdoc syntax errors when checkJs is on
Merge branch 'master' into ownJsonParsing
PR Feedback
Always return empty object when converting the json sourcefile into actual json object, allowing to continue compilation even if there are errors in the tsconfig files
Merge pull request #16135 from katemihalikova/diff3
Merge pull request #16149 from Microsoft/billti/port16113
Fix equals
Wrap npmLocation if needed
Merge branch 'master' into master-refactorJsDocTest
Merge branch 'master' into master-fix16092
Merge pull request #16134 from Microsoft/master-fix15250
Merge pull request #16133 from Microsoft/master-fix15824
Add tests and baselines
Add support for diff3-style conflict
remove whitespace
Add fourslash tests
Update tests and baselines
Handle "object" as "Object" in JSDoc type expression
Update tests and baselines
"function" without followed by "(" should be considered as Global function type
Add tests and update baselines
Parse ts-style property tag
Add wrapper to emit statics/decorators inside es5 class
Rename parameterName to name
Make configFile on compiler options as non enumerable
Reorganized code to keep createBundle and updateBundle in factory.ts
Re-enable weak type check for intersection props
Update baselines
Rename test files to be more consistent and move them into jsdoc folder
Merge pull request #16072 from Microsoft/improveTypeArgumentInference
Merge pull request #16094 from Microsoft/master-@propWithBracket
Address CR feedback
Weak types must not have call or construct sigs
Support services for @typedef (#16087)
Add missing undefined type for createProperty initializer (#16095)
Allow configurable npmLocation for typingsInstaller (#16084)
Add tests and baselines
Support bracket for optional property
Merge pull request #16070 from Microsoft/master-15916
Fix linting
Add tests and baselines
Address PR
Fix build breaks with the instrumenter
Add project telemetry (#16050)
Merge pull request #16081 from Microsoft/findAllRefs-state
Use tslint@latest (#16049)
Clean up instance variables
findAllRefs: Replace 'interface State' and 'createState' with just 'class State'
Merge pull request #16059 from Microsoft/mappedTypeDeclarations
In findAllReferences, always return undefined (global) symbol scope for properties; also update baselines
Improve naming and refactor for readability
Take into account optional property in parameter
Accept new baselines
Add tests
Move return type inference to inferTypeArguments function
Improve comments in source and tests
Fix lint
Fix the build break of typings installer
Update baselines
Fix react tests w/incorrect weak type assignments
Merge branch 'master' into ownJsonParsing
Merge pull request #16063 from Microsoft/master-fix12979
Merge branch 'master' into master-dynamicImport
Merge pull request #16052 from Microsoft/master-fix15825
Fix emit duplicate comment
InferenceContext is-a TypeMapper instead of has-a TypeMapper
added es2017.intl (#15369)
Merge pull request #16060 from Microsoft/remove-remove
Use `orderedRemoveItem` instead of `remove` helper
Set '.declarations' on a property of a homomorphic mapped type
Merge pull request #15867 from Microsoft/configFileInListOfProjectFiles
Add tests and update baselines
Update baselines
Return "Function for JSDocType {Function}
Report config file errors as part of syntactic diagnostic on the file
Update tests
Add type alias for TypeReferenceType and convert to use JSDoc
Object literal formatting (#16007)
fix #11463, null assertion block uninitialized error (#14020)
cleanup
Remove mistakenly commited auto-generated file
Allow export default interface. Related to issue 3792. (#16040)
rename helper
testing
Merge branch 'master' into weakType
Detect weak type correctly for intersection types
add missing method
Merge pull request #16031 from Microsoft/isWriteAccess
Add missing emitter for NamespaceExportDeclaration (#16025)
add `createProgram` docs (#15697)
Add missing questionToken in emitMethod/PropertyDeclaration (#16020)
Fix the issue 15232 (#16004)
[Master] Fix 15179 missing comment in switch case clause (#16033)
Merge pull request #16023 from Microsoft/mrjs
Merge pull request #16026 from Microsoft/importEqualsMethod
Update more return types to include undefined (#15903)
findAllReferences: Make "isWriteAccess" handle special declaration kinds
Fix typo: symbol -> parentSymbol
In path mapping module resolution, try loading from path as directory even if it has an extension
buildSymbolDisplay: Handle alias parentSymbol
Merge pull request #15966 from Microsoft/kind
Merge branch 'master' into kind
Merge pull request #15545 from aozgaa/atTypesPrefixAndImportSuffix
Fix linting errors
Fix fourslash test
Merge branch 'master' into weakType
Do not report weak type errors for intersections
Port lib changes 5 22 2017 (#16005)
Add missing undefined type (#15999)
Merge pull request #15932 from Microsoft/decl-emit-class-expr-as-type-literal
Add more tests and update baselines
Merge branch 'master' into improveTypeArgumentInference
Accept new baselines
Clean up implementation
Add error for class exprs w/private properties
Initial implementation of return type inference
Make CommandTypes a const enum and use `allCommandTypes` for unit test
Fix missing initializers
Convert  other namespace + type alias in protocol.ts to const enums
Also convert ClassificationTypeNames and CommandTypes/CommandNames
Merge pull request #15958 from Microsoft/make-getNameOfDeclaration-public
Fix path in importDeclTypes.ts test (#15992)
Address most PR comments
Remove dead code from binder
Merge pull request #15993 from Microsoft/getTokenAtPosition
Revise type inference data structures
Fix use of getTokenAtPosition to use updated signature
Merge pull request #15856 from Microsoft/jsdoc
export type used by an exported function (#15965)
Make ScriptElementKind and HighlightSpanKind string enums
Merge pull request #15940 from phated/fix-createTypeAliasDeclaration-parameters
Fix updateTypeAliasDeclaration call
More fix+cleanup in getNameOfDeclaration
Remove incorrect code in getNameOfDeclaration
Add `undefined` to return of getNameOfDeclaration
Make getNameOfDeclaration public
Merge pull request #15569 from RyanCavanaugh/new_refactor
Refactoring support (squash)
Merge pull request #15954 from Microsoft/typeArgs
Fix #15540: Throw error when importing @types (#15866)
Unconditionally compute type arguments of class base type
Merge branch 'master' into weakType
Merge branch 'master' into jsdoc
Merge branch 'master' into jsdoc
Separate bind worker for JSDoc nodes, and only enter it if in a JS file
Merge pull request #15737 from Microsoft/findAllRefs_module
Merge pull request #15938 from Microsoft/retain-undefined-in-spreads-w/strictNullChecks
Debug.assert(false) -> Debug.fail()
Merge pull request #15861 from Microsoft/improve-arity-error
Merge pull request #15924 from RyanCavanaugh/allowLocalPluginLoads
Make {create/update}TypeAliasDeclaration API consistent (closes #15918)
Remove stale baselines
Test:retain undefined in spreads w/strictNullChecks
Retain undefined in spreads w/strictNullChecks
Finish botched merge from master
Merge branch 'master' into improve-arity-error
Test:decl emit for class expressions as type lits
Declaration-emit class expressions as type literals
Add flag to allow local plugin loading
Merge pull request #15910 from Microsoft/primitives
Merge pull request #15486 from Microsoft/literalEnumTypes
Add `| undefined` to test
Accept new baselines
Merge branch 'master' into literalEnumTypes
Merge pull request #13900 from Microsoft/object-literal-freshness-with-spread
Merge pull request #15849 from Microsoft/allow-spread-after-required-params
Merge pull request #15909 from Microsoft/isDeclarationFile
getAllPossiblePropertiesOfTypes: Skip primitives
Remove 'isDeclarationFile()' function, use '.isDeclarationFile'
Set @typedef parent pointer, but still do not bind a symbol
Expand tests that jsdoc does not affect typescript code
Merge branch 'master' into jsdoc
Merge pull request #15890 from Microsoft/todoComments
Merge pull request #15790 from aozgaa/typeToStringViaTypeNode
Merge branch 'master' into typeToStringViaTypeNode
respond to comments
Services utilities: Combine `isInsideComment` with `isInComment`
Merge pull request #15880 from Microsoft/getDeclarationOfKind
Update return types of APIs (#15887)
Merge pull request #15860 from Microsoft/no-filter
Merge pull request #15884 from Microsoft/fix-gulp-tsc-instrumented
Add target and lib references for tsc-instrumented
Replace unnecessary `let` with two `const`s
Merge pull request #15882 from Microsoft/findAncestor
Update baselines
Clean up original errors
findAncestor: Add generic overload for use with type predicates
getDeclarationOfKind: Improve type safety
Merge pull request #15863 from Microsoft/fixRedundantTypeInference
Address CR feedback + defer creation of visited map
Update baselines with new error numbers
Split error messages so they are localisable
break -> continue
no ascii escaping in param names
revert baselines
avoid ascii escaping literal text
Update baselines
Improve arity errors for all calls
Get configFiles as part of file names
Fix #15463: use intersection types to emulate spread in generic react  components (#15851)
Merge pull request #15862 from Microsoft/fix15829
Eliminate redundant exploration in type inference
Fix issue with throw in async delegator.
Update baselines
Improve arity error messages
getTokenAtPositionWorker: Remove duplicate loop
Remove goToImplementation test, not supported for parameters
Support for JSDoc in services
update tests
Merge branch 'master' into ownJsonParsing
Correct test argument in callwithSpread2
Clean up comments in tests
Merge pull request #15846 from Microsoft/findAllRefs_symbolNoName
Inline function that is called once
Test:spread array after required params
parenthesization in factory
Allow spreading arrays after required parameters
Merge pull request #15781 from Microsoft/inline
Merge pull request #15843 from DickvdBrink/issue-15828
findAllReferences: In `export default foo`, symbol name is `foo`
Accept baselines for const enum changes
Only report used before declaration errors on regular enums const enums don't generate code and the values are inlined so now error is necessary
temp
handle todo
Merge pull request #15791 from Microsoft/fix13935
Merge pull request #15808 from alexeagle/master
respond to comments
Extract diagnostics formatter used by --pretty
Merge pull request #15614 from Microsoft/completionListForClassElementDeclarations
Merge branch 'master' into completionListForClassElementDeclarations
Merge pull request #15805 from Microsoft/Fix14661
Add insertSpaceAfterTypeAssertion to the server protocol
cleanup
Merge branch 'master' into typeToStringViaTypeNode
Merge pull request #15789 from Microsoft/master-fix15742
Add the members of interfaces that need to be implemented to class element completion
Address PR
Merge pull request #15754 from charlespierce/string_literal_completion
Merge pull request #15783 from Microsoft/goToDef-default
Don't goto aliased symbol with no declarations; and update tests
Merge pull request #15541 from Microsoft/union-completion
Clean up naming, add documentation, flatten (some) nested commas
Merge pull request #15777 from Microsoft/move-levenshtein-out-of-public-API
Adds CommaList to avoid large deeply nested comma expressions
Add more tests and update baselines
getApparentType of the propsType
Remove unused flags
handle todo
use EmitFlags.SingleLine
move state to flags
cleanup
Merge pull request #15788 from Microsoft/fix15707
remove souceFile checks
Update baselines
Add tests and update lib tests file
getApparentType for each constituent of props type of the targetAttributesType
if a JSSpecialPropertyDeclaration has a JSDoc type, use it
goToDefinition: Skip default and `=` imports
Merge branch 'master' into union-completion
Merge pull request #15753 from Microsoft/es2017Atomics
Filter out existing members of the class from the completion list
Accept baselines and update test
Inline resolvedModuleFromResolved
Merge pull request #15772 from Microsoft/getWidth
Move Levenshtein distance out of public API
Merge pull request #15751 from Microsoft/tsx-gotodef
Merge pull request #15771 from Microsoft/ambient-block-scoped-references-in-different-files
Handle escaped identifiers
findAllReferences: Clean up uses of `getWidth` and `getStart`
Add async to the list of class element completion keyword and refactoring according to feedback
Test:reference ambient block scoped vars in different file
Allow references to ambient block scoped variables
Simplifying the json conversion notifier
Switch map to be used as a set rather than a map
type arguments in qualified names
Merge pull request #15767 from Microsoft/moduleResolution
Merge branch 'master' into ownJsonParsing
Merge branch 'master' into ownJsonParsing
Fail on bad moduleResolution kind
Merge pull request #15539 from Microsoft/isolated-modules_export-star
Merge pull request #15538 from Microsoft/isolated-modules_re-export-type
Prevent Duplicate String Literal Completions
Adds definitions for the es2017 Atomics global object
Merge pull request #15673 from Microsoft/import-star-export-equals
Merge pull request #15741 from Microsoft/import_propertyName_isWriteAccess
Merge pull request #15744 from Microsoft/CompileOnSaveFixInResolveModuleName
Fix bug for goto-definition on a TSX constructor using an alias declaration
Merge pull request #15743 from Microsoft/findAllRefs-enum-namespace
Merge pull request #15740 from Microsoft/emit-expression-in-extends-nested
Also make EnumMember have Type meaning
An enum should include a Namespace SemanticMeaning
isDeclarationName: Return false for LHS of `import { x as y }` and `export { x as y }`
Fix lint
Test: no declare in declaration tmp in namespace
Correctly emit expression in extends in namespace
In shims.ts resolveModuleName should only return resolved modules found in ts files (.ts, .d.ts, .tsx)
Support find-all-references for a module specifier
Merge branch 'master' into dynamicNames
Merge pull request #15714 from HerringtonDarkholme/lib
Merge pull request #15703 from Microsoft/require-calls
Merge pull request #15594 from Microsoft/get-name-of-declaration-wrapper
fix #15666: mark file as optional in Diagnostic
add typeArguments to identifier
Merge pull request #15704 from Microsoft/Fix15062-2
fix typo
trailing comma
mapped type indent
Parenthesize function types
Merge pull request #15677 from Microsoft/find-all-refs-mapped-type
Fix #15062: report errors for parameter properties in private constructors
initializer issues
Merge pull request #15694 from astegmaier/patch-1
Unnamed nodes now extend Declaration, not NamedDeclaration
Merge pull request #15507 from Microsoft/spelling-correction
Merge branch 'master' into spelling-correction
importTracker: Require calls are stored in `sourceFile.imports`, no need to search for them
getOwnPropertyDescriptor return should allow undefined
fix malformed nodes
Type Literal and Binding Name formatting
Merge pull request #15678 from Microsoft/master_allowSpreadGenericType
Merge branch 'master' into get-name-of-declaration-wrapper
Merge pull request #15588 from Microsoft/mapped-table
Merge pull request #15609 from Microsoft/jsx-redundant-code
Fix linting error
Update baaselines
Switch to Declaration/NamedDeclaration hierarchy
Merge pull request #15665 from Microsoft/check_kinds_static
Revert "Convert `Declaration` to union, not type hierarchy"
Revert "Fix lint"
Revert "Turn ClassElement and TypeElement into unions too"
Remove checks for `symbol.declarations`
Merge pull request #15669 from Microsoft/simplify-js-check-in-index-constraint-errors
Update tests and baselines
Do not error when spread generic type
findAllReferences: Given a synthetic property, find references for the original property.
Merge pull request #15531 from Microsoft/moreFactoryFuncs
Given `import *` of an `export =` module, raise an error but still return a symbol.
Merge pull request #15668 from Microsoft/completions-keyof
Merge pull request #15670 from Microsoft/signatureHelp
Parameter improvements
Clean up test a little
Merge pull request #15139 from Microsoft/config-extension
Remove old commented-out code from signatureHelp
`UseFullyQualifiedType`
Merge pull request #15595 from Microsoft/master-fix15463
Update test with trickier case from #15616
Merge branch 'master' into config-extension
Merge pull request #15039 from Microsoft/resolveJavaScriptModule
Simplify JS check in index constraint error reporting
In addStringLiteralCompletionsFromType, use getBaseConstraintOfType instead of getApparentType
Update baselines
Refactor "isKnownProperty" to be use outside of checkTypeScriptAssignable as JSX do excess property after
Turn ClassElement and TypeElement into unions too
Merge pull request #15634 from joechung-msft/joechung-15477
Remove check for static from checkKindsOfPropertyMemberOrderrides, which is only called on instance side
Merge pull request #15576 from Microsoft/typeVariableTypeGuards
Support @arg and @argument synonyms for @param JSDoc tag
Improve union type reduction for symbol()
Merge pull request #15624 from Microsoft/fix15603
Fix var emit order for converted loops
Merge pull request #15560 from Microsoft/tokenRange
Ensure we get the correct symbol for nodes, clean up
Better qualified name handling
Wip - remove freshness flag from jsx attributes
Address comments: simplify, dedupe and clean up
accessibility check
convert type format flags
emit type parameter's default
Fix lint
Use `symbolToName` instead of copying
Convert `Declaration` to union, not type hierarchy
fix inTypeAlias logic
Tune the completion list for static and private modifiers Do not show inherited members in completion for when writing private member Show only static inherited members when writing static member
Give the class element completion on typing keywords like public, private, readonly Also when name of the function is location, make sure we are actually looking at the same symbol before using the declaration to get signature to display
Completion list for a class extending another class should contain members from base class Handles #7158
Merge branch 'dynamicNames' into symbolLiterals
parens and this param for function type
Add aliasing test
Emit dynamic names for object literal types
Merge pull request #15600 from mjbvz/log-when-types-registry-is-updated
Updates tests and baselines
Remove some redundant code in createJsxAttributesTypeFromAttributesProperty
Add tests and baselines
Merge pull request #15537 from Microsoft/emit-declaration-of-class-extending-intersection
Merge pull request #15593 from Microsoft/jsdoctagnames
Address PR
Add Log for When Typings Installer Finishes Updating the Types Registry
Update tests anad baselines
Allow excess property in spread attributes but also check if any explicitly specified attributes are correct
Update baselines
Address PR comments
Add freshness to unique symbol types
Update baselines
getNameOfDeclaration uniformly, including JS decls
Basic parens handling and stubbed TypeFormatFlags
Merge pull request #13540 from Microsoft/metadataReferences
Early support for unique symbol type
Wip-fixing spread type
Remove tests that depended on exact number of jsdoc tag names
Deduplicate jsDocTagNames and sort alphabetically
Merge pull request #15557 from Microsoft/unused-type-parameter
Merge pull request #15590 from Microsoft/fix15471
Update baselines
Add check for tslib __await helper
Merge pull request #15586 from Microsoft/fix-index-constraint-check-for-js-class-exprs
Symbol table for homomorphic mapped type: Don't needlessly create twice
Merge pull request #15490 from SaschaNaz/allowArguments
Merge pull request #15521 from Microsoft/fix15471
Update tests
Only get apparent type when constraint includes nullable types
Merge branch 'master' into master-dynamicImport
Merge pull request #15577 from mleko/master
Test:index constraint check on js class expression
Add JS declaration to index constraint check error reporting
Reuse code from getTypeReferenceType
Remove @types/gulp-typescript dependency
Add tests
New behavior only for type variables with nullable constraints
Merge pull request #15568 from Microsoft/master-15455
Merge branch 'master' into spelling-correction
Fix case of suggestion blacklist.
Add tests and baselines
For React Component class, we fill in missing type parameter and instantiate the constructor signature with the new type arguments.
Merge pull request #15566 from Microsoft/master-fix15469
Obtain apparent type before narrowing type variables
Blacklist some built-ins and improve max cutoff
make internal
Include primitives in type-as-value error message
Add tests and update baselines
Update baseline
Don't stop checking other attributes even though we see spread type. This is so that things are correctly marked as reference and type-checked
respond to comments
revert core changes
restore `startsWith`
revert noop change
factor out helpers + cleanup `startsWith` and friends
Add isCallOrNewExpression helper
Lower allowed length difference for suggestions
Reduce max number of spelling suggestions to 10
Make TokenRange an interface and remove `ITokenAccess` delegation
Lower allowed levenshtein distance for suggestions
Mark type arguments as used even if used in an invalid way
fix symbol display for computed properties
Merge branch 'master' into atTypesPrefixAndImportSuffix
Merge pull request #15542 from aozgaa/importFixesOrganization
handle @types and scoped @types
add tests
PR feedback
Accept baselines
Merge branch 'master' into dynamicNames
Add declaration file output to tests
move import getCodeActions into named method
For completions of union type, get all possible properties
__asyncDelegator cleanup
Merge pull request #15528 from Microsoft/async-computed-method
Merge pull request #15535 from Microsoft/getTargetOfExportSpecifier
Never elide an `export *` when `--isolatedModules` is set
Don't allow to re-export a type when '--isolatedModules' is set
Update baselines
Declare synthetic var for class extends expression
Re-use code from 'getTargetOfExportSpecifier'
Switch to __await sentinel, better support for return values
Fix formatting for async computed method: Allow space between 'async' and '['
direct isInAmbientContext
Fix over agressive async delegation
Merge branch 'master' into moreFactoryFuncs
Merge pull request #15511 from mohsen1/add-ts.createTypeAliasDeclaration
Merge pull request #15261 from aozgaa/moduleReuse
respond to comments
Merge pull request #15519 from Microsoft/optimizeSignatureRelations
Optimize signature relationship checks in instantiations of same type
assert length
reorder enum
Merge pull request #15518 from vkurchatkin/empty-property
Merge pull request #15517 from Microsoft/fixTranspileTest
Fix failing transpileModule test
Allow indexed access to empty property
npm install test
Simplify returns
Allow string for name when creating a TypeAliasDeclaration
Fix issues raised in PR review
Fill out remaining factory functions
Fix semicolon lint
Only 100 spelling corrections for unknown symbols
Add createTypeAliasDeclaration and updateTypeAliasDeclaration factories
Merge pull request #15500 from phated/interface-declaration
clarifying comments
More thorough module reuse test
Update type signatures for {create|update}InterfaceDeclaration
Update baselines
Codefix:suggest spellings+update others w/new codes
Suggest spelling for unknown symbols + properties
Add {create|update}InterfaceDeclaration methods (closes #15497)
Merge pull request #15496 from Microsoft/rm_fallthrough
allow use of arguments on ambient context
Merge pull request #15491 from SaschaNaz/newformat
unusedIdentifierFixes: Factor out nested switch statements and fix implicit fallthrough
Merge pull request #15494 from Microsoft/fix_importClause_npe
A couple of small simplifications
Add isWriteAccess
importTracker: Fix error for undefined importClause
Accept new baselines
Fix declaration emit for string valued enum members
no space after new on constructor signatures
Merge remote-tracking branch 'refs/remotes/Microsoft/master'
Report errors from duplicate member names
Add new tests
Update old test
Update comment
Cache source and target flags in local variables
Accept new baselines
Enum literal type is assignable to regular literal type with same value
Accept new baselines
Treat enums with a single literal member as literal enums
Add support for declaration emit
Allow some dynamic names in types
Accept new baselines
Update test
Support string valued members in literal enums
Merge pull request #15451 from rictic/iterables-for-readonly-collections
Avoid double-resolving modified files
Add tests and update baselines
Add target ES5 emit
Address PR: 	don't use Promise.resolve, 	capture reject in AMD require callback, 	create helper for UMD 	don't use arrow function
Fix type-to-string handling of enum literal types
Add missing space.
inline `createOldProgramState`
Accept new baselines
Classify literal enum members and NumberLiteral/StringLiteral etc.
 check ambient modules before reusing old state
Merge pull request #15423 from Microsoft/fix15403
Merge pull request #15364 from Microsoft/RulesProviderPerformance
Fix block-scoped enum declarations
Changes from CR feedback
Merge pull request #14779 from jwbay/transformers-for-transpilemodule
Fix baselines and function call from merging master
Merge branch 'master' into master-dynamicImport
Merge pull request #15404 from Microsoft/updateVersionTo2.4
Address minor PR comment
Update LKG
Update version
Store actual literal value in LiteralType instances
Move check for module kind is ES2015 into grammar check; Use checkNonNullExpression and add tests
Address minor PR comment
add unit test
expose transformers option to transpileModule
Merge pull request #15379 from Microsoft/fix14945
Accept new baselines
Clean up computeEnumMemberValues function
Merge pull request #15377 from Microsoft/fix15192
Do not rename references to class inside of the class body function
Fix class name emit in ES5
Fix visitEachChild for signatures
Allow plugins to provide a list of external files.
Merge pull request #15357 from Microsoft/es2015-transform-accessors-containing-captured-this
RulesProvider performance improvements
Merge pull request #15350 from Microsoft/improve-message-for-untyped-module
Merge pull request #15362 from Microsoft/contextually-type-spread-assignment
Test contextual type of object spread expressions
Contextually type object spread expressions
Reword message:more detail about declaration files
Test ES2015 transform of accessors w/captured this
ES2015 transforms accessors with captured `this`
Fix lint
Update baselines
Merge pull request #15320 from Microsoft/fixTypePredicateThisParameter
Improve message for untyped module w/noImplicitAny
Declare iterable methods for Readonly collections.
Merge pull request #15330 from gcnew/exportConsts
Merge pull request #15050 from YuichiNukiyama/add_headers_iteratableiterator
fix mistake
add Symbol.iterator
Update tests
Allow exporting of consts even if `strictNullChecks` is on
Add regression test
Properly account for 'this' parameter in type predicate checks
consolidate program-structure reuse flags
Merge pull request #15160 from Microsoft/master-jsxChildren
Merge pull request #15303 from Microsoft/importTracker_npe
Fix linting
Merge pull request #15284 from HerringtonDarkholme/lib
Fix null error in importTracker: VariableDeclaration might not have a VariableStatement ancestor
test module reuse
add missing methods
Add missing compiler options
Merge pull request #15283 from Microsoft/Fix15237
Merge pull request #15296 from Microsoft/Fix15224
Merge pull request #15260 from Microsoft/Fix15200
Add a source property on Diagnostic
make enum bitflag and add trace message
Fix spelling and add comment
Update tests and baselines
Change how we look up children attribute from react.d.ts
fix #15243: add URLSearchParams to iterable
Change function name and clarify comment
Merge pull request #15282 from Microsoft/fix15156
Return Diagnostic.category from the server
Fix loop block scope binding in generator
Merge pull request #15277 from Microsoft/fixAsynxIteration
Merge pull request #15278 from Microsoft/revertWeakSetChanges
Merge pull request #15279 from Microsoft/fix14591
Emit generated name for unnamed default exported class with decorated members
Handle rejection in async delegation
Revert changes to WeakSet defitions adding `object` constraint This reverts the changes to WeakSet done in https://github.com/Microsoft/TypeScript/pull/15124 to avoid breaks in existing @types packages like @types/lodash
check and emit fixes for async iteration
Merge pull request #15276 from reiner-dolp/master
Support project root path for controlling config file searching depth (#15238)
fix issue 15275
fix issue 10452
Merge branch 'moduleReuse' of github.com:aozgaa/TypeScript into moduleReuse
typo
No space in empty type litereal
Merge branch 'master' into typeToStringViaTypeNode
Readonly type literal members
Merge pull request #15255 from Microsoft/extendCompileOnSave
Merge pull request #15258 from Microsoft/mergeSymbol-uses-first-decl-not-valueDecl
Merge pull request #15268 from Microsoft/rm_goToImplementation
Remove unused file
cleanup
Fix lint errors
Do not query for bind errors if skipLibCheck or skipDefaultLibCheck is set
Update logic for shouldSkipSemanticCheck to allow for quering semantic errors for JS files with @ts-check
Test:type alias merged w/interface-namespace errors
mergeSymbol error uses first decl not valueDecl
Add tests
Remove WIP comment
Reuse module resolutions in unmodified files
Merge pull request #15257 from Microsoft/unknown-properties-are-assignable-to-Object-in-union
Test:Unknown properties are assignable to Object in union
Unknown properties are assignable to Object unions
Merge pull request #15240 from Microsoft/fixCrashFindingLocals
Merge pull request #15229 from Microsoft/Fix15220
Use base tsconfig's compileOnSave option if tsconfig.json doesnt have it specified Fixes #13910
Merge pull request #15241 from Microsoft/fix15205
Merge pull request #15239 from Microsoft/typeof-can-refer-class-before-declaration
Merge pull request #15104 from Microsoft/covariantCallbacks
findAncestor:single callback returns boolean|"quit"
Merge pull request #14886 from Microsoft/fallthrough
Merge branch 'master' into fallthrough
Merge pull request #15242 from basarat/patch-1
Merge pull request #15244 from trustedtomato/patch-1
Fix downloads badge (0/month)
export interfaces for exported members
Don't use 'yield' as an identifier
Merge pull request #15013 from aozgaa/tripleEquals
Fix yield* as well
Check if container has locals before looking up properties
Merge branch 'master' into tripleEquals
Merge branch 'master' into typeof-can-refer-class-before-declaration
Remove TODO from test now that it's done
Test: typeof can refer to block-scoped var before declaration
Type query can refer to block-scoped vars before declaration
Merge pull request #15234 from mjbvz/fix-globalPlugins-flags-not-working
yield in async generator should implicitly unwrap operand
Fix globalPlugins TSServer Flag
Merge branch 'master' of https://github.com/Microsoft/TypeScript
Merge branch 'Kovensky-allow-export-specifier-reference'
Merge branch 'allow-export-specifier-reference' of https://github.com/Kovensky/TypeScript into Kovensky-allow-export-specifier-reference
Merge branch 'master' into ownJsonParsing
Fix baselines and linting error from merging with master
Merge branch 'master' into master-jsxChildren
Make sure we have a node for the error in cases of special property assignment
Check for the file before getting line map
Update error message to use variable name for "children"
Fix linting error
Update baselines and tests (2)
Merge pull request #15051 from Microsoft/at_types
Merge pull request #15075 from Microsoft/fix-exponential-expanding-array-assignment
Update tests and baselines
Read "children" property from react DTS file
Remove a flag indicating the children is synthesized..We will give an error if you use children without specified such property
Merge pull request #15141 from Microsoft/getOwnKeys
Merge pull request #15140 from Microsoft/configuration-extension-tests
Updating PR as per feedback. OneType|null is again treated as object instead of simplifying it
Merge pull request #14823 from Microsoft/fix14620
Accept baseline
Merge pull request #15134 from Microsoft/remove-npm-update
Merge remote-tracking branch 'origin/master' into fix14620
Merge branch 'master' into resolveJavaScriptModule
Merge branch 'master' into metadataReferences
Merge pull request #14001 from Microsoft/refactor_findallrefs
Merge pull request #15186 from Microsoft/fix15184
Merge pull request #15194 from Microsoft/serializeTypeNode-handles-object
Merge pull request #15060 from RyanCavanaugh/fixPluginLoading
Fix failing fourslash test
Merge remote-tracking branch 'origin/master' into fix15184
serializeTypeNode handles `object`
Merge pull request #15124 from falsandtru/lib.d.ts/object
Merge pull request #15176 from HerringtonDarkholme/namespace-error
address code review feedback
Lint
Fix #15184: Use `void` and not `undefined` for `this` parameter types in the library
Load global plugins even if no local ones exist
Avoid loading duplicate local+global plugins
Fix merge
Merge pull request #15183 from Microsoft/PortLibChanges-4-13-2017
Merge pull request #15032 from Microsoft/fix-anon-class-this-reference-caching
Port generated lib files
Merge pull request #14090 from Microsoft/es5-emit-param-initialiser-before-object-rest
Rename addPrologueDirectives->addStandardPrologue
Test:order of directives, initialisers, object spread destructuring
Split addPrologue into string + custom directives
accept new baselines
fix #15155: improve namespaceModule error message
Merge pull request #15057 from Microsoft/fixExcessPropertyCheck
Merge pull request #15036 from Microsoft/remove-readonly-from-spread-properties
Respond to PR comments
Merge pull request #15037 from Microsoft/master-14401
Add tests and update baselines
Merge branch 'master' into es5-emit-param-initialiser-before-object-rest
Fix linting error
Merge branch 'master-jsxChildren' of https://github.com/Microsoft/TypeScript into master-jsxChildren
update baselines
Add tests
Fixing consuming whitespace in children
Expand spread property find-all-ref test
Update baselines
Address PR:fix find-all-refs and slim down code
Merge branch 'master' into refactor_findallrefs
Merge pull request #15144 from Microsoft/fix14357
Merge branch 'master' into fallthrough
Fix down-level emit for captured loop variable in async function
wip-fixing consuming whitespace in children
Merge pull request #15078 from Microsoft/lint-linter
Store scanning information whether JSXText is just an all whitespaces
Merge pull request #15142 from Microsoft/newLine
Merge branch 'master' into lint-linter
Fix issue that randomly closes configured projects (#15080)
Don't access `sys.newLine` inside unit tests
Merge branch 'master' into config-extension
Remove unnecessary use of getOwnKeys
configurationExtension tests: Use objects instead of strings for readability
Merge pull request #15131 from Microsoft/boolean-trivia-spacing
Tsconfig inheritance: Do not resolve included files in an inherited tsconfig
Remove `npm update`; add release-2.3 to branches
Merge pull request #15111 from RyanCavanaugh/typesMap2
Format checker
Use JSX Attributes to contextually type children property
Consider whitespace that won't be emitted to be different kind so that we won't include in typ-checking
boolean-trivia lint rule: Enforce space between comment and argument
Merge pull request #15077 from Microsoft/null-trivia
Use `object` type
Update tests
Allow callbacks unioned with null and/or undefined
Add tests, comments, and min.js exclusion
Add another test case
Accept new baselines
Check callback return values bi-variantly
Merge pull request #14999 from RyanCavanaugh/typesMap
Only trace if traceEnabled
Add tests
Accept new baselines
Fix callback types to match covariantly
Treat callback parameters as strictly covariant
Remove tsserver command for loading different map
Remove bad merge + unused cmd name
Pass correct regex flag
Wip - type checking JSX children
Lint custom lint rules
boolean-trivia lint rule: Lint for null/undefined too
Fix path escaping and slash normalization
Test: object literal assignments->expanding arrays
Evolving array element ignores contextual type
Fix regex for real this time
Add regression tests
Fixes
Fix excess property check with empty target object type
Add Kendo; fix Office
Merge pull request #14935 from Microsoft/allow-extending-from-any
fix no-bom linting rule
Improve test and comments
Address PR: Remove duplication
Support @types module resolution from scoped packages
Fix Headers interface
Remove special symbol for untyped modules
Update comment
Refactor how we (internally) expose JS module resolution
Unknown bases return baseConstructorType, not anyType
A few changes requested by review comments
Check TypeFlags.Any instead of anyType&unknownType
Merge pull request #15033 from Microsoft/emptyObjectIntersection
Include dom into default library files
Test that spread removes readonly from properties
Merge pull request #14996 from Microsoft/args
Remove readonly from spread properties
Lint
Allow resetting so tests pass
Update tsserverProjectSystem.ts
Fix failing test
Add tests and fix bugs
Update test comments to match property names
Merge pull request #15006 from Microsoft/master-14895
Merge pull request #15021 from RyanCavanaugh/lintFixes
Address PR
Merge branch 'master' into tripleEquals
remove TODO's
Update booleanTriviaRule.ts
Add tests
Accept new baselines
Remove {} from intersection types that already contain object types
Update baselines
Add `this` narrowing test and update previous test
Stop looking at control flow containers for `this`
Update test and baseline
Address PR: move the adding paren into factory function
Update booleanTriviaRule.ts
Update cachingInServerLSHost.ts
Merge pull request #14985 from Microsoft/jsdoc-format
Merge pull request #15009 from Microsoft/parseTypeReference
Update linting to avoid typechecking for booleanTriviaRule
Merge pull request #14995 from Microsoft/cleanupLiteralEmit
Merge pull request #15011 from Microsoft/limitDeepInstantiations
Merge pull request #14991 from Microsoft/fixTypeRelationStackOverflow
Set numericLiteralFlags in factory to align with parser
enforce triple-equals
Fix linting error
Add boolean flag to not walk the tree if there is no dynamic import
Merge pull request #15010 from Microsoft/static-initialisers-can-refer-to-later-static-methods
Merge branch 'master' into limitDeepInstantiations
Fix whitespace lint
Add regression test
Test:static inits can refer to later static methods
Static prop. inits can refer to later static methods
Limit symbol instantiations to a maximum depth of 100
Update PR
Merge branch 'master' into master-dynamicImport
Simplify parseTypeReference
Update Authors
Merge branch 'master' of https://github.com/Microsoft/TypeScript
Update authors
Emit parenthesis around propert/element access expression of casted object literal expression
Merge pull request #14956 from Microsoft/add-super-to-control-flow
Merge pull request #14952 from Microsoft/fix-scope-checks-of-class-properties
Merge pull request #14916 from Microsoft/master-addressPR14692
Merge pull request #14997 from Microsoft/jsdoc
Only bind JSDoc typedefs in JavaScript files
Rename local variable `arguments` to `args`
Enable jsdoc-format lint rule
Clean up literal emit
Fix linting error
Accept new baselines
Merge branch 'master' into fixTypeRelationStackOverflow
Add regression tests
Accept new baselines
Merge pull request #14960 from minestarks/master
Property tracking of recursive non-object types in checkTypeRelatedTo
Merge pull request #14984 from Microsoft/backtick
Update utilities.ts
Merge pull request #14986 from Microsoft/typedef-whitespace
Fix options for typedef-whitespace lint rule
Support backticks in require calls
Merge pull request #12856 from minestarks/includejsdoctags
Merge pull request #14657 from erikmcc/master
Test that super is tracked in control flow
Add super to control flow.
Merge pull request #14920 from Microsoft/jsInferRestArgs
Test:props of class A are usable in prop initialisers of class B
Props of class A usable in prop initializer of class B
Merge pull request #14467 from kpreisser/fix14269
Merge pull request #14100 from Microsoft/BowerComponentsFix
Basic functionality
Added additional test verification
Trim whitespace
Fix the name of protocol.ts in tsconfig.json (#14918)
Infer a rest parameter for javascript function that uses 'arguments'
Re-swap mistakenly swapped lines of code
Update baselines
Test: extending from any
Improve handling of any as a base type
Allow extending from any
Merge pull request #14915 from Microsoft/master-fix14870
Address code review of PR 14692
Add tests
Handle when namespace improt is malform and external module is undefined
fix failing test
Merge branch 'master' into master-dynamicImport
Update baseline from merging with master
Merge branch 'master' into master-dynamicImport
Merge pull request #14692 from Microsoft/master-fixResolveEntityName
Merge pull request #14899 from KingHenne/fix/format-multi-line-object-destructuring
Merge pull request #14900 from Microsoft/Fix14892
Merge pull request #14274 from Microsoft/master-14217
Update baselines from merging with master
Merge branch 'master' into master-14217
Address PR: fix spelling
add single-line object destructuring test case
Merge pull request #14859 from NColey/form-data-methods
Update FormData methods with appropriate types
Merge pull request #14907 from Microsoft/jsGenericDefaultsAny
Merge pull request #14807 from minestarks/typingsafelist
Update baselines
Update tests
Fix AMD emit
Remove error with noImplicitAny
Call the cancellationToken once per SourceFile, instead of calling it at every possible position.
Handel empty intializer in system module emit
Fix #14892: Add undefined check before using the intializer of for-statement
Add colon
fix formatting for multi-line object destructuring
add formatting tests for multi-line object destructuring
Merge pull request #14496 from Microsoft/checkJSFiles
Merge remote-tracking branch 'origin/master' into checkJSFiles
Merge remote-tracking branch 'origin/master' into checkJSFiles
Merge pull request #14874 from Microsoft/fixIndexedAccessRelation
Merge pull request #14884 from Microsoft/binary-expression
Merge pull request #14214 from Microsoft/CancellationChecksForLowPriorityTasks
Lint for fallthrough in switch
Merge branch 'master' into CancellationChecksForLowPriorityTasks
getSpecialPropertyAssignmentKind: Always check for BinaryExpression *outside*, always check for JS file *inside*
Report semantic errors for JS files if checkJs is enabled
Fix #14346
Merge pull request #14709 from aozgaa/createTypeNode
Merge pull request #14834 from chozzz/master
Cleanup
type predicate support
Lint
Respond to minor PR comments
Merge branch 'master' into refactor_findallrefs
getReferencesInContainer: Take sourceFile as parameter
Merge branch 'master' into checkJSFiles
Merge pull request #14876 from JoshuaKGoldberg/patch-1
Change comment to jsdoc
symbolDisplay comment fix: "experts" vs "exports"
Add regression test
Accept new baselines
Use immediate constraint, not base constraint, of indexed access
midway through response to ron's comments
essymbol and object
remove NodeBuilder
Add missing methods for FormData type
Merge pull request #14811 from IgorNovozhilov/patch-1
["Two small changes"]
use NodeBuilderContext
[object Generator]
Merge remote-tracking branch 'choz/master'
Remove trailing WS
Update tests
Error when dynamic import has type arguments
Merge pull request #14846 from Microsoft/dev/billti/port14809ToMaster
Fix where we report noImplicitAny error in dynamic import
dont check isPartOfTypeNode
rename helper
optional signature
Changes for Map implementation
Store diabled projects as 0
Don't add in size of disabled projects
Add unit test
Math
Store the size of the project properly
Make compatible with 2.1 maps
Apply the 20 MB non-TS source limit across all projects
Suppress semantic errors in JS only configured projects
Bug fix for issue #14696, things changed are; - Empty class type will now throw an error, - Trailing comma in class type will also throw an error, - Added tests for empty class type parameter, - Updated tests for class type parameters with trailing comma
Type parameter default is 'any' in js files
build builder
Merge branch 'master' into createTypeNode
Merge branch 'createTypeNode2' into createTypeNode
handle todo's
Split signature factory methods
Merge pull request #14825 from Microsoft/fixDeeplyNestedCheck
Add declaration emit test and test to make sure we don't give dynamic import implicit "use strict"
Accept new baselines
Add regression test
Fix deeply nested type check
move undefined handling to caller
Fix #14620: Lookup names in exports as well as locals when binding special properties
Merge pull request #14195 from HerringtonDarkholme/object-iteration
error handling
Port updated dom files (#14805)
temp
Change ingore diagonstic comment to `// @ts-ignore`
Merge branch 'master' into checkJSFiles
Merge pull request #13982 from Microsoft/optionsDescription
Update tests
Move error report of incorrect grammar in dynamic import to checker
remove trivia
Enum and enum literal
Format else clauses
Respond to more comments
Show help if `--all` is specifided without `--help`
Remove BOM
Code review comments
Simply parse dynamic import as call-expression....
Merge branch 'master' into optionsDescription
Merge pull request #14418 from ajafff/fix-parent-type
Add parent types to class elements
Fix type of HeritageClause#types
Also fix type of NewExpression#arguments
Fix parent type of JsxAttributes
respond to comments
Merge pull request #14777 from misoguy/issue/#14775
Replace "tsc @args.txt" to "tsc --project tsconfig.json"
small fix on indentation
Add tests
Report an error if dynamic import specifier is not assigable to type string
Add comment for comparable relationship
Don't need types to handle string literals
Merge pull request #14771 from Microsoft/rm_old_tests
Report no implicit error when we return Promise<any>
Remove unused test files
Merge pull request #14443 from Microsoft/specific_types
Merge pull request #14235 from Microsoft/master-fix14043
Merge pull request #14152 from Microsoft/master-11566
Merge branch 'master' into master-11566
finish remove unused yieldTypes
Merge pull request #14307 from Microsoft/master-13893
Merge branch 'master' into master-fix14043
Address code review
Update baselines from merging with master
Merge branch 'master' into master-14217
Address code review
Merge pull request #14252 from Microsoft/master-fix12297
Merge branch 'master' into master-13893
Merge pull request #14635 from Microsoft/fixIntersectionMethodOverrides
Allow specifying location of typingSafeList.json
Issue error when use with ES2015
Merge pull request #14581 from Microsoft/foreachchild
Merge pull request #14710 from Microsoft/lint
Merge pull request #14730 from Microsoft/typo
Use more specific types in a few cases
Merge branch 'master' into createTypeNode
Merge pull request #14132 from Microsoft/master-fix12952
Merge pull request #14717 from Microsoft/master-onlyEmitUseStrictInExternalModule
Merge pull request #14750 from Microsoft/runtests-browser
Use emitFlags to indicate that the subtree contains dynamic import
Merge pull request #14716 from Microsoft/fix14565
Merge pull request #14731 from Microsoft/comment
Fix lint scripts
Fix `gulp runtests-browser`
Add comment
Fix typo
Only emit "use strict" when users ask for or the file is external module
Do not report semantic diagnostics for infered and external projects with only .js files
Correctly bind import call expression
Merge branch 'master' into createTypeNode
Merge pull request #14690 from Microsoft/clean_up_parser
consolidate edits
Move comment to JSDoc
add tokenVisitor
Fix lint errors
Nope, need 'isInString'
Merge pull request #14707 from Microsoft/logoUpdate
move commas to end of line
Handle TODO's
Don't need isInString to be a property
Factor out FindAllReferences.Core and use Definition/Entry to allow findReferencedSymbols and getImplementationsAtPosition to return different results
Update the logo to the one which our website uses.
Remove duplicat es2018 tests
Update baselines from adding es2018 value into moduleKind
Merge branch 'master' into refactor_findallrefs
Allow exporting a binding before its declaration
make enclosingdeclaration arg required
add tests
Do not collect imports in parser as it makes it very hard for incremental parsing
remove test
Merge branch 'createTypeNode' of github.com:aozgaa/TypeScript into createTypeNode
some cleanup
some cleanup
consolidate SignatureParts
fix call
Merge branch 'master' into createTypeNode
transformers tests
signatures, parameter, literals, anyonymous types
Add signatures test
abstract code in FindReferences from concrete way of creating result reference entry to seamlessly reuse the same code for gotoImplementation (#14637)
Add more missing quotes
Fix up incorrect system emit
Update baselines and add fourslash
Update resolveEntityName to check for non entity name in property access expression
Clean up code in parser
Merge pull request #14448 from DLehenbauer/removeWScript
Mark occurence item in string with a special property (#14677)
more temp
wip-fix resolveEntityName with parenthesizedExpression
Normalize line endings when validating baselines
temp
Accept baselines
Fix bad merge
Remove `sourceMap:false` from default compiler optios now that we have all options generated
rename catogories, and reorder options
Print comments in a diffrent column
Remove compileOnSave from compiler option
Merge branch 'master' into optionsDescription
Refactor checking for checkJs value in a common helper
Merge branch 'master' into createTypeNode
Merge branch 'master' into checkJSFiles
Code review comments
Merge pull request #14641 from cedvdb/master
initial revision of infrastructure to produce text changes that uses existing node factory, formatter and printer (#14441)
Merge branch 'vladima/textChanges' into createTypeNode
temp
swap entries and values
add tests to add and remove members in class
wip-system emit
changed forEach comment
Added comment for forEach
change NodeList to NodeListOf in NodeListOf.forEach
Change Node to TNode in NodeListOf
added comments
Merge branch 'vladima/textChanges' into createTypeNode
simplify rest param handling
add asserts for cases when containing list cannot be determined
change to forEach method
respect initial order of changes
Merge branch 'vladima/textChanges' into createTypeNode
test cleanup
don't add any typenode for signature return type
visit type literal and dotDotDottoken
add insertNodeInListAfter functionality
Fix deep clone
Merge remote-tracking branch 'origin/master' into vladima/textChanges
Emit import callExpression for UMD and AMD
Add more tests for emitting of es2018 module-kind
Various fixes
Allow export default abstract class. Related to issue 3792.
Fix missing import call expression in function and class declaration
wip-Emit import call expression for commonjs
Change filename to indicate it uses module kind of es2018
Fix up error when we can't find promise type in import call expression
Merge pull request #14568 from Microsoft/checkJSFiles_QuickFixes
Add disableJsDiagnostics codefixes to harnes
Support static properties
Add debugging utilities
Merge remote-tracking branch 'origin/updateCodeFixForAddMissingMember' into checkJSFiles_QuickFixes
some missed token bugs
added `keys`, `values`, ``forEach, `entries` to nodelist
Merge branch 'master' into createTypeNode
Merge branch 'vladima/textChanges' into createTypeNode
Refactor
Add initial tests
removed white space
type parameters and basic object literals
added `keys`, `entries`, `values`, `forEach` on  NodeListOf
update visitor/factory
Merge pull request #14639 from falsandtru/lib.d.ts/overload
Merge pull request #14633 from zhengbli/fixNodeArray
added entries foreach values and keys
Convert overloads to unions
Emit dynamic import when module kind is es2018
Add new value "es2018" for module kind
Rename importcall to importCallExpression
Add repro
Properly track method/property distinction for intersection members
always create new node array when assigning positions
Merge pull request #14632 from Microsoft/port14594ToMaster
Merge pull request #14616 from Microsoft/inferFromNestedArrowFunctionExpressionsAndPropDeclarations
Merge pull request #14631 from Microsoft/update-issue_template
Merge remote-tracking branch 'origin/mjbvz-fix-per-request-cancellation'
Merge branch 'createTypeNode' of github.com:aozgaa/TypeScript into createTypeNode
Update issue template to use TS2.2
type literals, properties only
Unions and intersections
Use consistent quotes
Add  type parameters
get name for index info
Print new nodes in correct order
Simplify Ranges
snythesize methods in missing member fix
Infer class property declarations from assignments in nested arrow functions
missing member fixes use createTypeNode
basic end-to-end building type nodes
more temp
Revert "temp"
Fix Per Request Cancellation Tokens
Merge branch 'master-dynamicImport' of https://github.com/Microsoft/TypeScript into master-dynamicImport
Wip-type check dynamic import
temp
Merge pull request #14582 from krizalys/update-readme-links
Remove stray apostrophe.
Wip-type check dynamic import
Updated quick start & handbook links in README
Expose `forEachChild` as a method of Node
send error if obtaining of types-registry package failed (#14573)
Merge pull request #12784 from e-cloud/fix/generic-this-arg
Remove vestiges of WScript support (Issue #14414)
Parse import call and use collect its specifier
Merge branch 'master' into master-dynamicImport
Merge pull request #14212 from Microsoft/master-12989
test(baseline): update references affected
Merge pull request #14545 from aozgaa/docCommentPrefix
Add comment
Fix building webTestServer
Add quick fix to disable error checking in a .js file
Correctly parse import()
allow passing --logFile and --logVerbosity parameter to tsserver (#14566)
Merge pull request #14562 from Microsoft/fixLookupTypeRelation
Add repro
Accept new baselines
Use immediate constraint instead of base constraint in T[K] relations
Merge pull request #14553 from Microsoft/fixBuildBreak
Disable check diagnostics per line
Merge branch 'fixBuildBreak' into checkJSFiles
Add es6 to buildProtocol
add es6 to buildProtocol
Add --lib es6 to @types/node dependent targets
Code review comments
test: adjust test case `completionEntryForUnionMethod`
test: add tests for this type in native-this-assignable methods
fix: add generic info for methods with thisArg of built-in classes
Merge pull request #14492 from Microsoft/anyInferences
Wip-parsing import call expression
Use term UpdateExpression instead of IncrementExpression to keep it consistent with ECMA spec
code review comments
Make docComment template indent whitespace-only
Merge remote-tracking branch 'origin/master' into vladima/textChanges
Merge pull request #14498 from Microsoft/narrow-default-initialised-parameters
Error if `--checkJs` is used without `--allowJs`
Change flag name to `checkJs`
cache semantic and declaration diagnostics in program (#14516)
Merge pull request #14519 from Microsoft/gulp_lint
Merge branch 'master' of https://github.com/Microsoft/TypeScript
Update baseline
Fix tslint compilation in gulp
Merge pull request #14391 from Microsoft/lint_better
Merge pull request #14172 from Microsoft/moduleExportsAlias
Merge pull request #14508 from Busyrev/fix-function-parameter-default-value
Inline isFlowNarrowable
Merge pull request #14510 from Microsoft/fixNullableThisType
Merge pull request #14512 from Microsoft/more-gulpfile-tsconfig-relative-path-fixes
Fix more gulp.dests to use the relative path of the tsconfig
Update baselines
Move isFlowNarrowable call inside getFlowTypeOfReference
Remove only undefined, not null | undefined, from declared type
Accept new baselines
Add tests
Remove null and undefined from contextual 'this' type
FIX: #14507 Function parameter default value wrongly emmited by Printer
Allow @check directives to switch on/off checking in a file
Add --noEmit to tests
Merge pull request #14273 from Microsoft/infereClassPropertiesFromMethods
Merge branch 'master' into infereClassPropertiesFromMethods
Fix typo
Merge pull request #14222 from Microsoft/addAnyStringIndexerToJSObjects
Add assignability tests for initialised parameters
Remove optionality from the initial type of default-valued parameters
Add tests
Merge pull request #14493 from Microsoft/master-fixEmitExtraESModuleMark
Add support for `//@check` directives
Add `--checkJsFiles`
Update baselines
Set inference result to `any` isntead of `{}` for .js files if generic type parameter inference found no candidates
Only emit ESModule marker when there is no export equal and the file is external module
Merge pull request #14486 from Microsoft/strictChecks
Merge pull request #14472 from Microsoft/typeParameterTypeGuards
Merge pull request #14141 from Microsoft/contextualThisType
Accept new baselines
Change 'tsc --init' to default to 'strict: true'
Update baseline from merging with master
Merge branch 'master' into master-14217
Address PR comment
Merge pull request #14385 from Microsoft/path-completions
Go back to using tslint@next
Merge branch 'master' into lint_better
Add tests.
Allow the right-hand side of an 'in' expression to be of non-primitive object type. Fixes #14269
Accept new tsconfig baselines
Merge branch 'master' into strictChecks
Merge branch 'master' into typeParameterTypeGuards
use ES6 library when building tslint rules (#14474)
Accept new baselines
Construct intersection types for type guards involving type parameters
Accept error baselines
Add failing repro
Merge pull request #14446 from Microsoft/circularVarTypeInference
Fix fourslash test
Add regression test
Accept new baselines
Use getTypeOfExpression when inferring variable type from initializer
Merge pull request #14437 from Microsoft/dead_code
initial revision of infrastructure to produce text changes that uses existing node factory, formatter and printer
Introduce --strict compiler option
Remove old commented-out code
Merge pull request #13597 from Microsoft/enum_member
Merge pull request #13999 from Microsoft/semicolon
Merge branch 'master' into enum_member
Add more missing semicolons
Merge branch 'master' into semicolon
Address PR comments
Merge branch 'master' into master-14217
Merge pull request #14371 from Microsoft/master-fix14254
FIx minor stuffs
Add more tests
Address PR
Accept new baselines
Add ThisType<any> to Object.{create|defineProperty|defineProperties}
Merge pull request #14140 from aozgaa/ImplementMissingThis
Merge pull request #14384 from Microsoft/fix_gulp
Merge pull request #14177 from ajafff/parent-type
cleanup
more rigorous implements-clause check
Merge pull request #14387 from magnushiie/master
Merge branch 'ImplementMissingThis' of github.com:aozgaa/TypeScript into ImplementMissingThis
Merge pull request #12352 from Microsoft/untyped_module_symbol
Update tslint to `latest` (`next` is still on 4.3) and lint for BOM
Fix JsDoc tagname in tests
Add parent type to ExpressionWithTypeArguments
Add insert...Braces Option to Server Protocol
Merge branch 'master' into refactor_findallrefs
Move code from 'Completions' to 'PathCompletions' namespace
Merge branch 'master' into semicolon
Fix gulp-typescript usage now that it is set to latest
Update another test
instantiate generic this param correctly
ignore request for codefixes with no error codes (#14215)
handle the case when conversion of tsconfig.json failed (#14160)
Update protocol.ts
Fix for-await-of emit in async function
Fix #14136: Make `Object.create` return `any` all the time
Merge pull request #14373 from DLehenbauer/fixSpreadUsage
Accept new baselines
Update tests
Enable new behavior only in --noImplicitThis mode
Remove unnecessary comment
Update fourslash tests
Return completions for JsDoc tagname even when there are no "@' sign prefix
Merge pull request #14365 from Microsoft/master-fix14259
Remove assertion
Merge branch 'master' into contextualThisType
Accept new baselines
Update test
Introduce CheckMode enum and getContextualMapper() function
Merge pull request #14343 from Microsoft/undefined_declarations
Fix formatting
Fix TypeError when JSDoc.tags is undefined (see #14362)
Merge pull request #14338 from Microsoft/fix14334
Respond to code review comments
Add check for undefined declarations
Fix emit for downlevel generated catch variable
Merge pull request #14324 from mihailik/master
Error when used enum before declaration
Merge pull request #14330 from mihailik/patch-1
Merge pull request #14327 from Microsoft/getTypeParameters
Add tests
Update comment
Promise is a duplicate here - fails to build
Add more specific return type for `getTypeParameters()`
Baseline accept
Better check for right.text, more comments in test
Update baselines
Merge pull request #14313 from Microsoft/updateJakeFile
Avoid failing TS2695 for eval.
Make server target depend on services inputs
Update test
Rename applyToContextualType to mapType and remove old mapType
Accept new baselines
Use contextual type of object literal as 'this' in methods
Update tests and baselines to declare class declaration before use
Wrapping LSHost's cancellationtoken with a throttle
Update baselines from issueing an error for class used before declaration
Issue an error when class is used before class declaration
Merge pull request #14302 from Microsoft/make-special-property-assignment-apply-only-to-lhs
Rename tests
Merge pull request #14284 from Microsoft/jsDocUpperCasePrimitiveTypes
Special prop assignment symbol applies only to lhs
Add new tests and baselines
Update baseline: emit prologue directives before anything else
Emit unique prologue directives at the top of bundle output file
Merge pull request #14014 from zhengbli/12233
Allow primitive types in JSDoc to start wtih uppercase letters
Add support for handeling .js file correctelly in fixAddMissingMember code fix
Fix comment
Emit first encounter shebang at the top of a output file
When making unit test only include non empty line. This is crucial because it will allow us to test shebang which has to be the first line
Infer class properties from methods and not just constructors
Fix linting error
Update test
Accept new baselines
Contextually type 'this' in accessors of object literals
Removing throttling until tests prove it is required
cleanup tests
Merge pull request #14158 from aozgaa/QuickFixPeriods
instantiate generic this param correctly
Return empty string instead to prevent exception downstream particularly in writeReferencePath
Updates from CR comments
a few fixed in printer/factory (#14239)
Merge pull request #14250 from Microsoft/fix-crash-in-isConstructorType
Addressing CR comments - Adding a throttle - Refactor - Navbar reset onCancel
isConstructorType checks base constraint for undefined
Merge branch 'master' into ImplementMissingThis
Merge pull request #14216 from Microsoft/master-fix13526
Update baselines
Add tests
Collect type from return statment in generator function
Add a string indexer to any for object literals on a .js file
fix #14187, forIn should allow non primitive object as right hand side
Add tests and update baaselines
Allow JSX attributes to be union types
ignore request for codefixes with no error codes (#14215)
Adding cancellation token checks for lower priority tasks
Merge branch 'master' into externalExportStar
manually accept baselines
Get completion of JSX attributes type when tag name is a property access expression
handle the case when conversion of tsconfig.json failed (#14160)
Merge pull request #14181 from staxmanade/patch-2
Update protocol.ts
Fix compile errors
Add parent type for nodes where possible
Add CatchClause to VariableDeclaration.parent
Fix #14171: Recognize property assignements to `module.export` aliases as exports
Merge pull request #14163 from Microsoft/fix14151
Fix for-await-of emit in async function
Merge pull request #14162 from Microsoft/Fix14136
Fix #14136: Make `Object.create` return `any` all the time
Merge branch 'master' into ImplementMissingThis
update baselines
update unit tests
add periods
Fix linting
Add tests and baselines
Defer get JSX.Element type allow null to be returned in SFC
Contextual this in 'obj.xxx = function(...)' or 'obj[xxx] = function(...)'
Simplify helpers
Accept new baselines
Merge branch 'master' into contextualThisType
Merge pull request #13940 from Microsoft/publicTransformers
Merge branch 'master' into publicTransformers
Accept new baselines
Minor factory cleanup
Update tests
Merge pull request #12346 from Microsoft/asyncGenerators
Minor fixes after merging from master
Merge branch 'master' into asyncGenerators
PR feedback
Detect this type for codefix
Add tests
Default contextual 'this' type is containing object literal
Introduce ThisType<T> marker interface
Merge branch 'master' into publicTransformers
Better strictNullChecks support for TransformationContext
Simplify visitNode
Remove unnecessary else clause
Merge pull request #14097 from aozgaa/MissingPropertyFix
Check `fullName` has value for typedefTag
Add tests and baselines
Check for conflict marker when trying to parse JSX child
Merge pull request #14129 from Microsoft/default_import_name
clean up trailing whitespace
Support strictNullChecks mode in visitors
Merge branch 'master' into MissingPropertyFix
widen type, index signature, and add tests
fix typo
Handle undefined import name
Merge branch 'strictNullFactories' into publicTransformers
Update factories to work with strictNullChecks
Merge pull request #13648 from Microsoft/functionAndClassProperties
Merge pull request #14122 from Microsoft/jsx-spread-calls-isValidSpreadType
add release-2.2 (approved by @mhegazy)
call isValidSpreadType in createJsxAttributesTypeFromAttributesProperty
use separate process to probe if drive is safe to watch (#14098)
Merge pull request #14113 from Microsoft/vladima/update-gulp-ts
update gulp-typescript to 3.1.5
Fix and consolidate tsx rename tests
Better handle additional re-export cases
Refactor findAllReferences. Now supports renamed exports and imports.
Addressing CR comments
Bower_Components fix
cleanup
Merge pull request #14095 from RyanCavanaugh/preserveConstEnums
LKG update
Include Jake change
Merge pull request #13461 from flekmatik/getDefaultTypeRoots-fix
use getBaseTypeOfLiteralType
Preserve const enums for tsserver
Merge pull request #14074 from Microsoft/error-on-decl-of-extends-intersection
Change prologue generation order; object rest back in prologue
ES5:Emit parameter initialiser before object rest destructuring
Merge pull request #13640 from Microsoft/wip-master-statelessOverload
Merge pull request #13487 from Microsoft/genericDefaults
Merge branch 'master' into genericDefaults
add tests
wip testing
Get Widened Type
wip
Merge pull request #14076 from JamesHenry/make-unescapeIdentifier-public
Update baseline adding of "__esModule"
Merge branch 'master' into wip-master-statelessOverload
Make 'extends' error message uniform.
Make unescapeIdentifier public
Merge pull request #12231 from RyanCavanaugh/ls-proxy
Address PR comment
Fix downstream use
Merge pull request #13996 from Microsoft/UnsupportedExtensionsFix
Language service extensibility
Test error w/exported class extending intersection
Merge pull request #13936 from Microsoft/FixObjectCreate
Enable per-request cancellation (#12371)
Merge pull request #13966 from zhengbli/13110
Merge pull request #14072 from Microsoft/filename
Error on emit declaration of extends class w/o symbol
Add missing filename to tsx test
Merge pull request #14050 from Microsoft/tsx_completion
Merge pull request #14035 from Microsoft/findallrefs_keyword_definition
Use '__this__' property in contextual type to indicate type of 'this'
Merge pull request #14071 from Microsoft/portLibChanges
Merge pull request #13913 from Microsoft/allowExportDeclarationsInAmbientNamespaces
Merge pull request #13796 from Microsoft/fix-duplicate-identifier-reporting
Merge pull request #14055 from aozgaa/UnduplicateAbstractMethodCodeFix
Merge pull request #14000 from mattmccutchen/lib-string-replace
use deduplicate
Use `Promise` instead of `PromiseLike` in the library
Merge pull request #14053 from Microsoft/usePromise
Merge pull request #14060 from Microsoft/updateVersionTo2.3
Handle additional cases
Fix failing tests
Set ScriptElementKind for enum members to "enum member" instead of "const"
Fix lint failures
Accept baselines
Accept baseline recursivelly
Merge remote-tracking branch 'origin/master' into functionAndClassProperties
accept baseline change
Consolidate bindProperty logic in one function
Remove extra overload
Merge branch 'master' into FixObjectCreate
Update version
Offer missing abstract codefix once
Merge remote-tracking branch 'origin/master' into usePromise
Accept baselines
Update tests
Report a specialized error message for missing `Promise` constructor declaration when `Promise` type is available
Merge branch 'master' into untyped_module_symbol
Detect non-tag uses of `<` in TSX completions
inject pre-finally and after-finally edges into flow graph to possible ignore pre-finally during flow walk (#13845)
Accept baselines
Merge pull request #14006 from Microsoft/better-discriminated-union-errors
Merge branch 'master' into asyncGenerators
fix build break (#14049)
Merge branch 'master' into untyped_module_symbol
Address PR comments
Merge pull request #12033 from Microsoft/add-undefined-to-default-valued-parameters
Address PR comments and fix lint
Merge pull request #13930 from Microsoft/no-subtype-reduction-in-includeFalsyTypes
Address PR comments
Move interface Promise<T> declaration to es5.d.ts
Merge pull request #13871 from Microsoft/master-fix13709
switch FileExtensionInfo to always mean .js file and deduplicate entries in getSupportedExtensions (#14046)
Merge pull request #13990 from Microsoft/fixPrivateProtected
When performing find-all-refs for a keyword, use the first result as the definition.
Merge pull request #13678 from Microsoft/package_json_main_2
Fix jsdoc typedef symbol scope + avoid bind twice if the tag has a jsdoc namespace
Improve discriminated union error messages
lib: Fix documentation of String.replace first parameter.
Update unittests
Merge branch 'master-fix13709' of https://github.com/Microsoft/TypeScript into master-fix13709
Emit "__esModule" before other statments
Emit "__esModule" before other statments
Fix "semicolon" lint rule options (was not enabled)
Always set allowNonTsExtensions for allowJs
Merge branch 'master' into asyncGenerators
Accept new baselines
Add tests
Merge pull request #13905 from Microsoft/optionalParametersInJSFunctions
Fix typo
Merge branch 'master' into publicTransformers
Properly handle private/protected properties in intersection types
Merge branch 'master' into functionAndClassProperties
Respond to code review comments
Merge pull request #13903 from Microsoft/jsPropertyWidening
Widen after sub-type-reduction took place
Reduce stack depth due to substitution
Merge pull request #13983 from Microsoft/lintFixes
Merge pull request #13959 from Microsoft/fix-assigned-type-of-assignment-nested-in-literals
Merge pull request #13916 from Microsoft/master-fix13602
Fix lint failures detected by tslint@4.4.2
Update comment
Add language service test when element type is a union type
Address code review
Add tests and baselines for union element type
correctly handle the case when attributes type is empty object
Merge pull request #13967 from Microsoft/vladima/13964
do secondary lookup only if module has non-relative name
Mark some more options as advanced
Update some tests because the original marker will be deleted
Make categories localizable
remove the new line after targeted line
Remove properties from tsconfig.json that defaults to false
Write comments for compiler options in `tsc --init` output
Add conformance tests for union element type
Correctly handle union of JSX element type
Fix comments
allow 'transform()' to transform arbitrary nodes.
Add for-of test case
Add test
Merge pull request #13946 from Microsoft/AddTestFor13925
Address code review: fix indentation
Fix assigned type of assignment nested in literals
Make generateTSConfig return a string
use category in serializeCompilerOptions
Add deprecation notice for some options
Add simplified help view and full help view
Encorporated PR feedback
add projectUsesOutFile field to protocol.CompileOnSaveAffectedFileListSingleProject (#13915)
Address code review: move only expose emitLeadingCommentsOfPosition
Merge pull request #13760 from Microsoft/find_all_refs_tests
Use `!!` to convert to boolean
Manually order options
Make sure all options have descriptions
Add test for #13925
Merge branch 'master' into publicTransformers
use tsconfig.json files in jake (#13869)
Make visitor functions public
Guard public API surface of TypeChecker against synthesized nodes
Remove debugger statement
Make TransformationContext.getCompilerOptions public
Add assertions to verify user-exposed behavior.
disable fs watcher for UNC paths on Windows (#13937)
Expose transformations as public API
Allow export "__esModule" in system
Update baselines
Fix #13932: Change the order of overloads and allow union for `Object.create`
Always emit "__esModule" unless there is export =
Merge pull request #13791 from Microsoft/typeof-string-literal-union-type
Merge branch 'master' into typeof-string-literal-union-type
Emit leading comment before brace token
Clean up extraneous file
Merge branch 'master' into master-fix13709
No subtype reduction in includeFalsyTypes
Merge pull request #13914 from Microsoft/forward-ref-in-property-initialisers
Address code review: update error message
Add test and baseline
Only report an error in non ambient context and with no noEmit flag
Add tests and update baselines
Emit missing trailing comment of an element in node list
Test property initialiser forward reference errors
Error on forward references for property initializers
Merge pull request #13825 from Microsoft/publicNodeFactories
Allow export declarations in ambient namespaces
Minor PR feedback
Treat function paramters in a .js file with no JSDoc as optional
Fix linting
Update sourcemap
Error when users define "__esModule"
Widen special JS property declarations to match regular property declarations
Object literal freshness errors with spreads
Clean up SymbolFlags, introduce CheckFlags in TransientSymbol
Fix linter error
Update baselines (3)
Give a better name for the boolean variable; emit __esmodule for export import
Shortcut for class/namespace merge
Simplify checkTypeParameterListsIdentical
Address code review: fix comment
Merge pull request #13856 from zhengbli/updateLib20170202
Merge branch 'master' into genericDefaults
Add factory functions for rest of NodeEdgeTraversal
Remove pre-computation of minTypeArgumentCount
Identifier escaping/unescaping for unique names
Update baselines (2)
Address code review
Merge checkIteratedType* functions
Typos and other minor PR feedback
Inline isThenableType
Unify getIteratedTypeOf* functions
Update baselines
Check original variable statement node to check if it contains es6 export
Merge pull request #13405 from zhengbli/13137
Merge pull request #13851 from zhengbli/fixCommentsForUnusedLocal
routine lib files update
Address code review
merge getIteratedTypeOfIterableOrElementTypeOf*
Add test case for nested namespace
avoid removing comments when removing unused locals
Merge branch 'master' into asyncGenerators
Merge pull request #13831 from zhengbli/importFixCasing
Merge pull request #13841 from Microsoft/rm_foo
Remove useless test file
Fix casing in import quick fix
Update AUTHORS for release-2.2
Make getOriginalNode/getParseTreeNode public
Make most current Node factory functions public
Merge pull request #13761 from Microsoft/extractPrinter
Emit __esModule when emitting ES6 Module
Added comments and a few Debug assertions
Update baselines from a-c
PR Feedback
Merge pull request #13820 from Microsoft/fixBaseClassCheck
rename arrayFromMap -> convertToArray
Accept new baselines
Add regression test
Accept baseline change for apparent type
Consider 'object' a valid base type + apparent type of 'object' is {}
Merge pull request #13786 from Microsoft/ata
Merge pull request #13817 from Microsoft/fixIndexedAccessApparentType
Accept new baselines
Add regression test
Merge pull request #13806 from Microsoft/Fix13789
Update baselines
Address PR comments
Fix typo causing bug
Skip type parameters.
Factor kind check to a separate function
Support string literal completion in case labels
Add string literal completion for equality expression
Create typeof's string literal union type once
Test duplicate identifier reporting in classes
Fix duplicate identifier reporting in classes
Merge pull request #13750 from gdh1995/fix-typo-in-catch
Merge branch 'master' into wip-master-statelessOverload
Address PR: fix typo
Add arrayFromMap utility function
Add typeof test case and update baselines
typeof now has string literal union type
Change find-all-references tests to test for groups
Use "ts2.2" (or "ts2.3", etc.) NPM tag in typingsInstaller
Merge pull request #13772 from Microsoft/partialAndEmptyObjectType
Accept new baselines
Add tests
Empty object type assignable to mapped type with optional properties
Merge branch 'master' into functionAndClassProperties
Merge branch 'master' of https://github.com/Microsoft/TypeScript
Check for undefined symbols
Merge pull request #13769 from Microsoft/fixTypeParameterScopeCheck
Accept new baselines
Add regression test
Fix isSymbolInScopeOfMappedTypeParameter to include mapped types
Move non-local type parameter check to resolveName
Test removing undefined from initialized, annotated parameters
Remove undefined from initialized+annotated parameter type
Merge pull request #13743 from Microsoft/mixinClasses
Use length() throught checker
Merge branch 'master' into genericDefaults
Move EmitTextWriter to types.ts
Printer API unit tests
support untyped imports in shims (#13758)
Merge pull request #13759 from Microsoft/fixMissingThis
Merge pull request #13757 from Microsoft/es6-target-emits-Object.assign-for-spread
Import helpers skips __assign when target >= ES6
Embed comment emit inside of printer
Merge branch 'master' into fixMissingThis
Update baselines
Emit Object.assign for spread for targets >= ES6
ES6 target uses Object.assign for emitting spread
remove an odd new-line for catch clause
Accept new baselines
Add tests
Extract printer from emitter for reusability.
Revise intersection construct signature mixin algorithm
Support mixin classes
Update tests and baselines
Remove control flow-based undefined addition
Merge pull request #13350 from HerringtonDarkholme/lib
Merge pull request #13726 from Microsoft/allow-super-to-access-method-signatures
Allow super to access method signatures
Merge pull request #13708 from Microsoft/propertyAssignment-is-not-assignment-target
Property assignment is not an assignment target
Respond to comments
Update baselines from merging
Merge branch 'master' into wip-master-statelessOverload
Merge pull request #13661 from Microsoft/fix13646
Merge pull request #12556 from Microsoft/include_ordering
isOptionalParameter says unused IIFE arguments are optional
property handle misspelled namepath in @typedef tag (#13702)
Merge pull request #13643 from Microsoft/find_all_refs_default
Replace `isSearchedFor` with directly passing `searchSymbols`
Merge pull request #13691 from Microsoft/typo
Merge branch 'master' into add-undefined-to-default-valued-parameters
Fix typo
Merge pull request #13686 from Microsoft/goToDefinition_callback
Merge pull request #13687 from Microsoft/find_implementation_position
For goToDefinition, verify that tryGetSignatureDeclaration returns a signature declaration and not a FunctionType.
Fix positionToLineOffset conversion for getImplementation
Merge pull request #13685 from RyanCavanaugh/fix13676
Always call `checkExpression` on JSX attribute values
handle cases when body of for-of statement is expanded after loop conversion (#13677)
Address comment: remove reducdant check
Merge pull request #13683 from Microsoft/workers
Merge pull request #13675 from Artazor/fix-13674
Add "workers" option in gulpfile.
Address code review: fix up comment
Allow package.json "main" to specify a directory
Merge pull request #12672 from Microsoft/import_star_namespace
Merge branch 'master' into import_star_namespace
Merge branch 'master' into include_ordering
Use a single 'untypedModuleSymbol' for all untyped modules instead of creating a new one for each module.
Merge branch 'master' into untyped_module_symbol
fixes #13674
Merge pull request #13660 from Microsoft/rename
Fix linting error
Change "getIsDefinedInLibraryFile" back to just "isDefinedInLibraryFile"
Merge branch 'master' into wip-master-statelessOverload
Undo change to test
Simplify code in 'rename'
More exhaustive needsDotDotForPropertyAccess
Merge pull request #13658 from Microsoft/findallrefs_mappedtypes
Update baselines
Fix tests
Revert noConstraintType name change
Support find-all-references on mapped types.
Merge pull request #13558 from HerringtonDarkholme/rest-spread-intrinsic
Merge pull request #13645 from Microsoft/getFirstToken-skips-jsdoc
Merge pull request #13636 from ds300/preserve-jsx-but-output-.js-files
Use variable name for class and function expressions names
Handel defining properties on function and class expressions in .js files
basic support for declaring properties on funcitons
revert change to lib/protocol.d.ts
delete fourslash testcase for --jsx react-native
Merge branch 'genericDefaults' of https://github.com/Microsoft/TypeScript into genericDefaults
Remove circular default check
address code review
getFirstToken skips JSDoc
Merge pull request #13553 from falsandtru/lib.d.ts/symbol
Fix Symbol.valueOf method signature
Support find-all-references for default exports
Clean up code in findAllReferences
Update the protocol to return file name in compiler diagnostics and project errors
Report option diagnostic in tsconfig.json if possible
Update comment about jsx react-native in es5.ts
Merge branch 'master' into ownJsonParsing
add notifications and tests for jsx react-native es3
rename preserveWithJsExtension to react-native
Update comments
Report an error when can't infer but do not report an error for other failure to resolve signature cases
Add tests and update baselines
Handle inference of function expression/arrow functions attribute
Merge pull request #13598 from Microsoft/node_modules_bundled_emit
Combine `forEachExpectedEmitFile` and `forEachEmittedFile`
Add test case for preserveWithJsExtension
Add option to output .js files while preserving jsx
Merge pull request #13623 from Microsoft/fixIntersectionApparentType
Accept new baselines
Fix typo in intersection apparent type
Add regression test
Merge pull request #13604 from Microsoft/intersectionBaseTypes
Merge pull request #13616 from tinganho/staticPropertyConflictsInAmbientContext
Accept new baselines
Add tests
Fix error reporting bug
Add reference baseline
Add tests
Fixes formatting
Adds non-ambient context check
Merge branch 'master' into genericDefaults
Defaults for type aliases
do not capture 'arguments' when property name 'arguments' is met (#13600)
Remove partial inference
Report error using type parameter from merged declaration
Merge pull request #13610 from basarat/patch-1
Merge pull request #13599 from Microsoft/getFirstToken-returns-jsdoc
export the type `Log` that is used by exported functions
Diagnostic message punctuation
Merge pull request #13595 from falsandtru/lib/collection
Merge pull request #13584 from Microsoft/decoratorMetadata
Avoid inference for fully-supplied type arguments
Merge pull request #13566 from Microsoft/find_all_refs_primitive
Clean up code for getting emitted files
getFirstToken returns jsdoc as single comment
Allow base constructor types to be intersections
Merge branch 'master' into find_all_refs_primitive
Don't use nameTable for type keywords, and don't handle keyof.
Intersections as their own 'this' type
Fix regressions
Merge pull request #13585 from Microsoft/Fix14036
Fix https://github.com/DefinitelyTyped/DefinitelyTyped/issues/14036:
Always descend into loop, fix lint warnings
Accept new baselines
Allow object intersection types in class implements clauses
Improve efficiency of union/intersection resolved property caching
Use the value symbol for decorator purpose only if it is same as typesymbol Fixes #13155
Add test for decorator referencing alias named Event
Allow object intersection types as class/interface base types
Remove unnecessary widening, more PR feedback
Flexible declaration merging
Addressing code review in previous PR. Combining below commits
Refactor getJsxAttributeSymbolsFromJsxOpeningLikeElement to createJsxAttributesTypeFromAttributesProperty
Address comment: stop widen type when checking for spread any; Address comment: using ternary operator, fix comments
Address comment: call getContextualType instead of accessing contextualType property directly
Update baselines
Update calling to getSpreadType and using set function when adding value to map
Fix linting error
Add language service tests
Update conformance tests baselines
Merge pull request #13568 from Microsoft/fourslash
Cache react.d.ts library when running tests
Update react.d.ts used during tests
Add a test for contextual type in JSXAttributes
Add tests for generic stateless function component
Add tests for overload stateless function component
Add tests for using default attributes in JSX stateful component
Add tests for using spread attributes resolution in JSX stateful component
Update existed conformance tests
Add language service support for JSXAttributes
Update emitter to use JSXAttributes node instead of JSXAttribute node array
Use chooseOverload logic to pick JSX stateless function
Parse JSX attributes as its own unique AST node and bind the node
Merge pull request #11683 from Microsoft/useCollator_toImprovcePerformance
Simplify fourslash tests by adding some helpers
PR Feedback
Support find-all-references for type keywords
Merge pull request #12671 from Microsoft/property-access-for-string-index-sigs
Merge pull request #13453 from Microsoft/no_dom
Merge branch 'master' into property-access-for-string-index-sigs
Merge pull request #13546 from Microsoft/test_document_highlights
fix #13556: enable rest/spread on `object`
Merge pull request #13548 from Microsoft/document_highlights_unclosure
Move code out of closure in `getDocumentHighlights`, then again out of `getSemanticDocumentHighlights` and `getSyntacticDocumentHighlights`.
Remove added newline
Merge branch 'master' into no_dom
Update document highlight tests: Use ranges to represent expected highlights
Merge pull request #13523 from Microsoft/fixNumericIndexedAccess
Merge branch 'master' into ownJsonParsing
Merge pull request #12065 from about-code/master
Mark as referenced aliases in Union that will get emitted as part of decorator metadaa Fixes #13449
Add test for class from external module is used in union
Merge pull request #12715 from Microsoft/map5
Merge branch 'master' into map5
Merge pull request #13535 from Microsoft/empty_types
Merge pull request #13534 from Microsoft/completions_unclosure
Move `"types": []` to tsconfig-base
Move code out of closure in `getCompletionsAtPosition`
Merge pull request #13478 from Microsoft/string_literal_rest_parameter
Merge pull request #13483 from Microsoft/operatorsAndNullableTypes
Merge pull request #13505 from Microsoft/fix13504
Accept new baselines
Add regression test
Allow T[N] where N is numeric and T has apparent numeric index signature
Merge pull request #13476 from Microsoft/findallrefs_unclosure
Merge pull request #13492 from rdosanjh/more-vertical-space-between-tsc-watch-results
Emit 'object' type in declaration emitter
Merge branch 'master' into asyncGenerators
Added comments and additional circularity tests
Fix circularity check, simplify default type mapper
Removing es6 method/property distinction. Adding tests with default export and anonymous class expressions.
Removing es6 method/property distinction. Adding tests with default export and anonymous class expressions.
Merge remote-tracking branch 'upstream/master'
adding 2 new lines to tsc --watch output
Merge pull request #13485 from Microsoft/errorOnReturnStatement
Updated Promise and PromiseLike to use defaults
Adds support for type parameter defaults
Accepted baselines.
Error on the return statement itself when checking against function return types.
Accept new baselines
Improved undefined/null handling for unary operators
Accept new baselines
Improved undefined/null handling for relational operators
Accept new baselines
Improved undefined/null handling for arithmetic operators
Support completions for string literal in rest parameter
Move code out of closure in `getReferencedSymbolsForNode`
Merge pull request #13401 from Microsoft/navbar_exported_functions
Merge pull request #13472 from Manish-Giri/fix/incorrect-return-type
Merge pull request #13446 from Microsoft/export_equals_completion
Fix incorrect return type
Merge pull request #13469 from Microsoft/public_constructor
Fix bug for constructor with modifier
Refactor to move code into checker
Removing automatic newline at EOF
Fixing default typeRoots on Windows
Merge pull request #13448 from Microsoft/fixMappedTypeRelations
Merge pull request #13427 from Microsoft/nonPrimitiveObjectRelations
Add dom declarations used by harness
Stop using "dom" types
Fix typo
Merge pull request #13451 from Microsoft/gulp_tsconfig_inheritance
Fix tsconfig inheritance in gulpfile -- must do it manually
Merge branch 'master' into map5
Fix one more use of `createMapFromTemplate`
Merge pull request #13424 from zhengbli/13129
Merge pull request #13447 from Microsoft/tsconfig
Accept new baselines
Add tests
Improve type relationships for generic mapped types
Remove "noResolve"
Use tsconfig inheritance
Include properties of an `export =` value in import completions.
Accept new baselines
Add tests
Unconstrained type parameter not assignable to non-primitive object
Merge pull request #13419 from Microsoft/fixKeyofWithIntersectionConstraint
Change the module specifier search order
Merge branch 'master' into map5
Add regression test
Remove incorrect type relationship
Fix type relations for 'keyof T' type where T is union or intersection
Add `createMapFromTemplate` helper
Merge branch 'master' into map5
Merge pull request #13404 from zhengbli/13131
Support import fix for missing namespace as well
Update the message
Change the remove unused local code fix message
Include "export" modifier on function assigned to an export (`export const x = () => 0;`).
Merge pull request #11603 from zhengbli/11116
Merge pull request #13392 from Microsoft/rest-types-skip-class-methods
Object rest skips only class methods
Test:object rest skips only class methods
Merge pull request #13338 from Microsoft/fixCircularConstraints
Merge pull request #13342 from unional/fix-project-help
Update based on feedback
Add regression test
Properly check T[K] constraints in type relationships
Merge pull request #13367 from Microsoft/goToDefinition_name
Move helper to services/utilities
Merge pull request #13366 from Microsoft/fixMappedTypeCombinedMappers
Merge branch 'master' into fixMappedTypeCombinedMappers
Merge pull request #13358 from Microsoft/iifeMissingArguments
Merge pull request #13356 from Microsoft/fixCombinedTypeMappers
Merge pull request #13365 from Microsoft/object-spread-removes-class-methods
goToDefinition: Use the name of a declaration (if possible) when creating DefinitionInfo.
Merge pull request #13363 from Microsoft/lint
Merge pull request #13364 from Microsoft/string_literal_completions_fix
Merge pull request #13362 from Microsoft/gulp_typescript_version
Add regression test
Properly construct replacement mapper in mapped type instantiation
Test method removal of object spread
Omit class methods from spreads. Others stay.
String literal completions: Use call signature only if we are *immediately* in a call expression
Fix linting
Respond to PR comment
Merge branch 'master' into include_ordering
Merge branch 'master' into map5
Fix test
Fix gulp-typescript version
Add regression test
Property track mapped types in combined type mappers
update declaration file to use intrinsic object type
Add tests
Accept new baselines
Allow missing argument for IIFE parameter with no type annotation
Fix --project help
Add additional regression test
Add regression tests
Accept new baselines
Update tests
Improve detection and handling of circular generic constraints
Merge pull request #12728 from Microsoft/instanceof-requires-callable-rhs
Fix name: `mapEntries` is more accurate
Merge branch 'master' into map5
Merge pull request #12501 from HerringtonDarkholme/non-primitive
Merge pull request #10782 from Microsoft/react_whitespace
Update LKG
Add builder.ts to server sources
Merge branch 'master' into add-undefined-to-default-valued-parameters
Add `| undefined` to all optional properties too
Merge branch 'joelday-tsserverlibrary-as-module'
Merge branch 'tsserverlibrary-as-module' of https://github.com/joelday/TypeScript into joelday-tsserverlibrary-as-module
Update LKG
Merge pull request #13277 from Microsoft/fix13276
Simplify emit for syntactic 'extends null' case
Changes based on feedback.
Merge from master.
Merge pull request #13287 from zhengbli/importFixExtendedTsconfig
Support path that specified index
Let fourslash tests support extended tsconfig
Merge pull request #13230 from Microsoft/instanceofRelationshipTargetTypes
Merge pull request #13246 from ajafff/blocklike
Fix super/this capture for extends null
Merge pull request #12488 from vvakame/modify-extends
Merge pull request #13273 from Microsoft/jsxAttributeWithoutExpression
Fix the emit when jsx attribute expression is empty Fixes #12994
Merge remote-tracking branch 'upstream/master'
Incorporating changes to `checkClassForDuplicateDeclarations` in `checker.ts` as proposed by @sandersn
Fix Gulp build of tsserverlibrary to match Jake.
Add DefaultClause to BlockLike union
Support for an external exportStar helper
Cleanup emit helper checks
Reduce number of helpers
Emitting tsserverlibrary as an external module.
Merge pull request #13234 from Microsoft/fixMappedTypeInstantiation
update baselines
Merge branch 'master' into modify-extends
address feedback
Accept new baselines
Add regression test
Fix homomorphic type check in instantiateMappedType
Rename and simplify 'iterationMode' option
Merge pull request #11547 from Microsoft/interfaceFixes
Merge pull request #11222 from kitsonk/array-slice-typings
Move async generators to esnext
Merge pull request #13233 from Microsoft/FixTestFailure
Fix test failure resulting from bad merge
Merge pull request #12543 from wonderful-panda/fix-12536
Merge branch 'master' into asyncGenerators
Accepted baselines.
Check if the target types are equal instead of the types themselves.
Accepted baselines.
Added a test.
Incorporate changes proposed by @sandersn
Merge remote-tracking branch 'upstream/master'
Change the design to track addRoot and removeRoot
address cr feedback
Merge branch 'master' into map5
Support quick fixes for UMD global (#12545)
Use inherited setCompilerOptions for inferred project
Merge pull request #12783 from Microsoft/es6-new-target
Merge branch 'master' into es6-new-target
Merge pull request #13192 from slawomir/13063-strictNullChecks-breaks-typeof
#13063 Optimization
Replace SparseArray<T> with T[]
Merge branch 'master' into map5
Add `createMultiMap` to replace `multiMapAdd` and `multiMapRemove`
Rename and consolidate map iteration helpers
Inline `keysOfMap` and `valuesOfMap`.
Remove "sparseArray" constructor function and just use array literals
set the option when creating inferred projects
Merge branch 'master' of https://github.com/Microsoft/TypeScript into 11116
Merge pull request #13191 from Microsoft/fix13157
#13063 Fix strictNullChecks breaking typeof
Aggregate flags for ExpressionWithTypeArguments
Merge pull request #13189 from Microsoft/Fix12724
Do not report helper module errors in ambient contexts for Rest helper
Merge pull request #13188 from Microsoft/fix13147
Fix UMD header to work with r.js
do not report file lookups if containing folder is known to be missing (#13187)
Merge branch 'master' into map5
Make `createMapLike` private and rename to `createDictionaryObject`
Add iterators to Map interface, and shim iterators
tsserver should use newline provided by the host (#13185)
Use sparse arrays for number-keyed maps
Merge pull request #13134 from Microsoft/fix13128
Ensure test input is unformatted
Merge branch 'flowmemo-fix-11676'
Merge branch 'fix-11676' of https://github.com/flowmemo/TypeScript into flowmemo-fix-11676
Merge pull request #13006 from SaschaNaz/lintfix
Merge pull request #11990 from HerringtonDarkholme/delete-readonly
fix #11676 - lint test
fix #11676
mark 'failedLookupLocations' as internal (#13139)
Update upstream
Merge pull request #13040 from Microsoft/es2015-cleanup
Merge pull request #13136 from Microsoft/ConditionTraceMessage
Switch to getApparentType
Check trace enabled befoe tracing
Merge pull request #11591 from Microsoft/spread-jsx-expression-children
Merge branch 'master' into spread-jsx-expression-children
Fix non-thenable check for IndexedAccess types
Merge pull request #11119 from YuichiNukiyama/defult_export_error_message
Merge pull request #12817 from Microsoft/improveAsyncStepping
Merge pull request #12667 from bb/patch-1
Merge pull request #13111 from SaschaNaz/formatDestruct
Merge pull request #13125 from flowmemo/fix-13114
Merge pull request #13127 from arusakov/old_style_literal_types_in_enums
Disallow old style octal literals in enums
fix issue #13114
format fourslash.ts
union
reposition defaultFormatOption
cancel getOption
merge conflict
add getOption
classify nonPrimitive type as narrowable rather than structured
update implementation to use intrinsic type
address CR feedback
add tests for generic type argument under strict null checks
accept new baselines
address code review feedback
add tests for non primitive type
fix error reporting
enable parsing
Fix #1809, introduce non primitive type
Merge branch 'master' of https://github.com/SaschaNaz/TypeScript into formatDestruct
Merge branch 'master' of https://github.com/Microsoft/TypeScript
Format destructuring by brace format option
Merge remote-tracking branch 'refs/remotes/Microsoft/master'
Merge pull request #13092 from SaschaNaz/jsxdangling
Merge pull request #12694 from Microsoft/destructuring-initialisers-can-reference-previous-elements
merge conflict
Remove old add-undefined code in getTypeOfParameter
PR Feedback
Test parameter initialisation narrowing rules
Change narrowing rules for parameter initialisers
Merge pull request #13056 from arusakov/improve_diagnostic_message_negative_octal_literal
Merge pull request #13103 from Microsoft/metadataOfClassFromModule
Merge pull request #13100 from Microsoft/unusedLocalsInSpread
isMinusPrefixUnaryExpression() -> isPrefixUnaryExpression() after code review
Improve diagnostic message for negative old style literals
Merge branch 'master' into ownJsonParsing
Update current scope when visiting namespace elements Fixes #13098
Test case for metadata type of class from a module
Merge pull request #13034 from Microsoft/unionWithNull
Nit: Moving type aliases for serialized type nodes as per feedback
Do not report error on unused removed property from object spread Fixes #13076
Merge pull request #13090 from SaschaNaz/maptype
Update tests
Remove undefined when checking patterns in function declarations
Merge pull request #12982 from Microsoft/jsdoc-instantiate-signature-with-function-arg
cache results of module resolution for non-relative module names (#13047)
Test case when module member is object spread pattern
fix linter alert
do not insert space after function expressions
unindent dangling closing token
merge conflict
indent inside mapped type
format [P in keyof T]
format generic type alias
always give container
detach root files on project close if project language service is disabled (#13077)
Merge pull request #13045 from aochsner/fix-12234
Merge pull request #13072 from DanCorder/fix12218
Merge pull request #13024 from Microsoft/package_json_unsupported_extension
Fix issue 12218 and linter error
Change function name
Merge branch 'es2015-cleanup' into asyncGenerators
Merge pull request #13061 from Microsoft/fixMappedTypeConstraint
Merge branch 'es2015-cleanup' into es6-new-target
Add regression test
Guard against missing constraint in getModifiersTypeFromMappedType
Add InsertSpaceAfterConstructor option & additonal test cases
space-before-function-paren
Improve hierarchy fact tracking
Support union of non identifier serialized type node with null/undefined/never
Merge branch 'master' into es2015-cleanup
Add serialization of typenode for null/undefined/never as part of metadata type Fixes #12684 and #11933
Merge pull request #13016 from arusakov/disallow_old_style_octal_literal_types
cache per-folder module resolutions during construction of the program (#13030)
Merge pull request #12990 from Microsoft/mappedTypeStringIndexAny
Merge branch 'master' into asyncGenerators
Merge branch 'master' into es6-new-target
PR cleanup
next again
Merge branch 'master' of https://github.com/Microsoft/TypeScript into lintfix
Merge pull request #13028 from Microsoft/fixTslintVersion
Fix tslint version
needless newline
inline length
Skip files from package.json "main" or "types" if they have an unsupported extension.
Disallow old style octal literal types
remove preferConstRule.ts
fix linting errors
Accept new baselines
Add tests
Mapped types assignable to objects with 'any' string index signature
More tests of initialised parameters adding undefined
Add `| undefined` in .d.ts for initialised params
Merge branch 'master' into add-undefined-to-default-valued-parameters
JSDoc functions are now in scope for instantiation
Merge branch 'master' of https://github.com/Microsoft/TypeScript
Merge pull request #12967 from Microsoft/fix12749
Fix condition in onSubstituteNode
Do not transform JSX tag names for ES3
lift multiple statements into block if necessary (#12965)
Update LKG
Merge pull request #12947 from Microsoft/more_npm_ignore
Merge branch 'master' into ownJsonParsing
Merge pull request #12937 from Microsoft/makeLibLFOnly
Add more files to .npmignore
Make line-endings LF only in the /lib dir
expose parseCommandLine (#12934)
Merge pull request #12930 from Microsoft/port12803
Fix __awaiter helper for IE8 compat
Merge pull request #12927 from Microsoft/mappedTypesPropsAndIndex
Merge pull request #12926 from Microsoft/vladima/getchangerange
Accept new baselines
remove debugger statement
Add tests
Map both declared properties and string index signatures
Merge pull request #12925 from Microsoft/normalizeLibFileLineEndings
allow to compute change ranges only for snapshots from the same script version cache
Normalize line endings for lib files while building them
Merge pull request #12893 from Microsoft/capturedThisFix
Indented and-ed expressions.
Accepted baselines.
Added a tests for super property accesses within super calls of derived classes.
Merge pull request #12898 from Microsoft/NavigateToFixForIIFE
Rename Tests
Cleanup
Merge branch 'master' into interfaceFixes
implicit any for synthesized signature
simplify and inline methods
More tests of parameter initialiser type
Add parameter initialisers to control flow
add tests
refactor fix
abstract class expr instantiation and abstract fix works with class expr
Merge pull request #12862 from Microsoft/neater_checker
update
merge
resolve confilict
Merge remote-tracking branch 'tsupstream/master'
Merge pull request #12897 from Microsoft/Fix12316
NavigateTo is not working correctly for declarations in IIFEs
Fix https://github.com/Microsoft/TypeScript/issues/12316: Add `method` to known tag names
Merge pull request #12896 from Microsoft/implicit-any-error-on-explicit-any
Test:spreading any doesn't set flags on anyType
Set symbol/flags only on (fresh) object spreads
when language service is disabled - build program using only open files (#12809)
add a new line if after writing trailing comments (#12894)
Accepted baselines.
Don't replace the last statement if 'this' is used/captured within the constructor.
mark types used in decorator metadata as referenced (#12890)
More test cases and notes
Merge branch 'master' into add-undefined-to-default-valued-parameters
Make some code in checker neater
Merge pull request #12782 from Microsoft/fix12439
Merge pull request #12775 from Microsoft/fix12724
Merge pull request #12858 from Knagis/master
Fixed jsDoc parser - no longer omits asterisks in the middle (if the line does not start with asterisk) and additional case for whitespaces being ignored
Merge pull request #12843 from Microsoft/mappedTypeModifiers3
elaborate check before converting fresh literal type to regular (#12595)
Added test for https://github.com/Microsoft/TypeScript/issues/12236
Merge pull request #12852 from Microsoft/untyped_augmentation_2
Fixed missing whitespace in jsDoc comments. Fixes https://github.com/Microsoft/TypeScript/issues/12236
Merge pull request #12808 from Microsoft/self-referencing-spread-recursive-loop
create new lexical environment for the body of converted loop (#12831)
guard against visiting the same symbol table multiple times (#12818)
Merge pull request #12591 from chicoxyzzy/add_node6_to_ci
Remove the "set" function and use `map.set` with multiple lines of code if necessary.
Remove `createObject`; use `Object.create` directly.
Merge branch 'master' into map5
Produce an error for an augmentation of an untyped module even if `moduleNotFoundError` is not defined
Consolidate Tests
Merge branch 'master' into interfaceFixes
Synthetic signature uses existing parameter names
Accept new baselines
Add more tests
Additional tweak to mapped type property modifier propagation
Merge pull request #12826 from Microsoft/mappedTypeModifiers2
Merge pull request #12770 from Microsoft/deferIndexedAccess
Add test to verify use of Pick<T, K> with setState
Accept new baselines
Modify tests
Pick<T, K> and similar mapped types propagate modifiers from T
Merge remote-tracking branch 'refs/remotes/Microsoft/master'
Merge pull request #12153 from Microsoft/tsconfigMixedContentSupport
getSupportedExtensions optimization to reduce allocations
use localUse local updatedFileNames - this way we'll know that set of names is definitely cleared
Merge branch 'master' into tsconfigMixedContentSupport
mark containing project as dirty when file is closed (#12789)
Rename fileExtensionMap: fileExtensionMapItem[] to extraFileExtensions: FileExtensionInfo[]
Merge branch 'master' into interfaceFixes
Simplify index signature generation
Mark containing project as dirty when file is closed (Note: adding this until PR #12789 is merged in so that unit tests pass)
Merge branch 'master' into tsconfigMixedContentSupport
Test self-assignment w/array spread in loop
Use checkExpression in checkSpreadExpression
Simplify rest parameter handling
Merge pull request #12778 from Microsoft/unusedLocalsAndObjectSpread
cleanup
Add tests and fix rest parameters
Revert changes to core.ts
Changes due to CR comments
Adds support for new.target
make index signature fix work with generics
Fix paramtypes metadata emit
add missing index signature support
do not use ScriptVersionCache for closed files (#12777)
Expose indexSignaturePrinting
Simplify es2015 visitor, replace function tracking with flags
Do not report unused local error on locals that are intended for removing properties with object spread Fixes #12766
Merge pull request #12741 from Microsoft/allowBracketCompletionInComments
Add tests when object spread is used in destructuring
Fix error on extends in declaration file with importHelpers
Merge pull request #12722 from Microsoft/correctCommentsScaffolding
More tests:default-valued parameter+strictNullChecks
removing unneccessary comments
Merge remote-tracking branch 'origin/master' into correctCommentsScaffolding
Merge branch 'master' into deferIndexedAccess
Merge pull request #12675 from Microsoft/subsubclass-can-access-protected-constructor
Add comment
Fix target error for gulp
Clean up helpers
Simplify forEachKeyInMap and someKeyInMap
Add circularity tests
Use native maps when they're available
Property report circularity errors in indexed access types
address review comment
Merge pull request #12721 from Microsoft/stringify_shim
catch up
Merge branch 'master' into modify-extends
Merge pull request #12743 from Microsoft/fix12737
Merge pull request #12740 from Microsoft/fix12727
Fix await for inherited promise
add test for computed literals
handle well-known computed property/method names
Merge branch 'master' into add-undefined-to-default-valued-parameters
Merge remote-tracking branch 'origin/master' into allowBracketCompletionInComments
Allowing brace completion inside comments in JS and TS files
Fix decorator emit for accessors
Fix merge issues
Merge pull request #12730 from Microsoft/memberList_to_completionList
Merge branch 'master' into tsconfigMixedContentSupportRedux
Reduced version from CR comments
Merge pull request #12732 from Microsoft/remove_debug_statements
Remove debug statement
Use "completionList" methods instead of "memberList" ones, since they're identical
Test:instanceof allows callable/constructable RHS
instanceof RHS must be any, callable/constructable or Function subtype
Provide better error message
Remove JSON.stringify shim
replacing let with const
Merge remote-tracking branch 'origin/master' into correctCommentsScaffolding
Merge pull request #12708 from Microsoft/convert_json_option
Reuse code from convertJsonOptionOfCustomType
Add Support for multiple signatures
Merge remote-tracking branch 'origin/master' into correctCommentsScaffolding
remove projects that were no present in the input list in openExternalProjects (#12699)
Merge pull request #12695 from Microsoft/AddEmptyTypes
Accept new baselines
Add tests
Defer indexed access T[K] where T is generic and K is non-generic
Add empty `types` list to tsconfig.json
Add authors from https://github.com/Microsoft/TSJS-lib-generator/blob/master/AUTHORS.md
Update authors
Add baselines for new tests
More tests for binding elements referencing previous elements
Check binding initialisers in parameters as well
Merge pull request #12691 from Microsoft/displayPartKind
Binding initialisers can refer to previous elements
Write property name of destructuring pattern explicitly There wont be any symbol for the property name but we already know it is a property name Fixes #12166
Merge pull request #12690 from Microsoft/fix12669
Updated baseline
Added more specific diagnostic message
Add error for super property before super
Merge pull request #12680 from aluanhaddad/12678
Test:destructuring array initialisers refer to previous elements
Add ReadonlyArray<T>.includes to es2016.array.include.d.ts
implement getters/setters as property
Merge branch 'interfaceFixes' of https://github.com/Microsoft/TypeScript into interfaceFixes
Merge branch 'master' into interfaceFixes
use XDG base directory compatible cache location (#12676)
Updated baselines
Improve SourceMap emit for down-level async functions
Sub-subclasses can access protected constructor
Test that sub-subclass can access protected ctor
Update baseline
Properly determine whether an augmentation is a ValueModule or NamespaceModule
Update tests and baselines
Add tests for property access w/string index sigs
Property access for string index signatures
Merge pull request #12652 from Microsoft/fixIndexedAccessWithAny
fixes #9123
Accept new baselines
Add regression test
Indexed access any[K] has type any
Merge pull request #12643 from Microsoft/keyofUnionIntersection
Merge pull request #12640 from Microsoft/mappedTypesSecondaryInferences
Accept new baselines
Add tests
Property handle union/intersection types in type variable checks
Merge remote-tracking branch 'tsupstream/master'
Merge pull request #12639 from MattiasBuelens/fixElideFallthrough
Accept new baselines
Add tests
Classify mapped type inferences as secondary
Fix elided syntax kinds falling through to visitConstructor in TypeScript transformer.
address #12622
address feedback
change class inheritance code
Merge pull request #12623 from Microsoft/nestedIndexedAccess
Accept new baselines
Add tests
Accept new baselines
Treat indexed access types T[K] as type variables
Merge pull request #12614 from arusakov/cli_targets_descriptions_es2016_es2017_esnext
Update cli --target description (es2016 and 2017)
Drop unmaintained versions of Node.js from package.json
Merge pull request #12610 from Microsoft/Port12590
When creating string literal for property access, unescape the identifier text Fixes #12562
Add test for the decorated method beginning with underscore
Merge pull request #12575 from zhengbli/port12570
Merge pull request #12564 from Microsoft/rest-of-untyped-binding-pattern-is-any
Update baselines
Rest of untyped binding pattern is back to str index sig
Merge pull request #12594 from Microsoft/indexTypeNotFound
Handle parameter type error for index signature in declaration emit Fixes #12572
Add property access and --noImplicitAny tests
Rest of untyped binding pattern is back to any
Merge branch 'master' into asyncGenerators
Merge pull request #12305 from Microsoft/improveImportHelpersDiagnostics
Add Node.js 6 LTS to CI
Merge branch 'master' into improveImportHelpersDiagnostics
Merge pull request #12589 from Microsoft/mappedTypeModifierInference
Update baselines
Rest of untyped binding pattern is string-indexed type
Add tests
Accept new baselines
Improve handling of modifiers in mapped type inference
Reset the noEmitForJsFiles option when updating compiler options (#12570)
Merge pull request #12552 from Microsoft/spreadRestIntersectionAndUnions
Simplify isValidSpreadType
Simplify logic
extract filterNullableTypes
Merge branch 'master' into ownJsonParsing
Merge pull request #12563 from Microsoft/mappedTypeModifiers
Merge pull request #12565 from Microsoft/aozgaa/abstractAccessorImpl
Add more tests
fix test
abstract accessors can't have implementations
Test that rest of untyped binding pattern is any
Rest in an untyped binding pattern should be any
Update test
add missing semicolons
Add tests
Preserve modifiers in isomorphic mapped types
stubbing extra completions
Update test name
change test
Handel null and undefined in `__rest`
Handel null and undefined in object spread and rest
FIx typo in method stub.
Change name of the function
send begin/end notifications when installing types packages (#12551)
Sort matched files by include order
Fix function name
Allow union and intersection as targets for object spread and rest, and distribute spread&rest over unions
Merge pull request #12547 from Microsoft/Revert12207
tsserver: get candidates from <K extends keyof Foo> (fix #12536)
expose getApparentType on TypeChecker interface
Make sure all overloads have comments
Revert https://github.com/Microsoft/TypeScript/pull/12207
Merge pull request #12386 from mariusschulz/union-and-intersection-types-with-leading-operator
move helpers under codefix dir
Add args to diagnostic message
Merge pull request #12528 from Microsoft/mappedTypeInference
add test for #12536
Use array instead of map
use getStart()
Merge branch 'master' into interfaceFixes
Merge pull request #12533 from ethanresnick/keyof-tests
Merge pull request #12538 from Microsoft/fixExhaustiveSwitchCheck
Add regression test
getRegularTypeOfLiteralType before exhaustive switch check
Merge pull request #12537 from Microsoft/fixIntersectionNormalization
Add regression test
Deduplicate intersection types before distributing over union types
Update keyof tests to reflect #12425
Remove unused code in resolveMappedTypeMembers
Remove unused case in type inference
Add tests
Reorder type inference cases
Merge branch 'master' into mappedTypeInference
Merge pull request #12515 from Microsoft/fixMappedTypeInference
Merge pull request #12514 from Microsoft/keyofAndForIn
Merge pull request #12482 from wittydeveloper/fix-generateClassElementDecorationExpression-documentation
Add regression test
Include mapped types in type inference infinite recursion check
Add regression test
Accept new baselines
Fix multiple 'keyof' issues with 'for-in' and 'in' operator
remove extra files
Revert "remove extra files"
Merge pull request #12480 from Microsoft/keyofIsLiteralContext
remove extra files
remove extra tests
fix linting error
doc(compiler/ts): fix documentation typo about __decorator code generation When __decorator applied to method, the last parameter (descriptor) is null, not undefined
Type inference for isomorphic mapped types
Add regression test
keyof T is a literal contextual type
Merge pull request #12447 from Microsoft/mappedTypesAndUnions
Clean up api so that parsing returns JsonSourceFile
Merge branch 'master' into ownJsonParsing
Merge pull request #12434 from Microsoft/Fix12377
Merge pull request #12475 from Microsoft/jsxFactoryLeaf
Handle typingOptions to typeAcquisition rename when converting parsed json node
Merge branch 'master' into ownJsonParsing
respect casing when comparing names of config files (#12474)
Instead of creating clone of the jsxFactory's leaf node, create synthesized node Fixes #12467 This avoid setting original node which would be something from isolated parsing and hence not valid when resolving expression
Revert "Instead of creating clone of the jsxFactory's leaf node, create synthesized node"
Instead of creating clone of the jsxFactory's leaf node, create synthesized node Fixes #12467 This avoid setting original node which would be something from isolated parsing and hence not valid when resolving expression
Use `Function` instead of call and construct signatures
Handel call and construct signatures
Merge pull request #12357 from mylesmegyesi/12075-incorrectErrorMessageForUseOfTypeAsNamespace
Merge branch 'master' into defult_export_error_message
Merge remote-tracking branch 'tsupstream/master'
Merge pull request #12373 from Microsoft/RenameTypingOptions
Addressing CR feedback
Merge pull request #12396 from Microsoft/getTypeOfExpression
add typings installer user agent for npm requests (#12446)
Add more tests
Accept new baselines
Update tests
Distribute isomorphic mapped types over union types
Merge pull request #12445 from tlancina/master
Re-add sourceFiles to program emit callback
Merge pull request #12433 from Microsoft/updatelibreducesymbols
Merge pull request #12441 from RyanCavanaugh/jsDocAugments
report config errors when config file changed (#12372)
Support JSDoc @augments tag
Add function
Add special handeling for function and array in Object.freeze
Port lib changes
Maintain support for deprecated API typingOptions.enableAutoDiscovery
Merge pull request #12431 from Microsoft/rwcFixes
handel missing files gracefully
normalize path in harness
increase timeout
Update baseline-accept configuration
Merge pull request #12425 from Microsoft/keyofOnlyStrings
Add test case
Accept new baselines
Type of for-in variable is keyof T when object type is a type parameter
wrap subexpressions of conditional expressions in parens if necessary (#12420)
Merge pull request #12350 from Microsoft/default_excludes
Accept new baselines
Update tests
Update Record<K, T> type
Make keyof T a string-like type
recompute character to column when comparing indentations (#12375)
Merge pull request #12335 from Microsoft/getJSDoc-cleanup
Merge pull request #12415 from Microsoft/fix_lint
Fix lint errors
Add locale options to tsserver (#12369)
Merge pull request #12389 from Microsoft/keyofRelations
Merge pull request #12378 from andraaspar/master
Add test for proper tuple type handling
Add regression test
Accept new baselines
Add optimized getTypeOfExpression function
Add “|” and “&” to list of tokens that start a type
Accept new baselines
Add tests
Add tests and accept new baselines
Allow one leading ignored “|” or “&” in a type position
Merge pull request #12376 from Microsoft/vladima/update-tslint
Fix comparable relation for keyof T Treat keyof T as string | number for purposes of indexing Allow indexed access types with for-in and in operator
Fix issue #12260.
modify error message
update to tslint@next
Rename typingOptions.enableAutoDiscovery to typeAcquisition.enable
Merge branch 'master' into asyncGenerators
Tests for iterationMode=iterable
Merge branch 'master' into defult_export_error_message
Merge remote-tracking branch 'tsupstream/master'
Revert diagnostic error number change
Added iterationMode switch, consolidate some tests, cleanup
Merge branch 'tsconfigMixedContentSupportRedux' into tsconfigMixedContentSupport
Merge branch 'master' into tsconfigMixedContentSupportRedux
Merge branch 'master' into tsconfigMixedContentSupport
Merge pull request #12310 from Microsoft/check-object-rest-destructuring-assignment
tsconfig.json mixed content support
Add missed jsDoc rename in services' Node implementation
Address PR comments
Merge pull request #12362 from Microsoft/disable-evolving-types-with-implicit-any
Rename getJSDocComments -> getCommentsFromJSDoc
Improve readability of types and names
Merge pull request #12363 from Microsoft/declarationsInFilesWithErrors
Always enable evolving types in Javascript files
Merge pull request #12351 from Microsoft/mappedTypeRelations
Handle when type alias's type parameter extends type that wont get emitted in .d.ts Fixes #12326
Update baselines to have no evolving types
Disable evolving types with implicit any
use location of config file as initial location for automatic type reference inclusion if possible (#12341)
Add tests
Support apparent types for T[K] indexed access types
Handle the scenario when heritage clause of interface is not entity name expression Fixes #12291
Fix lint warnings
Merge branch 'master' into asyncGenerators
Update es2017 library and baseline
Fixes error message when Type is used as a Namespace
Use a symbol for untyped modules to distinguish from unknownSymbol
Make "exclude" default to empty if "include" is present.
Add new tests
Accept new baselines
Error on circular constraints in mapped types
ES5 tests for async generators
ES6 tests for async generators
Conformance tests for for-await-of
Added conformance tests for async generators
Type relations for generic mapped types
Merge pull request #12217 from subzey/feature/rest-loop-index
Keep the original api and add new api that handles the JsonNode Also handle the JsonNode when converting to parsedCommandLine
Clean cache code and streamline other code
pass project name as a constructor parameter (#12333)
Reorganize functions so commandline parser can include parser. This fixes build of typings installer
Parse json using our own parser
Clean up getJSDocParameterTag
Clean up getJSDocs
Merge pull request #12317 from RyanCavanaugh/fix12302
Clean up getJSDocTypeForVariableLikeDeclarationFromJSDocComment
Codegen: Do not subtract 0 in arguments to rest array loop
Merge branch 'master' into interfaceFixes
Revert "fix #11670, support type guards in NumberConstructor (#11722)"
Code fix for missing imports (#11768)
Updated baselines
Merge branch 'master' into getJSDoc-cleanup
Merge pull request #12312 from Microsoft/widen-literal-types-of-parameter-properties
Widen literal types of parameter properties
Test widen literal types of parameter properties
Add for-await-of, always use Symbol for iterables.
Fix grammar issue (#12096)
Merge pull request #12309 from Microsoft/issue_template
Add parameter type in function support comments for JS files
Check assignability: rest destructuring assignment
Test assignability checking of object rests
Update issue template
Merge branch 'improveImportHelpersDiagnostics' into asyncGenerators
Merge pull request #12304 from Microsoft/improve-spread-helper-emit
Merge branch 'emitHelper' into asyncGenerators
Improve diagnostic messages for imported helpers
Merge branch 'master' into improve-spread-helper-emit
Merge pull request #11874 from Microsoft/emitHelper
Merge pull request #12301 from Microsoft/recursiveMappedTypes
Update baselines with new __assign emit
Merge branch 'master' into emitHelper
Improve __assign emit:remove getOwnPropertySymbols
Merge pull request #12250 from Microsoft/streamlineDestructuring
PR Feedback
Accept new baselines
Add tests
Resolve upfront so recursive mapped types appear empty
Merge branch 'streamlineDestructuring' into emitHelper
Merge branch 'streamlineDestructuring' into emitHelper
Merge branch 'master' into streamlineDestructuring
Added missing places for visitParameterList
Merge branch 'master' into emitHelper
Merge remote-tracking branch 'origin/object-rest-emit-for-method-and-accessor-parameters' into streamlineDestructuring
Merge pull request #12280 from Microsoft/fix12262
Merge branch 'streamlineDestructuring' into isolateObjectSpread
Merge branch 'master' into interfaceFixes
Fix argument list for new containing yield
unexpose resolveStructuredTypeMembers
Merge branch 'master' into streamlineDestructuring
Merge pull request #12251 from Microsoft/fixTypePredicateStructuralMatch
Merge pull request #12276 from Microsoft/libMappedTypes
ports #12237, #12258 and #12259 into master (#12274)
remove fix
Aggregate changes before building result
Move transformFunctionBody back into es2015
Merge pull request #12248 from Microsoft/object-spread-rest-fixes
Accept new baselines
Revise tests
Add predefined mapped types and revise Object.freeze
Properly handle identity relation for mapped types
Handle class expressions
Update baselines with fixed emit
Fix spread/rest emit for symbols.
Remove getSymbolOfNode from TypeChecker interface
Update baseline of newly merged test
Merge branch 'master' into object-spread-rest-fixes
Update baselines
Improve rest/spread emit for symbols
Use getTypeOfSymbolAtLocation
Merge pull request #11546 from Microsoft/unusedidentifier
Merge branch 'master' into unusedidentifier
Test object rest parameter emit: methods/accessors
Object rest emit for method and accessor parameters
Address PR commennts
Merge pull request #12158 from Microsoft/fix-literal-comparability-in-relational-comparison-operators
Make multiLine optional in convertToFunctionBody
Removed esnext dependency on convertForOf/transformFunctionBody in factory
Accept new baselines
Revert type predicates to not have instanceof special casing
Merge pull request #12247 from Microsoft/fix10840
Accept baselines
Add repro test
Moved the parenthesizing functions to make the diff easier to read
Update baselines, fix assignment check for object rest.
Update baselines
Add spread tests and update rest tests
Spread+rest fixes
Merge pull request #12223 from Microsoft/fix-object-spread-rest-async-emit
Merge pull request #12197 from Microsoft/commentsSuperCallReturns
Fix missing alias for decorated classes in es5
Fix handling of default class
Merge branch 'master' into isolateObjectSpread
Merge pull request #12245 from Microsoft/fix12244
Update comment
Update baselines
Fix typo and capitalization
Fix string constituent check in checkElementTypeOfArrayOrString
remove generated file from PR
Fix extends -> implements for decorators/modifiers
enable syntactic features if project size exceeded the limit, send events when state of language service changes (#12190)
add 'installSuccess' flag to telemetry, cache misses if npm install fails (#12163) (#12240)
remove multiple implements TODO
Spell out names fully
Get Ancestor instead of manual walk
Remove Inner Loop
Clean up destructuring
Merge pull request #12232 from Microsoft/removeJSFromVSResolutions
add 'installSuccess' flag to telemetry, cache misses if npm install fails (#12163)
Initialize result to empy array
Merge pull request #12207 from ethanresnick/precise-object-entry-types
Add a test
tsconfig.json mixed content support
Make failedLookupLocations an array
Include no types in services
Filter JS files from resolutions sent to VS through shims
&& -> ||
Ignore optionality in the comparable relationship (#12202)
allow getting compiler options diagnostics when language service is disabled
Consolidate destructuring code paths
Fixes for object spread emit
Test object spread+async emit & nested spread emit
Merge pull request #12156 from Microsoft/fix-jsdoc-missing-space-from-bad-indent
Merge pull request #12114 from Microsoft/mappedTypes
fix #12137, correct ProxyHandler signatures (#12172)
Add comment explaining type alias instantiation strategy
Merge pull request #12210 from Microsoft/typePredicateCheck
remove tsd dependency (#12206)
switch to tslint@next (#12201)
Add regression test
Add early bail out for call expressions that are never type predicates
More precise Object.entries type declarations
Accepted baselines.
Avoid checking for optionality in comparability checks.
Accepted baselines.
Added tests.
Accept new baselines
Address CR feedback
Accepted baselines.
Move comments from super calls to their generated return statements.
Accepted baselines.
Added test.
enable syntactic features if project size exceeded the limit, send events when state of language service changes
WIP Clean up destructuring
Clean up jsdoc in utilities
Merge pull request #12103 from Microsoft/path_mapping_exact_extension
Update baseline
Merge branch 'master' into path_mapping_exact_extension
Allow JS files
Merge branch 'master' into path_mapping_exact_extension
Merge pull request #12020 from Microsoft/symlink3
Merge branch 'master' into symlink3
Merge pull request #11993 from Microsoft/common_source_directory
Merge pull request #11926 from Microsoft/module_resolution_fixes
Merge branch 'master' into common_source_directory
Fix test
Add Push interface
When looking up modules in @types, only look for `index.d.ts` and `package.json`.
Accept new baselines
More tests
Merge pull request #12177 from Microsoft/error-on-non-identifier-rest-in-destructuring-assignment
Test non-identifier rest in destructuring assignment
Error on non-identifier rest in destructuring assignment
Add tests
Improve type inference for types with same generic type alias
Add missing node visits in forEachChild
Added fix for missing 'this.' property accesses.
Added tests for missing 'this' property accesses.
Added diagnostic.
Update version (#12162)
Added emit helper checks for async generators
Add declaration emit support
Update baselines
Raise literal type to its base in a comparison
Merge release-2.1 into master (#12157)
Exclude js files in non-configured projects compile-on-save emitting (#12118)
Merge pull request #12147 from mylesmegyesi/12050-IncompatableAssignementOfIdenticallyNamedTypes
Merge branch 'master' into fix-jsdoc-missing-space-from-bad-indent
Retain space after first word in multiline jsdoc
Add ES2017 string padding (#12152)
Merge pull request #12154 from Microsoft/import-helpers-reports-errors-for-__rest
synthesize complete import declaration for tslib (#12151)
Test error for import helpers with no __rest
Correctly check spread assignments in strict mode
Report errors for import helpers missing __rest
Merge branch 'master' into mappedTypes
Check mapped type constraint is assignable to string | number
Merge pull request #11978 from Microsoft/errorReportingInJsFile
Accept new baselines
Use pull model to obtain type alias information for type nodes
Add test with a referenced dts file
Merge pull request #12135 from Microsoft/jsxFactory
Updated condition for more readability
Adds error message for incompatible assignment of identically named type
Merge pull request #11150 from Microsoft/object-spread
Merge pull request #11633 from Microsoft/fix-comparable-in-switch
Merge pull request #12028 from Microsoft/object-rest
Defer resolution of mapped types to enable recursive definitions
Parse the jsxFactory again in the checker instead of using cached value in the program
Merge branch 'master' of github.com:Microsoft/TypeScript into delete-readonly
Simplify Testing
Parse, check, and downlevel emit for for-await-of
Added emit transforms for async generators.
Add test cases for when jsxFactory cannot be resolved
Enabled test case for source map
Transpile unit test case
When emitting use jsx factory entity expression if provided
Update tests
Get one fix per interface
Resolve first identifier of the jsxFactory as part of type check
Merge branch 'asyncGeneratorsUpLevel' into asyncGenerators
Updated baselines
type checking for pseudoiterable
Verify that jsxFactory is either identifier or qualified name
Add strictNullChecks test for object spread
Treat `| undefined` like optionality in spread type
Add support for taking in jsxFactory option and report errors for invalid combinations
Merge remote-tracking branch 'upstream/master'
Fix #442: (es3, es5, es6+) Show compiler errors for conflicting properties.
Merge branch 'master' into errorReportingInJsFile
Improve nested destructuring test for ESNext emit
Downlevel array destructuring to ES6 in object rest
Handle abstract and const modifiers
Fix test
Properly implement type relationship for '[P in S]: X' and '[P in T]: Y'
Fix duplicate function error
Merge branch 'master' into symlink3
Resolve symlinks for type reference directives too.
Merge branch 'emitHelper' into asyncGenerators
Merge branch 'master' into interfaceFixes
cleanup
Merge branch 'master' into emitHelper
Remove EmitHelperState, general helper cleanup.
(signature help) type parameter lists are never variadic (#12112)
use createHash from ServerHost instead of explicit require (#12043)
fix linter errors
Fix Type Param method Tests
Edit error handling tests
Don't include private/protected properties in keyof T
tests: edit expected type params
Use new engine for interface fixes
Better error message in fourslash
Use TypeChecker to Get Types, Print
Expose signatureToString, addSupressAnyReturn Flag
Add relations for keyof S / keyof T and [P in S]: X / [P in T]: X
rename tests
Make keyof T assignable to and subtype of string | number
Allow a path mapping to provide a file extension
Merge branch 'master' into mappedTypes
Type inference for mapped types
Merge pull request #12068 from Microsoft/fixTypeAliasDisplay
Include declaration file emit
Update authors for release-2.1
reduce set of files being watched, increase polling interval (#12054) (#12092)
Port fix for https://github.com/Microsoft/TypeScript/issues/12069 (#12095)
Make test failure more readable
Expose More TypeChecker
Test Fixes
Merge pull request #12064 from Microsoft/cacheSignatureInstantiations
Reuse subtree transform flags for incrementally parsed nodes (#12088)
property handle missing config files in external projects (#12094)
return empty file watcher in case if target directory does not exist (#12091)
Address more PR comments
Ports #12051 and #12032 into master (#12090)
Set spread type symbols in checkObjectLiteral
Merge pull request #12089 from Microsoft/lshost_realpath
Create spread property types eagerly
Remove error-codes from fourslash tests
Add `realpath` implementation for lshost
Do not emit __rest for --target esnext
Rename variable in checkSwitchStatement per PR
Merge branch 'object-spread' into object-rest
Merge branch 'master' into object-spread
Revert unneeded change and comments per PR
Improve sharing by re-instantiating top level type aliases
Add --target esnext tests and update baselines
Add --target esnext
Correct symbol display for type parameter of mapped type
Validate constraint type in mapped type
Add SpreadAssignment to visitors
Rename SpreadElementExpression -> SpreadAssignment
Add source maps and declarations to test
Accept new baselines
Revert incorrect logic from #11392
Handle recursion in mapped type display
Allowing `static arguments()` and `static caller()` for target `"es6"`. Disallow non-function properties `static arguments` and `static caller`, though.
Type checking for async iterables and async generators.
Add regression test
Properly instantiate aliasTypeArguments
Handle readonly and optional properties + index signatures
Fixing wrong line number in tests/baselines/reference/variableDeclarationInStrictMode1.errors.txt after rebuilding and testing compiler.
Relaxed ES2015 restrictions for generator type check
Accept baseline tests. Fixing `diagnosticMessages.json` (merge result not included in prior commit).
Merge remote-tracking branch 'upstream/master'
Accept new baselines
Cache generic signature instantiations
Introduce instantiateCached function
add missing bind calls to properly set parent on token nodes (#12057)
Attach symbols to mapped types
Add straggling Test
Still re-writing missing member grabber
Add tests and simplify existing ones
Spread any types to any
Merge branch 'master' into mappedTypes
Introduce MappedType in type checker
Move transformFunctionBody to factory
Update improved baselines
Move convertForOf to factory for esnext and es2015
Merge pull request #11998 from Microsoft/unusedProperty
Address PR comments
Do not add undefined to parameter properties
Merge pull request #12039 from Microsoft/fix12010
Port #12027, #11980 and #11932 to master (#12037)
Ensure transformFlags are correct before visiting a node.
Merge branch 'master' into asyncGenerators
broken
Test adding undefined to default-valued parameters
Add undefined to default-valued parameters
Parse '[P in K]' part of mapped type as a type parameter declaration
Improve readability of ES next destructuring emit
Update objectRestAssignment test
Clean up
Handle most module cases
Add a `.d.ts` file to the test to ensure it is excluded from the calculation too
Merge pull request #12026 from Microsoft/keyofAndConstraints
Merge branch 'master' into keyofAndConstraints
Emit for full down-level generators
Merge pull request #12021 from Microsoft/tslint_version
Fix linting errors
Update objectRestAssignment test and baselines
Merge branch 'object-spread' into object-rest-syntax
Accept new baselines
Update tests
Correct assignability for keyof types and type parameters
Spread handles index signatures from singleton spreads
Remove spread type tests from spread tests
Lock tslint version to 4.0.0-dev.0, because 4.0.0-dev.1 complains about unnecessary semicolons following properties
Only resolve symlinks in `node_modules`
Leave files from `node_modules` out when calculating `getCommonSourceDirectory`
Parsing of mapped types
accept new baseline
migrate checkDelete to new property checking
add new tests and accept baselines
fix #11480, disallow delete operator on readonly property or index signature
Fix lint
Remove spread types, leaving spread syntax/emit
Update baselines
Add rest tests
Downlevel emit of rest elements
Parse, bind and check rest elements
fix jakefile1
module resolution: prefer locally defined ambient modules, reuse resolutions to ambient modules from the old program (#11999)
fix references to codefixes?
Rename and simplify fourslash interface
Test index [access] types inside spread types
Spread types handle nested index [access] types
Mark property referenced in the destructuring as referenced Fixes #11324
Test case for property used in destructuring variable declaration
Merge branch 'master' into object-spread
Remove unused
Merge pull request #11929 from Microsoft/keyoftypes
Adding tests
Minor fixes
Recognize modifiers
Fix #11396: Make error message referene `Promise` explicitly (#11982)
Fix 'keyof any' to produce 'string | number'
Removed unused, confusing cases
Add more testcases and simplify
Merge branch 'master' into interfaceFixes
Fix linting errors
Remove unused tests
Refactor fourslash testing for codeFixes
Report all the js file errors and skip only the nodes that are not allowed in js Fixes #11800
Add test cases to report errors for decorators in js file
Improve unification by moving more logic to getIndexedAccessType
Add missed test update
Update baselines
Get literal type only once
Merge pull request #11974 from Microsoft/set_immediate
Make `cachingInServerLSHost` tests work with `runtests-browser`
Merge branch 'master' into keyoftypes
Accept additional baselines
Accept new baselines
Unify checking of indexed access expressions and indexed access types
Merge pull request #11430 from Microsoft/fixAsyncReturnTypeCheck
Merge branch 'master' into fixAsyncReturnTypeCheck
Forbid augmentation of untyped module (#11962)
Cleanup Extends -> Interface Change
Move eitherIsNotLiteral check into switch and === checks
Merge branch 'master' into fix-comparable-in-switch
Merge pull request #11957 from Microsoft/fix_realpathmap
Merge pull request #11495 from Microsoft/includes_glob
Update generated files (#11963)
Add helper function
Fix realPathMap in test harness: Must be used in `directoryExists`
Accept new baselines
Improve more error messages
Accept new baselines
Improved error messages for invalid assignments to properties
Accept new baselines
Improved error messages for invalid assignments to identifiers
cache type for empty type literal (#11934)
extends->implements w/ implements keyword present
Add removeAbstractModifier Fix
Merge pull request #11848 from Microsoft/AddJavaScriptSemanticErrorsToSyntacticErrors
Merge pull request #11925 from Microsoft/vladima/11880
Merge pull request #11928 from Microsoft/vladima/11738
Minor fixes
do not inline async IIFEs in control flow graph
update CFG to properly handle do statements
Merge pull request #11922 from Microsoft/vladima/port-11906
Add Failing Tests
Rename and Add a Test
enable non-ts extensions in inferred projects by default
Merge branch 'master' into emitHelper
Rename TransformFlags.Experimental -> ESNext
Merge pull request #11905 from Microsoft/skip-overloads-with-too-short-function-parameters
isAritySmaller runs later: getNonGenericSignature
Do not use contextual signatures with too few parameters
Updating test due to CR changes.  The order of the diagnostic messages has changed due to concatenation changes
Rename Most Tests
disable CoS for inferred projects (#11909)
Simplify getCodeFixChanges
Changes from CR feedback
Nerf Extends to implements For Now
Merge pull request #11908 from Microsoft/revert_map4
Rename Experimental transform to ESNext
Revert "Merge pull request #11354 from Microsoft/map4"
Ignore optionality when skipping overloads
Minor style improvements
Merge branch 'master' into object-spread
Test skip overloads w/too-short function params
Skip overloads with too-short function parameters
Merge branch 'master' into emitHelper
Refactor getIndexedAccessType to be reusable from checkIndexedAccess
Merge pull request #11354 from Microsoft/map4
Respond to PR comments
Consider index signatures in type produced by 'keyof T'
Merge branch 'master' into map4
Merge pull request #11894 from Microsoft/for_loops
Merge branch 'master' into map4
Merge pull request #11891 from Microsoft/jsx_resolution_diagnostic
Merge pull request #11899 from Microsoft/optional_extension
Make `extension` property of `ResolvedModule` optional; introduce `ResolvedModuleFull` interface for when the extension is provided.
Merge pull request #11889 from Microsoft/untyped_imports
Change diagnostic message
Rename to zipWith
Merge pull request #11893 from Microsoft/truthy_enum
Simplify for loops in fourslash.ts
Allow untyped imports
Fix: test for presence, not absence
Merge pull request #11892 from Microsoft/remove_old_comment
Fix bug: We want to test for existence of the enum value, not whether it's non-zero
Remove a comment about a parameter that no longer exists
Fix bug: Return a resolution diagnostic for a `.jsx` import if `--allowJs` is turned off
Merge pull request #11704 from Microsoft/refactor_module_resolution
Added RawExpression to move the UMD helper out of the emitter
Move emit helpers into related transformers
Merge pull request #11769 from Microsoft/moveModuleTransformToEnd
only emit /// types reference for a symbol in d.ts file if all declarations of a symbol come from type reference directives (#11872)
Move codeFixProvider.ts
Split CodeFixes in Separate Files
rewrite void-returning statements in constructors that capture result of super call (#11868)
more temp
Covnert to Doc Comment
Merge branch 'master' into interfaceFixes
Support parametric property access expressions + some renaming
temp
Merge branch 'master' into map4
Move helper functions to core (fix build)
Fix #10108 (Completion suggestion for object literal with getter) (#11808)
Merge branch 'master' into refactor_module_resolution
Don't require `resolvedTsFileName` and `resolvedJsFileName`, just `resolvedFileName` and `extension`. Also, change search order to do all TS searching before searching for JS.
For JavaScript files, we report semantic errors for using TypeScript-only constructs from within a JavaScript file as syntactic errors.
Clean up and consolidate destructuring transform
add a fallback logic for older versions of node that don't support 'homedir' (#11845)
Run tests on branch release-2.1
Merge pull request #11841 from Microsoft/vladima/report-typings-installer-pid
use unresolved imports as a source of used typings (#11828)
Rename Tests
Initial implementation of 'T[K]' property access types
Refactor Loop
Refactor classDeclarations
Remove Type Assignability QuickFix
Support dotted name in @typedef tag (#11695)
report typings installer process id to parent process
Use symbol fully-qualified name instead of node text in error message (#11761)
Merge pull request #11829 from Microsoft/arozga/RemoveNavBarWhiteSpace
remove whitespace
simplify regex
remove check on property assignment
Merge pull request #11830 from Microsoft/jsDocAV
Merge branch 'master' into arozga/RemoveNavBarWhiteSpace
only remove whitespace for expr assignment
Merge branch 'master' into includes_glob
Simplify isImplicitGlob test
Move most of resolveModuleNameForLsHost to lsHost
Introduce PropertyNameType
Fix the AV resulting from presence of undefined in the jsDocPropertyTags Fixes #11703
remove whitespace
Simplifying handling import cases
Merge pull request #11819 from Microsoft/vladima/11752
Move emit helpers into related transformers
Merge branch 'master' into object-spread
Initial implementation of 'keyof T' type operator
Merge pull request #11818 from Microsoft/unusedDestructuredParameter
Merge pull request #11757 from Microsoft/destructure_catch
Fix #11545 ('export as namespace foo' occurs EOF without semicolon) (#11797)
Fix 'import a = A' case
treat ambient non-aliased 'require' as commonjs 'require'
Report error on unused destructured parameters Fixes #11795
Fix #11650 add an error message for no source files parsing a tsconfig.json (#11743)
Add test case for destructured unused parameter
Merge pull request #11762 from Microsoft/jsxEmit
Merge pull request #11771 from Microsoft/typeFlagsRefactoring
Fix #10967, allow boolean flags to have explicit value (#11798)
Merge pull request #11791 from Microsoft/genericTypeParameterConstraint
Merge pull request #11790 from Microsoft/allowUnderScoreForIn
Merge pull request #11816 from RyanCavanaugh/fix11805
Perform a useful comparison. Fixes #11805
Merge branch 'master' into object-spread
Add more commentary to getSpreadType
Explain writeSpreadType a little better
Update baselines with new spread type index errors
Error for call/construct signatures in spread type
Respond to PR comments
Clean up and reorder getSpreadType body
Move multiple-spread handling out of getSpreadType
Remove unused case, and fix for..in
Check type parameters of the type alias declaration Fixes #11166
Move n-ary spread handling into separate function.
Rename TypeFlags.ObjectType to TypeFlags.Object
Update baselines with new index signature rules
Remove unused locals/parameters from webTestServer.ts
Add test for #11166
Add tests for different constructor parameter cases.
Major refactoring after PR feedback
Allow unused locals in for in or for of that start with _ Fixes #11734
Simplify expression in resolveObjectIntersection
Update and improve spread intersection tests
Resolve all-object intersections inside spreads
Merge pull request #11765 from Microsoft/aozgaa/AddTestForComparingNumericLiteral
Merge pull request #11776 from Microsoft/vladima/port-11764
Merge pull request #11764 from Microsoft/vladima/11744
Refactoring a bit more
Revert baseline change due to stale output
Update baseline
Merge branch 'master' into moveModuleTransformToEnd
Move ObjectLiteralPatternWithComputedProperties to ObjectFlags
Move System module transform to end.
Merge branch 'aozgaa/AddTestForComparingNumericLiteral' of https://github.com/Microsoft/TypeScript into aozgaa/AddTestForComparingNumericLiteral
update baselines
add test
Merge pull request #11763 from RyanCavanaugh/real-jenkins
Introduce EvolvingArrayType and associated ObjectFlag.EvolvingArray
Jenkins / .net CI support
Introduce ObjectFlags in object types
When creating react namespace identifier, set its parent to jsx opening element in the parse tree This helps in resolving the react identifier correctly and Fixes #11654
Add testcase for incorrect emit of jsx
Allow destructuring in catch clauses
Move setTimeout to sys (#11746)
Properly distinguish between Type, ObjectType, and StructuredType
Merge branch 'master' into object-spread
Merge pull request #11737 from Microsoft/not_implemented
Merge branch 'master' into object-spread
Update spread w/intersection tests
Spread no longer distributes intersections
Just use notImplemented
Moved AMD/CJS/UMD transform to end
Update tests w/spread assignability+apparent type
Make spread assignability and apparent type stricter
Add noop, notImplemented, and notYetImplemented helpers
fix #11670, support type guards in NumberConstructor (#11722)
Merge pull request #11721 from Microsoft/unusedLocals
Merge branch 'master' into map4
Merge pull request #11717 from Microsoft/normalizeIntersectionTypes
Update inference test for spread types
Remove type inference for spread types
Fix #11660: wrong reports that block-scoped variable used before its … (#11692)
Remove "ResolvedModuleFromHost" type and just make `resolvedTsFileName` and `resolvedJsFileName` optional properties
Merge pull request #11735 from Microsoft/no_unused_2
Merge pull request #11349 from RyanCavanaugh/fix10624
Fixes #10624
Adding testcases for reactnamespace
Merge branch 'master' into refactor_module_resolution
Don't need `libFilePath` parameter
Merge branch 'master' into object-spread
Forbid unused locals/parameters anywhere
Merge pull request #11715 from Microsoft/unused
Respond to PR feedback
Mark local "react" symbol as referenced since it might not be marked if there was no error message being displayed Fixes #10312
Add testcase when error is reported about unused react
Merge pull request #11647 from Microsoft/AddIsGlobalCompletionRestrictions
Instead of getResolutionOrDiagnostic, use getResolutionDiagnostic and avoid using resolution.resolvedFileName if the diagnostic is defined.
Add tests
Simplify logic in checkTypeRelatedTo
Adding JSXExpression check for isGlobalCompletion and associated tests
Forbid unused locals/parameters in compiler
Merge pull request #11710 from Microsoft/concat
Merge pull request #11709 from Microsoft/compiler_diagnostic_strings
Allow number too
Accept new baselines
Normalize intersection and union types
check heritage clause for the presence of entry with Extends keyword (#11711)
Merge pull request #11707 from Microsoft/es5
Merge branch 'master' into map4
Type arguments to formatStringFromArgs as strings instead of implicitly stringifying
Use single `concat` call instead of repeated calls
Use an ES5 target
Return both ts and js results from module resolution, and don't have moduleNameResolver responsible for omitting files based on compiler options
Merge pull request #11696 from Microsoft/vladima/port-11694
Merge pull request #11694 from Microsoft/vladima/reload-tmp
Merge pull request #11686 from Microsoft/AddIsSemanticToGetDiagnosticsWorker
Add getSyntacticDiagnostics unit test
Merge pull request #11673 from Microsoft/partiallyAnnotatedSignatures
Merge pull request #11652 from Microsoft/transformES5
Merge pull request #11690 from Microsoft/vladima/port-11651
Merge pull request #11370 from Microsoft/requireAsFunctionInExternalModule
Merge branch 'master' into requireAsFunctionInExternalModule
Update the resolveName symbol flags for 'require' resolution
Include the correct file by default (#11685)
Merge pull request #11651 from Microsoft/vladima/literals-in-protocol
Merge pull request #11675 from Microsoft/vladima/fix-11665
Address CR feedback
address PR feedback
Merge pull request #11687 from Microsoft/update-CONTRIBUTING-baseline-instructions
Remove baseline-accept warning from CONTRIBUTING
Merge pull request #11640 from RyanCavanaugh/jsxTextIsToken
Add isSemantic check to getDiagnosticsWorker
Merge pull request #11680 from Microsoft/unnecessary_assert
Merge branch 'master' into transformES5
Merge pull request #11350 from Microsoft/fix_lib_tests
Accepting new baseline. Format code to fit linter rules.
Don't use ternary operator
Add lib-concatting newlines to jakefile as well
Add fourslash test for contextually-typed `this`
Use collator when making comparison as it is more performance than String.prototype.localeCompare
Add partially annotated function tests
Merge branch 'master' into map4
Remove unnecessary assert
Cleaned up emit of enum declaration
fix flow in finally blocks
Fix lint error
Accept new baselines
Improve contextual typing of partially annotated signatures
Minor cleanup
Merge remote-tracking branch 'upstream/master'
Adds ES5 to ES3 transformer for reserved words
Fix for issue #442
Fix for issue #442
Merge pull request #11653 from Microsoft/fix11295
More tests
Fix issues from merge
Merge branch 'master' into fix11295
Merge pull request #11407 from andrejbaran/es2017-target
Merge pull request #11632 from Microsoft/vladima/port-11605
Merged master into es2017-target
Updated comment
Add missing trigger file (#11641)
Fix emit issue regarding null/undefined in type annotations
Merge pull request #11609 from Microsoft/consolidateImportElision
Merge pull request #11432 from Microsoft/controlFlowArrays
Cleanup ES2017 async tests
Restrict IsGlobalCompletion to: - SourceFile - Template Expression - Statements
Fix-ups around formatting and assertions
Merge pull request #11599 from Microsoft/update_issue_template
JSX Text belongs with its other token friends
Merge pull request #11541 from Microsoft/master_11339
Merge branch 'master' into object-spread
Update baselines
Push eitherIsNotLiteral check into isTypeEqualityComparableTo
Merge pull request #11605 from Microsoft/vladima/convert-enums-to-const
Merge pull request #11593 from Microsoft/vladima/port-11577
Merge pull request #11608 from Microsoft/vladima/port-11594
Merge branch 'master' into controlFlowArrays
Get rid of ES6 completely
Adds ES5 to ES3 transformer for reserved words
Update LKG
Port fix in https://github.com/Microsoft/TypeScript/pull/11293 to correct file
Update LKG
Merge branch 'slawomir-10758-always-strict'
Add buildProtocol.js
Add error reporting for using `--noImplicitUseStrict` with `--options.alwaysStrict`
Merge pull request #11594 from Microsoft/vladima/fix-11590
Add switch comparability test and update baselines
Merge branch 'master' into interfaceFixes
Use same literal comparison rules for switch/===
Fix the Function interface (#11269) (#11293)
fix typo in type definition (#11346)
Merge branch '10758-always-strict' of https://github.com/slawomir/TypeScript into slawomir-10758-always-strict
Merge pull request #11458 from Microsoft/narrowedConst
Avoid watching non-existing directories and fix null-exception (#11601)
Remove unused function
Merge pull request #11587 from Microsoft/narrowStringAndNumber
Accept new baselines
Update tests
Treat reference to empty evolving array as an implicit any[]
Address PR: remove locales and options; use accent as default
Update issue template
fix linter issues
Merge pull request #11577 from Microsoft/vladima/configure-typing-acquisition
Allow any type for spreads in JsxExpression
Add additional tests
Fix test
Support 'unshift' and fix typo
Add spread syntax tests for JsxExpressions
Add spread syntax to JsxExpression.
Add tests
Accept new baselines
Properly narrow union types containing string and number
Merge branch 'master' into es2017-target
Favor use of ES2015 instead of ES6
Remove constant substitution from ES2017 transformer
Refactor createFunctionExpresson
Adjust some async conformance baselines
Make async/await an ES2017 feature only
Set maxNodeModuleJsDepth for inferred projects
Cleanup comments
Merge pull request #11570 from Microsoft/fixErrorMessageForUmdGlobals
Merge pull request #11569 from Microsoft/vladima/port-11550
Accepted baselines.
Change error message for referencing UMD globals from a module.
Only use localeCompare in CompareStrings
Merge pull request #11550 from Microsoft/vladima/generate-protocol
Fix bug in scanner
Narrow string and number types in equality checks and switch cases
Add es2017 async conformance
Move async/await into separate es2017 transformer
Move import/export elision to ts transform
Don't use es8. Add es2016 target. Rename es7 to es2016. Update getDefaultLibFileName for new targets.
Fix lint
Refactor getTypeFromTypeLiteral, from PR comments
Merge pull request #11511 from Microsoft/FixImportListCompletions
Respond to PR comments
Remove trailing newline from baseline again
Reset baseline line number to the locally incorrect value
Merge branch 'master' into map4
Update baselines with spread string's numeric indexers
Merge pull request #11532 from Microsoft/navtree
Add numeric indexer to strings and remove lint
Remove space at end of line in baseline
Merge branch 'master' into map4
Remove emacs-added newline at end of baseline
Merge branch 'master' into navtree
Use a single ShimMap class, and indicate that iteration always yields string keys (which it did before too)
Merge pull request #10185 from Microsoft/pvb/codeaction/api
Turn on skipLibCheck for js-only inferred project and external project (#11399)
Fix typo
Reverted test change
Fixed errors with overloaded method exports
Merge branch 'pvb/codeaction/api' into interfaceFixes
Merge branch 'pvb/codeaction/api' into unusedidentifier
Merge branch 'master' into pvb/codeaction/api
Remove duplicate interface
Revert lib.d.ts error message baseline (unrelated)
Update baselines
Test spread type inference+more index signature tests
Type inference for spread types
Merge branch 'master' into object-spread
Codefixes for unused variables, properties etc.
Codefixes for implement interface and change extends to implements.
Guard localeCompare function
Respond to some PR comments
Remove cached resolvedModule result if the target file was deleted (#11460)
Merge pull request #11540 from Microsoft/jsdoc_type_alias
Support JSDoc for type alias
Accept new baselines
Add test
Fix minor issue
Support parentheses and comma operator with evolving arrays
Add "navtree" and "navtree-full" server commands
Resolve export= module members
Send config file diagnonstics event even when no errors were found (#11285)
update documentation in protocol.d.ts (#11501)
Fix #10758 Add compiler option to parse in strict mode
Merge pull request #11496 from Microsoft/master_port11268_fixChakraLoadDll
Implicitly consider an extensionless file in "includes" to be a recursive directory glob
Port fix from PR#11268
Merge pull request #11347 from HerringtonDarkholme/remove-redundant
Add tests and update baselines.
Support unions/intersections in spread types
Merge branch 'master' into object-spread
Fix #10758 Add compiler option to parse in strict mode
Fix #10758 Add compiler option to parse in strict mode
Accept new baselines
Add test
Fix issue in control flow analysis of nested loops
Narrowed consts flow through object literal or class expression method Fixes #10501
Add test case for narrowed const in object literal and class expression method
Fix test failure
Deal with buildbreak
Merge branch 'master' into pvb/codeaction/api
Codefixes in client for testing the server.
rename of the response body
PR feedback
Merge pull request #11448 from Microsoft/fix_array_condition
Merge pull request #11449 from Microsoft/resolved_path
Update baselines
Spread type:new assignability+simplification tests
Switch spread types to a binary representation.
Inline calculation of resolvedPath
Merge branch 'master' into map4
Fix array conditional
Merge pull request #11447 from Microsoft/visit_module_block
Merge branch 'master' into object-spread
Add `any` to allow us to cast a ModuleBlock to a Block
Respond to PR comments
Merge branch 'master' into map4
Fix lint warnings.
Merge pull request #11431 from Microsoft/awaiterInES3
Add additional test
Fix some minor issues
Merge pull request #11328 from Microsoft/FixTripleSlashCompletions
Merge pull request #10239 from Microsoft/fix10193
Merge branch 'master' into controlFlowArrays
Merge pull request #11263 from Microsoft/controlFlowLetVar
Merge pull request #11342 from Microsoft/syntaxKindLiterals
Fix linting issues
Merge branch 'master' into syntaxKindLiterals
Accept new baselines
Add tests
Accept new baselines
Change the memberTypes of an EnumType to a (possibly sparse, but probably not ) array.
Add heap performance markers
Remove more uses of 'get'
Use native maps when they're available
Introduce sameMap function
Use just the errorcode, without the TS prefix
Merge pull request #11427 from Microsoft/implictAnySelfRef
Fix syntax error in __awaiter when running in ES3
Simplify async return type checking
Report missing global diagnostics
Handle case where this access is inside the supercall
Do not get return type from contextual signature if we are already in process of getting return type of it Fixes #10073
Accept new baselines
Use control flow analysis for variables initialized with []
Merge pull request #11147 from Microsoft/classic_at_types
Adding test for #10073
Merge pull request #11411 from Microsoft/vladima/missing-lib-check
Have classic module resolution use @types as a fallback
check lib command line option when deciding if program structure can be reused
Fix #11314: Expose `insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces` and `insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces` on protocol definiton (#11405) (#11410)
Merge pull request #11391 from Microsoft/metaDataWithStringLiteral
Merge branch 'master' into metaDataWithStringLiteral
Added test case for enums
Merge pull request #11395 from Microsoft/completionEntry
Merge pull request #11373 from Microsoft/gotoDefRequire
Merge pull request #11401 from Microsoft/completionInObjectLiteralAssignment
Merge pull request #11394 from RyanCavanaugh/noGlobalInJsxAttr
Merge pull request #11404 from Microsoft/vladima/suppress-semantic-classifier-js
ES8/ES2017 target tests
Add ES8/ES2017 target (#10768)
provide completions only in the correct bounds
update tests to reflect no completion filtering
do not run semantic classification on non-ts-or-tsx files
Merge branch 'master' into FixTripleSlashCompletions
Remove filtering functionality
Fix incorrect returning of completion entries when in string literal of property assignment expression Fixes #11232
Merge pull request #11400 from Microsoft/vladima/fix-baselines
update baselines
Remove extraneous assignments
Even in javascript files when creating completion entry from symbols we need to perform identifier check Fixes #11217
Don't show globals (e.g. snippets) in JSX positions
Removed debugger statement
Another test case
For union or intersection types use constituent serialized type if its same for all of the constituent types Fixes #10809
Adding test for emit of metadata for string literal union
Error span moved from constructor to this keyword.
Merge branch 'master' into pvb/codeaction/api
Merge pull request #11228 from Microsoft/master_11192
Merge pull request #11118 from Microsoft/fix11081
Merge pull request #11389 from Microsoft/brace_matching
Add additional test for brace matching
Merge pull request #11388 from Microsoft/is_this_identifier
Merge pull request #11358 from Microsoft/update-browserify-for-gulp-typescript-3
Add helper functions for detecting 'this' identifiers
Generate browserify bundle in correct location
Change fragment initialization
Eliminate allocation of filtered completions
Split up binary operators
PR feedback
Added missing binary operator In.
Implement codefixes in tsserver
do not apply subtype reduction if type set contains enum literals fro… (#11368)
Handle the require call in javascript file for getSymbolAtLocation This helps in getting the alias symbol so that it can go to the definition of external module Fixes #9251
Bind the source file as external module only if not already done Return type of require call is from external module resolution only if it doesnt resolve to local module Fixes #10931
merge master and add isGlobalCompletion flags to CompletionInfo
Merge pull request #11338 from Microsoft/AddIsGlobalCompletionForSnippets
fix linter (#11366)
Merge branch 'master' into FixTripleSlashCompletions
Actually fixed comments
Fixed a comment
Responding To billti's comments
Changes from CR feedback
Add test when require is just a function in external module
Addresses #11348: Could the tsserver add process.noAsar = true; (#11351) (#11360)
Merge branch 'master' into pvb/codeaction/api
Merge branch 'pvb/codeaction/api' of https://github.com/Microsoft/TypeScript into pvb/codeaction/api
Removed isTemplateLiteralFragmentKind
Merge pull request #11357 from Microsoft/lint_equals
Update browserify task for gulp-typescript 3.0
Lint whitespace around "="
Fix tests changed by #11309
Merge pull request #11323 from Microsoft/use_for_of
Merge pull request #11325 from Microsoft/lsHost
remove redundant type assertion
Added literal kind properties for each node.
Merge pull request #11252 from Microsoft/mapOnTuples
Merge pull request #11291 from Microsoft/fix11177
Add isGlobalCompletion to CompletionInfo for snippet injection
Merge pull request #11212 from Microsoft/cleanup-TypeFlags
Just assign true inside an if where a boolean was just checked
getTypeFromObjectBindingPattern just returns Type again
Rename isObjectLiteralPatternWithComputedProperties
Merge branch 'master' into cleanup-TypeFlags
Minor style cleanup
Add more generic assignability cases
Merge pull request #11332 from Microsoft/vladima/fs-case-sensitivity
Merge branch 'master' into object-spread
Update object spread scenarios test
guard against cases when current file name is already in uppercase
Merge remote-tracking branch 'tf/bug-mac-osx-case-sensitive' into vladima/fs-case-sensitivity
Remove trailing comment
Removed comments and fixed indentation
Merge branch 'master' into FixAbsoluteTripleSlashCompletions
Rename labels in tests
do not reset current flow after processing finally block if it was unreachable (#11310)
Update tests and baselines
Merge pull request #11300 from Microsoft/vladima/validate-package-names
Fix capitalization of lsHost
Merge pull request #11309 from Microsoft/concat_libs
Add comments to tests
Use a `for-of` loop for a dense array instead of iterating over keys and then indexing
Add newlines between concatted files in lib.d.ts
Updated baselines
validate inferred typing names to be legal package names
Merge pull request #11289 from Microsoft/vladima/fix-goto-impl
Fix gulp-typescript to 2.14.1 untill gulpFile.ts is migrated. (#11290)
Fix crash with nested generators
add readDirectory to LSHost
Merge pull request #11288 from Microsoft/fix11236
Remove debug code.
linter
expose 'gotoImplementation' for VS
Merge branch 'master' into FixAbsoluteTripleSlashCompletions
Visit vardecl initializer in converted loop
Merge pull request #11286 from Microsoft/noEmitExtraVars
Merge branch 'master' into noEmitExtraVars
Do not emit extra var decls for merged enums/namespaces
Merge pull request #11284 from Microsoft/vladima/case-sensitivity-services
replace hardcodes 'useCaseSensitiveFileNames=false' in services with actual value, use specialized map lookup methods instead of generic 'getOrCreate*'
Merge branch 'master' into fix10193
Merge pull request #11246 from Microsoft/export_in_function
Merge pull request #10762 from Microsoft/useReturnedThisFromSuperCalls
Merge remote-tracking branch 'origin/master' into useReturnedThisFromSuperCalls
Address PR
Merge pull request #11165 from Microsoft/emitNode
Merge branch 'master' into emitNode
Merge branch 'master' into FixAbsoluteTripleSlashCompletions
Question added
New Test
Pass linting
Rename Tests
Fix linting issue
Merge pull request #11265 from Microsoft/improve-debugObjectHost-shim
Fix fragment handling
Rename Tests
Fix tests
Use eval-less access to this for debugObjectHost
Fixed fourslash test.
Merge pull request #11197 from Microsoft/release205-to-master
Accept new baselines
Add tests
Accept new baselines
Report error on both declaration and reference when CFA can't determine type
Accept new baselines
Control flow typing for variables with null or undefined initializer
Put TypeFlags.ObjectLiteral back
Merge branch 'master' into object-spread
Make isObjectLiteral required
Accepted baselines.
Merge pull request #11176 from renuo/fix10601
Remove TypeFlags.ObjectLiteral, not Instantiated
Change the error message
Merge pull request #11191 from Microsoft/JSCompletionCommitOnEnterFix
Fix misleading error TS2410 from issue #10601
Ensure that `checkGrammarModuleElementContext` reliably returns `true` when there is bad grammar.
Added overloads for 'map' on tuple types.
Accepted baselines.
Remove ConstantValue flag, comment cleanup.
Merge branch 'master' into controlFlowLetVar
factor and simplify rel path test
Factored out hidden path test
Merge branch 'master' into FixAbsoluteTripleSlashCompletions
Add tests and baselines
Only emit inferred type-alias if it is fully instantiated
isDeclaredProperty: Use optional-boolean idiom
Improve Array.prototype.slice typing
Added test.
Merge branch 'master' into object-spread
Turn 3 type flags into properties
revert versions
Consolidated 'super()' transformation logic into one function.
Merge pull request #11164 from zhengbli/updateLib09262016
Merge pull request #11198 from Microsoft/partiallyDiscriminatedUnions
Add object spread scenario tests
Spreads w/a single type parameter assignable to that type parameter
Add regression tests
Properly handle partially discriminated unions
Merge pull request #10932 from Microsoft/removeRequireNameColisionCheck
fixes: merge issue in test baselines, linter
Moved code around, fixed indent, reworded comment.
Removed pointlessish overloads.
Reuse the 'captureThisForNode' function.
Restore arrow function.
Accepted baselines.
update LKG
Collapse 'super()' capture/returns into a single return statement for generated 'super()' calls.
remove Comment
fix merge issues, restore tests
Merge branch 'master' into FixAbsoluteTripleSlashCompletions
new test
Merge branch 'master' of https://github.com/Microsoft/TypeScript into JSCompletionCommitOnEnterFix
Merge pull request #11188 from Microsoft/fixBuild-2016-09-27
Issue: Commit on enter isn't working correctly for JS completions in VS
update LKG, resolve merge issues
Updated LKG.
Remove usage of 'useCapturedThis'.
Merge remote-tracking branch 'origin/master' into useReturnedThisFromSuperCalls
Test object spread index signatures
Union multiple spread index signatures
More comments
Test spread type index signatures
Make index signatures work on spread types
Merge remote-tracking branch 'origin/master' into release205-to-master
merge with origin/master
Merge branch 'master' into emitNode
Moved constant value emit to ts transform.
Merge pull request #11161 from Microsoft/travis
update dom libs
Remove osx
Remove 0.10
Merge pull request #11023 from Microsoft/fix10002
Merge pull request #11128 from Microsoft/fix11038
Merge pull request #11126 from Microsoft/nonWideningLiterals
Refactored emit pipeline.
Merge pull request #11114 from Microsoft/restructureASTToParseReactAttributesAsObjectLiteral
Clean up SourceMapWriter and emitter.
Merge branch 'master' into FixAbsoluteTripleSlashCompletions
comments
Add tests
Accept new baselines
String and numeric literal initializes in ambient const declarations
Change new file to use CRLF
Rename Spread[Element]Expression
Rename isObjectLiteralElement to isobjectLiteralElementLike
Address PR: use ObjectLiteralElement as an interface name and ObjectLitearlElementLike as a type alias
Merge pull request #11142 from nchen63/fix-export
Extract emit-specific properties into EmitNode
Annotate directorySeparator
Object.assign uses spread types now
Address PR: Update comment and use JSDoc
Move interfaceSpread to correct location
Update baselines
Add spread tests
Update build files
Declaration emit spread types and downlevel spread
Parse, bind and check spread types and elements
add unit tests
Fix  error when compiling with declarations
Merge branch 'master' into fix11038
Merge pull request #11132 from Microsoft/fix11024
Merge pull request #11131 from Microsoft/fix11037
Merge pull request #11130 from Microsoft/fix11031
Fix missing visit of expression in for..of
Fix some issues with module ES6/target ES5
Accept new baselines
Add tests
Fix downlevel async hoisting
Change this capturing algorithm for converted loops
Accept new baselines
Lazily create fresh literal types
Accept new baselines
Emit widened literal type for const without type annotation
fix linting error
change error message
Merge remote-tracking branch 'tsupstream/master'
Convert to Doc Comment
Update baselines
Add tests
Address Github #11081 when we start paring "1" in type and keep going instead of terminate when see ")"
Accept new baselines
Only widen fresh literal types
Add spreadObjectLiteralAssignment. This is an AST node for spread in ObjectLiteralExpression.
Create base interface for ObjectLiteralExpression or future JSXAttributes to extend from. Create ObjectLiteralElementLike and make ObjectLiteralElement become union type of all possible type allow in PropertyDefinition
Track freshness of string and numeric literals
Merge pull request #11071 from Microsoft/gulpbuild
allow to replace content of script info with empty text (#11075)
Merge pull request #11070 from zhengbli/allowSynthetic
Update LKG
Merge branch 'release-2.0.5' into gulpbuild
Add gulp build tasks for cancellationToken and typingsInstaller
Merge pull request #11069 from Microsoft/FixNPMLocation
set allowSyntheticDefaultImports to true by default for jsconfig.json
Merge branch 'release-2.0.5' into FixNPMLocation
Add cancellationToken and typingsInstaller to LKG command
Add fallback for npm location if not running under node.exe
added unittest for watching @types (#11027)
Merge pull request #11049 from RyanCavanaugh/correctErrorBaseline
fix 9610 (#11042)
Accept new baselines
Update tests
Unify anyType and autoType when checking for identical declarations
Correctly remove stale .error.txt baselines
Use control flow analysis for let/var with no type annotation or initializer
Merge pull request #11001 from Microsoft/silentNever
Merge pull request #11029 from Microsoft/fix-write-file
Merge pull request #10961 from YuichiNukiyama/change_errormessage
remove extra files
add check if expected directory path is non-empty string
Merge pull request #11002 from RyanCavanaugh/watchForTypes
Add TODO
Fix #10002: add dom.iterable to supported lib values
Lint
Merge pull request #10960 from Microsoft/throttleTypingsInstallerRequestsFinal
An elegant weapon for a more civilized age
Merge pull request #11021 from Microsoft/throttle-in-runAsync
fix typo
move throttling to runAsync
Accept new baselines
Improve handling of ++ and -- in control flow analysis
)
PR updates
Use explicit coercion
Merge pull request #10980 from Dafrok/master
Merge remote-tracking branch 'origin/master' into useReturnedThisFromSuperCalls
Initialize instead of letting the value be potentially undefined.
Accepted baselines.
Immediately return the result of super calls when they are the first & last statement in a constructor.
- Reorganize nodeTypingsInstaller and typingsInstaller for testing purposes - Add throttle tests - Add full npm path
Take a few changes.
Cleanup
Refactor
Always return []
Remove unused
Fixup
Accept new baselines
Add regression test
Cleanup
Working version
do not adjust location being passed to the managed side (#10999)
Use silent never type in control flow loop analysis
Merge pull request #10995 from Microsoft/js_doc_comment_no_tags
Use TypeFlags.Never to check for 'never' type
Add back getSourceFile and mark it as deprecated
Handle msising tags for JsDoc nodes
Accepted baselines.
Always mark derived constructors as 'this'-capturing.
Accepted baselines.
Added test and comment.
Accepted baselines.
Merge remote-tracking branch 'origin/master' into useReturnedThisFromSuperCalls
Pass the jake test
defer settings format options on file until it is explicitly requested (#10971)
Output the help message line by line.
Merge pull request #10962 from johanssj/Fix10949
fix linting error
Fix Reflect has method signature(s) per issue #10949 initial report
change error message for assigning from object
change error message for assigning from object
Add throttle limit to typings installer requests
Merge pull request #10766 from Microsoft/fix10741_emitCommentOnlyOnce
Merge pull request #10953 from Microsoft/emitTypeAliasInDeclarationFile
(lshost): run second module resolution pass if first pass yielded non-ts file (#10959)
Address PR: Update comment
Merge branch 'master' into emitTypeAliasInDeclarationFile
Merge pull request #10958 from Microsoft/fixBuildBreak
PR feedback
Fix build break: difference result from treating things as literal type
Merge pull request #10943 from Microsoft/update-external-project
Merge branch 'master' into emitTypeAliasInDeclarationFile
Merge branch 'master' into pvb/codeaction/api
Address PR
Merge pull request #10760 from Microsoft/fix10731_commentDecoratedClass
Merge pull request #10767 from Microsoft/fix10739_commentEnumDeclaration
Update baselines
Serialize type alias when type alias symbol is not accessible
Add tests
correctly update external project if config file is added or removed
Merge pull request #10482 from Microsoft/go_to_implementation_pr
Merge pull request #10929 from RyanCavanaugh/fix10638
Merge pull request #10671 from Microsoft/new-jsdoc-parser
Merge remote-tracking branch 'origin/master' into go_to_implementation_pr
Merge branch 'master' into new-jsdoc-parser
Merge pull request #10921 from gmoothart/readonly-collections
indenting
Removed constructor typings which can't be used
Update baselines
Merge pull request #10917 from Salasar/Fix10843
Make declaration emit test name consistent
update findIndex for es5 typed arrays
revert fix for generated files
revert tests
Merge remote-tracking branch 'origin/master' into go_to_implementation_pr
Fixing formatting
Remove require name collision check for ES6 modules and later
Merge pull request #10920 from Microsoft/fixLiteralUnionInference
Merge remote-tracking branch 'origin/master' into go_to_implementation_pr
Merge pull request #10926 from Microsoft/fix10862
Update LKG
Merge branch 'release-2.0' into release-2.0.5
Update LKG
Merge pull request #10928 from Microsoft/addTestFix10625
Merge pull request #10930 from RyanCavanaugh/release-2.0
Add comment explaining a magic constant in parser
Allow type and NS references to UMD globals from modules
Allow type and NS references to UMD globals from modules
Add tests and baselines
Address CR feedback
Merge pull request #10885 from Microsoft/navtosinglefile
Merge pull request #10510 from Microsoft/import_directory
More PR feedback
Update LKG
Merge branch 'release-2.0_fix10625' into release-2.0
Merge branch 'release-2.0' into release-2.0_fix10625
add release-2.0
Fix super in down-level async method
Update LKG
Address PR
Update version
Merge pull request #10925 from Microsoft/fixMergeIssue
Fix test issues due to an out of order merge
Merge pull request #10448 from Microsoft/improvePromiseType
Add tests and update baselines
Emit declaration file which inferred type alias with its value
Merge pull request #10877 from RyanCavanaugh/disallowBadCommas
Add regression test
Accept new baselines
Add readonly typings for Set and Map
Match number and string literal types to number and string in inference
add test for issue 10843
Merge pull request #10900 from Microsoft/quick_info_tests
Fix issue 10843
Lint
Fix merge conflict
Merge pull request #10899 from Microsoft/two-small-gulp-fixes
Merge pull request #9897 from Microsoft/umd_export
Remove duplicate test
Rename function and use `directorySeparator` variables
Merge branch 'sergey-shandar-sergey-shandar-findindex'
Update other defintions of findIndex
Merge branch 'sergey-shandar-findindex' of https://github.com/sergey-shandar/TypeScript into sergey-shandar-sergey-shandar-findindex
Merge branch 'erictsangx-fixUnionTypeCallSignature'
Merge branch 'fixUnionTypeCallSignature' of https://github.com/erictsangx/TypeScript into erictsangx-fixUnionTypeCallSignature
Merge branch 'YuichiNukiyama-change_unexposed_error_message'
Use diffrent error message for namespaces unexported members
Merge branch 'change_unexposed_error_message' of https://github.com/YuichiNukiyama/TypeScript into YuichiNukiyama-change_unexposed_error_message
Merge branch 'master' of https://github.com/Microsoft/TypeScript
Merge branch 'gnalck-master'
Merge branch 'master' of https://github.com/gnalck/TypeScript into gnalck-master
Merge pull request #10902 from Microsoft/FixIOCapture
More PR feedback
Merge pull request #10906 from Microsoft/coc
move to contribute header
Merge pull request #10881 from Microsoft/typeAssertionInitializers
Merge branch 'master' into disallowBadCommas
Create folders for sys.writeFile if folder doesn't exist (#10848)
Fix build error caused by merge
Support compile on save for inferred projects (#10847)
Removed Code of Conduct from contributing, since readme is more obvious
Add Code of Conduct
merge with origin/release-2.0.5
Resolve diagnostics conflict
Merge pull request #10890 from Microsoft/fix10889
Merge pull request #9941 from Microsoft/configuration-inheritance
Merge pull request #10333 from jwbay/better-type-as-value-error
Merge pull request #10550 from benmosher/strict-null-check-proxy
Merge pull request #10754 from Microsoft/source_file
Merge pull request #10582 from oijazsh/TS2339
Merge branch 'release-2.0.5' of https://github.com/Microsoft/TypeScript into release-2.0.5
Update baselines after cherry-pick to 2.0.5
Remove unnecessary parentheses
Update baselines
Computed enum assignability is semi-structural
Update baselines for updated enum assignability
Enum assignability:loosen numbers+tighten computed
Update baselines
Fix lint
More tests of enum assignability
Address PR comments
Fix both new enum assignability predicates
Test that enum literal is assignable to an enum in a union
Enum literal is assignable to enum, even inside union
Test that number is assignable to enum in a union
Number is assignable to enum, even inside union
Update baselines after cherry-pick to 2.0
Remove unnecessary parentheses
Merge pull request #10903 from Microsoft/safe_import_completions_2.0.5
Update baselines
Computed enum assignability is semi-structural
Update baselines for updated enum assignability
Enum assignability:loosen numbers+tighten computed
Update baselines
Fix lint
More tests of enum assignability
Address PR comments
Fix both new enum assignability predicates
Test that enum literal is assignable to an enum in a union
Enum literal is assignable to enum, even inside union
Test that number is assignable to enum in a union
Number is assignable to enum, even inside union
Added comments for __generator, reduced overall size of helper
Merge pull request #10842 from jeffreymorlan/fix-10618
Fix build tasks for iocapture
Add JSX to SEF exprs
Baseline update
Flip check, add SEF cases
Simplify quick-info tests
Wrap IO for import completions in try catch
Merge branch 'master' into disallowBadCommas
Add stackTraceLimit; update harness/tsconfig.json
Merge pull request #10888 from Microsoft/safe_import_completions
Merge pull request #10883 from Microsoft/fix10876
PR feedback and clean up.
Merge pull request #10784 from Microsoft/enum-number-assignability-in-unions
Update LKG
Update baseline
Add regression test
Quick bail out when narrowing type any by equality
Remove unnecessary parentheses
Merge branch 'master' into import_directory
Merge branch 'master' into umd_export
Merge branch 'master' into bug-mac-osx-case-sensitive
Fix captured block scope variables in downlevel async.
Added test for scenario.
Also wrap getEffectiveTypeRoots in import completion code
Consume exceptions when checking for import completions
Merge branch 'master' into typeAssertionInitializers
Merge pull request #10870 from Microsoft/fixNarrowingWithAny
Get rid of BOM
Implement NavigateTo for single files, instead of the project.
Merge pull request #10875 from Microsoft/fix10857
Merge pull request #10874 from Microsoft/fix10855
Fix missing final label.
Add test
Accept new baselines
No widening of inferred type when initializer has a type assertion
Merge pull request #10871 from Microsoft/fix10800
Disallow left comma operator operands which don't have side effects
Update baselines
Computed enum assignability is semi-structural
Fix missing asteriskToken for target=es6/module=amd.
Update baselines for updated enum assignability
Enum assignability:loosen numbers+tighten computed
Merge branch 'master' into fixNarrowingWithAny
Update failing test baseline
Support export default for target=ES5/module=ES6.
Add regression test
Quick bail out when narrowing type any by equality
Fix issue with helper emit.
Update LKG
Add regression test
Preserve type parameter types in narrowing
Merge pull request #10839 from Microsoft/fixNarrowingWithTypeParameter
Merge pull request #10834 from krizalys/fix-10833
PR feedback
Update baselines
Merge branch 'master' into enum-number-assignability-in-unions
Fix lint
More tests of enum assignability
Address PR comments
Merge pull request #10507 from Microsoft/walk_symbol
Merge branch 'master' into walk_symbol
Update tests
Merge pull request #10676 from Microsoft/literalTypesAlways
Add tests
Handle const binding elements with initializers correctly
Accept new baselines
Merge branch 'master' into literalTypesAlways
Fix ECMA-402 declarations (issue #10618)
Add regression test
Preserve type parameter types in narrowing
Added a STRATEGY placeholder for the --moduleResolution option
Prevent duplicate entries from type references
Disallow comma operator when LHS is pure
Merge pull request #10818 from falsandtru/lib.d.ts/map
Merge pull request #10813 from microsoftsam/master
Code cleanup and a few edge cases
minor changes from PR feedback
Merge pull request #10831 from Microsoft/quick_info_is_parameters
PR feedback
Simplify parameters of `quickInfoIs`: `expectedtext` must be present and `expectedDocumentation` must be a string or ommitted, never null.
lint: remove trailing whitespace in completions.ts
method stub throwing an error for SessionClient
Merge pull request #10807 from Microsoft/release-2.0_re_export_shorthand
Adding method stub for the LanguageServiceShimProxy implementation
Merge pull request #10787 from Microsoft/document_registry
Merge branch 'master' into walk_symbol
Document `endOfChain`
Fix {Map,WeakMap}.prototype.set method signatures (#10694)
Update LKG
Fix typescript and tslint versions
Accept new baselines
Use 'true' and 'false' types when contextual type is 'boolean'
Accept new baselines
Use union type when binding element has initializer
Add regression tests
Assume outer variables are always initialized in control flow analysis
Merge pull request #10577 from Microsoft/fixBooleanLiteralTypes
Merge pull request #10815 from Microsoft/controlFlowOuterVariable
Merge pull request #10816 from RyanCavanaugh/fix_jake_ba
Fix line endings
Don't try to unlink folders
Add regression tests
Assume outer variables are always initialized in control flow analysis
Surfacing function in services.ts
Surfacing method to get Completion Symbol instead of details for better extensibility
Merge branch 'master' into document_registry
Merge branch 'master' into react_whitespace
Merge pull request #10810 from Microsoft/handle_omitted_expression
Handle `OmittedExpression` nodes in binding patterns
A shorthand ambient module should be considered as possibly exporting a value
Comment code and remember to add a space before the last part
Move code to a new module documentRegistry.ts
Merge branch 'master' into react_whitespace
Add test with backslash
Merge pull request #10789 from Microsoft/re_export_shorthand
Added detection for case sensitive file systems
Merge pull request #10798 from Microsoft/fix10778
Fix deferred export of array binding pattern
Merge pull request #10796 from Microsoft/fixPreProcess
Fix classifier as well.
Fix both new enum assignability predicates
Make preProcessFile public again
Fix fourslash test
Accept baselines after merge
Merge branch 'master' into literalTypesAlways
Fix tests
Merge pull request #10788 from Microsoft/useBaselinesForQuickInfoTests
Test that enum literal is assignable to an enum in a union
Enum literal is assignable to enum, even inside union
A shorthand ambient module should be considered as possibly exporting a value.
Use shorthand properties
Fix duplicate baselines
Merge branch 'useBaselinesForQuickInfoTests' into literalTypesAlways
Avoid circular references in core.ts (#10783)
Merge pull request #10764 from Microsoft/exclude-source-map-support-FromSourceMaps
Use baselines for quick info tests to ease updates
Fix bug: return `undefined`, not `false`
Test that number is assignable to enum in a union
Number is assignable to enum, even inside union
Revert "Remove failing fourslash tests (may need to be restored and fixed)"
Revert "Remove failing fourslash tests (may need to be restored and fixed)"
For JSX text, construct a single literal node `"foo bar"` instead of `"foo" + " " + "bar"`.
Merge pull request #10753 from Microsoft/services_modules_2
Merge pull request #10747 from Microsoft/react_emit_entities_2
Merge pull request #10781 from Microsoft/update-preferConstRule
Yep, another unused function in preferConstRule
Remove another unused function in preferConstRule
Update preferConstRule to use getCombined*X*Flags
Use undefined, not null, to satisfy linter
Also decode entities when emitting attributes. Also, lexer should not process string escapes in jsx attributes.
When emitting react code, replace HTML numeric entities with their encoded characters
Only emit comment once for export enum declaration
Added missing semicolons.
Accepted baselines.
Only emit comment only once in module declaration with identifier path name
Force source-map-support to not have source maps
Merge pull request #10749 from fabiancook/master
Merge branch 'master' into useReturnedThisFromSuperCalls
Correct strings based on linting rules
Move allocators.ts to services.ts, meaning.ts to utilities.ts, and transpile functions to a new file transpile.ts
Allow -Infinity as an enum property name
Add tests and baselines
Correct emit comment for decorated class declaration
Fix versions of TS and tslint
Mark constructors as this-capturing if they are defined in a derived class.
Update Jakefile
Factor out getRenameInfo
Merge pull request #10756 from Microsoft/changeTravisBranch
Merge pull request #10674 from Microsoft/glob_outdir_bug
Merge branch 'master' into services_modules_2
Merge branch 'master' into literalTypesAlways
Merge pull request #10757 from Microsoft/Fix10755
Fix #10755: remove uses of `package` as an identifier name
Change travis to target release-2.0 instead of transforms
Expose getCombinedNodeFlags and getCombinedModifierFlags
Export type ModifiersArray
Merge branch 'master' into source_file
Fix the TS version to 2.1.0-dev.20160906 to avoid build break in tslint untill a new package is released
Simplify tracking of top-level type inferences
Optimize 'getSourceFile' to only get the source file once.
Break many functions out of services.ts and into their own modules.
Allow Infinity and NaN to be used as an Enum property identifier
Cleaning up InferenceContext
Accept new baselines
Fixing the fix
Fix merge issue
Merge branch 'master' into literalTypesAlways
Using existing test for outDir and removing new ones
Remove failing fourslash tests (may need to be restored and fixed)
Merge remote-tracking branch 'origin/master' into glob_outdir_bug
Updating method name that changed in master
Accept new baselines
Less widening of literal types in type inference
Merge remote-tracking branch 'origin/master' into go_to_implementation_pr
Merge branch 'master' of https://github.com/microsoft/TypeScript
Handle multiple return statements that implement interface
PR feedback
Add a rule to toggle space after opening brace and before closing brace (#10447)
Adjust overloads to fix #10524.
Merge remote-tracking branch 'origin/master' into go_to_implementation_pr
Merge pull request #9353 from Microsoft/import_completions_pr
Port #10728: Fix #6500
Merge pull request #10027 from maiermic/type-guards-in-Array.prototype.filter
Merge remote-tracking branch 'origin/master' into import_completions_pr
Pass the right host to getEffectiveTyperoots
Merge branch 'master' into transforms
Merge pull request #10679 from Microsoft/mergeMaster_09/01
Fix #6500 (#10728)
Accepted baselines.
Added test for '_this'.
Merge branch 'master' into mergeMaster_09/01
Merge remote-tracking branch 'origin/master' into import_completions_pr
Merge pull request #10726 from Microsoft/port10703
Add repro from #10697
Introduce resolvingSignature to ensure caching works for anySignature
Merge pull request #10689 from Microsoft/node_modules_at_types
Merge pull request #10684 from Microsoft/multi_map_remove
Merge pull request #10703 from Microsoft/fixSignatureCache
Add repro from #10697
Introduce resolvingSignature to ensure caching works for anySignature
Accepted baselines.
Don't emit a return statement at the end in most useful cases.
Accepted baselines.
Added a test for branched returns at the end of a constructor.
Accepted baselines.
Always perform `this` captures after default & rest parameters.
Accepted baselines.
Fixed issue where last function context & parent node wasn't being preserved.
Consolidate '_this' declaration and assignments for first statements in constructors.
Merge pull request #10692 from Microsoft/import_completions_pr
Adding comment and removing unnecessary object creation
Merge pull request #10673 from Microsoft/tsserverVS-Types2.0
Adding typingsInstaller unit tests
Merge pull request #10691 from Microsoft/release-2.0_node_modules_parent
remove unused code
Merge pull request #10686 from Microsoft/go_to_definition_tests
Search for `node_modules` in parent directories when getting type roots.
Default type roots when host.directoryExists is not implemented should be node_modules/@types, not just node_modules
Merge pull request #10670 from Microsoft/node_modules_parent
Add multiple overloads for `verify.goToDefinition`.
Merge pull request #10687 from Microsoft/services_types
Accepted baselines.
Ensure prologue directives occur first.
Accepted baselines.
Factor public type definitions out of services.ts into services/types.ts
Removing old comment
Accept new baselines
Perform return type widening checks after union type is formed
Keep literal return types only when contextually typed by type containing literal types
Simplify go-to-definition tests
Readonly properties in classes are considered immutable locations
Restrict widening of literal types in type argument inference
Use a state enum to parse top-level jsdoc comments
Merge branch 'master' into new-jsdoc-parser
Use undefined instead of empty array, and check for existence of "node_modules/@types" instead of just for "node_modules".
Add `multiMapRemove` helper
Search up for all node_modules directories available
Merge pull request #10434 from Microsoft/multi_map_add
Merge branch 'master' into multi_map_add
Always tack on a return statement for '_this' in derived classes.
Accepted baselines for sourcemap test.
Accepted baselines for all tests apart from one with source map changes.
Transform other instances of 'this' to '_this' when in the constructor of a derived class.
Fix linting error
Update baselines
Use getJsDocFromText to get trailing comments
Accepted baselines.
Undo scanner/emitter changes
Rebaseline tests to old emitter
Fixing unit tests, lint errors & addressing CR feedback
Emit '_this' declaration for derived classes; initialize it when calling 'super(...)'.
fix recursive directory creation
Fix error from merging
Merge branch 'master' into mergeMaster_09/01
Port 10404 : optimize emit default constructor for subclass (#10598)
Merge remote-tracking branch 'origin/release-2.0.5' into tsserverVS-WIP
Avoid returning type symbols for js configured projects (#10654)
Remove failing fourslash tests (may need to be restored and fixed)
Fix fourslash tests
Fix lint errors
Update version
Accept new baselines (huge!)
Update tests
Always keep literal types and widen when inferred as types for mutable locations
Fix existing TypingsInstaller tests
Add tests for export incorrectly emit twice for decorated class declaration (#8343) (#10651)
Add tests and Update baselines (#10616)
Merge pull request #10540 from Microsoft/constructor_references
Respond to PR comments
Merge pull request #10593 from Microsoft/goto_definition_super
Do not exclude outDir if exclude is given
Merge branch 'goto_definition_super', remote-tracking branch 'origin' into constructor_references
Merge pull request #10349 from Microsoft/remove_item_from_list
Rename function
Respond to PR comments
switch to using npm ls -json instead npm install -json
Fix remaining call to use `unorderedRemoveItem`
Merge pull request #10590 from Microsoft/navbar_fn_in_var
Update test baselines: We no longer search in node_modules/@types if it does not exist.
Merge remote-tracking branch 'origin/master' into import_completions_pr
Use enum for parser state instead of 2 booleans
Merge pull request #10661 from Salasar/Fix10618
Update/add baselines for jsdoc/emitter changes
Add more jsdoc tests
Search for `node_modules` in parent directories when getting type roots.
Replace services' jsdoc parser with parsers'
Remember to check for existence of `target.parent`
Always use literal types for literals
Accept new baselines
Union type instead of best common supertype for multiple return statements
Merge pull request #10607 from Microsoft/remove_useless_inserts
fix issue
update runInstall
Cleaning up the completion code and tests
Recombining import completions and regular completion APIs
Merge branch 'master' into pvb/codeaction/api
Fix RWC Runner to report both .types and .symbols errors (#10513)
Fix compile on save issues (#10615)
Fix 10408 : Better error message for set/get with noImplicitAny error (#10597)
onSourceFileChanged return immediately when info is undefined
- invalidate typings fix - update gc timer
fix findArgument
Merge branch 'tsserverVS-WIP' into tsserverVS-Types2.0
Install packages separately
Split tests and fix issues with missing referenced files (#10599)
Improve tests
Remove useless inserts that used to be required to trigger checks
Climb past multiple property accesses if necessary
Support decorators and templates
add tsserver specific resolution pass that will load typings from cache locations if auto discovery is enabled
- Command line should use spaces between types instead of comma - if entry.typings is empty use entry.typings for default typings to install
Merge remote-tracking branch 'origin/master' into go_to_implementation_pr
Also check inheritance for union and intersection types
Remove handling for multiple inheritance for config files
Move invalidate typings cache to UpdateGraphWorker
Merge branch 'tsserverVS-WIP' into tsserverVS-Types2.0
Refine the search set instead of filtering to implementations
Merge branch 'master' into configuration-inheritance
use ScriptKind instead of file extension
invalidate cached typings on add or remove file
merge with origin/release-2.0
Make goto-definition go to a signature declaration if possible
Merge branch 'master' into remove_item_from_list
Treat variable declaration as top-level if it has an important child.
Merge pull request #10506 from Microsoft/ctorTag
Add additional tests to unionPropertyExistence
Do not elaborate on primitive type unions
Add test for invalid property access in unions
Show elaboration for property not existing in union
Accept new baselines
Use 'true' and 'false' types when contextual type is 'boolean'
Accept new baselines
Use union type when binding element has initializer
Change error message which warn unexposed namespace member
Reuse effective type roots code in language service
Merge pull request #10542 from Microsoft/far_display_parts
Check for this symbol before getting display parts
fix typo of missing node.kind (#10569)
Merge remote-tracking branch 'origin/master' into far_display_parts
Merge branch 'tsserverVS-WIP' into tsserverVS-Types2.0
Changes from CR feedback
[Transforms] Merge master 08/09 (#10263)
Fix build break caused by merge from master
Fixing errors and adding a fourslash test
store project errors on project so they can be reported later
Merge branch 'pvb/codeaction/api' of https://github.com/Microsoft/TypeScript into pvb/codeaction/api
Merge branch 'master' into pvb/codeaction/api
PR Feedback
Merge pull request #10568 from Microsoft/parse-untyped-object-type-members-comma-separated
Remove unused parameter
Don't use constructor symbol for search -- use class symbol and filter out only 'new C()' uses.
Update other tests and baselines
Parse untyped object type members separated by ','
Reuse code for tryGetClassExtendingIdentifier
Get the type of a constructor as the type of the class
Allow to find all references for constructors
Merge pull request #10354 from RyanCavanaugh/fix9771
First in UMD global wins
Merge pull request #10543 from Microsoft/port10212
More PR feedback
Allow undefined from ProxyHandler<T>.getOwnPropertyDescriptor
Swap out TSD for Types 2.0
Update LKG 08/25
Merge branch 'master' into release-2.0
Merge pull request #10538 from Microsoft/find-declarations-of-js-module-export
avoid creating syntax nodes for jsdoc comment tags (#10526)
Making language service host changes optional
[Release 2.0] fix10179: 2.0 emits optional class properties defined in constructors, which breaks compatibility  (#10212)
PR feedback
Get rid of absolute paths
[CoS] return results from all projects if not specified project file name (#10527)
Correct default compileOnSave value for different projects (#10528)
Clean up maxNodeModuleJsDepth test
Update LKG
strip comments when re-emitting tsconfig.json (#10529)
Fix crash when checking module exports for export=
strip comments when re-emitting tsconfig.json (#10529)
Reduce nesting
Accept new baselines per refactor
Update error message + refactor
Adding display parts to definition items to support FindAllReferences
Merge remote-tracking branch 'microsoft/master' into better-type-as-value-error
Merge branch 'tsserverVS-WIP' of https://github.com/Microsoft/TypeScript into tsserverVS-WIP
added more tests for cases when typingOptions are provided by external projects, set typing options after root files are added
Fix issue when building dependency graph for files with circular refs (#10514)
Rename function and clean up code
Using for..of instead of forEach
remove merge artefacts
Add APIs for enabling CompileOnSave on tsserver (#9837)
add typingOptions to the protocol.ExternalProject
An import ending in "/" is always an import of a directory.
do not send events via stdout if eventPort is specified
Always output something at the end of walkSymbol
Accepted baselines.
Unify untyped call checking between decorators and template tags.
Accepted baselines.
Added test for decorators.
PR Feedback
types 2.0 WIP
Merge pull request #10446 from YuichiNukiyama/fix10351
change error message
Accepted baselines.
Added test for untyped tag.
Accepted baselines.
Added tests.
Update LKG on 08/22
Merge branch 'master' into release-2.0
Merge master 08/22 (#10487)
Merge pull request #10486 from Microsoft/allowSyntheticDefaultImports-resolves-to-module
Merge pull request #9746 from Microsoft/instantiate-this-for-contextually-typed-type-parameters
Fix 10472: Invalid emitted code for await expression (#10483)
Rename getContextuallyTypedThisParameter to getContextualThisParameter
allowSyntheticDefaultImports resolves to modules instead of variables
Merge pull request #10418 from zhengbli/tolerateConfigError
Merge pull request #10407 from zhengbli/fixJsDocSyntacticClassification
Merge pull request #10441 from zhengbli/routineUpdate819
Merge pull request #10466 from Microsoft/tupleTypeReferences
normalize slashes in names of external projects
Update parser comment with es7 grammar (#10459)
Contextually type this in getDeclFromSig, not checkThisExpr
Go to Implementation
Merge pull request #10399 from Microsoft/jsdoc-never-undefined-null-types
Merge pull request #10480 from Microsoft/typings_extension_is_optional
added type installer test for inferred project
Allow "typings" in a package.json to be missing its extension (but also allow it to have an extension)
switch to using dedicated functions to create\throw errors
Fix class/interface merging issue + lint error
Merge pull request #10478 from Microsoft/fixtypesRWC
Add jsdoc nullable union test case to fourslash
Properly guard for undefined in getTypeReferenceArity
Add .types extension
Remove last external use of `unorderedRemoveFirstItemWhere`
Use unordered removal where possible
Accept new baselines
Add comments + minor changes
Implement tuple types as type references to synthesized generic types
Use TS parser to tolerate more errors in tsconfig.json
Add test for configFile error tolerance
Tolerate certain errors in tsconfig.json
Simplify implementation
Add test for jsdoc syntactic classification for function declaration
Merge pull request #10458 from zhengbli/betterTestForModuleExportDOc
routine update of dom libs
fix some errors
Add more test for 10426
Update error code number
Merge remote-tracking branch 'microsoft/master' into better-type-as-value-error
remove extra code
follow advise
Improves Promise type definition. Fixes #4903
fix linting error
Add error message
Update LKG on 08/19 (#10445)
Merge master to release-2.0 on 08/19 (#10444)
merge with origin/master
Fixing regex for triple slash references
Merge pull request #10426 from zhengbli/9518
Removing hasProperty check
Pass in baselineOpts into types baselines so that RWC baselines can be written to internal folder (#10443)
Merge remote-tracking branch 'origin/master' into import_completions_pr
fix broken tests
Responding to PR feedback
CR feedback
move module resolution to core.ts
Refactor baseliners out of compiler runner (#10440)
Merge pull request #10439 from RyanCavanaugh/fixJakeBaselineAccept
Remove needless call to basename
Remove extraneous arguments from harness's runBaseline (#10419)
Check return code paths on getters (#10102)
merge with origin/master
fix linter issues
Update shim version to be 2.1 (#10424)
Add `multiMapAdd` helper
Merge pull request #9646 from Microsoft/no_ts_extension
Merge pull request #9890 from Microsoft/cast_of_await
Merge branch 'master' into cast_of_await
Fix tests
Merge branch 'master' into no_ts_extension
propagate debug/inspect flags to typingsInstaller process
remove compression
Treat special property access symbol differently ... when retriving documentation
Merge pull request #8241 from Microsoft/noImplicitAnyDestructuring
Merge branch 'master' into release-2.0
add missing methods
Update LKG
Merge remote-tracking branch 'origin/master' into tsserver-typings
Update version to 2.0.2
[Release-2.0] Merge master into Release-2.0 (#10347)
Fix RWC Runner (#10420)
use localhost:<eventPort> to send notifications when typings are updated
Fix comment
Move supportedTypescriptExtensionsWithDtsFirst next to supportedTypeScriptExtensions and rename
Merge pull request #10404 from Microsoft/addCommentForEmptyCtorEmit
Merge pull request #10403 from Microsoft/completionsForNullableObjects
Merge pull request #10415 from Microsoft/baseline_local_path
Merge pull request #10413 from Microsoft/export_equals_property_test
Output test baselines to tests/baselines/local instead of root
Add more tests for `export = foo.bar`.
Return non-JsDocComment children ... to make syntactic classification work
Use the non-nullable type of the contextual type for object completions.
Added test.
make (no) space after type assertion user configurable
Restored comments to explain spreading 'arguments' into calls to 'super'.
introduce branded type for TypingsArray
added missing files
Update baselines in jsDocParsing unit tests
Use for..of instead
JSDoc supports null, undefined and never types
Merge branch 'master' into fix10193
Fix 10289: correctly generate tsconfig.json with --lib (#10355)
lint more files
merge with origin/master
Merge branch 'gcnew-noErrorTruncation'
Merge branch 'noErrorTruncation' of https://github.com/gcnew/TypeScript into gcnew-noErrorTruncation
Assign and instantiate contextual this type if not present
Merge pull request #10396 from Microsoft/fixNestedLoopTypeGuards
Merge pull request #10391 from Microsoft/SetIsNewIdentifierLocationToTrueForJS
Merge pull request #10342 from Microsoft/ambient_shorthand_is_explicit_any
Add regression test
Update due to CR suggestion
Property handle imcomplete control flow types in nested loops
shutdown typing installer if parent process is exited
Merge pull request #10213 from RyanCavanaugh/baselinePerf
Merge branch 'master' into instantiate-this-for-contextually-typed-type-parameters
Merge pull request #10123 from Microsoft/allow-js-multiple-declaration-of-constructor-properties
Fix comment
Correctly merge bindThisPropertyAssignment
Merge pull request #10387 from Microsoft/comment_process_type_reference_directives
Merge pull request #9995 from Microsoft/jsdoc-string-literal-types
Merge branch 'master' into allow-js-multiple-declaration-of-constructor-properties
Merge pull request #10374 from Microsoft/readonly-array-type-argument-assignability
Explain why we lower-case type reference directives
Merge pull request #10376 from Microsoft/remove_file_exists_assertion
Merge pull request #10340 from Microsoft/lower_case_types
Merge pull request #10359 from Microsoft/optimizeMoreMaps
Merge pull request #10375 from Microsoft/fix_blog_link
Merge branch 'master' into noImplicitAnyDestructuring
Merge pull request #10357 from Microsoft/implicitConstParameters
Merge pull request #10009 from Microsoft/null-undefined-allowed-as-index-expressions
Merge pull request #10189 from chancancode/constructor-splat-arguments
Removing resolvePath from language service host
Use rooted paths in the fourslash virtual file system
record projectName instead of projectRootPath
Merge pull request #10377 from RyanCavanaugh/fix10370
[WIP] file watching
Update error message for conflicting type definitions
Set isNewIdentifierLocation to true for JavaScript files
Remove old assertion about when we're allowed to use fileExists
Fix link to blog
Improve ReadonlyArray<T>.concat to match Array<T>
Revert some formatting changes.
Clean up/move some Map helper functions.
Adding more comments
Fix 10625: JSX Not validating when index signature is present  (#10352)
Migrate additional MapLikes to Maps.
Merge pull request #10358 from Microsoft/classPropertyInference
Merge pull request #10062 from YuichiNukiyama/fix9601
add logging to typings installer, read npm bin path to start globally installed binaries
Merge branch 'master' into classPropertyInference
Add tests
Parameters with no assignments implicitly considered const
Merge remote-tracking branch 'origin/master' into import_completions_pr
Add ES2015 Date constructor signature that accepts another Date (#10353)
Migrated more MapLikes to Maps
Resolve aliases to preserve 'Cannot find name' errors for namespace imports
Use removal helpers in more places
Merge pull request #10345 from Microsoft/meaning
Use `removeItem` instead of `copyListRemovingItem`
move global cache location to node typings installer
Rename to Accessor
Use an enum in checkClassForDuplicateDeclarations to aid readability
Merge pull request #10327 from Microsoft/simplePerformanceAPI
Aligned mark names with values used by ts-perf.
Fix the style fix (#10344)
Parallel linting (#10313)
Rename 'find' functions
fix test
Treat ambient shorthand declarations as explicit uses of the `any` type
Merge pull request #10341 from Microsoft/runtests_browser_response_code
Use proper response codes in web tests
Use lowercase names for type reference directives
Merge branch 'master' into no_ts_extension
Preserve 'Cannot find namespace' errors
adjust typing directory
Merge pull request #10334 from yortus/narrow-from-any
Accept baselines
More helpful error messaging when a type is used as a value
[WIP] home dir
fix linter
update tests
merge with origin/master
fix build issues on linux
accept new baselines
add tests
accept new baselines
Update instanceof conformance tests
narrow from 'any' in most situations
[WIP] initial version of tests
Merge pull request #10323 from Microsoft/fixLint
Use 'MapLike' instead of 'Map' in 'preferConstRule.ts'.
ensure tsd cache directory exists
Merge pull request #10270 from Microsoft/optimizeMaps
[WIP] send\receive install typing requests
Simplifies performance API
remove unused dependencies to reduce the size of output file
[WIP] pass ITypingsInstaller to ProjectService
Collect timing information for commands running on travis (#10308)
Lint
Merge pull request #10211 from RyanCavanaugh/fourslashTestPerf
Merge branch 'master' into optimizeMaps
Merge pull request #10296 from Microsoft/fixDiscriminantWithPrimtive
add runTsd method
[WIP] typings discovery in tsserver
Merge pull request #10303 from Microsoft/not_needed_types
Allow an @types direcotry to have a package.json which specifies `"typings": null` to disclude it from automatically included typings.
Faster path for creating union types from filterType
Address CR comments + more optimizations
Optimize core filter function to only allocate when necessary
Add regression tests
Fix typo
Filter out nullable and primitive types in isDiscriminantProperty
Optimize getTypeWithFacts
Add shorthand types declaration for travis-fold (#10293)
fix linting
Update baseline
Merge branch 'master' into fix10193
Optimize filterType to only call getUnionType if necessary
Merge pull request #10240 from Microsoft/optimizeTypeListIds
Address PR: add comment
Merge pull request #10013 from Microsoft/resolve_entity_name
Add folds to travis log (#10269)
Merge pull request #10234 from Microsoft/correct-this-in-tuple-type-parameter-constraints
Merge branch 'master' into resolve_entity_name
Have travis take shallow clones of the repo (#10275)
Fix processDiagnosticMessages script
Update API sample
Optimize performance of maps
Merge pull request #10260 from zhengbli/fixSession
Fix single-quote lint
avoid using the global name
Merge pull request #10243 from joshaber/iterable-readonlyarray
Allow OSX to fail while we investigate (#10255)
Merge pull request #10227 from Microsoft/for_of
Merge pull request #10235 from Microsoft/fixDiscriminantWithNullableType
Make ReadonlyArray iterable.
Optimize format of type list id strings used in maps
[Release 2.0] fix10076 : Destructing with "this" (#10209)
Merge branch 'master' into fix10193
Add tests and baselines
Issues an error when there are more than one export default
Always use thisType when generating tuple id
Delay tuple type constraint resolution
Add regression test
Ignore null, undefined, void when checking for discriminant property
Add explanatory comment to resolveTupleTypeMembers
Use correct this in tuple type parameter constraints
Fix loop over array to use for-of instead of for-in
Merge pull request #10216 from Microsoft/structurallyIdenticalInstanceof
Accept new baselines
Add test
Introduce isTypeInstanceOf function
Improve instanceof for structurally identical types
Remove use strict
use transpileModule
Fix 10076: Fix Tuple Destructing with "this" (#10208)
[Release 2.0] fix10179: 2.0 emits optional class properties defined in constructors, which breaks compatibility  (#10212)
Fix non-strict-compliant test
Make baselines faster by not writing out unneeded files
Merge branch 'master' of https://github.com/microsoft/TypeScript
Duh
Speed up fourslash tests
Reduce worker count to 3 (#10210)
Add tests and baselines
Call checkExpression eventhough there is no appropriate type from destructuring of array
Merge pull request #10194 from Microsoft/fixInstanceofNarrowing
Merge pull request #10188 from Microsoft/discriminantPropertyCheck
Moving some utility functions around
Accept new baselines
Add more tests
Update comment
Merge pull request #10103 from Microsoft/narrowing-a-type-parameter-intersects-concrete-types
Merge pull request #9996 from joshaber/patch-1
Improve naming and documentation from PR
Merge branch 'master' into narrowing-a-type-parameter-intersects-concrete-types
Add regression test
Accept new baselines
Fix instanceof operator narrowing issues
Emit more efficient/concise "empty" ES6 ctor
Add tests
Stricter check for discriminant properties in type guards
[Transforms] Merge master on 08/05 (#10182)
Cleaning up test cases and adding a few more
Fixing the filtering of nested module completions
Clean up
SuperFix fourslash tests
Fourslash support
Api Changes and simple superfixes
Surface noErrorTruncation option
Fix lssl task (#9967)
Port PR#9867 to Release-2.0 (#10147)
Try using runtests-parallel for CI (#9970)
Fix more lint
Port PR #10016 to Master (#10100)
Fix lint
Merge pull request #10153 from Microsoft/tsx_toString
Remove trailing slashes, remove mostly useless IO, fix script element kind for files
Add new test baseline and delete else in binder
addref in all configured projects that contain the file
Don't allow properties inherited from Object to be automatically included in TSX attributes
Support other (new) literal types in jsdoc
Fixing shim and normalizing paths
Merge branch 'master' into jsdoc-string-literal-types
Add string-literal completion test for jsdoc
Remove unused reference files: these tests produce erros so they will not produce these files (#9233)
Merge pull request #10136 from Microsoft/release-2.0_export_specifiers_map
[Release-2.0] Fix 9662: Visual Studio 2015 with TS2.0 gives incorrect @types path resolution errors (#9867)
Add a helper function `getOrUpdateProperty` to prevent unprotected access to Maps.
Merge pull request #10115 from Microsoft/export_specifiers_map
Test that declares conflicting method first
Merge pull request #10118 from Microsoft/limitTypeGuardAssertions
Fix newline lint
Use {} type facts for unconstrained type params
release cached tree in compilation settings change
Renamed span to textSpan to better follow other language service APIs
Allow JS multiple declarations of ctor properties
Fix linting error
Accept new baselines
Limit type guards as assertions to incomplete types in loops
Add a helper function `getOrUpdateProperty` to prevent unprotected access to Maps.
Don't allow ".d.ts" extension in an import either.
Refactoring API to remove duplicate spans
Narrowing type parameter intersects w/narrowed types
No more filtering results
Fix lint error
[Release-2.0] fix 9802: fix language service for UMD module alias (#10016)
Rename function
Use recursion, and fix error for undefined node
Fix #10083 - allowSyntheticDefaultImports alters getExternalModuleMember (#10096)
Merge branch 'master' into transforms
Merge branch 'master' into transforms
Merge pull request #9997 from Microsoft/re-add-strict-concat-signature
Fix bug
Remove `SupportedExpressionWithTypeArguments` type; just check that the expression of each `ExpressionWithTypeArguments` is an `EntityNameExpression`.
Improve error message
Merge branch 'master' into no_ts_extension
Merge pull request #10070 from Microsoft/release-2.0_lshost_realpath
Fixing import completion spans to only include the end of the directory fragment
Merge pull request #10035 from zhengbli/9522
set compilation settings of project as a part of sync process
Replacement spans for import completions
CR feedback
Merge pull request #10054 from SaschaNaz/jsxopening
Merge pull request #9767 from RyanCavanaugh/fix9766
Merge pull request #10069 from Microsoft/bestChoiceType
Refactoring import completions into their own api
Merge pull request #9884 from Microsoft/transforms-sourceMapTodo
allow to change settings for inferred projects
Merge pull request #10028 from Microsoft/fixDiscriminantInLoop
Provide `realpath` for module resolution in LSHost
Merge pull request #10068 from Microsoft/lshost_realpath
Accept new baselines
Add test baselines
Add test
Provide `realpath` for module resolution in LSHost
Accept new baselines
Add additional tests
Fix issue related to this and #8383
Merge pull request #9990 from Microsoft/lint_tests
change error message for unused parameter property
allow to change configuration for inferred projects
Merge pull request #10046 from RyanCavanaugh/fix10045
jsx opening element formatting
Use "best choice type" for || and ?: operators
Merge pull request #9951 from hckr/patch-1
Correctly check for ambient class flag
Draft of configuration inheritance
use ExternalFile in ApplyChangesInOpenFiles
Merge branch 'travis-cache'
Have travis use a newer image for the OSX build (#10034)
Merge pull request #9972 from Microsoft/explicitly_included_globs_2.0
Merge remote-tracking branch 'origin/release-2.0' into explicitly_included_globs_2.0
Simplify some code
recreate program if baseUrl or paths changed in tsconfig
Merge pull request #8636 from RyanCavanaugh/classOrdering
Fix tests and merge
Lint tests helper files
Merge pull request #9984 from Microsoft/node_kind
Allow `export =` and `export default` to alias any EntityNameExpression, not just identifiers.
Introduce the `EntityNameExpression` type
Add regression test
Properly reset type guards in loops
add Array.prototype.filter signature with type guard
Merge pull request #9985 from Microsoft/fix_runtests_browser
Use getDirectories and condition node modules resolution on moduleResolution flag
Merge pull request #9994 from Microsoft/local_abstract_class
Remove [port] in usage message
Get rid of port parameter
Merge remote-tracking branch 'origin/master' into import_completions_feedback
Merge remote-tracking branch 'origin/tsserverVS-WIP' into tsserverVS-WIP-mixedcontent
resolve merge issues
Add completions for types triple slash directives
Merge remote-tracking branch 'origin/master' into tsserverVS-WIP
Merge pull request #9407 from Microsoft/literalTypes
Adding import completions for typings
Use correct nullable terminology
null/undefined are allowed as index expressions
Fix lint error
Accept new baselines
Display enum member types using qualified names
Update LastJSDoc[Tag]Node
Update baselines with new concat overload
Re-add concat overload to support inferring tuples
Update baseline source location
The optional this should be readonly too.
Add find and findIndex to ReadonlyArray
Update baselines to be current
JSDoc understands string literal types
Allow an abstract class to appear in a local scope
Unlock ts-node version (#9960)
Import completions with rootdirs compiler option
Remove hardcoded port, use the custom port
Fix lint errors
Fix test and rename a function
Merge pull request #9981 from Microsoft/release-2.0_class_expression_static_property
Unify nodeKind implementations for navigationBar and navigateTo
Support emitting static properties for classes with no name
Merge pull request #9969 from Microsoft/class_expression_static_property
Merge pull request #9963 from Microsoft/jake_runtests_services
merge with origin/master
use FileMap to store script info objects to avoid issues due to mismatched casing
Fixed broken singleAsteriskRegex. Fixes #9918 (#9920)
Convert getErrorBaseline to use canonical diagnostic formatting (#9708)
Add support for including dotted and .min.js files explicitly in include
Limit travis build matrix (#9968)
Handling more compiler options and minor refactor
Add assertion whitespace lint rule (#9931)
Support emitting static properties for classes with no name
Merge remote-tracking branch 'origin/master' into tsserverVS-WIP-mixedcontent
Add servicesSources to the list of prerequisites for running tests
Merge pull request #9956 from Microsoft/bind-window-performance-now
Merge branch 'master' into travis-cache
Add lint enforcing line endings (#9942)
In ts.performance.now, bind window.performance.now
Fix typo in comment for MAX_SAFE_INTEGER
Merge pull request #9905 from Microsoft/add-src-to-browserify-paths
Some PR feedback
Merge pull request #9904 from Microsoft/protected-constructors-accessible-in-subclass-static-methods
Lock ts-node to 1.1.0 while perf issue is investigated (#9933)
Fixed broken singleAsteriskRegex. Fixes #9918 (#9920)
Allow `await await`
Optimize type inference
Merge branch 'master' into literalTypes
Use binary searching in union types to improve performance
Remove unnecessary subtype reduction operations
Change getUnionType to default to no subtype reduction
Merge pull request #9909 from YuichiNukiyama/fix9772
Fix linting errors
Fix fourslash test
Fix issue in getTypeDefinitionAtPosition
to run CI
throw error when paths option mapping empty array
Protected constructors now accessible everywhere in subclasses
Accept new baselines
Reduce unions of enum literal types when displaying types
Merge remote-tracking branch 'origin/tsserverVS-WIP' into tsserverVS-WIP-mixedcontent
do not sync program for brace matching
Merge remote-tracking branch 'origin/tsserverVS-WIP' into tsserverVS-WIP-mixedcontent
call updateGraph before getting language service
Port Fix 9894 to master (#9896)
Change parser to use token() function for accessing current token
Fix bug in binder uncovered by changes
Enum type is also a union of the literal enum types it declares
Forbid `await await`
Add src to absolute paths in browserify task
Protected ctors are accessible in subclass static methods
Merge pull request #9528 from Microsoft/explicitly_included_globs
Test that protected constructors are accessible
Respond to PR comments
More tests
Merge pull request #9895 from Microsoft/better_web_test
Merge remote-tracking branch 'origin/master' into explicitly_included_globs
[Release-2.0] Fix 9829 : do not report error using import, export, module augmentation in d.t.s (#9894)
Clarify code checking for UMD exports and eagerly return `undefined` rather than continuing on to the for loop.
Improve web tests
Use originalKeywordKind to detect this parameters
Test that emitter skips `this` with rest parameter
Skip `this` in emitter in 2 more places
Port PR 9745 to master (#9881)
Allow `await` in a simple unary expression
[Release-2.0] Fix 9632 Auto-completion for quoted property in object literal expression (#9745)
Merge pull request #9852 from Microsoft/transforms-visitPerf
Merge pull request #9855 from Microsoft/tsaImmutableTo-2.0
added tests
Add specific error message for unwanted '.ts' extension
Don't allow `.ts` to appear in an import
Remove dependency on tsd, Related to #9658 (#9724)
read ScriptKind\HasMixedContent when opening external project
introduce ExternalFile interface
merge with origin/master
Optimize checkTypeRelatedTo, part 2
Remove custom source map emit for modules.
Merge pull request #9692 from Microsoft/fix-emit-with-this-and-rest-parameters
Merge pull request #9853 from HerringtonDarkholme/master
Merge pull request #9561 from Microsoft/tsaImmutable
Fix #9843. IScriptSnapshot can return undefined
Changed specialized emit for IdentifierName
Remove specialized source map emit for rest parameters
Accepted baselines.
Fixed up tests that used 'string[]' instead of 'TemplateStringsArray'.
Make TemplateStringsArray completely immutable.
Fix several test failures.
Add more commonly used nodes, reduce less frequently used nodes.
Merge branch 'master' into tsaImmutable
Integrate feedback from @mihailik to performance framework (#9845)
Merge branch 'transforms' into transforms-visitPerf
Merge pull request #9175 from Microsoft/transforms-generators
Explicit handling for more nodes in reduceEachChild/visitEachChild
Optimize checkTypeRelatedTo
[Release-2.0] Fix 9782:  do not report blocked-scope-used-before-declaration error in ambient context (#9789) (#9830)
Add performance framework from transforms branch (#9536)
[Release-2.0] Fix 9782:  do not report blocked-scope-used-before-declaration error in ambient context (#9789)
strip quotes from the log file name
Remove bizarre fourslash test
Fix fourslash test
Expand top level of declared type in type alias declaration
Accept new baselines
Associate type alias names with union, intersection and literal types
Accept new baselines
Fix fourslash tests
Order union type constituents by type ID
remove node.d.ts
Merge remote-tracking branch 'origin/master' into tsserverVS-WIP
Updated comment
Accept baselines plus new linter warnings.
Merge branch 'transforms' into transforms-generators
[Transforms] Merge master 07/11 into transform (#9697)
Port Fix9685 to master (#9788)
Merge branch 'mergerRelease-2.0InMaster'
Merge pull request #9799 from RyanCavanaugh/port_fix9785
Update LKG
Merge branch 'release-2.0'
Merge pull request #9784 from Microsoft/Fix9636
Port #9798
Merge pull request #9798 from RyanCavanaugh/fix_9785
Provide the complete path to tsconfig file. Fixes #9785
Accept new baselines
Unify 'boolean' and 'true | false'
Fix fourslash test
Code review comments
[Release-2.0] Fix 9685: missing decoratedClassAlias emit in self-reference decorated class (#9763)
Merge branch 'release-2.0' into Fix9636
Fix #9636: Report unused type paramters only on last declaration
remove unused method declaration
Merge pull request #9764 from Microsoft/port-9750
Accept new baselines
Include type parameter constrains in literal type context determination
Accept new baselines
No subtype reduction in createUnionOrIntersectionProperty for performance
Use reference types to reference node.d.ts (#9686)
Try removing the conflicting package before install/update
Use sorcery to merge sourcemaps between browserify and gulp-typescript (#9439)
Fix linting error (#9762)
Incorrectly included some unrelated files
Emit parens around type-asserted binary operators
remove extra semicolon
Add npm update call to install, lets see how it goes
Merge branch 'master' into travis-cache
Merge pull request #9750 from Microsoft/fixFormatDiagnostics
Merge pull request #9750 from Microsoft/fixFormatDiagnostics
Fix a command example in help messages (#9747)
Fixes capitalization (#9736)
use sys based host for formatting diagnostics
Test that contextually typed generic this parameters are instantiated
Instantiate contextual this parameters if needed
Merge pull request #9529 from Microsoft/identifierAndTokenConstructor
Harden compilerRunner vs rooted path names in tests (#9714)
Have travis fast_finish (#9718)
Accept new baselines
Performance optimizations
Tell travis to build on OSX in addition to Linux (#9717)
Merge remote-tracking branch 'origin/master' into tsserverVS-WIP-deferUpdate
Merge pull request #9716 from Microsoft/moveEndsWIth
move endsWith to core.ts
Merge remote-tracking branch 'origin/master' into tsserverVS-WIP-deferUpdate
Merge pull request #9713 from alexeagle/release-2.0
Merge pull request #9704 from alexeagle/master
Merge pull request #9710 from Microsoft/fixAbsolutePath
fix absolute paths in baselines
merge with origin/master
use getNewLine from host rather than sys
use getNewLine from host rather than sys
Merge pull request #9701 from alexeagle/release-2.0
Add formatDiagnostics utility
Merge pull request #9680 from Microsoft/format_tsx_release-2.0
Use originalKeywordKind to detect this parameters
Merge pull request #9695 from Microsoft/weswigham-patch-1
Remove extra semicolon
Merge pull request #9676 from Microsoft/relative_module
Fix endsWith bug
Test that emitter skips `this` with rest parameter
Skip `this` in emitter in 2 more places
Port #9621 to release-2.0
Merge pull request #9621 from zhengbli/fixJSDocPropertyTag
Merge pull request #9689 from alexeagle/formatDiags
Include resolution trace
Add formatDiagnostics utility
More PR feedback
Remove duplicate startsWith and endsWith functions
Use regex
Handle JSX bodies in formatter
Treat "." and ".." as relative module names
use circular buffer instead of unbounded array
defer updates in project structure after file is edited
Merge remote-tracking branch 'origin/master' into explicitly_included_globs
Merge pull request #9647 from Microsoft/format_tsx
Merge branch 'master' into explicitly_included_globs
Responding to PR feedback
Handle JSX bodies in formatter
introduce methods that allow to get project without refreshing inferred projects
Change version to 2.1.0 (#9615)
move saveTo to ScriptInfo
use Logger directly
Merge pull request #9628 from Microsoft/tsconfig-for-harness
Move unittests into harness
Have tsconfig for harness
Merge pull request #9580 from Microsoft/compile-with-noImplicitThis
Add node flag check
Merge pull request #9622 from Microsoft/update-conflicting-baseline
Make setting properties explicit instead of using parameter properties
Merge branch 'release-2.0' of https://github.com/Microsoft/TypeScript into release-2.0
Remove another use of `this`, in program.ts
Merge pull request #9607 from Microsoft/issue9542
Merge pull request #9614 from Microsoft/port9607
use indentation from ts.formattting
Update conflicting baseline.
Update conflicting baseline.
fix the issue that @property types are not recoganized
Provide a symbol for salsa-inferred class types
Fix multiple Salsa assignment-declarations
Test for multiple salsa assignment-declarations
[Transforms] Merging Master to Transforms on 06/21 (#9294)
Merge pull request #9578 from Microsoft/fix-salsa-out-of-memory-on-methods-returning-this
Avoid using `this` in object literals where possible
Merge pull request #9574 from Microsoft/fix-union-of-salsa-property-types
Add __tokentag to Token
Make sure the order of setting pos, end, flags, parent, kind is consistent among nodes, tokens and identifiers
Add --pretty to tsconfigs
merge with origin/master
Add more default options to gulpfile
Fix `this` in harness and improve gulpfile defaults
Removed duplicate logic
Added missing test files
Fixed implicit any
fixed lint error
Fixed the node tracking and a harness bug
Updated test with relative import
Fix module tracking
Removed duplicate logic
Added missing test files
Fixed implicit any
fixed lint error
Fixed the node tracking and a harness bug
Updated test with relative import
Fix module tracking
Update .mailmap
Accepted baselines.
set max size for uncompressed messages
Fixed up tests that used 'string[]' instead of 'TemplateStringsArray'.
move max uncompressed message size out of the session
Compile with --noImplicitThis
Provide a symbol for salsa-inferred class types
Merge pull request #9565 from zhengbli/fixTypedefParsingIssue
fix linter
Add test for parsed @typedef tag node shape
Test for multiple salsa assignment-declarations
Fix multiple Salsa assignment-declarations
Update harness getDirectories implementation for shims
Parse the result of getDirectories call
Update harness getDirectories implementation for shims
Update LKG
Parse the result of getDirectories call
Avoid putting children tags in jsdoccomment
Update LKG
Make TemplateStringsArray completely immutable.
Fix #9550: exclude 'this' type parameters from unusedParameters checks.
Merge pull request #9557 from saneyuki/fix-unusedparam-this
Merge pull request #9556 from weswigham/import-q
Update comment to reflect new dependency
Remove the unused text buffer from ScriptInfo
Merge pull request #9537 from Microsoft/removeContentFromScriptInfo
Fix #9550: exclude 'this' type parameters from unusedParameters checks.
Swap q from a reference to an import
Merge pull request #9428 from Microsoft/runtests-parallel-skips-empty-buckets
Accepting new baselines
Adding new tests
Adding selected tests from #6196
Merge branch 'master' into literalTypes
Narrowing doesn't require switch expression to be unit type
report compression time
Update LKG
Merge branch 'release-2.0'
Merge pull request #9541 from Microsoft/Fix9531
make compressed data wrapper over the real data
Fix #9531: account for async as an contextual keyword when parsing export assignments
Removing forEach reference
Set default flags on all nodes
Remove the unused text buffer from ScriptInfo
Merge pull request #9534 from Microsoft/updateAuthors
Update script to pass more than one argument
Update AUTHORS.md for release-2.0
Add authors script to generate authors from repo
Add .mailmap file
initial support for compressing responses
use server side format code options matching arguments is omitted
Fixing behavior of resolvePath
Removing startsWith reference and fixing linter error
Refactoring node_modules enumeration code
Merge branch 'master' into import_completions_pr
Merge remote-tracking branch 'origin/master' into tsserverVS-WIP-projectsystem
renames
Update language in comment
Update LKG
more tests
more tests
Merge branch 'release-2.0'
Merge pull request #9420 from Microsoft/formatting_loc
Merge pull request #9510 from Microsoft/fixSwitchCase
Merge pull request #9482 from Microsoft/port_include_relative_path
Add support for including dotted and .min.js files explicitly in include
Merge branch 'master' into literalTypes
more tests
Identifier constructor
Create tokens using different constructor
more tests
Merge pull request #9485 from Microsoft/getEmitOutputAsObject
Merge remote-tracking branch 'origin/master' into tsserverVS-WIP-projectsystem
Add regression test
Exclude FlowSwitchClause from flow graph for case expressions
Accept new baselines
All types can be null/undefined and thus falsy in regular type checking mode
Fix reading files from IOLog because previous our API captures (#9483)
Fix PromiseLike to be compatible with es6-promise (#9484)
Detect always truthy and always falsy types with &&, ||, ! operators
fix linter
add new method getEmitOutputObject to return result of the emit as object with properties instead of json string
Merge pull request #9464 from Microsoft/excludeUnderscoreFromUnusedParamterChecks
Handle relative paths in tsconfig exclude and include globs
Merge pull request #9475 from Microsoft/include_relative_path
Improve names of whitespace functions
Merge master into release branch 06/30 (#9447)
Handle relative paths in tsconfig exclude and include globs
Increase timeout from running RWC. As UWDWeb takes slightly longer now (#9454)
Merge pull request #9473 from HerringtonDarkholme/fix_static
Accept new baselines
Ensure const enum members with same value have same type identity
change variable name for strict mode
Merge remote-tracking branch 'origin/master' into tsserverVS-WIP-projectsystem
Merge pull request #9459 from Microsoft/dontEmitNodeModules-2.0
Merge pull request #9421 from Microsoft/dontEmitNodeModules
Fix #9458: exclude parameters starting with underscore from unusedParamter checks
Merge pull request #9461 from dilijev/patch-1
Fix incorrectly-saved quote symbols in ThirdPartyNoticeText.txt
Merge branch 'release-2.0'
Removed one error to avoid full path issues
Renamed API
Dont load JavaScript if types packages are present
Don't emit source files found under node_modules
Removed one error to avoid full path issues
Merge branch 'unusedIdentifierFixes-3' into release-2.0
Handel Swtich statements check for locals on for statments only mark private properties
Merge branch 'release-2.0' into unusedIdentifierFixes-3
Port 9426 to release 2.0
Merge pull request #9426 from zhengbli/fix9411
Merge pull request #9445 from Microsoft/export_default_async_function
more tests
Merge pull request #9442 from Microsoft/navigation_bar_nameless_namespace
more tests
Merge pull request #9422 from Microsoft/allow-destructuring-assignment-with-default-of-undefined-optional-property
handel private properties correctelly
Merge remote-tracking branch 'upstream/master' into dontEmitNodeModules
PR feedback
initialize setImmediate\clearImmediate
Better name for test
Respond to PR comments
Parse `export default async function` as a declaration
Show "<unknown>" if the name of a declaration is unavailable
Only mark symbols found in a local symbol table
Code review comments
add tests
Consolidate refernce marking in resolveName to allow marking aliases correctelly
Do not report unused errors for module augmentations
more tests
more tests
added tests
Use checkExpression, not checkExpressionCached
Merge pull request #9397 from Microsoft/fix-crash-in-async-and-no-implicit-returns-targeting-es5
move setImmediate to host
Renamed API
Dont load JavaScript if types packages are present
fix path normalization
Add test
remove commented code
Merge branch 'release-2.0' into unusedIdentifierFixes-2
Add tests
Handel type aliases
Consolidate type reference marking in getTypeFromTypeReference
Add tests
Do not check ambients, and overloads
Report unused identifiers in for statements
runtests-parallel skips empty buckets
introduce ThrottledOperations
use isParameterPropertyDeclaration to test for paramter propoerties
push checks to checkUnusedIdentifiersDeferred
Use a deferred list to check for unused identifiers
Add nullcheck when calculating indentations for implort clause
Destructuring assignment removes undefined from type when default value is given
Don't emit source files found under node_modules
Do not scan nodes preceding formatted region, just skip over them
Merge pull request #9405 from zspitz/patch-1
Defere checking unsed identifier checks
merge with origin/master
Consider null, undefined, and void to be unit types in type guards
remove multiple collections for open files
Remove unused functions
Accept new baselines
Narrow unions of literal types by equality and truthiness
Merge pull request #9401 from zhengbli/addThisToLib
getVarDate should be on the Date interface
Fix #9402: Do not report unused identifier errors for catch variables
Merge master into release-2.0 (#9400)
Add This type to lib
Fix crash in async functions when targetting ES5.
Fix 9363: Object destructuring broken-variables are bound to the wrong object (#9383)
Port 9396 to release 2.0
Merge pull request #9396 from zhengbli/fix9186
Merge pull request #9361 from SaschaNaz/noFormatInJsxElement
Add nullchecks for typeRoots, remove getCurrentDirectory from ServerHost as it is always the installation location
Add getCurrentDirectory to ServerHost
Merge pull request #9393 from zspitz/MSActiveXExtensions
VarDate interface and relevant Date.prototype members
new options should be optional for compatibility
Merge pull request #8 from Microsoft/master
Merge pull request #9380 from Microsoft/update-template
Update issue_template.md
Merge pull request #9384 from Microsoft/loadJsFromModules-2.0
Merge pull request #7075 from Microsoft/loadJsFromModules
Additional comments per PR feedback.
Added es5 conformance tests for async arrow functions, add error for referencing 'arguments' in a generator.
Merge branch 'loadJsFromModules' into loadJsFromModules-2.0
Added additional es5 conformance tests, better emit for functions returning global promise, pass this to __generator
Marked new method internal
Added emitHost method to return source from node modules
Update LKG
remove commented code, added optionality to properties
Merge pull request #9377 from Microsoft/updateVersion
Remove unused compiler option (#9381)
fix linter
Added es5 conformance tests for awaiting a call
added tests
Added es5 conformance tests for async function declarations. Add ability to treat some statements as if they were prologue directives.
Remove upper boilerplate from issue template
fix merge issue
add support for single inferred project
merge with origin/master
Added es5 conformance tests for await in binary.
Move 'use strict' directive out of generator for async function.
Update version to 2.0.0
Merge pull request #4609 from SaschaNaz/fixExportImportFormatting
Removed extranous original parameter.
Remove extraneous comments.
es6 test conformance cleanup
Import completions for require calls
Merge pull request #9375 from zhengbli/fixTypo
Fix type of the disableSizeLimit option
merge with origin/master
Fixed the regexp for removing full paths
make rules optional
Removed old TODO comment
Merge branch 'master' into loadJsFromModules
Added project tests for node_modules JavaScript searches
Fixed bugs and linting
Remove extra baselines
format jsx expression
do not format comma/closeparen in jsxelement
Merge branch 'master' of https://github.com/Microsoft/TypeScript into fixExportImportFormatting
Merge branch 'master' of https://github.com/SaschaNaz/TypeScript into fixExportImportFormatting
Merge branch 'master' of https://github.com/Microsoft/TypeScript
Make boolean assignable to union types containing both true and false
Fix 8467: Fix incorrect emit for accessing static property in static propertyDeclaration (#8551)
Fix 8355: Fix emit metadata different between transpile and tsc --isolatedModule (#9232)
fix casing
added server bits to jake file
fix logger access issue
Merge pull request #9167 from Microsoft/make-unions-and-intersections-of-readonly-properties-readonly
[in progress] project system work - fixes in tests 2
Merge pull request #9340 from Microsoft/gulp-allow-space-in-exec
Unused identifiers compiler code (#9200)
[in progress] project system work - fixes in tests
Minor fix
Merge pull request #9342 from Microsoft/typoinbracecompletion
Adding completions for import and reference directives
[in progress] project system work - major code reorg
Merge pull request #9236 from Microsoft/BaseIndentationSupport
Fix 8549: Using variable as Jsx tagname (#9337)
Add fourslash tests & address CR comments
Merge pull request #9348 from Microsoft/umd_exports
Accept new baselines
Correct handling of falsy types ("" | 0 | false)
extract expression into function
Merge pull request #9330 from Microsoft/range_tests
Merge branch 'master' into range_tests
Remove unnecessary parameter
Fix bug where `exports.` was prepended to namespace export accesses
Merge pull request #9270 from Microsoft/this_references
Merge pull request #9346 from zhengbli/addNewAPIToProtocal
Add new APIs to protocol
Merge pull request #9306 from zhengbli/syncGetErrAPIs
Fix typo
Allow space in exec cmds
Correct the api string name
Merge pull request #9339 from Microsoft/fix-gulpfile-LKG
Fix lint
Clean before LKG in Gulpfile
Update LKG
Fix LKG useDebug task and newLine flag
Merge pull request #9338 from Microsoft/gulpfile-missing-file
Add matchFiles test to Gulpfile
Merge pull request #9332 from Microsoft/object-whitespace-rule
Merge pull request #9333 from Microsoft/fix-case-of-gulpfile-dependencies
Fix excess whitespace issues
Check for exactly one space
Fix single-quote lint
1. pass subshell args 2. fix build order in services
Fix case of gulpfile dependencies
Fix object whitespace lints
Add new lint rule
Merge pull request #9068 from weswigham/remove-jake
Respond to PR comments
Add failing test
Change reference tests to verify actual ranges referenced and not just their count
Merge pull request #9305 from RyanCavanaugh/fix9293
Add Gulpfile lint to jake, fix lints
Remove Signature#thisType and use Signature#thisParameter everywhere
Merge pull request #9298 from OrangeShark/new-rest-param-error
[in progress] project system work - path normalization
[in progress] project system work - versions
Merge pull request #9303 from Microsoft/signatures-use-jsdoc-for-minArgumentCount
Make use of module compiler option explicit, add strip internal to tsconfigs
Add node_modules cache to travis
Remove tsd scripts task from gulpfile
Change test comment and accept baseline
Do copyright without gulp-if and lazypipe
Merge pull request #9204 from Microsoft/promiseAndAsyncUpdates
[in progress] project system work
Port the sync version diagnostics API from tsserverVS-WIP branch to 2.0
Merge pull request #9295 from Microsoft/reuseTrees
Lint
Accept binding pattern properties error baselines
Change binding pattern parameter property error
Accept rest parameter properties error baselines
For optionality, check question token before JSDoc
Remove stale baselines
Don't crash when JS class property is self-referential.
Adding Code of Conduct notice
Fixed linting error
Updated tests
Changed implementation to use closure
Signatures use JSDoc to determine optionality
Fix rwc-runner from breaking change in compiler (#9284)
Fix case when a document contains multiple script blocks with different base indentations. Use the base indent size if it is greater that the indentation of the inherited predecessor
Merge branch 'tsserverVS-WIP' into reuseTrees
Use document registry to get sourceFiles in SyntaxTreeCache to share trees between semantic and syntaxtic oprations
Add error message for rest parameter properties
Add new error for rest parameters
Merge remote-tracking branch 'origin/master' into tsserverVS-WIP
Merge branch 'master' into loadJsFromModules
Make goto-definition work for `this` parameter
Merge pull request #9286 from basarat/patch-2
Accept new baselines
Literal types for const enum members
export interface used by other exported functions
Lazypipes and better services stream management
merge with origin/master
ported PR #9073
Merge branch 'master' into remove-jake
browser tests now also loads sourcemaps from disk
Working non-inline sourcemaps for runtests
Add watch task
Use merge2, gulp-if, gulp-newer, and more projects
merge with origin/master
Merge pull request #8841 from Microsoft/glob2_merged
Merge branch 'master' into glob2_merged
Merge pull request #9213 from zhengbli/fixRealPath
Merge remote-tracking branch 'origin/master' into tsserverVS-WIP
Merge pull request #9220 from Microsoft/navbar_refactor_3000
Use getCanonicalFileName
Accept new baselines
Introduce literal type locations
Accept new baselines
Use implicit boolean casts; it doesn't hurt performance
renameLocations
Adding more matchFiles test cases
getRenameInfo
Merge pull request #9271 from Microsoft/classify_this
Merge pull request #9176 from Microsoft/Fix9173-2
linter
Merge pull request #9249 from Microsoft/AddLibCheckTests
Classify `this` in parameter position as a keyword
Allow to find all references of the 'this 'keyword
Accept webworker baselines
findReferences
Merge branch 'master' into AddLibCheckTests
navto
breakpointStatement
nameOrDottedSpan
brace completion
syntactic/compiler options diagnostics
docCommentTemplate
navbar
linter
brace matching
Merge pull request #9250 from zhengbli/fix9244
added indentation
Add missing worker types
Add libcheck tests
Add conditional index signature for Canvas2DContextAttributes (https://github.com/Microsoft/TypeScript/issues/9244)
Numeric and boolean literal types
added todo comments
added outlining spans
Merge pull request #9240 from Microsoft/mapBeDamned
Merge branch 'master' into glob2_merged
Responding to PR feedback
Array#map -> ts.map.
Updating readDirectory for tsserverProjectSystem unit tests
[Transforms] merging "master" on 06/15/2016 (#9218)
added cleanup message
Merge branch 'master' into glob2_merged
Merge pull request #9180 from HerringtonDarkholme/interface
Merge branch 'master' into Fix9173-2
Merge pull request #9237 from zhengbli/updateDomJune17
Merge pull request #9163 from Microsoft/typeGuardDiscriminants
introduce EditorSettings/FormatCodeSettings interfaces
routine dom update
Adding base indentation for script block formatting and smart indent
Refactor navigation bar
address code style
add new tests for extends interface
use resolveEntityName to find interface
fix linter
formatting
Using baselines for transpile unittests (#9195)
add tests & add branches for module interface
Merge pull request #9166 from Microsoft/removeDotToken
ignore casing when converting a source file path to relative path
added missing check
set default project on script info when it is queried from project
Merge branch 'tsserverVS-WIP' of https://github.com/Microsoft/TypeScript into tsserverVS-WIP
enable semantic classification
Fix linter warning
Updates type definitions for Promise and PromiseLike, fixes issues in async functions due to introduction of never type.
Merge pull request #7486 from zhengbli/fixLargeProjectTry2
Refactor code to make if statements cheaper
normalize file name before lookup
Merge branch 'master' of https://github.com/Microsoft/TypeScript into fixLargeProjectTry2
do getDirectoryPath after normalization
Add support for external helpers module, cleanup, and accept new baselines.
getSemanticDiagnostics
Merge pull request #9083 from zhengbli/i6853
Merge pull request #9073 from zhengbli/i8523
Merge pull request #9170 from Microsoft/emptyTupleAssertions
Fix comment
Merge pull request #9189 from Microsoft/js_property_declaration
Merge pull request #9100 from Microsoft/Fix9098
Merge branch 'transforms' into transforms-generators
Merge pull request #9097 from Microsoft/transforms-importHelpers
Do not use Object.assing in test
Short-circut when reporting errors for helpers.
Merge pull request #9188 from Microsoft/relaxLogicalAnd
Merge pull request #9185 from Microsoft/simplify_range_tests
Merge branch 'transforms' into transforms-generators
Merge branch 'transforms' into transforms-importHelpers
Update baselines and fix failure when merged with master (#9172)
Remove old test
Allow property declarations in .js files
Accept new baselines
Add regression test
Remove String, Number, and Boolean from TypeFlags.Falsy
Use helper functions to simplify range tests
accept baselines
improve error message for extending interface
Accepted baselines.
Clear out unused compiler options when transpiling
Always check type assertion types.
Accepted baselines.
Added tests.
Merge branch 'transforms' into transforms-importHelpers
Updated baselines.
Merge pull request #9174 from Microsoft/Fix9173
Merge branch 'transforms' into transforms-generators
merge with origin/master
Make builtLocalCompiler depend on the local servicesFile
Added tests and fixed related emit issues.
fix tests issues
Accept new LKG (LKGd via gulp)
Fix #9173: clear out lib and types before creating a program in transpileModule
Alter LKG task to let more be done in parallel
Add needsUpdate check to lib tasks
Fix lssl task
add cancellation support
Fix run.js depending on the wrong local build target
Change symbol meaning for __extends resolution to be consistent with other helpers
Resolve external helpers module and report errors for missing module/exports
Calculate readonly? on union/intersection creation
Merge branch 'master' into transforms
Add --types to pass an empty array to types to disable @types in Jakefile
Accepted baselines.
[Transforms] Merge master 06/14/2016 (#9169)
Correct package.json indentation
Give Jakefile its ending newline back
Fix typos in help text
Merge branch 'master' into remove-jake
Add local patch for gulp-typescript types
Add back in Jakefile for transitional period
Gulfile runs tests and compiles like a champ
PR feedback
Test readonly intersection and union properties
Unions/intersections of readonly props are readonly
Merge branch 'transforms' into transforms-importHelpers
Working on gulpifying things
Merge branch 'master' into typeGuardDiscriminants
Check tuple types when getting the type node's type.
fixup! Remove compileFile and exec browserify - use gulp-typescript instead
Remove compileFile and exec browserify - use gulp-typescript instead
Merge branch 'master' into removeDotToken
Merge pull request #9088 from Microsoft/add-members-to-variable-declarations-initialised-with-function-expressions
[Transforms] Merge master 06/06/2016 (#8991)
Accepted baselines.
Added tests.
Merge pull request #9148 from Microsoft/add-isDefinition-to-references
No Need to store dot token when parsing property access expression
Merge pull request #9151 from Microsoft/commonjsShorthands
Use `isLiteralComputedPropertyDeclarationName`
Merge pull request #9159 from Microsoft/code_completion_escaping
Fix bug: do unescaping in the right place, so that it only affects escaped javascript identifiers
Add more isDefinition tests and fix computed property bug
Add tests
Narrow non-union types to ensure consistent results
Make isDefinition required.
Merge pull request #9156 from Microsoft/decorator_metadata_async
Unescape identifiers used in code completion
Respond to PR comment
Emit 'Promise' decorator metadata return type for async methods
Merge pull request #9140 from Microsoft/navbar_jsdoc
Merge pull request #9144 from Microsoft/decorator_metadata_rest_parameter
Merge pull request #9146 from Microsoft/runtests_bail_2.0
Merge pull request #9090 from weswigham/allow-empty-lists-command-line
Accepted baselines.
Emit 'exports.' if the shorthand is a general export.
Accepted baselines.
Added tests.
Merge branch 'tsserverVS-WIP' of https://github.com/Microsoft/TypeScript into tsserverVS-WIP
enable document highlighting"
Merge pull request #9095 from RyanCavanaugh/implicitTypeReferences
No implicit returns following exhaustive switch statements
added gotodef
added sighelp
lint
Add unit test
Refactor
Narrow type in case/default sections in switch on discriminant property
Absolute-ify paths in both places
[WIP] completions
Add option to bail out of `jake runtests` when one test fails
Test isDefinition
Add isDefinition to ReferenceEntry
Cleanup, fix linter errors, follow hoisted declarations.
Fix decorator metadata emit for rest arg with no type
Fixes runtests-parallel not reporting failure for failed tests.
Fixes runtests-parallel not reporting failure for failed tests.
Fixes an issue with runtests-parallel when global mocha is not installed.
Fixed typo
Adds progress indicators to the runtests-parallel build task.
Cleanup, only support generators for async functions, added emit helper.
Add test for jsdoc in navigation bar
Merge branch 'transforms' into transforms-generators
added logging to stderr, add command for full quickinfo
Merge pull request #9036 from Microsoft/primitive-type-guards-are-order-independent
Merge pull request #9129 from plantain-00/minor_fix_add_missing_return_clause
CR changes
Baseline fix, CR comments, lint
Use camel-case instead of snake-case (#9134)
minor fix: add missing return clause
Merge remote-tracking branch 'origin/master' into tsserverVS-WIP
Fix #9098: report missing function impelementation errors for merged classes and namespaces
Formatting.
Adds support for importing external helpers.
Only inlineSourceMap when debugging through jake-browser (#9080)
WIP - quickinfo
Type guards using discriminant properties of string literal types
Merge
Implicit type inclusion changes
fix version related issues
Remove trailing whitespace
Merge remote-tracking branch 'origin/master' into tsserverVS-WIP
Merge pull request #9089 from Microsoft/recommend-runtests-parallel-in-CONTRIBUTING
Remove single-comma empty array form
Allow empty lists on command line
Recommend runtests-parallel in CONTRIBUTING
Test adding members to JS variables whose initialisers are functions
Salsa: get members of variables whose initialisers are functions
Merge pull request #9084 from Microsoft/fixBaselines
fix baselines
check the declaration and use order if both are not in module file
Merge branch 'master' into remove-jake
Quick fix for runtests-parallel
Fix package.json casing
Merge pull request #9042 from Microsoft/ES6ModulesES5Target
Merge pull request #8945 from Microsoft/shorthand_ambient_module
Add tests
Merge branch 'master' into shorthand_ambient_module
Merge branch 'master' into shorthand_ambient_module
Fix #8523
add test and spit commandLineParser changes to another PR
Add gulpfile with same tasks as Jakefile
Update LKG
Merge pull request #9065 from AppShipIt/8996-es6-diagnostic-messages
Merge pull request #9066 from Microsoft/fixRuntestsParallel
Fixes an issue with runtests-parallel when global mocha is not installed.
Update more diagnostic messages ES6->2015
Refactoring
Merge pull request #9061 from Microsoft/fix-this-resolution-in-parameter-initializers
Merge branch 'master' into primitive-type-guards-are-order-independent
Code review comments
Allow null/undefined guard with null/undefined on left
Merge pull request #9057 from Microsoft/sourceRootWithInlineSources
Fix merging issues and multiple project scenario
Resolve function-this in parameter initialisers when explicitly provided
Fix7334 Disallow async in functionExpression and ArrowFunction (#9062)
Merge branch 'master' of https://github.com/Microsoft/TypeScript into fixLargeProjectTry2
Merge pull request #9059 from Microsoft/remove-tsservicesinbrowser
switch to use explicit list of open files
Merge pull request #8939 from Microsoft/pattern_ambient_modules
Merge branch 'master' into shorthand_ambient_module
Add tests for more kinds of import/export
Merge pull request #9054 from Microsoft/quick_info_meaning
this in parameter initializers resolves to class
Allow --sourceRoot with --inlineSources option Fixes #8445
Fix sourcemaps for debugging tests
Merge branch 'master' into shorthand_ambient_module
Merge pull request #8895 from Microsoft/strip_extension
Merge pull request #9056 from Microsoft/async_function_return_type
Improve tests
Merge pull request #9055 from Microsoft/shrink_flags
Improve perf
Undo change
Remove stale files
Contextually type return statement in async function
reduce max used values for flags to prevent smi overflows
Update tests
Merge pull request #8988 from Microsoft/transpile_options
Fix module loading error
Use proper method of not resolving alias
Add test for out-of-range error
Merge pull request #9031 from Microsoft/typeGuardIntersectionTypes
Merge pull request #9043 from Microsoft/parallelTestProgress
fix typo
adjust check when content should be used
Fix comment
Fixed typo
Adds progress indicators to the runtests-parallel build task.
Merge pull request #9040 from Microsoft/addExportToArgumentListKind
Add more tests
Accept baseline
addExportToArgumentListKind
[WIP] fix typo, make response mandatory
Add more tests for target=es5 module=es6
Add handleing for classes
Merge remote-tracking branch 'origin/master' into tsserverVS-WIP
Fix comments in tests
Merge pull request #9013 from Microsoft/typeGuardNestedAssignment
Merge pull request #8949 from Microsoft/strictNullLogicalAnd
Merge pull request #9035 from weswigham/patch-6
Primitive type guards are now order independent
Allow primitive type guards with typeof on right
Merge pull request #9032 from zhengbli/printTrace
Remove Long-Done TODO
Return trace when exception happens
Merge pull request #8428 from Microsoft/stringLiteralCompletions
Add test case
Merge pull request #8850 from Microsoft/reorderOptions
Merge pull request #8771 from YuichiNukiyama/fix8505
Add comments
WIP
Recognize relative path using in outDir property (#9025)
Merge branch 'master' into stringLiteralCompletions
Fix test helper
Merge pull request #9010 from Microsoft/merge-jsdoc-of-assignment-and-function-expression
Remove comments
Merge branch 'master' into reorderOptions
Merge pull request #9026 from DickvdBrink/lkg-newlines
Add tests
Accept new baselines
Remove TODO comments
Split commentsFunction test into expr/decl
Create intersection types in type guards for unrelated types
Force LF newlines for LKG builds/non debug builds Fixes 6630
Improve order of parameter's merged jsdoc
Merge remote-tracking branch 'origin/master' into tsserverVS-WIP
Merge pull request #9002 from zhengbli/moreTsserverTests
added openExternalProjects method
Add tests
Allow nested assignments in type guards
added message handlers
Merge pull request #9006 from Microsoft/transforms-removeLegacyEmitter
Merge pull request #8739 from evansb/fix-8738
Merge JSDoc of assignments from function expressions
Fix linting issues
more tests for module resolution change and exclude
Merge pull request #9009 from Microsoft/reusing-program-missing-check
check if moduleResolution when verifying that program can be reused
group members based on accessibility
Merge branch 'master' into tsserverVS-WIP
Replace legacy emitter with tree transforming emitter.
Merge pull request #9003 from Microsoft/caseUndefinedAndNull
Remove incorrectly added tests
Allow case comparison to undefined and null in strict null checking mode
Merge pull request #8942 from Microsoft/param_trailing_commas
Fix test
Merge pull request #8994 from Microsoft/typo
add tests for tsserver project system
Merge pull request #8970 from Microsoft/propertyControlFlow
Merge pull request #8993 from weswigham/refix-primitive-narrowing
Fix typo
Respond to PR comments
Merge pull request #8992 from Microsoft/runtests-browser-spaces
Add additional tests
Use inclusive flag, as originally done, but include almost everything
Revert "Revert "Merge pull request #7235 from weswigham/narrow-all-types""
Move to a conformance test
Merge pull request #8989 from Microsoft/jakefile_whitespace
factor out isJsxOrTsxExtension
Add another test
Make `jake runtests-browser` support test regexes with spaces
Remove trailing whitespace in jakefile
Support using string values in enums for CompilerOptions in transpile methods
Merge pull request #8974 from plantain-00/change_type_definition_for_Object.create
Merge pull request #8979 from Microsoft/trailing_whitespace
Remove trailing whitespace
Add "implicit any" warning for shorthand ambient modules
Fix signature help
change type definition for Object.create
Remove restriction on --target es5 and --module es6
Adding regression test
Consider property declarations to be control flow containers
Fix findIndex documentation.
Merge pull request #8962 from Microsoft/propertyAccessNarrowing
added delta computation
Add regression test
Fix fourslash test
Remove unnecessary restrictions in property access narrowing
renames, introduce projectKind
Merge pull request #8929 from Microsoft/transforms-extractFromPrinter
PR Feedback
[Transforms] Update transforms with recent master (#8960)
Merge pull request #8957 from Microsoft/navbar_indent
Merge pull request #8959 from Microsoft/stringify
Include indent in navigation bar protocol
Fix mistake
Update tests
Use a function `stringify` to simplify calls to `JSON.stringify(xyz, undefined, 2)`
Add merging tests
Respond to PR comments
Respond to PR comments
added close method
move root file to a map, release documents on project close
Add test
Improve typing of && operator with --strictNullChecks
Merge remote-tracking branch 'origin/master' into tsserverVS-WIP
remove project options from project
Merge pull request #8944 from Microsoft/reviseWidening
Merge pull request #8930 from zhengbli/i8676
Merge branch 'transforms' into transforms-extractFromPrinter
Merge pull request #8927 from Microsoft/transforms-removeExcludeFlags
Merge pull request #8946 from Microsoft/revert-narrow-all-types
reuse the fixupParentReferences function
Merge branch 'transforms' into transforms-removeExcludeFlags
Revert "Merge pull request #7235 from weswigham/narrow-all-types"
Support shorthand ambient module declarations
Merge branch 'transforms' into transforms-extractFromPrinter
Add null check and CR feedback
Merge pull request #8931 from Microsoft/tsserver-projectsystem-tests
[Transforms] Update baselines from merging with master round 2 (#8926)
Remove unused variable
Merge pull request #7235 from weswigham/narrow-all-types
Add tests
Merge pull request #8941 from Microsoft/controlFlowPropertyDeclarations
Allow trailing commas in function parameter and argument lists
Add regression test
Create separate control flows for property declarations with initializers
Add non-widening forms of null and undefined
Allow wildcard ("*") patterns in ambient module declarations
initial revision of unit test support for project system in tsserver
Run fixupParentReferences when parsing isolated jsDocComment
Merge branch 'transforms' into transforms-extractFromPrinter
Removes the excludeTransformFlags property from Node
Merge pull request #8906 from Microsoft/transforms-commentsPerf
Updated comments for iterateCommentRanges
[Transforms] Update baselines from merging with master (#8898)
Revert to old tryLoad implementation
Merge branch 'transforms-commentsPerf' into transforms-extractFromPrinter
Merge branch 'transforms' into transforms-commentsPerf
Fix merge issues
Actually merge from master
Merge branch 'master' into narrow-all-types
Fix test
Merge branch 'transforms-commentsPerf' into transforms-extractFromPrinter
delete redundant fields
drop Timestamped, create separate classes for different project types
Merge branch 'transforms' into transforms-commentsPerf
Merge branch 'master' into transforms
annotate class fields
move script version bits into the separate file
isolate responsibilities of LSHost
Merge pull request #8103 from zhengbli/typedefForJsdoc
Simplify disabling comments recursively, cleanup unused flags.
Remove unused parameter
Merge branch 'transforms' into transforms-commentsPerf
Merge pull request #8899 from Microsoft/transforms-binderPerf
move some methods to scriptinfo
Merge branch 'transforms' into transforms-binderPerf
Merge branch 'master' of https://github.com/Microsoft/TypeScript into typedefForJsdoc
Correct emit never-type (#8903)
drop unused code
Merge pull request #8849 from Microsoft/outerControlFlows
Merge pull request #8901 from zhengbli/formatOnTypeCurrentLine1
Address CR feedback
avoid eating all preceding empty lines
Merge branch 'outerControlFlows' of https://github.com/Microsoft/TypeScript into typedefForJsdoc
Pulls transformation out of printFile to reduce number of closures. Also some additional cleanup.
Respond to more PR comments
Fix formatOnEnter for double newlines
Added profiler event for triggering heap snapshots when using ts-perf
Respond to PR comments
Only check if the extensions match (#8870)
Merge branch 'transforms' into transforms-binderPerf
Merge pull request #8873 from Microsoft/transforms-visitEachChildPerf
Fix broken test
Improve loadModuleFromFile code
Merge pull request #8897 from Microsoft/fix-runtest-browser-running-zero-tests
Merge branch 'master' of https://github.com/Microsoft/TypeScript into typedefForJsdoc
Remove redundant parameter to `writeTestConfigFile`
Passing regular expressions to native hosts
Allow an import of "foo.js" to be matched by a file "foo.ts"
Merge pull request #8863 from Microsoft/navbar_readonly_property
Add navigationTo test for jsdoc typedef
cr feedback
More critical path optimization in binder
Optimize critical code paths in binder
Update test
Track return statements in IIFE using a flow label
Merge branch 'transforms-binderPerf' into transforms-commentsPerf
Merge branch 'transforms-visitEachChildPerf' into transforms-binderPerf
Merge branch 'transforms-visitEachChildPerf' into transforms-commentsPerf
Reduce allocations/gc by avoiding the creation of some CommentRange objects.
Fix various linter warnings.
Remove unused types.
Merge branch 'transforms' into transforms-merge
Merge branch 'transforms-fixPerformance' into transforms-visitEachChildPerf
Merge pull request #8824 from Microsoft/transforms-fixPerformance
Merge pull request #8869 from Microsoft/reachability-empty-default
check that default clause is non-empty in reachability checks
Performance API cleanup, pre-init with common values.
Moved code around to fix compile errors in processDiagnosticMessages script.
Add tests for private and readonly parameter properties in navbar
Merge pull request #8774 from Microsoft/parallel-tests
update signature of finishWorker
Merge pull request #8789 from Microsoft/getSymbolAtAliasLocation
Merge pull request #8812 from Microsoft/navbar_root
Use a JSON.stringify replacer function instead of changing the value beforehand
Merge branch 'transforms-visitEachChildPerf' into transforms-commentsPerf
Fix unresolved merge issue.
Merge branch 'transforms-visitEachChildPerf' into transforms-commentsPerf
Merge branch 'transforms-fixPerformance' into transforms-visitEachChildPerf
Performance improvements in comment emit.
Clean up parallel test runs in runtests-file
Simplified performance timers
[Transforms] Fix diskFile0.js.map (#8848)
Mark diagnostics, and skipDefaultLibCheck as internal
Reorder options alphabetically
Fix linting errors
PR feedback, removed now-redundant getUniqueClone
Add new tests
Fix test
Merge pull request #8770 from Microsoft/apparent-members-for-type-parameters-constrained-by-any
Include outer function expressions in control flow analysis
Merge branch 'master' of https://github.com/Microsoft/TypeScript into typedefForJsdoc
Merge pull request #8845 from Microsoft/Fix8834
Change how typedef tag is parsed
Fix typos
Merge pull request #8822 from Microsoft/excess-property-check-numeric-indexers
Merge branch 'master' into navbar_root
Merge pull request #8844 from Microsoft/create-symbol-for-assignments-in-javascript-constructors
Fix #8834: exclude paramters and variables from flag checks
Merge pull request #8843 from Microsoft/navbar_type_alias
Symbol for property assignments in Salsa/ES6 constructors
Include type aliases as childItems in navigation bar
Merge pull request #8786 from rkirov/no_double_assignment
Fix localeCompare differences between node versions
Moved responsibility for consuming comment ranges.
Fixing lint errors
Merge branch 'master' into glob2_merged
Revert previous commit
Fix localeCompare differences in node versions
Fix lint errors
Change tests to use the full JSON output of the navigation bar. This reduces the confusion of verify.navigationBarCount() counting duplicate items.
Always include a root node in the navigation bar. This lets us change the navigation bar counting algorithm to traverse from the root only, so it never has duplicate nodes.
Merge pull request #8814 from Microsoft/navbar_modules
Merge pull request #8811 from Microsoft/navbar_class_child_item
Merge pull request #8828 from Microsoft/no_null_harness
Merge branch 'navbar_class_child_item' into navbar_modules
Fix more tests
Fix trailing whitespace
Removed most needs to traverse original nodes for emit flags, comments, and source maps.
Added parallel support for runtests-file
Fix aggregation issue for namespaces
Isolate polymorfic code to individual functions to speed up inlining decisions in node.
Fix compiler issue after merge
Merge pull request #8825 from Microsoft/Fix8795-1
Bringing back excludes error and fixing faulty test
Fixing linter and test errors
Merge branch 'master' into glob2
Address PR comments
Merge pull request #8829 from Microsoft/tslintPerf
Accept baselines
merge with origin/master, address PR feedback
Merge branch 'transforms-merge' into transforms-visitEachChildPerf
Merge branch 'master' into transforms-merge
Merge branch 'master' into navbar_class_child_item
Remove many uses of 'null' in harness. Remaining uses should be commented.
Merge branch 'master' into Fix8795-1
Merge branch 'master' of https://github.com/Microsoft/TypeScript
Update LKG
add a extra check to avoid rescans
Merge branch 'transforms-fixPerformance' into transforms-visitEachChildPerf
Merge pull request #8823 from Microsoft/no_null
Merge branch 'master' of https://github.com/Microsoft/TypeScript
Update LKG
Merge branch 'transforms' into transforms-fixPerformance
Adds streamlined child visitors for frequently visited nodes.
Merge pull request #8821 from Microsoft/intersectionTypeInference
Remove uses of `null` in services
Correct tests and update baselines.
Add test
Improve intersection type inference
Merge branch 'master' into excess-property-check-numeric-indexers
Merge pull request #8819 from RyanCavanaugh/fixBaselines
Add test case for excess checking of numeric properties
Remove comment
Merge pull request #8815 from Microsoft/navbar_debug
Only allow excess numeric properties w/numeric indexers
Merge pull request #8813 from Microsoft/navbar_interface
Fix broken baselines
Merge pull request #8804 from Microsoft/fixTestRun
run linter once after last worker is finished in case if there are no errors
Merge pull request #8810 from Microsoft/lint_more_more
Show indent and childItems when debugging the navigation bar
Include modules as childItems in navigation bar
Include interfaces as childItems in navigation bar
Include classes as childItems in navigation bar
Lint all servicesSources
do not swallow test execution errors
Merge branch 'master' of https://github.com/Microsoft/TypeScript into typedefForJsdoc
Fix #8795: make properties defined in optional constructor paramters optional
Transient node properties for transformations.
do not emit double assigment of class expressions.
Merge pull request #8670 from RyanCavanaugh/fix8275
Merge pull request #8696 from RyanCavanaugh/fix8675
Merge pull request #8792 from Microsoft/instantiate-this-in-super-property-access
Merge pull request #8785 from Microsoft/lint-unit-tests
unconditionnaly use linter for non-parallel run
Avoid linting files twice
Cache most recent values for node emit flags and custom ranges
Added 'extendedDiagnostics' option for comments/sourcemap measurements.
Instantiate this-type in super property access
Merge pull request #8787 from RyanCavanaugh/cmdLineHelp
Recognize '-?' / '--?' in tsc
Do not resolve alias when getting symbol of import equal's right hand side Fixes #5501
isNameOfExportedDeclarationInNonES6Module
Adds a NodeFlag to indicate a synthetic node.
Added metrics for printing
Add getDirectories to shims
Remove intentionally unused variables
Remove duplicate linting of client.ts
Lint unit tests via harnessSources in Jakefile.js
Allow duplicate identifiers as long as their declarations span multiple blocks
Merge pull request #8780 from Microsoft/navbar_enum
[Transforms] Fix projects sourcemaps (#8718)
[Transforms] Fix other sourcemaps (#8721)
Include enums in childItems in navigation bar
Fixed whitespace
Updated test
Merge remote-tracking branch 'upstream/master' into loadJsFromModules
Fixed diagnostic message wording
Merge remote-tracking branch 'upstream/master' into loadJsFromModules
Don't lose host 'this'
Only return dirs from getdirectories
Merge pull request #8678 from RyanCavanaugh/fix8255
Apparent members for type params constrained by any
run tests in parallel by equally dividing them between workers
Fix missing else statement
Lint
Handles ES3 default as identifier name
Merge pull request #8730 from Microsoft/destructureOptionalParameter
Merge pull request #8731 from Microsoft/subtypeRelationForNever
Merge pull request #8767 from Microsoft/neverTypeInference
Merge pull request #8605 from Microsoft/recursively-remove-object-literal-freshness
Add test case
Improve doc comment
Factor out the behaviour and handles x++ and ++x
Refactor
Add test for composite assignment
Factor out assignment op check
One more cleanup item from PR comments
Address PR comments
Merge pull request #8712 from Microsoft/readonly_assignment_in_constructor
Accept new baselines
Add tests
Merge pull request #8756 from Microsoft/no_navigate_to_import
Merge pull request #8714 from Microsoft/lint_more
Merge pull request #8762 from Microsoft/navbar_tests
Merge pull request #8759 from Microsoft/lint_client
Merge branch 'master' into neverTypeInference
Merge pull request #8761 from Microsoft/fix_tests_8732
Merge branch 'skipLibCheck'
Merge branch 'master' into skipLibCheck
Only infer 'never' return type in function expressions and lambdas
Lint src\server\client.ts
Merge branch 'Fix8634'
Add comma
Merge branch 'master' into Fix8634
[Transforms] Accept .js baselines when there are compiler's errors (#8744)
Make fourslash tests actually test parentName for navbar items
Merge pull request #8749 from basarat/patch-2
Fix tests for PR #8732
add SharedArrayBuffer
Don't include imports in navigateTo if the imported declaration is also in the items and has the same name
Lint src\harness\instrumenter.ts
Expand tests
chore comments to jsdoc
Detects assignment to internal module export clause, fixes #8738
Sort baseline reference identifier by name
Add failing test for #8738
Add --skipLibCheck compiler option
Merge pull request #8732 from Microsoft/Fix8729
Fix #8729: Make JSON.stringify accept `null` and `undefined` replacers
Add "tsserverlibrary.d.ts" to LKG
Update LKG
Merge pull request #8700 from Microsoft/Fix8692
Accept new baselines
Add regression test
Fix subtype relationship for 'never' type
Accepting new baselines
Adding regression test
Ignore optionality when determining binding element parent type
Merge pull request #8705 from ntrrgc/findIndex
Merge pull request #8720 from Microsoft/runtests-parallel-does-not-fail-upon-failure
runtests-parallel does not fail when a single bucket fails
Merge pull request #8719 from Microsoft/instantiate-cross-file-merges
Use `getSymbolOfNode` instead of `getMergedSymbol`
Make sure to instantiate merged type parameters
Merge pull request #8713 from Microsoft/generic-inherited-default-constructor
Improve readability
Clean up tests a bit
Rename test output to match test name
Allow assignment to readonly parameter property within the constructor
Rebuilt lib
Modified all other findIndex() definitions
Fix findIndex definition
Merge pull request #8703 from zhengbli/excludeOutDir
add unit tests
Merge pull request #8504 from zhengbli/i8334
avoid using `sys` in editorServices.ts
Merge pull request #8697 from Microsoft/Fix8694
exclude outDir and add more default excludes
Merge pull request #8598 from Microsoft/transforms-fixMoreSourceMaps
Remove use of ts.sys in editor services
Code review comments
Merge pull request #8369 from zhengbli/jsModuleExportsNotWorking
Merge branch 'master' of https://github.com/Microsoft/TypeScript into i8334
PR Feedback
Merge pull request #8698 from Microsoft/iife-parameters-correct-quickinfo
Change name of the output file
lint fixes
Add lssl to LKG build
Remove dependncy on NodeJs from editor services
Merge pull request #8674 from evansb/union-type-react
Fix #8694: check for singatures before calling a type empty
Mark IIFE signature with `anySignature` during contextual typing
Simplify and split + and - test
Remove target-following code when erasing signatures
Test assignability of inherited generic default constructor
Simplify the checker, no recursive checking for signature is needed anymore.
Add test for #8657
Handles resolving JSX type for union typed element class
Merge pull request #8666 from Microsoft/lint_regex
Undo formatting edits
Tweak UMD semantics
Fix typo
Removed nodeEmitOptions to reduce GC overhead
Respond to code review comments
Fix lint errors
Requires the construct/call signature for each type in the union instead of whole.
Recursively check union type of react components for constructor/call
Lint
Get rid of disk-based paths in baselines
Merge remote-tracking branch 'upstream/master' into fix8275
Merge pull request #8669 from ethanrubio/patch-1
Merge pull request #8652 from Microsoft/neverType
Merge pull request #8625 from Microsoft/optionalClassProperties
Baseline accept and reorder program logic so common source dir is right
Lint
Fix minor comment grammatical errors
Update test harness
Merge pull request #8662 from Microsoft/lint_navigation_bar
Merge pull request #8650 from Microsoft/unescape-dunder-string-literal-types
Add option to lint only specific files
Lint navigationBar.ts
Fix issues after merge
merge branch 'transforms-fixMoreSourceMaps' into transforms-transformer-es6-generators
Conditionally enable performance metrics
Wrap performance metrics in object to reduce deoptimizations on ts namespace.
Fix getOccurances not picking up hte right file because of casing
Update error message
Add error message if module is not specified and a file contains a module indicator
Automatically consume /types
Adding tests
Add additional error checking
Unescape only string literal type nodes.
Unescape string literal types starting with double underscore.
Merge pull request #8603 from Microsoft/hover_over_comment
Merge pull request #8595 from Microsoft/declaration_expressions
Merge pull request #8645 from Microsoft/navbar_export_type
Merge pull request #8640 from mihailik/patch-3
Merge pull request #8632 from Microsoft/fall-back-to-binding-pattern-for-type-inference
Add type aliases to navigation bar
Merge pull request #8622 from Microsoft/navigation_bar_test
Accepting new baselines
Make 'never' an intrinsic type
Add test that infers 'number' from pattern
Fix message text for printNavigationBar
Add printNavigationBar declaration
Rename "getScriptLexicalStructureList" to "navigationBar" in fourslash test helpers and remove unnecessary duplicate helpers
Add test for #7301
Handle 'never' in return type inference
Introduce 'never' type
Extra test for #8364 - non-breaking of one-liners
Issue an error when a derived class precedes its base class
Merge pull request #8364 from zhengbli/i7503
Fix 8589: by appending "-1.0" pre-release version will be comparising by lexically comparison in ASCII sort order. (#8629)
Use binding pattern for type inference result `{}`
PR Feedback
Adding more tests
Fixing test
Accepting new baselines
Emit '?' for optional parameter property in declaration file
Add optionality to properties declared with '?' and initializer
Merge pull request #8627 from Microsoft/no_lint
Add option to turn off linting during `jake runtests`
Refactor get(Regular|Widened)TypeOfObjectLiteral.
Merge pull request #8609 from nojvek/master
Improve test: nested object literal with intersection
Fix issue with emit flag reset in param initializers.
Adding test
Remove nullability from function types in language service
Search for triple slash comments before getting a source node
Remove broken test
Test expressions with no name
Change other uses of getTouchingPropertyName to check for node === sourceFile instead of undefined.
Fix #8582: Add Error.prototype.stack definition
Accepting new baselines
Properly display optional methods in language service
Allow class properties and methods to be declared optional using '?'
Test nested object literal assignability to intersection type
Make getRegularTypeOfObjectLiteral recursive
Fix bug: getTouchingPropertyName does not return undefined, but it may return the source file node
Improve test
Look for declaration expressions in nested expressions
Include declaration expressions (class expressions and function expressions) in named declarations
Fix source map emit for imports, accepts several baselines.
Minor cleanup of getFlowTypeOfReference parameters
Merge pull request #8583 from Microsoft/parameter_property_modifier
Use NodeFlags.ParameterPropertyModifier rather than NodeFLags.AccessibilityModifier to detect parameter properties. This is a continuation of #8555.
Merge pull request #8509 from Microsoft/Fix8507
Merge pull request #8576 from Microsoft/intersection_quick_info
Merge pull request #8555 from Microsoft/readonly_ctr
Merge pull request #8577 from Microsoft/computed_getter
Fix 8532: Correct source map output for computed getter of object literal
Fix #7966: A non-anonymous type can still fail to have a symbol. For example, an intersection type.
Add test for lambda parameter named 'readonly'
Remove duplicate check for misplaced parameter properties (taken care of by checkParameter)
Don't report error twice for readonly in method
Add declaration emit tests for readonly parameter property
Merge pull request #8566 from Microsoft/controlFlowDeleteOperator
Additional source map fixes for initializers and arrow functions.
Adding test
Include 'delete' operator in control flow analysis
Merge pull request #8560 from Microsoft/perfWork
Fix source maps for arrow functions, comments in sourcemap writer.
Merge pull request #8556 from Microsoft/controlFlowLoopAnalysis
Adding test
Stop analyzing loop branches when declared type is seen
fixes source map emit for export= in commonjs
Merge pull request #8548 from Microsoft/typeGuardAsAssertion
Change name from ConstructorParameterModifier to ParameterPropertyModifier
Adding test
Revert to declared type when '!' postfix operator would produce 'nothing'
Fix #7590: Allow 'readonly' to be used in constructor parameters
expose code path that will use Path type to avoid redundant string conversions
fixes source map emit for export= in amd
Fixes source map alignment for enums
Minor fixes and new baselines for destructuring source maps.
Add test
Fix 8482: Add Object.values and Object.entries  (#8538)
Fix TypeErrors from decorated class emit.
Merge pull request #8456 from Microsoft/Fix8415
Adding test
Accepting new baselines
Renaming emptyUnionType to nothingType
Revert to declared type when narrowing produces the nothing type
Merge pull request #8540 from LPGhatguy/patch-1
Fix minor comment typo
Merge pull request #8539 from Microsoft/resolveTargetForVarSymbol
Merge branch 'transforms' into transforms-fixMoreSourceMaps
resolve target of alias when getting member from the module
Merge pull request #8515 from Arnavion/lib-d-ts-fixes-3
Merge pull request #8533 from Microsoft/parameterReferencesInInitalizer
guard agains cases when local value in initializer shadows function parameter with the same name
Merge branch 'master' into stringLiteralCompletions
Code review comments
Merge branch 'master' into Fix8415
Remove additional error message generated while emitting output
Update tests and baselines.
Add string literal union type overload for String.normalize parameter.
{Array, TypedArray}.{copyWithin, fill, sort} return `this`.
{Map, WeakMap}.set and {Set, WeakSet}.add return `this`.
Fix 7304: show correct quickinfo on "this" in type position (#8508)
Fix #8507: Consider UnknownSymbols values for import/export purposes
Merge pull request #8481 from Microsoft/Fix8470-2
Merge pull request #8502 from Microsoft/deferred-references-in-initializers
Merge pull request #8487 from ziacik/fix-space-tab-indentation
Merge pull request #8463 from Microsoft/this-types-for-accessors
Merge pull request #8469 from Microsoft/tsconfigParsingImprovements
Merge pull request #8501 from zhengbli/ignroeHiddenFilesAddTest
Tolerate non-existing files specified
disallow references to local variables of the function from parameter initializers
Add test for explicitly added dotted files
CR Feedback
Add the entire tsconfig as a raw property to the parsed config.
Simplified check for indentation difference
Merge pull request #8483 from Microsoft/contextually-type-iife-parameters
Merge pull request #8484 from zhengbli/ignoreHiddenFiles
Merge pull request #8491 from Microsoft/sourceFile-getSymbolAtLocation
Only contextually type expressions of calls
getSymbolAtLocation now returns symbol for external modules
Merge pull request #8486 from Microsoft/symlinked-modules
Allow async as parameter in arrowfunction (#8488)
Merge pull request #8485 from RyanCavanaugh/fix8478
Address PR comments
Remove stale baselines
Add unit tests for tsconfig file list parsing
Fixes space-tab indentation issues
Formatting space vs tabs tests added
Allow module augmentations to add new top-level names. Fixes #8478
Check that token is AsyncKeyword before calling lookAhead (#8477)
remove unused code
use CompilerHost.realpath to resolve actual location for symlinks
Merge pull request #8311 from zhengbli/reportTsconfigError
ignore dotted files and folders
Merge pull request #8480 from Microsoft/controlFlowLoopLogic
Contextually type IIFE params by their arguments
Fix #8470: use ts.normalizePath before checking filename idenity
Improve control flow loop analysis logic
Fix 8407: Allow (weak)map & (weak)set constructor when targeting ES5 using ES6 library (#8451)
Merge pull request #8471 from Microsoft/controlFlowCaching
Fix 8262: allow unparenthesized parameter in async arrow-function (#8444)
CR Feedback
Adding regression test
Accepting new baselines
Cache visited nodes and types in shared arrays to reduce object allocation
Skip simple conditional flows in control flow graph
Add propertybag to parsed tsconfig.json file.
accept emit baselines
Accept symbol baselines
Correctly copy annotated this getter -> setter
Local caching of types of shared flow nodes
Refactor from FlowKind to FlowFlags
Fix #4808: Follow target symbols
Merge branch 'master' into Fix8415
Add tests+baselines for accessor this parameters
Allow this parameters for accessors
Enable find all refs and rename for computed property names with literal expressions
Merge pull request #8450 from Microsoft/Fix8357
Merge pull request #8449 from Microsoft/Fix8423
Merge pull request #8452 from Microsoft/equalityUndefinedAndNull
Fix #8415: Add method declaration to contextually typed locations when searching for symbols
Adding tests
Equality comparisons for null/undefined in strict null checking mode
Code review comments
Merge pull request #8443 from Microsoft/controlFlowAccessors
Fix #8357: Remove optionality for the definition of `IteratorResult`
Polyfill String.prototyp.fill
Fix #8423: Remove undefined while getting the type of the first argument of then signature
Merge pull request #8447 from Microsoft/resetSymbolCount
reset symbol count in binder
Use shorthand properties
Formatting changes
Fix error
Use const instead of let
Merge branch 'master' into stringLiteralCompletions
Accepting new baselines
Include accessors in control flow type analysis
Merge pull request #8433 from tinganho/md
Reorg Jakefile.js
Adds issue_template.md and pull_request_template.md to .npmignore
Merge pull request #8429 from Microsoft/declaredTypeAsInitialType
Remove unused check
Add support for completion in string literals
Refactor signatureHelp to expose helper functions
Rewrite isInStringLiteral to accomodate for unterminated strings
Fix fourslash test
Initial type of variable is union of declared type and undefined
[Transforms] Remove the assertion as the assumption is not correct (#8341)
Merge branch 'master' of https://github.com/Microsoft/TypeScript into typedefForJsdoc
Merge pull request #8425 from Microsoft/use-before-def
Merge pull request #8362 from Microsoft/Fix8338
check usage before declaration for computed properties in destructuring inside for-of variable declaration
Merge pull request #8421 from Microsoft/controlFlowNestedLoops
Merge pull request #8366 from Microsoft/Fix7611-2
Fixing repro test
Add a contextual type in test case
Adding regression test
Quicker bail out for type analysis in nested loops
Merge pull request #7290 from Microsoft/thisTypesInBasePropAndContainer
Accepted baselines.
Applied suggested change.
Merge remote-tracking branch 'origin/master' into thisTypesInBasePropAndContainer
Merge pull request #8394 from achew22/nar
Merge pull request #8412 from alexeagle/master
Include sourcefiles in the WriteFileCallback for .d.ts emit
Add start target to package.json
Merge pull request #8403 from d4rkr00t/navbar
Remove name length limit in navigation bar service for function expression
Merge pull request #8389 from Microsoft/make-object-literal-this-any-typed
Code review comments
Merge pull request #8390 from Microsoft/narrowingOfDottedNames
Add --noImplicitThis test for object literals
Removing comments from test
Merge pull request #8371 from zhengbli/fixRenameFileCacheIssue
Adding regression test
Reset dotted name narrowed types when type guards affect base name
Make `this` in object literal always of type `any`
Merge pull request #8387 from Microsoft/controlFlowDestructuringParameter
Adding regression test
Correct handling of destructuring parameters in control flow analysis
Merge pull request #8382 from Microsoft/this-type-for-object-literal-function-properties
Update looseThisTypeInFunctions baselines
Type 'this' in object literal function properties
Wipe out the cached script content if failed to read it
Support module.exports.name = expr format
Fix #7611: Add support for String Literal Types in find all refs and occurances
Fix indentation for array items
Merge pull request #8356 from Microsoft/smarter-object-literal-this-contextual-type
Fix #8338: add signatures to RegExp constructor accepting RegExp
Contextual signatures without thisType return anyType
Address PR comments.
`this` in object literals intersects contextual type and literal type
Merge pull request #8354 from Microsoft/revert-this-types-for-function-bind
Remove incorrectly added extra test
Revert Function.bind/apply/call this-overloads
Accepts a number of baselines.
Merge pull request #8342 from Microsoft/excludeHiddenVsSettingsFolder
Merge pull request #8340 from Microsoft/nothingType
Merge pull request #8318 from zhengbli/i7514
Exclude the files in the .vs folder
Move the dir watcher to parseConfigFile
Merge pull request #8339 from zhengbli/updateLib04272016
Accepting new baselines
Display the name 'nothing' for the empty union type
Routine update of dom lib files
Merge pull request #8324 from Microsoft/fixDisplayOfNarrowedTypes
Adding fourslash test
[Transforms] Fix emit comment in wrong position when transforms export declaration to require statement (#8321)
Properly display narrowed types when hovering in IDE
Merge pull request #8314 from Microsoft/Fix8287
Merge pull request #8312 from RyanCavanaugh/fix8293
add dirWatcher for "watch" option in tsconfig.json
Fix missing calling of export helper function in decorated class-declaration (#8319)
Add config file diag related types to protocol
Adjusts source map emit for members
Merge branch 'transforms' into Fix8287
Merge pull request #8313 from Microsoft/acceptTransformBaselines
Fix #8287: handel ImportEqualsDeclaration correctelly
Don't error when 'reserved' names appear in ambient contexts.
Merge branch 'transforms' into acceptTransformBaselines
Error baselines
Add test
Add event for reporting tsconfig errors
Filter library text from RWC output (#8297)
Add test for narrowing to unions of string literals
Missed a defaultable in comments
Defaultable -> NotNarrowable to align with use
Reconcile fix with CFA work
string literal case test
Remove check narrowing only certain types, add test showing issues with this
Merge pull request #8295 from Microsoft/anyDefaultsToAny
Adding regression test
[Transforms] Add test from fixing 8256 into transforms branch (#8294)
Variable of type any has initial type any in control flow analysis
Fix8256 (#8292)
Merge pull request #8291 from zhengbli/honorEditorOptions
Remove hard-coded new line character option
Merge pull request #8284 from Microsoft/Fix8271
Comments
Merge pull request #8286 from Microsoft/controlFlowCacheFix
Fix broken test
Merge pull request #8196 from zhengbli/fileWatcherBackToPolling
Adding regression test
Cache control flow types only at loop-back junctions
Fix #8271: Add `undefined` type to index signatures
Merge pull request #8266 from Microsoft/FixGlobalTSServerOprations
Format JOSN in failed error messages
Add configured projects to the list of projects when searching
Fixes offsets for decorated parameters.
Added more control over sourcemap/comment emit and fixed a number of source map emit issues.
resolve build error
Merge branch 'master' of https://github.com/Microsoft/TypeScript into typedefForJsdoc
refactor
Merge pull request #8010 from Microsoft/controlFlowTypes
Adjusts source maps and comment emit for decorators
Adds source maps for captured this, skips source map for synthetic return token in arrow.
Fixes source map emit for synthetic constructors
Adjusts source map emit for classes and down-level rest parameters
Add env to allow switch to non-polling if really wants to
Merge pull request #8233 from Microsoft/transforms-fixShortHandPropertiesAndExportedModules
PR Feedback
Handle the scenario when let [a=undefined]=[]
[Transforms] Fix 8157 (#8242)
Accepting new baselines
Revert previous change
Only narrow to {} in getNarrowedType when types are completely unrelated
Merge pull request #8244 from zhengbli/i4420
Merge pull request #8236 from zhengbli/i8222
Update fourslash test
Correct issue with exported variables in code flow analysis
Merge branch 'master' of https://github.com/Microsoft/TypeScript into i4420
Provide server response when reload is done
Merge pull request #7353 from zhengbli/i2531
Merge branch 'master' of https://github.com/Microsoft/TypeScript into i2531
Allow keywords in jsdoc comments parsing
Removing unused logic
Do not report errors during contextual typecheck Fixes #8229
Adding test
Support assignments in truthiness type guards
Add test case for #8229
Accepting new baselines
Add regression test
Fix incorrect user defined type guard function in compiler
Improve consistency of instanceof and user defined type guards
[Transforms] Fix emit comment in synthesized function expression (#8234)
treat TS only keywords as identifiers in jsdoc comments
Fixes issues with emit for ShorthandPropertyAssignments and exported namespaces
Merge pull request #8223 from Microsoft/typeReferenceDirectives
Merge pull request #8226 from Microsoft/transformPort8201
Merge pull request #8208 from Microsoft/transforms-fixDebugFailure
Merge pull request #8225 from Microsoft/add-emacs-tmp-files-to-gitignore
Merge pull request #8100 from Microsoft/exportTransforms
Merge branch 'transforms' into exportTransforms
Do not transform the emit of function with rest parameter unless declared in AST Fixes #7749
Adding testcase for function with rest param defined in jsDoc comment Test case for #7749
Add emacs temp files to gitignore
Test case when --out is specified for compiling module but --module isnt specified
Change the tests for typereference directive tests 11 and 12 to use module gen amd so they can emit correctly Fixes #8182
Report error if user specified --out and we are defaulting to commonjs emit
Remove temperary file (#8221)
Merge pull request #8201 from Microsoft/jsDocCommentAndEmit
Merge pull request #8197 from Microsoft/transforms-skip-emit
Merge pull request #8210 from Microsoft/Fix8162
Removing unused logic
Address PR comments
Accepting new baselines
Adding test
Support comma operator in type guards
Fix #8162 and #8173: Add root symbols to search in find all referecnes
[Transforms] fix8155 : Hoist exported enum in system output (#8177)
Merge branch 'transforms' into transforms-fixDebugFailure
Adds transforms for NonNullExpression
Fix debug failure in parser
Merge pull request #8207 from Microsoft/transforms-fixVariousSourceMaps
Merge pull request #8193 from Microsoft/noErrorOnFailedResourceLookup
Merge branch 'transforms' into transforms-fixVariousSourceMaps
Fixes various source map emit issues
Merge pull request #8200 from Microsoft/no-errors-on-augmentations-in-ambient-context
Fix missing iterator in NodeList (#8199)
Mark 'this' parameters in the binder.
Do not transform the emit of function with rest parameter unless declared in AST Fixes #7749
Merge branch 'transforms' into exportTransforms
Addressed CR feedback (which fixed 'tests/cases/conformance/es6/modules/exportsAndImports3-amd.ts').
do not validate module names in augmentations defined in ambient context
Adding testcase for function with rest param defined in jsDoc comment Test case for #7749
Merge pull request #7954 from zhengbli/supportScriptKindOnServer
Merge pull request #8187 from Microsoft/maintainCommentsVariableStatement
Use string literal type for script kind names
Merge pull request #8195 from Microsoft/fix-formatting-multiline-comments
Skip emit of this parameters
So we are back to polling.
Add missing semicolon
fix formatting for lines that start with continuation of multiline comments
Fix #8130: Do not fail if the resources for the specified locale does not exisit
Merge pull request #8192 from Microsoft/assignTransforms
Updated appropriate baselines.
Use the '__assign' helper in transforms.
Merge pull request #8172 from YuichiNukiyama/fix8117
Adjusts some source map locations. Updates baselines.
Assign the node to expression statement of variable so that it emits comments Fixes #8156 Tests fixed: - decoratorInstantiateModulesInFunctionBodies.ts - downlevelLetConst13.ts - es6ImportNamedImportDts.ts - es6ImportNamedImportWithExport.ts - exportedBlockScopedDeclarations.ts - exportNonInitializedVariablesAMD.ts - exportNonInitializedVariablesCommonJS.ts - exportNonInitializedVariablesSystem.ts - exportNonInitializedVariablesUMD.ts - privacyCannotNameVarTypeDeclFile.ts - privacyCheckAnonymousFunctionParameter.ts - privacyCheckAnonymousFunctionParameter2.ts - privacyImport.ts - privacyTopLevelInternalReferenceImportWithExport.ts - privacyVar.ts
Merge pull request #8184 from Microsoft/removeLibFromRWCOutput
Filter library text from RWC output
Merge pull request #8159 from Microsoft/declFileFirstTypeArgumentIsGenericFunctionType
Variables from different module declarations default to their declared type
Variables from different source files default to their declared type
Merge pull request #8160 from Microsoft/transforms-april-merge-from-master
Update baselines after merge
fix 8117
Merge pull request #8149 from Microsoft/servicesVersionTo-0.5
typeof x === "function" type guards include Function interface
Cleanup and accepting some baselines.
Accepting new baselines
Only evaluate assigned type when declared type is a union type
remove extra deduplicate
Fix declaration emit when first generic function type in type argument position specified using space
Adding another test case to handle more generic scenarios
Fixes source map emit for namespaces
Parenthesize the fn or constructor type with type parameter when writing it in type argument Fixes #8105
Accepting new baselines
Merge pull request #8158 from Microsoft/updateBaselines2
Update baselines
Adding tests
Improve expression type caching to ensure consistent results
Add the test case for #8105
Merge branch 'master' into transforms
References decorated classes in static functions using rename entity (#8150)
Merge pull request #8115 from Microsoft/transforms-fix8076
Merge pull request #8151 from Microsoft/projectTests
Merge pull request #8153 from Microsoft/transforms_updatebaselines
Fix source maps for rest params, class properties, parameter properties, and accessors.
Array.prototype.filter.not.forcing.boolean (#7779)
Merge pull request #7950 from Microsoft/sourceMapUpdatesForClasses
Update baselines: remove parenthesis around comma expression in for loop headers with destructuring assignments
Accept project test baselines when --out is specified with commonjs as the output is not generated for module bundle
Merge pull request #8125 from Microsoft/fixDisplayForStringyMembers
Bump TS services version to 0.5.
O -> Of
Removing unused properties
Accepted symbol baselines.
Added another fourslash test.
Use an element access when displaying literal members.
Accepting new baselines
Adding tests
Improved handing of evolving types in iteration statements
Added tests for quick-info on string-named enum members.
Merge pull request #8111 from Microsoft/fix_8098
Merge branch 'transforms' into sourceMapUpdatesForClasses
Accepts new baselines to fix #8076
Addesses a number of comment/sourcemap related issues
Correct export assignments for when the variable declaration has an export modifier.
Merge pull request #8028 from Microsoft/fixLocationOfSuperCall
use existing 'isSuperCallExpression' function
Merge pull request #8104 from Microsoft/newEntitiesInGlobalAugmentations
Merge pull request #8051 from Microsoft/cannotExportName
Merge branch 'master' into sourceMapUpdatesForClasses
Merge branch 'transforms' into sourceMapUpdatesForClasses
Script side implementation for Brace Completion. (#7587)
revert back fix for implicit exports of imports
Fix baseline as it appears in the master branch Fixes #8098
allow top level 'import x = identifier | qname' in module augmentations
permit global augmentations to introduce new names
code clean up
Merge branch 'transforms' into exportTransforms
Merge pull request #8095 from Microsoft/transformArrowComments
Added an assertion to ensure export assignments for expression statements are only emitted for decorated clases.
Fixed emit for decorated classes that eventually get exported.
Emit 'exports.foo' assignments for bindings that are exported in specifiers.
Merge pull request #8096 from Microsoft/Fix8066
Check for class expressions when finding related symbols in base types
Fix the incorrectly assigned arrow expression trailing comments Fixes #8041
Merge branch 'transforms' into sourceMapUpdatesForClasses
Merge pull request #8092 from Microsoft/transforms-unescape-destructured-identifiers
Add calls to unescapeIdentifier for destructured identifiers
Merge pull request #8069 from Microsoft/transforms-capture-this-in-computed-property-names-in-arrow-functions
Improve comment explaining ContainsLexicalThisInComputedPropertyName
[Transforms] fix `_this = this` capture emitted before `"use strict"` directives in AMD module output  (#7953)
[Transforms] fix8038 and 8047 (#8071)
[Transforms] fix Not correctly emitting local name for exported class (#8048)
Merge pull request #8070 from Microsoft/transforms-lowercase-mocha-tap
Merge pull request #8080 from Microsoft/pathsValidation
fix typo in message
added validation of paths option
Merge branch 'master' of https://github.com/Microsoft/TypeScript into typedefForJsdoc
Add tests for renaming and incremental parsing. Changed how the AST was hydrated with jsdocComment nodes.
Add explanatory comment when adding ContainsLexicalThisInComputedPropertyName
Fix case of mocha TAP -> tap
Capture `this` in computed property names in arrow functions
Merge pull request #8064 from Microsoft/trailingModuleComments
Merge pull request #7945 from Microsoft/renameAndFindRef
Merge pull request #8044 from Microsoft/elideNoValueExports
emit 'export *' for es6 only if module exports some value
Update the entry point to return property symbol of destructuring assignment
[Transforms] updatebaseline (#8067)
switch to use addPrologueDirectives function
Merge pull request #8068 from Microsoft/transform-function-and-import-conflict
Merge pull request #8035 from Microsoft/defaultClassName
Set the end position of variable statement as -1 so the trailing comments are not emitted
Merge remote-tracking branch 'origin/transforms' into fixLocationOfSuperCall
Merge pull request #8034 from Microsoft/enumsComputedPropertyNames
Revert changes from  5e308b9
Set LocalName flag for exported local then skip it
Merge pull request #8049 from Microsoft/moduleNameInOutput
Merge branch 'transforms' into moduleNameInOutput
Merge pull request #8065 from Microsoft/removeCommas
Remove commas from nodeEdgeTraversalMap manually for now
Merge pull request #8027 from Microsoft/transforms-skip-es6-imports-inside-namespace
Review comments
Fix the trailing comments for enum declaration Fixes #8045
Fix the trailing comment emit for module declaration Fixes #8045
Return undefined instead of createNotEmittedStatement
Merge pull request #7977 from Microsoft/transforms-fix7868
PR Feedback, also removes cloneEntityName.
Commend rewording per PR feedback
Fix typo
Improving error reporting as suggested in code review
Merge pull request #8056 from weswigham/remove-custom-no-null-rule
Remove custom no-null rule, use tslint builtin no null rule
PR feedback
Accepted baselines.
Include exported name in error message.
Accept baselines
Accept baselines: better comment output
Accept baselines: extra parens
Accept baselines: output formatting changes
Accept baselines: using dots consistenlly for numeric literals
Accept baseline: Static properties after export
Accept baselines: syntactically invalid input
Accept baseline: use strict in an empty module
Use double quotes consistently for module names
Move helpers to factory.ts
Merge pull request #8040 from Microsoft/transforms-es6ImportWithoutClause
elide exports with no value side
Merge pull request #8033 from bowdenk7/jakeChange
Merge pull request #7970 from Microsoft/fix-transforms-empty-destructuring-assignment
Do not emit "from" if import clause is missing in import declaration
Merge pull request #8019 from Microsoft/typeRefsDts
don't generate temp variables for computed property names in enums
Fix the name when synthesized node is clone of auto generate identifier kind This fixes variable declaration created for default exported class without name Fixes #7875
Accepting new baselines
Adding regression test
Fix finishFlow function and rename to finishFlowLabel
Reorder host in jakefile so TYPESCRIPT_HOST is checked before localhost
Emit module names when --out is specified for system and amd modules
Fix the AV when accessing edge on IE debugger
Remove parentheses and accept baselines
Merge branch 'transforms' into fix-transforms-empty-destructuring-assignment
addressed PR feedback: added more tests
fix emit for super calls that has preceding prologue directives
Update es5 module internal imports test and related baselines
Merge branch 'master' into controlFlowTypes
A few cosmetic changes
Do not emit ES6 import/export inside namespaces
include type reference directives in .d.ts. files
Some restructuring according to PR feedback
Merge pull request #8014 from Microsoft/strictBlockScopeFunction
Merge pull request #8018 from Microsoft/privateImplicitBindingAny
Removed debugger; statement
Helper rename as per PR feedback
[Transform]: fix emit __extends within system.registry (#7973)
Rename of getPropertySymbolIfObjectBindingPatternWithoutPropertyName to getPropertySymbolOfObjectBindingPatternWithoutPropertyName
Do not report error on implicityly any binding element if it is from parameter destructuring of private method Fixes #8002
Test case for failing scenario of wrongly reporting error of parameter of private method when no implicit any is speicified
PR feedback
Merge branch 'mihailik-patch-2'
Merge branch 'patch-2' of https://github.com/mihailik/TypeScript into mihailik-patch-2
Merge pull request #8016 from Microsoft/namedImportCompletion
Fix existing tests baseline with modified error message
PR feedback
Test cases for functions with same name present in the outerscope
PR feedback - Cacheing the script target - Added missing return - Reworded error messages
Completion list of named imports shouldnt contain default export member Fixes #6124
Accepting existing baselines
Adding test cases for errors resulting because class/modules are strict
Fix new error in compilerRunner about function declaration in block scope
Report error for block scope function declaration in ES5
Bind the function declarations in block scope in strict mode
Add test cases for function declarations in block scope
Update LKG
Merge pull request #7999 from Microsoft/fixHostOptionality
Merge https://github.com/Microsoft/TypeScript
fix issue with optionality of CompilerHost
Accepting new baselines
Merge branch 'master' into controlFlowTypes
Prefer ChakraHost when available to node and WScript
Fix linting errors
Accepting new baselines
Fixing tests
Fixing fourslash tests
Adding test
Accepting new baselines
Support destructuring declarations in control flow analysis
Merge pull request #7972 from Microsoft/exportStarOfNonValues
Update baselines (#7981)
Merge pull request #7979 from Microsoft/projectTestsUpdate
handle export default
Disable sourcemap text tests for now to limit noise
Fix for https://github.com/Microsoft/TypeScript/issues/4697, do not stop running the tests on the first failure
Make project tests run in the server
Merge pull request #7775 from Microsoft/libraryDirectives-2
JS style changes
Cleans up a few things and fixes #7868.
Merge pull request #7976 from Microsoft/transforms-skip-destructured-rest-params
Accepting new baselines
Handle shorthand property assignments
merge with origin/master
Only emit rest param code for identifiers.
emit export star only if export will yield anything with value side
Another test case for rename in destructuring assignment
Rename function
Merge pull request #7969 from Microsoft/bindingPatternImplicitAny
Correct destructuring assignment to empty object
Merge pull request #7952 from Microsoft/objectAssignPoly
Rename the `forEachProject` function to something sane
Accepted baselines.
Changed emit to use 'Object.prototype.hasOwnProperty'.
Report implicit any errors on destructuring parameter declarations Handles #6935
Accept correct baseline (#7967)
Merge pull request #7965 from Microsoft/transforms-fix7886
Fixes comment emit for super property call
Merge pull request #7951 from Microsoft/transforms-fix7896
Accepted baselines.
Handle the rename locations for default import Handles #7024
Fix the git ignore so that browser test server is ignored
Accepting new baselines
Flow analysis of &&, ||, and destructuring assignments
Remove unnecessary 'null'/'undefined' check, removed temp for args length.
Add API support for LS host to specify script kind of a file to open
Accepted baselines.
Use an emit helper for JSX Spread Attributes.
Fixes detached comment emit for constructors
Merge pull request #7883 from Microsoft/listEmittedFiles2
Merge pull request #7940 from Microsoft/transforms-fix7914
Merge pull request #7948 from Microsoft/transforms-onByDefault
Makes transforms the default
Merge pull request #7946 from Microsoft/transforms-dontBreakRunTestsBrowser
Merge branch 'transforms' into sourceMapUpdatesForClasses
Adds IO mappings for tryEnableSourceMapsForHost
Remove message from 'help'
Merge pull request #7944 from Microsoft/recordTempVariables
Add a source mapping to the closing `}` for functions, and wire in positions for class transfomtaion
remove trailing commas
Fixes issues that were causing runtests-browser to fail
use temp variable for current dir.
Merge pull request #7941 from Microsoft/unusedImportsES6
Merge branch 'master' into renameAndFindRef
Test case for nested binding element's rename
Handles when property is renamed and is also part of destructuring assignment Handles destructuring assignment part of #6312
Merge pull request #7619 from zhengbli/updateDom20160321
Ensure the listed files have absolute paths.
record temp variable introduced in spread calls
CR Feedback
Changed getDeclarationName to allow comments if requested
refactor cr
elide unused imports in ES6 emit
Merge pull request #7920 from Microsoft/exportWhenClassIsDecorated
Merge pull request #7925 from Microsoft/correctStrictPrologueCheckToTransforms
Merge pull request #7924 from Microsoft/correctStrictPrologueCheck
Emits class name with comments.
Merge pull request #7921 from Microsoft/unqualifiedEnumMembers
Fix rwc (#7895)
Test cases when var is renamed and used in destructuring
Test cases for destructuring declarations in "for" and "for of" loops
Merge pull request #6739 from Microsoft/this-function-types
Merge pull request #7919 from Microsoft/transforms-fix7878
Merge pull request #7935 from Microsoft/shorthandPropertyInitializer
emit missing initializers for shorthand property assignments
Merge pull request #7923 from Microsoft/Fix7922
Add contextual typing test with `this` specified
Accepted baselines.
Ensure that the entire contents are simply 'use strict'.
Accepted baselines.
Added test.
Ensure that the entire contents of the prologue are simply 'use strict'.
Accepted baselines.
Ensure that the entire contents are simply 'use strict'.
Accepted baselines.
Added test.
Fix #7922: Only bundle if module==AMD or module==System
emit unqualified enum members as qualified
Sync with TSJS repo
Merge pull request #7902 from Microsoft/blockScopedBindingsInForOf
Export the respective let binding when a decorated class is exported.
Support the case with variable name as @typedef type name
Merge pull request #7916 from Microsoft/transforms-fixClassNamesAndAutoParenForCall
Revert to old emit for metadata. Also adds baselines support for transpiler tests. Fixes #7878.
Merge pull request #7907 from Microsoft/extraFrom
Merge pull request #7917 from Microsoft/acceptBaselines
Merge pull request #7915 from Microsoft/emitImportsAsConst
Merge pull request #7897 from Microsoft/shebangLine
Accept baselines for invalid module +target combination. Closes #7876
Merge branch 'transforms' into acceptBaselines
Enums with numeric names not emitted as string
accept extra parens
better output for **= operator
Remove empty comma expressions
use dots in all number accesses
`export=` in ES6 modules, accept latest
invalid export in blocks.
formatting
Do not emit rest param if not the last.
Merge pull request #7906 from Microsoft/blockScopedNamesForClasses
Merge pull request #7899 from Microsoft/nestedBlockScopeBindings
invalid output in both cases, picking the latest
better output, previouslly block scoped variable was not renamed.
Formatting system module output
Function declaration with string template, syntactically incorect.
Invalid input, this in static property intializer. output is worng in both cases.
Fixes extra _1 in class names and auto-parentheses for comma expression in call/new. Fixes #7857. Fixes #7858.
emit `*` in generators downlevel
Merge pull request #7910 from Microsoft/transforms-fixLiteralPropertyNames
Emit imports as const declarations.
Fix literal property names
Merge pull request #7904 from Microsoft/transforms-fixAwaitAsYieldParens
Only emit the module specifier on an export if it is present.
treat classes as block scoped entities
Fixes extra parens around yield downleveled from await
enable generated names for block-scoped binding in for-of
fix scope tracking when converting loops
Add a newline after emitting shebangs.
Include the target symbol in search if location is propertyName or the import or export specifier dont specify "as" clause Handles #7708
added supports for 'types' compiler option
Whitespace fix
Add option to list the emitted as part of the compiler output.
Destructuring of object binding pattern element without property name should reference property Fixes #6312
Merge branch 'transforms-fixObjectLiteralBody' into transforms
Merge branch 'transforms-fixAccessorComments' into transforms
Merge pull request #7842 from Microsoft/transforms-fixJsx2
Merge pull request #7836 from zhengbli/fixFileCasingForTsc
Fixes indentation of object literals with computed properties
Fixes comment emit for down-level accessor declarations.
Merge pull request #7834 from Microsoft/transforms-fixSpaceInModifiers
Additional fixes for React emit.
Merge pull request #7835 from Microsoft/fix7810
Support the case with @property and @type
remove compilationRoot parameter, use typesRoot/config file location as a root when computing primary locations
Adress PR: add nullability to signature
Not use toPath in tsc when dealing with file watching
Accepted valid baselines
Fixes missing whitespace in modifiers
Add nullability into signature
addressed PR feedback
Move PropertyKey from es5 to es2015.core
Update baselines
Merge pull request #7832 from Microsoft/transforms-fix-unittests
Merge pull request #7823 from Microsoft/transforms-fixJsx
Merge pull request #7822 from Microsoft/transforms-0-255-simple-baselines
update baselines in unittests, fix linter issues
Adjustmodularize lib
Fix incorrect emit for JSX/React
Merge pull request #7821 from Microsoft/transforms-fixTransformFlagsTypeForExponentiation
Accepted baselines.
addressed PR feedback
Fixed typo when computing transform flags for exponentation
Merge pull request #7820 from Microsoft/transforms-fixExportedNamespaceInExternalModule
Fixes emit for exported namespaces in external modules.
Merge branch 'master' of https://github.com/Microsoft/TypeScript
Use isWatchSet to test for options.watch
Merge pull request #7811 from Microsoft/transforms-fixClassExpressionIndentation
Merge pull request #7815 from Microsoft/transforms-review-256-511
Merge pull request #7813 from Microsoft/exportDefaultAssignmentExpression
accept baselines
Emit "declare" for temp default var name only if declaration file emit context allows Fixes #7807
Test cases for when default temp var is inserted for export default in the declaration file
Fixes indentation of class expression bodies with static initializers.
Merge pull request #7783 from Microsoft/transforms-fixCommentsPlus
Merge pull request #7713 from Microsoft/Fix7703
Merge branch 'vilic-master'
Merge branch 'master' of https://github.com/vilic/TypeScript into vilic-master
Code review comments
PR Feedback
Simple case and scoping
removed unused type assertions in harness
Fixes some comment emit and other changes
Fix == typo and add object literal 'this' test
Forbid ConstructType as part of 'no this in constructors'
added tests
expose type reference resolution for external consumption
Address CR
Support reference library directives
Prepend 'the' to a couple of ambiguous messages.
Separate error messages for 'null', 'undefined', or both.
Merge pull request #7740 from Microsoft/transforms-fixTemplateEmit
Improve error messages and always return any from newed functions
Fix parens for NewExpression
Fix up baselines and missing , after merge
Merge branch 'master' into this-function-types
Improve error messages and code style
PR Feedback
Support unknown types (host object names) in typeof type guards
Test that signature help doesn't show 'this'
Updated a few baselines
Adjusts emit for templates
Merge pull request #7736 from Microsoft/transforms-fixModuleEnum
Address PR comments
Merge pull request #7715 from Microsoft/6974AddLibImplementation
Merge branch '6974AddLibImplementation' of https://github.com/Microsoft/TypeScript into 6974AddLibImplementation
Fix test failure by having correct case for the file-name
Fix test failure by having correct case for the file-name
Merge pull request #5517 from Microsoft/comparableRelation
Error on all uses of this that are implicitly any
Fix emit for modules and enums.
Merge remote-tracking branch 'refs/remotes/Microsoft/master'
Merge branch '6974AddLibImplementation' of https://github.com/Microsoft/TypeScript into 6974AddLibImplementation
Fix style and whitespace
Merge branch '6974AddLibSymbolBaselinesUpdate' into 6974AddLibImplementation
Address PR: Put --lip options into one line
Address PR: use getDefaultLibLocation to get directory
Address PR: merge two functions to get-default-library-file
Undo comment override from merge.
Merge branch 'master' into comparableRelation
Address PR: merge two functions to get-default-library-file
Delete removeNullableKind, use getTypeWithFacts instead
Accepting new baselines
Fix some tests
Remove unnecessary cast
Use type {} for vacuous type guards / New getTypeWithFacts function
Fix issue with destructuring in for..of
Merge pull request #7731 from Myste/master
Fix lint failures
Fix #7101
Review comments
Address PR: add comment
Merge pull request #7693 from Microsoft/transforms-block-scoped-bindings
addressed PR feedback
Address PR: remove debugger statement
Update baselines affected by modularize library PR
Address PR: give default value for getDefaultLibrarySourceFile and use debug assert
Update the baselines for modularize library
Clean up library files
Address PR: use getDefaultLibLocation? insteadof getUserDefinedLibFileName
Merge pull request #7711 from YuichiNukiyama/fix4957
Addres PR: change lib filenames from es6 to es2015 and es7 to es2016
Add compiler-baseline tests and associated baselines for --lib flag
change error message
Update fourslash tests
Update unittest for --lib
Implement --lib flag in the compiler and harness
Merge pull request #7702 from blakeembrey/find-config-file
Modularize ES6 and ES7 library files
fix comment
Merge branch 'master' of https://github.com/Microsoft/TypeScript into fixLargeProjectTry2
Merge pull request #7707 from Microsoft/transforms-unary-operators-system
do not treat class declarations as nodes that start lexical environment
Fix #7703: make arrow function span the first line instead of the whole function body
Update baselines after merging from master
Merge branch 'master' into this-function-types
Throw error when tsconfig.json has excludes without exclude property
fix emit for unary operators on exported variables in system modules
Normalize `tsconfig.json` path before searching
Merge pull request #7178 from tinganho/navigationBarItemTopLevel
Merged with master
Accepting new baselines
Fixing some tests
Addresses CR feedback
Merge pull request #7694 from Microsoft/transforms-fixDebugErrors
Fix remaining debug failures.
accepted baselines
added support for captured block scoped bindings
Accepting new baselines
Fix comment in test
Fix issues in analysis of do..while and for..in/for..of
Add --noImplicitThis flag
Remove --strictThisChecks
Merge pull request #7688 from Microsoft/Fix7629
Merge pull request #7690 from ivogabe/controlFlowTypesTest
Changed emit for decorator metadata
Add control flow tests
Fix #7629: Check if errros are needed before reporting them in enumRelatedTo
Fix overly aggressive optimization
Merge pull request #7681 from Microsoft/transforms-fixES6ImportElision
Remove incorrect type predicate (could be true even when result is false)
Handle assignment of union types in getAssignmentReducedType
Fixes elision of import declarations in ES6 modules.
Elides functions with invalid bodies.
Fix async method with super
Fixed multiline block for async functions
Merge pull request #7675 from Microsoft/transforms-fixTypeErrors
Fixed minor difference in string literal emit for AMD modules
Merge pull request #7676 from zhengbli/fixNodeOnSharePoint
refactor
Explicitly exclude . and .. for fs.readdirSync
Merge pull request #7584 from Microsoft/LS-rename-getSourceFile
Do not always add sourceURL for browser tests
Fixes the various TypeErrors coming from some transforms.
Merge pull request #7658 from zhengbli/fixCaseSensitivity
Merge branch 'master' of https://github.com/Microsoft/TypeScript into fixLargeProjectTry2
Adding a few optimizations
Merge branch 'AbubakerB-nestedPrivateProtectedMembers'
Merge branch 'nestedPrivateProtectedMembers' of https://github.com/AbubakerB/TypeScript into AbubakerB-nestedPrivateProtectedMembers
Merge pull request #7650 from Arnavion/lib-d-ts-fixes
Revert change to Object.assign
Fixes generated names and some formatting in system modules.
Use fileName instead of Path when dealing with file systems directly
Merge pull request #7645 from Microsoft/fix7637
Fix import binding substitution for AMD/CJS
Modified createIdentifier to track originalKeywordKind
RegExp.compile() actually returns `this`, per ES6 annex B.
Add nullability annotations to core.d.ts and es6.d.ts
Fix extra slice in array with spread
Fix missing commas in binding pattern emit.
Merge branch 'transforms' of https://github.com/Microsoft/TypeScript into transforms
Fix unnecessary parens for omitted expressions and trailing commas in spread arrays
Merge pull request #7646 from Microsoft/system-transforms
fix issues in emit of System modules
Fix default class and function exports
Fix #7637: treat jsx tag names as expressions
Fix for amd-dependency paths
Fixes order of amd-dependency imports
Fix comment emit for import equals
Minor update to source map emit and fix for positions
Minor cleanup of ts transformations.
Accepting new baselines
Fixing tests
Fixes emit for async function declarations.
Add type annotations to suppress circularity errors
Initial implementation of control flow based type analysis
Merge pull request #7635 from Microsoft/considerAmbientAssigned
Always consider ambient variables assigned
Fixes issues with emit for cloned identifiers
Adds implicit "use strict" for amd modules and fixes issues with variable names and classes.
Fixes issue with variable declarations for modules
Merge pull request #7140 from Microsoft/strictNullChecks
Merge pull request #7622 from Microsoft/findAllReferencesForJSXTagNames
Accepting new baselines
Merge branch 'master' into strictNullChecks
Merge pull request #7595 from Microsoft/revertParseCompilerOptionsFromJson
Fix emit for accessors with missing bodies
Fixes emit for module/enum and single-line arrow functions.
Fix issue with find references for jsx tags
Merge pull request #7621 from Microsoft/dropInferenceLimit
added API sample to tests
Merge pull request #7591 from Microsoft/allow-merge-for-types-namespaces
drop inference limit
Routine update of dom-related lib.d.ts
Updated baseline
Added environment variable support to tests
Added environment variable to force experimental transformations.
Merge pull request #7604 from Microsoft/noPrimitiveUnionBreakdown
Update tests
Handle JSDoc tags on 'this' properties
Support this.prop = expr; assignments as declarations for ES6 JS classes
Accepted baselines.
Don't elaborate errors when trying to relate a primitive to a union.
revert changes in the signature of 'convertCompilerOptionsFromJson'
partially revert #7583
Merge branch 'master' into transforms
Merge pull request #6892 from Microsoft/transforms-visitor
Merge pull request #6983 from Microsoft/transforms-flags
Merge pull request #6986 from Microsoft/transforms-transformer
Merge pull request #6987 from Microsoft/transforms-printer
Merge pull request #7191 from Microsoft/transforms-transformer-ts
Merge pull request #7192 from Microsoft/transforms-transformer-jsx
Merge pull request #7193 from Microsoft/transforms-transformer-es7
Merge pull request #7194 from Microsoft/transforms-transformer-es6
Merge pull request #7206 from Microsoft/transforms-transformer-module
PR Feedback
Updated baselines
Fixed perf issue in binder, plus PR feedback
Merge pull request #7583 from Microsoft/colliding-local-import
rename LanguageService.getSourceFile to LanguageService.getNonBoundSourceFile and mark it as internal
Fix project updateing issue after editing config file
check if import collides with exported local name
Fix failed tests
Merge branch 'master' of https://github.com/Microsoft/TypeScript into fixLargeProjectTry2
Merge pull request #7567 from Microsoft/contextual-type-parameters
Make language service optional for a project
Merge pull request #7532 from Microsoft/declarationEmitFixes2
Addressed PR feedback
show completion in destructured parameter if containing function was contextually typed
Merge pull request #7555 from Microsoft/destructuring-variable-declarations
Merge pull request #7559 from Microsoft/rewrite-class-as-expr
addressed PR feedback
Speed up file searching
emit top level classes as class expressions when target=ES6 and module=System
Merge branch 'master' of https://github.com/Microsoft/TypeScript into fixLargeProjectTry2
Merge pull request #7522 from Microsoft/parseCompilerFlagsWithListOptions
fix comments
use downlevel destructuring for exported variables for target=ES6 if module kind is not ES6
Address PR
Address PR
Remove unused error message
Remove trailing whitespace
Remove unused error message
Remove --lib
Unify error message for custom-type compiler option
Update symbol baselines
Remove members from getAccessibleSymbolChain walk
Using ts.filter instead of just .filter
Handle default compiler-options and typing-options
Merge pull request #7525 from chuckjaz/sourceFile_callback
Merge pull request #7524 from Microsoft/rwcRunnerFixes
Adding sourceFiles to the Program emit callback
RWC runner fixes for reading json files
Add unittest for testing convert compiler-options and typing-options
Add a new unittest for command line parsing for --lib
Merge pull request #7521 from Microsoft/port7504
Port NavBar for JS improvements
Don't count current opened client file if it's TS file
online and offline CR feedback
Merge branch 'master' into strictNullChecks
Remove 'T?' notation from type-to-string conversion
Add unittest for parsing --lib in tsconfig
Add correct options for --lib
Chagne specifies -> specify
Add support for list types
Removing 'T?' type notation (use 'T | null | undefined' instead)
CR feedback / Change upper limit / Add disableSizeLimit compiler option
revert
Merge pull request #7507 from Microsoft/preprocessFindAugmentations
find module augmentations in preprocessor
Merge pull request #7500 from Microsoft/noImplicitReturnCtor
don't check that return statement has expression in constructors
Merge pull request #7409 from anilanar/allowOutWithNoEmit
add missing conditional check
Fix #7397: Remove error checks for noEmit and out* compiler options combined.
Add comments
Add upper limit for the program size, fix readDirectory for the symlink files
Rename --strictThis to --strictThisChecks
Fix issue writing too many files asynchronuslly
Remove 'undefined' from type of binding element with non-undefined default value
Merge pull request #7470 from Microsoft/port7466
Add 'undefined' to type of parameter with default value in signature
AllowJS files in tsserver when no project is given
cleaned up assertions and removed flattenNodes.
Removed NodeArrayNode in favor of arrays
Add support for array return values from visitors
Fix linting error
Removed ModifiersArray
Accepting new baselines
Support 'this' in type guards
Moved modifier related flags to separate enum
Merge pull request #7264 from RyanCavanaugh/umd
Merge pull request #7464 from Microsoft/capturedLetConstInDestructuringAssignment
Add `export = class` scenario
correctly recognize captured loop variables in destructuring assignment
Merge pull request #7455 from Microsoft/port7249
Merge pull request #7307 from zhengbli/fixFormatOnEnter
Better error message + fix assignment analysis of 'switch' statement
Addressed feedback
Fixed default import from export equals
Fixed es2015 imports from export=
Updated binding for module.exports
Revert "add part of test baselines"
add part of test baselines
Add test for function export
Reuse existing var
Add tests for each variant of UMD augmentation
After merge, update error numbers in baselines
Merge branch 'master' into this-function-types
Add missed update of thisInObjectLiterals baseline
Update baselines: 'this' in object literal methods
Check this expressions in object literal methods
Merge pull request #7451 from Microsoft/runtest-parallel-runs-lint
Merge pull request #7356 from Microsoft/fix7354
Merge branch 'master' into strictNullChecks
Merge pull request #7450 from Microsoft/noImplicitReturnsInAsync
Always run lint, even for runtests-parallel
Merge pull request #7448 from Microsoft/optimizeInstantiation
Adding comment to test
unwrap promised typed in async function before doing 'noImplicitReturns' check
Adding tests
Merge pull request #7442 from Victorystick/fix-property-shorthand-emit
Use existing function to resolve export= declarations
Support module augmentation
Support UMD when targeted module uses `export = `
Lint
Move checks from checker to binder
Address CR feedback
UMD support
Merge pull request #7449 from RyanCavanaugh/port6993fix
Add three tests
Fix duplicate errors in JSDoc function types with anon parameters
Skip unnecessary instatiation of anonymous types
System doesn't have direct identifier access in TS's generated code.
Fix shorthand properties for non-es6 module formats
Merge pull request #7439 from Microsoft/moduleAugmentationWithExportEquals
Handel module augmentation with export= var + uninstantiated module
Union this-types of unioned call signatures
Accepting new baselines
Adding another check for undefined
General fixes and cleanup
Fix issue with narrowing exported variables
Merge pull request #7396 from mattmccutchen/issue7359
Make 'undefined' assignable to 'void'
Improve type relationship error reporting for nullable types
Check return type includes 'undefined' in function with implicit return
Treat 'return' as 'return undefined' for type checking purposes
Proper handling of 'null' and 'undefined' in equals and not equals guards
Keep linter happy with fix in reduceLeft/reduceRight
Remove unused variable
Include 'undefined' in return type for implicit or expressionless returns
Fix bugs in reduceLeft and reduceRight
Add only 'undefined' to optional parameter types
Accepting new baselines
Introduce comparable (a.k.a. possibly assignable) relation
Removing unused functions
Expose ts.isExternalModule as public API.
Merge pull request #7392 from Microsoft/declarationEmitFixes
Extract and lift nullability over best common supertype
Code review comments
Consider for-in and for-of variables to be definitely assigned
Accepting new baselines
No widening of 'null' and 'undefined' types in --strictNullChecks mode
Fix #4506: Remove assert to allow for invalid patterns already flagged erlier by the checker
Fix #3810: Handel expressions in extends clauses
Fix #5651: Get the correct meaning for expressions in extends clauses
Reinstate separate type kinds for 'null' and 'undefined'
Fixed invalid assertion in ts transformer
Merge pull request #7309 from RyanCavanaugh/fix6878
Fix #7173: Widen the type do the defualt export expression before writing it out.
Merge pull request #7383 from Microsoft/removeCachePathFromDiscoverTypings
Removing cachePath from discoverTypings and DiscoverTypingsInfo. With the move to using the packageNameToLocation map it is no longer required.
Merge pull request #7358 from martine/empty-return
Merge pull request #7373 from Microsoft/limitInferenceDepth
in noImplicitReturns mode, also disallow "return;"
Accepting new baselines
Fix unit test
Allow 'null' and 'undefined' as type names
set the maximum depth to explore during type inference
Merge pull request #7371 from Microsoft/checkForWatchFile
Fix #7362: check for --watchFile in tsconfig.json as well as on the commandline
Update with master
Fixes CR feedback
Concat declaration error so we report them
Fixed labels
Assigned-before-use checking for non-nullable variables
Merge pull request #7350 from basarat/patch-1
Add tests
Merge branch 'transforms-transformer-module' into transforms-transformer-es6-generators
Switched to onEmitNode
Enable navigateTo on all projects for a file
Merge branch 'transforms-transformer-es6' into transforms-transformer-module
Switched to onEmitNode
Merge branch 'transforms-transformer-es7' into transforms-transformer-es6
Merge branch 'transforms-transformer-jsx' into transforms-transformer-es7
Merge branch 'transforms-transformer-ts' into transforms-transformer-jsx
Switched to onEmitNode
Enable findReferences on all projects for a file
fix(build) `TypingResolutionHost` interface is used by exported function `discoverTypings`
Merge branch 'transforms-printer' into transforms-transformer-ts
Switch from onBefore/onAfterEmitNode to onEmitNode
Enable rename on all projects for a file
Merge pull request #7348 from Vinatorul/issue6540
Added new diagnostics message to clarify error for type guards
Merge branch 'transforms-transformer-module' into transforms-transformer-es6-generators
Merge branch 'transforms-transformer-es6' into transforms-transformer-module
Fixed typo in visitCallExpression
ES6 cleanup
Merge pull request #7179 from Microsoft/jsTypingForAcquireDts
- Adding new lines after { for single-line if statements - Renaming DiscoverTypingsSettings to DiscoverTypingsInfo to match host
Merge pull request #7328 from Microsoft/flipSidesInSignatureCheck
- Removing filesToWatch from getTypingNamesFromNodeModuleFolder. These modules are already installed and are not expected to change
- Adding DiscoverTypingsSettings - Remove all references to Tsd. Instead pass a map of package names to cached typing locations
Merge pull request #7329 from Microsoft/allowFallFromLastCase
Update the format span end position for formatOnEnter
Merge branch 'transforms-transformer-es7' into transforms-transformer-es6
allow fallthrough from the last case of the switch
flip sides source and target when we check signature relations
Merge branch 'transforms-transformer-jsx' into transforms-transformer-es7
PR Feedback
Fixed visitJsxText, plus PR Feedback
Don't crash
Merge pull request #7326 from RyanCavanaugh/fix4577
Show aliases (e.g. imports) in JSX tag completion positions
Update to push types through as well
Merge pull request #7283 from Microsoft/noRedundantContinue
- replacing TryParseJson with existing readConfig - push error for invalid enableAutoDiscovery option - adding interfaces for jsons - removing updateNotFoundTypings - node_modules normalize file names before using - adding safeListPath to discoverTypings
Merge pull request #7324 from Microsoft/port7310
Changed how parserContextFlags are handled in tests
Fix failing JSDocParser tests
Add JavaScriptFile to ContextFlags
Merge pull request #7308 from RyanCavanaugh/fix7286
Support JSDoc on class / obj. literal getters
Don't crash if there's no JSX.Element during SFC resolution
Merge branch 'transforms-transformer-ts' into transforms-transformer-jsx
PR Feedback
Avoid removing indentation on a new line as trailing white spaces
Minor tweaks to naming
PR Feedback
Merge pull request #7298 from Microsoft/contextually-type-binding-initializers
Remove mistakenly added webTestServer files
Merge branch 'transforms-printer' into transforms-transformer-ts
Remove transformCompatibleEmit flag and make it the default.
PR Feedback and defer makeUniqueName/getGeneratedNameForNode to printer.
Support string literals+computed property names
Merge pull request #7299 from Microsoft/avoid-escape
Use single-quoted strings in certain places.
Allow single quoted strings when double quotes would otherwise need to be escaped.
Early support for generators.
Update baselines after merging with master
Add test cases and baselines.
Contextually type initializers of binding elements
- Removing ts. from jsTyping.js - Adding ".json" file extension filter when retrieving json files from host and removoing filter - simplify isTypingEnabled check
Accepted baselines.
Instantiate type parameters with themselves as their 'this' type when relating.
Accepted baselines.
Added tests.
Fix linting error
do not emit explicit 'continue' in converted loops
Accepting new baselines
Fix getTypeOfSymbolAtLocation to handle hypothetical lookups
Support dotted names ("x.y.z") in type guards
Adding optionalDependencies and peerDependencies to the list typings to merge in if present.
Merge pull request #7262 from Microsoft/stop-destructuring-private-properties
Move `checkClassPropertyAccess` call to `checkVariableLikeDeclaration`
CR feedback
Unify the use of "filter", "map" and "Object.keys" functions
Use errorNode everywhere in `checkClassPropertyAccess`
Tests for Stop destructuring assignment of private properties
`checkClassPropertyAccess` in `getTypeForBindingElement`
Revert "spelling fixes for src" on generated dom lib.
Merge pull request #7226 from Microsoft/bindingPatternsInTypes
merge conflicts
Merge pull request #7251 from Microsoft/exportEquals
emit temp declarations after export equals
Merge pull request #7246 from Microsoft/noImplicitReturnsWithProtectedBlocks
Merge pull request #7232 from Microsoft/invalid-this-emit-in-contextual-object
properly set reachable state after protected try\finally block
Fix linter comments
Merge pull request #7028 from jsoref/spelling
Code review comments
- renaming resolveTypeDefinitions to discoverTypings for consistency with jsTypings - simplifying typingOptions parsing after associated managed host changes
spelling fixes for src
Merge pull request #7203 from Microsoft/intersectionErrors
Add test and baseline
Defer-check function/method nodes even when context-sensitive.
Merge pull request #7228 from Microsoft/bundledDeclarationEmit
address PR feedback: add comments
avoid multiple passes over the program when computing diagnostics for the bundled emit
Code review comments
Do not add extra space for ommited expressions.
Add test
Correctelly serialize types with signatures containing binding patterns
Accepted baselines.
Never elaborate errors when relating from intersections.
Accepted baselines.
Added tests.
Merge pull request #7170 from masaeedu/addDeclarationDirOption
Fixed linter warnings.
Merge branch 'transforms-transformer-es6' into transforms-transformer-module
Merge branch 'transforms-transformer-es7' into transforms-transformer-es6
Merge branch 'transforms-transformer-jsx' into transforms-transformer-es7
Merge branch 'transforms-transformer-ts' into transforms-transformer-jsx
Reverted change to emitter to force use of printFiles
Fixed linter warnings
Merge branch 'transforms-transformer-ts' into transforms-transformer-jsx
Fixed linter warnings, added comments and minor cleanup.
Merge branch 'transforms-printer' into transforms-transformer-ts
Merge branch 'transforms-transformer' into transforms-printer
Updated lift behavior
Merge branch 'transforms-transformer' into transforms-printer
Removed unused liftNode function
PR feedback
Merge branch 'transforms-printer' into transforms-transformer-ts
Merge branch 'transforms-transformer' into transforms-printer
Fixed typo in visitEachChild
Reenabled transforms.
Make declarationDir invalid alongside out or outFile
Merge branch 'transforms-printer' into transforms-transformer-ts
Merge branch 'transforms-transformer' into transforms-printer
Added additional auto-parenthesizing to visitor.
Appease linter.
Accepted baselines.
Don't elaborate errors for relations from intersections to object types.
Using removeComments from commandLineParser. This is more robust as it removes both single and multiline comments
Merge pull request #7202 from RyanCavanaugh/fixlint
Merge branch 'transforms-printer' into transforms-transformer-ts
Merge branch 'transforms-transformer' into transforms-printer
PR Feedback
Accepted baselines.
Added tests.
Fix WS linter errors
Update LKG
Update baselines to make declarationDir invalid alongside out or outFile
Added temporary compat flag to control emit output to fix tests
Merge branch 'mihailik-patch-1'
Consolidate watch checks in one place
Merge branch 'patch-1' of https://github.com/mihailik/TypeScript into mihailik-patch-1
Merge branch 'transforms-transformer' into transforms-printer
Fixed issue with smartindenter
Adding devDependencies to the list of typings to merge
Switch let -> const from lint validation
Merge branch 'master' into jsTypingForAcquireDts
Addressing CR comments - Adding check to ensure TypingOptions 'include' and 'exclude' arrays are composed of strings - Allow leading whitespace when removing comments from json
Address PR feedback: expand ternary return into if block, add check to ensure proper options usage
Merge branch 'transforms-transformer-es7' into transforms-transformer-es6
Merge branch 'transforms-transformer-jsx' into transforms-transformer-es7
Merge branch 'transforms-transformer-ts' into transforms-transformer-jsx
Merge branch 'transforms-printer' into transforms-transformer-ts
Merge branch 'transforms-transformer' into transforms-printer
Fixed issue with test dependencies
Merge branch 'transforms-transformer-es6' into transforms-transformer-module
Merge branch 'transforms-transformer-es7' into transforms-transformer-es6
Merge branch 'transforms-transformer-jsx' into transforms-transformer-es7
Merge branch 'transforms-transformer-ts' into transforms-transformer-jsx
Merge branch 'transforms-printer' into transforms-transformer-ts
PR Feedback.
Fix new linter warning.
Merged some changes from other branches.
Merged some changes from other branches.
Merge branch 'transforms-transformer' into transforms-printer
Merge branch 'transforms-flags' into transforms-transformer
PR feedback
Merge branch 'transforms-flags' into transforms-transformer
Fix for new linter warning
Merged some changes from other branches.
Merge branch 'transforms-flags' into transforms-transformer
Merged some changes from other branches.
Merge branch 'transforms-visitor' into transforms-flags
Merged some changes from other branches.
Added initial SystemJS transformer.
Merge pull request #7188 from Microsoft/standardise-errors-on-not-prefix
Merge pull request #7184 from Microsoft/abstract-properties
Error messages consistently use non- prefix
Update error message as requested in PR comments
Merge pull request #7163 from Microsoft/cachePairs
Add abstract property tests and rebaseline.
Add abstract properties and accessors
Fixing lint issues caught by Travis CI build (Rules appear to be more strict - this was not caught on a local lint run)
Salsa: JS support for discovering and acquiring d.ts files (Mostly isolating VS host changes from PR#6448)
Fixes new implementation
Fixes method and constructor top-level
Added more tests and accept baselines
Addressed PR
Fixes if statement
Fixes typo
Adds navigation bar items on methods and constructors
Merge branch 'master' into strictNullChecks
Merge pull request #7165 from Microsoft/add-tests-for-let
Merge pull request #7164 from Microsoft/wordCleanup
Add declarationDir option
Accept baselines
Add testcases
Add sample files for testcases
Accepted baselines.
Added tests for ASI and element access with 'let'.
merge with origin/master
Merge pull request #7159 from tinganho/excludeOutDir
fix linter issues
do not make inferences with the same source\target pair multiple times
Fixes linting issues
Merge branch 'master' into strictNullChecks
Fixes outDir exclude
Added CommonJS/AMD/UMD module transformer
Adds ES6 transformer
Enables source maps for exceptions thrown in the compiler (when available)
Suport both x != null and x != undefined in non-null type guards
Merge pull request #7107 from Microsoft/ScriptBlockSupport
Change to getScriptKindFromFileName to avoid unnecessary array allocation in split
No bold "Fixes"
Merge pull request #7143 from SaschaNaz/formatJsxText
Merge pull request #7157 from Microsoft/enforce-identical-type-constraints
Rebaseline tests with improved error message
Address review comments
Rebaseline messages in existing tests
Merged classes and interfaces must have identical type constraints
Add cases and baselines from #6211 and #6210
Accepting new baselines
Support x == null and x != null in non-null guards. Also, allow == and != in type guards.
Merge pull request #7144 from Microsoft/super-inside-inner-class-crashes
Switch test encoding from UTF16 to iso-8859
indent 'from' again
merge conflicts
Merge branch 'master' into strictNullChecks
Merge pull request #7145 from tinganho/exclude
Applying getScriptKindFRomFileName to HostFileInformation before we set the ScriptKind. If the host returns ScriptKind 'Unknown' or 'undefined' we attempt to get the correct ScriptKind based on the file name. If this cannot be determined we return the default ScriptKind 'TS'
Add fourslash test
Fixes exclude options
removing some culturally senstive words
super's containing class doesn't require base node
format jsx
Merge pull request #7139 from Microsoft/revertBreakingChange
Firefox has Object.prototype.watch
parser and services changes due to CR comments - Adding assert to ensure script kinds are not modified for registered docs - setting script kind in parseSourceFile and consuming it initialize state and getLanguageVariant
Rever change to EmitOutput.diagnostics
Correct && operator to produce nullable values
Addressing CR comments - Adding ScriptKind to SourceFile - Only update ScriptKind on creation, on update use the SourceFile's scriptKind - If scriptKind is unknown, default to ScriptKind.Ts - Replacing try-catch with in this.shimHost
Accepting new baselines
Disallow line breaks between operand and '!' non-null assertion operator
Add '!' non-null assertion postfix operator
Merge pull request #7121 from falsandtru/patch-1
Accept baselines
Added tests
Allow private and protected class members to be accessible in nested classes
Merge pull request #7119 from Microsoft/checkRedeclarations
Modify version format
Add version examples
Merge pull request #7120 from RyanCavanaugh/addTemplates
Add issue and PR templates
correctly check exported type aliases merged with overloads
Removing trailing whitespace from services.ts
Merge pull request #7108 from Microsoft/Port7106
Fix lint errors
Fix to test harness and addressing CR comments
Port #7106 to master
Added initial ES7 transformer
Adds initial jsx transformer
Salsa: adding ScriptKind to ensure script blocks (.html, .aspx, .ascx, etc) are processed as JS
Merge branch 'transforms-transformer' into transforms-transformer-ts
Merge pull request #6885 from AbubakerB/constructorAccessibility
PR feedback, switched to getEmitScriptTarget/getEmitModuleKind
Merge branch 'transforms-transformer' into transforms-printer
PR Feedback
Merge pull request #7029 from Microsoft/implicitIndexSignatures
Merge branch 'master' into constructorAccessibility
Merge branch 'master' into this-function-types
Address more comments and remove temp test.
Merge pull request #7068 from Microsoft/relativeNamesInClassicResolution
Merge pull request #7067 from Microsoft/removePredicateTypinessToMaster
Merge pull request #7070 from Microsoft/fixTsconfigModuleOptions
Merge pull request #6881 from Microsoft/issue6872
Add missing semicolon
Add truthy/falsey guards for nullable types
Merge pull request #7033 from Microsoft/port6860
Exclude undefined/null from flags propagation within union types
Make types of optional parameters and properties nullable
Ensure empty array literal is assignable to array of non-null type in strict null mode
Support nullable types with expression operators
Don't widen undefined types in unions
Display support for nullable types
Introduce nullable types in checker
Accepting new baselines
Make undefined and null assignable to each other
Use TypeFlags.Undefined for both undefined and null types
Parsing of nullable types
Introduce -strictNullChecks compiler option
Included previously ignored baseline .js file and slight refactoring
Merge branch 'master' into constructorAccessibility
Updated tests
Added tests
Fixed wording and updated tests
Merge branch 'master' into issue6872
Load JS from node_modules
Merge pull request #7069 from Microsoft/stopIgnoringBaselines
Merge pull request #7062 from Microsoft/useAccessorNamesForErrors
Updated tests
Set experimentalDecorators warning for JavaScript
Allow decorators in JavaScript files
Updated tests and accepted baseline
Addressed PR
Merge branch 'transforms-transformer' into transforms-printer
Merge pull request #7065 from Microsoft/fixNodeResolutionForUnspecifiedModuleKind
Updates to TransformationContext and transformer.ts
PR feedback and cleanup
Added the accidentally-ignored js files.
Remove the 'module' option from 'tsconfig.json' files.
Ignore using the correct glob.
Remove unnecessary option from harness
added misssing files
Added tests and accept baselines
Allow extending and instantiating a private or protected class within itself
classic resolution: don't perform folder walk if module name is relative
Accepted baselines.
Fix fallback to classic resolution
Merge branch 'ts-master' into constructorAccessibility
Added tests for declaration emit.
Addressed CR feedback.
Fixed up fourslash tests to only test functions.
Removed trailing whitespace for linter.
Actually, it makes more sense to error on the predicate annotation than anything else.
Added tests.
Minor rename.
Error on nodes which should not have type predicates.
Move type predicates back onto signatures, remove narrowing for property/get type guards.
Merge branch 'transforms-flags' into transforms-transformer
Add test
PR Feedback
Merge branch 'transforms-visitor' into transforms-flags
Some cleanup and reorganization
Accepted baselines.
Merge pull request #7060 from Microsoft/fixrwc
Use names of accessors instead of their entire spans.
Address PR
Fix rwc in including files into compilation
Adds the TypeScript transformer
Merge pull request #7034 from Microsoft/portCommonJSDefault
Merge pull request #7055 from Microsoft/port7042
Fixed watcher for rename operations, and for allowJs in config file
Merge pull request #7041 from RyanCavanaugh/ignorejs
Merge pull request #7030 from RyanCavanaugh/fix7020
Merge pull request #7039 from Microsoft/fixFileExists
Ignore JS files under tests/cases/*
address PR feedback
fix 'fileExists' check by using stat directly
Fixing comment
Remove incorrect commment resulting from merging
fix falling tests and linter issues
Added module: none baseline
Added module: none as an option
Dont default to CommonJS modules for ES6 target
Added back errors for module kind none
Remove duplicate function from merging
Do not add minified JavaScript files on file crawl
Fix node_modules exclude
Fixed up paths in fourslash tests
Fixed up baselines
Removed errors for missing module specifier
Changed further defaults to CommonJS
Changed node_modules and module defaults
Port PR#6860 lexically check calling super before this
:heart: linter
Don't ever use resolveEntityName here
Correctly resolve qualfied JSX tag names
Add failing test
Removing unused function
Accepting new baselines
Merge pull request #7026 from jsoref/spelling
Infer index signatures when object literals contain computed properties
spelling fixes for src/compiler
Simplify indexTypesRelatedTo function
Reorganize related functions
Merge pull request #7010 from Microsoft/fixTDZ
Merge pull request #7008 from jsoref/spelling
split declaration and initialization of writer variable
Merge pull request #7007 from RyanCavanaugh/fix7002
spelling fixes for src/compiler/binder.ts src/compiler/parser.ts
Move suppress option to appropriate place
Check in other places too
:heart: linter
Add undefined checks for malformed type tags
Merge pull request #6995 from Microsoft/fixSourceMapsInBrowserTests
Adding test
fix source maps for in-browser tests
Revert hash object caching
Refine implementation
Merge pull request #6988 from jsoref/spelling
Accepting new baselines
Include index signatures in object literal types only when computed properties are present
Adds destructuring logic and placeholders for each transformer.
Accepting new baselines
Implicit index signatures for object literal types
Merge branch 'transforms-transformer' into transforms-printer
Fixed linter error
Added printer
Merge pull request #6932 from jsoref/spelling
Moved LexicalEnvironment to types.ts, minor fixes
Merge branch 'transforms-flags' into transforms-transformer
Moved TreansformFlags assertions after markers
Merge branch 'transforms-visitor' into transforms-flags
PR Feedback
spelling fixes for checker.ts, declarationEmitter.ts, types.ts
Create createHash and getModifiedTime under sys, and refactor implementation into compiler host
Merge pull request #6947 from Microsoft/operatorsAndIntersections
Merge pull request #6973 from Microsoft/docsGardenPath
Merge pull request #6952 from tinganho/goToNamedImport
Add 'wiki' and 'handbook' directories to the docs folder with READMEs.
Revert unioning of this argument types
Improve error reporting
Merge branch 'transforms-flags' into transforms-transformer
Merge branch 'transforms-visitor' into transforms-flags
Moved createNode back to parser, added local createNode to factory
Add missing tests from portfix6901
Improve display and contextual typing of `this`
Merge pull request #6961 from Microsoft/port6949
Fix emitted file extension for JavaScript files with JSX.Preserve
Fixes typo
Updated comment
Go to defininition should not go to named import
Accepting new baselines
Adding test
Rename allConstituentTypesHaveKind/someConstituentTypeHasKind to isTypeOfKind/maybeTypeOfKind
Correct handling of intersection types in allConstituentTypesHaveKind
Avoid writing files that are not changed while compiling incrementally.
Merge pull request #6884 from Microsoft/emitModulesInLooseMode
change flag name
Get contextual type of this parameter correctly
Merge pull request #6933 from Microsoft/portfix6901
Do not contextually type object callee arguments
spelling fixes for services.ts
Addressed PR
Port fix6901 from release-1.8 to master
Refactorings from review comments
Adds the transformFiles API
Merge branch 'transforms-visitor' into transforms-flags
Cleanup and reorganization of node tests
Add specific error messages for out-of-place this
Merge pull request #6869 from RyanCavanaugh/fix6811
First round of review comments addressed.
Merge pull request #6851 from RyanCavanaugh/fix6814
Added ArrayKind, moved createNode, changed JSDocParsing tests to use baselines.
Accept baselines
Addressed PR. Diagnostic messages
Merge pull request #6909 from Microsoft/fixBaselines
fix test baselines
Refactored visibility text on modifier grammar check
Merge pull request #6629 from LPGhatguy/master
Merge pull request #6898 from Microsoft/modifiedBlockScopedBinding
Accept baselines
Addressed PR feedback.
addressed PR feedback
Rename flag
Merge pull request #6858 from Microsoft/emitImportsInDts
Adds transform flags aggregation to binder and visitor
Update baselines
Added constructor visibility in the declaration emitter
Merge pull request #6870 from RyanCavanaugh/fix6825
Add more complex test scenarios
Merge pull request #6850 from RyanCavanaugh/fix6654
propagate back assignments to block scoped binding from the loop body
added tests
Merge remote-tracking branch 'origin/master' into emitImportsInDts
Merge pull request #6888 from jesseschalken/patch-1
removed unused function
Added visitor API
Fix Stack Overflow and Gitter links in CONTRIBUTING.md
Added and updated tests for constructor visibility
Added private and protected modifiers to constructors
Add flag to emit modules in loose mode
Update README.md
Use different syntax kind here
Merge pull request #6855 from Microsoft/destructuringInTypes
Addressing CR feedback
Capture `node.parent`
Recognize object literal method JSDoc comments
Recognize `=` as equivalent to `?` in JSDoc signatures
Update README.md
Update README.md
Merge pull request #6863 from plantain-00/i6844
Merge pull request #6862 from Microsoft/removeUnusedErrorMessage
fix error message with public class inside namespace
Remove unused error message
Merge pull request #5 from Microsoft/master
Merge pull request #6813 from Microsoft/port6745tomaster
Update error numbers in new tests after merge
Merge branch 'master' into this-function-types
Undo strictThis-clean changes
emit import declarations without import clause in .d.ts files
Merge pull request #6852 from viispade/erase-watcherPath-comment
Make this-type of bind's return explicit
Accepting new baselines
Adding test
Properly parse function/constructor types with destructuring parameters
Delete mention of nonexistent watcherPath param
Merge pull request #6709 from RyanCavanaugh/fix6662
:heart: linter
Allow parsing TS-style generics in JSDoc
Always show file tokens in JS completion lists
Merge pull request #6679 from RyanCavanaugh/fix6645
Merge pull request #6278 from Microsoft/theyreNotTHATSpecial
Merge pull request #6846 from Microsoft/noErrorOnEmptyDtsFile
do not error if typings for external library is empty .d.ts file
Merge pull request #6827 from T18970237136/ts-missing-semicolon
Merge pull request #6680 from RyanCavanaugh/fix6646
Update test files.
Add missing semicolon when emitting return statement.
Add malformed parameter test
Merge pull request #6587 from nojvek/master
Add some tests
Treat multiple prototype property assignments as union property declarations
Add more tests and baselines
Remove old baselines
Rename test cases so they are consistent with the rest
Update baselines
Fix lastEncodedSourceMapSpan from being set to undefined
Merge pull request #6798 from Microsoft/dottedNamesInJsx
Merge pull request #6803 from Microsoft/noDirExistsCheckInClassic
update baselines
fix linter issues
Merge pull request #6801 from Microsoft/weReallyNeedANewSyntaxKindForTheseExportsToMaster
don't do 'directoryExists' check in classic resolution scheme
Accepted that other baseline.
Accepted baselines.
Only error on 'export =' declarations.
Added tests.
properly classify dotted tag names in jsx
Merge pull request #6769 from zhengbli/updateLib20160131
Merge pull request #6789 from Microsoft/transpileJs
suppress validation of output paths in transpile scenarios
Merge pull request #6741 from RyanCavanaugh/fix6673
Fix lint
Merge pull request #6707 from RyanCavanaugh/fix6693
Merge pull request #6770 from Microsoft/dottedNamesInSystem
Merge pull request #6763 from Microsoft/classInterfaceCrossFileMerge
Merge pull request #6773 from Microsoft/nodeFlagsCleanup
Adding /*@internal*/ directives
Remove parserContextFlags from Node type
properly dotted namespace names in System modules
Renaming parsing context flags to NodeFlags.xxxContext
Merge ParserContextFlags into NodeFlags
Routine update of lib.d.ts 20160131
Removing MultiLine, Synthetic, DeclarationFile, and OctalLiteral flags
properly handle merged declarations across files
Merge pull request #6742 from Microsoft/augmentExportEquals
addressed PR feedback
Merge pull request #6760 from nojvek/fixTypo
Fix typo in compiler reactNamespace error string
remove uncommented lines
Merge pull request #6749 from pra85/patch-1
Typo fixes in CONTRIBUTING.md
Merge pull request #6743 from Microsoft/unpinMocha
Merge pull request #6684 from Microsoft/fixDecoratedClassName
unpin mocha version
allow augmentation for entities exported via 'export='
Fixes bug #6673
Update baselines
Fix free function bug in cachingInServerLSHost
Add tests and baselines for this-function types.
Merge branch 'master' into theyreNotTHATSpecial
Add overloads for Function.apply/call/bind
Add services support for this types.
Make compiler strictThis clean.
Add new error message and strictThis flag
Skip emit of this types as first parameter.
Check this type in functions.
Parse this type using parameter syntax
Merge pull request #6736 from Microsoft/crossFileDeclarationMerging
fix access check issues when declaration is in multiple files
Merge pull request #6688 from guybedford/system-module-id
set __moduleName from context.id argument
fix tslint
single iteration through children array without any array allocation
Merge branch 'master' into fixDecoratedClassName
Merge branch 'master' into fixDecoratedClassName
Add explicit `return undefined;`
Fix case when position === 0
Merge pull request #5833 from Microsoft/fix4211
Don't crash when return type jsdoc tag is malformed
PR feedback
Don't show the currently-completing thing at the cursor in JS files
Merge pull request #6704 from Microsoft/isRequireCall_fix
Merge branch 'master' into fix4211
fix linter issues
add extra argument to 'isRequireCall' to check if argument is string literal
Merge pull request #6702 from Microsoft/readonlyInDeclarationFiles2
Merge pull request #6699 from RyanCavanaugh/fix6663
Accepting new baselines
Adding more test cases
Emit readonly in declaration file for get-only accessors in classes
Merge pull request #6632 from zhengbli/fixFindAllRefForSalsa
Merge pull request #6698 from RyanCavanaugh/fix6552
Use union types in the return type of functions in the error case
Add more tests and comments
Recognize the RHS of assignments as the JSDoc target expression
Merge pull request #6697 from Microsoft/readonlyInDeclarationFiles
Adding test
Emit readonly in declaration files
Merge pull request #6683 from Microsoft/strip_quotes_in_modules_names
Update authors for release 1.8
Cleaned up variable names and conditions in checkIdentifier
Creates a class body scoped alias to the class to avoid class name double binding.
strip quotes from module names during deduplication
Merge branch 'master' of https://github.com/Microsoft/TypeScript into fixFindAllRefForSalsa
Updated test baselines
Parse JSDoc comments for ES6 class constructors and methods
Allow multiple 'this' property assignments in Salsa
Fix build error
Merge branch 'master' of https://github.com/Microsoft/TypeScript into fixFindAllRefForSalsa
add tests
Fix for thisProperty
Merge pull request #6631 from Microsoft/reservePromiseInTopLevelModule
Merge branch 'master' into theyreNotTHATSpecial
Merge pull request #5728 from Microsoft/pathMappingModuleResolution
Merge pull request #6553 from Microsoft/handleNestedBlockScopedName
Merge pull request #6532 from Microsoft/readonlyMembers
merge with origin/master
Merge branch 'master' into fix4211
Renumbering NodeFlags to start at 1 << 0
Merge pull request #6655 from Microsoft/pin_mocha_2.3.4
pin mocha version to 2.3.4
pretty output for react jsx
addressed PR feedback
Fixed typo in diagnostic message name
Fix find all references for salsa
Comments and messages
Merge pull request #6194 from Microsoft/fix4867_transpiling
Merge branch 'master' into fix4867_transpiling
Update baselines
Simplify giving error message and remove unnecessary error
Merge pull request #6628 from Microsoft/thisTypeAsConstraint
Updated baselines
Update Array.concat type signature to fix #6594
Merge pull request #5870 from Microsoft/alternateFixSuperInAsyncMethod
Added comments for new flags in types.ts
Added error when return type is not the global Promise
merge branch 'alternateFixSuperInAsyncMethod' into reservePromiseInTopLevelModule
Merge branch 'master' into alternateFixSuperInAsyncMethod
Moved isSuperPropertyOrElementAccess to utilities
break on 'this' type in hasConstraintReferenceTo
Merge pull request #6618 from Microsoft/versionUpdate
PR feedback
Update version
Merge pull request #6562 from RyanCavanaugh/jsIsJsx
Merge pull request #6512 from masaeedu/allowMissingReturnForVoidAnyUnion
Merge pull request #6597 from plantain-00/use_const_rather_than_var_when_target_es6
Lint
baseline-accept
update implementation based on the results of design meeting
Accepting new baselines
Adding tests
Merge remote-tracking branch 'origin/master' into pathMappingModuleResolution
Error for Promise redeclaration in module with async
Merge pull request #4 from Microsoft/master
Merge pull request #6602 from paulvanbrenk/master
use a local string rather than a function
Merge remote-tracking branch 'origin/master' into pathMappingModuleResolution
extract a helper method
Fix up todo in jsdoccomment template code.
a better way since languageVersion is a number
Accepting new baselines
Adding const/readonly to core.d.ts and es6.d.ts
Merge branch 'master' into readonlyMembers
Accepting new baselines
Fix tests
Include readonly in type equality checks + Treat more symbols as readonly
Merge pull request #6583 from falsandtru/fixWeakSetWeakMapClear
use `const` rather than `var` when emitting external import declaration and the target is es6
Merge remote-tracking branch 'refs/remotes/Microsoft/master'
Merge pull request #3 from Microsoft/master
Accepting new baselines
No readonly checks in type relationships + No assignments through namespace imports
Remove `clear` method in `WeakSet` and `WeakMap`
Merge pull request #6581 from RyanCavanaugh/jsDocFinal
Remove unrelated changes
Consolidate branches
Remove obsoleted test
Remove value-side JSDoc type lookup fallback
Remove unreachable code
Rename getTypeParametersFromJSDocTemplate
Remove incorrect changes from server.ts
Merge branch 'master' into jsDocFinal
Merge pull request #6575 from Microsoft/fixInt8ArrayIncludes
Fix 'includes' method in 'Int8Array'.
Accepting new baselines
Disallow assigments to exported variables from external modules
Merge pull request #6568 from YuichiNukiyama/fix4992
Add Array.prototype.includes
Merge branch 'master' into alternateFixSuperInAsyncMethod
Merge pull request #6545 from zhengbli/supportJsconfig
Merge branch 'master' into fix4867_transpiling
Address PR
set default module to commonjs for jsconfig.json
Merge pull request #6563 from Microsoft/reExportUndefined
Update LKG
handle undefined entry as export specifier
Treat .js as JSX
Add support for jsconfig in shims
Merge pull request #6495 from Microsoft/moveEmitFlagsToBinder
Updated failing test
Merge branch 'master' into moveEmitFlagsToBinder
Accepting new baselines
Fixing fourslash test
revert breaking changes
Make get only accessor compatible with writable property in type relationships
Updated nodeIsDecorated
Merge remote-tracking branch 'origin/master' into pathMappingModuleResolution
handle block scoped binding in nested blocks
Merge pull request #6546 from zhengbli/20160119UpdateLib
update lib from TSJS 20160119
Merge branch 'master' into theyreNotTHATSpecial
Merge pull request #6506 from Microsoft/awaiterUpdate
Add support for jsconfig.json in language service
Merge branch 'master' into moveEmitFlagsToBinder
Consider ReadonlyArray<T> an array-like type
Add ReadonlyArray<T> to core.d.ts
Addressed PR feedback: refactored away helper function, generated spec from docx
Accepting new baselines
Chaning "read-write" to "writable" in error messages
Merge branch 'master' into readonlyMembers
Accepting new baselines
Updating error messages
Allow 'readonly' only on property and index signature declarations
Allow assignments to readonly properties in constructors
Accepting new baselines
Fixing fourslash test
Support readonly indexers + include readonly modifier in typeToString
Refactor to introduce IndexInfo type
Removing unused function
Merge pull request #6142 from Microsoft/refactorSignatureRelatability
Merge pull request #6517 from Microsoft/dependOnNightlyPackages
Fix lint errors.
Go back to depending on nightly builds of TypeScript.
Accepting new baselines
Check readonly in assignments and type relations
Merge pull request #6213 from Microsoft/moduleAugmentations
Removed trailing whitespace
Allow missing return for unions containing any or void
Added test case
Merge pull request #6507 from JKillian/fix-prop-bug
Merge pull request #6509 from zhengbli/fixPathForWatcher
address CR feedback: use typeof check instead of checking undefined and null value
Merge pull request #6494 from Microsoft/addUndefinedCheckToCollectLinkedAliases
Fix the getCanonicalFileName in sys.ts and also check null value in file watcher call back
Merge branch 'master' into addUndefinedCheckToCollectLinkedAliases
Merge branch 'master' into alternateFixSuperInAsyncMethod
Fix issue #6478 (bug in the language services)
Add failing test
Updated version of __awaiter.
Merge pull request #6498 from Microsoft/convertLoopWithMissingInitializer
do not crash if initializer in For-statement is missing
Removed unneeded language version check.
Move emit helper flags to binder. Fixes #6113
Fix for https://github.com/Microsoft/TypeScript/issues/6428
Merge pull request #6493 from Microsoft/recommendStaticsFromNonStatics
Accepted baselines.
Look up static members from instance methods.
Accepted baselines.
Added tests.
Merge pull request #6330 from weswigham/restorative-narrowing
address PR feedback
merge with origin/master
Merge pull request #6469 from ShyykoSerhiy/fix-528
Merge branch 'master' into refactorSignatureRelatability
Merge branch 'master' into refactorSignatureRelatability
Merge pull request #6485 from Microsoft/contrib-updates
Back to booleans.
Update CONTRIBUTING.md
Merge pull request #6026 from zhengbli/i6016
Merge remote-tracking branch 'origin/master' into moduleAugmentations
Documented the 'ReportErrors' enum.
addressed PR feedback
Just check if the original type is a primitive instead of checking the apparent type.
Merge pull request #6484 from Microsoft/fixLinterInNightlies
Temporarily use an older nightly so builds can succeed.
Print the names of files being linted.
not casting relative filenames in 'tsc watch' to Path
Added missing semicolon.
Accepted baselines.
Don't report structural errors on primitive apparent types.
Propagate forced re-elaboration through relation functions.
Merge pull request #6227 from Microsoft/fix4581_inheritedPropertiesCrash
Accepting new baselines
Allow modifies on type members + introduce "readonly" modifier
Address PR
Merge pull request #6376 from Microsoft/fixFindReferencesOnExports
Merge branch 'master' into fixFindReferencesOnExports
Merge pull request #6472 from pcbro/pcbro-patch-1
changed messages text in checkAndReportErrorForMissingPrefix
Address PR
Use gender-neutral language
Update utilities.ts
cr feedback: simplify the removeFile function
changed name of checkForMissingPrefix to checkAndReportErrorForMissingPrefix
address PR feedback
Update the watchedFileSet to use Path instead of string for file names
fixed unqualifiedCallToClassStatic1 test
fixed scopeCheckExtendedClassInsideStaticMethod1 test
fixed scopeCheckExtendedClassInsidePublicMethod2 test
fixed recursiveClassReferenceTest test
fixed scannertest1 test
fixed parserindenter test
fixed parserharness test
fixed YieldExpression11_es6 test
fixed initializerReferencingConstructorParameters test
added check for missing prefix
added two new more specific messages
Merge pull request #5992 from Microsoft/allow-type-predicates-as-return-types-only
Make `parseTypeOrTypePredicate` terser.
Merge pull request #6358 from RyanCavanaugh/fix6349
Remove duplicated functions
Merge pull request #6447 from Microsoft/fixLibEs6
Fix lint issue
merge with origin/master
fix linter issues
accept baselines
merge with origin/master
add no-default-lib tag to core libraries
Merge pull request #2 from Microsoft/master
Merge branch 'master' into refactorSignatureRelatability
Merge pull request #6444 from Microsoft/errorOnReexportingGlobals
report errors when re-exporting globals
Merge pull request #6019 from Microsoft/sourceMapDestructuring
Tidy up unused comments / code
Don't rely on truthiness.
Merge remote-tracking branch 'upstream/master' into jsDoc2
Separate directory watching and file watching again to reduce logic complexity, because reference counting is a lot easier in this case
Merge pull request #6411 from Microsoft/classifyJsx2
Merge pull request #6440 from Microsoft/reverse-promise-all-overloads
Reverse order of Promise.all overloads.
Merge branch 'master' into fix4867_transpiling
Address PR
Merge pull request #6006 from Microsoft/fix5953_crashJSX
Merge branch 'master' into fix4211
Merge branch 'fix4211' of https://github.com/Microsoft/TypeScript into fix4211
update baseline from merging
Merge branch 'master' into fix5953_crashJSX
fix linter issues
added jsx classification support to fourslash and tests
Simplify JSDoc scanner loop
classify jsx text and jsx attribute values
Merge pull request #6406 from Microsoft/classifyJsxAttributes
recognize Jsx attribute in syntactic classifier
Merge pull request #6379 from Microsoft/forInChecking
Merge pull request #6400 from Microsoft/lkg-2016-01-08
Merge branch 'master' into refactorSignatureRelatability
Merge branch 'master' into theyreNotTHATSpecial
Update LKG.
Merge pull request #6391 from Microsoft/lintShims
Merge pull request #6394 from SaschaNaz/noSpaceBetweenCommaAndCB
Address PR feedback
Add tests
add more spaces on test
do not add space between comma and close bracket
spell our dir to directory
Merge remote-tracking branch 'refs/remotes/Microsoft/master'
Bump version to '1.8'.
Enable linting on 'shims.ts'.
scanJsIdentifier -> parseJSDocIdentifier
Merge pull request #5983 from SaschaNaz/formatWhitespaces
JSDoc identifiers must start with an identifier start
Merge remote-tracking branch 'upstream/master' into jsDoc2
Merge branch 'rwyborn-react-factory-option'
Fix whitespaces
Add check for reactNamespace value
Add new helper to check for valid identifiers
Add tests
Rename jsxNamespace to reactNamespace
Merge branch 'react-factory-option' of https://github.com/rwyborn/TypeScript into rwyborn-react-factory-option
Merge pull request #6202 from SaschaNaz/formatTemplateOptional
Merge branch 'master' into fixFindReferencesOnExports
Add test for renaming accorss modules using export=
Code review comments
Accepting new baselines
Check for numeric index signature instead of array-like type Better error message when object with numeric index signature is indexed with a string
Merge pull request #6235 from SaschaNaz/maintainShims
remove unneeded comment
thinner arrows
const everywhere
enclose entryName
resolve conflicts
Merge remote-tracking branch 'refs/remotes/Microsoft/master' into maintainShims
Merge branch 'master' into forInChecking
Updating tests
Support for-in both with and without variable declaration
Remove unrelated changes
merge with origin/master
Merge remote-tracking branch 'upstream/master' into jsDoc2
Merge pull request #6378 from Microsoft/directoryExists
Properly cache JSX element types for SFC expressions
Clean up unrelated changes
add optional 'directoryExists' method to hosts to reduce amount of disk probings that are known to fail
Better name for checkTypePredicate helper function
Accepting new baselines
Adding new tests
Updating existing tests
Change for-in iteration variable type from any to string
Add new test for import..require
Fix find all refs in shorthand properties for imports and exports
Merge pull request #6300 from zhengbli/syncTsjs20151230
Merge remote-tracking branch 'origin/master' into pathMappingModuleResolution
Merge pull request #6362 from Microsoft/Revert6098
Revert "Merge pull request #6098 from guybedford/master"
Merge pull request #6291 from RyanCavanaugh/fix6280
Fixed new linter warnings
Merge pull request #6361 from Microsoft/toStringTagLibEs6Dts
Accepted baselines.
Updated a test and added a new test for assignability betewen typed arrays.
Use string literals for '[Symbol.toStringTag]' properties.
Added '[Symbol.toStringTag]' properties to type arrays.
Added '[Symbol.toStringTag]' property to 'GeneratorFunction'.
Change logic in identifying SFCs
Merge remote-tracking branch 'origin/master' into pathMappingModuleResolution
Merge pull request #6355 from Microsoft/contextuallyTypeAndAndComma
Accepted baselines.
Added tests for LHS expressions.
Accepted baselines.
Contextually type the RHS of logical 'and' and comma expressions.
Added 'noImplicitAny' to tests.
Accepted baselines.
Added tests.
Merge pull request #6348 from Microsoft/tsxFormattingTests
added tests for tsx formatting
Merge pull request #6345 from Microsoft/langSpecUpdate
Merge branch 'master' into glob2
merge with origin/master
Merge pull request #6232 from Microsoft/contextuallyTypeJsxStringLiteralAttributes
Minor formatting fixes
Comment cleanup
Merge branch 'master' into langSpecUpdate
accept baseline
Updating language specification
Merge pull request #6098 from guybedford/master
Merge pull request #6212 from Microsoft/lint-nested-++
Fix lint in services/patternMatcher.ts
Merge branch 'master' into lint-nested-++
Update lint message to not mention element access.
Merge pull request #6290 from RyanCavanaugh/fix5865
Fix #6277 - stop looking for `any` specifically, and use isTypeSubtypeOf like the old code
Merge pull request #6287 from RyanCavanaugh/fix6241
Add test for non-used React import
update dom.generated.d.ts with latest version in TSJS repo
Merge remote-tracking branch 'refs/remotes/Microsoft/master'
Merge pull request #6279 from Microsoft/lintMoreServices
Merge pull request #4398 from SaschaNaz/formatTsxAttr
Issue correct errors for missing JSX closing tags
Add test to verify no error when 'React' is not in scope
Tag the 'react' import as used even under --jsx preserve
Make linter happy
Escape quotes when they appear as HTML entities in JSX text
Lint 'patternMatcher.ts'.
Allow tagged boolean arguments to be followed with a colon.
enable more than one callbacks for a watched file
Flattened 'ts.OutliningElementsCollector' to a single declaration.
Lint 'navigateTo.ts'.
Lint 'outliningElementsCollector.ts'.
Accepted baselines.
Added test from #6278.
Accepted baselines.
Updated tests.
Accepted baselines.
Don't skip over specialized signatures when checking for assignability.
Accepted baselines.
Removed checks for specialized signature compatibility and always perform the same checking on specialized and non-specialized signatures.
Accepted baselines.
Added tests.
use 'declare global' to define augmentations for the global scope
lets and template strings
remove "this should be removed ..." codes
Merge branch 'master' into refactorSignatureRelatability
Accepted baselines.
Simplified JSX contextual typing code and added support for contextually typing string literal attribute initializers.
Accepted baselines.
Added test.
address PR feedback
fix crashing when get documentHighlighting
Add documenthightlight tests
Add find-all-references tests
Add rename tests
Add tests for find-all-references
Merge pull request #6144 from Microsoft/langSpecImages
Merge branch 'master' into sourceMapDestructuring
Add test cases for breakpoint validation in for of statement with object literal destructuring assignment
Remove new lint from services.ts
Fix breakpoints in object literal pattern destructuring assignment
Merge branch 'master' of https://github.com/Microsoft/TypeScript into i6016
Merge branch 'master' into lint-nested-++
Fix ++/-- lint
Fix lint issues
Tighten no ++/-- rule
Test cases for object binding pattern destructuring assignment
Add test cases for array pattern destructurting assignment in 'for of'
Reuse watchers between 'watchDirectory' and 'watchFile'
Fix the breakpoint for comma expression
Test cases for array pattern destructuring assignment in for initializer
Implement breakpoint spans of array destructuring pattern of destructuring assignment
initial revision of external module augmentations
Remove unused error for this-type predicates.
Merge branch 'master' into allow-type-predicates-as-return-types-only
Merge remote-tracking branch 'origin/master' into pathMappingModuleResolution
Merge pull request #6200 from Microsoft/reportPreEmitDiagnostics
InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces
report pre-emit diagnostics that blocked emit
Merge remote-tracking branch 'refs/remotes/Microsoft/master'
Address PR
Add type alias for filewatching callbacks
Merge branch 'fix4867_transpiling' of https://github.com/Microsoft/TypeScript into fix4867_transpiling
Add tests
Test cases for breakpoints in assingment statement with destructuring
Add tests
Fix the breakpoint spans of call / new expressions
Merge pull request #6193 from Microsoft/fixUpFromPRs-2015-12-21
Accepted baselines.
Added positive test case suggested in #6129.
Fixups for #6163.
Merge pull request #6129 from pimterry/decorator-overload-msg
Merge pull request #6163 from DanCorder/5810
Fix the breakpoints in For Of destructuring
Test cases for destructuring in For Of statement
Test cases for breakpoint in destructuring of For Initializers
Implement breakpoints in paramters with destructuring binding pattern
Merge remote-tracking branch 'origin/master' into pathMappingModuleResolution
Fix prefix double underscore with extra underscore
Merge pull request #6164 from Microsoft/fileList
Merge remote-tracking branch 'origin/master' into pathMappingModuleResolution
Merge pull request #6111 from Microsoft/simplifyAbstractCheck
Addressing CR feedback
Merge pull request #6161 from Microsoft/makeExpressionNonOptionalInCaseClause
filelist -> fileList
Fix issue #5810 doubled comment on functions in array literals
Made 'expression' non-optional in 'CaseClause'.
Merge pull request #6157 from Microsoft/wrongExportInSystem
Merge branch 'master' into fix5953_crashJSX
only '++' and '--' unary operators can change exports
fix trailing whitespace
Merge branch 'master' into react-factory-option
Initial check in - Support other JSX factories Issue #3788
Merge pull request #6140 from Microsoft/noUnused
Merge remote-tracking branch 'origin/master' into pathMappingModuleResolution
Addressed CR feedback.
Merge pull request #6077 from Microsoft/superInObjectLiterals
Merge pull request #6084 from Microsoft/fix4686_fixrename
merge with origin/master
Fix merge error
Merge pull request #6104 from RyanCavanaugh/fix6029
Removed unused declarations from 'services.ts'.
Merge branch 'master' into noUnused
Merge branch 'master' into fix4686_fixrename
Merge branch 'fix4686_fixrename' of https://github.com/Microsoft/TypeScript into fix4686_fixrename
Address feedback
Merge pull request #6141 from Microsoft/linting_services
Remove unused variable
Use hidden text in Word document for markdown image links
Address feedback
Address PR feed back
Update assert msg
Accepted regressive baselines.
Update baseline from merging master
Have 'signatureRelatedTo' just use 'compareSignaturesRelated'.
Refactored most of 'isSignatureAssignableTo' to a more general function based on 'signatureRelatedTo'.
Merge pull request #6075 from Microsoft/overloadCompatibility
Added missing require for 'session' tests that relied on 'harness.ts'.
Merge remote-tracking branch 'origin/master' into superInObjectLiterals
Test cases for parameter destructuring pattern
Merge branch 'master' into fix4211
Adjusting indentation
Remove missed unused declaration from 'harness.ts'.
Property show images in Language Specification markdown
Fix the array binding pattern breakpoint span of variable declaration statement
Test cases for breakpoint span in array binding pattern of variable statement
Support for breakpoint spans in object binding pattern
Merge pull request #6036 from Microsoft/structural-enums
Get type of target enum outside the lookup loop
Add assertion to check that ranges-array is not empty so it doesn't silently fail
Get rid of list and map abstractions to reduce GC pressure
Removed unused declarations in 'harness/fourslash.ts'.
Removed unused declarations in 'server.ts'.
Removed unused declarations in 'session.ts'.
Removed unused declarations in 'editorServices.ts'.
Removed unused declarations in 'loggedIO.ts'.
Removed unused declarations in 'compilerRunner.ts'.
Removed unused declarations in 'harnessLanguageService.ts'.
Removed unused declarations in 'harness.ts'.
Removed unused declarations in 'emitter.ts'.
Removed unused declarations in 'sourcemap.ts'.
Removed unused declarations in 'parser.ts'.
Removed unused declarations in 'checker.ts'.
Removed unused declarations from 'declarationEmitter.ts'.
Removed unused declarations from 'core.ts'.
Removed unused declarations from 'sys.ts'.
Add 'no-unused-variable' to 'tslint.json'.
Add test cases for variable statements with destructuring breakpoint validation
Make changes to baselining breakpoint validation of current file to use default baseline name
Merge pull request #6136 from Microsoft/dontEditDocs
Merge branch 'master' into sourceMapDestructuring
Added README.md to 'doc' folder.
Improve decorator on overload error message (fixes #6064)
Address comments
Add debug fail when getting parameter-property declaration
Fix fourslash range annotation
Detailed comments for regular expressions and renamed some files.
Minor update to shims.ts for forthcoming VS support for globs.
more tests
Merge remote-tracking branch 'origin/master' into superInObjectLiterals
addressed PR feedback
Add enum/module merge test
Fix linter nits.
Use a comparison function instead of creating a new type for each signature.
Removing unused function
Simplify abstract constructor type assignability checking
Use nicer flag collection method
Revert linting services
Fix linting issue
Merge pull request #6083 from Microsoft/simplifyDeferredChecking
Merge branch 'master' of https://github.com/Microsoft/TypeScript into i6016
Use FileMap instead of string array
Merge branch 'master' into fix4211
Merge branch 'master' into glob2
Properly handle multiply-declared optional properties in JSX attr. type
Heavily revised implementation that relies on an updated 'readDirectory' API.
Merge branch 'master' into fix5953_crashJSX
Fix up fourslash test
Fix build error
Accepted baselines.
Added tests.
Merge branch 'fix4686_fixrename' of https://github.com/Microsoft/TypeScript into fix4686_fixrename
Fix linting issue
Fix linting issue
update System.register baseline with __moduleName output
Merge pull request #5876 from RyanCavanaugh/javaScriptPrototypes
Check for function flag on class symbol
Merge pull request #6091 from Microsoft/circularTypeofIssue
Fix broken tests
Merge remote-tracking branch 'origin/master' into pathMappingModuleResolution
add __moduleName to System.register
Adding regression test
Mark anonymous type as resolved before resolving call signatures
addressed PR feedback
Add tests for binding pattern in parameter property declaration
Fix comment
Accepting new baselines
Simplify deferred checking of function, class, and accessor bodies.
Merge branch 'master' into fix4686_fixrename
Fix linting
Update tests
Merge pull request #6058 from Microsoft/delayAccessorBodyCheck
Add tests
Initial fix for rename for parameter property declaration
Merge remote-tracking branch 'origin/master' into pathMappingModuleResolution
allow usage of 'super' in object literal expressions
Merge pull request #6074 from Microsoft/supportChakra
Merge pull request #6042 from weswigham/fourslash-this-predicates
Merge pull request #6076 from weswigham/fix-parens
trailing whitespace
accept baseline
make ChakraHost more generally usefull
Merge pull request #6044 from weswigham/redeclared-export-type
whitespace
Do some caching so that we don't repeat the same work for the implementation signature for every overload.
Reversed order of checks, since the implementation will typically be more general than the overload.
Accepted baselines.
Specifically test for 'void' to permit implementations to return more than what was guaranteed.
Accepted baselines.
Added tests for 'void' return type compatibilty on overloads and implementations.
Test cases for destructuring with default values in "for"
Accepted baselines.
Test cases for destructuring with default values in "for of"
Update tests
Fixed unnecessary error in test.
Test cases for destructuring with default values in parameter position
Merge branch 'master' into overloadCompatibility
Merge pull request #5860 from Microsoft/superPropertiesInES6
Test case for array binding pattern destructuring assignment with default values
Test case for variable destructuring statement with array binding pattern and with default values
Addressing CR feedback
Test case for variable destructuring statement with object binding pattern and with default values
Fix lint
Filter for enum members only.
Merge remote-tracking branch 'origin/master' into pathMappingModuleResolution
Merge pull request #6066 from zhengbli/i6016_for17
Rollback to polling file watching
split tests by completions/quick info
add feedback from PR
Remove includeGlobalSymbol boolean
fix linter errors
revert back to polling watching for approaching release
Update testcases
Merge pull request #5949 from Microsoft/typeParametersAsConstraints
Adding regression test
Defer checks of accessor bodies in object literals
Removed some unnecessary changes and added comments
Use typeof enum to resolve members.
Accepting existing test cases baseline after verification
If the destructuring assignment is synthetic use the left side as source map This helps in scenarios like below where the assignment is created synthetically for ({a} of {a: string}) { }
Tests for source map of variable declarations with binding pattern in differnt order in the declaration list
Add merged enum test
Handle merged enums
Fix the temporary assignment source maps in a better way This doesnt create synthetic nodes with source map node on them And makes us determine what to put source map on for temporary assignments
Adding tests
test for and fix #6043
Fix declaration emitter scoping issue for type parameter constraints
Adding test
Add tests from review
Address review comments
Add language service tests for this predicates
Add support for modifying last encoded source map's source location With this, we can just highlight the bindingElement when the temp variable for it is assigned. Note there are few scenarios like below which would still highlight let part but thats because of how default value source mapping is currently which is next in pipeline to support binding element with default values for (let {name: nameA, skill: skillA } of robots) {     console.log(nameA); } or for (let [numberA2, nameA2, skillA2] of robots) {     console.log(nameA2); }
Include fresh type parameters in type parameter mapper function
Rename parameter
Add test case and accept baseline
Compare enums semi-structurally.
whitespaces
getCurrentLeadingTrivia
Merge remote-tracking branch 'refs/remotes/Microsoft/master' into formatWhitespaces
applying three feedbacks
Merge pull request #5906 from weswigham/this-type-guards
Merge pull request #5972 from reavowed/master
accept baselines
Merge branch 'master' into this-type-guards
Fix too many watcher instances issue
reorder if
destructuring applied
most pr feedback
Merge pull request #6004 from Microsoft/IICEs
Simplify the array binding pattern element to determine what to highlight
Update existing baselines
Test case for sourcemap of "For of" that initializes vars using object literal binding pattern
Make sourcemap of "For" that initializes vars using object literal binding pattern better
Test case for "For" that initializes vars using object literal binding pattern
Test case for "For" that initializes vars using array binding pattern
Test case for "For of" that initializes vars using array binding pattern
Make the destructuring array literal assignment better with sourcemap
Test case for assignment expression with Array destructuring pattern
Test case for "For" statement with array binding pattern
Test case for "For" statement with object binding pattern
Test case for For Of statement with array binding pattern
Make the source map of "for of" destructuring - object binding pattern better
Test case for ForOf statement with object binding pattern
Test cases for nested array binding pattern destructuring in parameters
Test case for parameter array binding pattern
Better the destructuring of nested array binding pattern
Test case for nested array binding pattern
Better the sourcemap for array binding pattern
Test cases for variable statement with array binding pattern
Test cases for nested object binding pattern in parameter declaration
Tests for parameter object binding pattern
Make nested object literal destructuring pattern better
Test case for nested object binding pattern in variable statement
Better sourcemaps for destructuring
Test case for destructuring of variable statement
One more
Address CR feedback
crlf 2
crlf
resolve conflicts
remove whitespace
move blocker to nodeWillIndentChild
merge conflicts
Merge remote-tracking branch 'origin/master' into pathMappingModuleResolution
Update baseline from returning with unknownSymbol
Don't include completion in opening tag, include name of opening in closing tag
Update tests
Accepted project baselines over and over until I hit a fixed point where everything passes.
Accepted baselines.
accept new baseline
Added test for immediately invoked class expression.
Accepted project baselines.
Accepted baselines for non-project tests.
Updated unit test.
Moved a paren.
Merge branch 'master' into this-type-guards
preserve some old behavior at @DanielRosenwassers request
Merge pull request #5996 from RyanCavanaugh/fix5994
Improve comment
Accepted baselines.
Removed misleading comment from test.
grand unified theory of predicate types
Use different relation for overload compatibility.
Use logic for win
Merge pull request #4757 from SaschaNaz/indentSuppressor
Accepted baselines.
Added some tests for overload compatibility.
fix generic instantiation, nested this guards now work
Remove empty test.
Merge pull request #5993 from RyanCavanaugh/fix5991
Merge branch 'master' of https://github.com/Microsoft/TypeScript
Accepted baselines.
Fixed test to explicitly have return type annotation.
Address comments
Add full path to spec md file in generate-spec target
Merge pull request #5108 from Microsoft/elideExportStarForNonValues
merge with master
Merge remote-tracking branch 'origin/master' into elideExportStarForNonValues
Address comments
Merge pull request #5982 from zhengbli/updateLib
Fix up for 'async'
Changed name of 'reduce' method added to FileSet
Fixed typos in comments
Merge pull request #5988 from SaschaNaz/formatArrows
Disallow modifiers in object literal property assignment
Parse JSX attributes as AssignmentExpressions
Accept baselines
Move type predicate checking to checkTypePredicate
Add tests and accept baselines
Fix lint
Parse type predicates only in return types.
space around arrow
directly expose nodeWillIndentChild
Revert change to abstract-method-with-body error location
baseline accept
improvements based on comments
add tests for the issue
Fix issue: Confusing error message when calling value whose type is a union of types with call signatures
Merge remote-tracking branch 'refs/remotes/Microsoft/master'
update lib.d.ts from TSJS repo
Merge pull request #5981 from plantain-00/issue4448-2
Fix narrowing, interfaces. Expose issue with generic instantiation
Improve 'Cannot compile modules unless the '--module' flag is provided.' message
Added stubs to ChakraHost interface for readDirectoryNames/readFileNames
Merge pull request #1 from Microsoft/master
Merge branch 'master' into glob2
Merge pull request #5979 from DanCorder/5058
Added caching, more tests
Remove unnecessary I2 from test case
Merge pull request #5974 from RyanCavanaugh/fix5955
Actually include the fix....
Support 'this' in inferred method bodies
Fix for #5058 - Exclude implemented interface functions from autocompletion suggestions.
merge with origin/master, add trace message with type of 'typings' field is not 'string'
Identify JSX closing tags as identifiers so they emit correctly
Merge pull request #5973 from Microsoft/improve-type-of-Promise.all
Merge pull request #5971 from pimterry/typings-non-string
Explicitly list tuple overloads for `Promise.all`.
Limit error reporting for methods to the method name
Merge pull request #5970 from DanCorder/5497
Gracefully handle errors where 'typings' is not a string (fixes #4828)
Fix for issue #5947
Merge pull request #5559 from MartyIX/issue-4045
Addressing CR feedback
Fix linting errors
Accepting new baselines
Fix length check in typeArgumentsRelatedTo
Merge branch 'master' into typeParametersAsConstraints
Merge pull request #5942 from Microsoft/fixUnionToUnionTypeInference
Adding a bit more text to comments
Merge remote-tracking branch 'origin/master' into pathMappingModuleResolution
Merge pull request #5420 from weswigham/undefined-unique
Adding test
Fix union/union and intersection/intersection type inference
add baselines
break down tests, make more clear whats doing done, remove specific logic from mergeSymbolTable
Simplified JS prototype class inference
Merge pull request #5934 from Microsoft/inherit-construct-signature-from-extended-interface
Merge branch 'master' into undefined-unique
Merge pull request #5148 from weswigham/duplicate-export-behavior
Merge remote-tracking branch 'upstream/master' into javaScriptPrototypes
JS Prototypes WIP
Merge pull request #5939 from weswigham/use-strict-shebang
check for presence of array
Merge pull request #5937 from Microsoft/missingSemicolonInModuleSpecifier
Fix #5928 - Write line after shebang
fix typo, reduce nesting, defer array allocation until needed
parse module specifier as string (old logic is kept for better error recovery)
remove lint
Accept new baseline
Simplify check for constructors
Add test and accept baselines
Inherit construct signature for extended interface
Improved error messages for property declarations
Merge remote-tracking branch 'origin/master' into pathMappingModuleResolution
Merge pull request #5898 from Microsoft/fix3475_let
Merge pull request #5880 from Microsoft/supportChakra
first pass at this type predicate members
Merge pull request #5920 from Microsoft/fixUnionTypeInference
Only infer *to* type references that have explicit type arguments
Merge pull request #5839 from Microsoft/jsBinderErrors
remove unneeded cast
utilize type guard on type guard logic more
feedback from pr
Check for lenght of declaration instead
Merge pull request #5895 from Microsoft/unionTypeParameterInference
Update CONTRIBUTING.md
Update README.md
Update README.md
Initial support for globs in tsconfig.json
Merge pull request #5912 from sparecycles/fix-contributing-instructions
clarify documentation
fix instructions for contributing to lib.d.ts
Fix typo in the spec
Merge pull request #5909 from Microsoft/patch-stringify
Merge pull request #5908 from weswigham/esmodule-flag-es6
use typeof to check for presence of `JSON` global
fix esmodule big, unify export emit between es6/pre-es6
Add tests, remove internal annotation form enum
first pass at this type predicates
Merge remote-tracking branch 'refs/remotes/Microsoft/master' into indentSuppressor
Merge pull request #5777 from Microsoft/elaborate-interface-signature-errors
Adding test to demonstrate limits of signature identity checking
Removing comment from test
Add comment for use of isPrimitiveApparentType
Remove apparent type of primitives from errors
Merge pull request #5899 from Microsoft/fix4616_addtests
Strict mode errors
Fix linter error
remove line and unused code
Add more tests
All tests for using let
Check grammar for let/const declaration for all targets
Reachability errors
Strict mode errors
Multiple default exports error.
Duplicate symbol error
Simplified after CR feedback.
Merge branch 'master' into jsBinderErrors
Adding regression test
Ensure that different type parameters are never considered identical
Propagate 'this' type in constraint checking
Merge pull request #5881 from weswigham/rootdir-module-names
merge with master
dont canonicalize the filename when generating names, just use the absolute path
add tests
cr feedback
respect root dir/common src dir when generating module names
Merge pull request #5852 from holtwick/feature/await_for_es5
tweak rules
rule text fix
add new rule
Add support for Chakra Host in sys.
Accepting new baselines
Allow type parameters in constraints
Merge pull request #5875 from weswigham/no-in-rule
Merge pull request #5874 from weswigham/lint-all-things
lint rule forbidding the in keyword binary expression
Merge fixup
lint all filed before a failure
Merge pull request #5841 from Microsoft/fixAsyncReferencedImport
trio of missed style nits
Merge pull request #5596 from RyanCavanaugh/statelessFunctionComponents
Additional tests
Merge pull request #5866 from weswigham/unnamed-default-exports
Style nits for the style nit god
Merge pull request #5835 from Microsoft/noEmit
Merge branch 'master' into javaScriptPrototypes
Support for assignment/destructuring using super in an async method
Baseline update
Merge branch 'master' into statelessFunctionComponents
Fix #5844 - add many new tests covering named/anonymous default exports
Merge pull request #5736 from UBC-CPEN/issue-5173
Fix emit for type as expression
Fix whitespace issues
Simplifying the pre ES6 async/await change
Alternate approach to fix super calls in async methods.
Merge pull request #5836 from zhengbli/SyncTSJS
do not error on 'super' property access in ES6
Enable await in ES6 and ES2015 script mode
Change "object type literal" to "type literal"
fix merge issues
Merge remote-tracking branch 'origin/master' into pathMappingModuleResolution
Merge branch 'master' into fixAsyncReferecedImport
Merge pull request #5713 from Microsoft/noSourcemapNames
Merge branch 'master' into noSourcemapNames
Merge branch 'master' into noSourcemapNames
Merge pull request #5824 from Microsoft/implicitReturnInferredVoid
Merge pull request #5724 from Microsoft/sourceMapAndBreakpointDecorators
Merge pull request #5840 from Microsoft/fixExtraAwaiter
Merge branch 'master' into sourceMapAndBreakpointDecorators
Fixes #5789.
var rename as per PR feedback
Add test case for reporting file preprocessing error in javascript file
Report bind diagnostics, program diagnostics and file pre processing diagnostics in javascript file Handles #5785
Fixes #5564.
Merge pull request #5780 from Microsoft/extractSourceMaps
Do not emit files if noEmit is specified Handles #5799
rename tests, add another test, reoslve symbols for comparison
Sync the dom.generated.d.ts files from TSJS repo
Update baseline with new error message number and fix space and comment
Update baseline for new message
Address PR feedback
Merge pull request #5781 from Microsoft/fix4715
Add tests
Update baselines
Add tests
Fix where to report on error. Move from constructor node to just super node
Add basic check for use super before this
fix typo in comment
Merge pull request #5827 from Microsoft/shebangBeforeReferences
use const
Merge branch 'master' into fix4715
ignore all trivia except singleline comments when processing tripleslash references
fix lint errors
do not report 'noImplicitReturns' error if inferred return type of the function is void/any
Revert baseline changes to the objectTypeLiteralSyntax2 test
Merge remote-tracking branch 'origin/master' into pathMappingModuleResolution
Merge pull request #5566 from jeffreymorlan/fix5444
Add comment
Move initializer checks into checkGrammarProperty
Report property errors in the checker instead of the parser
fix module record nonambiguous case, add test for it
Merge remote-tracking branch 'origin/master' into pathMappingModuleResolution
accept baseline
Merge branch 'master' into duplicate-export-behavior
Merge pull request #5577 from weswigham/autohoist-default
accept new baselines
Merge branch 'master' into duplicate-export-behavior
Merge branch 'master' into autohoist-default
Merge pull request #5800 from weswigham/master
accept baselines
Include debug assert
update description
Merge pull request #5742 from Microsoft/applylinteronscripts
Merge pull request #5661 from weswigham/use-common-directory-for-out
Merge pull request #5648 from weswigham/default-commonjs-es6
accept projects tests baselines
Merge branch 'master' into use-common-directory-for-out
Merge remote-tracking branch 'origin/master' into pathMappingModuleResolution
addressed PR feedback
Test case for binder errors in .js file
Change variable naming
Simpler inline cycle check for stringify
Add tests for #5173
Missed linter error.
PR feedback
Merge pull request #5733 from Microsoft/unconditionalNoImplicitReturns
check for null
Improve variable naming
Improve error message
Only report errors from the first failure
Merge pull request #5782 from Microsoft/renameStringLiteralTypeFunctions
Renamed functions, fixed signature, removed TODO.
Add fourslash tests
Fix crushing of getting signatureDeclaration when we are not in function declaration
Removed isArray branch in checkCycles as it was unnecessary
removed typeof check for isArray
Minor stringify cleanup, added cycle detection for AssertionLevel.Aggresive only.
addressed PR feedback
minor tweak to null handling in stringify
merge with master
Merge pull request #5725 from Microsoft/stringTypesCleanup
Merge branch 'master' into sourceMapAndBreakpointDecorators
Merge pull request #5765 from weswigham/emit-module-in-strict-mode
only emit use strict if a use strict prologue isnt found
Merge pull request #4883 from SaschaNaz/tsconfigpath
Accept baselines
Elaborate interface signature errors
Merge pull request #5738 from Microsoft/unionIntersectionTypeInference
removing filename requirement
Extract source map generation logic out of the emitter.
accpet new baseline
Merge branch 'master' into emit-module-in-strict-mode
Add comments, change error message
ending the pain and suffering of the projects tests
projects tests are maddening
projects teeests
accept new projects baselines
fix transpile unit tests
Accept so many baselines
add strict mdoe directive to all nones6 module emits
Merge pull request #5759 from Microsoft/bangInModuleNames
Merge pull request #5761 from Microsoft/fixErrorElaboration
fix lint errors
Accepting new baselines
Adding regression test
new tests
Update relation cache after we decide to elaborate an error
do not treat modules with '!' in names any specially
change enum emit
fix whitespace
fix ES6 emit for namespaces to only emit one export binding
Correct comments, use destructuring
addressed PR feedback
Merge pull request #5747 from Microsoft/thisWithLetConst
address PR feedback - fixed typo in comment
correctly capture 'this' when converting loops into functions
Merge branch 'applylinteronscripts' of https://github.com/Microsoft/TypeScript into applylinteronscripts
apply tslint rule to scripts\tslint
apply tslint rule to scripts\tslint
Fix linting errors
Merge branch 'master' into autohoist-default
Accpet new baselines
Clarify comment
Merge branch 'master' into use-common-directory-for-out
Fix object type literal regression
WIP
apply 'noImplicitReturns' check for functions that don't have type annotations
Merge pull request #5726 from Microsoft/cloneNode
Minor comment update
Modified cloneNode to ignore own properties of clone.
Accepting new baselines
Adding tests
Reduce union and intersection types before inference
Implement #5173
verbose module resolution
merge with master
Merge remote-tracking branch 'refs/remotes/Microsoft/master' into tsconfigpath
Merge remote-tracking branch 'refs/remotes/Microsoft/master' into tsconfigpath
Minor change to getStringLiteralType
Adds a generic algorithm to create a shallow, memberwise clone of a node.
Adds StringLiteralType to SyntaxKind to disambiguate string literals in a type position.
Decorators node array should have pos at token @ instead of actual decorator expression
Breakpoints on the node with decorator should start at actual syntax and not from decorators
Setting breakpoint inside decorator expression results in setting breakpoint on all the decorators On resolution, this would be call to __decorate
Test cases for breakpoints with decorators
Fix the source map emit for decorators Handled #5584
When the node contains decorators the actual start of the node is after skipping trivia from decorators end
Merge pull request #5471 from Microsoft/jsFileCompilation
Merge pull request #5719 from Microsoft/typesCleanup2
Comment cleanup.
Merge pull request #5605 from Microsoft/useprintVersion
invert the conditional I was asked to invert
Merge branch 'master' into duplicate-export-behavior
factor for loop into filter, minor style changes
Merge branch 'master' into useprintVersion
I forgot to commit the baselines. T.T
Merge branch 'master' into use-common-directory-for-out
Merge pull request #5626 from weswigham/type-guard-narrowing
Adds minimal support for 'this' types in decorator metadata, emitting 'Object' for now.
initial implementation of path mapping based module resolution
add a new test
Refactor getCommonSourceDirectory into a closure function
Update test baselines
Dont emit names index mapping into the sourcemap Since sourcemap spec is not very clear about symbol translation and use of nameIndex of the mapping, dont emit it
remove comment
Add a test which uses common src dir in a different way
only make common dir on call
Merge branch 'master' into use-common-directory-for-out
Merge branch 'master' into jsFileCompilation
PR feedback
Remove unnecessary 'else' block.
Merge remote-tracking branch 'refs/remotes/Microsoft/master' into tsconfigpath
Merge pull request #5709 from Microsoft/fixPreferConstRule
Small refactorings.
Simplify simplify simplify.
Fixed invalid code for binding expressions.
const
Merge remote-tracking branch 'refs/remotes/Microsoft/master' into tsconfigpath
Merge pull request #5706 from Microsoft/nameResolutionForParameters
Merge pull request #5590 from weswigham/compute-common-source-dir
disallow references to function locals from return type annotations
update test with pr feedback
Merge branch 'master' into type-guard-narrowing
do not resolve parameters/type parameters if it is requested from restricted locations
only check against default flag
Merge pull request #5701 from Microsoft/cleanupWork
Merge branch 'master' into default-commonjs-es6
use getCanonicalFileName on path fragments as in other utility methods
Clean up unnecessary comment annotations
Merge pull request #5597 from Microsoft/typesCleanup
Adds ThisType to SyntaxKind, to distinguish between a 'this' expression and a 'this' type. Needed for transforms
Merge branch 'master' into compute-common-source-dir
addressed PR feedback
clean residual state in binder and emitter, clean test data in version cache test
Merge pull request #5698 from Microsoft/paramPropertyDocComment
Merge pull request #5690 from Microsoft/harnessCleanup2_WIP
When constructing signature, include parameter symbol instead of property symbol of parameter-property declaration Fixes #4566
addressed PR feedback
Merge pull request #5697 from Microsoft/harnessCleanup3_WIP
Merge pull request #5692 from Microsoft/fileNamesConsistencyCheck
Merge branch 'master' into jsFileCompilation
switch fourslash to use local test state
Change the api for node name resolver to take compiler options instead of supportedExtensions
remove Tao generation
use normalized absolute file names when doing consistency check
Merge remote-tracking branch 'origin/master' into harnessCleanup2_WIP
Merge pull request #5679 from wix/browser-test-fix
Merge branch 'master' into browser-test-fix
added default chrome path for Mac OS X
cleanup harness code
Merge pull request #5670 from Microsoft/noCrashWithNonMergedOverloads
do not crash when variable and function declarations collide
Merge pull request #5617 from Microsoft/dogfoodStringLiterals
Merge branch 'master' into dogfoodStringLiterals
Merge branch 'master' into compute-common-source-dir
Merge pull request #5665 from weswigham/so-many-lint-fixes
fix many lints
Merge pull request #5622 from weswigham/tslint@next
and somehow all that caused was a lint error
:S
Merge branch 'master' into compute-common-source-dir
get projects dts back
handle things more rightly
Merge pull request #5655 from Microsoft/harnessCleanup
Merge branch 'master' into use-common-directory-for-out
in declaration emit, handle = require (again)
fix typo
Merge pull request #5662 from Microsoft/overloadsAndMergedDeclarations
Merge pull request #5660 from weswigham/undefined-type-guards
accept corrected projects baselines
Always compute a common source directory for a program
Load only typescript files if resolving from node modules
do not crash if overloads cannot be merged under one symbol
use common source directory for module paths
accept baselines for new test
ignore undefined type guards
Merge branch 'master' into jsFileCompilation
exhaustive tests
Merge pull request #5593 from zhengbli/i5530
cleanup test harness code
test, first pass at a fix
Merge pull request #5193 from Microsoft/namespace-before-ambient-derived-class-finds-heritage
Merge remote-tracking branch 'refs/remotes/Microsoft/master' into formatWhitespaces
accept baselines for new tests
Fix class exports with varrying module emits while targeting es6
fix handling of decorated default exports on es6 with nones6 modules
add decorator flag to tests
handful more tests
Add a handful of tests
Go all the way back to the original solution
Merge pull request #5643 from Microsoft/lambdaSourceMap
Merge branch 'master' into compute-common-source-dir
use relative path from current directory
Merge pull request #5641 from RyanCavanaugh/fix5634
When excluding same base name file from compilation, check for all supported javascript extensions instead of just .js
Fix the sourcemap emit of lambda expression without return on another line Handles #5122
Test case for multiline spanning without return statement
go go go
Merge pull request #5636 from bootstraponline/patch-1
Simplify regex a bit
Simplified logic of getting files if files werent suppplied in tscconfig.json Since we dont support arbitary list of extensions to treat as .js, it becomes easier to simplify code based on the assumptions
Missed some errors
Merge pull request #5639 from Microsoft/typecheckStatementsInCaseClause
Update react.d.ts from DefinitelyTyped
Removed the TODO as created bug for it
Remove debugger statement from test
Merge pull request #5620 from Microsoft/inlineSourceMap
Fix lint compliant
Adding test and comments. Override file content even if already opened.
Use https for badges
Quote only names that need to be quoted, not the reverse
always check statements in case clause
Merge pull request #5633 from mihailik/patch-4
Encoding bug
Update authors for release 1.7
Merge pull request #5628 from Microsoft/checkOnMissingFile
added missing check if file is specified
PR feedback
Merge branch 'master' into compute-common-source-dir
add condition to bail at containing level
loosen walk up containers, add extra test
Merge branch 'master' into undefined-unique
this should work better than dedupe
because it needs to work with npm 2 as well
use tslint@next
Merge pull request #5618 from Microsoft/LKG-11-11-2015
Fix the --sourceRoot and --mapRoot option handling
Test cases to verify --inlineSourceMap with --sourcemap --mapRoot and --sourceRoot Note that --sourceRoot fails with crash
Test cases for --sourceMap --inlineSources option
Merge pull request #5442 from weswigham/empty-set
Merge pull request #5615 from Microsoft/getContextualTypeServices
Use string literal types in the command line parser.
Updated LKG.
Added test.
Merge pull request #5583 from basarat/ls/jsxSemantic
Merge pull request #5569 from mihailik/patch-2
Merge pull request #5588 from Microsoft/reexport-default-export
Merge branch 'master' into compute-common-source-dir
remove whitespace
Use 'getContextualType' for 'getContextualType'.
Remove now-unused function
cr feedback
Merge pull request #5607 from Microsoft/fixTypeApparentization
Move export default check before module merge one
Added to comment.
Accepted baselines.
Only get the apparent type when necessary.
Use printVersion instead
CR feedback
accept new baselines
fix lints
Merge branch 'master' into duplicate-export-behavior
extract method
Missed some baseline files; address CR feedback
Added tests for string literal types used as generic constraints.
Merge branch 'master' into typesCleanup
Merge pull request #5589 from weswigham/tsconfig-error-handling
Add file content as a parameter for the tsserver open command
Cleanup of types
use canonical filename function
Handle when using -p and config file not found
Merge pull request #5575 from Microsoft/apply-captured-outer-type-parameters
Change back from jsdoc comment.
Merge pull request #5535 from Microsoft/computedPropertiesInDestructuringPR
Support to tests for absolute paths, add common src dir edgecase tests
Improve comment
Accepted baselines.
Test cleanup
Added other tests for string literal types.
Cleanup
merge with master
Add handling for json parse errors
Merge branch 'master' into statelessFunctionComponents
Add case sensitivity-check, only error on failure when outDir is specified and resource based paths are found
Merge pull request #5266 from Microsoft/javaScriptModules
Added test for parenthesized string literals.
Add test case and accept baseline
Prevent resolveName from ignoring default exports
Improve efficiency and naming
tsx : support tags in language service semantic tokenizer
JSX SFC WIP
Add test case
Merge pull request #5185 from Microsoft/stringLiteralTypes
Merge pull request #5511 from Microsoft/skipDefaultLibCheckWithNoDefaultLib
Fix TC
use typeof
Merge pull request #5576 from Microsoft/importsInShorthandProps
Address comments
Merge remote-tracking branch 'origin/master' into javaScriptModules
Accepted baselines.
Get rid of the concept of 'isDefaultLib'.
Add command line flag to allow synthetic default exports
Removed no-default-lib comment from test case.
addressed PR feedback
use modulekind to check if initializer for shorthand property assignment should be emitted
Merge pull request #5385 from weswigham/5378-equality-fix
Fixed comments.
Accepted baselines.
Merge pull request #5090 from weswigham/out-module-concat
WIP
fix lints
Fix merge problems from master
Added tests for template strings with string literal types.
Merge branch 'master' into out-module-concat
Merge branch 'master' into empty-set
Merge branch 'master' into 5378-equality-fix
Merge pull request #5536 from Microsoft/travis-stable
Fix new and improved linter errors
fix merge issue
Merge branch 'master' into apply-captured-outer-type-parameters
Fix linter error
Merge branch 'master' into elideExportStarForNonValues
Merge pull request #5561 from Microsoft/oneEmitter
More test cases and accept baselines
apply captured type parameters to returned classes
Use ts.indexOf instead of Array.prototype.indexOf
Use ts.indexOf instead of Array.prototype.indexOf
Fix issue #5444
do not report 'excess property error' if object literal pattern contains computed properties
remove nodeConstructors array, replace it with single local
Merge pull request #5092 from tinganho/instanceOfElseClause
Merge branch 'master' into javaScriptModules
Merge pull request #5552 from Microsoft/thisAndConstraints
Merge branch 'master' into oneEmitter
Merge branch 'master' into javaScriptModules
make emitter singleton, replace reading file properties with local access, use one constructor function for all nodes
Merge pull request #5555 from Microsoft/addGetCurrentDirectory
Const.
Don't look for .js files when resolving node modules
Accepted baselines.
Fixed unreachable code in tests.
Add getCurrentDirectory to call to createDocumentRegistry
Rename `isTsx` for clarity
Merge remote-tracking branch 'origin/master' into stringLiteralTypes
Accepted baselines.
Added specific checks for comparing stringlike types.
Merge branch 'master' into jsFileCompilation
Accepting new baselines
Updating existing test
Adding test
Instantiate type parameter constraints with type parameter as 'this'
PR feedback
Merge pull request #5459 from Microsoft/partialSignatureMatching
Addressing CR feedback
Merge branch 'master' into comparableRelation
Accepted baselines.
Changed type assertion error message.
merge with master
Merge https://github.com/Microsoft/TypeScript into formatWhitespaces
merge with master
Merge branch 'master' into 5378-equality-fix
Merge pull request #5531 from weswigham/prefer-const
for..of loops
Reword predicate to be more readable
Have travis build against node 5
allow computed properties in destructuring, treat computed properties with literal expressions similar to literal named properties
I love fixing lints on my linter code
fix lint: prefer const
Add prefer const rule
Accepted baselines.
'with' to 'to'
Style.
Merge pull request #5527 from Microsoft/updateDefaults
Merge pull request #5519 from Microsoft/noReachabilityErrorsOnEmptyStatement
Update default configurations
do not report 'unreachable code' on empty statements
Appease the almighty linter.
Accepted baselines.
Updated error message.
Improve test case and add working comparison
Merge pull request #5514 from Microsoft/relativePathInErrorReporting
Merge branch 'master' into empty-set
const all the things
Use relative file name when reporting errors
SFCs for JSX WIP
Fixed comment.
Skip files with no-default-lib when '--skipDefaultLibCheck' and '--noLib' are used.
Merge pull request #5454 from MartyIX/issue-4841
Support '/dev/stdout' as a valid '--out' parameter
Merge pull request #5503 from Microsoft/libReadmes
Merge pull request #5461 from Microsoft/contributingLibFixes
Added 'lib/README.md' to .npmignore.
Update CONTRIBUTING.md
Update CONTRIBUTING.md
shorten function
Added 'README.md' files to 'lib' and 'src/lib'.
Merge branch 'master' into out-module-concat
feedback from CR
Merge pull request #5502 from Microsoft/usePretty
Use '--pretty' in builds.
Updated LKG.
Fix description of '--pretty'.
Merge pull request #5140 from Microsoft/iFeelPrettyErr
;
Merge branch 'master' into iFeelPrettyErr
Merge branch 'master' into iFeelPrettyErr
Update baselines
Forget about tty detection. It won't work in build tools.
Merge pull request #4788 from Microsoft/reachabilityChecks
Just name the option 'pretty' for now.
Added colors to diagnostic types, addressed some CR feedback.
dont mutate
Merge pull request #5450 from sarod/allow-comments-tsconfig
Merge pull request #5472 from MartyIX/issue-5183
Merge pull request #5474 from Microsoft/forbid-this-as-constructor-parameter-type
fix nits
Add a variable of type `this` in constructor body
Add initial test
Preserve copyright comments when generating d.ts files
Use regex for repacing comments content. Use space for indents
New commit using TS scanner.
Switch to `isNodeDescendantOf`
Fixed 'tsconfig.json' ordering.
Merge branch 'master' into iFeelPrettyErr
Merge pull request #5477 from Microsoft/mutatedArrayInForOf
Accepted baselines.
Moved test.
prevent absolutre paths from leaking through error baselines
Accepted baselines.
Always generate an identifier in a for-of loop.
Use of FileMap instead of Map as per PR feedback
accept new baselines postmerge
Merge branch 'master' into out-module-concat
Accepted baselines.
Added failing test.
Take pr feedback into account
Simplifty declaration emitter logic by using forEachExpectedEmitFile
Fix `isConstructorParameter`
feedback form pr, new baselines
Accept baselines
Add tests based on #5449
Forbid 'this' as constructor parameter type
Simplify logic to get declaration diagnostis
Simplify verification of emit file paths using utility to iterate over each emit file This also makes sure we dont emit --out or --outFile if there are no files that can go in that file(non module and non declaration files)
Create a utility to iterate over each emitFileName and use it in emitter TODO: declaration emitter to use this utility TODO: emit file name compiler option verification to use this utility
Human-readable fourslash debug output for completion lists / quickinfo
Inference from JavaScript `prototype` property assignments
Merge branch 'master' into jsFileCompilation
Some refactoring as per PR feedback
Since js extensions are not user specified, no need to check if source map file will overwrite input file
Update the error messages as per PR feedback
Report error if --allowJs option is used along with --declaration
Do not emit declarations for javascript files
Merge branch 'master' into out-module-concat
Merge pull request #5469 from Microsoft/improve-constructor-object-return-error-message
Merge pull request #5462 from Microsoft/useResolvedFileNameWhenResolvingImports
addressed PR feedback: renamed 'toRelativePath' to 'convertToRelativePath'
Merge branch 'master' into jsFileCompilation
Accept baselines
Add more detailed error message
that feling when you ctrl-z 1 too many times
More correctness
feedback from pr, new tests
Update CONTRIBUTING.md
remove 'path' suffix from FileMap methods
Accepted baselines.
Renamed test directory.
Renamed the relationship back to "comparable".
introduce Path as branded string type, switch FileMap to use Path
Update documentation for fixing lib issues
Use CharactersCodes and isLineBreak in conditions
Adding test
Correct partial signature matching
FileMap now internally stores absolute normalized file names
use resolvedFileName as is when calling methods on host
merge with master
Fix handling of escaped characters in string
Allow comments in tsconfig.json issue #4987
Merge pull request #5440 from Microsoft/lintServer
Accepted baselines.
Matchable should have no effect on intersections.
Added tests on intersection types.
Accepted baselines.
Merge pull request #5422 from weswigham/const-enum-deprocdessing
update error
Tests update after declaration file emit revert
Revert the change to block declaration emit in case of syntax or semantic errors
Treat the .jsx and .tsx files as jsx when parsing and .js files are parsed in standard mode
restore any narrowing
Since there arent any user given extensions, have extensions start with "." like before
Improve type narrowing algorithm with typeof
lint node.d.ts
Remove extensions doesnt need to depend on compiler options any more
lint server
Remove the logic for parsing compilation of comma seperated list of strings on command line Also removed logic to accept multiple values for the option
Merge pull request #5375 from MartyIX/issue-5109
Merge pull request #5429 from Microsoft/fixAsyncTypeAlias
Test baseline update because .map cannot be a valid js file anymore
Test update for using allowJs instead of --jsExtensions
Instead of --jsExtensions support --allowJs with .js and .jsx as supported extensions
naive change and new tests
Linter errors
Update LKG
Fix #5430: Use FileMap instead of a simple Map for storing file list in tsserver
Some tests to cover transpilation of different syntax
Test cases to verify that declaration file is not emitted if any of the declaration file in program has error
Some test cases to verify that declaration file overwrite is reported correctly
Populate if emit was skipped correctly as part of emit result
Check source map files are being overwritten
Do not emit declarations file if we reported error about inaccessible This type
Tests update for emitting declarations if no errors
Dont emit declaration file if there are errors in the source file
Refactoring to fix build issues
Update LKG
Remove async from builtGeneratedDiagnosticMessagesJSON task
Add warning message empty THEN clause
Use resolvedSymbol instead of mergedSymbol. Fixes #5333.
Rename the relationship to "matchable by".
Avoid a redundant stricter check when using the new relation.
Check for partial satisfiability when using the comparable relationship.
Added "comparability" relation. It's currently equivalent to assignability.
Accepted baselines.
Added tests.
JS class members as methods
accept api test baslines
Merge pull request #5425 from Microsoft/weswigham-patch-1
Add diagnosticMessages.generated.json to gitignore
Merge pull request #5419 from Microsoft/copyDiagnosticsMsg
Include the built into local task
const enum fixing in postprocess step
Merge pull request #5275 from Microsoft/fixCasingAndPathFormat
addressed PR feedback (change command line flag description), added tests
Error on redeclarations of undefined
Copy generated diagnostic messages json from src/compiler to built/local
merge with master
merge with master
Merge pull request #5358 from Microsoft/debugger
Merge pull request #5410 from kenhowardpdx/es6-source-order
Merge pull request #5412 from Microsoft/classesInLoop
Merge pull request #5408 from Microsoft/asyncWriteOnServer
Merge pull request #5397 from seanchas116/fix-nested-parameter-destructuring
treat local classes as block scoped variables
Merge pull request #5402 from zhengbli/i4177
Accept baseline
Add compiler test
Accepted baselines.
Updated LKG.
Fixed ordering for lib.es6.d.ts.
Merge pull request #5208 from Microsoft/capturedBlockScopedVars
addressed PR feedback
use process.stdout.write on server
JavaScript class inference from prototype property assignment
Merge branch 'master' into stringLiteralTypes
Added tests for operations that use assignable to/from.
Merge pull request #5273 from Microsoft/shortenLocMessages
Merge pull request #5405 from Microsoft/allowAllFilesAsPackages
Merge pull request #5404 from Microsoft/runtests-parallel
allow other files except .d.ts as external library packages
Make runtests and runtests-parallel share code
Rename, default to 'min' and fix Projects case
fix i4177 and sync with the TSJS repo
Merge pull request #5390 from maybejulian/declareOnTypeAliasInDts
Add tests for nested destructuring
Do not type non-identifier binding name
Added grammar change to the comments.
Merge pull request #5354 from zhengbli/fixWriteSync
accepted baselines
Added TypeAliasDeclaration to exceptions for required top level declare modifier
First draft of test parallelisation
Add test of issue
ignore names when checking type parameter equality
Merge pull request #5384 from Microsoft/fix-union-of-variadic-functions
Merge pull request #5359 from Microsoft/merge-inherits-interface-members
Use emptyArray instead of [] for no base types.
Fix union types of variadic functions
Add tests and accept baselines
Merge pull request #5367 from Microsoft/cacheFileExists
addressed PR feedback
Merge pull request #5368 from Microsoft/convert-diagnostic-text-to-es2015
CR feedback.
Merge pull request #5336 from zhengbli/fixWatcherIssue
Merge pull request #5370 from weswigham/system-export-var
Merge pull request #5373 from brettm523/5298-normalize-err-msg-path
Merge branch 'master' into stringLiteralTypes
add normalizePath to to fix slashes
Accepted baselines.
Merge pull request #5366 from RyanCavanaugh/typeOperatorSpacingRule
Style changes
CR feedback
Added test.
accept new baselines
remove es6 check form system module
do not look into nested es6 exports / imports when collecting external modules
Accept baselines
Update diagnostic text to use ES2015, not ES6.
move 'fileExists' caching to tsc
cache results of fileExists check in default compiler host
Remove extra semicolon (the irony)
Add rule to check spaces around intersection/union type operators
Improve mergedInheritedClassInterface test case
Root class merged with interface can be extended
defer allocation of error message text in binder
Merge pull request #5360 from Microsoft/runTestsBrowserOnLinux
make binder singleton, inline bindWithReachabilityChecks
Accept new baselines
change triple-slash ref emit critaera, add a new tests and accept new baselines
merge with master
pick default chrome location based on platform
Merge branch 'master' into stringLiteralTypes
Improve naming of test members
remove assertion
Accept baselines
Add JS breakpoint into Debug.assert failure
Move the changes to sys.write to server.ts
Tests for interfaces merged w/classes
Merge pull request #5355 from Microsoft/initFieldsInConstructor
`getBaseTypes` handles interfaces merged w/classes
fix lint
bit more cleanup
cleanup a bit, think toward the future
initialize fields from constructor parameters
feedback form pr
pre-initialize node fields in constructor
Merge pull request #5353 from Microsoft/tokenFollowingMultilineComment
Change writeSync to async
do not indent token if its start line matches end line of previous token\trivia
rename variable
feedback form pr
feedback form pr
Merge pull request #5295 from RyanCavanaugh/detectAdjacentJsxElements
Merge pull request #5344 from Microsoft/excessPropertiesWithUnion
Merge pull request #5343 from Microsoft/fixES6LetInModule
Adding test
Fix check for excess properties in union and intersection types
Tests
Fixes issue in emitExpressionIdentifier when combining --target ES6 with --module. Fixes #5315.
Merge https://github.com/Microsoft/TypeScript into formatWhitespaces
Merge remote-tracking branch 'refs/remotes/Microsoft/master' into formatWhitespaces
Fix issue: can't add a file back to a configured project after being deleted once
Merge pull request #5263 from zhengbli/pr5127cr
CR feedback
Merge branch 'master' into out-module-concat
Merge branch 'master' into reachabilityChecks
fix typo
Merge pull request #5310 from Microsoft/convertConfigOptionsToCompilerOptions
Merge pull request #5267 from Microsoft/disallow-primitive-assignability-to-index-of-any
Merge pull request #5321 from Microsoft/updateContributingMdTestOptions
Merge branch 'master' into capturedBlockScopedVars
Just say all compiler options are supported.
fix linter issues
addressed PR feedback
Merge remote-tracking branch 'upstream/master' into javaScriptModules
Merge branch 'master' into tscJsFiles
Fixups.
LKG update
CR feedback
addressed PR feedback
Merge pull request #5322 from jvilk/master
Minor fixups.
Change ArrayBuffer.isView declaration to type guard for ArrayBufferView.
Updated test options in 'CONTRIBUTING.md'.
Merge pull request #5307 from Microsoft/add-debug-instructions-to-contributing
Add missing newline after runtests/debug
Add debug=true option also
extract 'convertCompilerOptionsFromJson' to separate function
Add instructions on how to debug tests
Merge pull request #5293 from Microsoft/bumpTo1.8
Remove obsolute AMD logic from reference preprocessing in services
Merge pull request #5257 from Microsoft/module-merge-with-constructors
Merge pull request #5290 from Microsoft/interfaceClassMergingFix
Address CR feedback
Fix comments
Merge pull request #5230 from Microsoft/ambient-class-merges-overloads-with-interface
Merge pull request #5294 from Microsoft/fixDecoratorSwitch
Fixed linter error
Better error recovery for adjacent JSX elements in expression positions
Merge branch 'master' into reachabilityChecks
Switched switch statement to if branches. Fixes #5229.
Updated the LKG.
Bumped version to 1.8.0.
Add sortBeforeComparison option back to arrayIsEqualTo
merge with master/address PR feedback
Do not report errors for classes and interfaces merging
use absolute path as key to store files, correctly handle scenarios when file names differ only in casing
Accepted baselines.
Always use a string literal type if contextually typed by any string literal types.
CR feedback
Merge branch 'master' into stringLiteralTypes
Merge pull request #5272 from Microsoft/es2015-target
Merge branch 'master' into tscJsFiles
Add linebreaks for readability
Add ES2015 as a synonym to ES6
Test cases for let declaration and its use order
Shorten the key we use for the loc message.
Add test case, correct existing test case
Use ts.indexOf instead of Array.indexOf method
Add tests and accept baselines
Primitives are not assignable to any-type indexers
Address code review at 5127
Merge pull request #5262 from zhengbli/Fix5127CR
Address CR from 5127
Merge pull request #5127 from zhengbli/newAddDirectoryWatcher
Merge pull request #5261 from zhengbli/i5015
JavaScript LS scaffolding + JS module inference
Fix lint errors
Re-read file content upon closing
Fix rwcRunner
Address build errors
Add timer for batch processing directory changes
Fix issues with removing roots
CR feedback
Tests now correctly include a constructor
Merge pull request #5235 from Microsoft/fixDecoratorDiagostics
Make constructor use merged parent symbol
Add test case
Fix the duplicate function implementation error that depended on order of files
Merge pull request #5033 from Microsoft/dirkb/fix_5032
Merge pull request #5233 from Microsoft/relaxedUseBeforeDef
Merge pull request #5231 from Microsoft/removeExperimentalAsyncFunctions
Merge pull request #5184 from RyanCavanaugh/fix5096
revert enum related changes
Use `memberListCount`
suppress reachability errors in remaining tests
partially suppress reachability errors in tests
addressed PR feedback, updated tests to suppress reachability errors where they are not needed
accepted baselines
use isBlockScopedNameDeclaredBeforeUse for block scoped variables and enums
Merge branch 'master' into reachabilityChecks
Fixes #5104.
addressed PR feedback
Merge pull request #5067 from Microsoft/travis-node-4
Merge pull request #4914 from Microsoft/exponentiation
Add testcase - generating declaration file results in more errors in ts file
allow forward references to block scoped variables from functions
Merge pull request #4911 from Microsoft/liftDtsOnlyRestriction
Added scenario when duplicate function implementation is reported
Adding test case for scenario in which error reported depends on order of files
Lint: remove trailing whitespace
Address PR feedback
Emit enabled for JS files
Remove --experimentalAsyncFunctions from tests
Remove --experimentalAsyncFunctions
Assert that ambient classes merge with interfaces
Do not mark class members as ambient or export.
Merge pull request #5169 from Microsoft/fix-simple-uses-of-polymorphic-this-in-services
merge with master
Fix the lint error
Merge branch 'master' into tscJsFiles
Verify if one or more files are emitting into same output file we provide error
Verify that when emit blocking error occurs rest of the emit occurs as expected
Verify the emit file name is unique and doesnt overwrite input file Fixes #4424
Merge pull request #5178 from RyanCavanaugh/fix5132
fix linter failure
Merge pull request #5177 from zhengbli/i4684
Remove prototype from NodeFilter static type
Merge pull request #5216 from Microsoft/checkFunctionsInClassExpressions
Merge branch 'exponentiation' of https://github.com/Microsoft/TypeScript into exponentiation
Update baseline after merge conflict
Merge remote-tracking branch 'origin/master' into exponentiation
Merge pull request #5226 from Microsoft/blockScopedExports
Merge pull request #5217 from Microsoft/formatAsyncOpenParen
addressed PR feedback: added tests for let declarations
Merge branch 'master' into out-module-concat
check initialization of exported block scoped variables
add rule to insert space between async keyword and open paren
check functions in class expressions
Improved non-namespace overriding
merge with master
support block scoped vars captured in closures inside loops
Merge pull request #5121 from Microsoft/shorthandPropsInDestructuring
last line whitespace test
trim the whole last line when it has whitespaces only
Merge pull request #5197 from Microsoft/supportIndentStyle
Non-namespace merges override `valueDeclaration`
Merge pull request #5084 from MartyIX/patch-4
Add "A module cannot have multiple default exports." message for multiple "default" exports
Fall back to valueDeclaration
addressed PR feedback
Merge pull request #5191 from jbondc/typo-1
Fixup comments
Typo
restore fall-through indentation
trimTrailingWhitespacesForRemainingRange
Merge branch 'master' into errorsuperbeforethis
Address PR feedback, add comment
Address PR feedback, remove scriptTarget ES7
Address PR feedback. Always emit parentheses around emit capturing
Check for ClassDeclaration in getBaseTypeNodeOfClass
Add test case
Linting.
Semicolon.
Merge pull request #5167 from jbondc/const-indexed-access
Accepted baselines.
Only show the opening tag name when completing a close tag
Implement not.greaterThan for completion list
use a map, backticks
Return the string literal type itself instead of the union type.
Accepted post-merge baselines.
Merge branch 'master' into stringLiteralTypes
Fix case for completion on the line after a self-closing element
Merge branch 'master' into tscJsFiles
Address PR feedback
Added fourslash test.
Address code review. Accept baselines.
Use compilation options to get extensions to remove to get module name
Don't issue completion in JSX text
Remove extension for emitting output should remove any of supported extensions + js/jsx to get the dts file
Accepted baselines.
Merge pull request #5176 from Microsoft/emitExportAssignments
Merge branch 'master' into emitExportAssignments
Escape quotes when emitting React
Fix i4684
Adding tests
Merge pull request #5159 from zhengbli/i4942
Emit export assignments when target is ES6 and module kind is not ES6
Fix lint: remove trailing whitespace on empty line
Fix this.member completion+quickinfo of overloads
Accept baselines.
Resolve const enum value in index access.
Add comment
Merge pull request #5153 from Microsoft/transpileTsx
Added more tests.
address PR feedback
Address comment to increment emitCount in separate line
Address feedback on diagnostic message
fix issue 4942
PR Feedback, add enums to exceptions
trimWhitespacesInEmptyLineTrivia
transpile text as tsx if jsx option is specified
Merge remote-tracking branch 'Microsoft/master'
forbid duplicate var exports
Merge pull request #5145 from Microsoft/fixAsyncTypeChecks
Fixes some checker errors regarding async functions. Fixes #5115.
Merge pull request #5137 from Microsoft/fixExportDefaultClassStatics
Handle export * reexport errors smartly
Taken feedback into account and simplified the getFileNames logic to handle extensions by priority
Removed unnecessary check
Update test to parse typeAssertion as simpleUnaryExpression
Parse typeAssertion expression as simpleUnaryExpression
Merge pull request #5139 from Microsoft/getBlockScopedVariableIdIsNoMore
Add comment and address PR on comment
more test fixes
Merge branch 'master' into iFeelPrettyErr
remove unused function from the EmitResolver
trial of change
Fix linter warnings.
Lint fixes and test fixes
Merge pull request #4724 from denvned/patch-1
Fix emit for ES6 export default class with static initializers. Fixes #5136.
Merge pull request #5041 from zhengbli/RemoveMsInternalsFromLib
Re-enable failing fourslash tests
Merge pull request #5126 from RyanCavanaugh/noLibSymbolLines
Merge branch 'master' into travis-node-4
Adds tests
Fixes instance of type exclusion in else clause
Just make the compiler option internal.
Only use colors if we are certain we are using a pseudoterminal.
Moved JSX diagnostics to a more sensical spot.
Merge branch 'master' into iFeelPrettyErr
Added '--diagnosticStyle' compiler argument with options 'simple' and 'pretty'.
Fix tslint error
parenthesized exponentiation with template string
Address PR and add new with exponentiation
Invalid usage of exponentiation
Add baselines when having early syntax error in exponentiation
Add baselines for using exponentiation in template string
Add baselines for downlevel emit exponentiation and ES7 emit of exponentiation
Update baselines for exponentiation compound operator with indexing and property assignment
Add and update tests
Fix emitting parenthesis when downlevel
Update test harness to pick up new ScriptTarget of ES7
Update parse to use new grammar
Merge branch 'master' into tscJsFiles
Don't show lib.d.ts line numbers in symbol baselines
Merge branch Microsoft/master
Incorporating changes from #3780
Removing console logs that were for debugging
Add new test cases
Remove the failing testcases
Merge pull request #5103 from SaschaNaz/formatStringTemplates
Update .travis.yml
Temp change to investigate test failure
Create new tscconfig files for the failing testcases
Remove tsconfig files of failing testcases
parse/check/emit shorthand property assignment in destructuring
Update comments
update comment
Merge pull request #5120 from Microsoft/removeInternalFromNPM
m'lint
Use fs.watch for all directory watchers and some bug fixes
Correct output, accept new baselines
add internal to nmpignore
Merge pull request #5118 from DickvdBrink/update-npmignore
merge with master
concatenated type emit
update npmignore file
Merge pull request #5083 from weswigham/lint-on-runtests
Add directory watcher to tsc
Merge pull request #5099 from Microsoft/deferMemberInstantiation
Changes in harness to emit expected and actual to figure out baseline error thats reported only on travis run tests
Fixing few code review comments
Merge pull request #5116 from weswigham/5059-prologue-location
Change prologue emit location to inside module IIFEs
Fix jakefile rules build
Merge pull request #5086 from Microsoft/abstract-semicolon-insertion
Update parser with new grammar
Merge pull request #5046 from RyanCavanaugh/fix4675
Redesigned directory watchers
fix linter issues
do not emit exportsStar function if module does not expose any values
Format template internal spaces
Merge remote-tracking branch 'Microsoft/master' into tsconfigpath
Accepting new baselines
Adding tests
Defer instantiation of members of instantiated anonymous types
Merge branch 'master' into reachabilityChecks
updated command line options, accepted baselines
Update grammar to error on none-parenthesis
Address PR on fixing tempalte tests
Add tests
Downlevel emit
removed umd as allowed, accepted new baselines
cusotm tests, forbid umd
Accept baselines
Remove obsoleted comment
Add compiler error for incompatible module formats
Accepted baselines.
Fixed issue in test.
Merge pull request #4741 from Microsoft/es3Decorators
Jake hates deps
Accepted baselines.
Separated the concept of apparent types from contextual types for string literal types.
Merge branch 'master' into abstract-semicolon-insertion
Merge pull request #5087 from weswigham/tslint-update
Accepted baselines.
Capture compatible contextual types for unions containing string literals.
Accepted baselines.
Amended fourslash tests to expect double quotes.
tslint had a new release and added this rule, theirs was a little stricter
Use normalized text for text on string literal types.
Automatic semicolon insertion for class modifiers
new baselines for sourcemaps tests (given that modules can now get emitted into single out)
linter runs after tests via jake
temp save
Merge pull request #5040 from RyanCavanaugh/fix4688
merge with master, fix linter issues
Merge branch 'master' into reachabilityChecks
Fix linter errors
sourcemap correctness
CI Against Node 4.1
Fix lint error that was commited
Accepted baselines.
Added test for string types in tuples.
Merge branch 'master' into es3Decorators
Accepted baselines.
Make string literals valid types in type lists.
Accepted baselines.
bug fixes
Make string literals valid constituent types nodes in the parser.
Merge branch 'master' of https://github.com/Microsoft/TypeScript
Accepted baselines.
unify the node filewatcher in sys.ts and server.ts
Added test for string literal types in type arguments.
Change fileWatcher in sys for node 4
merge with master
Concatenated module emit fixes up all included paths
Merge pull request #5043 from Microsoft/findRefsOnVarInExtends
naive change
Add msapp content back, only remove the internal content
Remove MS specific types from lib.d.ts
Merge pull request #5042 from zhengbli/FixFloat32ArrayInLib
Merge branch 'master' of https://github.com/Microsoft/TypeScript
Merge pull request #5050 from plantain-00/issue4701
change the references to the error message
Merge pull request #5051 from weswigham/for-the-glory-of-the-linter
Make test actually fail on lint fail
Error message should be fixed for ambient module inside namespace
Merge pull request #5048 from weswigham/for-the-glory-of-the-linter
Merge branch 'ShyykoSerhiy-master'
Merge branch 'master' into ShyykoSerhiy-master
Merge branch 'master' of https://github.com/ShyykoSerhiy/TypeScript into ShyykoSerhiy-master
Add lint to the test command so travis picks it up
This is what zero linter errors feels like
lint harness, disablow control flow analysis because buggy
Handle indirect imports of JSX elements from external modules
Accepted baselines.
Account for interface extends clauses.
Added failing test.
Add comments to bool params
Remove debugger statement
Added one more test.
Fix the bug turning Float32Array type to any
Accepted baselines.
Use appropriate resolution meaning.
Added failing test.
Accept symbol baselines
JSX Spread Attributes are expression parents
Merge pull request #4910 from Microsoft/polymorphicThisType
Merge pull request #5019 from RyanCavanaugh/fix4731
Fixed unnecessay whitespace changes
Fixed #5032: tsserver: Format on type broken
Merge pull request #4848 from weswigham/tslint-vscode
Merge pull request #5024 from Microsoft/importsInAmbientModules
Merge pull request #4994 from zhengbli/i4959
Adding contextual typing test
Accepting new baselines
Error when emitted type in declaration file references inaccessible 'this'
Merge pull request #5018 from SaschaNaz/formatAssignment
collect imports and exports in ambient external modules
Update tests
Merge pull request #4998 from MartyIX/patch-2
Issue correct completions in 'as' operator
Merge pull request #4847 from Microsoft/looser-next-line-rule
Merge pull request #5007 from RyanCavanaugh/fix4514
Show date and time when using `--watch` flag
Merge pull request #5009 from RyanCavanaugh/fix4832
Merge pull request #5008 from RyanCavanaugh/fix4574
Move cheaper check earlier in condition
indent expressions
Merge pull request #4989 from Microsoft/relativeModuleNamesInImports
Merge remote-tracking branch 'Microsoft/master'
remove parens
getEffectiveDelta
Merge branch 'master' into reachabilityChecks
Fail
Correctly emit 'as' operator left operand as expression
Offer correct completion when between a boolean JSX attr and the close tag
Allow /* comments between < and JSX element name
cr feedback
Merge branch 'Eyas-vscode-ignores'
Merge branch 'vscode-ignores' of https://github.com/Eyas/TypeScript into Eyas-vscode-ignores
Merge pull request #4932 from Microsoft/formatMalformedTsx
Merge pull request #5002 from Microsoft/weswigham-patch-1
Update CONTRIBUTING.md
Add .vscode to npmignore
Merge pull request #4980 from csnover/fix-4952
Merge pull request #4991 from MartyIX/patch-1
Update emitter.ts
Remove extra empty lines
Add tests
Avoid deleting trailing whitespaces for tempmlates
harden the implementation of Program.getSourceFile to handle all relative file names correctly
Add tuple type test
Make tuple type itself the 'this' type of base array type
record resolution for relative file name if file was found via absolute name
Adding test for declaration files
Fixing comment and error message per CR feedback
Adding tests
Proper handling of "this" in getSymbolAtLocation
Accepting new baselines
Properly classify "this" and "await" in isExpression
Added tests.
Merge branch 'grabParamsFromInitializers'
:%s/apst/apt
Put AMD dependency list inline with define call in UMD modules
Try to grab parameters for single-declaration variable statements.
Modified/added tests.
Merge pull request #4978 from Microsoft/expandDocTemplateCoverage
Rewrite inaccessible "this" to containing class/interface in declaration files
Write "this" as "any" when "this" reference would be an error
Removing a few "this" containers
Address PR
Add additional "this" containers
Properly emit "this" type in declaration files
Amended comments.
Merge pull request #4973 from weswigham/4699-fix
Switched parameter name to array binding pattern.
Yeah.
Add descriptive comment
Remove postinstall, make it manual, make sure jakefile is in gitignore
Better messages.
Run linking script only if present
Merge pull request #4946 from Microsoft/constInitializersInEnums
Merge pull request #4961 from weswigham/repo-hooks
Ensure that doc comments don't appear between dotted names.
Added tests for dotted namespace declarations, object literal methods.
intentation is powerful
We can go simpler
fix hook
Add git hooks
Add JSDoc to methods, constructors, classes, and namespace/module declarations.
Amended tests.
Use a loop because reduce is unreadable.
Merge pull request #4956 from Microsoft/bindingElementContextualTyping
Adding repro from #4818 to test
Added tests for JSDoc comment templates on other declarations/statements.
Adding tests
Properly propagate contextual types into parameter destructuring elements
Merge pull request #4811 from weswigham/es6-module-type
align behavior of constant expressions in initializers of ambient enum members with spec
Check if binding element already has been assigned a contextual type
use formatting scanner with languageVariant=JSX for .tsx files
Adding comments and addressing CR feedback
Update the type assertion errors to jsx syntax error as we are treating js files as jsx files
Merge branch 'master' into tscJsFiles
Parse all the javascript files with JSX grammer
Syntax changes if the extensions to treat as javascript change
Merge branch 'master' into polymorphicThisType
Merge pull request #4921 from Microsoft/implementsAsIdentifier
Merge pull request #4919 from Microsoft/removeUnusedCode
\. instead of .
update regex for filename
Merge remote-tracking branch 'Microsoft/master' into tsconfigpath
format/existence check
slight condition change for getDelta
no null
merge with master
disambiguate: 'implements' starts heritage clause vs 'implements' is a class name
removed duplicate function implementation
merge with master
Merge pull request #4915 from weswigham/remove-generated-code
Delete generated file, add to gitignore
remove unnecessary union
Commenting out broken fourslash tests
Update baselines to include new tests
Add and update tests for exponentiation
extend the list of extensions for module file names in node_modules folder
Merge branch 'master' into tscJsFilesxt
Update existed baselines that are affected by ES7 UnaryExpression
Downlevel emit for **=
Parse ES7 UnaryExpression and IncrementExpression
Merge pull request #4886 from Microsoft/diagnosticDuplicateCodes
Add option --jsExtensions to handle extensions to treat as javascript - Command line now takes --jsExtension multiple times or comma separated list of extensions - tsconfig accepts array of extension strings
Accepting new baselines
Polymorphic "this" type
fixing lints in a pr about linting
Update LKG
Merge branch 'punya-fix-capitalization'
Merge branch 'fix-capitalization' of https://github.com/punya/TypeScript into punya-fix-capitalization
Conflicts should cause errors instead of warnings.
Accepted baselines.
Fixed duplicate diagnostic codes.
Add funcitonality to warn on duplicate codes.
support tsconfig full path
Merge remote-tracking branch 'Microsoft/master'
Merge pull request #4875 from jbondc/utilities-typos
Utilities typos + missing reference
Fixed links to spec in the README.
Basic parsing for the UnaryExpression:  IncrementExpression[?Yield]**UnaryExpression[?Yield]
Initial operator. Need to fix the grammar for unaryExpression
Add tests for exponentiation
Merge pull request #4845 from Microsoft/updateDTRWC
Fix jake task, style/const in script.
Merge pull request #4862 from Microsoft/contextuallyTypeMethodDeclarations
Added missing predicate for contextual types of parameters.
Use custom type guard.
Added failing fourslash test.
Accepted baselines, issue not apparent in compiler tests.
Merge branch 'master' into tscJsFiles
s/var/let
Fix capitalization of minimumintegerDigits
whitespace!
Rework lint to use tslint-as-a-lib
Next-line rule was too strict
es3 -> es5.
Add a jake task, .gitignore entry, and add tsd as a dev dependency.
Final touches on the script.
Merge branch 'master' of https://github.com/Microsoft/TypeScript
Merge pull request #4458 from weswigham/tslint-rules
Improved command line interaction for 'importDefinitelyTypedTests' script.
forEach -> for-of, and other changes.
accept baselines
Fix documentation
Use intersection types in Object.assing defintion
Feedback from PR, remove unused identifiers
Merge pull request #4829 from weswigham/default-aliasing-bug
Feedback from PR
reverts 60a120f, reexposes es6 option
style nits
Added tests.
Use explicit types, var -> let/const, misspellings, style.
Added 'tsconfig.json' for 'importDefinitelyTypedTests' script.
Added tsd.json file with 'node.d.ts'.
When targeting ES3 emit default alias as indexer
Moved importDefinitelyTypedTests.ts to its own folder.
failing test
Report error when emitting declarations if the reference is to .js file
Corrected scenario names in the test cases
When tsconfig file doesnt contain file names, consume .js files of directory only if specified in the options
Test case when one of the input file is output file name
Do not emit javascript files
Tests when the .ts and .js files are mixed in compilation with tscconfig file doesnt specifying any names
merge with master
Tests when the .ts and .js files are mixed in compilation with tscconfig file specifying them
addressed PR feedback
When folder contains .d.ts as well as .js of same name and tsconfig doesnt contain any name
When same named .d.ts and .js files are present and tscconfig contains .d.ts file
Verify and fix scenario when .js and .ts files with same name are present and tsconfig doesnt specify any filenames
Merge branch 'master' into tscJsFiles
Fix import/export assignment checks to look at module kind rather than language version
Add tests when same named .ts and .js file exist with tsconfig file specifying .ts file
remove es6 as option from command line
Merge pull request #4815 from basarat/patch-1
Merge pull request #4774 from Microsoft/iocaptureFixes
fix types : export the base as children are exported
more code review comments
Merge branch 'master' into iocaptureFixes
Project testcase to run tsconfig file
Pair of new tests for the new flag
Add es6 module kind, stop using script version to infer it
Update LKG.
handeles -> handles
Merge pull request #4809 from Microsoft/mergeFromRelease1.6
Bump version back to 1.7.0.
merge with master
Merge branch 'release-1.6'
Merge pull request #4383 from Microsoft/cleanHarnessOptionLoading
Respond to code review comments
code review comments
Merge branch 'master' into iocaptureFixes
Update tests to use "removeComments" instead of "comments"
Merge branch 'master' into cleanHarnessOptionLoading
Breaking changes from node resolution changes. ambient module declarations do not take precedance any longer.
Update node resolution tests
addressed PR feedback
Merge branch 'master' into cleanHarnessOptionLoading
Merge pull request #4758 from Microsoft/updateErrorText
Cleanup of options of project runner
Merge pull request #4794 from Microsoft/emptyModuleName
report error if module name is empty
initial revision of reachability checks in binder
Merge branch 'master' into tscJsFiles
use resolvePath to handel relative references correctelly
Handel compiler options correctelly
Also ignore .vscode from .npmignore
Update Visual Studio Code ignores
re-fix token indentation
use undefined instead of null
make getDelta call suppressor
add support for tsconfig files in the rwc instrumenter/replay
update error message text
apply suppression to tokens
Add wrapSystem function
use sting templates
Fix some comments
nodeWillIndentChild from #4609
Merge remote-tracking branch 'Microsoft/master'
Update LKG
Updated baselines
Merge pull request #4750 from Microsoft/Port-4749
Merge pull request #4749 from Microsoft/systemExportOnlyValues
Merge pull request #4744 from Microsoft/Port-4738
Merge pull request #4738 from Microsoft/properExternalModules
emit export specifiers in system modules only if export has a value side
emit export specifiers in system modules only if export has a value side
Merge pull request #4598 from Microsoft/destructuringInitializers
making comment more specific
resolve merge conflicts, update tests
addressed PR feedback
Resolving a conflict with #4711
Check if imported file is a proper external module
nodeWillIndentChild
Merge pull request #4743 from Microsoft/Port-4723
reattach file diagnostics for modified files when reusing program structure
Merge pull request #4695 from Microsoft/definitionsAsExternalModule
Adding "." to error message
resolve merge conflicts, update tests
Merge remote-tracking branch 'origin/master' into properExternalModules
addressed PR feedback
Merge pull request #4739 from weswigham/vscode
Accepting new baselines
Allow decorators in ES3
Revising test
Error when binding element has no value in initializer and no default
Merge pull request #4716 from Microsoft/optimizeFreshTypeRelation
rename .settings to .vscode
Check if imported file is a proper external module
Update LKG
Merge pull request #4705 from Microsoft/keywordInJsxIdentifier
Let tsconfig to pick up js files
Merge pull request #4735 from Microsoft/commandLineCrashModuleResolution
Merge pull request #3883 from Microsoft/omitComments
Merge pull request #4733 from Microsoft/updateVersion
Encode the conditional presence of 'error' in the type system.
Verify syntax error in js file are reported
Added error for bad argument, fixed diagnostic for '--help' message.
Update version to 1.6.2
Test for rest parameters(copied from language service tests)
Test cases for different typescript syntax not supported errors during js files compilation
Let harness to name file even when single unit data specified  but there is filename tag
Merge pull request #4730 from Microsoft/fix4727
Assert condition to track root cause of issue.
Fix #4727: prerocess `export import` declarations correctelly
Address CR
Merge pull request #4641 from vilic/cast-expression-parentheses-with-numeric-literal
Merge pull request #4723 from Microsoft/inheritDiagnostics
Keep parentheses for all numeric literals with property access expression
Merge pull request #4725 from Microsoft/Port-4703
addressed PR feedback
do not emit '=' in jsx attribute if initializer is missing
Merge pull request #4703 from Microsoft/jsxEmitAttribiteWithInitializer
Simple fix for #4721
Javascript files will emit declarations too so get declaration diagnostics
Add test cases for simple js file compilations
reattach file diagnostics for modified files when reusing program structure
Merge pull request #4711 from SaschaNaz/mergeRules
Report error if output file is among the input files
Allow the js files to emit output
Baseline updates
Emit the diagnostics for javascript file instead of doing semantic check
Add .js as supported extension
rename isIndentationPrevented
Merge pull request #4657 from Microsoft/emptyVariableDeclarationBindingPattern
Actually cache regular version of fresh object literal type
update isCompletedNode
Merge pull request #4656 from Microsoft/Fix4655
Accepted baselines.
Added tests for parameter initializers.
Add some comments to isIndentationPrevented
revert newlines
Consider export/import specifier as binary op context
Move housekeeping part to new PR #4711
remove type operation rules, add types instead
Housekeeping part from #4609
Resolving conflicts with #4646
allow to use keywords as jsx identifiers
do not emit '=' in jsx attribute if initializer is missing
Merge pull request #4632 from Microsoft/fixCompletionAssert
Change typescript.d.ts to be an external module instead of an ambient external module declaration
Merge remote-tracking branch 'Microsoft/master'
Accepting new baselines
Adding test
Correct propagation of includePatternInType flag
simplified code flow
Adding test for excess/missing properties
Accepting new baselines
Modifying tests
Check for excess properties
Accepting new baselines
Store binding pattern in contextual type
Merge pull request #4659 from progre/fix-errormessagetypo
remove hasBraceShell and add namedBindings check
#4396 fix error message typo
Merge pull request #4497 from weswigham/patch-4
Merge pull request #4658 from weswigham/patch-5
Add debug option to runtests
Accepted baselines.
Ensure that zero-element binding patterns don't try to reuse assigned identifiers.
fix additional places where class expression should be queried
Check for class expressions as well as class declarations
Else on the next line
Merge pull request #4650 from Microsoft/Port-4646
handle jsx identifiers correctly, indent content of JsxSelfClosingElement
Merge pull request #4646 from Microsoft/formattingJsxAttributes
Accepted baselines.
Merge pull request #4638 from SaschaNaz/fixCommentIndentation
Added more test cases.
Merge branch 'release-1.6'
Merge pull request #4599 from Microsoft/decoratorInferredType
handle jsx identifiers correctly, indent content of JsxSelfClosingElement
Add tests for issue #4603
Fix issue #4603
move declaration into the block
add tests for comments
fix comment indentation
Merge https://github.com/Microsoft/TypeScript into formatTsxAttr
Manual merge
Manual merge
Merge branch 'master' into fixExportImportFormatting
make the test more specific
sample
Do not add symbol if it is undefined
Merge pull request #4631 from Microsoft/formattingFixesFromMaster
fix 'findPrecedingToken' for jsxText
format class expression indentation
fix test
format intersection type
allow backslashes in fileName argument of the transpile function
Merge pull request #4596 from Microsoft/jsxIndentation
Merge pull request #4627 from Microsoft/backslashesInTranspile
Merge pull request #4622 from SaschaNaz/fixClassExpressionIndent
Merge pull request #4623 from SaschaNaz/formatIntersectionType
Merge pull request #4552 from Microsoft/bettErrErrorsForObjectLiteralExcessProperties
allow backslashes in fileName argument of the transpile function
fix test
format intersection type
format class expression indentation
Merge remote-tracking branch 'Microsoft/master'
add tests
disable indentation when in brace shell
format open brace in export/import decl
Merge pull request #4557 from gwicksted/patch-1
Merge pull request #4557 from gwicksted/patch-1
Merge pull request #4607 from Microsoft/port-4592
remove 'experimental' from 'moduleResolution' command line argument
Added toLocaleTimeString variations
Accepted baselines.
Added tests.
Accepted baselines.
Added declaration option to empty destructuring tests.
Merge pull request #4592 from Microsoft/noExperimetntalForModuleResolutionFlag
If Type annotation is missing, emit design:Type as Object Fixes #4549
Accepting new baselines
Adding tests
Adding a few comments
fix 'findPrecedingToken' for jsxText
More flexible rules when destructuring have literal initializers
remove 'experimental' from 'moduleResolution' command line argument
address PR
Merge pull request #4575 from Microsoft/bettErrErrorsForObjectLiteralExcessPropertiesInMaster
Added comment, inlined function.
Style.
Accepted baselines.
Improve error message spans when object literals have excess properties.
Added comment, inlined function.
Add parameters to toLocaleDateString
Style.
Accepted baselines.
Improve error message spans when object literals have excess properties.
Merge pull request #4536 from hoanhtien/fixInconsistentFormatting
Only obtain regular type of fresh object literal type if necessary
pseudo-block indentation
Update LKG
Addressing CR feedback
Accepting new baselines
Fixing fourslash tests
Restoring union type subtype reduction
Merge pull request #4537 from Microsoft/unionSubtypeReduction
Addressing CR feedback
Reformat some code.
Accepting new baselines
Fixing fourslash tests
Merge pull request #4535 from Microsoft/fixAsyncCallResolutionException
Fixes fallback checks that cause an exception during call resolution for an async function
Restoring union type subtype reduction
Merge pull request #4531 from DickvdBrink/fix-occurrences-classexpressions
Use synthetic identifier during emit instead
CR feedback
Added tests for getOccurrences on `this` in class expressions
Fix occurrences on `this` in class expressions Fix #4479
Merge pull request #4525 from SaschaNaz/formatFunctionType
remove spaces
Do not replace but do extend
add rules and indents to named export/import
Merge remote-tracking branch 'Microsoft/master'
Merge pull request #4517 from Microsoft/port4488
Merge pull request #4488 from Microsoft/fixRWC
Merge pull request #4488 from Microsoft/fixRWC
Merge pull request #4494 from JKillian/namespaceFlagDotSyntax
Merge pull request #4475 from RyanCavanaugh/fix4422
merge with master
pass IO when getting default library instead of reading it to prevent memory leaks, do not count errors in library files twice
Toss the System out
Update LKG
Merge pull request #4510 from Microsoft/mergeMasterInRelease1.6
Toss the option out the window
Merge branch 'master' into mergeMasterInRelease1.6
Merge branch 'master' into mergeMasterInRelease1.6
Merge pull request #4509 from Microsoft/noDedupeTupleTypes
Merge pull request #4501 from Microsoft/checkClassExpressions
Merge pull request #4484 from Microsoft/suppressExcessPropertyErrors
Accepting new baselines
Adding tests
Merge pull request #4508 from Microsoft/mergeMasterInRelease1.6
Merge pull request #4507 from Microsoft/port-4474
No deduplication in union of tuple element types
Revert "Update version to 1.7 in 'master'."
Revert "Update version to 1.7"
fix error message for forward references in enums
Update version to 1.7
Merge branch 'master' of https://github.com/Microsoft/TypeScript
Update LKG
Adds a "typings" property to package.json
Merge branch 'release-1.6'
Added test
Fixes declaration emit for a class that extends null
Merge pull request #4442 from SaschaNaz/formatFunctionType
Adding test
Merge branch 'release-1.6' of https://github.com/Microsoft/TypeScript into release-1.6
Merge pull request #4504 from Microsoft/addTypingsToPackageJson
Adds a "typings" property to package.json
Update LKG
Add tests
Add class expression if existed to classifiable-name map
Merge pull request #4502 from Microsoft/fixClassExtendsNullDeclEmit
Merge pull request #4503 from Microsoft/fixClassExpClassfication
Revert change to the harness that break the unittest
Added test
Add tests
Add class expression if existed to classifiable-name map
Fixes declaration emit for a class that extends null
Property check expressions in class extends clause
Add optional argument to readConfigFile
Add comment
Propagate namespace flag to namespaces nested with dot syntax
change some template literal tests
adding tests
adding constructor/parenthesized type
union type rules
Move RWC runner to use Harness.IO
Revert "Read default lib from the local file system instead of log-array when do Not use custom library file"
Revert "Address CR"
Accepting new baselines
Adding test
Adding test harness support
Adding -suppressExcessPropertyErrors compiler option
Don't assume the class declaration will occur first, and that it is *only* a class declaration.
Added tests.
Merge pull request #4480 from Microsoft/goToDefinitionOnConstructors
Don't assume the class declaration will occur first, and that it is *only* a class declaration.
Remove unused field
Use synthetic identifier during emit instead
Merge pull request #4474 from Microsoft/errorMessageInEnums
Added tests.
CR feedback
Simplify it a bit
Give up on real typechecking, just check literals
Merge remote-tracking branch 'origin' into errorMessageInEnums
Merge pull request #4464 from Microsoft/cacheTypeInstantiations
Correctly emit imported 'React' references in JSX.
fix error message for forward references in enums
Address CR
Read default lib from the local file system instead of log-array when do Not use custom library file
Merge pull request #4470 from Microsoft/release-1.6
Merge pull request #4469 from zhengbli/issue4295
CR feedback
fix MessageEvent and ProgressEvent constructors
Boolean trivia rule
adding rules, ParenthesizedType not yet
Merge branch 'release-1.6' into omitComments
Merge branch 'release-1.6'
Merge branch 'release-1.6' into fix3989
Accepting new baselines
Adding tests
Add cache of anonymous object type instantiations to TypeMapper
Merge branch 'tinganho-init'
compile vs tslints services dts, null check lint
Add tslint rules for #3994
change variable name
Only set files if we have one
use toLowerCase and remove unused property
Move handeling to a diffrent function, and remove specialized serialization
Add test and address PR
Update error message
Make new exported functions internal
Merge branch 'init' of https://github.com/tinganho/TypeScript into tinganho-init
Update version to 1.7 in 'master'.
Merge branch 'master' into omitComments
Update testcase only preserve pinned comment at the top of the file
Optimize removing comment when removeComment flag is true
Merge pull request #4446 from zhengbli/fixLibLineEnding
Fix inconsistent line endings in lib.d.ts
fixing function type formatting
Merge remote-tracking branch 'Microsoft/master'
remove isIndentPreventedChildNode
Removes project init test
Removes jsonWithComments
Addresses CR feedback
Merge pull request #4352 from Microsoft/moduleResolutionStrategies
Merge branch 'master' into moduleResolutionStrategies
Merge pull request #4386 from Microsoft/importDeclarationAndDecorator
Added test for transpilation with emitting of metadata and decorator
Used let instead of var
When emitting metadata about type, Use object type if the type cant be resolved This could be true if expression cannot be resolved resulting in error
Write synthesized node's text property instead of getting text from source file This fixes issue of not being able to emit qualified expression correctly
Tests for #4239
Merge branch 'master' into importDeclarationAndDecorator
Merge pull request #4402 from Microsoft/metadataTypeName
revert 060828c
partially move getIndentationToken into new function
use commandlineParser's optionDeclarations to parse compiler options instead of doing it explicitlly
git fix wrong merge
Merge branch 'master' into cleanHarnessOptionLoading
Merge pull request #4408 from zhengbli/issue4401
Merge pull request #4405 from zhengbli/fixTsconfigWatcherIssue
Merge pull request #4283 from zhengbli/JsDocIntellisense2
Move getElementsByClassName from HTMLElement to Element
Rename setCompilerOptionsFromSetting to setCompilerOptionsFromHarnessSetting
Merge branch 'master' into cleanHarnessOptionLoading
Merge pull request #4406 from RyanCavanaugh/fix4404
Merge pull request #4380 from RyanCavanaugh/fix4376_2
Update LKG
Merge remote-tracking branch 'upstream/master' into fix4376_2
:rage1: `debugger;`
Correctly identify JSX Expressions as Expression parent nodes
Fix issue when the newly added files in tsconfig is not opened
Merge pull request #4394 from Microsoft/browserifyFix
Merge pull request #4381 from RyanCavanaugh/fix4125
use buffer in harness only when running outside of the browser
Instead of writing text from source file use text property to write text of synthesized node Fixes #4364
parse jsdoc param tag even without a param name
Merge pull request #4390 from adidahiya/fix-remove-TypeCheckerHost-interface
use \r\n as default new line in transpile
Merge pull request #4388 from Microsoft/outFile
adding JSX closing tag/attribute/expression test
fixing autoformat not working with empty JsxText
use \r\n as new line in harness
simplify module resolution tests
addressed PR feedback: added comment
use Harness.IO instead of sys in harness
Make TypeCheckerHost internal
Merge branch 'master' into outFile
Add --outFile and revert change make --out relative in tsconfig.json
Add comments
Add comments
Add test to make sure /// is preserved when removeComments is false
address PR feedback
Consolidate option error messages into two
Resolve the decorator type as type and check if the symbol has value. This would make sure we are referencing correct symbol to check if it has value Fixes #4239
Merge pull request #4385 from Microsoft/ToolsVersionUpdate
Merge pull request #4023 from zhengbli/addTsConfigWatcher
replacing let with const
Merge pull request #4371 from Microsoft/emitOutputForTsx
Add test in case of remove /// on node that will not be emitted when removeComment is true
Only preseve pinned comment at the top of file
Add message in protocol.d.ts and rename "rebuildProjects" to "reloadProjects"
Updating the internal toolsVersion from 1.5 -> 1.6 in shims.ts
add command for rebuild all project structure
Use same parsing function for fourslash tests
Delay creating inferred projects
Handle non-entities as well
Add comments
Convert HTML entities to strings (#4125)
Merge branch 'addTsConfigWatcher' of https://github.com/zhengbli/TypeScript into addTsConfigWatcher
Fix React whitespace emit #4376
Update tests file for /// and detached comments
Don't emit detached comment if removeComment is true
Address code review
Merge pull request #4378 from tarikozket/patch-1
Fixed spelling
Merge pull request #4375 from basarat/fix/shebang-trivia-scan
fix(scanner) try a trivia scan only if pos === 0
remove unused createNewInstance support
change to use map instead of flag, value tuple.
consolidate toLower call
Handel additional properties
Export setCompilerOptionForSetting
remove unused flag aliases
remove unused list of supported switchs
Merge pull request #4369 from Microsoft/updateES6DotDDotTsForFinalDraft
Emit tsx files correctelly in getEmitOutput calls
Added null checks
Fixed newlines, switched 'module' keyword to 'namespace'.
Accepted baselines.
Added overloads for typed array constructors to take an 'Iterable<number>'.
Merge branch 'master' into updateES6DotDDotTsForFinalDraft
Merge pull request #4306 from zhengbli/issue4220
Merge pull request #4368 from Microsoft/noResolveAndExternalModules
Remove /// comment when removeComment is true
Update tests to remove /// if removeComment is true
CR feedback
Updated 'Reflect.construct' to add third 'newTarget' argument.
Fix documentation for methods of the 'String' interface.
added tests
Added overload for 'String#split' to take objects with '[Symbol.split]' method.
Added overload for 'String#search' to take objects with '[Symbol.search]' method.
Added overload for 'String#replace' to take objects with '[Symbol.replace]' method.
Remove duplicated code
Added overload for 'String#match' to take objects with '[Symbol.match]' method.
Move back the constructor signature with Uint8ClampedArray
Merge branch 'master' into issue4220
Merge pull request #4307 from zhengbli/issue4083
Merge branch 'master'
Merge pull request #4312 from zhengbli/issue4015
Merge pull request #4313 from zhengbli/issue4012
Merge pull request #4318 from zhengbli/issue3999
Merge pull request #4321 from zhengbli/issue3979
update baseline
Merge branch 'master' into issue3979
update baselines
Merge branch 'master' into addTsConfigWatcher
Remove extra files
Merge branch 'master' into addTsConfigWatcher
Add quick info test for type parameter in type alias
Write out type parameter in type alias in quick-info
Fix space
Stylize gutter.
Handle root file removal and addition in configured projects
always process imported modules in 'createProgram' to record module resolutions
Merge pull request #4355 from DavidSouther/ts4354
Merge https://github.com/Microsoft/TypeScript into formatTsxAttr
adding tests for JSX attributes/closing bracket
CR feedback and logic rewrite
Added tests for commonjs safe import behavior.
Merge pull request #4353 from Microsoft/updateES6DotDDotTsForFinalDraft
Emits safe value for import.
Accepted baselines.
Removed inappropriate methods from the 'RegExp' interface.
Added the '[Symbol.unscopables]' method to the 'Array<T>' interface.
Added the '[Symbol.species]' method to the 'RegExpConstructor' interface.
Added the '[Symbol.split]' method to the 'RegExp' interface.
Added the '[Symbol.search]' method to the 'RegExp' interface.
Added the '[Symbol.replace]' method to the 'RegExp' interface.
addressed PR feedback
Add Uint8ClampedArray to core.d.ts, and split call signature of method "from"
Added the '[Symbol.match]' method to the 'RegExp' interface.
added tests
Added the '[Symbol.toPrimitive]' method to the 'Date' interface.
Added the '[Symbol.hasInstance]' method to the 'Function' interface.
Removed 'Function.toMethod'.
Merge pull request #4347 from Schmavery/master
Merge branch 'master' into iFeelPrettyErr
Limit errors to 5 lines, fixed some other issues.
remove commented test
Add comment and prevent completion in type paramter of class expression
Add test for completion in type parater of type alias
Apply suggested fixes to `arguments` PR
Merge branch 'master' into moduleResolutionStrategies
initial implementation of module resolution for node/requirejs
Add `arguments` to completion list #4249
Merge branch 'master' of https://github.com/Microsoft/TypeScript into addTsConfigWatcher
Merge pull request #4309 from Microsoft/fix4274
CR feedback. Add more tests.
Merge pull request #4086 from Microsoft/sourcemap
Merge pull request #4290 from Microsoft/fix4277
Merge pull request #4154 from Microsoft/reuseAndCache
merge with master
Merge branch 'master' into reuseAndCache
Merge pull request #4281 from adidahiya/expose-scanner-typings
Merge pull request #4330 from SaschaNaz/formatTsx
Merge branch 'master' into sourcemap
Do not show completions in type parameter of type alias
Merge pull request #4319 from Microsoft/renameDependencies
addressed PR feedback
fix jsxelement formatting
Fix null reference in type parametr of type alias
make 'require is defined' a precondition for Node-based sys
update baseline for compiler tests
Remove the extension.d.ts and move the content to core.d.ts
Merge pull request #4310 from Microsoft/fix4170
Further fixes
allow transpiler to provide alternative names for dependencies
Merge pull request #4308 from Microsoft/adjustNodeCheck
Fix File constructor
Fix document.open return type
Added missing dictionaries also
Add missing types in webworker.generated.ts
Merge pull request #4200 from Microsoft/unionPartialSignatures
add 'browser' section to suppress import discovery for webpack/browserify
Merge branch 'master' into fix4274
Merge pull request #4305 from ToddThomson/SpaceWithinNonEmptyBrackets
Fix #4170, remove error when using import=require syntax in t=ES6 and in ambient context
Fix #4274: When collecting linked aliases use SymbolFlags.Alias to capture local aliases as well
Addresses PR comments
CR feedback
adjust check for node env to handle webpack\browserify
Make parameter littleEndian in DataView methods optional
Fix ImageData constructor
Merge branch 'master' into fix4277
handel merge conflict, use refPos instead of start
Merge pull request #4303 from SaschaNaz/fixClassExpressionFormatting
Add Spacing for Nonempty Brackets Formatting Option
fix class expression + expressionWithTypeArgument
CR feedback
Merge branch 'master' into omitComments
Merge pull request #4230 from Microsoft/commentsNotPreserveForCallExp
Remove asterisks
Merge branch 'master' into commentsNotPreserveForCallExp
Add asterisks
Merge pull request #4292 from jdavidberger/master
Test cases that address https://github.com/Microsoft/TypeScript/issues/4288
mismatch order of arguments
Fix #4277: Ensure we are passing refEnd and not length to findSourceFile.
Add test
Fix bugs and add support for @param expressions
Enable intellisense in jsDoc tag @type brackets
Add JsDoc intellisense for JavaScript files
Make createScanner external (fixes #4057)
Merge pull request #4279 from Microsoft/highlightRefsInOneDocument
Merge pull request #4276 from SaschaNaz/typeAssertionFormattingFix
keep only document highlights from the original file
Merge pull request #4228 from RyanCavanaugh/jsxHash
Fix comment
fix generics/type-assertion formatting
Fix comments
Merge pull request #4179 from Microsoft/exportDeclarationsInSystem
addressed PR feedback
Merge pull request #4133 from Microsoft/addNewLineHelper
Merge pull request #4006 from Microsoft/JSDocCommentScaffolding
Merge branch 'master' into JSDocCommentScaffolding
Merge pull request #3858 from zhengbli/fixWorkerType
Merge pull request #3918 from zhengbli/issue3884
Merge pull request #4257 from Microsoft/fix3912
Fix #3912: emit declaration for binding elements correctelly
Merge pull request #3848 from zhengbli/errorlist
Merge branch 'master' of https://github.com/Microsoft/TypeScript into errorlist
Add baseline for error baseline
Add comments to do clean-up
Rename parameter
Remove silly function
S p a c e s
Merge pull request #4205 from Microsoft/fixAbstractAssignabilityRestriction2
Fix case where # occurs after > in JSX expression
Merge pull request #4213 from tinganho/columnRows
save files changed in refactoring
move helper and add capture of this
added a clarifying comment
Accepting new baselines
Adding new test
Making partial signature matching more inclusive
Adds columns and rows properties to process.stdout
fixed null de-reference
Update baselines
Updated baselines
Add tests for preserving comments
Added test
Fixed assignability bug
Preserve comment in arguments of call expression and object literal
Addressing CR feedback
Merge pull request #4203 from hoanhtien/fixOccurrenceTypos
added missing test assets
Merge pull request #4202 from Microsoft/fix4194
Fix #4159: look up the type alias paramter within the context of the parent type alias declaration
deduplicate module dependencies
Merge pull request #3899 from Microsoft/fixTypeResolutionInTypeSerialization
Use template string to shorten code.
Merge pull request #4201 from Microsoft/fix4025
delete entry from the cache when referenced file is removed, added tests
Fix #4194: emit type paramters in type alias declaration
Fix mistyped `occurrence`.
merge with master
Updated baselines
simplified docParams
Fix #4025: report options diagnostics
Merge pull request #4106 from RyanCavanaugh/allowTsxStringIndexers
Merge branch 'master' into fixTypeResolutionInTypeSerialization
Merge pull request #4096 from RyanCavanaugh/renameClosingTags
Merge pull request #4099 from RyanCavanaugh/betterTsxCompletion
Fixing fourslash test
Accepting new baselines
Adding/fixing tests
Allow partial matches in union type signatures
Merge pull request #4139 from hoanhtien/documentHighlights
Merge pull request #4124 from ShyykoSerhiy/fix-3991
Merge remote-tracking branch 'microsoft/master' into documentHighlights
simplified a conditional
Merge pull request #4172 from hoanhtien/fixFormatOnChainedCallbacksIssue
Use combinesPath.
Add filesToSearch to documentHighlights request.
change '*' to '-' in lists
emit export declarations for system modules as a part of 'execute' method
Merge pull request #4008 from weswigham/fix-many-linter-errors
Address PR feedback.
Make 'predicate' optional and DRY
Always indent PropertyAccessExpression.
addressed CR feedback: merged getDefaultModuleResolver and resolveModuleName into one function, added comments
Merge pull request #4165 from RyanCavanaugh/useAssignabilityForInstanceofTypeguard
Add tests and fix spelling
Merge pull request #4157 from Microsoft/spaceAfterDotInConstEnums
Merge pull request #4167 from Microsoft/updateLangSpec
Addressing CR feedback
Merge pull request #4112 from Microsoft/nonObjectTypeConstraints
Merge pull request #4153 from Microsoft/tupleTypeInference
addressed PR feedback, added more tests
Updating language specification
Use different relation for `instanceof` type guards
Addressing CR feedback
emit space before the dot for property/element access expressions if expression part is integer const enum
addressed PR feedback
merge with master
remove asserts
Address feedback.
removed extra whitespaces, added commments
resolveModuleName => resolvedModuleNames, added tests
Fix `occurance` typo.
Merge remote-tracking branch 'microsoft/master' into documentHighlights
Fix new linter errors
Conform lint of the future, unify quotations
Fix as many linter errors as possible
Adding test case
Add explicit handling of tuple-to-tuple type inference
Merge pull request #3995 from weswigham/patch-2
Merge pull request #4120 from basarat/feat/shebang
changed containsSuperCall to check if super call is computed property name
Expose document highlighting to server.
CR feedback
fixed logging
respond to cyrus
Merge remote-tracking branch 'origin/master' into reuseAndCache
Fixed newline handling
rename feature
reverted a hard-coded '\r\n'
added helper
Fixed a comment
Merge pull request #4121 from Microsoft/NodeFlagsOnSuperCall
test(shebang) error case
added baselines
added tests
fix issue https://github.com/Microsoft/TypeScript/issues/3991
always set NodeCheckFlags when checking super expression
emit shebang
test(shebang) desired outcome
scanner for trivia + accept baselines
Merge pull request #4111 from Microsoft/systemModuleWithEmitHelpers
Merge pull request #4113 from rgbkrk/npm-scripts
Run builds, tests, etc. without global jake
Adding new test
Also fix the case where we are to the right of a spread expr
Accepting new baselines
Support assignability with non-object type constraints
Remove 'debugger' statement
Merge pull request #4108 from Microsoft/diagnosticsDiagnosticsDiagnostics
refactoring
Emit the helpers inside the module body Fixes #3655
Adding testcase for extends helper emit when generating system module Testcase for #3655
Use one call to 'reportDiagnostics'.
Double quotes.
Fix issue with exit status by ensuring the same 'diagnostics' variable is reused.
merged with master
Implements #4105 - a string indexer in 'props' disables errors due to surplus attributes
Offer JSX attribute intellisense between string-literal props and the closing tag. Fixes #4098
Fixes renaming not affecting JSX closing tags (#4093)
Merge pull request #4079 from RyanCavanaugh/fixJsxSourceMaps
Merge pull request #4088 from Microsoft/fixup3935
Merge pull request #4039 from Microsoft/bin2lib
merge with master
Merge branch 'master' into bin2lib
Accepted baselines.
Style and rename test.
Existing baselines updates
Fixed the comments and source map emit interaction. Fixes #4003
Adding tests for source map with comments (#4003)
Merge pull request #3904 from hoanhtien/tsconfigTest
Merge pull request #3935 from pcan/issue_3932
Merge pull request #4074 from Microsoft/relaxIndexSignatures
Adding numeric index signature to test
Merge pull request #4084 from Microsoft/noEmitErrors
Merge pull request #3993 from impinball/patch-1
Parameterize 's' to remove implicit 'any'.
Don't emit when compilation fails.
Address comments.
fix formatting
merge with master
Including numeric index signatures
return ambient external modules as a results of preprocessing
do not try to resolve modules that has '!' in the name, put .tsx extension to the end of the list
Add a source map test for JSX preserve
Correctly emit source maps when emitting JSX text under --jsx preserve
Merge pull request #4061 from RyanCavanaugh/fix4060
Merge pull request #4065 from RyanCavanaugh/logBind
Use arrow functions instead of .bind
Accepting new baselines
Don't require index signature when target index signature type is any
Merge pull request #4033 from Microsoft/updateLangSpec
Added section on Names
Merge pull request #4064 from RyanCavanaugh/tsconfigFilesError
Adds success message for tsconfig.json init
Removes trailing comma logic and fixes default values
Bind console log method so it works in the browser
Error if 'files' property is not an array
Merge pull request #3946 from Microsoft/disambiguating
Update test baseline
Merge remote-tracking branch 'upstream/master' into fix4060
Don't forget about spread attributes
Merge pull request #4022 from Microsoft/defaultInitializer
Merge branch 'master' into disambiguating
Address code review
Merge pull request #3986 from Microsoft/anyFunctionTypeDontAddCandidate
Merge branch 'master' of https://github.com/Microsoft/TypeScript into anyFunctionTypeDontAddCandidate
Fix naming and update comment
Merge branch 'master' of https://github.com/Microsoft/TypeScript into defaultInitializer
Make declaration emitter call resolver.isOptionalParameter
Correctly identify JSX expressions as identifier parents
Raise error if mixing tsconfig.json and directives.
Merge pull request #3969 from Microsoft/forwardRefsInEnumInitializers
updated baselines
merge with master
Merge branch 'master' into forwardRefsInEnumInitializers
Remove debugger;
Allow tsconfig.json to be added to fourslash test.
Merge pull request #3897 from Microsoft/errorForUseSuperInNullExtension
Merge branch 'master' into errorForUseSuperInNullExtension
Merge branch 'master' of https://github.com/Microsoft/TypeScript into defaultInitializer
Merge branch 'master' of https://github.com/Microsoft/TypeScript into anyFunctionTypeDontAddCandidate
Merge pull request #3911 from Microsoft/removeForLoop
cleanup
Merge branch 'master' into removeForLoop
Merge pull request #3942 from RyanCavanaugh/fix3903
Use Debug.assert instead of Debug.fail; preserve 'any' variants
Merge pull request #3973 from Microsoft/disallowDefaultExportDeclMerging
Accepted baselines.
Fixed test message.
Added a test.
Simplify code a bit.
space -> spaces
Addressed CR feedback.
Accepted baselines.
Added test.
Moved LKG folder to lib
tsserver: set +x
Defaults to no files property
Adds project init
Adds project init tests
Adds JSON with comments and trailing comma tests
Merge pull request #4034 from basarat/patch-1
SourceFile.fileWatcher should be optional
Merge branch 'master' into errorForUseSuperInNullExtension
Address CR
More formatting glitches
Fix formatting glitches
Update word2md tool to support hyperlinks
Updated language specification
Added tests for issue #3932
Invert null-check in emitSerializedTypeNode
added an annotation
fixed a test
add newline if we directly precede the declaration
Added a regex test
Simplified Tests
Simplfied Return Values
Merge branch 'master' of https://github.com/Microsoft/TypeScript into anyFunctionTypeDontAddCandidate
Merge branch 'master' of https://github.com/Microsoft/TypeScript into addTsConfigWatcher
Add file watcher for tsconfig.json
Add tests
Accept baselines and fix test comments
Adjust notion of minArgumentCount to account for required parameters with default initializers
Remove error for parameter with default initializer before a required parameter
Use 'process.stdout.write' to ensure colors get displayed correctly on Windows.
Merge pull request #4020 from Microsoft/announceNightly
Add nightly info to README.md
Merge pull request #3982 from Microsoft/sourceMapsInTranspile
Added period.
Merge pull request #4009 from weswigham/patch-3
Update README.md
Update README.md
Add `jake lint` to README
Merge pull request #4005 from weswigham/fix-jake-lint
Merge branch 'master' into JSDocCommentScaffolding
Add Tests
Check if inside the declaration
Adds space
Merge pull request #3967 from weswigham/issues/3813
Fix jake lint with newest tslint
Merge pull request #3875 from Microsoft/nightly
Merge pull request #3974 from Microsoft/addReferencesForFourslashInTestDir
Merge pull request #3990 from Microsoft/getBaseTypes
Semicolons.
Remove exit test
More linting from PR
Publish to TypeScript itself, create a task to preview changes.
Fixed spelling error
Feedback from PR, lint fixes
Merged fourslash fix
Merge branch 'master' into JSDocCommentScaffolding
fixed a typo
Merge pull request #3913 from ShyykoSerhiy/fix-3859
Update tslint.json for latest versions of tslint
Remove preferGlobal flag
Update AUTHORS.md for release 1.6
Add AUTHORS.md
Add getBaseTypes on TypeObject in services
Address CR
Add comments
Add tests
Accept baseline
Don't add an inference candidate if it contains the anyFunctionType
Accepted baselines.
Merge remote-tracking branch 'origin/master' into disallowDefaultExportDeclMerging
add transpileModule function that can return emitted source map
Merge pull request #3955 from RyanCavanaugh/fix3928
Merge remote-tracking branch 'upstream/master' into fix3903
Baseline update
Remove check about ctors returning object types -- it isn't useful
Qualification
Move message after guide
Accepted baselines.
Add suggestion to error message.
Merge pull request #3966 from Microsoft/importAliasesInSystem
Accepted baselines.
Take default export spaces into account when checking merged declarations.
Accepted baselines.
Added another test.
fix error code
better error message when using forward references in initializers of const enums
Fix tslint issues
fixed some warts
Narrow exported session API, Unit tests for session API
hoist top level import equals declarations in System modules
Merge pull request #3965 from Microsoft/abstractRunnerBase
fixed a reference in a test
Move declarations to top of tests\cases\fourslash.ts
make RunnerBase abstract
A test
Add test harnesses
Remove debugger statement
Correctly identify identifiers inside JSX exprs as expression identifiers
Merge pull request #3823 from Microsoft/strictObjectLiterals
Accepting new baselines
Adding comma in error message
Merge pull request #3945 from Microsoft/bulkReexportInSystem
Merge pull request #3944 from Microsoft/constEnumModules
Add tests
Clean up some code
Merge pull request #3586 from vvakame/addEsModule
Add tests and baselines
Fix reporting an error on block-scope for module
System: use bulk exports
treat modules that are merged with values as non-const-enum
Adjust carat after insertion
Fix crash when the element instance type was undefined
Merge pull request #3919 from Microsoft/remove_resolveLocation
Merge branch 'master' of https://github.com/Microsoft/TypeScript into remove_resolveLocation
Address PR feedback
Merge pull request #3879 from Microsoft/stringifySpaceParam
Merge pull request #3923 from kimamula/string_includes
Fix for issue #3932. Moved the null-check in emitSerializedTypeNode
Fix for issue #3932, added null-check.
Update tests and baselines
Only remove triple-slash if it is not at top of file
Accepting new baselines
Better error message
Merge branch 'master' into strictObjectLiterals
Accepting new baselines
Fixing fourslash tests
Preserve order in union types
Add includes method to String interface, and remove contains
Clean up the language service aliases to check functions
Clean up pushTypeResolution
Instantiate signatures if there is an overload resolution error but type arguments present
Only consider a type resolution sequence a cycle if none of the items in the sequence have types
Remove resolveLocation
added comments
Added Comments and assertions
Get Scaffolding
Remove Garbage
cr feedback
Merge pull request #3787 from Microsoft/fixingTypeParameters
fix issue 3884
fixed indent issue, changed "for" loop to "for of" loop
Fix comment
Merge pull request #3902 from Microsoft/tupleTypesAny
Merge branch 'master' of https://github.com/Microsoft/TypeScript into fixingTypeParameters
Merge branch 'master' of https://github.com/Microsoft/TypeScript into tupleTypesAny
Merge pull request #3900 from Microsoft/emptyBindingAssignmentPatterns
Addressed Daniel's Comments
fixed strictModeInConstructor.error.txt baseline
fixed issue #3859
fixed a comment
remove for-loops
refactored isInComment, isInString
Fixed out of bounds error; made index start directly at the line number.
Don't expand tabs; just use a space.
Add tests
Accept baselines
Don't fall back to any when typing tuples
Merge pull request #3901 from Microsoft/fixReadingRWC
refactored isInComment, isInString
Fix reading rwc file
Merge branch 'master' into JSDocCommentScaffolding
Renamed/accepted baselines.
Renamed tests.
Accepted baselines.
Only emit the RHS in an empty assignment pattern.
Accepted baselines.
Added tests.
Accepted baselines.
Add Comments
Fix fourslash test
Tabs to spaces.
Added tests.
Merge branch 'master' of https://github.com/Microsoft/TypeScript into errorlist
Update updateErrorCheck function
Accepting new baselines
Fixing fourslash tests
Getting rid of subtype reduction for union types
Fixes an issue when resolving a type name as an expression when emitting type metadata for decorators
Merge pull request #3636 from Microsoft/semanticBindingPropNames
Add tests and baseline
Add check for super when extending null
Fix CRLF
Accepted baselines.
Added single quotes around the declaration name in an error.
Merge pull request #3888 from Microsoft/fixDroppedResponses
Doc notes.
Fixed #3887 tsserver drops responses
Accepting new baselines
Updating fourslash tests
Deduplication of tuple types in unions
Merge pull request #3546 from Microsoft/tsConfigExcludeLSSupport
Minor cleanup.
Removed baselines Ryan forgot to remove.
Accepted baselines.
Added tests.
Merge pull request #3880 from Microsoft/superElementAccess
Merge branch 'master' into semanticBindingPropNames
Merge branch 'ShyykoSerhiy-3454'
Move startIndex declaration to the top
Merge branch '3454' of https://github.com/ShyykoSerhiy/TypeScript into ShyykoSerhiy-3454
Make tests intentionally expect wrong results until we do "smarter" things for object binding elements.
Update LKG
Merge branch 'release-1.5'
Fixed tests.
Updated baselines.
Enable retrieving the type of a binding property name when an initializer/type annotation is present.
Use type predicate for 'isVariableLike'.
Fixed reporting of problems with tests.
Merge branch 'master' of https://github.com/Microsoft/TypeScript into fixingTypeParameters
Add tests.
Add downlevel emit tests
Add more tests and update baselines
Add tests
Allow super element access
Merge pull request #3818 from Microsoft/exportSpecifierCompletions
Fix comment spacing for readDirectory in shims.ts
Merge branch 'tsConfigExcludeLSSupport' of https://github.com/Microsoft/TypeScript into tsConfigExcludeLSSupport
CoreServicesShimHost and CoreServicesShimHostAdapter changes to support TSConfig exclude from the language service
Use 'exec'.
Make JSON.stringify's 'space' parameter have type 'string | number'.
Merge pull request #3877 from Microsoft/port-3797-to-master
addressed PR feedback: added comments
dispose snapshot only if new file differs from the old file
dispose script snapshots from the old source file
Added a 'publish-nightly' task to to the Jakefile.
Only remove triple-slash when compilerOptions.removecomments is true
Add tests
introduce ModuleResolutionHost interface
New deduplication algorithm for union types
PR feedback
Merge pull request #3863 from Microsoft/tslintHarnessCode
Fixed indentation
Formatted a comment
Update LKG
Merge pull request #3797 from Microsoft/disposeSnapshot-1.5
Fix var->let that broke sourcemap baselines
Minor fixes
Fix let->var related errors, revert some lets
Fix CRLF
Add configureNightly script.
Fix jakefile
var->let and a few misc other fixes
Bump version number.
Update linting task to include harness sources
Fix semicolon
Fix file endings.
Fix most tslint errors in the harness
Merge pull request #3860 from DickvdBrink/fix-occurrences-in-classexpression
Add test for occurrences in ClassExpressions
Fix occurrences in ClassExpressions
Merge branch 'master' of https://github.com/Microsoft/TypeScript into fixingTypeParameters
Merge pull request #3856 from Microsoft/widenTuples
Merge pull request #3822 from Microsoft/typeArgumentInferenceApparentType
Clean up and address CR feedback
Update ErrorEventHandler type in worker
Accept baselines
Add new tests
Allow tuples to be widened
added comment
fixed strictModeInConstructor baseline reference
fixed issue #3454
Merge pull request #3820 from Microsoft/newMochaReporters
Setup shim and stubbed out functions
Changed order of parameters.
Just use 'filter'
Addressed CR feedback.
Merge pull request #3846 from DickvdBrink/abstract-occurrences
Merge pull request #3850 from Microsoft/textClassification
Merge branch 'master' of https://github.com/Microsoft/TypeScript into errorlist
Update shim tests.
Merge branch 'master' into textClassification
Update tests.
Classify Identifiers as 'Identifier', not 'Text'.
Added more test cases for highlighting abstract keyword
incorporate changes in master
Merge pull request #3722 from Microsoft/abstractConstructorAssignability
Fix tests
Merge pull request #3543 from weswigham/lssl-interface-improvement
Merge pull request #3682 from Microsoft/nodeSystemHostWriteSync
Remove unnecessary checking
PR feedback for abstract keyword occurrences
Added test for occurrences on abstract keyword
Highlight abstract keywords on classes and members
Merge pull request #3843 from DickvdBrink/dontFallThrough
Remove log statements
Merge branch 'master' of https://github.com/Microsoft/TypeScript into fixingTypeParameters
Merge branch 'master' of https://github.com/Microsoft/TypeScript into typeArgumentInferenceApparentType
Don't fall through to the modifier check for get/set keywords
Merge branch 'master' of https://github.com/Microsoft/TypeScript into errorlist
Merge pull request #3738 from SaschaNaz/parenIndentFix
Accepting new baselines
Fixing bug in test
Ignore freshness in subtype reduction / Treat Object as {}
Update LKG
Addressing CR feedback
Support union and intersection types in checks
PR feedback
Merge branch 'master' into addEsModule
Accepting new baselines
Switch to assignability check and fix compiler bugs found by check
Fixed Testing
Add tests
Take the apparent type of the source in type argument inference
Merge master
Use new mocha-fivemat-progress-reporter by default instead of dot reporter
Pick your poition.
Fixed conversion from forEach to for-of
Actually move check outside the loop
Fix merge mistake.
Add analogous export test.
Merge branch 'master' into exportSpecifierCompletions
Account for export/import specifier renames and namespace import names in completion.
Added test for completion in namespace imports.
Remove broken badges
Clarify function name.
Updated baselines.
Added error recovery for missing 'from' keyword in an export declaration.
Accepted baselines.
Added tests.
Handle export declarations with module specifiers as well.
Merge branch 'master' of https://github.com/Microsoft/TypeScript into fixingTypeParameters
Newline.
Merge pull request #3690 from Microsoft/moveTypeSerializationToEmitter
Added type serialization for intersection types
Updated Baselines
separated tests for readability
Move assignability test outside inner loop
Merge branch 'master' into moveTypeSerializationToEmitter
PR feedback
Merge pull request #3643 from Microsoft/completionListWithLocalName
Merge pull request #3815 from Microsoft/fix3805
Made check more readable
Updated Baselines
Updated Error Message
Add a comment for isInferentialContext
Make update-sublime depend on local task
Merge branch 'master' of https://github.com/Microsoft/TypeScript into completionListWithLocalName
Add test for using unicode escape as function name
Merge pull request #3807 from Microsoft/importSpecifierFilteringForCurrentName
Baselines for weak types
Implementation for weak types
Don't filter out JSX attributes.
Added failing test.
Spacing.
Don't filter out the current item.
Added failing test.
Merge pull request #3803 from Microsoft/tsLintSupport
merge master
Final CR feedback fixes
Create top level describe block for runners so status is reported at runner level
Merge pull request #3801 from zhengbli/ms_master
Use getDecalredName in service layer instead of symbol.getName
Added tests for completion lists in export clauses.
Add className property in SVGElement
for...in not for...of
Add jake task for linting the compiler sources
Address code review
Readd className to SVGStylable for compatibility
Merge pull request #3798 from Microsoft/typeArgumentInferenceClassExpressions
Merge pull request #3776 from zhengbli/ms_issue2838
Merge pull request #3773 from zhengbli/ms_issue3753
Merge pull request #3774 from zhengbli/ms_issue3613
Merge pull request #3775 from zhengbli/ms_issue3220
Merge pull request #3777 from zhengbli/ms_issue1074
clean old program to prevent it from being captured into the closure
Add API for project level GetErr
CR feedback
More tests
Merge remote-tracking branch 'origin/master' into reuseProgramStructure
addressed PR feedback
addressed PR feedback: added comments
Merge pull request #3763 from tinganho/typePredicateDeclEmit
Fixes spacing issue
Merge pull request #3795 from ShyykoSerhiy/3486
Add a test
Infer types to statics in a class expression
dispose snapshot only if new file differs from the old file
dispose script snapshots from the old source file
fixed issue https://github.com/Microsoft/TypeScript/issues/3486
fixed indent issues
Accepts baselines
Adds type predicate signature display and addresses CR feedback
Accepts baselines
Fixes emit of type predicated in delcaration files
Merge pull request #3789 from tinganho/formatFourslash
Fixes fourslash code formatting
Object literals can only have properties that exist in contextual type
Turn off a few rules and more cleanup post merge
Add hopefully helpful comments
Don't bother doing inference from the function parameter if you are about to fix the type parameter
Add tests for type parameter fixing
Merge master
Accept baselines
Fix type parameters every time a parameter is assigned a contextual type
Merge pull request #3772 from Microsoft/allowModifier
Address code review
Merge pull request #3778 from Microsoft/noPushApply
Fix issue https://github.com/Microsoft/TypeScript/issues/3277
Merge pull request #3771 from RyanCavanaugh/fix3737
Don't call push.apply, it can stack overflow with large arrays.
Fix FormData constructor
Fix the definition of interface ErrorEventHandler
Add missed file
Move className and id from HTMLElement to Element
Only check if method declaration has modifier when method is declared in object literal expression
Merge branch 'fix3737' of https://github.com/RyanCavanaugh/TypeScript into fix3737
Actually fix the bug this time.
Remove file that shouldn't have been in this branch
Merge remote-tracking branch 'upstream/master' into fix3737
Use symbol.getName for classExpression and functionExpression since it now correctly represent declared-name.
Merge branch 'master' into completionListWithLocalName
Merge branch 'master' into semanticBindingPropNames
Merge pull request #3727 from Microsoft/elipsisMeansQuiet
Merge pull request #3757 from Microsoft/noImportClauseBuilders
Correct "NodeList" to "NodeListOf"
Merge pull request #3770 from RyanCavanaugh/fix3764
Cleanup
Changed the return type of several well-known functions to NodeList<Element>
Improved fix from @JsonFreeman
Add window.URL
Merge pull request #3769 from Microsoft/bindingAnonymouseWithName
Add tests
Remove check if node is a block
Delete some files that shouldn't have existed
Whitespace
Addressed CR feedback.
Fix bug #3737 (exported JSX classes props not validated)
Merge branch 'master' into semanticBindingPropNames
Fix up other React tests
Mark 'React' symbol as used and error if it doesn't exist
Add testcase for #3764
Update tests
Bind classExpression and functionExpression to its name if the expression is declared with name
Fix comment
Merge pull request #3751 from RyanCavanaugh/fix3678
Address code review, handle type parameter in completion list inside class expression
Merge branch 'master' into noImportClauseBuilders
Merge branch 'master' into elipsisMeansQuiet
Merge pull request #3698 from Microsoft/noObjectBindingBuilder
Merge pull request #3561 from Microsoft/cancellableDiagnostics
Removed unnecessary check.
Fix test.
Adding comments.
Merge branch 'master' into cancellableDiagnostics
Added original test case.
Remove builder from import clauses.
Refactor completion code for object literals/bindings and import clauses.
Verify builders.
Use a more accurate test name.
Merge pull request #3556 from Microsoft/cancellableClassification
Remove shim cancellation test.
Address code review
Throttle how often we call into the host side to check for cancellation.
Merge branch 'master' into completionListWithLocalName
Avoid unnecessary contextToken checking, addressed CR feedback.
Merge branch 'master' into cancellableClassification
previousToken -> contextToken
Merge pull request #3622 from Microsoft/intersectionTypes
Added test for JSX spread properties.
Properly parse keyword-like identifiers in JSX
Updated test.
Fix comments
updated baselines
New Test
Merge pull request #3724 from Microsoft/apparentTypeOfContextualType
Merge branch 'master' into abstractConstructorAssignability
Merge pull request #3723 from Microsoft/fixErrorCheckIndentation
Fixing first example
Merge branch 'master' into intersectionTypes
Changing comment per CR feedback
Merge pull request #3719 from Microsoft/createNodePos
Fixed/added test.
Merge pull request #3726 from Microsoft/restParamModifier
Don't show completion with dots not part of property accesses and qualified names.
Added test.
Add tests
Disallow modifiers on rest parameters
Remove unnecessary check.
Add tests for inferential typing
Accept baselines
Always take the apparent type when you retrieve a contextual type
Changed tabs to spaces and reformatted file
updated baselines
Check abstractness via constructor return types
Change default node pos/end to -1
Merge pull request #3717 from Microsoft/builderInIndexSignature
Add builder in computed properties and index signatures.
Added tests for index signature completion builders.
Merge pull request #3712 from Microsoft/abstractExtraError
Merge pull request #3333 from aozgaa/mergedDeclarationClassInterface
update baselines
Update test
merged with master
updated baselines
Added conformance test
Prevent extra checks once abstract new-call detected
Merge pull request #3699 from RyanCavanaugh/fixJsxAttribCompletion
Merge pull request #3701 from zhengbli/issue3216
Address code review
Fix issue #3216
Merge pull request #3579 from Microsoft/abstract-classes2
removed a comment
Filter out would-be-duplicate names from JSX attribute completion
Merge pull request #3677 from RyanCavanaugh/updateSublimeTask
Appeasing Jason lite
Revert "Appeasing Jason"
Appeasing Jason
Fix attribute completion following JSX exprs
Address code review
removed a prototype
updated baselines
added tests
fixed union-type determination, moved abstract implementation test, and reformatted a line
Update verification function to be able to test that the only symbol with certain kind, document, and text is the completion list
Added more test cases for object binding patterns.
Clean up stripQuote and add comments
Fix rename for class expression
merged with master
moved initialization and changed a comment
Documentative and conservative checking.
Don't show a builder in object binding pattern completions.
Added checks for new identifier location in tests.
Address CR: Use getDeclaredName and getDeclarationOfKind
Add comment to clarify why we don't use copySymbol
Merge pull request #3697 from Microsoft/testObjectBindingCompletionWithUnionTypes
Add test case for completion when destructuring from a union type.
fexed comment and initialization
Merge pull request #3078 from Microsoft/asyncFunctions
Bring back 'reportDiagnostics'.
Make output reliant on whether stdout redirects to a terminal; use forEach.
Merge branch 'master' into asyncFunctions
Give the new reporter a more reasonable name.
Just squiggle the entire line for middle lines (sans trailing space).
Got "prettier" error printing working.
Add support to tell whether output directs to a terminal emulator.
Adds additional logic to determine how to emit a type reference for decorator metadata
Addressing CR feedback
Moves type serialization to the emitter.
Fixed generic abstract class inheritance and some comments
fixed an erroneous assertion
updated baselines on classAbstract tests
Merge pull request #3675 from RyanCavanaugh/fix3674
Revert isRelatedFlags changes
Adding test for inference with intersection type as target
Support intersection types as target in type inference
Accepting new baselines
Merge branch 'master' into intersectionTypes
Node System host write - need to loop since writeSync might not write all bytes
Rule changes
Merge pull request #3641 from Microsoft/exportSepcifierInDeclarations
Responding to Jason
Merge branch 'master' into completionListWithLocalName
Merge branch 'master' into completionListWithLocalName
Merge branch 'contextSensitiveIsRelatedTo' into abstract-classes2
fixed a comment
merged with contextSensitiveRelatedTo
fixed a conflict
merged in master
Fix tabbing
Merge branch 'master' into contextSensitiveIsRelatedTo
added flag as argument to checkTypeRelatedTo
Delete some files
Add module setting + test files
Add spaces between if and (
Correct flag JSX elements as being used for the purposes of module imports
Merge pull request #3564 from RyanCavanaugh/jsxAndAs
Missed a file in merge; use Tristate.True in arrow fn check
Merge branch 'master' into semanticBindingPropNames
Don't use ES5 array APIs
Merge pull request #3367 from Microsoft/fixDeFaultOfFindAllRefsToMaster
Merge remote-tracking branch 'upstream/master' into jsxAndAs
Update for style :tophat:
Use full display name in tests.
Addressed CR feedback.
Added tests.
Merge pull request #3637 from RyanCavanaugh/errorCheck
Move token scan to inside `if`
CR feedback
PR feedback
Merge branch 'master' of https://github.com/Microsoft/TypeScript
Add todo comment to use getDeclaredName
Merge pull request #3644 from Microsoft/refactoring
Merge branch 'mihailik-patch-1'
use double quotes
Adding test
Preserve order in intersection types
Improve commandline help for --jsx
Merge branch 'master' into fixDeFaultOfFindAllRefsToMaster
PR feedback - comments and whitespace adjustments
Conflict with Object.prototype.watch in FireFox/Gecko
Adding a few more tests
Assignment compatibility fix / contextual intersection types
Change var -> let and use destructuring
Support completion in named class expression and named function expression
Fix build errors due to naive var->let replacement
Add test for completion in class expression
Add test for completion in function expression
Add name of function expression into completion list
Fix assert with declaration emit for export specifier for a global
var -> let
Fixing up whitespace and semicolons
Basic tslint rules, non-final list
Merge branch 'contextSensitiveIsRelatedTo' into abstract-classes2
CR feedback
Error check script
Remove unreferenced errors
merged master
Accepted new baselines.
Check for definedness on the pattern's type.
Added one more test.
Allow semantic operations to be performed on property names.
Just use ranges, don't bother iwth renameInfoSucceeded.
Fix marker name.
Merge pull request #3635 from DickvdBrink/format-default
added context flag
Added test for formatting on default keyword
Fixed formatting spaces on default keyword
Add two new tests to test for regression.
Merge pull request #3632 from Microsoft/fixTestCommentAndName
Don't error on JSX elements when JSX.Element isn't present
Drafting constructor assignability restrictions
Renamed test.
Accepted baselines.
Fixed coment.
Merge pull request #3631 from Microsoft/externamEtc
Added failing tests for when RHS is a destructuring.
No more 'scriptLexicalStructure'.
Underscore typings.
externam -> external
Added failing tests.
Merge pull request #3615 from Microsoft/completionsInObjectPatterns
addressed PR feedback
Adding tests
Accepting new baselines
addressed PR feedback
Implement intersection types
Merge pull request #3621 from DickvdBrink/unused-vars
Remove unused variables
fix formatting in parser
merge with master
Renamed function.
Merge branch 'jbondc-minor-3'
Revert changes to the parser and augment check to the emitter to handel '1..toString' case
Merge pull request #3617 from DickvdBrink/format-protected
Added test for formatting on protected modifier
Fixed formatting spaces on protected keyword
Added tests.
Merge pull request #3601 from Microsoft/emptyBindingPatternParam
Spreaded anys should satisfy all required properties
Merge pull request #3614 from Microsoft/tsServerBuildDependencies
revert unintentional change
cleaner loop
added Program.structureIsReused property, disallow reuse if target module kind differs in old and new programs, move setting of resolvedModules cache to the program, added tests
Merge branch 'minor-3' of https://github.com/jbondc/TypeScript into jbondc-minor-3
Update LKG
consolidated looping through class members into one loop
Merge branch 'release-1.5'
Merge branch 'SaschaNaz-blockFormParameterIndentation'
Rename functions and variables, also a small refactoring.
Merge pull request #3611 from tinganho/goToDefinitionTypePredicate
Merge pull request #3249 from Microsoft/resolveDecoratorAsCall
Renamed tests.
Use 'propertyName' when available in a BindingPattern.
Added more tests.
Add the services sources as dependencies to tsserver.
Got filtering working in object binding patterns.
Basic completion in object destructuring working.
Don't print in the middle of tests.
Changed ordering of verifications.
Accept baselines (missing files).
Accept baselines
Don't report an error for 1.toString(), just emit a space for JS compat.
Remove space and s
Changed symbolflag
Accept baselines
Fixes goto definitions for type predicates
Merge pull request #3547 from Microsoft/updateMapDeclaration
Merge pull request #3568 from Microsoft/classExpressions
Another change suggested in CR
Adding extra test per CR
Merge branch 'blockFormParameterIndentation' of https://github.com/SaschaNaz/TypeScript into SaschaNaz-blockFormParameterIndentation
Generalize logic for upcoming work on object binding completion.
Add test case for when in the middle/at the end of the word.
Clean up 'getContainingObjectLiteralApplicableForCompletion'.
Merged branch 'master' into resolveDecoratorAsCall
Added tests.
Updated baselines.
Preserve initializer.
PR feedback
updated comment in test and baseline
Update LKG
Merge remote-tracking branch 'origin/master' into reuseProgramStructure
Merge branch 'master' into abstract-classes2
Merge pull request #3608 from Microsoft/dontClassifyMissingNodes
accepted baselines
do not try to classify missing nodes
Re-fixed error message.
Added check to test
Fixed some error messages.
use existing information about module resolutions
Changed error message
Moved tests to classAbstractKeyword folder
Fixed order of arguments in error message
Add Jake task to update the Sublime plugin
Merge remote-tracking branch 'upstream/master' into jsxAndAs
reuse structure of the program if changes in files don't affect imports/references, remove module resolution from the checker
Accepted baselines.
Added tests where parameters have initializers.
Accepted baselines.
Tabs -> Spaces
Merge branch 'master' into fixDeFaultOfFindAllRefsToMaster
Accepted baselines.
Check for number of binding elements in parameter patterns.
added baselines for new tests
new tests
updated baselines for new error messages
changed error messages and fixed comments
It's no longer safe to store JSX elem. attr. type in nodelinks.resolvedType
Accepted baselines.
Added tests.
p -> parameter
More cleanup
responded to some of Daniel's comments
moved comment
moved abstract-method-inheritance test to checkKindsOfPropertyMemberOverrides, changed error message
Unrelated baseline noise
Treat </ as a token in TSX files
Misc cleanup
Merge pull request #3596 from Microsoft/LKG-2015-06-22
Update LKG.
Fixes #2632 (invoking methods on numbers)
do not use `Object.defineProperty` in es3 target
improve  module loading interoperability for babel
Merge pull request #3580 from zhengbli/master
Moved async functions for ES6 behind experimental flag
Fix the issue that the "out" path is not relative to the path of tsconfig.json
fixed some indentation quirks, comments
update LKG
Fix async function emit for lexical arguments
updated baseline for new __extends impl
Merge branch 'master' into abstract-classes2
accepted baselines
moved tests, added a test
Merge pull request #3577 from Microsoft/disable_logging_1.5
Simplified checkClassPropertyAccess -- fixed bug in super access
Don't log by default.
Factor switch staement into a map and create a method to add members to it
Fix React emit for spread attributes when they are the first attribute
Fix emit for boolean attributes
added tests
declarations of abstract methods must be consecutive
Merge branch 'master' of https://github.com/Microsoft/TypeScript
Added shortcut in checkAwaitedType for isolatedModules
Merge branch 'master' into cancellableClassification
Add tests.
Adding a few tests
Merge branch 'release-1.5'
write to declaration file
Merge pull request #3565 from Microsoft/incrementalParserReuse
Merge pull request #3566 from Microsoft/port-3395
removed comment
removed premature parser check
wrap host.getCanonicalFileName in arrow function
Missed a few files in baseline-accept
Minor function rename
Add support for awaiting union types with mixed promise and non-promise constituents.
constructor cannot have modifier 'abstract'
Generate names of form class_N for anonymous classes
Fix incremental parsing issue.
Merge pull request #3555 from tinganho/typepredicateBug
Merge pull request #3498 from Microsoft/portFileMap
Baseline-accept
Conformance tests for JSX
Conformance tests for 'as' operator
Fourslash tests for JSX and As
Test support for TSX files
Formatting and LS for JSX and As
Emitter for JSX
Checker work for JSX + As
JSX/as support in tsc.js + error messages
Scanner / parser for JSX and As
Utilities + types setup for JSX and As
Accepting new baselines
Defer checking of class expression bodies
fixed comment, spacing
updated baselines
check for inheriting abstract member functions
PR feedback.
Update comment.
Cleaned up async return type check
Merge branch 'master' into cancellableDiagnostics
Merge branch 'master' into cancellableDiagnostics
Merge pull request #3530 from Microsoft/lessScanningDuringClassification
Merge pull request #3558 from Microsoft/diagnosticCleanup2
PR feedback.
Make type-checking cancellable.
Merge pull request #3559 from weswigham/fix-perftsc
Actually check types in checkClassExpression
Fix capitalization
Don't access diagnostics directly.  Use the supported Program API for them.
Merge branch 'master' into diagnosticCleanup2
Make it so all our diagnostics APIs return an independent set of diagnostics.
Merge pull request #3557 from Microsoft/spreadStackOverflow
Don't use spread operator when pushing arrays onto other arrays.
Make classification cancellable.
PR feedback.
Accepts baselines
Fixes type predicate crash bug
Merge pull request #3545 from Microsoft/emitNamespaces
Merge pull request #3542 from weswigham/jake-lssl
support modules as well as namespaces in external module conversion
Merge pull request #3527 from piloopin/fix-intl.d.ts
Accept baselines
Add a non-generic construct signature to Map, Set, and WeakMap
CoreServicesShimHost and CoreServicesShimHostAdapter changes to support TSConfig exclude from the language service
Add a unit test
feedback from pr #3542
Emit declarations of namespaces correctelly
Adding SyntaxKind.ClassExpression in a bunch of places
Cleaned up diagnostics
Changed createPromiseType to return emptyObjectType
Removed unneeded capture for lexical this
Moved getContainingFunction call in checkIdentifier
Inlined checks for NodeFlags.Async in parser
Removed unused getContainingParameter function
merged master
Merge pull request #3532 from Microsoft/exportSpecifierScoping
Merge pull request #3515 from Microsoft/classMemberWithMissingIdentifier
forbid calling abstract member foo() via super.foo()
Merge pull request #3516 from Microsoft/extendsExpressions
Accepting new baselines after master merge
Merge branch 'master' into extendsExpressions
Addressing more CR feedback
Accepting new baselines
Addressing CR feedback
Feedback form pr #3513
Merge pull request #3524 from Microsoft/extendsNull
Merge pull request #3541 from colbyrussell/master
Fix line endings in program.ts
Merge pull request #3529 from Microsoft/cleanupDoubleEquals
Squueze perf in syntactic classification.
Make resolveName ignore export specifiers without calling getSymbol
Scan less during classification.
changes that are non-breaking
changed to '==' to '===', '!=' to '!=='
Merge pull request #3526 from Microsoft/removeGeneratorParameter
Re-number enum.
Merge branch 'master' into removeGeneratorParameter
merge with extendsExpressions
Fix Intl.DateTimeFormat.format and Int.NumberFormatOptions signature
Remove generatorParameter and asyncParameter contexts.
Accepting new baselines
Accepting new baselines
Use Object.create(null) in __extends when base is null
Accepting new baselines after merge
Merge branch 'master' into extendsExpressions
Adding another comment
Adding comments and doing a bit of renaming
forbid abstract methods from having an implementation
Accepting new baselines
Workaround to match previous type writer output
Merge pull request #3517 from Microsoft/strictMode
PR feedback.
External modules are always in strict mode in ES6
Modules are always in strict mode in ES6.
Check namespaces for strict mode.
Remove 'strict mode' from parsing and checking, and make it purely something purely checked at bind time.
Fixed some indentation issues
Fix merge conflicts with master
Abstract keyword: Added parsing and some checks
Parse class member with a missing identifier in the presence of a modifier
Accepting new baselines
Adding basic tests
Accepting new baselines
Check that base constructor return types are identical Treat class extends clause as expression position in services.ts
Decouple ts.sys from the editorServices where possible
Export server & session without any node specifics
Merge pull request #3509 from Microsoft/simplerStrictModeChecking
Updated baselines
Merge branch 'master' into asyncFunctions
Accepting new baselines
Use instantiated signatures in super calls
Adding SyntaxKind.BindingElement case
Merge pull request #3049 from Microsoft/testPerf
Removed TypeCheckerHost extension.
Just explicitly use Harness.lightMode.
Style.
Updated baselines.
Use reference comments again.
Accepting new baselines
Consolidating strict mode reserved identifier checking in single method in binder
Allow expressions in extends clause of class
rename 'FileMap.delete' to 'FileMap.remove'
address PR feedback
introduce FileMap to store mappings with filenames as keys
Updated comment.
Merge pull request #3492 from Microsoft/useTypePredicatesInLib
Accepted baselines.
Never mess with the file list in tests.
Merge branch 'testPerf2' into testPerf
Merge branch 'master' into testPerf2
Spelling.
Remove unused 'assertInvariants' parameter.
Clarify 'emitAll'.
Accepted baselines.
Put the no-default-lib ref comment back in the 1.0 lib test.
Merge pull request #3452 from Microsoft/deeplyNestedTypeArgumentInference
Merge pull request #3473 from randombk/bug-genericConstraintCrash
Merge pull request #3495 from Microsoft/disableTracing
Merge branch 'master' of https://github.com/Microsoft/TypeScript into deeplyNestedTypeArgumentInference
Change depth limit from 10 to 5 in isDeeplyNestedGeneric
Don't log by default.
Merge pull request #3484 from Microsoft/noExtension_noExtraErrors
Merge pull request #3476 from Microsoft/classificationPerf2
PR feedback.
PR feedback.
Merge branch 'master' into classificationPerf2
Merge pull request #3491 from Microsoft/useNamespaces
Define Array.isArray using a type predicate
use namespaces instead of modules in the codebase
do not report extra error if file was already found without extension
Merge pull request #3434 from Microsoft/port-3433
Merge pull request #3477 from tinganho/customTypeGuardFormating
Spelling.
Remove BOM.
Merge branch 'master' of https://github.com/Microsoft/TypeScript into deeplyNestedTypeArgumentInference
Fixes type predicate formatting
Add explanatory comment
Don't bother trying to semantically classify names that could never be typenames.
Merge pull request #3474 from Microsoft/classificationPerf
Merge pull request #3461 from Microsoft/parsingModuleElements
Use full spans in the classifier.  Non-full spans are very expensive to compute.
Fix crash with unmet generic type constraints
Added test case for invalid generic type constraints
Add comments
Merge branch 'master' of https://github.com/Microsoft/TypeScript into parsingModuleElements
Change checkGrammarModuleElementContext to return true if it gives an error
Unite ParsingContext.ModuleElements and ParsingContext.BlockStatements
Merge pull request #3391 from Microsoft/port-3370
Fixed Some indentation
Remove unused 'assertInvariants' parameter.
Clarify 'emitAll'.
Merge branch 'master' into testPerf
Merge pull request #3455 from weswigham/asyncFunctions
added more tests
Merged branch 'master' into asyncFunctions
Remove the ModuleElement type in favor of Statement
Add fourslash test for in scope completion
Update affected baselines
Improve error recovery after a dot
Give a name when binding an errant export declaration
Merge pull request #3460 from Microsoft/deBugger2
Some cleanup and renaming
Update baselines for emit change
Add test cases
Accept baselines
Disallow module elements in a non-module context
Fix downstream crashes resulting from allowing module elements in a statement context
Convert StatementFlags to a boolean
Removed more 'debugger' statements from tests.
Merge pull request #3456 from Microsoft/utf8AllTheThings
Merge pull request #3459 from Microsoft/deBugger
Removed 'debugger' statements from tests.
Encode compiler files as UTF8.
Emit awaiter arguments on new line
Merge pull request #3453 from Microsoft/badCharacter
Fix white space
Retype the text instead of removing the bad character
Remove bad character in checker
fix merge conflicts with master
Add test
Unravel some conditions
Move inferFromTypes to use isDeeplyNestedGeneric
Merge pull request #3449 from Microsoft/typePredicateASI
Don't consume 'is' keyword if there is a preceding line terminator
Merge pull request #3380 from Microsoft/emitterNameRewriting
Merge branch 'master' into emitterNameRewriting
Addressing CR feedback
Merge pull request #3397 from Microsoft/genericTypeAliases
Merge branch 'master' into genericTypeAliases
added missing semicolon
Merge pull request #3393 from SaschaNaz/es6dom
Merge pull request #3262 from tinganho/customTypeGuard2
move temp declarations out of object literal
Merge pull request #3433 from Microsoft/systemJsTempVars
move temp declarations out of object literal
Merge commits from master
Addresses CR feedback
Updated baselines for 1.0 lib test.
Put the no-default-lib ref comment back in the 1.0 lib test.
Merge branch 'master' into testPerf
Adding a few comments per CR feedback
Merge pull request #3424 from Microsoft/documentFilenameFlag
Fix heading level.
filename -> fileName
Added 'filename' metadata tag to 'CONTRIBUTING.md'.
Merge pull request #3365 from Microsoft/painInTheASI
Addresses CR feedback
Addresses CR feedback
Modifying test a bit
Adding test as suggested in CR feedback
Addressing CR feedback
Removing lib.dom.es6.d.ts line
Fixes CR feedback
Adding simple tests
Accepting new baselines
Support generic type aliases
Merge pull request #3395 from Microsoft/getCanonicalFileNameInArrow
Merge pull request #3396 from Microsoft/usersDontNeedToTurn-core.autocrlf-OffAnymore
Users don't need to turn core.autocrlf off anymore.
wrap host.getCanonicalFileName in arrow function
Merge https://github.com/Microsoft/TypeScript into blockFormParameterIndentation
adding iterators to DOM interfaces
Adds error for non-return positioned type predicates and changed parse type predicate logic
Fixes CR feedback
added tests
emit module name for system modules, add moduleName argument to 'transpile' function
Merge pull request #3370 from Microsoft/named_modules
added tests
Merge branch 'master' into named_modules
Moved lookahead logic into 'getDeclarationFlags'.
Accepted baselines.
Added test regarding 'declare' keyword as beginning of statement expression.
Update LKG
Amended comment.
Merge pull request #3390 from zhengbli/release-1.5
Add missing overloads for texImage2D and texSubImage2D
Accepted new baselines.
Account for interfaces.
Accepted baselines.
Added tests for interfaces and tagged templates.
Expose skipDefaultLibCheck as a commandline option
Merge pull request #3384 from Microsoft/lightMode
PR feedback.
Merge branch 'release-1.5'
Merge branch 'master' into lightMode
Merge pull request #3385 from Microsoft/port_3382
Merge pull request #3383 from Microsoft/delete2remove
added missing semicolon after calling exporter function
PR feedback.
Updated emit to align with current proposal for ES7 async functions
Merge pull request #3382 from Microsoft/missing_semicolon
Merge branch 'master' into asyncFunctions
rename 'FileMap.delete' to 'FileMap.remove'
New Test and Baseline
merge with master
added missing semicolon after calling exporter function
Accepting new baselines
Add back void annotation
Change name from data to info
Refactor to-string functions
Removing getGeneratedNameForNode from type serializers
Changed name from method to buildDisplay
Removes old type predicate functions
Adds PR feedback and removed references to typeguard (class) methods
Speed up tests by not type-checking lib.d.ts unless the test asks for that.
Merge pull request #3368 from Microsoft/fileMap
Update LKG after merging release-1.5
Merge branch 'release-1.5'
Reverted back to using the 'assertInvariants' parameter.
Merge pull request #3374 from Microsoft/emitParenthesizedTypeAssertion
Use a separate variable to track for if no-default-lib tag was encountered.
Don't use innerExpression in parenthesizeForAccess
Merge pull request #3372 from Microsoft/taggedAny
Accept baselines for parenthesized type assertions
Add tests for parenthesized type assertions
Merge pull request #3354 from zhengbli/updateDomDTs
Don't try to strip parentheses when emitting synthesized parenthesized expressions
Removed comment.
Merge branch 'master' into testPerf
Merge branch 'master' into taggedAny
Merge pull request #3371 from Microsoft/harnessDiagnostics
Add other overloads for texImage2D and texSubImage2D
Remove HarnessDiagnostics.  Just use the normal ts Diagnostic instead.
new baselines
Merge branch 'master' into mergedDeclarationClassInterface
Check for ambient context instead of ambient flag
Remove last read reference of TypeFlags.Any
Merge pull request #3188 from Microsoft/tsConfigExclude
Merge branch 'master' of https://github.com/Microsoft/TypeScript into updateDomDTs
address PR feedback
Don't check if *all* constituent types are 'any'.
Merge branch 'master' into tsConfigExclude
Merge pull request #3316 from Microsoft/circularInstantiatedTypes
Check for 'any' only by using the flag, not by checking for instance equality.
Merge branch 'master' into testPerf
emit module name for system modules, add moduleName argument to 'transpile' function
new baselines got mergeClassInterfaceAndModule
New test
updated baselines to reflect new error message
Merge branch 'master' into circularInstantiatedTypes
Updated error message
Addressing CR feedback
simplified check
Don't access the anyType directly.  Encapsulate all access to it behind a helper.
Renamed functions, removed the duplicates found from renaming.
introduce FileMap to store mappings with filenames as keys
Added an explanation for the lookahead.
Remove the DocumentEvent itself from createEvent overload.
Update LKG after commit 34a5514fef25125b56dfff49fb0357aee2d1bb90
Rename new test
Add test for object literal methods
Add hopefully helpful comment
Return expressions always need to be type checked
a deer, a female deer -> does
Limit scope of function expressions to themselves.
Added test for find all refs of function expressions.
Fixed 'displayName'.
Add rename tests for function expressions.
Adjust expectations.
Find the references themselves.
Fixed tests.
Spit out JSON when expected =/= actual.
Verify references count.
Renamed tests.
Adjust tests.
Error smarter.
Removed unused code, use valueDeclaration for symbol.
Added rename tests.
Added tests.
Nodes -> Node
Accepted baselines.
Fixed case for the 'declare' keyword.
Merge pull request #3359 from jbondc/minor-1
Moving logic around in getReferencedImportDeclaration
Merge pull request #3353 from Microsoft/errorMessageTypo
Merge pull request #3352 from Microsoft/checkFunctionReturnExpression
Merge pull request #3360 from Microsoft/port-3331
fixed a grammatical issue
clean hostCache to avoid extending lifetime of script snapshots
merged with master
Make index types optional in ResolvedType
Unified logic for renamed block scoped locals and other generated names
Fixes rebase issues
Addresses PR feedback
Adds type guard methods
Adds tests
Fixes old tests
Adds custom type guard
Merge pull request #3355 from Microsoft/LKG4
Update LKG.
Dom lib file bug fix
Merge pull request #3274 from Microsoft/filterTranspileDiagnostics
Rename new test
Fix error message typo
Add test for object literal methods
Respond to code review comments
Merge branch 'release-1.5' into filterTranspileDiagnostics
Merge pull request #2843 from Microsoft/binderSimplification3
Add hopefully helpful comment
Simplify code.
fixed loops, merged baseline
Return expressions always need to be type checked
Accepted more baselines.
Added more tests.
Merge branch 'master' into binderSimplification3
Merge pull request #3307 from zhengbli/ms_master
Merge pull request #3351 from Microsoft/minorJsDocMerges
Simple changes to the compiler to make the jsDoc work easier.
fixed merge conflict.
Update LKG
Added baselines.
Added tests.
removed extra newlines
fixed merge conflict
updated baselines
CR feedback
Updated tests
Merge pull request #3296 from Microsoft/jsDocClassification
deleted redundant tests
merge compatiblity now performed in checker.ts
Adding tests.
Merge pull request #3324 from Zoltu/master
Merge pull request #3347 from Microsoft/irregularExpressionCompletion
PR feedback.
Merge pull request #3348 from Microsoft/fixResolutionForFuncExprsClassExprsAndArgumentsForMaster
Merge branch 'master' into jsDocClassification
Added test where one trailing flag exists.
Use declared variables to confirm completion.
Accepted baselines.
Added another test.
Accepted baselines.
Block completion when in trailing flags of a regex.
Don't use 'Value' or 'Type' as they have overlap. Instead test for the precise meaning.
Only resolve 'arguments' and function/class expression names if the meaning permits it.
Accepted baselines for the only test that was expected to pass.
Added tests.
Added tests.
Merge pull request #3288 from Microsoft/fixResolutionForFuncExprsClassExprsAndArguments
Added leading digit.
Fixed test that disturbingly wasn't doing anything.
Remove checking in declareSymbol
removed comma
cleaner hasNonAmbientClass
Remove EmitResolver.getExpressionNameSubstitution Add EmitResolver.getReferencedExportContainer Add EmitResolver.getReferencedImportDeclaration Clean up getGeneratedNameForNode in emitter.ts Switch isNotExpressionIdentifier to isExpressionIdentifier in emitter.ts Revise emitExpressionIdentifier in emitter.ts
fixed style, added comment
exclude closeparen/propertyaccess tokens
Add tests for projectinfo command
Merge branch 'master' of https://github.com/Microsoft/TypeScript
Update LKG
Merge branch 'release-1.5' into master
fixed indentation
Fixed intendation typo
New Baselines for class-interface merging
Merge branch 'master' of https://github.com/Microsoft/TypeScript into ms_master
Merge pull request #3331 from Microsoft/clean_hostCache
added conformance tests
clean hostCache to avoid extending lifetime of script snapshots
Merge branch 'decoratorsExperiment' into release-1.5
Updated LKG
Merge pull request #3330 from Microsoft/decoratorsExperiment
Added experimentalDecorators flag
Merge branch 'master' into mergedDeclarationClassInterface
Added merged declarations for ambient class/interfaces
Merge pull request #3302 from OleksandrChekhovskyi/master
Revert "classInterface: changed excludes flags"
Follow symlinks when enumerating files in a directory
Never normalize end-of-lines on clone/commit.
Adding regression test
Merge pull request #3266 from Microsoft/localTypes
Remove old (and insufficient) instantiation caching
Addressing CR feedback
Use symbols instead of types in infinite instantiation detection
Accepting new baselines
Merge branch 'master' into localTypes
Removing unnecessary logic
New test and baselines
Display nested generic types as f<A>.g<B>.C<X, Y>
Merge pull request #3308 from Microsoft/fixJSDocErrorCode
CR feedback
Fix JSDoc error code for to avoid duplicate error code
Merge pull request #3031 from Microsoft/generators
Fix CRLF issue in baselines
Add APIs to provide project info for a given file
Update symbol baselines because of things in lib.d.ts moving around
Merge branch 'master' of https://github.com/Microsoft/TypeScript into generators
Address PR feedback for generators
Merge pull request #3306 from Microsoft/deconstructingArguments
Accepted baselines.
Added the iterator symbol to 'IArguments'.
Added tests.
Merged branch 'master' into resolveDecoratorAsCall
Moved call for getSpreadArgumentIndex in hasCorrectArity
Addressing more CR feedback
Fix CRLF issue
Remove unnecessary code.
Removing unnecessary code.
Remove uneeded code.
Merge pull request #3292 from Microsoft/jsDocTests1
Add syntactic classification for doc comments.
Add tests for jsdoccomments.
Merge pull request #3291 from Microsoft/jsDocParsing2
Parsing support for jsDocComments.
Accepted baselines.
Added another test.
classInterface: changed excludes flags
Accepted baselines.
Don't use 'Value' or 'Type' as they have overlap. Instead test for the precice meaning.
Only resolve 'arguments' and function/class expression names if the meaning permits it.
Accepted baselines for the only test that was expected to pass.
Added tests.
Merge pull request #3281 from bavardage/bugfix/fix-constructors
fix constructors for DateTimeFormat, NumberFormat
Merge branch 'master' of https://github.com/Microsoft/TypeScript into generators
Respond to code review comments
PR feedback and minor refactoring
Fix #3245: ensure transpile diagnostics only include syntactic and compiler options diagnostics
Adding a few more comments
Merge pull request #3272 from Microsoft/formattingCloseBracketInFunctionDeclarations
Addressing CR feedback
remove space after close bracket only if next token does not start block in function declaration context
Adding tests
Local types not in scope in parameter lists and return types
Adding comments
Accepting new baselines
Support local generic types within generic classes and functions
getLineIndentation for others
Validate that only module level declarations have modifiers
Allow local interface, type alias, and enum declarations
Consistent formatting of optional argument comments
Single function to parse statements and module elements
fixing some types
PR Feedback
Merge pull request #3256 from gitter-badger/gitter-badge
Added Gitter badge
Migrated decorator checks to call resolution
Merge pull request #3239 from Microsoft/cyclicTypeInstantiation
Merge pull request #3248 from ivogabe/while-vs-with
emitWithStatement should emit a WithStatement
Changing type mapping cache to be a dictionary
Merge branch 'master' into asyncFunctions
Initial PR feedback
Adding regression test
Add cache to instantiateType function to break cycles
update LKG
Merge pull request #3233 from Microsoft/tsconfigBug
Fix testcases for isolated modules.
Updated LKG
Added tests
Fix for #2971, adds missing logic in checkFunctionExpressionBodies
Merge pull request #3227 from Microsoft/fixFunctionExpressionCheckForDecorators
Added tests
Fix issue in the parsing of tsConfig file, this was fixed in master before, but never ported.
Update version to 1.5.3 for the VS 2015 release
Fix for #2971, adds missing logic in checkFunctionExpressionBodies
Merge pull request #3139 from basarat/patch-1
Merge branch 'master' of https://github.com/Microsoft/TypeScript into generators
Merge pull request #3208 from Microsoft/updateSingleCompilationFlagName
Merge pull request #3212 from pgilad/patch-1
Some cleanup and additional comments following PR feedback
Merge pull request #3226 from Microsoft/port-3183
Merge pull request #3225 from Microsoft/port-3131
Merge pull request #3224 from Microsoft/port-3117
use textSpanEnd instead of handrolled version
addressed PR feedback
during file update request only changed portion of the text from the host
add optional 'getProjectVersion' method to perform fast up-to-date checks
program should store file names with normalized slashes
Merge pull request #3223 from Microsoft/port-3109
Merge pull request #3222 from Microsoft/port-3110
Merge pull request #3221 from Microsoft/port-3144
Merge pull request #3156 from Microsoft/codeSettings
Adjusted spacing in tasks.json
do not hoist ambient declarations
addressed PR feedback
correct typos
system: fix emit for exports of non-top level entities, fix emit for enums
addressed PR feedback
handle triple slashes in url schema 'file' correctly
Merge pull request #3207 from Microsoft/declareModifierForInterface
update license attribute
Merge pull request #3209 from Microsoft/merge3137
Accepting new baselines
Optimize spread to not generate x.slice() when x is an array literal
Accepting new baselines
Emit [...a] as a.slice() to ensure a is copied
rename tests
Change flag --singleCompilation to --isolatedModules
Add tests
Update baselines
Remove check for declare modifier on interface
Merge pull request #3066 from tinganho/newWithSpread
Combining else blocks
Merge pull request #3185 from Microsoft/variableStatementComments
Support "exclude" property in tsconfig.json
Fixes concat style
take the function out
getLineIndentation
Merge https://github.com/Microsoft/TypeScript into blockFormParameterIndentation
Merge pull request #3183 from Microsoft/marshalling_issue
Updated baselines.
use textSpanEnd instead of handrolled version
Added change to omit comments for variable statements when appropriate.
addressed PR feedback
Merge branch 'master' into testPerf
during file update request only changed portion of the text from the host
Merge pull request #3157 from Microsoft/fixUnionReduction
Merge pull request #3182 from Microsoft/LKG2
Update LKG
Addressing CR feedback
Merge pull request #3144 from Microsoft/fixRootPrefix
block form indentation
Saved
addressed PR feedback
Merge pull request #3175 from Microsoft/release-1.5
Merge pull request #3160 from Microsoft/getTypeOfAlias
Renamed alwaysCopy to needsUniqueCopy
Adds alwaysCopy argument
Adds an always emit of pair of parens in spread syntax in new expression in ES5
Changes to emitCallTarget
Corrects old tests.
Adds spread syntax in new expression in ES5
Adds tests
Adds an ignore on projectOutput
Merge pull request #3155 from Microsoft/useCRLFByDefaultInTest
Merge branch 'master' into useCRLFByDefaultInTest
Address code review
Add a comment in getTypeOfAlias
Merge pull request #3085 from tinganho/nonInitExport
Only call getTypeOfSymbol recursively if it's a value
Fixes missing check in isParenthesizedArrowFunctionExpressionWorker
Accepting new baselines
Removing stack from removeSubtypes method
Merge branch 'master' into fixUnionReduction
Merge pull request #2979 from Microsoft/completionFixes
Fixed missing call to nextToken()
Merge branch 'release-1.5'
Update the test to actually test what we intended
Adding regression tests
Added parseModifiersForArrowFunction
Add circularity check to getReducedTypeOfUnionType
Added comment for Daniel
alligned comments
Additional cases added for creating new variables.
Added tasks.json to easily use VSCode with TypeScript sources
Update baseline
use CRLF by default
Merge branch 'master' into completionFixes
Cleaned up checker, added comments to parser based on PR feedback.
Merge branch 'master' into asyncFunctions
Merge branch 'asyncFunctions' of https://github.com/Microsoft/TypeScript into asyncFunctions
Added comments for emitAsyncSignatureAndBodyForES6
Simplified parenthesis check for await as yield.
Better name for bitmask in ParserContextFlags
handle triple slashes in url schema 'file' correctly
Merge pull request #3131 from Microsoft/fast_version_check
Fixes old tests
Adds tests
Adds non emit on non-initialized export
Merge pull request #3137 from Microsoft/copySpreadArray
Accepting new baselines
Optimize spread to not generate x.slice() when x is an array literal
Merge pull request #3135 from Microsoft/noEmitOnErrorDescriptionUpdate
Merge pull request #3110 from Microsoft/emitModuleMemberInSystem
:memo: document autocrlf needs to be off
Accepting new baselines
Emit [...a] as a.slice() to ensure a is copied
Update help description for noEmitOnError
Merge pull request #3121 from Microsoft/consistent-sourceMap-naming
add optional 'getProjectVersion' method to perform fast up-to-date checks
use canonical file name when asking the host if file exists
Merge pull request #3116 from Microsoft/contextualModifier
Merge branch 'master' of https://github.com/Microsoft/TypeScript into generators
Clarify error message
Disallow yield expressions inside a class
Merge pull request #3117 from Microsoft/normalizedSlashesInFilenames
Merge pull request #3109 from Microsoft/doNotHoistAmbientDeclarations
Accepted baselines.
sourcemap -> sourceMap
addressed PR feedback
program should store file names with normalized slashes
Merge branch 'master' of https://github.com/Microsoft/TypeScript into generators
Remove nextTokenCanFollowContextualModifier
correct typos
system: fix emit for exports of non-top level entities, fix emit for enums
do not hoist ambient declarations
PR feedback
Additional clean up of diagnostic messages
Cleaned up diagnostic messages
Merge pull request #3048 from Microsoft/duplicateIdentifierBindingElement
Merge branch 'master' into duplicateIdentifierBindingElement
Add testcases
Address code review
Updated declaration and symbol baselines
Cleanup and PR feedback
Accept baselines after merge
Fix up two comments
Merge branch 'master' of https://github.com/Microsoft/TypeScript into generators
Type check all files when emitting a file under -out
Make boolean compiler options in harness true only if they say 'true'
Merge branch 'harnessCompilerOptions' into release-1.5
Merge pull request #3094 from Microsoft/getEmitOutputOut
Merge pull request #3093 from Microsoft/harnessCompilerOptions
Merge pull request #3092 from Microsoft/classificationLoop1.5
Type check all files when emitting a file under -out
Make boolean compiler options in harness true only if they say 'true'
Prevent infinite loop when classifying.
Merge pull request #3091 from Microsoft/classificationLoop
Prevent infinite loop when classifying.
Merge pull request #3088 from Microsoft/fixTSConfigParsing
Don't wrap an array of errors in an additional array.
Revert "Format on type deletes valid text"
Format on type deletes valid text
Updated baselines
Merge branch 'master' into asyncFunctions
Merge pull request #3071 from Microsoft/removeSubtypesRecursion
Merge branch 'release-1.5' of https://github.com/Microsoft/TypeScript into removeSubtypesRecursion
PR feedback and another test
Merge pull request #3032 from Microsoft/supportedExtensions
Merge pull request #3073 from Microsoft/removeDuplicateCaseLabels
Merge branch 'master' into release-1.5
remove duplicate case labels
Merge pull request #3064 from Microsoft/refactorNarrowTypeByInstanceOf
Make removeSubtypes resilient to reentry
Merge branch 'master' into supportedExtensions
Merge branch 'master' into refactorNarrowTypeByInstanceOf
Add new line
Bug fixes and baselines
Merge pull request #3058 from Microsoft/promiseVoidErrorCallback
Update LKG
Update version
Merge branch 'master' into release-1.5
Merge pull request #3059 from Microsoft/'canonicalFileNamesInHostCache'
Add a regression test
Update test
refactor narrowTypeByInstanceof
Merge pull request #3063 from Microsoft/removeDefineFunctionName
Added emit for async functions in ES6
Updated LKG
Removed Object.defineProperty for function name
Clean up 'collateOutputs'.
Modified test, updated baselines.
The caller can now specify whether to observe light mode in 'createSourceFileAndAssertInvariants'.
Clean up unused files in the harness.
use canonical file name when asking the host if file exists
Fix typing for Promises so that a void error callback doesn't mess up inference
Removed runnerServer.ts
Merge branch 'vvakame-typeguardsByConstructorSigniture'
Remove getUnionTypeOfSubtypeConstituents
Merge branch 'typeguardsByConstructorSigniture' of https://github.com/vvakame/TypeScript into vvakame-typeguardsByConstructorSigniture
Initial PR feedback
Merge branch 'master' of https://github.com/Microsoft/TypeScript into generators
Always call getReturnTypeOfSignature on a generator from checkFunctionLikeDeclaration
Update LKG
Merge pull request #3047 from bryanforbes/fix-tsserver-config-parse
PR feedback
show more clearly error message when found missing module name
PR feedback
Merge pull request #3050 from tinganho/iojs
Fixes iojs environment check issue
Remove 'assertInvariants', only do invariant-checking outside of light mode.
Added types, scan, parse, and check for async functions
Accepted baselines.
'/// <reference no-default-lib="true"/>' -> '// @noLib: true'
Accepted baselines.
Update tests to use '@noLib: true'.
Always include 'lib.d.ts' last in tests unless '@noLib' is specified.
Merge branch 'master' into testPerf
Update comment
Merge branch 'master' into duplicateIdentifierBindingElement
Add tests for duplicate identifier in parameter declaration
update baselines
Check that bindingElement is in parameter declaration and pass in correct symbol exclusion flag
ProjectService passing incorrect object to parseConfigFile()
Merge branch 'master' of https://github.com/Microsoft/TypeScript into generators
Remove isParameterDeclaration to utilities
Merge pull request #2991 from Microsoft/circularVar
Merge pull request #3041 from Microsoft/fixCircularAliasError
Merge pull request #3030 from Microsoft/lineEndings
Update LKG
Merge branch 'master' of https://github.com/Microsoft/TypeScript into lineEndings
Remove unnecessary LineEndingSensitive option from BaselineOptions
Merge pull request #3042 from zhengbli/issue3002
Delete emitter.js
Add missing overload to XMLHttpRequest.send
Adding regression test
Fix 'resolveName' to correctly obtain local name of export default
fix code styling
Addressing CR feedback
PR feedback
Update error message
Fix typo
unify file extension resolution logic
Merge pull request #3029 from Microsoft/outputJsFiles
use only 'separateCompilation' flag when checking of file should be emitted
Rebaseline tests
Make the harness report a failure if the line endings differ from the baselines
Removed 'fileMetadataNames'.
Remove Generator interface from ES6 lib. We may need to add a better typing later
Add tests for generators
Formatting for yield and yield* expressions
Cache element types of iterable and iterator
Adjust symbol baselines after rebase
Remove error for having return expressions in a generator
Add implicit any error for generator with no type annotation and no yield operands
Improve error for void generator
Fix contextual typing of object literal methods
Accept baselines
Fix some crashes in the checker
Infer return types from yield and yield* expressions
Contextual typing for yield expressions
Assignability checking for yield and yield* expressions
Disallow return expressions in a generator
Rebaseline error codes
Yield and yield* have type any
Check that generator return type is assignable from its IterableIterator type
Simplify global generic type instantiation constructors
Move getIteratedType out of checkIteratedType
Formatting for generators
Disallow * token on overload signatures
Disallow generators in an ambient context
Allow yield expressions, and allow generators only in ES6 and higher
Add some tests for yield*
Improve yield context error message
Make expression optional in YieldExpression
Merge branch 'master' into testPerf
Merge pull request #2966 from Microsoft/getTypeDefinitionAtPosition
Merge branch 'kmashint-master'
Update description message and variable names
Merge pull request #3001 from Microsoft/formattingOnChainedCallbacks
Merge branch 'master' of https://github.com/kmashint/TypeScript into kmashint-master
Merge pull request #3023 from Microsoft/updateBaselineWhenMergeConformance
emit input non .ts files as separate files when 'allowNonTsExtensions' and 'separateCompilation' flags are specified (used in 'transpile' related scenarios)
Update baselines
Merge pull request #2735 from Microsoft/conformanceParameterDecl
Merge pull request #2753 from Microsoft/conformanceArrayLiteral
Merge pull request #2761 from Microsoft/conformanceContextuallyTypedFuncExp
Merge pull request #2773 from Microsoft/conformanceDestructuringAssignment
Merge pull request #2785 from Microsoft/conformanceTypeGuard
Merge pull request #2792 from Microsoft/conformanceConstEnum
Merge pull request #2814 from Microsoft/conformanceContextuallyTypedExp
Merge branch 'master' into getTypeDefinitionAtPosition
Merge pull request #3020 from Microsoft/exposeScanner
Fix #3012: expose scanner
Merge pull request #3016 from zhengbli/fixFormatConfigurationIssue
fix formatting
Merge pull request #2996 from Microsoft/lastOrUndefinedReplacement
Fix host formatting configuration issues
Removing 'resolvingType' special type
Merge pull request #3011 from frankwallis/master
Rename parameter static -> isStatic, fixes 'static is a reserved identifier' error when running in strict mode (#3006)
Compiler flag to specify line ending #1693 unit test adjustments
Compiler flag to specify line ending #1693 unit test adjustments
Compiler flag to specify line ending #1693 unit test adjustments
Compiler flag to specify line ending #1693 unit tests
Compiler flag to specify line ending #1693 code review adjustments
Compiler flag to specify line ending #1693 code review adjustments
Compiler flag to specify line ending #1693 code review adjustments
Compiler flag to specify line ending #1693 fix whitespace
Compiler flag to specify line ending #1693
Adding test
Accepting new baselines
Improved circularity detection for types
addressed PR feedback, split conditional expression into multiple lines
support instantiate signature, it has type parameters.
fix formatting for chained callbacks
Whoops.
Use 'lastOrUndefined' where appropriate in the services layer.
Use 'lastOrUndefined' where appropriate in the compiler.
Moved gargantuan arrow function that obstructed the actual logic of the method.
Merge pull request #2982 from Microsoft/fixPromiseDeclaration
Moved 'lightMode' flag to Harness.
Merge branch 'master' into fixPromiseDeclaration
Updated LKG
Updated type name
Updated ES6 declarations for Promise, updated baselines
Updated LKG
Document/rename flag used in compiler.
Merge branch 'whitneyit-feature/noEmitExtends'
Add tests for __metadata and __param
Do not emit __extends if --noEmitHelpers is set
confused, in typescript a type decl needs the ( ) for a lambda
Merge branch 'feature/noEmitExtends' of https://github.com/whitneyit/TypeScript into whitneyit-feature/noEmitExtends
Update command name
Merge pull request #2989 from Microsoft/fixHelpersForStrict
Updated type name
Update LKG
Remove erronious change to shims.ts in previous commit
Merge pull request #2990 from zhengbli/issue2984
Accepting new baselines
Modifying test
Respond to code review comments
Merge branch 'master' into circularVar
Error when variable is circularly referenced in type annotation
This seems to work today, not sure what I was seeing yesterday.
cf feedback
Fix issue #2984
Fixes helpers in strict mode
Merge pull request #2981 from Microsoft/getClassifications1.5
Merge pull request #2977 from Microsoft/getClassifications2
Update names.
Fix name.
Log when the lexical classifier fails.  not the perf of each line.
Unify more classification code.
Add a common, dense, format for classification operations to lower cost of processing on the host side.
Faster getClassifications
Updated ES6 declarations for Promise, updated baselines
Update names.
Fix name.
CR feedback
Log when the lexical classifier fails.  not the perf of each line.
Fixes Aggressive completion makes it difficult to type function types. #2494  + test case
this fixes No builder in right-hand side of object binding pattern element #2693  and adds tests
Unify more classification code.
Update LKG
Fix for Completion interferes with typeing a "type alias". #2882 + test case
Merge pull request #2976 from zhengbli/master
Add a common, dense, format for classification operations to lower cost of processing on the host side.
Added missing createEvent overloads
Merge branch 'master' into getClassifications2
Made parameter mandatory, check type baselines again even in light mode.
Accepted baselines
Added test for abstract-classes
Output abstract keyword in declaration files (for classes)
Error on creating a new instance of an abstract class
Accept baseline changes
Parse abstract keyword
type narrowing by constructor signiture of interface
Add getTypeDefinitionAtPosition to tsserver
Add test to shims
Add implementation for getTypeDefinitionAtPosition
Refactor getDefinition code
Add support for --noEmitHelpers flag
Use no-default-lib for the '--noLibCheck' flag.
Merge pull request #2935 from Microsoft/relaxExportEqualsCheck
Merge pull request #2964 from Microsoft/checkerSimplification
Restore checker simplification that was reverted due to a bad merge.
Merge pull request #2963 from Microsoft/RenameHeritageClauseElement
Merge pull request #2960 from Microsoft/DataViewDefinition
Rename HeritageClauseElement to ExpressionWithTypeArguments + related methods.
Merge pull request #2948 from Microsoft/localStorageForExportedNames
addressed PR feedback
Add a light=true mode for running tests faster.
Fix #2953: Put DataView definition back into lib.d.ts
exclude 'default' from star exports
Merge pull request #2955 from Microsoft/projectRunner
extract emitExportStar in separate function
allow module to reserve slots for names that they export
merge with master
Merge pull request #2949 from Microsoft/cleanupAndSpeedupFourslash
Run all checks in it blocks
Merge pull request #2923 from Microsoft/namespaces
Cache the emit of 'fourslash.ts'.
Accept baselines
Accepting new baselines
Merge branch 'master' into namespaces
removed redundant check
Merge remote-tracking branch 'origin/master' into localStorageForExportedNames
generate local storage for all exported names to avoid overwriting them via star exports
Merge pull request #2937 from Microsoft/emitModuleInSeparateCompilation
Remove 'reverse' option.
Remove global.runners.
Jakefile -> Jakefile.js
added tests
always emit files as modules when separateCompilation flag is specified
Fix #2929: relax the check for export= in ES6 if it is resulting from an ambient declaration
Update LKG.
Merge pull request #2917 from basarat/patch-1
Merge pull request #2484 from Microsoft/inlineSourceMaps
Merge branch 'master' into inlineSourceMaps
Merge pull request #2925 from Microsoft/properMochaUseInProjectRunner
Merge pull request #2840 from Microsoft/systemModule
wrap project runner tests in 'it'
Accepting new baselines
Adjusting error messages
Accepting new baselines
Modify fourslash tests
Support 'namespace' declarations for internal modules
tsconfig.json added missing file references and fixed the order
Add script to create a benchmark test using the compiler
addressed PR feedback
merge with master
Merge pull request #2880 from Microsoft/sourceMapWithComments-attempt2
Added test.
Accepted baselines.
Fixed checks to use isReservedNameInStrictMode.
Added test.
Merge branch 'release-1.5' into sourceMapWithComments-attempt2
Fixes 	his in decorator helpers
Added tests for 1.0 lib and missing decorator type
Lazy resolution of global decorator types
Merge pull request #2897 from Microsoft/fixThisInDecoratorHelpers
Updated LKG
Corrected call.
Fixes 	his in decorator helpers
Merge pull request #2877 from Microsoft/tsconfigSupportInLS
Updated LKG
Merge pull request #2895 from Microsoft/reservedNamesImportsExports
Merge pull request #2892 from Microsoft/lazyGlobalDecoratorTypes
Added test.
Accepted baselines.
Fixed checks to use isReservedNameInStrictMode.
Update LKG
Update toolsVersion
Added test.
Use 'emitVerbatimDeclarationName' instead of using a default flag in emitBareNode.
Faster getClassifications
Merge branch 'master' into tsconfigSupportInLS
Don't double wrap exceptions.
emitJavaScriptWorker -> emitBareNode; emitNodeWithoutSourceMap -> emitWithoutSourceMap
Merge branch 'master' of https://github.com/Microsoft/TypeScript
Added tests for 1.0 lib and missing decorator type
Lazy resolution of global decorator types
Merge branch 'csnover-fix-2036'
update error messages
Add more tests
Merge branch 'fix-2036' of https://github.com/csnover/TypeScript into csnover-fix-2036
correct the slashes for a new line.
Merge pull request #2886 from Microsoft/formattingTypeAliases
Merge pull request #2891 from Microsoft/libCommentChange
Fix #2837: remove (y, x) from the comment
fixed formatting for equals token in type aliases
More refactoring
Minor clean up to make it more readable.
Added comments for 'emitNodeWorker'.
Moved function used in declaration emitter to the declaration emitter to break dependency loop.
Removed vestigial code.
Comment the new core functions.
emitSourceMap -> shouldEmitSourceMap
Accepted baselines.
Emit comments for function declarations in a more uniform way.
Improve error message when encountering an invalid tsconfig.json file.
Merge pull request #2875 from Microsoft/incrementor
Merge pull request #2874 from Microsoft/iteratorTypeFix
Merge branch 'master' of https://github.com/Microsoft/TypeScript into iteratorTypeFix
Add error handling.
Merge pull request #2804 from Microsoft/unionPropertyAccess
Merge pull request #2851 from Microsoft/circularTypeAlias
Undo the change to return
Rename iterator property of ForStatement to incrementor
Fix Iterator type in es6.d.ts
Merge branch 'master' of https://github.com/Microsoft/TypeScript
Add support for UMD-like module export format
Merge pull request #2857 from Microsoft/symbolWriter
addressed PR feedback
Merge pull request #2856 from Microsoft/blockLocals
Addressing CR feedback
Produce type and symbol baseslines when running tests.
Merge pull request #2855 from pedromaltez-forks/pm/svg-logo
Blocks with locals should be added to the container chain so we can detect name collisions in them.
Add SVG version of logo as per #1375
Updated LKG
Updated LKG
Updated emit for __decorator and __metadata helpers
emitDeclarationName -> emitNameOfDeclaration
Merge pull request #2853 from Microsoft/decoratorReflectTiming
Accepted baselines.
Cleaned up flow of binder, fixed ordering for comments/sourcemap tracking.
Added tests from original issue.
Merge branch 'master' into binderSimplification3
Updated emit for __decorator and __metadata helpers
expose the config file processing throught the LS and add a callback to enumerate files in a directory
CR feedback.
CR feedback.
Accepting new baselines
Adding tests
Defer resolution of declared members in classes and interfaces
do not hoist non-top level block scoped variables
added comments, fixed typo
Clean up comment.
Clean up comment.
Clean up comment more.
Remove unnecessary returns.
Clean up comment.
Clean up comment.
Add explicit return to indicate the end of flow of a method.'
Add explanatory comments.
CR feedback.
Add explanatory comments.
Split out the concerns of the binder even more.
Add --inlineSources option
fixed indentation in comments
added comments, updated test baselines
Update LKG
Merge branch 'master' into release-1.5
Merge pull request #2772 from Microsoft/rootDir
Merge branch 'master' into rootDir
Respond to code review commmetns
skip 'import ...' nodes when creating variable statement for imports
merge with master
Merge pull request #2824 from Microsoft/combineTypeMappers
rename local variable
Add clarifying comments to the binder.
Add clarifying comments to binder.
Remove unnecessary check.  Classes always have exports.
Move code for creating a prototype out of the common declareSymbol codepath.
CR feedback.
Use SymbolFlags.None in the binder.
Inline binder method.
Move all symbol table initialization into the same method.
Clean up comments.
Simplify code in the binder.
Remove unncessary postbind for function/constructor types.
Remove post bind step for modules.
Remove code to post bind parameters.
Rename methods.
Extract any complicated code in top level bind function to individual helpers.
Simplify recursion in the binder.
Add a 'None' member to SymbolFlags enum.
Explicitly type 'bind' as being a void function.
Merge block container logic in the binder to use the same mechanism as SymbolFlags
Add explanatory comments to the binder.
Simplify concerns in the binder.
Rename locals to more clearly indicate they are flags and not kinds.
ConstructorType's name should be __call not __constructor.
Always recurse into children in the binder in a uniform manner.
Merge branch 'master' into inlineSourceMaps
Merge branch 'master' into rootDir
Fix typo
Update LKG
Update version
Merge branch 'master' into release-1.5
Merge pull request #2687 from dbaeumer/feature/fix2507
Merge pull request #2827 from zhengbli/master
Merge pull request #1546 from Arnavion/fix-emithost-this-binding
Fix dom type "ArrayBufferView"
Accept symbol baseline
Change TypeMapper to only take a type parameter, and fix combineTypeMappers to comply with that rule
Update LKG
Merge branch 'master' into unionPropertyAccess
Merge pull request #2809 from Microsoft/noReservedWordsInBindingPatterns
numberic.
word -> Word
Removed unnecessary check since ShorthandPropertyAssignment's name is always an Identifier.
Merge branch 'Smarp-amd-es3'
Accept baselines
Merge branch 'amd-es3' of https://github.com/Smarp/TypeScript into Smarp-amd-es3
Merge pull request #2813 from Microsoft/lazyBaseTypes
Merge branch 'master' of https://github.com/Microsoft/TypeScript into lazyBaseTypes
Address PR feedback
Merge pull request #2820 from Microsoft/scannerLength
Accept symbol baselines
Merge branch 'master' of https://github.com/Microsoft/TypeScript into lazyBaseTypes
Support passing a start/length when creating a scanner.
Merge pull request #2815 from Microsoft/getTypeFromTypeNode
CR feedback.
Merge branch 'master' into getTypeFromTypeNode
Merge pull request #2805 from Microsoft/moduleFixes
`exports.default` in ES5 vs `exports["default"]` in ES3
update comments
Merge branch 'conformanceConstEnum' of https://github.com/Microsoft/TypeScript into conformanceConstEnum
update baselines from merging master
update baselines from merging master
Additional API cleanup.
Make StringLiterals and HeritageClauses into TypeNodes.  It makes the checker much simpler and nicer.
Merge branch 'master' into conformanceConstEnum
Merge pull request #2739 from zhengbli/SortOriginalDomThenUpdate
Merge branch 'master' into conformanceTypeGuard
Address code review
Add conformance tests for arugment expression, getSetAccessor, arrayLiteralExpression
Changed the type for TypeTrack.Mode
Updated overloads that only differ in return type
Update baselines from merging master
Merge branch 'master' into conformanceDestructuringAssignment
Add spec description
Clean up some repeated calls to getBaseTypes
Add tests for not depending on base types
Lazily compute base types
Merge branch 'master' into moduleFixes
Add comment
Move amd-dependency erlier in the list
Respond to code review comments
Merge branch 'master' into rootDir
Accepted baselines.
Expect a colon if the property was a reserved word.
Respond to code review comments
Accepted baselines.
Update baselines from merge master
Merge pull request #2807 from Microsoft/templateBackslashTests
Merge branch 'master' into conformanceArrayLiteral
update baselines from merge master
Added baselines.
Update baselines from merge master
Merge branch 'master' into conformanceContextuallyTypedFuncExp
Add spec description into tests
Added tests.
Added tests.
Fix #2801: Sort module names for AMD preamble
wire module lookcups for default import in ambient module declarations
Move error test cases into separate files
Merge branch 'master' into unionPropertyAccess
Adding test
Add spec description to the test file and move tests that generate errors to separate file
Alignment.
Include property in union type only if all underlying properties are public
Merge branch 'master' into conformanceParameterDecl
Move tests with errors to separate file
Merge pull request #2802 from Microsoft/allowArrowArgumentsES6
Update tests files with more conformance from section 6.4
Added symbols files.
Only error in <ES6.
Add/rename baselines.
Added tests from 'captureArguments' branch.
Removed properties of es6 only types from extensions.d.ts
Merge pull request #2750 from Microsoft/fixES6Clodule
Updated the interface definitions in extensions
Organize test files and add spec description in the comment
Merge pull request #2741 from zspitz/MSActiveXExtensions
Add conformance test for ambient enum declaration
Merge pull request #2787 from Microsoft/APISamplesBaselines
Merge pull request #2754 from Microsoft/destructuringFixes
Update baseline after merge again
Merge branch 'master' of https://github.com/Microsoft/TypeScript into destructuringFixes
Add conformance tests for const enum
Don't run typewriter tests on the APISamples.  It's too noisy.
Merge pull request #2783 from Microsoft/symbolWriter2
Update baseline after merge
Merge branch 'master' of https://github.com/Microsoft/TypeScript into destructuringFixes
Fix parenthesizeForAccess to always parenthesize NewExpressions and NumberLiterals
Merge branch 'master' into symbolWriter2
Add additional tests for typeguard for class or object property
Merge pull request #2734 from Microsoft/singletonScanner
Split symbol baselines from type baselines.
CR feedback.  Use a module instead.
Update diagnostics.
Merge pull request #2778 from Microsoft/typeParameterUnionAssignability
Merge branch 'master' into singletonScanner
Fix up comment
Improve error message for type parameter extending union
Source type parameter extending union works even when target is a type parameter
Check assignability recursively when source is type parameter with union constraint
Destructuring assignment and variable declaration
PR Feedback and updated baselines
Merge pull request #2730 from Microsoft/exposeHelpers
Update LKG
Merge branch 'master' into exposeHelpers
respond to code review commment
Merge branch 'master' into rootDir
Add source maps to rootdir tests
Accept baselines
Add rootDir tests
Add rootDir option
Update according to comments
Merge pull request #2766 from Microsoft/addTestforAsContextualKeyword
Merge branch 'master' of https://github.com/Microsoft/TypeScript into destructuringFixes
The element/iterated type of any is any
Add test for askeyword
Merge pull request #2765 from Microsoft/moveAsKeywordOutFromStrict
Move asKeyword into correct section
Merge pull request #2729 from Microsoft/reducedUnionTypes
Move commonSourceDirectory computation to its own function
Merge pull request #2641 from Microsoft/jsSigHelp
Addressing CR feedback
Merge branch 'master' into jsSigHelp
Accepting new baselines
Merge branch 'master' into reducedUnionTypes
Update test filenames
Merge branch 'conformanceContextuallyTypedFuncExp' of https://github.com/Microsoft/TypeScript into conformanceContextuallyTypedFuncExp
Change file name to be more consistent
Merge branch 'master' of https://github.com/Microsoft/TypeScript into destructuringFixes
Change file name to be more consistent
Merge pull request #2747 from Microsoft/FixGetOccurances
Conformance test for update incontextual type in function expression
Merge pull request #2756 from Microsoft/completionFixes
Merge branch 'master' into reducedUnionTypes
Addressing CR feedback
publish exported postfix operators as 'E("", ++x) - 1' and 'E("", --x) + 1'
Merge branch 'master' of https://github.com/Microsoft/TypeScript
Eliminate HUGE (>10X) performance regression on session.ts dispatch that was causing major lag for Sublime plug-in.  Backs out destructuring dispatch change in session.ts
Fix #2724: ensure checkIteratedTypeOrElementType returns a type
Update baselines after rebase
Change parenthesizeForAccess to check isLeftHandSideExpression
Simplify handling of rest parameters with binding patterns in the checker
Fix crash in emitter on rest parameters with binding patterns
Properly emit nested destructuring in rest elements (fixes #2587)
Some cleanup in emitDestructuring
Remove unnecessary parameter to emitDestructuring
Disallow initializers in assignment rest elements
Fix crash in rest element destructuring
Assignment rest element pretends to get the contextual element type
Rest assignment element allows nested destructuring (fixes #2156)
Disallow binding patterns in rest parameters
Disallow binding patterns in binding rest elements (fixes #2519)
Fix #2725: Add check for parent before using it
Merge pull request #2745 from Microsoft/typeWriter
Conformance test for update in section 4.6
Insert @internal when we generate diagnostic messages.
Merge pull request #2711 from SaschaNaz/formatChainedCallbacks
Merge branch 'master' into typeWriter
Elide var when emitting a module merged with an ES6 class
Include symbol information in the typewriter baselines.
Fix getOccurances filter check
export imported aliases
Add destructuring parameter with generic
Simplify typewriter code.
Merge branch 'GuillaumeSalles-master'
Formatting
move check outside switch statement
add missing closing paren in emitted code
code cleanup
More newlines
Fixed jsDoc, wrapping, newlines
Ebynerator, VBArray
Merge pull request #6 from Microsoft/master
Use const.
Removed local gitignore change
Updated dom files and removed some IE only types
Conformance test for 3.8.2.2 and 6.4
Use a singleton parser as well.
Use a single scanner for all parsing tasks.
Fix issue #2677 : Labels should not get quick info
Update LKG
expose text span helpers
Expose getDefaultLibFileName
Merge branch 'master' into reducedUnionTypes
Adding test
Accepting new baselines
Consistently reduce union types in property access
Merge pull request #2684 from Microsoft/migrateStrictModeCheck
Merge branch 'master' into migrateStrictModeCheck
Address code review
Merge remote-tracking branch 'origin/master' into systemModule
Organize test cases for strict mode
Address code review
added tests
do not emit original variable statement if it was hoisted and all variable declarations are non-initialized
hoist source level module declarations
hoist source level class declarations, fix error message
emit publish of exported values in destructuring
emit publish of exported values in prefix/postfix unary expressions
Merge pull request #2706 from Microsoft/emitYieldStart
emit publish of exported values in assignment expressions
formattingOnChainedCallbacks (passing)
Address CR
Address CR
Merge pull request #2718 from Microsoft/fixEmitDecorate
Merge pull request #2692 from Microsoft/APIReviewCleanup
Update LKG
use @internal comment consistenlly
Allow IdentifierName in memberExpression
Merge branch 'master' into APIReviewCleanup
Added baselines
Fix for __decorate emit on undecorated file following a decorated file
Merge pull request #2700 from Microsoft/removeOptionalTypeOnExportDefault
Update tests cases
Address issue with propertyAccessExpression and QualifiedName in TypeReference
Don't report errors for empty generator functions with type annotations.
emit publish of exported values in variable declarations
added system module kind to harness
initial support for system module
Merge pull request #2680 from Microsoft/fixArrowBindingPattern
Update baselines due to changes in master
Merge branch 'master' into fixArrowBindingPattern
Simpler lookahead, let the tryParse do the hard work
formattingOnChainedCallbacks
Merge pull request #2691 from Microsoft/isRegExpWeHardlyKnewYe
Emit generator functions and yield expressions in ES6.
Merge pull request #2705 from Microsoft/renameDocHighlightsType
Rename type.
Comment cleanup
Simplified lookahead and added ES6 test cases
Merge pull request #2664 from Microsoft/fixDecoratorFormatting
Merge pull request #2612 from ahmad-farid/OCNoTest2
Merge pull request #2701 from Microsoft/superAnnoyingEmitInEs6Classes
merging
Merging
Ragga fragga newlines.
Merge branch 'master' into inlineSourceMaps
Check for inlineSoruceMaps first
update property in Identifier
Merge branch 'master' into removeOptionalTypeOnExportDefault
Emit temp var declaration for 'export default <expression>' in declaration emit
Revert "Support an optional type annotation on export default statement"
Don't emit '_this' declaration in ES6 or later.
Merge pull request #2682 from Microsoft/GetOccurrencesSingleFile
Added test for super method calls in ES6 classes.
merging with master
Add more tests
Better recovery when running into modifier
Remove incorrect check of module declartion
sort the old dom files
Use modules with const members.
Merge pull request #2659 from Microsoft/decoratorsLS
Address code review; better error recovering
Add the 'none' kind.
Address code review
accept new test baselines
Distinguish written vs read references.
Merge branch 'master' into decoratorsLS
Merge branch 'outlineCommentsFinal'
Merge branch 'OCNoTest2' of https://github.com/ahmad-farid/TypeScript into outlineCommentsFinal
Updated baselines.
Update LKG
Remove _internal.d.ts files from LKG
Expose parseCommandLine
Make version const
Fix formatting and parameter names
Mark non-public API surface with the /* @internal */ comment
Remove step to build typeScript_internal.d.ts
Fix a test so that we don't get duplicate declaration errors.
Replace uses of 'Symbol.isRegExp' with 'Symbol.toPrimitive'.
Added 'flags' to RegExp.prototype.
Remove 'isRegExp'.
Merge branch 'master' into release-1.5
support URI patterns
Add comment
Fix up the harness code.
Update error code
Merge branch 'master' into GetOccurrencesSingleFile
CR feedback.
Allow the host to indicate which files it would like highlighting spans for.
Use the fileName that is in scope.
No need to tweak spans in syntactic highlights.
Get semantic document highlights as well through the new API.
Check for import, import equal, module
Add more test for import, import equal, module
Remove old tests
Completely remove check strict mode from parser
Add more test to cover strict mode code
Update tests
Move strict mode check into TypeChecker
Extract code for getting syntactic document highlights into its own function.
Merge pull request #2666 from Microsoft/occurrencesOnServer
Add support for parsing destructuring patterns in arrow function parameter lists
PR feedback and baseline updates
Destructure arguments at dispatched calls.
Merge pull request #2498 from Microsoft/iteratorSpreadDestructure
Update baselines for preserving newlines
Changed isExpression logic related to decorators
Merge branch 'master' of https://github.com/Microsoft/TypeScript into iteratorSpreadDestructure
Merge pull request #2662 from Microsoft/fixDecoratorEmitForComputedProperties
Merge branch 'master' into fixDecoratorEmitForComputedProperties
Fix for #2619
Merge pull request #2124 from Microsoft/unrewrite
Merge branch 'master' into jsSigHelp
Apparently our server tests can't handle negative tests.
Fixed 'isWriteAccess' check.
*Actually dispatched* on the logic.
Actually implemented the session-side logic.
Add inlineSourceMap option
Added occurrences tests.
Rename tests.
Fixed /// <reference
Added support for getOccurrences to the server.
Add convertToBase64 method
Merge pull request #2658 from Microsoft/fixDecoratorBindingForSuperThis
Tests and baselines
Additional rule for spacing between decorator on same line as its declaration
Added rules for spacing around decorators, computing the undecorated start line of a node
Merge pull request #2591 from Microsoft/serverAddExitMessage
Add tests
Fix for #2619
Update baselines
Fix find all refs and goto def for decorators
Fixes #2601, incorrect resolution of this/super
Merge pull request #2643 from Microsoft/checkForOmittedExpression
Rename test case
Merge pull request #2642 from Microsoft/getExportsForModuleNullCheck
Merge pull request #2640 from Microsoft/systemDependentLineEndings
Check for omitted expressions when checking const and let declaration names
Add null check when querying for exports from a module
Addressing PR comments and adding unit tests (removing extra new lines and debugging statements)
Addressing PR comments and adding unit tests
Merge branch 'master' into unrewrite
Get sighelp for arbitrary functions working in .js files.
Use sys.newLine in transpile when possibel
Merge pull request #2599 from Microsoft/APISamples
add comment
Merge branch 'master' into APISamples
Merge pull request #2589 from Microsoft/decorators_types
Merge pull request #2635 from Microsoft/fixParameterDecoratorTyping
Updated baselines
Merge branch 'master' into decorators_types
Fix for #2249
PR feedback
adding unit tests fot block comments outlining
Merge pull request #2596 from Microsoft/parseClassInStrictMode
Address code review
Update baseline
Merge branch 'master' into parseClassInStrictMode
Rename variables to be consistent.
Don't cache the typechecker at the LS level.  Just get it when needed from the program.
Produce a map of named declarations instead of a flat list.
updating tests
updating tests
updating tests
updating test 2
updating test 1
removing extra reference header
Merge pull request #2603 from Microsoft/staticClassProps
Add decorator test for a decorator on a class expression.
Merge branch 'master' of https://github.com/ahmad-farid/TypeScript
Add additional tests.
Add support for emitting static properties in class expressions in ES6.
Address code review: have more explicit error
Break out acquisition of class properties vs. emitting them.
Merge branch 'master' of https://github.com/Microsoft/TypeScript into outlineComments
Merge branch 'master' into APISamples
Remove typescript.d.ts from baslines of APISample tests
Merge pull request #2597 from Microsoft/spelling
outlinging comments v0.2
Update APISample tests for 1.5-alpha release
Merge branch 'master' into spelling
Fix annoying spellin errors.
Merge pull request #2571 from Microsoft/JSLS
PR feedback
PR feedback.
PR feedback.
outlining Comments v0.1 4/2
Merge branch 'master' into JSLS
Merge pull request #2588 from Microsoft/classExpr
Fix tests.
Update test and baseliens from parsing classLikeDeclaration in strict mode
Remove checking for scriptTarget before setting parsing context for classLikeDeclaration
Fix error spans for classes.
Merge pull request #2522 from Microsoft/visitWorkaround
Fix for #2561
Updated baseline
Merge pull request #2570 from Microsoft/versionCacheUnitTest
Add an exit message for the server.
Added __param helper for parameter decorators and cleaned up __decorate and __metadata
Produce a name for anonymous class expressions when we perform downlevel emit.
Support classes without names in our AST.  Report any issues with this at 'check' time.
Class declarations should be block scoped.
Update CONTRIBUTING.md
Fix for checking type nodes with separate compilation, removed duplicate functions due to merge conflict
Cleanup emit for type metadata for #2577
Fix merge conflict
Merge pull request #2485 from Microsoft/transitiveExports
Minor emit cleanup
Updated baselines
Minor emit cleanup
Updated baselines
Type serialization for decorators
Update test.
Merge branch 'master' into transitiveExports
Update LKG
Update version
Update LKG
Merge pull request #2553 from Microsoft/exportDefaultReference
mend
Merge branch 'master' into versionCacheUnitTest
Merge branch 'master' into exportDefaultReference
Respond to code review remarks
Respond to code review comments
Merge pull request #2563 from Microsoft/exposeConfigFileHelpers
Merge pull request #2557 from Microsoft/exportEqualsDtsFix
Merge branch 'master' into transitiveExports
Update test.
Merge branch 'master' into JSLS
Merge pull request #2573 from Microsoft/classExpressionTests
Moved arrow function to function declaration.
Merge pull request #2572 from Microsoft/seriouslyWhyWouldntYouWantComments
CR feedback.
Adding a couple of class tests.
Keep comments in debug builds.
Merge pull request #2569 from Microsoft/revertModuleImportFix
Merge pull request #2567 from Microsoft/classExpressions
Remove unnecessary code.
Merge branch 'master' into JSLS
Rename method.
revert fix for #2456 'Import namespace exports should be immutable'
Add to build
Wire stress tests
CR feedback.
CR feedback.
Add file that was errantly removed.
Merge branch 'master' into classExpressions
Merge pull request #2550 from Microsoft/separateCompilation
wire tst tests
Add explanatory comment.
Remove blank line.
Fix comment.
Add support for semicolons in class bodies
Add support for parsing and emitting class expressions.
added tests for import\export elision
Update test names
Cleanup
Consolidate test logic in one helper function
use descript and it to run tests
Add contents for editTest
Introduce a new HeritageClauseElment type.
Remove commented code
Use assert
initial checkin
Merge pull request #2560 from zspitz/master
Expose readConfigFile and parseConfigFile
Merge pull request #5 from zspitz/WScriptFullAPI
Nre TextStreamWriter interface with JSDoc and additional members (ITextWriter is being used by the compiler and cannot be safely modified)..
Missing ;
Merge pull request #4 from zspitz/WScriptFullAPI
JSDoc for WScript members
Merge pull request #3 from zspitz/WScriptFullAPI
Added properties/methods for WScript - https://msdn.microsoft.com/en-us/library/2795740w(v=vs.84).aspx per #2540
Merge pull request #2 from zspitz/WScriptFullAPI
Merge pull request #1 from Microsoft/master
Merge pull request #2558 from Microsoft/optionsCleanup
Remove unsed options
added initial set of unit tests for separate compilation mode
disallow ambient const enums in 'separate compilation' mode
do not include declaration files in 'is external module' check
Ensure export= is emitted correctelly in declaration files
addressed CR feedback
addressed CR feedback
Merge pull request #2554 from zspitz/ExtensibleActiveXObject
Handel export default declaration completions
addressed CR feedback, accepted baselines
Allows extending ActiveXObject with with specialized overloads returning string types, per https://github.com/Microsoft/TypeScript/issues/2541.
Ensure we find export default declaration targets if we search for them by name
Merge pull request #2429 from Microsoft/allowDestructuringInAmbient
Add test for emit destructuring invariable declaration with omitted expression
Update baselines from merging with master
Merge branch 'master' into allowDestructuringInAmbient
Fix emit trailing comma for array binding pattern for varaible declaration
Merge pull request #2379 from Microsoft/referencesFileAssert
Merge branch 'master' into referencesFileAssert
Merge pull request #2512 from Microsoft/versionUpdate
Emit ommittedExpression in binding pattern
fix typos in comments
Merge pull request #2547 from Microsoft/exportDefault
Merge branch 'master' into separateCompilation
Merge pull request #2502 from zhongsp/master
Accepting new baselines
Merge branch 'master' into exportDefault
Accepting new baselines
Emit generated name for unnamed default function in down-level code
Merge pull request #2539 from Microsoft/forOfLengthCache
Fix export.default assignment for export default class/function
Merge branch 'master' into forOfLengthCache
Merge pull request #2518 from Microsoft/preserveNewLines3
Remove experimental flag to cache for-of length checks.
Merge branch 'master' into preserveNewLines3
Merge pull request #2535 from Microsoft/disposeFileWatcher
Merge pull request #2532 from Microsoft/fixRWC
Merge pull request #2533 from Microsoft/ignoreProjectOutput
Merge branch 'ignoreProjectOutput' of https://github.com/Microsoft/TypeScript into ignoreProjectOutput
Address code review
Fix: File watchers not being disposed in -watch mode
Update LKG
Remove empty line
Merge branch 'ignoreProjectOutput' of https://github.com/Microsoft/TypeScript into ignoreProjectOutput
Ignore projectoutput folder since this will be deleted by jake command
Ignore projectoutput folder since this will be deleted by jake command
Allow RWC runner to use default library instead of the one in json file
Merge pull request #2514 from Microsoft/simplifyTempLogic
Use a function declaration vs a function expression to help deal with a reported Atom+IO.js issue.
doc: fix typo BankAccount and regenerate language specification
Addressing CR feedback
Merge pull request #2504 from Microsoft/fixConfigLookup
Add clarifying comment about checkExpressionCached
Always preserve new lines for array and object literals and additional constructs like blocks.
Merge branch 'master' into iteratorSpreadDestructure
Accepting new baselines
Simplify temporary name generation logic
update version in program
fixes #2507 - bad formatting for formatonkey if convertTabsToSpaces === false
Merge pull request #2489 from dbaeumer-feature/formatOptions
Fix bug stemming from use of tsc findConfigFile by server.  Server needs its own version of this because tsc always starts from the current directory but the server must start from whatever directory contains the newly opened file.
Merge pull request #2501 from Microsoft/elaborateErrors
added relaxed emit rules for separate compilation
doc: fix typo 'BankAccount'
Make elaborateErrors persist throughout type relation checks
Fix comment to be more accurate
Got rid of 'getExportsOfImportDeclaration'.
Optimize direct Iterable reference in getIteratedType
Minor emit cleanup
Updated API baselines.
Add tests for array destructuring of iterables
Adjust getTypeFromArrayBindingPattern to return an array if inside a rest parameter
Wrap elementType in createArrayType for rest element in checkArrayLiteralAssignment
Use iterated type in checkArrayLiteralAssignment
Type of an array binding element is the iterated type of its parent in ES6
Refactor iterable or array checks into checkIteratedTypeOrElementType
getTypeFromArrayBindingPattern returns an iterable in ES6
Add createIterableType
Add tests for iterator spread in call
Add tests for iterator spread in an array literal
Support iterators in spread element
Refactor checkSpreadElementExpression to get the element type internally
Add spread to typeWriter
Change error message to be more general
Subsume 'getExportsOfImportDeclaration' with 'getExportsOfModule'.
Use 'symbolsToArray' to avoid filtering.
Updated baselines
Type serialization for decorators
Merge branch 'master' into transitiveExports
Merge pull request #2495 from Microsoft/useAppropriateCompletionEdge
Adjust the context token if the previous token is a word, not just if it's an identifier.
Added tests related to completions with keywords.
Merge pull request #2497 from Microsoft/decorators_emit
Emit decorators when --target ES3
Merge pull request #2480 from dbaeumer/feature/signatureHelp
Adjust 'position' to beginning of identifier when 'contextToken' has been readjusted.
More tests.
Added test.
Merge pull request #2460 from Microsoft/exportEquals
Merge pull request #2467 from Microsoft/exportEqualsMerged
Integrated pull request feedback
Merge branch 'master' into exportEqualsMerged
Merge branch 'master' into exportEqualsMerged
Move es6 alias name handeling to getAliasNameSubstitution to match getExportNameSubstitution
In ES6 use "export var x" for internal modules and enums instead of an after the fact "export {x};"
Make isReferencedAliasDeclaration check children
Disallow export declarations in internal modules
use the correct check for import and export specifiers
Rename isES6ModuleMemberDeclaration to isES6ExportedDeclaration.
Merge branch 'exportEquals' into exportEqualsMerged
Cleanup of duplicate code due to merge
Merge pull request #2399 from Microsoft/decorators_min
Fixed transitive export completion list issue.
Added tests.
Merge branch 'master' into JSLS
Merge branch 'master' into javascriptLanguageservice
Merge pull request #2475 from Microsoft/completionEntryDetails
Updates to emit and updated baselines
PR feedback.
PR feedback.
Don't bother with a predicate. It doesn't provide enough of a perf savings.
Merge pull request #2476 from Microsoft/immutableBindings
Merge pull request #2471 from Microsoft/revisedNameGen2
Merge branch 'master' into completionEntryDetails
return undefined if we are not renaming to ensure we get the correct text
Back to .js
Merge pull request #2450 from Microsoft/tsconfigServer
Merge pull request #2446 from Microsoft/findReferences
Updated typecheck for property, method, and parameter decorators
Changed emit for decorators
Merge branch 'findReferences' into javascriptLanguageservice
Merge branch 'master' into findReferences
back to tsjs
Moved findConfigFile to program.ts.  Addressed pull request comments.
Merge branch 'completionEntryDetails' into javascriptLanguageservice
Merge branch 'master' into javascriptLanguageservice
Disallow decorators on multiple get/set accessors of the same name
PR feedback.
addressed PR feedback
Merge pull request #2470 from Microsoft/noEmitOnDeclarationErrors
Merge pull request #2473 from Microsoft/getSemanticDiagnosticsDeclarations
Update test cases
addressed PR feedback
Don't lose the this reference for compilerHost methods.
Mark new interfaces with export
Add SignatureHelp support to Typescript server
PR feedback.
CR feedback.
CR feedback.
Use an output format for quickinfo that more closely matches the original source.
fix typo in function name
disallow assignments to imported exports
CR feedback.
Remove the active completion session.
Use the same logic for completion entry details that we do for getting completion entries.
Break out completion symbol collection into its own function.
Comments and cleanup
Fix issue where getSemanticDiagnostics was returning undefined on a .d.ts file.
Address code review
Change test files name
Make completion prefix matching case insensitive.
Accepting new baselines
Fix issue with AMD emit for 'import d, * as x from "foo"'
revised name generation
Revert "Emit, even in the presence of declaration errors and noEmitOnError."
Merge pull request #2461 from Microsoft/emitOnDeclarationErrors
Updated check and emit, updated baselines
Treat .js files as javascript in the LS.
Some emit cleanup for ES6 classes, comments.
Accept baseline changes
Merge branch 'exportEquals' of https://github.com/Microsoft/TypeScript into exportEquals
Ellide uninstantiated exports in ES6
Simplified check for decorators.
Correctly emit bidning pattern with initializer and rest
Check for instantiation on export default in ES6
Merge branch 'master' into exportEquals
Consistently error on more than one 'export default'
Renamed variables for clarity
Removed the (now unused) lineBreakBetween
removed unused functions
Emit, even in the presence of declaration errors and noEmitOnError.
Adding a few comments
Deleting unused code
Accepting new baselines
Adding basic tests
Fixing emit for import d, * as foo from "foo" case
Add support for exporting imported symbols
Merge pull request #2448 from Microsoft/newlines
Emit and use '__export' helper for 'export *' declarations
Simplify collection of external module info in emitter
Accepting new baselines
Separate 'export default' and 'export ='
Added gc of configured projects to handle case in which file is opened in directory configured by tsconfig.json, but file not part of the configured project.
Added support in the server for tsconfig.json.  When a host opens a file F, the server will check whether F is configured by a tsconfig.json file.  If so, the project specified by the tsconfig.json file becomes the LS context for F.
Simplified grammar check for decorators.
Refactored checkDecoratorSignature and renamed getAnnotationTypeForDecoratorType
Improve display of symbol definitions.
Treat 0x0085 as whitespace, not as a line terminator.  This matches ES5 and ES6.
Add a new findReferences API that buckets results with the definition they matched against.
Minor cleanup of resolveName for decorators
PR feedback
Merge pull request #2431 from Microsoft/noEmitOnErrorCompileOnSave
Don't actually emit declarations when we just want the diagnostics for them.
No emit should happen if there are declaration errors and noEmitOnErrors is specified.
Allow destructuring in ambient context
Emit destructuring in parameter
Merge pull request #2199 from Microsoft/enumCleanup
Merge pull request #2415 from Microsoft/shorthandsOnNonExistentProperty
Further simplification
Clean up getCompletions code.
Merge pull request #2419 from Microsoft/instrumenterLibraryTargets
Add libraryTargets to prereqs of instrumenter
Merge pull request #2417 from Microsoft/separateDeclEmit_2
extract declaration emitter to separate file
Merge pull request #2413 from Microsoft/constAntlyAPainForUs
Extended test.
Merge pull request #2139 from Microsoft/DtsExports_all
Fixed issue where goToDef on a shorthand property of an undefined entity would crash.
Fixed test.
Merge pull request #2414 from Microsoft/createSourceFile
addressed PR feedback
Added tests.
Expose setParentNodes on createCompilerHost
Merge pull request #2396 from Microsoft/completionsInIncompleteConstructs
Fixed the contextual check for modifiers to check the original modifier instead of the flags of the node.
Fixed test.
Added tests for const modifiers.
Remove space.
Added test for completions at beginning of file.
Addressed CR feedback.
PR comment, sourcemap test
Merge pull request #2409 from Microsoft/diagnosticCodes
Add handling of hard tabs in server buffers.  Change message protocol to pass locations as line/offset pairs instead of line/column pairs, where offset is a 1-based character offset from the beginning of the line. Offset will be equal to column if the line contains no tabs.  If the line contains tabs, offset will be less than or equal to column, depending on how many tabs are before the offset.  Also added tab size and indent size to file open message.
Fix diagnostic codes.
Merge remote-tracking branch 'origin/master' into serverConfigurationMessage
Merge pull request #2408 from Microsoft/pinnedComments2
Simplify comment emit.
Merge pull request #2406 from Microsoft/pinnedComments
Simplify flow control.
Add test for pinned comments.
Simplify code for emitting comments.
merge with master, accept baselines
Added sourcemap tests
do not emit non-exported import declarations that don't have import clause
Merge remote-tracking branch 'origin/master' into serverConfigurationMessage.
Merge pull request #2402 from Microsoft/dropInternedStrings
merge with master, accepted baselines
Add additional tests.
Merge pull request #2400 from Microsoft/toolsversion
drop interned indentation prefixes if format options has changed
Add additional tests.
We only need the 2 most significant digits.
Add tests for javascript semantic dianostics.
fix typo
Add specialized semantic diagnostics for JavaScript files.
Add toolsversion to shim so we can read it from VS.
Updated baselines
Updated baselines
Updated baselines
Updated formatting for decorators
Emit for decorators, updated to ES6 classes.
Checker updates for decorators
Parser updates for decorators
Scanner updates for decorators
Diagnostics for decorators
Utilities for decorators
Types for decorators
use type annotation when emitting declarations
Merge pull request #2335 from Microsoft/es6ImportExportEmit
Added tests.
Line endings.
Merge branch 'master' into es6ImportExportEmit
Add comments
Merge branch 'master' into completionsInIncompleteConstructs
Merge branch 'master' into completionsInIncompleteConstructs
Merge pull request #2395 from Microsoft/removeCodeClimateStuff
Start handling element access expressions.
Start using nodeIsMissing.
Delete extra comma
More cases and tests for them.
Remove CodeClimate stuff
Merge pull request #2394 from Microsoft/repoLanguageClassificationFix
Add .gitattributes to override GitHub Linguist language classification for the repo
Merge pull request #2356 from Microsoft/typeParameterFixing
Merge pull request #2385 from Microsoft/completeIsCompleteNode
Merge branch 'master' of https://github.com/Microsoft/TypeScript into typeParameterFixing
Add clarifying comment
Merge pull request #2382 from Microsoft/mergingConstEnumOnlyModules
Merge pull request #2354 from Microsoft/cleanupDiagnostics
Account for typeof expressions, added test.
Added index signature case.
Merge branch 'completeIsCompleteNode' into completionsInIncompleteConstructs
Fixed case for index signatures.
Merge branch 'master' into cleanupDiagnostics
Introduce NodeFlags.ExportContext
Added completion check for prefix-unary, binary, and conditional expressions.
Fixed up more tests.
Removed negations from test.
Fixed missing marker.
Moved logic from smart indenter; use 'scope nodes' for completions.
Fixed up tests.
Added tests for #1410.
Added tests.
Added tests for completions before a new scope.
Fixed harness.
Fix copy/paste error.
Added accumulated tests.
Always indent on tuple type literals.
Moved construct signature down appropriately, fixed logic for function-like constructs.
Account for call signatures properly.
Rename tests.
Indentation within binding patterns.
Handel export name bindings in internal modules in ES6
A more complete isCompletedNode.
Export classes defined wihtin internal modules correctelly
Do not emit "export" for classes within modules, and do not write the name of an export default class
Merge branch 'master' into es6ImportExportEmit
correctly merge const enum only and instantiated modules
Respond to code review comments
Merge branch 'master' into DtsExports_all
initial version of declaration emit for default export
Merge branch 'master' of https://github.com/Microsoft/TypeScript into typeParameterFixing
Merge pull request #2333 from Microsoft/emitClass
Add a check to make sure we have results.
Add assert to make sure getOccurences at position only returns results for the file we request the occurences for.
Address code review; Use for..of and use if-statement
Merge branch 'master' into DtsExports_all
Merge pull request #2339 from Microsoft/exportDefaultType
Merge branch 'master' into emitClass
Address code review
Address code review
Address code review
Add use of host-configured format options to additional code site.
Merge branch 'master' of https://github.com/Microsoft/TypeScript into typeParameterFixing
More PR feedback
Merge branch 'master' into es6ImportExportEmit
Added configuration message.  Added logic to expand tabs to spaces using host-configured tab size.
Address code review. Use-before-def check will be added to separate work item
Merge branch 'master' into exportDefaultType
Update Baselines
Merge pull request #2374 from Microsoft/renamingCleanup
addressed PR feedback
use 'allowGeneratedIdentifiers' to explicitly tell when identifier can be renamed
Merge branch 'master' into es6ImportExportEmit
Merge branch 'master' of https://github.com/Microsoft/TypeScript into typeParameterFixing
Address PR feedback
Update baselines
Update baselines for symbol
Update baselines
Merge pull request #2283 from caitp/issue-2282
Add tests
Fix issue of the default binding not elided if namedImport is reference
Update baselines
Merge branch 'master' into es6ImportExportEmit
Upate error message
Merge branch 'master' into exportDefaultType
Merge pull request #2368 from Microsoft/exportDefaultLS2
enable navbar for export defaults
Address code review: do not emit default constructor
Merge pull request #2353 from Microsoft/shadowingNameViaBindingPattern
addressed PR feedback
Share SourceFile with other grammar checker that needs it
Address code review
Make sure arrow function grammar rules can deal with type annotations
Restore earlier behaviour when parsing non-simple arrow function bodies
Parse arrow function body as identifier if missing => or {
Address slew of review comments
Fix line wrapping
Check that arrow is on same line as parameters
Add additional test-cases for arrow function grammar
Perform error reporting in checker
Disallow line terminator after arrow function parameters, before =>
Add tests for type parameter fixing
Get rid of inferenceFailureType, just set the failedTypeParameterIndex directly
Optimize the clearing of inferredTypes
Persist inference context object throughout the signature, and add isFixed property
Add assert in reportNoCommonSupertypeError
Merge pull request #2352 from Microsoft/forOf2
merge with master
Preserve newlines in our own compiler.  This aids debugging as it keeps lines at a reasonable length and more closely matches the original source.
Do not include experimental options in the public API.
Update LKG.
Update LKG.
Reserve _i and _n as names we often want to generate
Use the new option to cache .length access
Add experimental option to cache the .length access in downlevel for-of emit.
accepted baselines
Use 'let' in the compiler layer.
Update LKG
Use 'let' in the compiler layer.
Use 'let' in the compiler layer.
Use 'let' in the compiler layer.
Merge branch 'master' into cleanupDiagnostics
Use 'let' in the ompiler layer.
Use 'let' in the services layer.
Removing unused function from emitter
Clean up diagnostic timers and -diagnostic output
merge with master
consider binding elements as always initialized with doing shadow check
Use 'let' in the services layer.
Use 'let' in the services layer.
Use 'let' in the services layer.
Use 'let' in the services layer.
Use 'let' in the services layer.
Merge pull request #2347 from Microsoft/forOf
Update baselines.
Merge branch 'master' into forOf
Merge branch 'master' of https://github.com/Microsoft/TypeScript
Merge pull request #2323 from Microsoft/letConstInDestructuringInNotStrictMode
Merge pull request #2348 from Microsoft/doNotRenameParameters
Use 'let' in the services code.
Merge remote-tracking branch 'origin/doNotRenameParameters' into forOf
Use 'let' in the emitter.
Use 'let' in the checker.
addressed PR feedback: fixed typo in function name
use Value meaning as a filter when resolving names to prevent skipping other value in favor of block-scoped variables
Use 'let' in the binder.
Use 'let' in the parser.
Use 'let' in the scanner.
Use 'let' in core.ts.
Use for-of in more places.
Use for-of in more places.
Use more for-of
use for-of in more places.
More usage of for-of
use for-of in more places.
Use for-of in the checker.
Use for-of in the checker
Use for-of in emitter.ts
Use for-of in core.ts
Use for-of in the parser.
Support an optional type annotation on export default statement
merge with master
Merge branch 'master' into es6ImportExportEmit
Update error message
Merge pull request #2332 from Microsoft/updateLKG
Emit export default in ES6
Emit Super as super
Update LKG
Merge pull request #2308 from Microsoft/for-ofES5
Clean up redundant tests
Parse classDeclaration in strict mode code for ES6
Address PR feedback
Adjust baselines after merge
Merge branch 'master' of https://github.com/Microsoft/TypeScript into for-ofES5
Merge pull request #2309 from Microsoft/recursiveLetConst
addressed PR feedback
Export * and export { names } emit in es6 format
correctly parse destructuring in let outside of strict mode
Emit export internal import equals declaration in es6 format
Merge pull request #2321 from Microsoft/diagnosticAsserts
Emit export class declaration in es6 format. Note since we havent yet changed the emitting of class declaration to es6 format, we are just exporting the constructor function
Add additional asserts to ensure we don't create diagnostics with bogus positions.
Emit export function declaration in es6 format
Emit ES6 module enum declaration
Disallow refering to static property in computed property name
Emit es6 export ModuleDeclaration
Es6 module emit for export VarDeclaration, export LexicalDeclaration
Do not rewrite substitute named import reference when generating es6 modules
Remove references with exports.id as es6 module doesnt have exports.id
Fix the checks with language version to use default es3
Simplify module kind selection
Support for emitting import declaration in es6 format
addressed PR feedback
Emit in ES6 module if script target is es6 or higher
Add tests
Report error if module gen target is specified in es6
Handel isDeclaration visible for imports
Add tests
Report error on export assignment with es6 and above target
ES6 doesnt support import id = require("mod") syntax
Rebaseline tests that will be affected by #2308
disallow recursive references for block-scoped bindings
Emit class with export and export default
Add tests for downlevel for-of type checking
Remove unhelpful comment
Change a test to be more interesting
Introduce checkElementTypeOfArrayOrString for downlevel for..of type checking
Remove error for using 'for...of' in ES3/ES5
Emit class declaration with static property assignment
Merge pull request #2307 from Microsoft/sigHelpIndex
Merge pull request #2303 from Microsoft/smartIndentInIncompleteForLikeStatements
Add explanatory comments.
Remove unnecessary code.
Compute consistent argument indices and counts for signature help.
Add failing test.
added for* statements to isCompletedNode
Add tests for extension, type arguments, overload
Merge pull request #2291 from Microsoft/letConstInSwitchStatements
introduce emitCaseBlock function
introduce CaseBlock as a block-scoped container for switch statements
test cases for constructor overload, non-static property assignment, getter/setter, method, static method,
emit get/set member function
Merge pull request #2238 from caitp/issue-2090
Emit non-getter/setter member function
Remove redundant sourcemap span and comment. Differentiate between emit for below ES6 and above ES6
Move comment and refer to tuple type literal syntax rather than TupleType interface
Merge pull request #2275 from DickvdBrink/object-generics
Merge pull request #2207 from Microsoft/for-ofES5
Basic emit for class constructor without static property assignment
Merge pull request #2270 from mihailik/patch-1
Fix call to emitNode after merge with master
Add note about use of isTupleType()
Add tests for tuple type compatibility
Improve message for array destructuring error
Merge branch 'master' of https://github.com/Microsoft/TypeScript into for-ofES5
Address PR feedback
Merge pull request #2276 from Microsoft/commentEmit
Merge branch 'master' into commentEmit
Merge pull request #2267 from Microsoft/indentSimplification
CR feedback.
Merge branch 'master' into indentSimplification
made seal, freeze and preventExtensions generic
Add specialized codepath for emitting without comments.
Merge pull request #2273 from Microsoft/fixRWCRunner
Remove deubgger statement
Fix file path resolution in RWC
rename emitNode to emitNodeWithoutSourceMap
Merge branch 'master' into indentSimplification
Merge pull request #2258 from Microsoft/formatLine
Hold at most 4 snapshots per file in the server.  This is about 1K per file.
Merge branch 'master' of https://github.com/Microsoft/TypeScript into for-ofES5
Fix for #2268 createDiagnosticCollection should be @internal
Renames and comments as requested by feedback.
Further simplification.
Merge pull request #2266 from Microsoft/moveLocal
Simplify indentation code in the emitter.
Move variable closer to where it is used.
Merge pull request #2265 from Microsoft/preserveFormatting
Merge branch 'master' into preserveFormatting
tests for newline preservation.
Make the preservation of formatting an optional experimental compiler flag.
Merge pull request #2263 from DickvdBrink/valueOf-lib.d.ts
Accepted baselines
Fixed tests due to lib.d.ts changes
Added valueOf definitions for String and Number
Addressed comments on code style and organization.
Merge pull request #2245 from billti/ExportVersion
Added description to version exports
Merge pull request #2257 from Microsoft/LKG
Added new logger methods to test harness.
Changed TypeScript server logging to use an environment variable TSS_LOG as follows.  If TSS_LOG is not set, no logging will occur.  If TSS_LOG is set to any value, logging will occur as before this change (log file will be in directory of tsserver.js with name .logPID where PID is the process id of the server process; log will contain the pre-change messages).  If TSS_LOG is set to a string that has the form "-file fileName", the log file will be in the tsserver.js directory with name 'fileName'.  If TSS_LOG is set to a string that has the form "-level levelName", then the level of logging will be set to 'levelName'. Currently the two levels are 'normal' and 'verbose'.  The TSS_LOG string can contain zero, one or both of its options as in "-file LOG -level verbose".  At the verbose level, the server will log every request, response and event, and will also give elapsed time for message processing.
Added additional cases for format on enter.  These cases fix bugs in the orginal format on enter (which wasn't distinguishing whether there was existing whitespace to start some types of lines).
Merge branch 'master' into LKG
Merge pull request #2255 from Microsoft/returnStatus
Update LKG
Update LKG
Merge branch 'master' into returnStatus
Merge branch 'master' into propertyAccessEmit
Preserve newlines for conditional expressions
Simplify code to emit indent code.
Preserve newlines on either side of a binary expression.
Address omitted return keyword.
Merge pull request #2251 from Microsoft/expressionToBlock
CR feedback.
Fix up comment.
When emitting an arrow function, parenthesize the body if it could be interpreted as a block instead of an object literal.
Merge pull request #2248 from Microsoft/variableLike
CR feedback.
Add an 'isVariableLike' helper function.
Merge pull request #2197 from Microsoft/exportDefault
Merge pull request #2243 from DickvdBrink/browser-test
Merge branch 'master' into exportDefault
Made the 'version' string an exported property
Fixed jake runtests-browser on node 0.12
Merge pull request #2236 from Microsoft/signatureHelp
Merge pull request #2235 from DickvdBrink/letConstInCatchclause
Merge pull request #2240 from DickvdBrink/VSDevMode-doc
Merge pull request #2239 from caitp/issue-2237
fix check to allow for empty argument list
Document procedure for digital CLA signature in CONTRIBUTING.md
Merge pull request #2222 from billti/tsconfigWatchFix
Merge pull request #2223 from billti/FixPathNormalization
Merge branch 'master' into signatureHelp
Add diagnostics for signaturehelp crash
Added tests for let/const variable declarations in catch clause (with the same name)
Use hasProperty instead
Fixed baselines to account for correct path normalization
Error on redeclaring a variable with let/const already defined as catch parameter
Add new diagnostics message for let/const declarations in a catch clause
Fix path normalization for patterns such as './/tsconfig.json'
Fix watch to honor tsconfig.json setting
Minor baseline adjustment
Fix sourcemaps for 'for...of' and no source maps for synthesized nodes
Preserve newlines for property access expressions on multiple lines.
Accept error baselines and API breaks
Add tests for destructuring 'for...of'
Do not create a temp for RHS if it's an identifier
Fix createTempVariable to always record the name in the currentScopeNames
Revert change to createTempVariable
Accept baselines
Support destructuring in 'for...of' loops
Emit 'for...of' statements with let/const initializers
Emit for...of when LHS is expression
Remove tempCount
Accept baselines
Add tests for 'for...of' emit when LHS is a var
Make createTempVariable call into generateUniqueNameForLocation
Emit 'for...of' loop when LHS is a var
Merge pull request #2205 from Microsoft/errorSpans
CR feedback.
Never use the entire span of a function declaration or function expression when reporting a checker error.
Excluding "default" member from "export *" per ES6 specification
Merge pull request #2201 from Microsoft/commentsOnBlocks
Adding test to ensure comment before block is conserved
Accepting new baselines
Renaming SymbolFlags.Import to SymbolFlags.Alias
enum cleanup: apply constant folding to all enum initializers, inline accesses only for const enums
Fixing error reporting issue in checkExternalModuleExports
Merge branch 'master' into exportDefault
More comments
Merge pull request #2194 from Microsoft/namesInNestedScopes
addressed PR feedback
Merge pull request #2195 from Microsoft/revert-2063-contrib
Revert "Run jake in interactive mode so output isn't lost."
look through the entire chain of name scopes to ensure that name is unique
Another comment
Adding some comments
Fixing a few issues
Added guards for end of file edits.
Support emit of unnamed export default function/class
Accepting new baselines
Changing emit(...) to emitNode(...) in several places
Accepting new baselines
Parsing, binding, checking of export default with function/class
Merge pull request #2063 from jbondc/contrib
Merge pull request #2169 from Microsoft/withANameLikeUnicodeYoudThinkThereWouldntBeSoManyWaysToDoIt
Words.
Addressed CR feedback, also properly accounted for template literals.
merge
Added logic to handle requests for changes past the end of the buffer.
Harden against trees without parent pointers for emitting literals; fix lookahead in text for numeric literal indicators.
Merge pull request #2164 from Microsoft/for-ofES6
Merge branch 'master' of https://github.com/Microsoft/TypeScript into for-ofES6
Merge pull request #2187 from Microsoft/CRLF
Use CRLF not LF.
Use CRLF for line endings.
Use CRLF, not LF.
Merge pull request #2177 from Microsoft/intern
Merge pull request #2178 from tinganho/editorconfig
Make fields internal.
Updating fourslash tests
Add one more test
merge with master
Accepting new baselines
Unifying ES6 and TypeScript external modules Export assignments are now equivalent to export of member named "default" Export assignments and exports defaults collected by binder Export * declarations collected by binder Simplified logic for marking import symbols as referenced Removed "location" parameter from resolveEntityName Improved error position reporting in resolveEntityName
Fixed error message.
update baselines
Merge branch 'master' into DtsExports_all
Changes to crlf
Adds editorconfig file
Add tests for scoping
Address feedback
Expose a way to get the name table from the LS.
Merge branch 'master' into intern
Don't intern all strings and numbers.  Just the ones used as declaration names.
Merge branch 'master' of https://github.com/Microsoft/TypeScript into for-ofES6
Merge pull request #2140 from Microsoft/lsImportResolution
Merge pull request #2161 from Microsoft/letConstES5Minus
Addressed some CR feedback.
addressed PR feedback
Merge branch 'master' of https://github.com/Microsoft/TypeScript into for-ofES6
Merge pull request #2167 from Microsoft/documentRegistry
Add tests.
Add registry tests.
Adding npm related badges to the readme
Removed unused variable.
Merge branch 'master' into withANameLikeUnicodeYoudThinkThereWouldntBeSoManyWaysToDoIt
Merge branch 'master' into lsImportResolution
Respond to code review comments
Only add an extended Unicode escape when it is entirely valid.
Whenever a document is acquired, make sure it returns a source that corresponds to the version requested.
merge with master
Update comment.
Fix issue where source files could get corrupted.
Emit all strings with extended escapes using the same scheme as templates.
Fixed VSDevMode.ps1 parameter info
Merge branch 'master' of https://github.com/Microsoft/TypeScript into for-ofES6
Respond to PR feedback
Made unicode escapes use uppercase hex codes.
Emit non-ASCII characters with unicode escape sequences.
merge with master
Merge pull request #2162 from Microsoft/declarations
merge with master
Disallow destructuring in 'for...in'
Add a few more tests
Support assignment patterns in 'for...of' statements
Delete bad baseline
Update comment
Add tests for for-of destructuring
In ES6, an Iterable should contextually type an array literal
Move assert
Add tests for circular references in for...of loops
Check for assignability to the relevant iteratable type
Fix getIteratedType to work with 'any' at all levels
More tests
Iterator tests
Check iterable structure of the right hand side of 'for...of' statement
Tests and baselines for 'for...of' variables
Get type of 'for...of' variables
Add tests and accept correct baselines
Basic iterator support in for..of statement
Basic tests
Basic for...of checking
Fix naming in checkForInStatement
Remove error disallowing for...of loops
Merge pull request #2163 from Microsoft/computedPropertyFormatting
Adding test.
CR feedback.
Merge pull request #2157 from Microsoft/timings
Add test for catch variables with initializers.
Rename method.
added comments
Simplify how catch clauses are represented in our AST.
added tests
Add ArrowFunction and sort cases.
do not treat property names in binding elements as block scoped variables
Make isDeclaration return 'true' on FunctionExpressions.
Produce better wrapping for object literal emit with computed property names.
Print times in a manner more consistent with the 1.3 compiler.
Added scanning support for extended escapes.
Added tests and updated baselines.
Make the vsDevMode script more explicit and support lib file override
Merge branch 'master' into withANameLikeUnicodeYoudThinkThereWouldntBeSoManyWaysToDoIt
added SyntaxKind.ModuleDeclaration to list of block scope containers
added 'nodeIsSynthesized' function, use createSynthesizedNode in emitter to build synthetic nodes
Merge pull request #1589 from ivogabe/taggedTemplates
Update baselines
Merge pull request #2146 from Microsoft/fromContextualKeyword
Merge branch 'master' into taggedTemplates
Merge pull request #2125 from Microsoft/updateProjectStructure
'from' is a contextual keyword, and should only be recognized as by the parser as such.
Merge pull request #2143 from Microsoft/escapingTheTemplateOfDoomAgain
do not report error on non-initialized const bindings in for-in\for-of statements
Fixed character escaping for characters with values below 0x20 and '9'.
Added tests for testing escapes.
do not emit default initializer for let\const in for-in\for-of statements
Merge pull request #2142 from Microsoft/timeReporting
Ensure that the cost for typechecking is not billed to the emit portion of the compiler.
Accepting new baselines
Support for 'export default' with expressions
Merge pull request #2138 from Microsoft/functionEmit
Merge branch 'master' into functionEmit
CR feedback.
CR feedback.
Merge branch 'binaryExprAlloc'
Simplified scanHexDigits by just wrapping the intended functionality in separate functions.
Added tests for escapes in strings, regexes, and templates.
Add support for new import syntax in preprocessFile
Avoid unnecessary allocations in binary expression emit.
Check if the module exist before extracting exports from it
Avoid allocation during binary expression emit when unnecessary.
Avoid allocation during binary expression emit when unnecessary.
Avoid allocation during binary expression emit when unnecessary.
Remove optimization of eliding the preamble code for functions without statements.
Merge pull request #2121 from Microsoft/importGotoDef
Merge branch 'master' into taggedTemplates
merge with destructuringDts
merge with master, fix emit for omitted expressions
moved name generation logic to utilities
merge with master
Merge pull request #2134 from Microsoft/completionForExports
addressed CR feedback
Merge remote-tracking branch 'origin/master' into destructuringDts
added missing return, accepted test baselines
dropped extra newlines
added tests
added missing declaration kinds to getMeaningForDeclaration
Merge branch 'master' into es6ImportDts
added completion for exports in named imports section
Merge pull request #2123 from Microsoft/fixExportStarMerging
Merge pull request #2126 from Microsoft/findAllRefsForImports
Merge pull request #2129 from Microsoft/importNavigation
Merge pull request #2131 from Microsoft/deleteUnusedFiles
Merge pull request #2130 from Microsoft/importBreakpoints
Update LKG
Add tsserver.js to the LKG drop
delete unused files
breakpoint support for new import/export syntax
replace -1 in SmartIndenter with const enum
Support navigateTo for new import/export syntax
Support navigation bar for new import/export syntax
Merge pull request #2122 from Microsoft/getDefaultLibFileNameFix
Merge pull request #2107 from Microsoft/destructuring_classElements
Merge pull request #2108 from Microsoft/formattingInDestructuring
Wrap getDefaultLibFileName API changes in a try/catch until TypeScript 1.5 has shipped.
Merge pull request #2117 from Microsoft/formattingTabsInMultilineComments
Merge branch 'master' into findAllRefsForImports
Support find references on the new import/export syntax
Remove debugger statement
Added comments for updateProjectStructure.
Update project structure after change.  After each change a timer is started.  If timer finishes before another change takes place, project structure will be updated to reflect any changes in reference comments or import statements.
addressed CR feedback
operator -> operatorToken.kind
Rename callback to literalEmitter
Merge pull request #2110 from Microsoft/formattingQMark
Removed tree rewriting code
Stop using rewrites for object literal downlevel emit.
Fix export * merging to not overwrite original members
Merge remote-tracking branch 'origin/master' into importGotoDef
Add a comment
Merge pull request #2120 from Microsoft/mochaColors
accept baselines
Merge pull request #2119 from Microsoft/fixFailingTest
Add support for printing colors to the command line when running mocha!
Fix failing test.
Merge pull request #2111 from Microsoft/navToPatternMatcher
Merge pull request #2104 from Microsoft/arrowFunctionEmit
Merge pull request #2109 from Microsoft/sideEffects
Merge remote-tracking branch 'origin/master' into importGotoDef
Merge pull request #1971 from Microsoft/commaSeparator
Support GetDefinitionLocation on module names and aliases for new import/export syntax
CR feedback.
Merge pull request #2083 from Microsoft/iterators
use character instead of column when formatting multiline comments with tabs
Merge pull request #2116 from Microsoft/fix-autoCollapse
Merge branch 'master' into sideEffects
[Symbol.iterator] of a Generator is a Generator
Merge branch 'master' of https://github.com/Microsoft/TypeScript into iterators
Fixes overly-aggressive auto-collapse for "Collapse to Definitions"
Merge pull request #1983 from Microsoft/es6Import
Be more conservative on when we'll emit a function in a single line.
Add missed file from addNavtoLimit branch.
Merge pull request #2106 from Microsoft/addNavtoLimit
Merge branch 'master' into es6Import
Merge pull request #1989 from Microsoft/hostCache
Addressing CR feedback
Merge branch 'master' into es6Import
Merge branch 'master' into hostCache
Merge pull request #2112 from Microsoft/lkg
Changed no content action for completions from exception to error message.
Added update of project structure on idle following change (if no changes in last s seconds (where s is currently 1.5), then check project structure to account for references that may have changed.  Turned this off pending fix for getScriptFileNames returning only the root names. Added event handler for deleted file, so that session can update error messages upon deletion of a file from a project.
Update LKG.
Update LKG.
renamed QMark to QuestionMark
CR feedback
Move NavigateTo over to using the new pattern matcher.
CR feedback.
added missing test
insert space after '?' only in conditional operator
Emit parameter initializers unless we are certain they don't have any side effects.
include binding element with initializer to current formatting rule for binary operator, adjust existing SpaceBeforeOpenBraceInFunction rule to recognize blocks
added rule to insert space after let\const in variable declaration context
do not include constructor parameters with binding patterns as names when collecting nav bar items
Merge pull request #1998 from Microsoft/newLineClassification
Merge branch 'master' into newLineClassification
Update baselines after merging master
Use createAndRecordTempVariable
Merge branch 'master' into taggedTemplates
Respond to code review
Add maxResultCount optional field to NavtoRequestArgs.  Change session.ts to use this field.  Remove sort of nav items from getNavigateToItems in sesion.ts because LS now does the sort.  Removed no content throw in quick info as this happens frequently with Sublime (every cursor move calls quick info, and quick info is only available on symbols).  Added mechanism for other commands to avoid throwing and instead return a specific error message, so that we don't make the log unreadable (as it was with hundreds of quick info stack traces).
Merge pull request #2101 from Microsoft/restElementNull
Addressing CR feedback
Merge branch 'master' into newLineClassification
Emit arrow functions with expression bodies 'as is' when targetting ES6 or higher.
Merge pull request #1975 from Microsoft/multiLineEmit2
Preserve newlines between object literal members.
Merge branch 'master' into multiLineEmit2
Merge branch 'master' into multiLineEmit2
Merge pull request #2094 from Microsoft/patternMatcher
Merge pull request #2097 from Microsoft/binaryExpressionEmit
Merge branch 'master' into newLineClassification
Update tests.
Merge branch 'master' into multiLineEmit2
Merge branch 'master' into patternMatcher
CR feedback.
Adding test
Fix crash on destructuring null or undefined into rest element
Add tests for tagged templates
Merge pull request #2098 from Microsoft/sortNavigateToItems
Sort navigate to items by name, after sorting by kind.
Preserve newlines and indentation for binary expressions when possible.
Merge branch 'master' into binaryExpressionEmit
Merge pull request #1950 from Microsoft/thanksLua
Merge pull request #2055 from Microsoft/baseZero
Include the binary expression's operator in the AST.
Fixed case where property should not be emitted.
Extracted out RHS patching property logic to function.
Addressed CR comments.
Make IterableIterator deeply iterable
Merge branch 'master' into baseZero
This is why we need an IO type constructor.
Merge branch 'master' into thanksLua
Merge pull request #2084 from Microsoft/limitNavigateTo
Address code review feedback.
Removed unused text-concatenating emit.
Rewrite the tree instead of hacking text together for downlevel object literals with computed properties.
CR feedback.
Merge branch 'master' into iterators
Merge pull request #2086 from Microsoft/ofKeywordClassification
More tests
Formatting around 'of' keyword
CR feedback.
Add a PatternMatcher API (similar to the one in Roslyn) for more advanced matching with features like NavigateTo.
Merge pull request #2092 from Microsoft/formattingMultilineTemplateLiterals_regressionTest
added regression test for formatting multiline template literals
Add a test
Don't emit accessors multiple times.
Accept baselines
Make LastToken point to OfKeyword
CR feedback to use template strings.
Merge branch 'master' into limitNavigateTo
Code review
Split Iterator into Iterator and IterableIterator in es6.d.ts
Add support for limiting the number of NavigateTo results that you get back.
Merge pull request #2079 from Microsoft/increaseRWCTimeout
Merge branch 'master' into increaseRWCTimeout
Increase RWC timeout
Made the initial object literal properties indented.
Merge pull request #2041 from Microsoft/TSServer
Wrap all commands in exec()
Style fixes.
If there's a callback, make it its responsibility to call complete()
Perfsys no longer used
Tabs to spaces.
Run jake in interactive mode so output isn't lost. Fix jake perftsc.
Merge pull request #2066 from Microsoft/forOf
Split completions req/response pair into two messages "completions" and "completionEntryDetails".   This mirrors the function of the LS API and increases performance of completion in large projects.
Merge branch 'master' into forOf
Address feedback
Merge pull request #1978 from Microsoft/esSymbols
Created a combined 'createAndRecordTempVariable' function.
Addressed CR feedback.
Temporarily disallow for-of statements
Disallow type annotation on a for-of variable
Disallow initializers in for-in and for-of loops
More resilient error recovery when declaration in for-of is empty
Fork grammar message into two messages
Accept baselines for added tests
Add tests for for-of
Parity sweep for for-in & for-of
Accept API baseline changes
added ForOfStatement to forEachChild
initial version of parsing 'for-of'
Removed deleteLen from change request; added endLine, endCol that mark the end of the deleted Range (inclusive).  DeleteLen was not always accurate because editors normalize \r\n to \n in some cases, affecting the length of ranges.  In Diagnostic response items, changed len field to end to address the same range length issue.  Flattened MessageDiagnosticChains in diagnostic message text, since clients expect string there.  Renamed ts.server.protocol to simply protocol in session.ts and client.ts since module name prefix is clear.
Merge branch 'master' into thanksLua
added tests, accepted baselines
Merge branch 'master' of https://github.com/Microsoft/TypeScript into esSymbols
added missing files
accepted baselines
merge with master
Merge pull request #1990 from Microsoft/isDefaultLibFile
accepted baselines
Adding getCanonicalFileName to ensure case-sensitive systems do not have issues
Merge branch 'master' of https://github.com/Microsoft/TypeScript into esSymbols
Dts for export * from "mod" and export { a, b as c,...} [from "mod"]
Merge branch 'es6Import' into es6ImportDts
Change rename response to return the rename info + nested location information: one array of location information per file.  Add interface definition for rename response body.
Removed file mapping compression technique due to brittleness of approach.  As necessary, will substitute grouping or paging approaches.
Fix function name.
Fix up API samples.
Remove 'ZeroBased' from all APIs, now that all APIs are zero based.
Remove the one based APIs.
Move typewriter over to using zero based math.
Use the zero based methods in the harness.
Move formating over to zero based math.
Use zero based math in hte services layer.
Stop using one based math in fourslash.
Remove usages of computeOneBasedLineAndCharacterOfPosition
Simplify helper function.
Move the smart indenter over to zero based math.
Make code more clearly state that it is one based.
Remove one-based helper function.
Move the emitter over to using zero based indexing.
Address feedback
Move the emitter over to use zero based indexing.
name more line/char functions more clearly.  Use zero based indexing in breakpoints.
Make method more clearly indicate that it is one based.
Expose zero-based helpers that code will be able to call.
Update baselines.
Rename our one-based methods to more clearly indicate that that's what base they use.
Merge branch 'master' of https://github.com/Microsoft/TypeScript
Made the actual implementation of the lexical classifier be non-optional.
Rebaseline after merge
Merge branch 'master' of https://github.com/Microsoft/TypeScript into esSymbols
explicitly initialize let binding in generated code to default value
Merge pull request #2052 from Microsoft/moveErrors
Merge pull request #2051 from Microsoft/absenceNonOptional
Accept baselines
Move 4000-coded type check errors to 2000s where they belong
Make 'syntacticClassifierAbsent' non-optional.
Accept APISamples baselines
Update tests
Error for naming an interface 'symbol'
Merge branch 'master' of https://github.com/Microsoft/TypeScript into esSymbols
Merge master into taggedTemplates
Remove unused code and only expose needed types/classes
remove unused cancellationToken class
Comment formatting
Change ServerProtocol module to ts.server.protocol
Remove unused code
rename output file to tsserver.js
renmae protodef.d.ts to protocol.d.ts and protocol.ts to session.ts
Include globals in check for existing identifiers
show error if block scoped variable declared in the loop is captured in closure
Remove debugging statemetns
Add test for completionEntryDetails
use EncodedFile everywhere in responses
Make method names inline with matching LS function names
Add navbar test
Accepting new baselines
Support for 'export *' declarations
Add test for rename
Add test for quickInfo
Add test for find references
Add a new definition test
Add test for completions
Move fileWatching logic to the server to allow for testing on non-node systems
Get details for member completions as well as completions matching prefix
use ts.getDefaultLibFileName to get the default library file name
drop locals in block-scope container nodes during binding
Always default to using JSON and do not format it
Recover from git corruption
try only names generated in current scope with testing if name is unique
Merge branch 'master' into letConstES5Minus
initial revision of downlevel compilation for let/const bindings
Merge pull request #2027 from Microsoft/redefinedLetConst
Merge branch 'master' of https://github.com/Microsoft/TypeScript into esSymbols
Merge pull request #2028 from Microsoft/rwcInvariants
Merge pull request #2033 from Microsoft/fixTimeMeasurement
Merge pull request #2026 from Microsoft/lexicalTemplateStringsOnMaster
Re-exported symbols should not be in scope
Merge branch 'master' into fixTimeMeasurement
Fix time measurement
Added baselines.
pass missing argument to error message
adjust error message text based on PR feedback
Addressed CR feedback.
Merge branch 'master' into isDefaultLibFile
switch to using host.getDefaultLibFileName(options)
Accepting new baselines
Static checking for export declarations
Allow multiple (renaming) exports for same entity
addressed PR feedback
Emit parens for tag of tagged template if necessary
Added script to easily enable VS dev mode
Accepting new baselines
Support for ES6 export declarations (except export default and export *)
Address feedback
Don't check invariants when running RWC tests. It adds too much running time.
Merge branch 'es6Import' into es6ImportDts
Added API baseline changes.
update comment text
added check that var and let\const cannot share scope, added check that var is not shadowed by the let\const from the inner scope
Add test for goto def
Added comment for 'syntacticClassifierAbsent'.
Fixed assertion
Added tests, fixed order of emptying templateStack, unconditionally perform template classification.
classifyKeywordsInGenerics -> syntacticClassifierAbsent
Addressed CR feedback.
Fixed issue with the kinds we check.
Rudimentary, but imperfect, lexical classification for templates.
Add test for format on key
Support brace matching
Test cases to verify the privacy error reporting is done on correct node
Declaration emit fixes for binding pattern in variable statements Handles #2023
Use commmandNames module
Wire navto tests
Supportt abbreviation
Merge pull request #1271 from Microsoft/taggedSigHelpAtEnd
Merge branch 'master' of https://github.com/Microsoft/TypeScript into esSymbols
Remove redundant type definitions
Simplify host logic in client
Update LKG
accept baseline changes
Merge branch 'v3nom-master'
wire package.json command for the server
Add type annotations
Add fomratting tests
Wire tests to use the new server
Wire the build for the server code
Initial checkin for server code
Add indexer on the Formatting options interface
Add support for stat and modified time on sys
Accepting new baselines
Small fix to recording of generated names
Addressing CR feedback
Merge remote-tracking branch 'upstream/master'
improved equality checks in AMD module sorting function
Baseline accept after merging
Merge branch 'es6Import' into es6ImportDts
Set the declarations of export assignment visible on demand through dts emit Emit those new declarations asynchronously since they are otherwise not visible
Add test cases for dts generation without export tag
Test cases for export import syntax
Test case for emitting partial part of import syntax
Enable test cases when import binding is used in export assignment directly or indirectly
Emit the import declaration in d.ts file only if it is visible
Merge branch 'master' of https://github.com/Microsoft/TypeScript into esSymbols
Merge branch 'master' into es6Import
Address feedback from @yuit
Declaration for default bindings of the import syntax
Merge pull request #2003 from Microsoft/letAsName
Declaration emit for NamedImport syntax
Accepting new baselines
Rewrite named imports to reference properties on module instance
Enable declaration emit for import * as ns from "mod" syntax
Enable declaration emit for import "mod" syntax
disallow let to be used as name in let\const in ES6
Merge pull request #1931 from Microsoft/spreadCall
moved AMD module sorting to emitter, updated test case
Classify newlines as whitespace in the classifier.
Merge pull request #1993 from Microsoft/incrementalCorruption
Add assert that clients do not try to call updateSourceFile multiple times on a source file.
Merge branch 'master' into TSServer
Fix issue with cancellation corrupting LS state.
Merge pull request #1992 from Microsoft/additionalParserChecks
Prevent index out of bounds exception.
Be more conservative about reusing parameters.
Remove code duplication in isModuleElement.
Add additional asserts, and make code more unified.
Add additional asserts.
Don't use dynamic type checks while incrementally parsing.
Replace endsWith() with isDefaultLib()
Accepting new baselines
Remove hostCache.getChangeRange
Remove getCurrentSourceFile and use syntaxTreeCache.getCurrentSourceFile instead
consolidate the use of normalizeSlashes in lookup helpers
Remove host cache uses in syntactic features
Check that default import references a default export symbol
Merge pull request #1937 from Microsoft/fourslashCleanup
Merge remote-tracking branch 'origin/master' into fourslashCleanup
Respond to code review comments
previous AMD ordering was not correct
Added AMD dependency reordering, so import order matches with provided names
Merge pull request #1981 from Microsoft/incrementalChecks.ts
Add additional incremental assert.
Rename a few members and clean up comments.
Check the text change range before and after we expand it.
Accepting new baselines
Checking of ES6 import declarations
Move assertions into the parsing layer.
Make sure positions of child elements are consistent.
Add additional aggressive checks during incremental parsing.
Formatting fixes
Accepting new baselines
AMD emit for ES6 import declarations
Accepting new baselines
CommonJS emit for ES6 import declarations
Update baselines
Accept baselines after rebase
Uncomment symbol properties in es6.d.ts
Disable symbol indexer
Navigation bar support for symbols
Declaration emit for symbol properties
Check that Symbol properties are proper, and support downlevel type checking
Refactor part of getPropertyNameForIndexedAccess into checkSymbolNameIsProperSymbolReference
Fix error message
Support indexing with known symbols
symbols in type guards
Make Symbol the apparent type of symbol
Add test for new Symbol()
Don't pass prop.name directly for error reporting
Fix error message wording
Fix expression checking for symbols
Change Symbol to symbol in error messages
Rename references in es6.d.ts from Symbol to symbol
Change isTypeOfKind calls to pass symbol TypeFlag when needed
Update tests to use new symbol keyword
Add symbol keyword
Accept correct baselines for symbol property tests
Add tests for symbol properties
Add tests for operators with symbol operand
Change certain hasDynamicName checks to check the SyntaxKind instead
Create global Symbol type
Change computed property error message to mention Symbols
Add named property symbol for known Symbol properties
Update hasDynamicName to take well known symbols into account
Move hasDynamicName to utilities.ts
Syntactically allow computed properties everywhere if the name looks like a built in Symbol
Change computed property error messages to be about symbols
Allow Symbol indexer in ES6
Preserve newlines appropriately between elements of an object literal or array literal when emitting.
Emit functions on a singline line if they were originally written on a single line.
Provide specialized functions for emitting the body of a function depending on if that body is an expression or a block.
Update test baseline.
Merge pull request #1974 from Microsoft/multiLineEmitting
Merge pull request #1973 from Microsoft/objectLiteralSemicolons
Preserve single line blocks when emitting.
Have better error recovery for whne a user uses semicolons instead of commas to delimit an object literal.
Merge branch 'master' into LSAPICleanup
Update LKG
Allow commas as a separator between object/interface type members.
Merge pull request #1968 from Microsoft/sourceFileTestInvariants
Check source file invariants after creating/updating them in our tests.
Correctly set position of import declaration nodes
Merge branch 'master' into es6importcheck
Always bind children of import clause
Merge pull request #1966 from Microsoft/shimAPIChanges
add comment
Shim API changes to enable existing installations of VS to use the latest master builds
Cleaning up a few things
Resolve missed merge conflict
Merge branch 'master' into taggedTemplates
Addressing CR feedback
Resolve ES6 imports in type checker
Support ES6 imports in binder
Process ES6 imports when creating program
Adding new import nodes to forEachChild
Merge pull request #1939 from Microsoft/diagnosticsOrganization
Remove "debugger;" calls.
Remove getEnumMemberValue, it is now subsumed into getConstantValue.
Extract common function.
Merge pull request #1951 from csnover/intl-hour12
Merge branch 'master' into diagnosticsOrganization
CR feedback.
Merge pull request #1952 from Microsoft/jasonra-disallowRenameForStandardTSLib
Put curly on the right line.
addressing CR comments
Simplify the API for emitting and reporting exit statuses to callers.
All options should be optional
Move code for emitting above helper functions.
Emit both javascript and declarations in the presence of errors (*unless* -noEmitOnError is specified).
Add newline before closing paren in multiline object literals.
Remove unnecessary diagnostics split on SourceFile.
Disallow rename for elements that are defined in the standard TypeScript library.
Remove what looks like copy/paste errors in the parser.
updated code style, added tests, fixed regex bug, merged to latest branch
Simplify code for getting diagnostics in the Program.
Fix language service handling of diagnostics.
Change the API for getting diagnostics so that all calls go through a Program instance.
Remove dependency from the typechecker to the compiler host.
Simplify the code for actually compiling within tsc.
Fix getFileContents so as not to always return the current file
Merge branch 'master' into fourslashCleanup
rename type
Track performance statistics in the ts module.
Emit computed properties in ES3/ES5 properly.
Use a diagnostics collection inside the program instance.
Update comment.
Remove 'isEmitBlocked' from the program API.
Simplify the createProgram API.
Simplify the API for emitting code from the Program instance.
Merge pull request #1767 from Microsoft/LessAggresiveCompletionList
Added templates, assignement and arrays + tests.
Do not publicly expose a way on a Program instance to get typecheckers with differing behavior.
Adding tests
Add new tests for shims
Stop erroring on computed properties for ES3/ES5 emit.
Hide the diagnostic producing methods from TypeChecker.
Merge branch 'master' into LessAggresiveCompletionList
Add builder support for variable declarations + test cases.
Support spread operator in call expressions
Rename semanticDiagnostics to bindDiagnotics.
Make more diagnostic features internal so they're not exposed in our DTS.
Introduce an object to store and manage diagnostics for different compiler components.
remove new line
Fix typo in type name
Remove the implementation of TypeScriptLS
Merge pull request #1923 from jbondc/master
Merge pull request #1904 from Microsoft/changeLSDefaultTarget
Add 'jake tsc' to only build the compiler for quick testing.
Parameter destructuring + tests
Added ES5 tests for computed properties.
Update fourslash tests to use the new adaptors
Move unit tests to use the new adaptors
Add new Adaptor layer on top of Harness Language Service
Merge pull request #1918 from Microsoft/filename
Merge pull request #1919 from Microsoft/moreInternal
Merge branch 'master' into filename
Rename the isBuilder property to something more meaningful.
Merge pull request #1894 from Microsoft/updateRwcAndTest262Runner
Fix spelling of 'Filename' to be 'FileName'.
Merge branch 'master' into updateRwcAndTest262Runner
Explicitly specify ES6 target in computed property test file names.
Update API baselines
Make more sourcefile data internal.
Update API sample tests.
Merge pull request #1914 from Microsoft/internalAPIs
Support for destructuring + test case.
Merge branch 'master' into updateRwcAndTest262Runner
Remove certain lazyily initialized fields from the public DTS.
Address code review
Merge pull request #1913 from Microsoft/internalDTS
Merge pull request #1700 from Microsoft/noMethodsOnSourceFile
Provide an experimental flag that allows us to emit declarations except for nodes marked with '@internal'.
Move the code to actually emit higher up in the function.
Add reference to base runner
Add missing definition to shims
Merge branch 'master' into updateRwcAndTest262Runner
Merge branch 'master' into LessAggresiveCompletionList
Added comments and some additional cases
updated tests
merge with master
Merge pull request #1906 from Microsoft/formattingTriggerInComment
[format on keystroke]added comment to the verification of preceding token
ensure that autoformat is triggered by token characters
Add a new scriptSnapshot and use the shim as a wrapper
Remove unused NonCachingDocumentRegistry
Change the default LS target to ES5 from ES6
Merge pull request #1735 from Microsoft/LSAPICleanup
Merge branch 'master' into LSAPICleanup
Merge branch 'master' into LessAggresiveCompletionList
Merge pull request #1899 from Microsoft/earlyErrors2
Merge branch 'master' into LSAPICleanup
Merge pull request #1855 from stanthomas/master
Rename function.
Fix usage of tabs instead of spaces.
Merge pull request #1876 from Microsoft/crashInIncompleteFunction
Baseline updates now that we emit in the presence of parse errors.
Emit even in the presence of parse errors.
Baseline updates now that we no longer have early errors.
Remove the concept of early errors from the compiler.
accept updated baseline reference following addition of test for const enum comment suppression
declare variable type inenum test
Merge branch 'master' into LSAPICleanup
Address pull request
Merge branch 'master' into updateRwcAndTest262Runner
Merge pull request #1627 from Microsoft/emitArrowFunctionES6
Merge branch 'master' into emitArrowFunctionES6
Merge pull request #1861 from Microsoft/deeperTypeInference
Merge branch 'master' into emitArrowFunctionES6
Merge pull request #1878 from Microsoft/updateLangSpec
Merge branch 'master' into emitArrowFunctionES6
Adding more tests
Updating array literals with spread elements
Rename the main node package filename to match the package name
Fixing ambient external module grammar
Updating grammar appendix
Language Specification update
Amend baselines.
Merge pull request #1575 from chrisbubernak/betterErrorsForTypesWithSameName
Ensure that all LS requests are to an exiting soruceFile, and if we fail throw an exception
Fix #1871 by ensuring the at we get the canonical filename before we check the extension
fix crash in getReturnTypeFromFunctionBody if function declaration is incomplete and does not have body
Remove tabs in json
Merge branch 'master' into emitArrowFunctionES6
Address code review
Update an error
Merge branch 'master' into LSAPICleanup
Update LKG.
Merge pull request #1873 from Microsoft/bumpTo1.5
Adding test
Addressing CR feedback
Address codereview
New Import declaration syntax makes the source file external module
Change the name of defaultBinding to name and make ImportClause as Declaration This helps binder to use it directly to bind the default binding
Do not create Name of the importSpecifier if it isnt identifier, to avoid creating missing symbols Missing symbols are defined when the declaration doesnt have name, so if we created node for missing identifier it would end up binding symbol with name (Missing)
Address code review
Tabs to spaces in package.json.
Bump version to 1.5.
Update path to test262 and rwc tests files in the runners
Supress const enum member value comment from emitted javascript in presence of --removeComments (revised)
Merge branch 'master' into LessAggresiveCompletionList
Accepting new baselines
Merge pull request #1792 from Microsoft/getScriptLexicalStructureWithbindingPatterns
Clean up the checking of position
Rename ImportStatement to ImportDeclaration
Remove flag and compare position
Merge branch 'master' into emitArrowFunctionES6
test case for TS generated comments const enum to show that they are supressed by removeComments flag
Merge pull request #1747 from Microsoft/elaborateErrorsOnce
Merge pull request #1854 from Microsoft/updateGitIgnore
Address CR feedback
More test cases for incorrect named modules specification
Supress const enum member value comment from emitted javascript in presence of --removeComments
Deeper type inference in context sensitive arguments
Tests for more combination of import specifier list
Some refactoring of how import specifiers are parsed as per code review feedback
Code review feedback
Correctly copy assumptions back into the relational cache
Rename bindings to namedBindings in ImportClause
Update test failing by previous commit
Update gitignore to ignore internal test folders
Merge pull request #1672 from DickvdBrink/investigate-unused-code
Merge remote-tracking branch 'origin/master' into elaborateErrorsOnce
Add API sample tests
Shorten library to lib in getDefaultLibFilePath for consistency
Change tab to space
Address code review
Update ServicesVersion
Address code review
Fix spacing due to tab
Add testcases
Address the issue that arrow function doesn't have arguments objects
Merge branch 'master' into LSAPICleanup
Add documentation to DocumentRegistry
Remove unused IScriptSnapshot.getLineStartPositions
make documentRegistry optional argument to createLanguageService
Expose underlying program from the LS
Allow the LS API to resolve referenced files
Merge pull request #1827 from Microsoft/addJasonsExampleForContextuallyTypingArgumentsInSuperCalls
Added Jason's example for contextually typing parameters.
remove unused file
Merge branch 'master' into LSAPICleanup
Merge branch 'master' into LSAPICleanup
Merge pull request #1816 from Microsoft/typeArgsInSuperCall
Merge pull request #1777 from Microsoft/emitCleanup
CR feedback .
Merge branch 'master' into emitCleanup
Fix method name.
Parsing for default binding import syntax
Parsing for NamedImports
Parsing for import * as ImportedBinding
Parse import ModuleSpecifier;
Types for the new es6 style import statement parsing
Removed superfluous type assertion.
Perform checking, document function.
Added more tests.
Rename existing import declaration to ImportEqualsDeclaration
Update tests baseline from merging with master
Merge pull request #1697 from Microsoft/docCommentUnion
Merge branch 'master' into emitArrowFunctionES6
Addressed Jason's pedantic correction over the wording of a comment.
Fixed fourslash test.
Updated comments and formatting as per review feedback.
Merge pull request #1803 from Microsoft/enumUnionTypeGuard
Merge pull request #1795 from Microsoft/objectLiteralWidening
Merge branch 'master' into objectLiteralWidening
Address code review; preserve users non-parenthesis
Contextually type parameters in super calls using type arguments on the base class.
Merge pull request #1815 from Microsoft/objectLiteralIndexerNoImplicitAny
Use transient symbols when computing the indexers for object literals
Addressing CR feedback
Respond to code review comments
Addressing CR feedback
Merge pull request #1779 from Microsoft/scopeOfUnionProperties
Addressing CR feedback
Merge pull request #1752 from Microsoft/computedProperties
Modifying test
Allow union types containing primtives as first argument in instanceof
Adding tests
Correct support for type guards with unions containing enums
Merge branch 'master' into taggedTemplates
more changes based on CR feedback
Accepting new baselines
Improved subtype compatibility for types of object literals
add binding elements from variable declaration into script lexical structure
Merge branch 'master' into computedProperties
Update baseline and fix white space
Update emitter due to merge with master
handle binding patterns correctly when getting script lexical structure
Update type checking for lexical binding due to merge with master
Merge pull request #1782 from Microsoft/findAllRefs
fixed typo in test name
add 'find all references' test
Merge pull request #1788 from Microsoft/emitConstEnumMembers
make sure that enum values are computed before the emit
Merge branch 'master' into computedProperties
Rename emitParenthesized to emitParenthesizedIf
Respond to CR
Address CR feedback
use nameTable - services layer storage of identifiers in the file
handle union properties in when doing getOccurences\findAllReferences
Emit comments in a lot more places.
Merge pull request #1774 from Microsoft/objectLiteralSubtyping
Adding more tests
Adding regression test
Add missing optional properties only when not inferentially typing
Simplify enum emit.
Merge pull request #1733 from Microsoft/bisect
Clean up after code review, white space etc.
White space fixes
resolve merge conflicts
moved all methods of SourceFile to the part exposed on the services layer
Accepting new baselines
Include missing optional properties in contextually typed object literal
Merge branch 'master' into LessAggresiveCompletionList
Builder implementation for properties and parameters inlcuding tests.
Make isNumericComputedName call checkComputedPropertyName
Use isTypeOfKind in computed property checks
Merge branch 'master' into computedProperties
Merge pull request #1765 from Microsoft/unionTypeOperations
Fix error message wording
Removing unused variable
Modifying and adding tests
Consistent handling of string-like and number-like values in expressions
Merge pull request #1760 from Microsoft/typeAliasDoesntMakeModuleInstantiated
Type alias declaration is type only declaration and doesnt make module instantiated Handles #1724
Merge branch 'master' into computedProperties
Fix source map scope name for computed properties
Merge branch 'master' into emitArrowFunctionES6
Missed a file
Merge branch 'master' into unionTypeOperations
Update the assert for valid line number when getting character position
Fixes the emit of comment when comment ends on last line This fixes regression from 5a7500ca5e62d7e6c7863cf42d156e8bcdc3017c with addition of eof token Handles #1714
Skip computed properties on declaration emit
Merge pull request #1746 from Microsoft/formattingTemplateLiterals
Move subroutine function to the bottom of checkIndexConstraints
Merge pull request #1692 from Microsoft/tsconfig
Check computed properties against indexers in classes
Adding src/compiler/tsconfig.json and src/services/tsconfig.json
test cases for builder in constructor
Merge pull request #1731 from Microsoft/fixUnicodeComparisonTest262
Builder in constructor aruguments + tests.
Simplified cache logic + better error message when JSON not supported
drop trailing trivia prior to rescanning it
Elaborate relational errors at least once when reporting them
Merge branch 'master' into LessAggresiveCompletionList
Delete old modules completion list test.
fixed smart indentation\formatting in template literals
Remove old commit
Support for builder in modules + tests
Address code review
fixing error in last checkin
revert serviceVersion change as the API is still compatible
update unit test contents
Ignore symbolic links when enumerating directories
Address CR feedback; refactor out tsc invocation
Merge branch 'master' into LSAPICleanup
Update servicesVersion
Disallow computed properties referencing type parameters from containing type
First try at getting logic in for showing the builder.
Clean up
Merge branch 'master' into fixUnicodeComparisonTest262
Fourslash support for the  builder property on completion lists.
Fix to make the completionlist work correctly when typing a new generic type + fourslash tests
Adding comments and a missing undefined check
Disallow super and fix this capturing for computed properties
Consolidate getSuperContainer
Disallow this in computed properties in classes
Adjust error numbers
Indexers in object literals include computed property types
Contextual typing for computed properties
Remove some unnecessary TODOs
Add tests for classes, methods, accessors with computed properties
Update baselines
Move computed property checks so that they will be checked in classes and interfaces
Add tests for object literals with computed properties
Add type checking for computed properties in object literals
Create symbols for computed properties
Switch checkObjectLiteral to iterate over element declarations
Enable computed properties
Merge pull request #1654 from csnover/fix-1653
Merge branch 'fixUnicodeComparisonTest262' of https://github.com/Microsoft/TypeScript into fixUnicodeComparisonTest262
Fix unicode comparision and counting error for test262
Automatic bisecting script
Fix unicode comparision and counting error for test262
Merge branch 'master' into tsconfig
Modifying logic to watch files at all times in -watch mode
Allow union types in indexing expressions.
Re-add debug assert & fix indent
Change tagged template emit to new style
Remove statement from binder
Remove binding of tagged templates
Remove properties from types.ts
Expose optional getNewLine for language service hosts
Watch for changes to tsconfig.json in -watch mode
Gracefully handel getChangeRange in Scriptsnapshot.fromString
Remove isOpen from souceFile and LanugageServiceHost interfaces
addressed CR feedback: renamed update to updateSourceFile
moved update function out of SourceFile
Merge pull request #1699 from Microsoft/instrumenterFix
Change sys to ts.sys in instrumenter
Fixes the duplicate doc comment display in case of union property Handles #1237
move getSyntacticDiagnostics out of SourceFile
move line map related function out of SourceFile
Fixing negated language version checks
Adding reference to core.ts in sys.ts
Accepting baselines for corrected error messages
Default to all files only when none are specified in tsconfig.json
Address code review
Merge pull request #1676 from Microsoft/disallowOptionalBindingParameters
'may not' -> 'cannot'
Adding missing @module to several fourslash tests
Hardening compiler to accept empty CompilerOptions object
Merge pull request #1604 from Microsoft/addTestsForRestAndDefault
Merge branch 'master' into addTestsForRestAndDefault
Merge pull request #1673 from Microsoft/unDestructuringParameterProperties
Support for tsconfig.json files in command-line compiler
Merge pull request #1675 from Microsoft/fixCurrentDirectoryForRwc
Merge branch 'master' into fixCurrentDirectoryForRwc
Address code review
Disallow optional destructured parameters in implementation signatures.
Inline the return of createCompilerHost
Remove getDefaultLibFilename from the LS host interface as its result is never honored by the LS.
Make logger methods optional on the language service host
Added tests.
Pass information of rwc's currentDirectory to the compiler host in the Harness
Disallow binding patterns in parameter properties.
Renamed tests.
Fixed incorrect tests.
Add getDefaultLibraryFilePath to retrive the default lib file path for node package consumers
Merge pull request #1648 from Microsoft/contextualTypeParenthesizedExpressions
Removed services/compiler/emitter.ts This one is replaced by src/compiler/emitter.ts
Removed services/compiler/optionsParser.ts Code is also defined here:  src\compiler\tsc.ts
Remove now unused diagnostics keys
compiler\tsc.ts isn't used DiagnosticCode.Specify_module_code_generation_0_or_1 doesn't even exist and it doesn't understand es6
Remove src\services\compiler\diagnostics.ts It contains the Logger interface but src\services\services.ts is the one which is used (also has more methods)
Merge pull request #1670 from Microsoft/fixTypeGuardWithInstanceOf
Merge branch 'master' into fixTypeGuardWithInstanceOf
Fix narrow type for instanceOf and add testcases
Merge pull request #1666 from Microsoft/noFormattingOnFirstLine
Merge pull request #1661 from DickvdBrink/fix-perftsc
do not apply format on enter for the first line
Merge pull request #1562 from csnover/fix-1133
Add test case for completionlist when adding properties to a class.
Minor changes.
Fix jake perftsc task Added ts module prefix andd depend on types.ts (for ts.Map<string>)
Updated parser lookahead for modifiers to anticipate object literals.
Added tests.
Merge pull request #1660 from Microsoft/saveNumericTokensInScanner
Merge pull request #1658 from Microsoft/emptyParamList
save token when scanning binary\octal literals
when formatting lists check if end list token still belongs to the parent node
Merge pull request #1657 from Microsoft/unionTypeGuards
Merge pull request #1647 from Microsoft/badPropNamesInConstEnums
remove unnecessary call sourceFile.getSourceFile()
Update LKG
Manual port of fixe for #1593 from release-1.4
Merge pull request #1650 from DickvdBrink/unused-stuff
Improved handing of union types in type guards
Remove unused timer.ts file
addressed CR feedback
disallow incorrect literal property names in indexed access for const enums
Merge pull request #1642 from Microsoft/addCmdLineParser
more cr feedback: rename undefined flags param to None
Merge pull request #1638 from lptr/noimplicitany-description-fix
Address code review comments from @JsonFreeman
Merge branch 'master' of https://github.com/Microsoft/TypeScript
Added commandLineParser.ts to the generated node module, and added the type information for commandLineParser.ts to typescript_internal.d.ts.
Show --noImplicitAny as an option to throw errors, not warnings
Removed probably-unnecessary statement from test.
Merge pull request #1637 from Microsoft/recoverFromForcePush2
Merge branch 'master' of https://github.com/Microsoft/TypeScript
Merge pull request #1635 from Microsoft/recoverFromForcePush
Add testcases
Contextually type parenthesized expressions.
This fixes #1505 by not showing completionlist when defining a property.
Clarified comment in test.
Emit var in front of statement with tagged template
infrastructure for builder item in completion list
Merge pull request #1625 from Microsoft/forEachPerf
Adding comment
Renaming helpers and cleaning up logic
Fixed portion of test.
Optimizing forEachChild function to not create closures
Added tests for contextual typing on parenthesized expressions, added case for tagged templates.
Merge pull request #1621 from Microsoft/narrowingOfAny
Type guard narrows type any in a primitive type check
Merge pull request #1586 from Microsoft/copymap
changed logic based on CR feedback to not get fully qualified for typeparemeters even if typeformatflag is present
Merge pull request #1571 from Arnavion/1570-template-strings
Merge pull request #1547 from Microsoft/moveEmitHost
Merge pull request #1614 from Microsoft/type_parameters_visibility
Merge pull request #1529 from Microsoft/uninstantiatedModulesBeforeClasses
Moved EmitHost to utilities.ts
Emit this binding natively in es6
Emit Arrow function natively in ES6
Add default target in compiler option of project runner
consider type parameters always visible
Update tests and baselines.
Don't emit an empty template head literal if there's a template span with a non-empty literal.
Merge pull request #1581 from Arnavion/1577-templatestring-subtraction
Update tests and baselines.
Give MinusToken the same precedence as PlusToken for template expressions.
Merge pull request #1606 from Microsoft/harnessDtsEmit
Remove unnecessary it block in generated .d.ts compilation in harness
Use getSourceFile instead of getSourceFiles in compileDeclarationFiles
Merge branch 'release-1.4'
Add tests covering emitting rest parameters natively in ES6
Add tests covering emitting default parameters natively in ES6
Move code to separate functions
added parameter names to 'copymap' call site
Emit parens when an argument is a comma operator
made some changes based cr feedback
Fix tagged templates that consist of a single part
Emit tagged templates when targeting ES3 or 5
Remove tagged templates error when targeting ES3 or 5
extract map copying logic to a separate function
rewrote the fix to use a new type format flag and fixed the baselines I broke
Merge pull request #1583 from DickvdBrink/npmignore
Also add travis.yml to npmignore file
Add scripts to .npmignore
removed errant text
remove commented out code
updating baseines
added baselines for new test case
fixed checker and added a test case
Merge pull request #1535 from Microsoft/mergeMarkers1
CR feedback.
Merge branch 'master' into mergeMarkers1
Merge pull request #1568 from Microsoft/enableIncremental
Enable incremental parsing by default.
Put specialized signatures at the top of the list of call candidates
Removed newline.
Moved EmitHost to types.ts so that utilities can be edited as a standalone file through dependency resolution.
Merge pull request #1533 from Microsoft/fixCompareSignatures
Undid comment change that made things more misleading.
Update conflict marker formatting test.  We now no longer format the second branch of hte merge.
Remove unused constants.
Classify the '=' sign in variable/parameter/property as if it was an operator.
Provide better error recovery when we encounter merge markers in the source.
Add test demonstrating the problem with conflict markers.
Fixed issue where the second type's signature having type parameters would not cause an error.
Added tests/baselines.
Merge pull request #1512 from Microsoft/layering
Merge branch 'master' into layering
Merge pull request #1528 from Microsoft/goToDefOnUnionMethod
Merge branch 'master' into layering
Merge pull request #1501 from Arnavion/no-emit
Remove unnecessary capture of the diagnostics type checker.
Added test, modified test, updated baselines.
Only error on non-ambient instantiated modules preceding clodules.
Merge pull request #1443 from Microsoft/improvedTypeInference
Added test from original issue.
Merge branch 'master' into layering
Added test for goToDef on union types.
Use 'definitionCountIs' in union property tests.
Rename file.
Added test using code from original issue.
Fixed 'verifyDefinitionsName' to check the container name properly.
Added goToDef count verification in fourslash facilities.
Normalize a few fourslash line endings.
Fixed messed-up formatting from moving around code.
Made 'location' non-optional in 'getSymbolKind'.
Moved helpers to bottom of 'getDefinitionAtPosition'.
Merge pull request #1473 from Microsoft/parsePrimaryExpression
Merge pull request #1515 from Microsoft/moduleSharesNameWithImportInside
Add module emit test
Merge pull request #1434 from Microsoft/sourceFileUpdate
Merge branch 'master' into sourceFileUpdate
Merge pull request #1463 from Microsoft/spreadAndRest
Disable incremental by default before merging into master.
Merge branch 'master' into sourceFileUpdate
CR feedback.
Accepting new baselines
Merge branch 'master' into spreadAndRest
Merge pull request #1521 from Microsoft/diagnostics
Merge branch 'master' into layering
Merge branch 'diagnostics' into sourceFileUpdate
Merge pull request #1522 from Microsoft/LKG2
Update LKG
Update LKG.
Merge branch 'master' into layering
Remove 'grammarDiagnostics' from SourceFile.
Update LKG
Merge branch 'master' into sourceFileUpdate
Merge pull request #1423 from Microsoft/refactorGrammarCheck
Don't allow -noEmit with -declaration
Don't allow -noEmit with -out or -outDir
Don't emit outputs when -noEmit is specified.
Add -noEmit compiler flag.
Remove last vestiges of the grammar checker from the parser now that it has been entirely moved to the TypeChecker.
Address code review
Address code review
COMPLETE migrating grammar checking; No more errors
Cleaning up migrating grammar checking
Provide a stronger type for the parent of a variable declaration.
Rename method to be clearer.
Change TextChangeRange to be a record type as well.
Change 'TextSpan' to be a simple record type with free floating functions.
Merge branch 'master' into spreadAndRest
Merge branch 'master' into refactorGrammarCheck
Complete grammar checking migration; there are still errors which will be fixed once pull master into the branch
Use constant in another place.
Add explanatory comments.
Merge pull request #1495 from Microsoft/crashWhileReportingError
Merge pull request #1517 from Arnavion/exec-call-fail
Rename method to be clearer, and add comments to explain the semantics.
Fix broken enum value alignment.
CR feedback.
CR feedback.
CR feedback.
Merge pull request #1518 from Microsoft/sortCompilerBaselineDiagnostics
Sort diagnostics in our baseline output.
Adding comment
Remove obsolete comment.
Fail the surrounding Jake task if exec'd tool has non-zero exit code.
Don't expose EmitHost.  it is only used by a non-exposed function.
Fix issue #1503 with modules and imports sharing a name
Clean things up so the services layer can easily emit without having to contort compiler hosts.
Remove the dependency that TypeChecker and Emitter have on Program.
Make the emitter no longer depend on the Program.
Move grammar checking: interfaceDeclaration-remove it from checkModifiers in parser; there are still errors from incomplete grammar migration
Move grammar checking: propertyDeclaration, propertySignature; there are still errors from incomplete grammar migration
Move grammar checking: moduleDeclaration; there are still errors from incomplete grammar migration
Rename typechecker parameter related to whether or not we produce diagnostics.
Layer the compiler so that every layer only depends on hte layers below it.
Move grammar checking: methodDeclaration; there are still erros from incomplete grammar migration
Add internal definitions to a diffrent .d.ts files
Move grammar checking: setAccessor, getAccessor; there are still erros from incomplete grammar migration
Merge pull request #1497 from Microsoft/internalDefinitions
Merge branch 'master' into sourceFileUpdate
Adding incremental test.
Merge branch 'release-1.4' into parsePrimaryExpression
Change the order of switch statements instead of converting to if-else
Merge pull request #1500 from Arnavion/exec-process-stderr-number
Add helper method to reduce so many double negatives in the code.
Merge branch 'funcDeclsInBlocks' into sourceFileUpdate
Don't check container invariants.  They don't hold true in incremental scenarios.
Merge branch 'master' into sourceFileUpdate
Reduce unnecessary arrow function allocations.
Don't store variable statement flags on its variable declaration children.
Fixed "TypeError: invalid data" when executables run by exec exited with non-zero code.
Merge pull request #1466 from Microsoft/linked_imports
harden 'get import declaration' logic
Merge pull request #1492 from Microsoft/contextualTemplateTyping
Move grammar checking: functionDeclaration; there are still errors from incomplet grammar migration
Update LKG
Merge branch 'master' into funcDeclsInBlocks
Merge pull request #1498 from Microsoft/bindingElementContxt
Merge branch 'bindingElementContxt' into funcDeclsInBlocks
Do not pass context flags downward while parsing binding elements.
Add internal definitions to a diffrent .d.ts files
Merge branch 'master' into funcDeclsInBlocks
Change check cadence.
Move grammar checking: forStatement
Move grammar checking: forInStatement; there are still errors from incomplete migration
Merge pull request #1496 from Microsoft/bindingContainers
Move grammar checking: variableDeclaration, variableStatements; there are still erros from incomplete grammar migration
Do not use the file name in errors unless it exists
Merge branch 'refactorGrammarCheck' of https://github.com/Microsoft/TypeScript into refactorGrammarCheck
Address code review
Address code review
Changed tests to error when actual contextual typing is broken.
Fixed bug where function expressions were not getting checked in template expressions.
Address code review
Move grammar checking: constructorDeclaration; there are still errors from incomplete grammar migration
Added tests for erroneous function expressions in both tagged/untagged template expressions.
Split contextual typing test for substitution expressions into two tests.
Move grammar checking: enumDeclaration; there are still erros from incomplete grammar migration
Addressing CR feedback + Run fourslash tests with ES5 emit
Move grammar checking: breakStatement, continueStatement; there are still errors from incomplete grammar migration
Separated fourslash test to two files.
Move grammar checking: declare keyword in checkGrammarModifier; there are still erros from incomplete grammar migration
Address code review
Simplify how we set container.nextContainer now that we don't double recurse.
Address code review
Removed unnecessary case; substitution expressions only occur in TemplateSpans.
Fixed contextual typing for tagged template expressions.
Merge pull request #1491 from Microsoft/binderDoubleRecurse
Simplify the binder so it does not need to double recurse down constructor parameter nodes.
Move grammar checking: yieldExpression; there are still error from incomplete grammar migration.
Move grammar checking: wihtStatement; there are still errors from incomplete grammar migration
Movev grammar checking: typeReference; there are still errors from incomplet grammar migration
Merge branch 'master' into sourceFileUpdate
Merge pull request #1482 from Microsoft/typingHighFidelity
Up timeout to 20 seconds.
Merge branch 'master' into typingHighFidelity
Update timeout to 6 seconds.
Formatting.
Merge pull request #1485 from Microsoft/noDebuggerInTests
Move grammar check: throwStatement; there are still errors from incomplete grammar migration
Check tree invariants during fourslash tests.
Move grammar checking: taggedTemplateExpression
Move grammar checking: switchStatement; there are still errors from incomplete grammar migration
Move grammar checking: shorthandPropertyAssignment; Add more parser test; there are still errors from incomplete migration
Move grammar checking: returnStatement; there are still error from incomplet grammar migration
Enable incremental parsing by default.
Add incremental parsing LS test.
Merge branch 'noDebuggerInTests' into sourceFileUpdate
Remove calls to "debugger;" in our fourslash tests.
Merge branch 'typingHighFidelity' into sourceFileUpdate
Ensure the 'hasParseErrors' bit is the same between trees.
Always run all fourslash tests in high fidelity typing mode.
Move grammar checking: prefixUnaryExpression; There are still error from incomplete migration
Check post edit invariants after every edit.
Don't convert the tree to JSON before checking it.  Just check it directly.
Move grammar checking: postfixUnaryExpression
Move test helpers into the harness Utils module.
Accepting new baselines.
Support -target ES6 emit for destructuring, spread, and rest.
Move grammar checking: parameter; there are still errors from incomplete grammar migration
Move garmmar checking: numericLiteral; there are still error from incomplete migration
Move grammar checking: objectLiteralExpression; there are still error from incomplete grammar migration
Switch parsePrimaryExpression to if-else style
Merge pull request #1471 from Microsoft/preserveConstEnumsInServices
Move grammar checking: propertyAssignment; there are still errors from incomplete grammar migration
Move grammar checking: labelStatement
Preserve const enums in typeScriptServices.js
Move grammar check: InterfaceDeclaration, HeritageClause
Merge pull request #1470 from Microsoft/flagAggregation
Make utility mehtod names clearer.
Merge branch 'funcDeclsInBlocks' into sourceFileUpdate
Address code review; check class heritage clause into its own function
Move grammar checking: functionExpression
Merge branch 'master' into sourceFileUpdate
Merge branch 'master' into funcDeclsInBlocks
Merge pull request #1469 from Microsoft/262baselines
Merge pull request #1468 from Microsoft/LKG
Adding new tests
Merge branch 'master' into spreadAndRest
Simplify 262 baselines.
Merge branch 'master' into funcDeclsInBlocks
Update LKG.
Merge branch 'master' into sourceFileUpdate
Merge branch 'master' into funcDeclsInBlocks
Move grammar checking: externalModuleReferences; there are still errors from incomplete grammar checking migration
Merge pull request #1467 from Microsoft/postEditInvariants
Merge pull request #1465 from Microsoft/labeledStatement
Merge branch 'master' into postEditInvariants
Avoid lookahead when parsing a statement.
Move grammar checking: exportAssignment; there are still errors from incomplete grammar migration
In Fourslash: Compare ASTs for files produced incrementally versus files produced with a full parse.
Move type checking: elementAccessExpression; there are still errors from not moving other grammar checking into type checker
Rename some locals.
Move grammar check: deleteExpression
Merge disallow computed property grammar error; there are still errors from generator and the fact that other grammar check haven't moved yet
Don't emit error flags in the 262 baselines unless the node actually had an error.
Resurrect the post edit invariants checking for fourslash.
defer decision whether import used on the right side of import declaration should be considered referenced
Merge branch 'master' into sourceFileUpdate
Merge pull request #1464 from Microsoft/void0
Properly emit 'void 0' when emitting destructuring assignments.
Adding tests and accepting new baselines
Implied type of binding pattern with rest element is always an array type
Don't quote the word 'generators' in error messages
Disable computed properties in TypeScript 1.4
Address code review
Merge pull request #1460 from Arnavion/compilefile-fail-task-on-error
do not indent leading comments that attached to tokens with errors
added test for inherited indentation
conditionals are now introduce indentation scope
Actually fail the surrounding jake task on errors in compileFile()
Correct type for rest element in destructuring declaration
Parse function and variable declarations uniformly, whether they're at teh top level, or inside a method.
Change the error-bit to be a node-flag and not a parser context flag.
Don't consume nodes during calls to isListElement.
Update the source file positions as well.
Properly adjust nodes while walking down the tree.
Provide a way for tests to try out incremental parsing.
Move functions from 'types.ts' to 'utilities.ts'.
Merge branch 'master' into sourceFileUpdate
Add assert.
Add the syntax cursor.  We will use this to retrieve nodes from the previous source tree.
Merge pull request #1461 from Microsoft/fixProcessDiagMessagesProbWith1.4Merge
Move grammar checking : computedPropertyName; there is still error from grammar check on ambient context and generator
Merge branch 'release-1.4' into fixProcessDiagMessagesProbWith1.4Merge
Merge pull request #1453 from Microsoft/fixSysDependencyForDiagnostics
Just temporarily removing the tests until we can get back into a good state.
Add explanatory comments to explain how node moving works.
Don't incrementally parse when teh old tree had no source module elements.
Rest element support in array destructuring declarations
Nodes are not resuable if the parser has a outstanding, unattached, parse error.
Merge branch 'master' into sourceFileUpdate
remove trailing comma
Merge pull request #1456 from Microsoft/mergeMarkers
Merge pull request #1458 from Microsoft/test262ErrorBit
Merge pull request #1457 from Microsoft/extra_comma
For 262 tests, emit a bit in the baseline stating if the node had an error or not.
remove trailing comma
Rest element support in array literal destructuring assignment
CR feedback.
Merge branch 'release-1.4'
Merge pull request #1455 from Microsoft/disableComputedProperty
Merge branch 'release-1.4' into disableComputedProperty
Don't quote the word 'generators' in error messages
respond to code review commments
Respond to code review comments
Remove compiletionSettings handeling from shims
Merge pull request #1431 from Microsoft/compilationSettingsCleanup
Adding classification test.
Make the compiler resilient to encountering merge conflict markers in a source code file.
Disable computed properties in TypeScript 1.4
Re-add baselines.
Remove baselines.
Move grammar checking: classDeclaration; there are still errors from checking declare keyword and grammar checking of moduleDeclaration
Merge branch 'release-1.4' into compilationSettingsCleanup
Check and emit of spread elements in array literals
Merge pull request #1454 from Microsoft/mergeFor1.4ToMaster
Fixed old sys dependency, as sys is now ts.sys.
Move checkGrammarCatchClause into checkTryStatement
Address code review
Merge branch 'funcDeclsInBlocks' into sourceFileUpdate
Merge branch 'master' into sourceFileUpdate
Merge branch 'master' into funcDeclsInBlocks
Move grammar checking: catchCaluse
Merge branch 'release-1.4' into mergeFor1.4ToMaster
Remove TryBlock and FinallyBlock.
Move grammar checking: bindingElement
Fixed 'use strict' check.
Responded to CR feedback.
Moved createCompilerHost into parser.ts
Move grammar checking: binaryExpression
Merge branch 'refactorGrammarCheck' of https://github.com/Microsoft/TypeScript into refactorGrammarCheck
Address code review: move checkGrammarAnySignature into checkSignatureDeclaration
Fixed up baselines.
Add tests for public declarations
Moved non-exposed functions to utilities; fix up emitted .d.ts in Jakefile.
Explicit default target for fourslash tests in the harness.
Remove unused parameter to getCompletionsAtPosition
Make getLocalizedDiagnosticMessages and getCancellationToken optional
move OutliningSpan definitions to services to ensure it is visible in definitions file
Removed tokenSpan.ts.
move formatting.ts and smartIndernter.ts into formatting folder to match thier namespace
remove unused file
Move Map to types to ensure it is visible in definition files
use ts.System for tests
move text defintions to services.ts
Put 'sys' into the 'ts' module.
Use __filename for 'getExecutingFilePath'.
Allow typescript to be importable in node.
Address code review: move checkGrammarAnySignature into checkSignatureDeclaration
Merge branch 'refactorGrammarCheck' of https://github.com/Microsoft/TypeScript into refactorGrammarCheck
Move grammar checking: callExpression, newExpression
Move grammar checking: callExpression, newExpression
Address code review
Unify accessor declaration parsing.
Merge pull request #1437 from Microsoft/formatting_conditionals
Add additional incremental tests.
Support modifiers on object literal methods and accessors, and question tokens on object literal methods.
Merge pull request #1441 from Microsoft/dont_indent_comments_on_errors
added test for inherited indentation
Merge branch 'refactorGrammarCheck' of https://github.com/Microsoft/TypeScript into refactorGrammarCheck
Move grammar checking: Arrow function
Move grammar checking: Arrow function
Support modifiers on index signatures in an object type.
Address code review
More incremental parser tests.
Incremental parser tests should verify the same set of diagnostics are produced.
Understand and handle modifiers on function declarations and variable statements within blocks.
Merge pull request #1418 from Microsoft/suppressNoImplicitAnyErrors
Merge branch 'release-1.4' into suppressNoImplicitAnyErrors
Move grammar checking: callSignature, constructorType, ConstructSignature, FunctionType, IndexSignature
Add isEarly flag into error from grammar checking
Merge pull request #1417 from Microsoft/exposeServices
Fixed 'use strict' check.
Rename method.
Respond to code review commments
Initial stubs for the incremental parser logic.
respond to code review commments
Responded to CR feedback.
Moved createCompilerHost into parser.ts
Sweep and mark nodes before going and performing incremental parsing.
Fixed up baselines.
Add tests for public declarations
Merge remote-tracking branch 'origin/release-1.4' into exposeServices2
Moved non-exposed functions to utilities; fix up emitted .d.ts in Jakefile.
When updating the text for a source file, extrend the changed range.
Merge pull request #1341 from Microsoft/escapingTheTemplateOfDoom
Make initial inferences from parameterless function expressions (#1186)
Addres code review
add missing property to harnessLS
addressed CR feedback: rename getApiVersion to getServicesVersion
removed dummy parameter from getApiVersion method
added getApiVersion method to TypeScriptServicesFactory
do not indent leading comments that attached to tokens with errors
Explicit default target for fourslash tests in the harness.
Remove unused parameter to getCompletionsAtPosition
Make getLocalizedDiagnosticMessages and getCancellationToken optional
Merge pull request #1440 from Microsoft/add_missing_property
add missing property to harnessLS
move OutliningSpan definitions to services to ensure it is visible in definitions file
Removed tokenSpan.ts.
Addressing CR feedback
move formatting.ts and smartIndernter.ts into formatting folder to match thier namespace
remove unused file
Move Map to types to ensure it is visible in definition files
Adding test case
use ts.System for tests
Type guards do no affect values of type any
move text defintions to services.ts
Put 'sys' into the 'ts' module.
Use __filename for 'getExecutingFilePath'.
Allow typescript to be importable in node.
Move textSpan and textChangeRange impls to the compiler layer.
Merge pull request #1395 from Microsoft/dev_mode
Merge pull request #1433 from Microsoft/typeGuardWithAny
Addressing CR feedback
conditionals are now introduce indentation scope
Move TextSpan into the compiler layer.
Don't call into the incremental parser for now.
Merge branch 'master' into sourceFileUpdate
Merge pull request #1432 from Microsoft/isOpenVersion2
Respond to code review comments
Move grammar checking: tuple type
Respond to code review comments
Update comment.
Initial entrypoint in SourceFile for the LS to call to peform incremental parsing.
Address code review for moving grammar check of typeParameter
Adding test case
Type guards do no affect values of type any
Only set parents for parse trees in the LS for the syntactic trees.
Remove compiletionSettings handeling from shims
Parsing of spread element expressions
Merge pull request #1422 from Microsoft/incrementalTests
Use chai asserts.
Add incremental test.
Add incremental test.
Add incremental test.
Address code review for moving grammar check of typeParameter
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Merge branch 'refactorGrammarCheck' of https://github.com/Microsoft/TypeScript into refactorGrammarCheck
Move grammar checking: type parameters
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Add incremental test.
Move grammar checking: type parameters
Add incremental test.
Remove unnecessary switch case.
Initial test harness for incremental parser tests.
Move grammar checking: type parameters
Merge pull request #1420 from Microsoft/isOpenAndParents
Remove 'isOpen' and 'version' from teh compiler's SourceFile type.
Commandline definitions use a property "paramType" to specify the name of thier type e.g. File, Version, etc.., that was changed in the defintion to paramName, without changing the use site, changing it back to paramType.
Add new compiler flag to suppress noImplicitAny errors for object access
Merge pull request #1346 from Microsoft/destructuring
Merge branch 'master' into destructuring
inherit delta from nodes on the same line
Merge pull request #1416 from Microsoft/inherited_deltas
inherit delta from nodes on the same line
Merge pull request #1413 from Microsoft/forEachChild
Fix invariant issues.
Merge pull request #1412 from Microsoft/parserOrganization
Remove unused type.
Put the actual parsing logic at the top of createSourceFile instead of the bottom.
Merge pull request #1408 from Microsoft/methods
Merge pull request #1409 from Microsoft/test262invariants3
Merge pull request #1405 from Microsoft/formatting_space_before_comma
Prevent json recursion overflow in 262 tests.
Merge pull request #1400 from Microsoft/addMethodToBoolean
Fix some parts of for-each invariant checking.
Update version to 1.4
Merge pull request #1406 from Microsoft/fixSpeculativeParse
Also split out .PropertyDeclaration and .PropertySignature from .Property.
Merge branch 'master' into fixSpeculativeParse
Merge pull request #1407 from Microsoft/commaInsteadOfSemicolon
Remove the 'Method' syntaxkind and introduce MethodSignature and MethodDeclaration instead.
Merge branch 'fixSpeculativeParse' of https://github.com/Microsoft/TypeScript into fixSpeculativeParse
Update and add test cases
Merge branch 'master' into formatting_space_before_comma
merge
Update and add test cases
Better error recovery when encountering an errant comma in a semicolon delimited list.
Merge pull request #1404 from Microsoft/test262Invariants
Fix speculative parsing by terminating the list when encounting illegal token
Merge branch 'master' into destructuring Move downlevel vs. ES6 emit branching into individual emit functions
fix formatting to add space after comma between arguments when arguments starts with open paren
Add tree invariant checking to the test262 runner.
Merge pull request #1403 from Microsoft/test262
Improve test 262 baselines.
Add new method on interface Boolean to ensure it is not assignable from other types
Merge pull request #1399 from Microsoft/checkSymbolExists
addressed CR feedback: rename getApiVersion to getServicesVersion
removed dummy parameter from getApiVersion method
Merge pull request #1391 from DickvdBrink/cleanup
added getApiVersion method to TypeScriptServicesFactory
add error\trace message that should be exposed by the host
Addressing a bit more CR feedback
Addressing CR feedback: New SyntaxKind.BindingElement Introduced new VariableLikeDeclaration and BindingElement types Cleaned up VariableDeclaration, ParameterDeclaration, PropertyDeclaration types Node kind of binding element is always SyntaxKind.BindingElement Changed CheckVariableDeclaration to CheckVariableLikeDeclaration Reorganized CheckVariableLikeDeclaration
Removed property access
Merge pull request #1389 from Microsoft/colorize_type_aliases
Merge pull request #1388 from Microsoft/indexer_name
Merge pull request #1381 from jbondc/master
Merge pull request #1390 from Microsoft/invertedIncremental
Merge branch 'master' into invertedIncremental
Check if the symbol exists before checking its visibility.
Move code responsible for determining node resuability (in incremental scenarios) to a single location.
Merge pull request #1385 from Microsoft/simplerIncremental
add classification for type aliases
fetch actual parameter name of indexer when printing literal type
Move over all changes from my private branch.
Remove setting of parents in the factory.
Remove restriction that you cannot reuse nodes/tokens during incremental parsing while doing speculatively operations.
Merge pull request #1383 from Microsoft/fidelity1
Rename _skippedTokens to skippedTokens.
Simplify parser API.
Move syntax cursor into its own file.
Merge pull request #1378 from Microsoft/useCallbacksForSpeculativeParsing
Missing reference for getModuleInstanceState()
Use callbacks for speculative parsing.
Merge pull request #1372 from Microsoft/forEach
Merge pull request #1374 from Microsoft/let
Accepting new baselines
Addressing CR feedback
"let" should only be considered a keyword in strict mode, or when it starts an actual construct Handles #1301
Fix the merge conflicts
Merge pull request #1369 from Microsoft/parserErrors2
Merge pull request #1371 from Microsoft/nullref_with_hotswapping
Don't return the last falsy value when forEach'ing over an array.
Merge pull request #1347 from Microsoft/test262RunnerUpdates
Don't return the last falsy element in forEachChild.
Merge pull request #1362 from Microsoft/contextSensitiveExpressions
Merge pull request #1364 from Microsoft/coverage
Some renaming and added comments as per feedback
Merge pull request #1363 from Microsoft/noMoreExpandoBar
Merge branch 'master' into parserErrors2
Merge pull request #1367 from Microsoft/tokenRanges
Merge branch 'master' into parserErrors2
Merge pull request #1368 from Microsoft/parseErrors
CR feedback.
drop redundant initialization code
Merge branch 'master' into test262RunnerUpdates
Merge pull request #1358 from Arnavion/fix-missing-return-types
Merge pull request #1366 from jbondc/master
Code Review
Merge branch 'master' into test262RunnerUpdates
Provide utility function to report back if a node contained a parse error anywhere inside of it.
Track if the parser encountered any errors as a bit in the next node that is produced.
Fix indentation.
Inline method.
Add invariant assert in the parser.
Fix comment.
Remove function expression allocation when speculatively parsing or looking ahead.
Improve the flexibility of speculative parsing.
Simplify scanner by removing need for a 'onComment' callback.
Fix so 'jake diff' works with PowerShell.
more baselines.  revert unintentional change to harness.ts.
Add more coverage tests.
Add grammar walker test coverage cases.
Merge pull request #1349 from Microsoft/propertyAssignments
Merge branch 'master' into propertyAssignments
Improve naming of checker methods.
Merge branch 'master' into destructuring
Improve names for functions in the checker.
More CR feedback.
CR feedback.
Added tests.
parenetName -> parentName
Normalized line endings for test.
Fixed navigation expansion for missing identifier nodes.
Fix the getSymbolInfo and getTypeOfNode entry points to resolve the context sensitive information before resolving the actual node
Fixes the quickInfo when hovering over var inside the context sensitive expression Handles #1165
Merge pull request #889 from Microsoft/SymbolDisplayParkKindTests
Merge pull request #1357 from Arnavion/remove-es6-bom
Add test cases for external module reference of the alias
Fix missing return types.
Remove BOM from es6.d.ts
Merge branch 'master' into test262RunnerUpdates
Print out methods in the types of object literals as if they were methods, not function typed properties.
Emit FunctionPropertyAssignments in their native form when emitting in ES6 mode.
Remove baseline-hacks from the typewriter.
Don't rewrite function property assignments in the AST.
Remove the 'FunctionBlock' ast kind.
Merge property assignment parsing code.
Update the name of 'PropertyAssignment' to 'LonghandPropertyAssignment'.
Merge pull request #1333 from Microsoft/getOccurancesAssert
Fix typo in comment
Handel unsuported modiefiers in getModifierOccurrences
Merge branch 'master' into getOccurancesAssert
Simplify arrow function expression parsing.
Merge branch 'master' into test262RunnerUpdates
Update test262 runner to serialize flags
Merge pull request #1345 from Microsoft/eofComments
Adding rudimentary tests
Add a dedicated 'EndOfFile' token to a SourceFile.
Merge pull request #1343 from Microsoft/parserWork
Merge pull request #1269 from Microsoft/refactorEmitter
Fixing fourslash test
Removing fourslash test that no longer applies
Support exported destructuring variable declarations Support .d.ts generation for functions with destructuring parameters
Merge branch 'master' into refactorEmitter
Merge pull request #1322 from Microsoft/exposeServices
Merge branch 'master' into refactorEmitter
Merge pull request #1344 from Microsoft/sig_help_crash
Added comment.
fix crash in signature help
Merge branch 'master' into refactorEmitter
Extract reference comments out into their own diagnostics array.
Merge branch 'refactorEmitter' of https://github.com/Microsoft/TypeScript into refactorEmitter
Address codereview
Address codereview
Merge pull request #1342 from Microsoft/externalModuleFix
Find imported external modules that start with double underscores.
Add failing test.
Moved position increment in scanner; removed confusing comment.
Add explanatory comment.
Added multiline tests.
Fixed issue where old-Mac newlines don't work in harness.
Merge pull request #1332 from Microsoft/getEmitOutputCleanup
Emit for destructuring parameter declarations
Baseline changes from updating rest parameter emit to use new temporary names
Emit for destructuring assignments
Merge branch 'master' into SymbolDisplayParkKindTests
baseline change conflict not caught during github merge
Merge pull request #1056 from Microsoft/unionTypeConformance
Merge pull request #1334 from Microsoft/tokens
Reduce arrow function allocations in the parser.
Handel modifier const in getOccurrances
Remove arrow allocations from the parser in a few places.
Make 'CatchClause' have-a block, instead of be-a block.
Ensure getEmitOutput only check the file requested
Simplify parsing code.
Simplify code.
Use helper function.
Simplifying the signature parsing code.
Put semantically relevant tokens in the tree.
Traverse into all nodes when walking the tree.
Put semantically relevant tokens in the tree.
Merge pull request #1326 from Microsoft/typeNodeBrands
Provide greater type safety in the ast system.
Merge pull request #1325 from Microsoft/crash_getCompletionEntryDetails
addressed CR feedback
Merge pull request #1316 from Microsoft/lessDirectCallsToError
fix crash in getCompletionEntryDetails
Merge branch 'master' into lessDirectCallsToError
Merge pull request #1324 from Microsoft/indent_new_expressions_noargs
Merge pull request #987 from Microsoft/es6Typings
Augment escapeString to fix downlevel template literal emit.
handle cases when new expression is used with no arguments
add missing prototype definitions
Make sure we have an appropriate error for heritage clause lists.
Merge branch 'master' into es6typings
Don't set kinds after the fact.
Merge pull request #1317 from vvakame/addMissingPrototypeProperty
handel serializing diagnostics
Don't use the parsing error path for reporting ///reference errors.
Remove unnecessary diagnostic flag.
Remove 'missing' syntax kind.
Get rid of emitted empty module.
Merge pull request #1321 from Microsoft/fix_token_meaning_in_formatting
added comments
Emit services as an external module.
Don't explicitly create a missing node when parsing arrow expressions.
Merge pull request #1312 from Microsoft/isDeclarationVisibleAssert
Remove unused function.
Don't create a missing node for "foo[]".
Replace unnecessary case in switch with assert.
Treat 'const' as a modifier if followed by 'enum'.
take token kind from the tree in case if token kind from scanner is different
Use a single member to represent a module reference.
Merge branch 'master' into es6Typings
Add test for getters and setters
Merge branch 'master' into isDeclarationVisibleAssert
Merge pull request #1275 from Microsoft/unterminator
Merge pull request #1254 from Microsoft/binaryIntegerLiteral
Merge branch 'master' into binaryIntegerLiteral
Add baseline
Add missing prototype properties
Simplify the code for parseDeclaration.
Don't explicitly call 'error' when parsing a type.
Don't parse nodes, only to not include them in the tree.  This will break incremental parsing scenarios.
Extract out common code from the list parsers.
Don't directly create errors when parsing expressions.
Don't create errors directly when parsing template spans.
Don't report errors directly when parsing throw statements or try/finally statements.
Don't report an error directly when parsing a function body.
Tests for external alias
Merge pull request #352 from park9140/add-definitions-files-to-build-output
tests for internal alias
Don't directly produce errors while parsing 'try' statements.
Tests for external modules
Make fewer direct calls to 'error' and 'errorAtPos' in the parser.
Handle TypeReference nodes
Tests for modules
Merge pull request #1315 from Microsoft/fidelityPort2
Tests for const
Tests and fix symbol display for let
Merge pull request #1314 from Microsoft/crFeedback
Tests for var
Simplify ASI parsing.
Code review feedback.
Merge pull request #1308 from Microsoft/expressionCleanup
Better error recover when there is an unterminated expression before a declaration.
Address issue where we were having to double cast between FunctionLikeDeclaration and Expression types.
Simplify the emitter.
Simplify emitter.
Change function names.
Simplify code.
Merge branch 'master' into expressionCleanup
Merge pull request #1313 from Microsoft/fidelityPort
Tighten the bounds on an 'await' expression.
Rename MemberAccess to PropertyAccess.
Rename some kinds to match new parser.
Tighten types in the expression AST.
CR feedback.
Remove unnecessary tokens from the AST.
Support arbitrary numbers of implements and extends clauses (with arbitrary numbers of types) for classes and interfaces.
Use brands for Class Elements.
Provide brands for Declarations.
Provide brands for statements.
Handel TypeLiterals, ParenTypes, UnionTypes, and ArrayTypes
Merge pull request #1310 from SolalPirelli/fix_doc
Handel assert for missing node kind in isDeclarationVisible for functionType and constructorType
Allow assignment expressions as destructuring assignment target
Fix documentation for Uint32Array.subarray
Merge pull request #1252 from DickvdBrink/emptyFile
Change the names for property access and qualified names to match their types.
Make the distinction between PropertyAccessExpressions and QualifiedNames more explicit.
Merge branch 'binaryIntegerLiteral' of https://github.com/Microsoft/TypeScript into binaryIntegerLiteral
Add check and testcases for invalid binary digits and octal digits
Add a comment explaining what Brands are used for.
Add greater typesafety in the expression portion of the syntax system.
Add check and testcases for invalid binary digits and octal digits
Merge pull request #1307 from Microsoft/parserImprovements
Updating syntax kind names.
Renaming syntax elements.
Rename syntax properties to match Roslyn/Fidelity naming.
Rename 'CastExpression' to 'TypeAssertionExpression'.
Simplify the parser by removing the need for the 'force' parameter.
Simplify parser.
Add a lot of clarifying comments in the parser.
Provide unique nodes for void/typeof/delete expressions.
Add clarifying comments to parsing binary expressions.
Rename method, also remove unnecessary loop when parsing conditional expressions.
Merge pull request #1273 from Microsoft/asyncAwaitFidelity
Merge pull request #1300 from Microsoft/letConstTests
Accepting new baselines
Removing unused diagnostics related to '_i' variable name
Emit of rest parameter for loop uses unique temporary variable name
Merge pull request #1291 from Microsoft/newlines_in_formatting
Add parser tests for let/const.
Remove IndexMemberDeclaration, we can just use IndexSignature instead.
Simplify how type members are represented in the tree.
Update name of variable declaration member.
Add support for parsing 'let' and 'const' declarations.
Support parsing const enums.
Add support for parsing type aliases.
Removing duplication in the parser.
Don't use bitwise operations on this nmber.  It may be more than 32 bits.
Remove fidelity tests.
Use a const enum for the syntax kind.
Merge branch 'master' into asyncAwaitFidelity
Rewriting and emit for destructuring declarations
Accepting new baselines
new lines that were added\removed by rules must always be honores even if they doesn't trigger recomputation of indentation
Add the test262 helper file
Move collateOutputs to harness
Add tree serializer to test262
Merge branch 'master' into es6Typings
Merge branch 'master' into es6typings
Merge pull request #1272 from Microsoft/computedProperties
Accept type baselines (will verify when computed properties are typechecked)
Merge branch 'master' into computedProperties
Address feedback
Tests for terminated/unterminated template strings.
Confused count with index.
Fixed issue where classifier didn't check for backslash-newline.
tokenUnterminated -> tokenIsUnterminated
Merge branch 'unterminator' into taggedSigHelpAtEnd
Merge pull request #1277 from Microsoft/formatting_regexes
Update LKG.
Merge pull request #1278 from Microsoft/preserveConstEnums2
Update LKG.
Emit modules that contain only const enums, if the preserveConstEnum flag is provided.
handle regexes correctly in formatting
Simplify syntaxtree.
Add appropriate switch case.
Allow modifiers on an Export Assignment node.
Simplify parsing.
Simplify parsing.
Merge branch 'master' into asyncAwaitFidelity
Merge pull request #1098 from Microsoft/getOccsForModifiers
Rename SimplePropertyAssignment to PropertyAssignment.
Remove redundant syntax type.
Be more lenient with computed property names.
Inline method.
Rename some functions.
Only allow 'async' as a modifier if it is not followed by newline.
Keep track of unterminated literal expressions.
Add support for parsing async/await in fidelity.
Skip computed properties in the nav bar
Fix merge issues
Checker refactor for FunctionLike and VariableOrProperty
Update error codes
Syntax error for computed properties on method overloads
Emit tests for computed properties
Emit for computed properties
Add parser tests for computed properties
Add grammar errors for computed property names
Parse computed property names
Merge branch 'master' into getOccsForModifiers
Fixed test.
Fixed bug where tagged templates with a literal adjacent to EOF showed sig help.
Merge pull request #657 from Microsoft/conformanceTests-624
Merge branch 'master' into conformanceTests-624
Merge pull request #1268 from Microsoft/generators
Report error on asterisk token.
Merge branch 'refactorEmitter' of https://github.com/Microsoft/TypeScript into refactorEmitter
Refactoring emitter for emit ES6 features natively
Report errors for using yield/generators right now.
Refactoring emitter for emit ES6 features natively
Merge branch 'master' of https://github.com/Microsoft/TypeScript
Change the name invokeEmitter back to emitFiles
address code review
Merge pull request #1261 from Microsoft/contextFlags
Improve comments for both parsers and bring more in sync.
Add clarifying comments.
Have a node flag to indicate if a yield expression has a *.
Simplify fidelity implementation of context flags.
Mark generator functions with an appropriate nodeflag.
Rename parser context flags.
Don't use underscores in names.
An asterisk is not a legal start of an enum member.
Rename methods as per CR feedback.
Initialize enum in a way that makes it clearer that it is a Flags-enum.
Don't store both boolean context flags and a unified flags value.
Add an _es6 suffix to prevent name collisions.
Add test baselines.
Fix parsing of function expression names.
Parser tests for generators and yield expressions.
Add support for parsing generator functions and yield expressions.
Add the context mutation operators.
Extract context flags into their own enum.
Update fidelity to match names.
Use a separate field on a node to specify parser context flags.
Merge branch 'binaryIntegerLiteral' of https://github.com/Microsoft/TypeScript into binaryIntegerLiteral
Merge branch 'binaryIntegerLiteral' of https://github.com/Microsoft/TypeScript into binaryIntegerLiteral
Merge branch 'binaryIntegerLiteral' of https://github.com/Microsoft/TypeScript into binaryIntegerLiteral
Address code review
Merge pull request #1204 from Microsoft/taggedSigHelp
Merge pull request #1239 from Microsoft/incrementalParser
Merge pull request #1258 from Microsoft/parserContextFlags
Merge branch 'master' into taggedSigHelp
Addressed CR feedback.
Reduce lambda allocations in the parser.
Address code review
Move 'disallowIn' into being an ambient parser context flag.
Rename context flag.
Fixed bug in union type identity comparison
Merge pull request #1251 from Microsoft/reduceDiagnostics
Add comment
Add test cases
Merge pull request #1240 from Microsoft/underscoreTS
Remove empty file
Don't report a diagnostic explicitly.
Don't explicitly make diagnostics in the parser.
Merge pull request #1248 from Microsoft/parserLeniency
Added to comment.
Fine tuning array and tuple type checks in destructuring
Rename 'block' to 'body'.
Make parser more lenient with what it allows as the body of a function.
Allow string or numeric literal as property name of object binding Require RHS of array destructuring to be an actual array type (i.e. assignable to any[]) Tighten test for tuple type (previously just required a "0" property)
Merge pull request #1246 from Microsoft/moreGrammarChecks
Merge pull request #1245 from Microsoft/parserConsistency
Merge branch 'master' into parserConsistency
Move parser error to the grammar checker.
Move parser error to grammar check phase.
More parser consistency.
Adding definitions to build output
Merge pull request #1244 from Microsoft/noModifierContext
More parser simplification.
Simplify parser.
Make node creation more consistent in the parser.
Initial work on making all node construction in the parser consistent.
remove unneeded enum from the parser.
Tests for type parameter of function
Type Parameters in interface
Merge pull request #1241 from Microsoft/drop_unused_variables
Binary and octal integer literal support
Tests for type parameters in class
drop unused variables
Fixed issue where findAllRefs on identifiers starting with 2+ underscores failed.
Propagate node kind in variable/parameter destructuring declarations
Simplify rewind points.
Fixing check.
Remove unused asserts.
Make 'kind' non-enumerable.
Speed up incremental parser.
Simplify incremental parser.
Slightly speed up marking by avoiding calling fullStart on so many nodes and tokens.
Always mark nodes and tokens that cross the edited range.
Simplify incremental code.
Simplify parser initializer.
Fix interface.
Simplify incremental parsing by moving old source tree nodes before doing anything.
Support for destructuring assignments
Test cases for arrow function expression
Tests for arrow function expression
Tests for function expression
Tests for local function
Merge branch 'master' into unionTypeConformance
Tests for function display parts
Test for parmaeters
Fix and add test case for display parts for type aliases
Test cases for enum and enum members
Rename functions as per code review feedback
Merge branch 'master' into SymbolDisplayParkKindTests
Merge pull request #1134 from Microsoft/constLet
Merge branch 'master' into constLet
Merge remote-tracking branch 'origin/release-1.3'
Merge branch 'release-1.3'
Merge branch 'release-1.3'
Merge remote-tracking branch release-1.3
Amended comment.
Added test.
Merge branch 'master' into constLet
Merge pull request #1140 from Microsoft/signatureInfoApiRemoval
Addressed some CR feedback.
Merge pull request #1122 from Microsoft/useTypeAnnotationInDeclarationsEmitter
Merge branch 'master' into constLet
Merge pull request #1230 from Microsoft/removeImpls
Merge branch 'master' into signatureInfoApiRemoval
Merge branch 'master' of https://github.com/Microsoft/TypeScript
Write constructor type and function type annotation to adapt to new SyntaxKind introduced
Remove unnecessary 'do nothing' implementations in SourceFileObject.
Have the parser give real positions for empty tokens.
Merge branch 'master' into useTypeAnnotationInDeclarationsEmitter
Merge pull request #1131 from Microsoft/relativePathReferenceResolution
Remove the --noResolve check when finding the file. --noResolve is only for ///reference and import file resolution to resolve files from disk but the file identity is always determined before creating duplicate source file for same file paths
Adding SyntaxKind.FunctionType/ConstructorType to isAnyFunction
Update LKG.
Merge pull request #1221 from Microsoft/grammarChecks
Merge branch 'master' into destructuring
Better spans for import/export errors.
Remove SourceFileInternal.
Simplify grammar check pass.
Merge pull request #1227 from Microsoft/scanner_save_hexliteral_token
Check node for errors before recursing.
Destructuring of tuple type cannot specify extra variables
save token in scanner after scaning hex literal
Revert changes to resources.
Respond to code review comments
Merge branch 'master' into grammarChecks
Code review feedback.
Merge pull request #1219 from Microsoft/parensInCalls
Fixed comment.
Added more tests.
Catch modifiers in sourcefiles.
Simplify code.
Remove unnecessary state from the parser.
Addressed CR feedback.
Inline some checker logic.
Simplify checker.
Simplify grammar checker.
Simplify grammar checker.
use a normal for loop instead of a forEach
merge
move checking modifiers out of parser
Remove forEach call in the grammar checker.
Move indexer modifier checks to the grammar checker.
Move optional method/property checking to the grammar checker.
Move errors about "new Foo[]" to the grammar checker.
Move property initializer checks to the grammar checker.
Move missing argument checks to the grammar walker.
Move parser error to the grammar checker.
Merge branch 'master' into grammarChecks
Merge branch 'master' into getOccsForModifiers
Move away from a grammar error when a real parse error occurs.
Don't report a grammar error for a real parse error.
Fixed issue where template expression in call expressions would emit with unnecessary parentheses.
Move type parameter error handling code to the grammar checker.
Move module name checks to the grammar checker.
Move octal checks to the grammar checker.
Move export assignment checks to the grammar checker.
Move return checks to the grammar checker.
Merge pull request #1217 from Microsoft/QuickInfoRequire
Updated test case and added comment
Move optional property checking to the grammar checker.
Destructuring parameter declarations
Move tuple checks to the grammar checker.
Merge branch 'grammarChecks' of https://github.com/Microsoft/TypeScript into grammarChecks
Merge pull request #1214 from Microsoft/dedupOldFourslashTests
Expose parse errors and grammar errors off the source file.
Merge branch 'grammarChecks' of https://github.com/Microsoft/TypeScript into grammarChecks
move break\continue checks out of parser
Merge pull request #1202 from Microsoft/fixParsingShorthand
Move with checks to the grammar checker.
Added test case for quickinfo on import statement.
Move ambient function block checks to the grammar checker.
Move heritage checks to the grammar checker.
Move ambient statement checks to the grammar checker.
Merge branch 'master' into fixParsingShorthand
Fix for crash in QuickInfo on module path in import statement.
Merge branch 'master' into relativePathReferenceResolution
Enable baseline check and declaration emit for --noResolve case of files
Renamed the tests files to more generic names
Fixed the api for resolving script reference and getting source file as per review feedback
MOve switch checks to the grammar checker.
Merge branch 'fixParsingShorthand' of https://github.com/Microsoft/TypeScript into fixParsingShorthand
Address code review
Proper spans for empty type arg/param lists.
Removed tests from fourslash_old that were duplicates.
getCallLikeInvoker -> getInvokedExpression
Paramter -> Parameter
Address code review
Move type argument tests to the grammar checker.
Move declaration list checking to the grammar checks.
Move grammar checking on a trailing comma to the grammar checker.
Move all strict checks to the grammar checker.
Move strict check for binary expressions to grammar checker.
Move type parameter checks to the grammar checker.
Move catch block checks to the grammar checker.
Move variable statement checks to the grammar checker.
Move module grammar checks to the grammar checker.
Move contructor grammar checks into the grammar walker.
Move variable grammar checks to the grammar checker.
Merge pull request #1208 from Microsoft/indentation_nested_scopes
Move enum checks to the grammar checker.
Move postfix/prefix checks to the grammar check.
Move template version checks to the grammar walk.
Move object literal checks to the grammar checker.
Move accessor grammar errors to the grammar checker.
Rename and simplify code.
fix getContainingList to use rangeContainsStartEnd function
Merge pull request #1207 from Microsoft/updateLKGShorthand
Update LKG
Skip error checks on node if any children produced errors.
Merge pull request #1198 from Microsoft/usingShorthand
Merge branch 'master' into usingShorthand
Use the entire indexer node for grammar error reporting.
Remove unused getImplementorAtPosition
Fixed broken test.
Move parameter grammar checks to the grammar pass.
Merge branch 'master' into taggedSigHelp
Added tests for overloads.
Move parameter name 'strict' checking to the grammar walker.
Address code review
Improve error messages
Initial refactoring to support doing grammar checks as a separate pass of the tree.
Refactoring language service to use short-hand
Tests for signature help on tagged templates with no overloads.
Fixed template head offsetting.
Update LKG.
Refactoring test framework to use short-hand
Merge pull request #1158 from gisenberg/master
Refactoring main-compiler (tsc) to use short-hand
Refactoring compiler utility-related files to use short-hand
Refactoring emitter using short-hand
Refactoring parser/scanner using short-hand
Refactor using short-hand
LKG short-hand property
Added an error condition for multiple AMD module name assignments.
Merge pull request #1184 from Microsoft/gotoDefShorthand
Merge branch 'gotoDefShorthand' of https://github.com/Microsoft/TypeScript into gotoDefShorthand
Address code review
Address code review
Merge branch 'master' into gotoDefShorthand
Merge branch 'master' into taggedSigHelp
Merge pull request #1189 from Microsoft/incrementalRegex
Merge pull request #1190 from Microsoft/unbreakHarness
Update the new scanner to follow the new regex scanning rules.
Fail on tests with errors; reinstated noResolve; corrected tests that were not actually compiling.
Simplify how regexs are incrementally parsed.
Merge pull request #1188 from Microsoft/new_tree_only
eliminate usage of TypeScript module from services layer
cut usage of the old tree from the services layer
Fixed isUnclosedTemplateLiteral to account for new possible inputs.
Refactored code, adjusted for residing out of bounds of the template.
go-to-definition with test cases
Merge pull request #1180 from Microsoft/recursiveTypeComparison
Merge pull request #1127 from Microsoft/shorthandProperty
remove extra call to getSourceFile
Add some more jsdoc comments and ensure everything has a constructor type when possible
minor fixes
Add dom to es6 lib
Merge branch 'master' into taggedSigHelp
Addressing CR feedback
Add ArrayBufferView definition to ES6 lib
Move the Internationalization API to its own file and include it in ES6 typings
Merge branch 'master' into shorthandProperty
Add TypedArray tests
Merge branch 'master' into es6Typings
respond to code review comment
Add test262 test runner
allow non ts files to be passed in to the compiler
Respond to code review comments
Add a test for quick-info
Accepting new baselines.
Improve caching in recursive type comparisons (fixes #1170)
Merge pull request #966 from DickvdBrink/warnaserror
Update baseline
Merge branch 'master' into warnaserror
scan starting from the beginning of target span
Add Promise typing support
Got sig help working in tagged no-sub templates.
Merge pull request #1169 from Microsoft/functionConstructorNodes
update comment.
Got sig help working in the template head.
CR feedback.
Type checker symbols must be transient.
More CR feedback.
cr feedback.
Update comment.
Fix comment
Merge pull request #1167 from Microsoft/formatting_templates
Function and constructor types in the syntax tree.
added more tests
Add test cases and rename test files
Merge pull request #1163 from Microsoft/typeGuards
formatting: handle templates spans
Addressing CR feedback
Merge branch 'master' into taggedSigHelp
Merge pull request #1160 from Microsoft/weDontNeedNoTemplateStringsArrayPreEs6
Merge pull request #1109 from Microsoft/formatting_scanner
Merge branch 'master' into formatting_scanner
code cleanup: added comments
Modifying tests and accepting new baselines
Fix symbol constructor and update Object properties
Merge branch 'master' into typeGuards
Add comment and clean up implementation on findAllReferences
Merge pull request #1129 from Microsoft/yieldExpressions
Added tests for defining TemplateStringsArray in certain contexts.
Fixed issue in harness where lib.d.ts errors are note counted.
Fixes to type guards
Address code review
Fix emit for shotr-hand assignment for module
Added a compiler test for named AMD modules.
Added a few tests.
Account for variable statements, as they are not declarations.
Look through constructor parameters if acc. modifier.
Added 'Constructor' to 'isDeclaration' predicate.
Merge branch 'master' into getOccsForModifiers
When entering a type context, 'yield' should be allowed (as long as you're not in strict mode).
Code review feedback
Add support for [GeneratorParameter] grammar parameter.
Update context names.
Baselines, using 'unknown' as a default type.
Remove the Obsolete api getSignatureAtPosition
Removed lookup of TemplateStringsArray for non-ES6 targets.
Stylistic changes/comment fixups.
Merge branch 'master' into taggedSigHelp
Merge branch 'master' into taggedSigHelp
Merge pull request #1136 from Microsoft/fixNodeHasTokens
Added comment.
Code review feedback
Corrected token start position calculation & nodeHasTokens predicate.
Quickinfo and completion entry should display const enum enumName if enum is constant Handles #1084
Fixes the quickInfo and completion list details for let and adds test cases for let and const Handles #1083
Merge pull request #1077 from Microsoft/typeGuardConformance
Add test cases for typeof x == s and typeof x != s form of typeguard which has no effect on narrowing type
Add test case for instance of type guard with interface with prototype property
Moving error reporting to getWidenedTypeForVariableDeclaration
Merge branch 'master' into typeGuardConformance
Adding destructuring variable declaration error messages
Initial support for named AMD modules.
Merge pull request #1132 from Microsoft/elidedImport
Instead of setting fresh value, or the value with existing one of if alias is referenced in value position Fixes #1130
Adding testcase for the incorrect eliding of the import declarations
Fix the relative path reference resolution Fixes #1039
Add tests to cover scenarios for relative path reference resolution
Merge pull request #1128 from Microsoft/proto
Add clarifying comments.
Fix spelling mistakes, and remove unused function.
Add support for parsing yield expressions.
Function property assignments can also be generators.
Add support for parsing generator declarations.
Update comment
Provide more consistent behavior in how parseFunctionBlock works.
Spec conformance for function blocks versus statement blocks.
Clean up function names.
Initial signature help work for tagged templates.
Fix the completion entry for __proto Fixes #850
All the identifiers need to be escaped to make sure compiler doesnt confuse __NonUnderscore character incorrectly Fixes #548
Add support for typed arrays
Merge pull request #1072 from Microsoft/taggedTemplates
Merge pull request #1124 from Microsoft/completionListAugmentedType
Asserting myself more.
if preceding token cannot be found - scan from the beginning of enclosing node
Cleanup Proxy definition
code cleanup: moved captured locals to parameters
Merge branch 'master' into taggedTemplates
Asserting myself.
code cleanup: move code from lambda into separate functon
Removed the debugger statement from test case
Add conformance tests
Move short-hand property tests to conformace folder
Find all reference for short-hand property assignment
Make Map.prototype.set second paramter optional
Parser errors for destructuring declarations
Make WeakMap.prototype.set second parameter optional
Merge pull request #1123 from Microsoft/allowIn
Use PropertyKey instead of string when appropriate
CR feedback.
Fix paramters for Math.hypot function
Use the correct name for interface Math
Add additional property to mapfn for Array.from
export ReferencePathMatchResult interface as it is used by other exported functions
If we are comparing left hand side for is position of type node, it is false, because it is namespace position and not type position Fixes #837
Keep track of 'disallowIn' as an ambient parser flag instead of having to pass it along everywhere.
add comments, update fourslash tests
Show error for visibility only on the identifier resulting the error
Test case for visibility error in the type literal
Remove unnecessary privacy errors for heritage and constraint type annotation
Test cases for type alias declaration emit and privacy check. Also removed the unnecessary error messages for type alias privacy check
Test cases for type annotation visibility errors
remove unused arguments for getCompiler
merge with master
code cleanup: add more comments, rename methods
Test cases for type literal annotation
Test case for string literal overload type annotation
Test case for paren type annotation
Test cases for union type annotation
Type annotation of tuple type emit in the declaration file
Test cases for array type annotation
Test cases for type query
Tests for type reference annotation
Tests for built in type name reference in type annotation
Show error about entity name visibility on entity name resulting in the error
Update the baselines
Emit the type annotation as it is in the declaration file if we have it
Merge branch 'master' into es6Typings
make smart indenter respect actual start line of the list
Merge pull request #1116 from Microsoft/normalizeSlashes
Consolidated normalizing slashes to use from typescript core in services
Rudimentary support in language service
Merge pull request #1118 from Microsoft/completionWithBackSlashAfterString
Merge pull request #1105 from Microsoft/trailingTrivia
Test case for completion list at backslash following string Fixed by 5acc1a1bd21e7aafb3bd5066969af6a7ddfd547b Tests #982
Merge pull request #1117 from Microsoft/sighelp
set the correct range for paramters in signature help
Basic implementation for finding all references
Consolidate normalizing slashes and use it from typescript core.ts
Updating the gitignore file now that we build debug version of js files
code cleanup: removed unused code
addressed CR feedback, added comments, dropped unused code
End-to-end support for destructuring in variable declarations
Merge pull request #1085 from joshk/patch-1
Fix get type from short-hand property assignment
Body is optional.
Use union types to make For/ForIn statements simpler.
Simplify API for nodes that have both a block and an expression.
Simplify API for nodes htat have both a block and a semicolon token.
Simplify module name parsing.
Simplified parsing.
Tiny perf tweaks to scanning.
Merge branch 'master' into trailingTrivia
merge with master
code cleanup: added comments
Merge pull request #1103 from DickvdBrink/unused-vars
Merge pull request #1102 from DickvdBrink/timing-fix
code cleanup: remove commented code
code cleanup: move functions to the outer scope
Merge branch 'master' into trailingTrivia2
Rename method.
Move to a syntax model where we only have leading trivia.
move SyntaxTrivia.kind over to a property.
Update test.
Attach skipped tokens to the following token, not the preceding one.
drop duplicated code
added tests for formatting in try blocks, add startEndOverlapsWithStartEnd
removed old formatting implementation
harness cleanup
More unused variables in services.ts
Removed some unused private functions
Removed some unused variables
Fixed some methods using the wrong start time
do not descend into child nodes if child does not overlap with target span
code cleanup: removed redundant check
code cleanup: fix typo in formatting scanner, removed explicit indentation for comments, invert conditions to reduce nesting
A few touch-ups to the code.
Support getOccurrences for modifier keywords.
code cleanup: simplify DynamicIndentation interface
Merge branch 'master' into taggedTemplates
Merge pull request #1094 from Microsoft/findAllRefsInTemplates
Fixed issues with incomplete calls, cleaned some code up.
Added baselines.
code cleanup: inline functions
code cleanup: split function into three
Merge pull request #959 from Microsoft/refactorRefFilesPath
Corrected isExpression for templates.
Merge branch 'master' into refactorRefFilesPath
Merge pull request #1089 from Microsoft/completionEntryOfImport
Merge pull request #1086 from Microsoft/jsDocCommentLinePreservation
Test now covers completion entry at name of the import when there is no name and there is name
Simplified while loop as per code review feedback
Merge pull request #1087 from Microsoft/crashInGetCompilerOptionsDiagnostics
Merge pull request #1090 from Microsoft/completionAfterAt
Merge pull request #1088 from Microsoft/completionListOfVarFromUnionOfModuleType
Merge branch 'master' into refactorRefFilesPath
Adding binding patterns to declaration names
adjust delta when recomputing parent indentation
Fix the crash in completion entry by fixing the unknown token check
Block completion list on import declaration name and fix the crash in symbol display name when import declaration is incomplete
Fix the union property kind if the property is union of exported variable of module Fixes #929
Fix the crash in getCompilerOptionsDiagnostics by not using file name as compiler options do not have file name Fixes #988
Fix the line preservation between jsdoc comments while displaying it
code cleanup: remove unused arguments
Fixed the merge conflicts that went undetected in github
Use the new beta build env on Travis
code cleanup: inline functions
Addressed CR feedback.
removed duplicate code
Merge pull request #1079 from Microsoft/showNarrowedType
Merge pull request #1058 from Microsoft/contextualUnionTypeConformance
Merge pull request #1080 from Microsoft/breakpointTypeAlias
Merge pull request #1081 from Microsoft/breakpointsLetConst
Merge pull request #1040 from Microsoft/unionTypeInSignatureDisplay
simplify formatting scanner
Breakpoint validation for Let and cost
Merge branch 'master' into refactorRefFilesPath
Type aliases cannot have breakpoints
Verify breakpoints in type alias syntax
change folder structure, move all new formatting related bits to 'format' folder
Show narrowed type in quickInfo/completion entry Fixes #927
Merge branch 'master' into destructuring
Basic typechecking and emitting for short hand property assignment
Merge pull request #1041 from Microsoft/declFilePrivateMethodOverload
Rework tracking and error reporting related to widening of types
Update some documentation as per code review feedback
Store scanner position before create PropertyDeclaration node
Merge branch 'master' into unionTypeInSignatureDisplay
Typeguards of form !expr •	A type guard of the form !expr o	when true, narrows the type of x by expr when false, or o	when false, narrows the type of x by expr when true.
Typeguards of form expr1 || expr2 •	A type guard of the form expr1 || expr2 o	when true, narrows the type of x to T1 | T2, where T1 is the type of x narrowed by expr1 when true, and T2 is the type of x narrowed by expr1 when false and then by expr2 when true, or o	when false, narrows the type of x by expr1 when false and then by expr2 when false.
TypeGuard of for expr1 && expr2 •	A type guard of the form expr1 && expr2 o	when true, narrows the type of x by expr1 when true and then by expr2 when true, or o	when false, narrows the type of x to T1 | T2, where T1 is the type of x narrowed by expr1 when false, and T2 is the type of x narrowed by expr1 when true and then by expr2 when false.
Test cases for typeguards of form typeof x === s and typeof x !== s •	A type guard of the form typeof x === s, where s is a string literal with the value ‘string’, ‘number’, or ‘boolean’, o	when true, narrows the type of x to the given primitive type, or o	when false, removes the primitive type from the type of x. •	A type guard of the form typeof x === s, where s is a string literal with any value but ‘string’, ‘number’, or ‘boolean’, o	when true, removes the primitive types string, number, and boolean from the type of x, or o	when false, has no effect on the type of x. •	A type guard of the form typeof x !== s, where s is a string literal, o	when true, narrows the type of x by typeof x === s when false, or o	when false, narrows the type of x by typeof x === s when true.
Test typeguard of form instance of •	A type guard of the form x instanceof C, where C is of a subtype of the global type ‘Function’ and C has a property named ‘prototype’ o	when true, narrows the type of x to the type of the ‘prototype’ property in C provided it is a subtype of the type of x, or o	when false, has no effect on the type of x.
Tests for typeguards allowed on variables and parameters only From spec: Note that type guards affect types of variables and parameters only and have no effect on members of objects such as properties
Type guards in || operator •	In the right operand of a || operation, the type of a variable or parameter is narrowed by any type guard in the left operand when false, provided the right operand contains no assignments to the variable or parameter.
TypeGuards in right operand of && operation •	In the right operand of a && operation, the type of a variable or parameter is narrowed by any type guard in the left operand when true, provided the right operand contains no assignments to the variable or parameter.
Tests for conditional expression typeguards •	In the true expression of a conditional expression, the type of a variable or parameter is narrowed by any type guard in the condition when true, provided the expression contains no assignments to the variable or parameter. •	In the false expression of a conditional expression, the type of a variable or parameter is narrowed by any type guard in the condition when false, provided the expression contains no assignments to the variable or parameter.
Test cases for typeguards are scoped at function /module block
Test cases to make sure typeguard is defeated in case of function calls From spec: Also note that it is possible to defeat a type guard by calling a function that changes the type of the guarded variable.
TypeGuards narrow types in if statement works per spec:
Merge pull request #1071 from Microsoft/computedPropertyName
Merge branch 'master' into computedPropertyName
Address feedback
code cleanup: replace nulls with undefined
code cleanup, removed unused files
return last scanned token if possible
Merge pull request #1065 from Microsoft/shorthandProperties
add child delta for all nodes
Corrected comment.
Proper type arg inference with apppropriate overload res tests.
Make certain types of FunctionLike require block bodies
Refactor Declaration.name into Identifier | ComputedPropertyName
merge with master
track effective parent indentation for list items
fix indentation for nested items
do not indent tokens with errors
fix indentations in functions
Merge branch 'master' into taggedTemplates
Merge pull request #1067 from Microsoft/deduplicateTypeNotAssignableMessage
Removed duplicate diagnostic.
Initial parser support for destructuring patterns
Simplify code.
Add support for parsing computed property names.
Add the IPropertyNameSyntax.
Merge pull request #1060 from Microsoft/classifyKeywordsWithoutSyntacticClassifier
Add support for parsing shorthand property assignments.
Merge pull request #1063 from Microsoft/nodeCleanup
Remove unnecessary brand.
Add an IAccessorSyntax interface.
Add missing brands to the syntax interfaces.
Specialize computeData for arrays.
remove file.
Move from an array of function pointers to actual methods.
Classify keywords in type args in the absence of syntactic classification.
Merge pull request #1035 from Microsoft/improvedTypeInference
Test cases of function infering return type of functions if f is a contextually typed function expression (section 4.9.3), the inferred return type is the union type (section 3.3.4) of the types of the return statement expressions in the function body, ignoring return statements with no expressions. Otherwise, the inferred return type is the first of the types of the return statement expressions in the function body that is a supertype (section 3.8.3) of each of the others, ignoring return statements with no expressions. A compile-time error occurs if no return statement expression has a type that is a supertype of each of the others.
Array literal produces union type if the it is not contextually typed
Tests for contextual index signature of union type Let S be the set of types in U that has a string index signature. If S is not empty, U has a string index signature of a union type of the types of the string index signatures from each type in S. Let S be the set of types in U that has a numeric index signature. If S is not empty, U has a numeric index signature of a union type of the types of the numeric index signatures from each type in S.
Merge branch 'master' into taggedTemplates
Initial work on overload resolution with tagged templates.
Fix the logic in getting the contextual signature of union type as per spec Fixes #1054
Test cases for contextual typing of union type members
Identity of union type
Tests for union type literals A union type literal is written as a sequence of types separated by vertical bars. UnionType: PrimaryOrUnionType   |   PrimaryType A union typle literal references a union type. When function or constructor types are included in union types they must be enclosed in parentheses
Tests for Conditional operator can generate union type
Results of || operation produces union type
Tests for union of index signatures: •	If each type in U has a string index signature, U has a string index signature of a union type of the types of the string index signatures from each type in U. •	If each type in U has a numeric index signature, U has a numeric index signature of a union type of the types of the numeric index signatures from each type in U.
Tests for union of construct signatures
Tests for union of call signatures If each type in U has call signatures and the sets of call signatures are identical ignoring return types, U has the same set of call signatures, but with return types that are unions of the return types of the respective call signatures from each type in U.
Tests for union members: If each type in U has a property P, U has a property P of a union type of the types of P from each type in U.
Tests for assignment compatibility of union types •	A union type U is assignable to a type T if each type in U is assignable to T. •	A type T is assignable to a union type U if T is assignable to any type in U.
Tests for checking if type S is subtype of union type T is a union type and S is a subtype of at least one constituent type of T
Tests for source (S) of subtype is union type (U) A union type U is a subtype of a type T if each type in U is a subtype of T
Tests to check equivalency of union types A union type encompasses an unordered set of unrelated types (that is, types that aren’t subtypes of each other). The following rules govern union types: •	A | B is equivalent to A if B is a subtype of A. •	A | B is equivalent to B | A. •	AB | C is equivalent to A | BC, where AB is A | B and BC is B | C.
Conformance tests for array element type of tuple is union type of tuple element types
Merge pull request #1049 from Microsoft/const_enums
use debug mode by defauls in local builds
add test for const enum that is initialized with enum member defined above
add 'emitReverseMapping' task to jakefile
update LKG, always emit value as initializer for const enums when 'preserveConstEnums' is specified
Merge pull request #1051 from Microsoft/updatedNodes
Update syntax nodes.
Merge pull request #1050 from Microsoft/incrementalPerf2
Specialize findToken walk.
Micro optimize scanning
Use an array for getting the right childAt function.
Small micro optimizations to incremental parsing.
Specialize update method for both nodes and tokens.
Faster fixedWidthTokenLength function.
Change 'kind' into a property from a method.
use const enums in compiler
update LKG
Merge pull request #1047 from Microsoft/parentProperty
Make ISyntaxElement.parent non-optional
Merge pull request #1045 from Microsoft/childCountArray
Update test.
Emit case clause statements on the same line if that's how they were written in source.
Encode child counts as an array, not as a switch.
Merge pull request #1044 from Microsoft/todoSemantic
Treat getTodoComments as a semantic operation since it will be called on every file in the project.
Accepting new baselines
Merge pull request #970 from Microsoft/fold_computed_enum_members
Addressing CR feedback
Declaration file emit for private method overloads (#1018)
Completion entry details of union of methods with no call signature Fixes #928
addressed CR feedback: adjusted text of error messages, added description to 'preserveConstEnums' command line argument
Merge pull request #1033 from Microsoft/type_aliases_conformance
Merge pull request #1000 from Microsoft/staleSourceFile
Merge pull request #1037 from Microsoft/incrementalParsingPerf
Remove SyntaxNode.ts file
Simplifying node constructors
Use functions instead of classes
Remove accept method from syntax nodes
Remove childCount and childAt from ISyntaxElement.
Remove shared arrays.
Remove SyntaxNode class
Speed up incremental parsing
Remove unused code.
Speeding up parsing and incremental parsing.
Speed up findToken
Speed up incremental parsing by caching child tokens instead of walking the tree for them.
fixed typo
Accepting new baselines
added basic set of tests for type aliases
merge with master
Merge branch 'master' into type_aliases_conformance
Adding tests
Improved type inferences involving union types
Merge pull request #1032 from Microsoft/checkTypeAliasName
Type alias cannot have reserved type name (#1030)
Merge pull request #1031 from Microsoft/templateExpressions
Add support for parsing template expressions.
initial version of spec conformance tests for type aliases
inline enum constant values for indexed access when index is string literal
Merge pull request #1028 from Microsoft/abstractTrees
Remove abstract syntax tree generation support from fidelity.
Merge pull request #1027 from Microsoft/separatedList
Use a flat list for separated syntax lists.
Merge pull request #1026 from Microsoft/langSpecUpdate
Minor updates to Type Aliases section
Merge pull request #1025 from Microsoft/aliasObjectTypeLiterals
Accepting updated baselines
Merge branch 'master' into aliasObjectTypeLiterals
Merge pull request #998 from Microsoft/langSpecTypeAliases
Remove restriction on type aliases for object type literals
Allow type aliases for object type literals
merge with master
add test for 'preserveConstEnums' command line argument
do not treat module that contains only const enums as instantiated
Merge pull request #1022 from Microsoft/defineProperty
Merge branch 'master' into defineProperty
Speed up separatedListChildCount
When augmenting Array.prototype, make the functions non-enumerable by default so as to not affect clients that call for-in
Merge pull request #1021 from Microsoft/incrementalPerf
Merge pull request #960 from Microsoft/templates
Move back to how we used to walk trees for incremental parsing perf.
Merge branch 'master' into templates
Addressed CR feedback.
update test baselines
Merge pull request #1017 from Microsoft/fixTypeRelationCaching
Addressing feedback and adding regression tests
make getSourceFile use getCurrentSourceFile
Accepting new baselines
Improved type relation caching to fix #1002
set 'earlyError' bit to 'non-constant expression in constant enum initializer' error
added .d.ts generation tests
Merge pull request #1010 from Microsoft/removeUnnecessaryCode
drop wasNewLine if previous token has no trailing trivia
Merge branch 'master' into removeUnnecessaryCode
Merge pull request #1008 from Microsoft/lessSyntaxKinds
indent argument lists if they are on different line with parent
Removing unused code.
Address code review
Merge branch 'master' into templates
Move away from separate syntax kinds for binary and unary expressions.
Merge pull request #1006 from Microsoft/walkingSpeed
process start and end tokens in list as part of list, indent return statements
Removing commented out code.
Improve walking speed in Fidelity.
preparation to process list terminator tokens with lists - 5 falling tests
Merge pull request #997 from Microsoft/fidelityParsingUpdates2
Merge branch 'master' into fidelityParsingUpdates2
Merge pull request #995 from Microsoft/removeNull
Adding type aliases to language specification
Adding support in fidelity for parsing union and parenthesized types
addressed CR feedback
allow arithmetic operations in constant expressions, handle infinity\NaN results
Remove nulls from the syntax layer.
Fix indentation
Added test for noEmitOnError
Merge pull request #992 from Microsoft/perfWork
Address code review
Remove old commit and debugger flag
use .pop() on an array instead of setting the length directly.  The latter causes v8 to stop optimizing the method.
Merge pull request #979 from Microsoft/getSourceFile
Merge branch 'refactorRefFilesPath' of https://github.com/Microsoft/TypeScript into refactorRefFilesPath
Add fourslash support and tests cases
Add fourslash support and tests cases
Remove while true guard
indentation for export assignments
Update LKG
Export DisplayPartsSymbolWriter as it is already used in exported types
Add reflect definition
const enums, iteration 1: const enums can be used in imports, const enums can be merged only with const enums.
Load the es6 lib if target is es6
First draft of es6 typings
merge with master
Allow static side of native types to be extended
Merge pull request #985 from Microsoft/removeSyntaxTree
Merge branch 'master' into templates
Remove syntaxTree from SourceFileObject
Disabled completion list entries in template literal parts for the LS.
Merge branch 'master' into templates
Omit empty template tail literals.
Fixed emit for parenthesized template expressions.
Missed a use when fixing Debug.assert
Renamed certain functions in the parser to more accurately reflect behavior.
Changed Debug.assert's first parameter to a boolean.
Addressed CR feedback.
Merge branch 'master' into templates
Comment examples of when findListItemInfo can return undefined
Fix signature help crash when requested outside argument list
Merge pull request #957 from Microsoft/typeAliases
initial version of list item formatting
Move Convert FileReference to the shim
Merge branch 'master' into typeAliases
Merge pull request #977 from Microsoft/colectomy
chainedMessage -> headMessage
Merge branch 'master' into colectomy
Revert "Introduce .gitattributes file"
Revert "Introduce .editorconfig file"
Updating LKG compiler to get type alias support
Fixing type check error in services.ts
addressed feedback
Use of union types and type aliases in compiler
Merge pull request #952 from Microsoft/completionFixes
Merge pull request #961 from jedmao/editorconfig
Merge pull request #962 from jedmao/gitattributes
Merge branch 'master' into completionFixes
Respond to code review comments
Removed colons from diagnostic messages.
'const enum' iteration 0. TODO: allow and track const enums in imports, add more tests
merge with master
Merge pull request #976 from Microsoft/privatePropertiesBeingTooPrivate
Fixed findAllRefs/getOccs bug where private properties declared in the constructor were only local to the constructor.
Expose getSourceFile on the LanguageService interface
Add tests case for invalid syntax in import statement and triple slash reference
Remove diagnostic from pre-processing of files
Update LKG
Making it an error to alias an object type literal
Merge pull request #940 from Microsoft/asynchrounousAliasWriteCrash
Merge pull request #951 from Microsoft/overloadResolution
More PR feedback
Merge branch 'master' into completionFixes
correctly propagate child indentation
Address code review comments
Merge branch 'master' into overloadResolution
Make chainedMessage, terminalMessage, and containingMessageChain optional
Address PR feedback
Changed name to noEmitOnError
Fix getTokenPos for scanning import statement
Merge pull request #971 from Microsoft/fixResolveName
Fixing comments
dropped redundand type assertion, added mising check
move code around to consolidate checks in one place
addressed CR feedback, added support for indexed access
Fix the resolveName function
added folding for references to enum members in enum member initializers, added tests
implemented treat warning as errors commandline option (warnaserror).
handle non-qualified names, add 'propagateEnumConstants' command line option
initial implementation of constant folding
Support for type aliases in .d.ts generation
Introduce .gitattributes file
Introduce .editorconfig file
distinguish parse errors so non-parse errors can be ignored during formatting
Added syntactic classification for templates; also made 'spans' a NodeArray.
Update baselines
Merge branch 'master' into overloadResolution
Merge branch 'refactorRefFilesPath' of https://github.com/Microsoft/TypeScript into refactorRefFilesPath
Fix indentation and space
Fix indentation
Add unittests for preProcessFile
Refactoring getFileReferenceFromReferencePath for both parser and language service
merge with master
initial rev of using error information in formatting
Report type argument inference errors on specific candidates
Merge branch 'master' into typeAliases
Use type alias names in aliased recursive type literals
Merge pull request #904 from Microsoft/letAndConst
Update CONTRIBUTING.md
Merge branch 'master' into letAndConst
Only check for collisions with variabels and not properties
Ensure let and const declarations in labels are parsed correctelly
Tests for tagged templates.
Added tests for tagged templates. Some should fail when we do typechecking.
Better test coverage for templates in object literals.
Added support for tagged template strings, updated baselines.
Merge branch 'letAndConst' into templates
Have inferArgumentTypes return the InferenceContext
Merge pull request #931 from Microsoft/newTreeBreakPoints
Merge branch 'master' into letAndConst
Added tests and baselines for templates.
Update LKG
Merge branch 'master' into letAndConst
Rudimentary template support, excluding tagging.
Merge pull request #944 from Microsoft/inOperatorWithUnionTypes
Implementation of Type Aliases in compiler core
Fix wrong condition for unterminated multi-line comments
Move helpers to the bottom of the function
Actually removed reference to the diagnostics file.
Cleanup completion list logic: - Do not walk the tree multiple times for the same session, instead pass along the previous token - Use current token if the this is not after a dot to avoid running into scoping issues - Also, add some documentation about different steps
Merge branch 'master' into completionFixes
Fix issue #764, select the correct scope node if not left of a dot
Fix issue #866, detect the current location correctelly in completion entry details
Add test for bug #807
Added another test case (#948)
Add test for issue#903
Disallow completion in interface declarations
switch formatter to use 1-based lines
Add comment
Move switchToForwardSlashes from pathUtils to utilities
Merge pull request #901 from Microsoft/syntacticClassificationOnNewTree
Refactoring preProcessFile to use new scanner
remove call to getSourceUnit
Split completionListAtIdentifierDefinitionLocation into multiple tests to ease debugging
move completion list position detection to the new tree
Accepting new baselines
Fixing in, for...in, and instanceof with union type operands
use apply line adjustment when calling SmartIndenter
Merge branch 'master' into syntacticClassificationOnNewTree
Addressed CR feedback.
recompute indentation if line is added
Specify error message for type argument inference failing
Revert the stuffing of instantiated signatures back into the candidates array
Give different errors for different overload resolution issues
Begin refactoring overload resolution to collect more info
Move overload resolution logic into chooseOverload function
Merge pull request #942 from Microsoft/unionTypeFixes
Renaming getApparentPropertyOfType to getPropertyOfType
Code review feedback update
Union type fixes and optimizations
Fix the crash in declaration file emit when alias is used before its declaration
Merge pull request #932 from Microsoft/breakCycleInDiagnosticGeneration
Exported variables can have breakpoint even if they do not have initializer
Refactoring functions related to processImport
Addressed CR feedback.
Removed Diagnostics from sys.ts in order to avoid cyclical build dependency.
Span on whole method/accessors if they are of class declaration
Span on whole function if the function is exported
handle indentation in function arguments
Breakpoint span on class and its name is set on whole declaration
Breakpoint span on module and its name is set on whole declaration if it is instantiated
Some reorganizing
Set breakpoint on whole enum declaration if set on the enum name of enum keyword
move code around
Breakpoint validation in interfaces
Update LKG
Merge pull request #925 from Microsoft/cannotFindFileFix
Implement getNameOrDottedNameSpan for new compiler
Do not set breakpoints on the blank line or comment only line
Breakpoints in expressions
Breakpoints in classes
Breakpoints in module declaration
Breakpoints in enum declaration
Breakpoints in import declaration
Breakpoint validation for export assignment
Breakpoint spans in try,catch,finally blocks and throw statement
Breakpoints in the switch statement
Breakpoints in the for in statement
Breakpoints in for statement
Breakpoints in break/continue statements
Breakpoints in labeled statements
Breakpoints for if else construct
Breakpoint span in the debugger statement
Breakpoint span in the doStatement
Breakpoints for while statement
Breakpointspan implementation for function declaration, expression statements and return statements
Changed the namespace from ts.Breakpoints to ts.BreakpointResolver
Remove the old implementation of the breakpoint resolver
Breakpoint span in variable declarations in new language service Also updates the fourslash breakpoints baseline to be more readable
respect parent indentation
respond to code review comments
Create a new flag for diagnostics 'isEarly' and disable emit if this flag is set. Set the flag by default on all let and const errors to ensure we are not emitting invalid JS code.
adjust formatting scanner implementation
allow let and const declarations in module bodies under labels
Simplify the binder logic for managing blockScopeContainer
Merge pull request #924 from Microsoft/fixColorizationUnittest
Address code review
Update error messages
Address code review
Merge branch 'master' into letAndConst
use getCanonicalFileName in the language service when searching for files
Fix colorization unittest
Fix runtests for unittests
Merge pull request #915 from Microsoft/sigHelp
Merge branch 'master' into sigHelp
Address PR feedback
Merge pull request #919 from Microsoft/optionalPropertySubtyping
Merge branch 'master' into optionalPropertySubtyping
Adding missing blank
Merge pull request #914 from Microsoft/parensInTypes
Accepting new baselines
Require optional properties to be present in subtypes Remove unused getBestCommonType method (unrelated change)
Adding tests
Formatting fixes
Removing doc\header.md from jakefile, fixing formatting
Updating Language Specification
initial rev
Merge pull request #908 from Microsoft/contextualSignatureUnionTypes
Addressing CR feedback
Fixing fourslash test
Produce SignatureHelpParameters from type parameters for generic help
Signature Help relies on display building routines in checker
Remove OmittedType
Split genericParameterHelp test into multiple tests
Parser changes to parse omitted types correctly
Reenable some basic generics tests
Move getChildListThatStartsWithOpenerToken inside getSignatureHelpItems
Changing type-to-string conversions to use parentheses
rescan '>' and '/' if necessary
Treat blockScoped variable declarations as a separate category when it comes to symbol flags, instead of compining BlockScoped and Variable
Allow const and let declarations to be exported in modules. Also ensure that const module elements are not used as references.
Accepting new baselines
Parentheses in type literals
multiline comments support
Respond to code review comments
Fix search for shadowed const declarations by a var declarations to search for any variable instead of only a blockScoped one to ensure we are not picking it up from a wrong scope.
Adding tests
Merge pull request #860 from Microsoft/numbersAreHard
Merge pull request #907 from Microsoft/rwcRunner
import ior utilites
Merge pull request #893 from Microsoft/displayBuilder
Merge pull request #905 from Microsoft/langSpecStraightQuotes
Addressing CR feedback and fixing issue with document title
Merge branch 'master' into displayBuilder
Changing word2md tool to map Windows-1252 characters to Unicode
Address PR feedback for displayBuilder
IOR is a simple script for dealing with IO Replay files
Merge branch 'master' into rwcRunner
disable source map record validation in RWC runner
Straight quotes in Language Specification
Union types in contextual signature instantiations
Add language service support for const
Merge branch 'master' into letAndConst
Merge branch 'master' into numbersAreHard
Adjust rules to handle interfaces correctly - 19 failing tests
Merge pull request #900 from Microsoft/langSpecUnionTypes
update baseline
More comments.
Switched syntactic classifier to use new tree.
Update CONTRIBUTING.md
fix a few issues in rules
Merge pull request #884 from Microsoft/moveSymbolDisplayPartKindToServices
Adding documents with revision marks
Adding PDF document
Further refactoring the rwc tests
Get rid of getRootSymbol and include target's flags in transient symbol's flags
Formatting fixes
Merge pull request #898 from DickvdBrink/unused-vars2
Adding union types to language specification
Removed some unused var statements
Add after block to the describe blocks of project runner and rwc runner
Merge branch 'master' into rwcRunner
Fix emitting for const in for loops
Do not allow let and const declarations to be exported from a module
temporary disable smart indentation for type literals, fix computation for end line position
Merge pull request #883 from Microsoft/semanticColorizationModules
Allow const in for statements
Extract the write methods into a display builder in the checker
Added test case for semantic classification with union types.
do not check Missing
Flag const declarations shodowed by var redeclarations
Merge branch 'master' into semanticColorizationModules
Flag assignments to a const
fix issues in formattingContext - 35 failing tests so far
Removed unnecessary boolean coercion.
Merge branch 'reportErrorFromTargetFile' into release-1.3
Report duplicate identifier errors on all locations for merged declarations to align with local declarations
Merge remote-tracking branch 'origin/release-1.3' into reportErrorFromTargetFile
Ensure duplicate let/const declarations accross files are reported
initial revision of formatting
Addres code review
Merge pull request #890 from Microsoft/sigHelpCrash
Comment examples of when findListItemInfo can return undefined
Do not allow use of block-scoped variable before its definition
Add binder support for block scoped variable declarations
Fix signature help crash when requested outside argument list
Added facilities for using positions on classification tests.
Test case for interface members
Test case for interface display parts
Test cases for constructor quickInfo display parts kind
Test cases and fix for symbol display part kind of class accessors
Test cases for class methods
Test cases for class property display parts
Enable infrastructure to test the symbol display parts returned by quickInfo
Merge pull request #824 from Microsoft/unionTypes
Merge branch 'master' into unionTypes
Address code review
Merge pull request #885 from Microsoft/symbolInfoOfUndefinedAndArguments
Removed the debugger statement
Added test case, renamed test cases.
Add test case to make sure that we only report an error from target file
Explain what is happening in 'isNumericName'.
Merge changes from master in services.ts
Fix how arguments and undefined are shown in the quickInfo Removes the undefined identication from symbol flags instead add method to typechecker
Update language service to use getDeclarationDiagnostics instead of emitFile to get declaration errors
Merge branch 'master' into unionTypes
Move symbolDisplayPartKind to services side
Merge pull request #874 from Microsoft/betterAliasSymbolInfo
Refactoring parameters formatting
Addressing CR feedback
Accepting new baselines
Correct contextual typing with union types
Fix line endings
Disallow let and const declarations outside blocks
Add basic parsing support for let and const
Add es6 target
Merge pull request #861 from Microsoft/unionTypesLS
Merge branch 'unionTypes' into unionTypesLS
Add a temporary fix to quick info
Handle union properties completions on apparant types
Fixed semantic colorization for module names on the value side.
Accepting new baselines
Merge branch 'unionTypes' of https://github.com/Microsoft/TypeScript into unionTypes
Less aggressive subtype reduction in union types
Refactoring emitDeclaration, separate emitDeclaration from emitFiles
ensure unionProperty symbols have declarations set at creation time
Merge pull request #841 from chrisbubernak/disallowNumericEnumMembers
Removed incorrect check of symbolKind determination of undefined symbol
Show call and construct signatures when using aliases
Show better alias information in completion entry and quickInfo
Do not use internal aliasing when getting symbol full name to show in quickInfo or completion list
Fixing merge conflicts
Test updates from union changes
Merge pull request #872 from Microsoft/fixNewLines
Fix newlines in tests
Make things more conformant with 9.8.1 of EC-262 spec.
respond to code review remarks
Fixing badge URL
Adding some badges
Merge pull request #867 from Microsoft/reAddColorizationFix
Re-added semantic colorization fix for colliding types colliding in value and namespace space, added a test.
Merge pull request #856 from Microsoft/fixThrowExceptionOnEmitFile
Merge branch 'master' into fixThrowExceptionOnEmitFile
Merge pull request #865 from Microsoft/undoContextualSemanticClassification
Merge branch 'master' into numbersAreHard
Merge branch 'master' into fixThrowExceptionOnEmitFile
Add isDeclarationFile and update similar all usage
Quick edit to comment.
Addressed CR feedback.
Undid changes where contextual semantics are taken into account.
Merge pull request #864 from Microsoft/quickInfoMerge
Fixed the bad merge and tests failing because of it
Ensure that numeric names are in their printed form.
Fix contextually typed object literal proeprties that are not properties of the union type but are properties on of one of its constituant types
Merge branch 'unionTypes' into unionTypesLS
Add baseline
Fix comments
removed old comment
removed hidden tabs + moved check into isNumericName
Moved the error check from parser to checker & updated baselines
Merge branch 'disallowNumericEnumMembers' of https://github.com/chrisbubernak/TypeScript into disallowNumericEnumMembers
Handle numeric signs in 'isNumericName'.
Use getRootSymbols for all union property needs
Support find all refs on union properties
Merge pull request #793 from Microsoft/symbolInfoFormatting
Merge branch 'master' into symbolInfoFormatting
Merge branch 'master' into symbolInfoFormatting
Fix formatting
Add more test cases
Merge pull request #859 from Microsoft/useProperMeaningAtLocation
Fixed the typo
Merge pull request #853 from Microsoft/objectLiteralCompletion
Merge branch 'master' into objectLiteralCompletion
Respond to code review comments
fixed error message and updated necessary baselines
Use our own scanner for 'isNumericName'.
Try to pick a good signature, if no signature matches
CR feedback on the checker
Accepting new baselines after merge with master
Merge branch 'master' into unionTypes
Add baseline
Add test file
Improved type argument inference with union types
Fixed ordering, syntax, addressed CR feedback, made things work.
Use string to marshal in SymbolDisplayPartKind instead of enum
Accepting new baselines
Make 'getSymbolKind' semantically sensitive to the location of requests.
Compiler test case for usage of contextual rest parameter
Code Review feedback: Quick info will show type of undefined as undefined instead of any
Code review feedback - Show the type as any even inside the with block
Fixing tests and baselines
Address code review
Addressing CR feedback
Add support for union properties in goto def
add test for quick info
Support symbol kind for union properties
Merge branch 'fixThrowExceptionOnEmitFile' of https://github.com/Microsoft/TypeScript into fixThrowExceptionOnEmitFile
Fix throwing exception from emitFile
Dix throwing exception from emitting file
add declaration target to generate declarations for compiler and services
Code review feedback
Fixed the + overload according to feedback
Code Review feedback
Merge pull request #848 from Microsoft/sigHelpCrash
Merge branch 'master' into sigHelpCrash
Fix crash when getting member completion for an object literal
Merge pull request #804 from Microsoft/overwhelmedByOverloads
Sshow signature information if possible (even though signature resolution fails) in given location
Merge pull request #851 from Microsoft/blockOutlining
Merge pull request #849 from Microsoft/navBarMerging
Outlining spans for a standalone block shouldn't have the span of their parent.
Enable proto test case
Properly use a bit test instead of equality, due to intersecting meanings.
Don't merge nav bar items that are at different indent levels
Use local meaning for variables in quick info.
Narrowing of variable types using typeof/instanceof type guards
Fix the quickInfo for rest parameters
Merge pull request #847 from Microsoft/marshallDiagnosticsCode
Merge pull request #840 from Microsoft/getEmitOutputExternalModule
Add assserts to help diagnose signature help crash #832
Properly marshall diagnostic codes to the managed layer
Merge branch 'master' into getEmitOutputExternalModule
Address code review
Do not write anonymous function name in type parameter details
Quick info on undefined Fixes #775
Enabling more test cases
Fix spelling
Fixed another bug in parser & fixed up baselines
Add fourslash tests to cover external module case
Fix compileOnSave with external module
Update compiler version to 1.3
Removed Numeric members from a bunch of tests
Fixed bug where numeric check wasn't catching everything
Merge pull request #836 from Microsoft/handleAliasedTypes
Enable test cases for augmented types
Reverted code back to original location since these functions no longer need to be exported.
Use 'getMeaningFromDeclaration' to classify identifiers.
Get symbolKind as part of display part determination itself
Better symbol information for lambda variable types at the call site
Fixing issue where the top level source file item was not being selected.
Merge pull request #826 from Microsoft/navBarTweak
Handle findAllRefs/getOccurrences for properties inherited from aliased types.
Fix generic symbol display information
Merge pull request #817 from Microsoft/renameEnumMember Fixes the name displayed in the rename dialog to be just symbol name instead of qualified path
Merge pull request #818 from Microsoft/sourceMapRelativeDirName
Added test cases for --outDir option
Added test case for rename of enum member using rename api
Merge pull request #822 from Microsoft/tupleConformance
Merge branch 'master' into tupleConformance
Merge branch 'tupleConformance' of https://github.com/Microsoft/TypeScript into tupleConformance
Remove duplicate file
Remove duplicate fil
Don't show locals as children of functions.
Added a message & a check for numerics in the parser
Update tests.
Tweak how we populate NavBarItems.
Merge pull request #823 from chrisbubernak/betterErrorsForBitwiseOperatorsOnBooleans
fixed spelling mistake
Made fixes based on CR feedback
Initial implementation of Union Types
Merge pull request #709 from Microsoft/navbar
Merge pull request #821 from Microsoft/renameFeedback
specific type for function param
Updated baselines
Merge branch 'master' into navbar
Tuple conformance
Cleaning up the new rename-comments/strings code.
Cover all top-level items in 'getIndent'.
Moved 'basicChildItem' to 'createChildItem' and renamed it 'createItem'.
Merge pull request #816 from Microsoft/renameCommentsAndStrings
Replaced 'getModuleNameFromFilename' with 'removeFileExtension'.
Renamed 'getScriptLexicalItemsWalkerSuperCala[...].ts' to 'navigationBar.ts'.
Adding tests.
CodeReview feedback, and some tests.
Renamed assertionMessage to messageAtLastKnownMarker in fourslash
Finished up "overload collapsing" for navigate-to.
Show the type information in places where there is no symbol associated
Adding rename tests.
Merge pull request #813 from Microsoft/genericClassificationTweak
Fix the source map directory resolution with non case sensitive file names
Enable tests for the case sensitive and non case sensitive path resolution during soucemap path calculation
CodeReview feedback.
Get just the name of the symbol (instead of qualified path) as symbolName of the definition info. Fixes #652
Support rename in comments and strings.
refactored checker again
Add test case to verify the definition name and container name Rename dialog will use this name and scope name returned
rewrote changes to the checker
Add some heuristics in the lexical classifier to make it play better with the syntactic classifier when classifying expressions involving generics.
Merge pull request #809 from Microsoft/localizedServices
Update compiler localized messages with those provided by the language service.
Merge pull request #808 from Microsoft/outliningCollapse
Specify which outlining spans should auto-collapse if the user choose "collapse to definitions".
First changes to checker for this fix
Only show first overload in a series of consecutive overload signatures for navigateTo
Merge pull request #799 from Microsoft/stopBlindlyColoring
Merge pull request #801 from Microsoft/absolutePathRef
support goto def on /// references with absolute path
handle absolute path in /// references
Merge pull request #798 from Microsoft/flagAllDuplication
Merge branch 'master' into flagAllDuplication
Merge branch 'master' of https://github.com/Microsoft/TypeScript
Fix spelling
Merge pull request #786 from Microsoft/aliasCompletion
Merge pull request #748 from chrisbubernak/selfReferencingFileError
Merge pull request #792 from Microsoft/sigHelp
Merge branch 'master' into sigHelp
Fixed bug where value-space identifiers got classified as interfaces when sharing the same name as an interface.
Update Baselines
Fix error reporting position
Merge pull request #795 from Microsoft/langSpecFormatting
Formatting fixes
Merge pull request #752 from Microsoft/getTokenAtPosition
addressed CR feedback
Update baselines
Fix reporting duplication errors to report at all declarations
Merge pull request #787 from Microsoft/classifierTweaks
Fix the quick info on error types
Fix argumentCount and selectedItemIndex
Parse OmittedExpression for missing arguments followed by commas
Add test for empty arguments and arity filtering
Remove getCurrentArgumentState
Record trailing comma even for incorrectly terminated lists
Fix arity checking for partial overload resolution
Format typeparameters information
Enabling more quickInfo tests
Alias name formatting
Get the doc comments for dotted module declarations with docComments going to inner most module declaration Enable module declaration comments and type name formatting tests
Enable test cases for comments/type name format validation
Enable signature help docComment testing
Overload formatting in the symbol displaying
Determine if the function/var is local to function block
Qualify properties methods of the instantiated symbol correctly.
Anonymous typeliteral is not used in qualification
Move the symbol classification and display parts writing to the Services and format the newlines correctly
Use SymbolDisplayParts api
Get the JSDoc comments for the symbols This also fixed type formatting for single function signatures in the types
Do not use a while loop, as an aliased symbol is always one level deap
Get exported symbols off aliases in getCompletions
Merge pull request #778 from Microsoft/getOccurrencesSetItAndForGetIt
Merge pull request #781 from Microsoft/docComments
Merge branch 'master' into docComments
Tweak classification so it does not classify things as keywords that could not actually be keywords according to the grammar.
Merge branch 'master' into navbar
set the kind on alias completions
Merge pull request #776 from Microsoft/getOccurrencesThrow
Add aliases in completion list
Minor naming/comment changes.
Merge pull request #763 from Microsoft/protectedCompletion
Minor cleanup, added getScriptLexicalStructureWalker.ts Jakefile.
Merge pull request #784 from Microsoft/langSpecTupleTypes
Adding tuple types to language specification
do not consider positions that fall to leading trivia in brace matching
Propery walk all declarations to find doc comments for a symbol.
addressed CR feedback
Simply use source text from now on.
Respond to CR feedback.
Merge branch 'master' of https://github.com/Microsoft/TypeScript
Add support for protected glyphs on the script side.
getOccurrences for 'get' and 'set' keywords.
rename getTokenAtPosition to getTouchingToken, add a few helpers for common tasks
Changed "ownership" relation of try blocks on throw statements.
Merge branch 'master' into getOccurrencesThrow
Fixed indentation
Moved logic to another location where host was in scope so we could call getCanonicalFileName
Merge pull request #772 from Microsoft/outliningInArraysAndSwitchBlocks
outlining support for switch blocks\array literals
Support getOccurrencesAtPosition for 'throw' keywords.
Merge pull request #755 from Microsoft/misidentifiedIdentifier
Merge branch 'noResolve' of https://github.com/Microsoft/TypeScript
Merge pull request #762 from Microsoft/specJakeTask
Adding word2md.js to .gitignore file
Merge branch 'master' into specJakeTask
Show marker names in fourslash test failures
Filter protected members from the completion list
Add jake task for generating Markdown language spec
Merge pull request #760 from Microsoft/sigHelpRefactor
Adjust sig help implementation to match the new simpler sig help API.
still trying to get the indenting correct
Limited identifying identifiers after dots to keywords.
fixing baseline
Merge pull request #758 from RReverser/master
Fixed some of the baselines, made file comparisons handle different casing, put diagnostic message in correct order
Merge pull request #757 from Microsoft/escapesInMarkdown
Prevent non-TypeScript (HTML/JSON/...) files from being added to test suite.
Escaping of '<' characters in Word to Markdown conversions
Fix issue where trivia is incorrectly identified as an identifier following a dot.
rename getExactTokenAtPosition to getTokenAtPosition
Merge pull request #746 from Microsoft/classifiedSigHelp
Provide helpers for creating symbol display parts.
renamed getNodeAtPosition to getExactTokenAtPosition, added predicate parameter that will determine if token with end === position should be returned
Merge branch 'master' into classifiedSigHelp
Remove debugger statement.
Merge pull request #745 from Microsoft/singatureInfo
Address code review
enusre that child items is always set
Update README.md
set applicaple span correctelly
Merge pull request #749 from Microsoft/specInMarkdown
Addressing CR feedback
Properly support string-literal property names and escape external module names.
fixing formatting again...
Fixed a few of the code review suggestions
Merge branch 'master' into singatureInfo
respond to code review comments
Formatting fix
Fixing formatting glitch
Remove default setting of noResolve flag
Removing script tool copyright message
Language Specification in Markdown format
Merge branch 'selfReferencingFileError' of https://github.com/chrisbubernak/TypeScript into selfReferencingFileError
Added error checking for references that reference the same file along with 3 tests,
Merge pull request #743 from Microsoft/cleanup
fixed some tabbing issues
Added error checking for references that reference the same file along with 3 tests,
Switch signature help over to using display parts.  This allows for classified sig help on the editor side.
Merge branch 'master' into cleanup
Update comment text
remove empty lines
shim getSignatureAtPosition using the new signature help interfaces
Respond to code review remarks
Merge pull request #732 from Microsoft/notShowModuleNames
Merge branch 'master' into notShowModuleNames
Address code review : add test case for inside ambient module declaration and single quote
Do not use 'foo' in tsc help message
Merge changes after signature help work
Merge branch 'master' into cleanup
Merge pull request #741 from sparecycles/fix/spelling-collistion
spelling: Collistion -> Collision
Fix failure in tests.
remove unused file
Switch comments to jsdoc
Merge pull request #737 from Microsoft/instanceof_cascading_errors
Merge pull request #726 from Microsoft/sigHelp
Merge pull request #736 from Microsoft/unary_operators_strict_mode
Fix typo in comments
Merge branch 'master' into sigHelp
Merge branch 'master' into navbar
Merge branch 'master' into navbar
Merge pull request #731 from Microsoft/acknowledgeTrivia
Address PR feedback for trailing commas
move ClassificationTypeNames around
switch textChange to interface
switch RenameInfo to interface
Switch public types to interfaces
do not report cascading errors in instanceof operator
use operator token when checking unary expressions in strict mode
Change NodeArray to have a hasTrailingComma property instead of an OmittedExpression
More cleanup and PR feedback
Patch up signature help after the bug in getTokenAtPosition
Address code review
Remove debugger flag
Update comments
remove external module from showing up on completion list
More PR feedback
Merge pull request #708 from Microsoft/classifiedQuickInfo
Code review feedback.
Respond to PR comments
Changed wording for unit tests.
Added test cases for multiline comments in line classification.
Added unit test for property access colorization.
Merge branch 'master' into classifiedQuickInfo
No longer create an entire scanner when performing line classification.
Simplify writing code.
Process unterminated multiline comments the same way we handle multiline strings.
Merge pull request #730 from Microsoft/protectedConformanceTests
fix comment text
Code review feedback.
Use the 'skipTrivia' scanner flag for lexical classification.
Fixed up colorization tests.
Update README.md
Update README.md
Update README.md
Added protected conformance tests
Merge pull request #724 from Microsoft/braceYourselves
Merge branch 'master' into braceYourselves
Added test case for adjacent braces.
Use push.apply to push multiple elements.
Inlined 'getMatchSpans'.
Add undefined check for tokenPrecedingSpanStart
Add test for nested calls
Replace native division with integer division
Throw when cancellation is requested
Enable parameter help tests
Don't return list index when looking for the argument list
Fix errors in signatureHelp.ts
Refactor signature help into separate file
Initial draft of getSignatureHelpCurrentArgumentState
Minor fixes in getSignatureHelpItems
Disable failing tests for generics and overloads
Refactor collectCandidates and add type parameters to signature display
Fix name printing in signature help
Fill out more of the SignatureHelpItem and SignatureHelpParameter structures
Further changes to parser for OmittedExpressions, and make checker resilient to them
Add an OmittedExpression for trailing commas in calls
Create SignatureHelpParameters
Add applicableSpan to SignatureHelpItems
Revert to old behavior for forEach
Remove TrailingCommaBehavior in favor of two boolean parameters
Begin packaging of signature help items
Extract findListItem from smart indenter
Move findPrecedingToken to ServicesSyntaxUtilities
Start testing signature counts and adjust some syntactic computations
Semantic filtering of candidate signatures
Signature help present with completed signatures
Enable fourslash signature help tests
Update LKG
Merge branch 'release-1.1'
Update LKG
Merge pull request #711 from Microsoft/returnExitCode
Merge branch 'master' into returnExitCode
Moved brace matching code into services.ts
Condition the custom serialization on the existance of JSON
Merge pull request #710 from Microsoft/JSONInEmitter
respond to code review comments
Addressed code review feedback.
Properly escape strings when serializing source maps
Addressed CR feedback.
Moved old fourslash test for brace matching over from fourslash_old.
Fixed fourslash bug for adjacent braces, courtesy of @mhegazy.
Moved to new tree for brace matching.
Address code review
Merge pull request #713 from Microsoft/JSONInLocaleFix
Show documentation comments in quick info.
Add support for getting the doc comment from a symbol.
Rename Comment->CommentRange.
Include the values of constant enums in quick-info.
Provide capability to ask the checker what the constant value of an enum member is.
Merge branch 'master' into classifiedQuickInfo
Merge pull request #701 from Microsoft/fidelityParser
Remove unnecessary indent.
Updated test baselines.
Updating baselines.
Merge branch 'master' into fidelityParser
Update quickinfo formatting.
Tweak the appearance to match the old managed LS behavior.
More quick info work.
Address code reviews
Update names.
condition the use of locale on the exitance of JSON
Hook up quick info shims.
Flash out QuickInfo implementation.
Return exit code
remove commented out code
add explict serialization logic for source maps to avoid using JSON
Support getting symbolDisplayParts for types as well as symbols.
Merge pull request #700 from Microsoft/updateLangSpec
Merge pull request #688 from Microsoft/protectedMembers
More tests for protected members
External module items now display their base file name in quotes.
Place symbolToString above symbolToDisplayParts.
Clean up symbol writing API.
Initial work on classified quick info.
Merge branch 'assertOnMissingNodes' into release-1.1
Minor edit to test.
handle cases where we have a node with width 0 when reporting grammar errors
Accepting new baselines
Improved error messages for private and protected member access
Removed duplicate 'getNodeModifiers'.
Port fidelity changes to github.
Adding protected members to Language Specification
Merge branch 'master' into navbar
Merge pull request #699 from Microsoft/reportDeclarationEmitErrors
Merge branch 'master' into reportDeclarationEmitErrors
Clarify comments
Merge pull request #689 from Microsoft/todoComments
respond to code review comments
Address code-review comments
Add fourslash testcases
Fix language service; doesn't capture declaration emit errors
Added helper function for creating child items.
Remove unused third party tools
Merge pull request #696 from Microsoft/format_code
add 'skipTrivia' parameter to scanner
Merge pull request #692 from sparecycles/contrib/fix-array-doc
fix documentation for {Ui,I}nt{8,16,32}Array
Finally using new tree.
Changed order of count check.
Amended test for quoted module names.
Renamed file.
Added fourslash tests.
respond to code review comments
Merge pull request #676 from Microsoft/completionFixes
respond to code review comments
Merge branch 'master' into protectedMembers
Addressing CR feedback
Re-added tests.
Fixed issue where parser improperly parses a function declaration with no identifier.
Merge pull request #682 from Microsoft/getRenameInfo
Merge branch 'master' into getRenameInfo
Adding rename tests.
Merge branch 'master' into completionFixes
Merge branch 'release-1.1'
Address CR feedback.
Moved nav bar functionality into more 'functional' style.
move helper functions inside the scope of the main function
move getTodoComments to the new tree
Merge pull request #687 from DickvdBrink/unused-vars
Update LKG
Remove some unused variables
Switch to createCompilerDiagnostic for an invalid root file
Support for protected members in classes
Merge pull request #650 from Microsoft/getEmitOutput
Merge branch 'master' into getEmitOutput
Fix space formatting
respond to code review comments
Merge pull request #677 from Microsoft/navigateTo
Merge branch 'master' into navigateTo
Minor fix on checking getEmitOutputWriter
Change getEmitOutputBaseline
Update checking for semanticErrors and fix spelling
Implement the getRenameInfo language service entrypoint.
Respond to code review comments
Merge branch 'master' into completionFixes
respond to code review comments
Add getCurrentDirectory and getDefaultLibFilename into interface for host
Merge pull request #671 from Microsoft/new_smart_indentation
resolve merge conflicts
merge with master
use NodeFlags.AccessibilityModifier in places where we need NodeFlags.Private | NodeFlags.Public
Add implementation of getNavigateToItems based on the new compiler
Remove concatenation of syntacticErrors instead return immediately if encountering any error
Merge pull request #672 from Microsoft/getSyntacticClassifications
CR feedback.
split 'find' function into 'find' and 'findRightmostChildNodeWithTokens'
Classification tests.
Adding classification tests.
address CR feedback: renames, handle smart indentation in type argument lists in type references
Merge branch 'master' into getOccurrencesLoopBreakContinue
Spelling corrections.
fix typo
disable tests that are dependent on QuickInfo and Signature help work
Update tests to remove other type paramters from constraints
Allow built in types to show up in the completion list as keywords instead of types
remove debug statements from tests
Do not colorize a keyword following an identifier.<newLine> as it is likely an error scenario as the user is typing
Add better error recovery logic for cases with line ending with "id." followed by a declaration e.g. "class id"
Change test untill we have filtering on location
Short-circuit semantic operations within with blocks
add basic support for contextual object literal completions
Use scanner APIs to identify if a display name is valid completion entry
Support enum and module completions
Filter private mebemers in class completions
expose getAncestor method
do not consider keywords tokens for compleation reasons, to allow completion on this and super
handel completion on missing symbols correctelly
Get correct kind for generic symbol completion entries
Enable completion on expressions
Enable completion fourslash tests
addressed CR feedback: use isDeclaration from parser, drop 'useTabs' check
Fix test baseline
Merge pull request #428 from Microsoft/tupleTypes
Merge branch 'master' into tupleTypes
Add a test to make sure types are being checked for privates
Check that private properties originate in the same declaration
address CR feedback
Adding semantic classification.
Add support for syntactic classification.
update JakeFile
when looking for a start node consider only nodes that can contribute to indentation
minor code cleanup
Adding baseline that was missed from previous merge.
Merge pull request #668 from Microsoft/harnessMessageConsistency2
Merge pull request #659 from Microsoft/functionTypeLiteralsNeedArrows
Added error 'prologue' to each error baseline.
remove singleTokenIndenter.ts
Add getEmitOutput baselines
Fix declaring function for writer and setting writer to undefined
Merge pull request #665 from Microsoft/circularTypeInferenceErrors
Addressed CR feedback.
Fix getEmitOutput to only output one file except when 'out' flag is specified. Add testcases
Improved error messages
Report circular type inference errors with -noImplicitAny
use actual indentation if possible
added support for smart indentation in the middle of list items, updated test baselines
added support for smart indentation in the middle of list items, updated test baselines
added handling for smart indentation in the beginning of list items, updated test baselines. TODO: smart indentation in the middle of list items (2 failing tests)
Harness now prints category and code when running tests.
Fixed bug where function type literals may omit their '=>'.
Added tests.
Build the declaration files generated in the rwc run to make sure there arent any errors
Merge pull request #649 from Microsoft/propertyAssignmentWidening
update test baselines
Merge pull request #653 from Microsoft/getOccurrences
Merge branch 'master' into getOccurrences
Merge branch 'master' into getOccurrences
Merge pull request #639 from Microsoft/getOccurrencesConstructor
Update package.json
Update LKG
Simple fixes for the tests
initial revision of SmartIndenter (TODO: indentation in list items)
added optional 'sourceFile' argument to methods of Node to avoid unnecesary tree walk
Merge branch 'getOccurrences' into getOccurrencesLoopBreakContinue
Simplified ownership code for continue/break statements.
Minor CR feedback addressed.
Merge pull request #651 from Microsoft/testForDiagnosticBounds
Fix the error spans issue
Add asserts for bounds on diagnostics
Remove getCurrentDirectory and getDefaultLibFilename from LanguageServiceShimHost
Fix spelling
Remove getDirectory from LanguageServiceShimHost
Merge from master
Change getCurrentDirectory and getDefaultLibname from passing around function to its final value
Minor spelling and spacing fix
Add getEmitOutput and update call to getCurrentDirectory
Adding a comment
Fix widening in object literal property assignments
Modified tests and added a test for labeled continues in a switch block.
Check for repeating meta-data flag.
Update testcases to use baseline
Chage test framework from manual comparing the result to using baseline; Add compilerOptions into fourslash
Fix spelling
Update getEmitOutput test files to use new meta-data flag
Fix spelling
Add meta-data flag name to modify compilationSettings
Move checking semantic diagnostics into emitFiles function rather than getEmitOutput
Change getCurrentDirectory and getDefaultLibname from passing around function to its final value
Add check if the compilationSetting object hasOwnProperty before add the property to TypeScriptLS object
Remove enableSingleOutputFile boolean and use singleOutputFilename to check if singleOutputFile is specified
Expose function shouldEmitToOwnFile to be called in services.ts
Minor spelling and spacing fix
Add getEmitOutput test files
Update fourslash for getEmitOutput
Add getEmitOutput and update call to getCurrentDirectory
Add old test files that use getEmitOutput
Make getCurrentDirectory and getDefaultLibFilename invocation in management side
Merge pull request #640 from Microsoft/contextualSignatureInstantiation
Extracted 'break'/'continue' aggregation into common helper function.
Merge pull request #638 from Microsoft/qualificationOfMethods
Merge pull request #639 from Microsoft/getOccurrencesConstructor
Accepting new baselines
Fix contextual signature instantiation during type inference
Implemented getOccurrences for 'constructor' keywords.
Changed logic for break/continue search in switch statements and loops.
Implemented getOccurrences for for/for-in/while/do-while loops and their breaks/continues.
Merge pull request #632 from Microsoft/getOccurrencesSuperThanksForAsking
Merge pull request #630 from Microsoft/truncateTypesInErrors
Merge branch 'master' into truncateTypesInErrors
Addressed CR feedback.
Fix the condition for qualifying the symbol of methods and functions in the enclosing declaration
Separated 'super'/'this' keyword searching to simplify logic.
remove unused file
Update LKG
Adding noErrorTruncation compiler option
Merge pull request #635 from Microsoft/blobConstructor
add constructor paramters to Blob
Disabled findAllRefs for 'this'/'super'.
Merge pull request #602 from Microsoft/noImplicitAnyOnCast
Merge pull request #600 from Microsoft/getOccurrencesThis
Truncate long types in error messages
Added tests for getOccurrences on super.
Merge pull request #621 from Microsoft/specConformanceTests
Merge branch 'master' into specConformanceTests
Merge pull request #627 from Microsoft/updateLangSpec
Basic implementation without tests for findAllRefs/getOccs for 'super' keywords.
Merge pull request #626 from Microsoft/typoscript
Updating Language Specification
Corrected some spelling/grammar issues.
fix typo
Merge branch 'master' into noImplicitAnyOnCast
Merge pull request #623 from Microsoft/shadowedModuleNames
Merge pull request #624 from Microsoft/updateLangSpec
Fixing a few issues in Language Specification
Corrected codegen to support shadowed module names.
Merge pull request #618 from Microsoft/typeAssertionErrors
Conformance coverage for spec change #589
Merge pull request #620 from Microsoft/incrementalParsingBug
Fix incremental parsing bug due to non invalidating cached data in nodes.
Properly report errors for failed type assertions
Merge pull request #609 from Microsoft/HTMLElementIndexer
Merge branch 'master' into noImplicitAnyOnCast
move getWidenedType* functions inside the getWidenedType function scope
respond to code review remarks
Addressed CR feedback.
Merge pull request #610 from Microsoft/circularFunctionExpressions
Merge pull request #599 from Microsoft/emitDeclarationWithNoResolve
Merge branch 'master' into tupleTypes
Merge branch 'master' into emitDeclarationWithNoResolve
respond to code review remarks and reverted tryResolveScriptReference to resolveScriptReference
Accepting new baselines.
Deferred type checking of function expressions to support circular definitions.
Add numeric indexer to HTMLElementCollection
Made a getThisContainer function.
Merge pull request #605 from Microsoft/quotesInDeclarationFile
Use double quotes in declaration file's reference path generation so that quotes in file name wouldnt affect reference resolution
add negative test for invalid references and declaration emit
Do not show noImplictAny errors when widening for a cast expression
Merge pull request #569 from Microsoft/collisions
Added fourslash tests for 'this' keyword findOccs/findRefs.
getRefs/getOccs support for 'this' keyword.
Merge pull request #593 from Microsoft/getOccurrencesReturn
Do not emit references in generated declaration files if the --noresolve flag was set. This fixes a crash in the compiler when generating declarations with /// reference and noResolve
Negative test cases for collision of export and require declaration names
Addressed more CR feedback.
Merge branch 'getOccurrences' of https://github.com/Microsoft/TypeScript into getOccurrences
Addressed CR feedback.
Merge pull request #581 from Microsoft/instrument
Merge pull request #597 from Microsoft/cacheFileLookups
Address CR feedback
Cache unsuccessful file lookups for improved performance.
Merge pull request #570 from Microsoft/linemaps
Fix typo in running the tests section
Update .gitignore
Merge pull request #588 from Microsoft/rwcImporter
Speed up RWC IO playback by removing unfound files from resolution candidates
Correctly handle zero-length test inputs
Merge pull request #561 from Microsoft/getOccurrencesIfElseIfElseIfElse
Merge pull request #493 from RReverser/patch-1
Fix typo in file name
Merge pull request #589 from Microsoft/updateLanguageSpec
Language Specification updated to version 1.1
Merge pull request #550 from Microsoft/deferredTypeLiterals
Merge branch 'master' into deferredTypeLiterals
increase the timeout for RWC tests
Import Definitlly typed unit tests into the RWC suite
Return undefined instead of null.
Fixes #492 Conflicts: 	src/services/services.ts
Merge pull request #572 from Microsoft/commentFormatting
Fixed the parenthesis around the expression around line indent calculation
Corrected linepos assignment
Handle missing files more gracefully; big perf gains in loggedIO
Add timestamp to capture files for better tracking
Correctly handle async calls; fix formatting
Add jake task for making instrumented tsc
Merge branch 'master' into deferredTypeLiterals
Fix the tab and indent calculation when formatting comments in the emitted output
Report error if exports or require is used for declaration name in external module
Handles all the line breaks in calculation of line-character position         lineFeed = 0x0A,              // \n         carriageReturn = 0x0D,        // \r         lineSeparator = 0x2028,         paragraphSeparator = 0x2029,         nextLine = 0x0085,
Utilize getContainingFunction in services.
Added tests for getOccs on return keywords.
Merge pull request #473 from Microsoft/getReferences
Merge branch 'master' into getReferences
Added getOccs support for return keywords.
Use isWhitespace in getIfElseOccurrences.
Merge pull request #562 from Microsoft/restrictUseOfSys
Update LKG
Merge branch 'master' into restrictUseOfSys
Added missing break statement.
Merge pull request #514 from Microsoft/overloadSignatureDeclaration
Added test case for broken if-elses.
Addressed CR feedback, no longer highlighting elseifs with comments between.
ensure that sys is not used outside tsc.ts
Merge pull request #554 from Microsoft/typeBaselines
Update baselines
Merge branch 'master' into typeBaselines
Added getOccs support for if/else keywords, and some tests.
remove unused file
Revert condition inside shouldWriteTypeOfFunctionSymbol
Don't use UseTypeOfFunction in typeWriter
Print Array as T[]
Print pure namespaces as unknown
Print type of super
Merge pull request #549 from Microsoft/getOccurrences_switchCaseDefault
Merge pull request #516 from Microsoft/pinnedComments
Update LKG
Removed assertion.
What's in a name anyhow?
Update type baselines
Addressed CR feedback.
Made 'isAnyFunction' more exhaustive as it should be.
Update baselines
Replaced ES5 functions with analogous core.ts ones.
Better coverage against function boundaries.
Merge branch 'master' into getReferences
Moved null-guards to appropriate places, added helpers.
Addressing CR feedback.
Handled function boundaries.
Merge branch 'master' into typeBaselines
Update baselines
Deferred resolution of object literal members to support recursive types.
Support for switch/case/default/break in getOccs
Added tests.
Fix undefined symbol name in error message
Made getOccs more resilient.
Implemented getOccsAtPos for try-catch-finally.
Beginning special casing for getOccurrencesAtPosition.
add new unit test for used and unused imports
add new unit test for getScriptLexicalStructure
Removed unused method.
Re-added fourslash tests, corrected failures.
Added trivial syntax case.
Merge branch 'master' into getReferences
Initial work on getOccurrencesAtPosition.
Adjust baselines after rebase
More type baseline changes
Baseline and harness changes
use Identifiers list from the parser to filter getReferences instead of bloomFilters
remove bloom filters
Ensure range for string literal references are within the quotes to ensure rename is successful
Support external module names correctelly
Implement getScope
Merge pull request #508 from Microsoft/printDiagnosticCodes
Emit pinned/tripleslash reference comments of elided module declaration
Emit pinned/tripleslash reference comments of ambient declarations
Emit pinned/tripleslash reference comments of interfaces
Emit pinned/tripleslash reference comments of signatures
Merge pull request #509 from Microsoft/emitLeadingCommentsForCurly
Merge branch 'master' into printDiagnosticCodes
Updated error reporting within harness to match that of tsc.
Merge pull request #456 from Microsoft/newLanguageService
Merge branch 'master' into newLanguageService
Correct the declaration emit for overload implementation if there is single overload signature
Made diagnostic lowercase.
Turned redeclaration into a string append.
Emit leading comments for '}' of the constructor block
Emit leading comments for '}' of the function block
Fix the compilerRunner when compiling resulting d.ts file when --out is specified
Emit error codes when reporting diagnostics.
Merge pull request #505 from Microsoft/newLineBetweenSourceFiles
Enable test case for declaration emit for multiple file emit scenario
Merge pull request #504 from DickvdBrink/fix-declaration-emit-time
Emit new lines between source files emit so that the file contents always start on new line
use isDeclarationOrFunctionExpressionOrCatchVariableName instead of isDeclarationIdentifier in the language service and remove unused functions
Merge pull request #495 from Microsoft/rwcRunner
Support getReferences on rightside of export assignment and import statements
Fixed the file map lookup to use hasOwnProperty
Merge pull request #502 from DickvdBrink/unused-var-parser
Merge pull request #499 from DickvdBrink/Debug-assert
Fixed TypeScript.declarationEmitGetAccessorFunctionTime having a wrong value
Remove some unused variables
Fix shouldAssert function this.currentAssertionLevel was always undefined
update getSymbolInfo
Merge branch 'master' into getReferences
respond to code review comments
Update LKG.
Merge pull request #452 from Microsoft/emitComments
Some minor changes as per code review feedback
Compiler test case for commit 0636a06
Baseline sourcemap record from rwc runner
Emit the error file contents and highlight it to show errors for rwc errors
Fix getReferences for labels
Simplify rwc runner to use the common functionality to get errors, js files etc as part of harness compilation
Use new tree to get Bloom filters
Merge pull request #482 from Microsoft/typeWriter
Use local source file text to record source map span start
Emit declarations and sourcemaps in rwc test runner
Fix the new sourceMapRecording correctly if the multiple files output to single js file and the file ends with interface definition
Emit the line, col information into the rwc runner error baselines
Update reference from tc.js to tsc.js
Support resolution of any part of the RHS of an import
Emit detached comments for constructor body
Emit detached comments for function body
Emit copyright headers before anything else in the sourceFile
Merge pull request #478 from sparecycles/fix/spelling
Include previous token trailing comments for parameters and type parameters as part of leading comments of them
spelling fix
Add bits in tokens to mark if they contain leading/trailing trivia.
Merge pull request #464 from Microsoft/typeWriter
Merge branch 'master' into typeWriter
Temporary fix for import case in getTypeOfNode
Address PR feedback
Update LKG.
Merge pull request #383 from Microsoft/diagnosticsCleanup
Merge branch 'master' into diagnosticsCleanup
Update LKG
Reassigned diagnostic codes.
Accept new typeWriter baseline
Merge pull request #405 from Microsoft/classifier
Merge branch 'master' into typeWriter
Merge branch 'master' into classifier
Clean up local state after the describe callback for each compiler test
Accept recent changes in typeWriter baselines
Baselines update after comment formatting pull request (#455) was merged
Merge pull request #466 from sparecycles/fix/checker-declaration
Merge pull request #455 from Microsoft/formatComment
Updates after merge from master
Support filtering references based on meaning
include inherited properties from base classes and interfaces in getReference results
add new test for getReferences on enums
support getReferences on properties and index access wiht numeric and string values
Support getReferences on contextually typed object literal properties
support getReferences on object literals
add support for getReferences on property string index access
Handel getRefrences for labels
add some debug methods
Add basic getReferences implementation
disable resolution for now
Enable some more tests
enable reference tests
expose utility functions
enbale getReferencesAtPosition
extract helpers
Indentation.
Rename certain parameters.
Remove unnecessary LS code.
Contextual typing of array literals is now based on the presence or absence of numerically named properties and doesn't directly test for tuple types.
Accepting new baselines after merge.
Merge branch 'master' into tupleTypes
baseline for typechecking --declaration
fix --declaration typechecking (complex case)
Merge branch 'master' into diagnosticsCleanup
Merge branch 'master' of https://github.com/Microsoft/TypeScript
Normalized path for localized diagnostics message map.
Simplify comment alignment logic
add rename localization messages.
Makes sure leading comments are emitting only once
Merge pull request #462 from Microsoft/missing_checker
Emit comments for expression statements
Fix json for text spans.
Emit comments for if statement
Emit leading/trailing comments of ifStatement
Emit leading/trailing comments for return statement Note the detachedComments and copyright headers comment emitting is not part of this change
Change marshalling form for indentation.
Add todo comment tests.
Fixed according to code review feedback
Stop referencing 'this' in functions.
Accept type baselines
Fix isTypeNode to not consider namespace accesses types
Remove problematic test (should be added back after issue #463 is fixed)
Fix test chainedImportAlias to use all of its file regions
Only give to typeWriter files that were part of compiled program
Add logic in checker for getting type of export assignments and imports
Adjust TypeChecker to have separate method for getApparentType
Print types for arbitrary expressions in typeWriter
Change getTypeOfNode to take an apparentType flag
Handle type declaration nodes
Add getTypeOfNode function to checker API
TypeWriter logic for identifiers
Make the harness invoke typeWriter
Modified the emitComment logic to handle emitting leading or trailing spaces depending on flags Leading comments have trailing separator while trailing comments have leading space This removes the extra trailing space in the trailing comments
Emit the new line before leading declaration comments in the declaration file if source code had it
Test cases for trailing comments for import declaration
create instance of the checker prior to making any types
Test cases for trailing comments for modules
Test case for trailing comment of enum
Test cases for trailing comments for class and constructor
Test cases for trailing comments for properties
Test cases for trailing comments for functions and methods
Test cases for trailing comments of accessors
Test cases for trailing comments of object literal
Trailing comment tests for parameters, fixes the trailing // comments and parameter indentation
Merge pull request #460 from Microsoft/noArrowLookahead
Tailing Comments for var declarations
Start leading comments on new line if the comment starts on different line as node
Merge pull request #450 from Microsoft/fullTypeCheckFlag
merge with mastr
Removed lookahead for simple arrow function expressions.
defer creation of fullTypeCheckChecker
Revert "Merge branch 'master' into newLanguageService"
Merge branch 'master' into newLanguageService
Merge pull request #459 from Microsoft/revertLS1
Revert "Merge pull request #444 from Microsoft/newCompilerLS"
Initial port of the new language service work.
Emit space before emitting trailing comments
Fix the trailing comments for variable declaration and function/arrow expressions
Some refactoring as suggested in code review feedback
Align the multiline comments in the generated outputs by retaining its position relative to the first line in the comment
Merge pull request #453 from Microsoft/reportMemoryUsage
Making sys.getMemoryUsage optional.
Include memory usage in -diagnostics report
Emit trailing comments
Fix the indent for the parameter and typeparameter emit in .d.ts file
Declaration comments for parameters in .d.ts file
Declaration comments for call, constructo and index signatures in .d.ts
Declaration comments for function declarations in .d.ts
Declaration comments for accessors in .d.ts
Declaration comments for the variable declaration in .d.ts
Declaration comments for the property declaration in .d.ts
Declaration comments for the interface declaration in .d.ts
Declaration comments for the class declaration in .d.ts
Fix the compiler runner to handle comments flag to determine if it is --removeComments
Declaration comments for the type parameter declaration in .d.ts
Declaration comments for the enum member declaration in .d.ts
Declaration comments for the enum declaration in .d.ts
Declaration comments for the module declaration in .d.ts
Write JsDoc comments for ImportDeclaration in .d.ts file
Comments for import declaration
Comments for module declaration
Emit commens for enum and enum members
Emit comments for class and constructor
Emit comments for properties
Emit comments for function and method declarations
Emit comments for accessors
Emit the property assignment comments of the object literal
Emit leading and trailing comments for parameter
Emit comments in the javascript code if --removecomments is not specified
Merge pull request #381 from branch 'remote/privacyErrors'
Merge pull request #411 from 'origin/runners'
Merge pull request #410 from Microsoft/chainedImport
Merge pull request #412 from Microsoft/exportImport
Merge pull request #413 from Microsoft/inaccessibleAliasEntity
Remove unnecessary sort call in alias declarations that get written
Merge pull request #414 from Microsoft/typeOfFunctionAndStaticFunction
Merge pull request #431 from Microsoft/cannotName
added comment to fullTypeCheck parameter
Merge pull request #444 from Microsoft/newCompilerLS
Accepting new baselines.
Merge branch 'master' into newCompilerLS
added fullTypeCheckFlag to TypeChecker
Merge pull request #448 from DickvdBrink/ignore-file
Add coverage folder to gitignore file
Adding error message for empty tuple types.
Addressing CR feedback.
Merge branch 'master' into classifier
Merge pull request #427 from sparecycles/fix/reference-static-regex
Merge pull request #443 from Microsoft/fourslash
update test
Disable test as it needs resolution which the test harness does not support yet
remove fullTypeCheck flag as it may lead to missing errors if we make any requests with fullTypeCheck=false and we cache any result
Port over changes to the ScriptSnapshot API from the languageService-v2 branch.
support outlining for arbitrary blocks
Merge pull request #437 from Microsoft/flush_stdout
Removed duplicate diagnostic.
Merge branch 'master' into diagnosticsCleanup
Addressed CR feedback, removed NoPrefix messages.
baseline update
Make sure fourslash tests are running
Ensure scriptsnapshot is set when creating a source file
Merge pull request #436 from Microsoft/improvedArrayErrors
Merge pull request #430 from Microsoft/outlining
Update LKG.
use writeSync instead of stdout.write to make sure that stream is flushed
Merge pull request #421 from hn3000/fixTypo-sourceMap
Rearranging members of Array<T> to improve error reporting.
switch to getStart
adressed CR feedback: use pos instead of full start
added tests for <reference path="" static='' />
Consolidate logic to use the lib in one location in the tests
switch to using OutliningSpan instead of TextSpan to better support language service
Addressing CR feedback, adding baselines.
Make changes to report error if the type used from external module cannot be named Adds test cases too
enable outlining atop of new compiler
Adding support for tuple types (e.g. [number, string])
fix: /// <reference path="..." static='true' />
Merge pull request #415 from ivogabe/regexp
fix typo: sourcemap -> sourceMap
Add optional index and output to String.match
RegExpExecArray should extends Array<string>
Merge pull request #409 from Microsoft/extractComments
Merge pull request #408 from Microsoft/globalArrayType
During qualification if we are looking in value space, the left qualifier meaning is also value
Removing unused variable.
clean up tests
revert changes to classify a keyword as an identifier if the last token is keyword
Adding getLeadingComments and getTrailingComments methods to scanner.
Use typeof function in the declaration emitter instead of unwinding first level
Simplifying createArrayType recursion check. I made these changes during some unrelated experiments but I'd like to keep them.
Report error if the entityname reference in the import declaration is using private module
Merge pull request #386 from Microsoft/tsc
Check for the accessible symbol from exported import
Merge pull request #406 from DickvdBrink/typo-fix
Merge branch 'master' into tsc
Fixed typo soruceFile -> sourceFile
Add some huristic optimization to not colorize a keyword if precceded by a dot or a keyword. this should handel cases for "a.var" or "module string { }"
add unterminated multiline comment classification tests
Enable unit tests for DocumentRegistry
remove unused folders from unitest runner
move formatting unit tests to a diffrent folder
delete unused tests
Enable clorizer unit tests
remove unused property
wire classifier to use new compiler implementation
consistentlly compute the length of an unterminated multiline comment
Update the project runner to emit errors in more readable way
Enable project runner to compile generated .d.ts files Uncovered bug in quoted .d.ts compilation
Merge pull request #395 from DickvdBrink/code-style
Recovered deleted, renumbered existing, reworded some.
Removed more unused diagnostics.
Removed unused diagnostics.
Removed duplicate messages from diagnosticMessages.json.
Fix the incorrect declaration file path during d.ts file compile in the compilerrunner
Removing bug numbers from the testcases which are fixed and adding declaration generation in few testcases
Merge pull request #385 from Microsoft/octal
Simplify checking for octal literals in parser
Emit the declarations for the chained import usage in the export assignment
Merge branch 'master' into octal
Added missing semicolons
Address feedback
Merge pull request #378 from Microsoft/inherited_overloads_with_specialized_signatures
fix comment
adjust perftc to match the most recent implementation of createSourceFile
Handle sys.exit in perftc
rename tc.js to tsc.js
Merge pull request #377 from Microsoft/bom
Merge branch 'master' into bom
fixed build breaks in perftc
Report privacy errors for accessors
Add test for octal literals in es3 strict mode
Error on octal literals in ES5 and strict mode
Add es5 directive on scanner es5 tests
Scan octal literals
Report privacy errors on return types
Report privacy errors on parameter types
Merge pull request #367 from Microsoft/theDisintegrationOfThePersistenceOfMemory
Test case for the privacy check of variables and properties during declaration emit
Ambient module declarations (exception import declaration) are visible
rename test
Style and comments.
change name of the flag to emitBOM
do not reorder signatures from derived and base types
Addressed code review feedback.
Test baselines after asynchronous alias declaration writing
Emit unexported aliases that need to be emitted to .d.ts to make correct result
Test baselines because of change
Merge branch 'master' into bom
Merge pull request #373 from DickvdBrink/filename-casing
make the BOM visible in the test output
Add tests for generateBOM switch
Merge pull request #351 from Microsoft/wontYouPleasePleaseHelpMe
Report errors on properties and variable type visibility Fixes #69
Merge pull request #161 from Microsoft/privacyErrors
add generateBOM switch
Added more comments and todos as per code review feedback
Remove ByteOrderMark
Rename lib.scripthost.d.ts to lib.scriptHost.d.ts
Fixed memory leak from '--watch' flag.
Perform an explicit return just in case sys.exit fails.
Merge pull request #365 from Microsoft/extensionlessReferences
Support extensionless <reference> comments. Fixes #344.
Merge branch 'master' into wontYouPleasePleaseHelpMe
Merge pull request #359 from Microsoft/cleanup
Explicitly supply generic argument for 'compareValues'.
Fixed up duplicate diagnostic.
Addressed code review feedback.
Wire cleanupSemanticCache
Merge pull request #358 from Microsoft/uptodatecheck
respond to code review comments
Add uptodate checks for program object to avoid recomputation if not needed
Merge pull request #262 from Microsoft/trylessCatchesFinallyParseNicely
Update check for syntax tree existance
Merge pull request #326 from Microsoft/getDefinition
Merge pull request #357 from Microsoft/specialized_signatures
Merge branch 'master' into getDefinition
add missing semicolons
fix misplaced brackets
fixed check for call\construct signatures in interfaces
Merge pull request #355 from Microsoft/pullContextualTypes3
Merge branch 'master' into getDefinition
Merge pull request #356 from DickvdBrink/missing-semicolon
Change variabel names: * documentsByName to sourceFilesByName * getSymbolOfIdentifierLikeNode to getSymbolInfo
Code style: Missing semicolons
Revert "remove documentsByName"
Consistently record contextual types in function expressions. Removing check that would guard against recording contextual type. The NodeFlags.ContextChecked flag already protects against assigning more than once.
adapt to changes after merge
Merge branch 'master' into getDefinition
undo moving unknownSymbol to global
Got rid of that cscript-breaking comma.
remove documentsByName
Style and comments.
Fix the incorrect error reporting and declaration file emit for the type parameter constraint of private methods Also incorporates code review feedback
rename values named document to sourceFile
Consolidate Document and SoruceFile
Merge pull request #350 from Microsoft/pullContextualTypes2
Fix duplicate getTypeOfExpression function.
Merge pull request #330 from Microsoft/pullContextualTypes
Addressing CR feedback.
Merge pull request #349 from Microsoft/fixBrokenCScript
Removing trailing comma that breaks cscript.exe.
Addressing CR feedback. checkImplicitAny now returns void.
Merge pull request #333 from Microsoft/fixContainerList
Merge pull request #324 from Microsoft/watcherIardlyKnowEr
Merge pull request #335 from Microsoft/export_assignments_on_links
Minor edits, no longer release 'program'
Changed messages, got rid of 'oldProgram'.
Merge pull request #337 from Microsoft/LibFormDataFix
Update LKG
Fix #314: SourceBuffer.appendBuffer() is missing overload for ArrayBufferView param in lib.d.ts
Fix #225: Incompatible FormData constructor between W3C specs
Implemented --help.
Fixed diagnostic generator; added messages.
update test to add true and false values
Add new go to def test
Make goto def jump to labels across function boundries
move identifier-like node handleing (e.g. super, this, string property access etc..) to the checker
Adding test output file.
Adding regression test for #325
support goto def on object literal properties
Add timeout for CI server and switch to min reporter since dots are mostly useless there
Use compiler directly in fourslash runner so we can avoid repeated compile overhead
Fix compile errors in fourslash tests
Merge pull request #334 from Microsoft/removeDebuggerStatements
Add new GotoDefinition tests
move exportAssignSymbol to symbolLinks
Add support for goto def on external module name
Remove debugger statements from fourslash tests
Update getSymbolOfIdentifier to ensure we are gettting the alas symbol in both type and value positions
Properly build container list in binder. Containers are added to container list only if they aren't already on the list. Fixes #325.
Merge pull request #331 from Microsoft/capture_this_in_constructors
Fix typos
emit this capturing as a first action in the constructor
Merge pull request #328 from milkisevil/array-buffer-slice
Introduced fullTypeCheck flag. checkFunctionExpression only type checks function body if fullTypeCheck is true.
Added ArrayBuffer.slice() to extensions.d.ts
Changed watchFile callback behavior.
Addressed code review feedback.
Wire getDefinitionAtPosition using the new compiler implementation
Merge pull request #303 from Microsoft/ls
More changes to address code review comments
Merge branch 'master' into ls
Accepting new baselines. Previous commit fixes overly aggressive -noImplictAny reporting. In the test case the source of the error is the 'getAndSet' property that implicitly gets type any. The fact that the setter then gets type any isn't actually an error.
Restructuring and cleanup. Changed binder to record catch clause instead of catch variable as symbol declaration. Restructuring of getTypeOfVariableDeclaration and getTypeOfVariableOrParameterOrProperty methods. Restructuring of checkFunctionExpression method.
Support the '--watch' compiler flag.
Merge branch 'master' into trylessCatchesFinallyParseNicely
Merge pull request #320 from Microsoft/slashInCharClass
added test for skipped node case
Merge pull request #317 from Microsoft/order_of_overloads
addressed CR feedback: changed error message
Fixed error when parsing slashes in RegExp literals.
update LKG
disallow statements between overloads
Respond to code review comments: * Change comment to say "noresolve=false" in shims.ts https://github.com/Microsoft/TypeScript/commit/05eeba5bc95f9a39ceb9c17b5674ed7135d74aed * Switch newline to "\r\n" https://github.com/Microsoft/TypeScript/commit/9395eeaedbb4279480c306f88e7916fa9694de31 * Use hasOwnProperty for Map types https://github.com/Microsoft/TypeScript/commit/212c18460281cac5b5be5239d45f7d04212f62d8 * Switch "s" to "S" in typescriptServices.ts filename https://github.com/Microsoft/TypeScript/commit/9061e58dffbeaf3f72cee1c6ca6d8fc0b98b1ea5 * Change method names in Node to be more detailed
Merge pull request #304 from Microsoft/likeaversion
Pull model for contextual types. New baselines reflect a couple of unrelated bug fixes.
Moved error checking for command line options around.
Merge pull request #273 from Microsoft/es3HatesTrailingCommas
Accept object literal commas in ES3, preserve in ES5.
update error positions after rebase
Use correct casing for file references
Print version number for --version.
react to changes after rebase
remove unused interface
enable fourslash tests by default
Enable passing fourslash tests
enbale fourslash tests
enable formatting tests
delete unused file
move failing tests to old
move todoComment tests to old for now
remove unused methods
Change services output file name to typescriptservices.js
Add missing getNewLine method to test implementations of CompilerHost
remove unneded ts. qualifiers
Fix noimplicitany issues
switch document to an interface
move DocumentRegistry to an interface
remove _ prefix when applicable
merge completion helpers in services.ts
merge keyword completions in services.ts
Move updated code to the ts namespace
remove the I prefix from interface name
Add Logger definition to services.ts
move logInternalError to where it is used
Switch classes to interfaces
reorganize definitions
remove some more unused files
consolidate all services in one file: services.ts
clean up coreServices
Switch classifer to a function
remove unused diagnostics interfaces
Clean up code and types in typeScriptServices.ts
remove the 'I' prefix from interface names
only expose needed types
move TypeScriptServicesFactory to shims.ts
some more cleanup
switch some more classes to interfaces
Remove the "I" prefix from interface names
Switch LanguageService from a class to a function
Remove unused type
Delete unused files
Move ByteOrderMark to services
remove unused files
use Map instead of IIndexable
remove dependency on settings
Switch some more classes to interfaces
use Map instead of StringHashTable
wire in getCompletions
Ensure SimpleArrowFunctionExpression has a NodeArray as its paramter as ForEachChild expexts that
wire quick info
Do not use noResolve with the LS
add module to defaults, and cleanup document management
Change classes into interfaces
cleanup
push newline to compilerhost instead of using sys directelly. This allows the language service to set it, as sys is not defined in language service scenarios
initial change
Merge pull request #256 from Microsoft/ambientAccessorErrors
Update LKG
No longer emit trailing comma on object literals.
Merge pull request #197 from Microsoft/locals_exports
Merge pull request #264 from Microsoft/errorOnHiddenModuleImport
Merge pull request #253 from huerlisi/patch-1
Simplified error recovery by just using 'parseTryStatement'.
Error when importing shadowed internal module. Fixes #73.
Added tests for missing 'try' parsing
Gracefully handle 'catch' and 'finally' blocks without a preceding 'try' block.
Merge pull request #252 from Microsoft/array_symbol_links
Merge pull request #259 from Microsoft/canParseSemicolon
comments updated
Merge pull request #260 from Microsoft/exportAsgnModifiers
Merge branch 'master' into canParseSemicolon
Merge branch 'master' into exportAsgnModifiers
Increase test timeout to try to prevent occasional spurious Travis-CI failures
added comments
localize special case (globalArrayType === undefined) in getTypeFromArrayTypeNode
Disallow modifiers on export assignments (fix #164)
Remove isSemicolon (fix #200)
Merge pull request #255 from Microsoft/forInError
Merge branch 'master' into forInError
Merge pull request #257 from Microsoft/untyped
Update error message to be more consistent with others
Fix up comment about bug #236 in checkCallExpression
Gracefully handle accessor declarations in ambient classes.
Merge pull request #249 from Microsoft/setProcessExitCode
Improve the error in a 'for in' statement
Typo fixed in CONTRIBUTION.
use symbol links to access global array type
use getEffectiveDeclarationFlags to get Export flag
Properly set exit code for process. Supercedes #246. Includes provisions for buggy behavior of WScript.Quit.
Merge pull request #226 from sparecycles/contrib/node-modules-path-4-mac
Merge pull request #230 from maxdeepfield/patch-1
Merge pull request #242 from Microsoft/argumentTypeErrors
Merging with master. Accepting new baselines (not sure why this wasn't already done).
Merge branch 'master' into argumentTypeErrors
update comments
Addressing CR feedback.
Merge pull request #203 from Microsoft/arrowLookAhead
Merge branch 'master' into arrowLookAhead
Addressed code review feedback.
Merge pull request #215 from Microsoft/labelledStatements
Merge branch 'master' into labelledStatements
Address feedback
Fix token once more
merged with upstream
Trying different after_script command for code climate
Fix Code Climate token again
augment check for colliding declaration spaces
check groups of local symbols
Better error messages in function calls. Fixes #93. This is an evolution of #220.
Use dot reporter for code coverage so it doesn't overflow Travis-CI's log limit
Fix Code Climate token
Turn on Code Climate integration
Fix minor formatting issues
Merge pull request #217 from Microsoft/strict_mode
Merge remote-tracking branch 'origin/strict_mode' into strict_mode
updated test baselines
added comments
update check for object literal properties according to ECMA spec
enabled strict mode
Add interface LabelledStatementInfo
added comments
Add tracking for labelled statements, and errors on labelled jumps
fix node_module path in Jakefile (mac too)
missing semicolon fix
Make sure we delete projects tests baselines on errors in jake
Add error handler to better debug issues when jake launches external processes like mocha
Merge pull request #223 from Microsoft/linuxTestFixes
More cleanup
Cleanup
update check for object literal properties according to ECMA spec
Add consumption points and error reporting for labelled statement errors
Merge pull request #199 from Microsoft/reservedWordsInTypeQueries
enabled strict mode
Remove inModuleBody
Improved "certainty" when parsing arrow-function-lookin' expressions.
Add errors for break and continue statements
Track control flow contexts in the parser, and give errors for break, continue, return
Merge pull request #176 from Microsoft/errorOnWithStatement
Merge branch 'master' into errorOnWithStatement
Merge branch 'master' into errorOnWithStatement
Covered more cases for arrow functions omitting arrows.
do not propagate property name as name for function expression
Addressing CR feedback. Making allowReservedWords parameter of parseEntityName non-optional.
Be less clever, just use \r\n for newlines by default, tests can opt into different newlines, fix one more file casing test
Make a test that explicitly sets newline type
Trying to fix newlines in sourcemap baselines for *nix
Renames of existing baselines with casing to match the test files
Delete some baselines so we can rename them with different casing for Linux
Removed parentheses around arrow function parameters.
Improved lookahead for arrow functions.
Allow reserved words in type queries. Fixes #181.
Merge pull request #147 from Microsoft/noReturnExpression
Type check the expression of the 'with' statement
Initial work to enable Travis-CI support
Merge pull request #196 from Microsoft/indexSignatureTypeInference
check groups of local symbols
Aligning index signature type inference with assignability rules. Type inference now supports inferring from string index signatures to numeric index signatures. Fixes #167.
Merge pull request #175 from Microsoft/contextualSignatureInstantiation
Addressing CR feedback. Adding comment to explain source type instantiation. Adding a test case.
Merge pull request #180 from DickvdBrink/no-global-modules
Fixed misleading comment
Add node_modules\.bin to path. Fixes browserify task when browserify isn't installed globally.
Give a semantic error on with statements
Merge pull request #173 from Microsoft/singleDefaultClause
Changed error message for annotated functions lacking return statements.
Changed check on annotated functions/getters to only look for return statements.
Minor renaming.
Removed TODO relating to the task I just fixed.
Complain when a non-void/any function lacks a return expresson.
Added contextual signature instantiation during type inference. Fixes #88.
Merge pull request #169 from DickvdBrink/browser-test-patch
Changed error spans for duplicate default clauses, added tests for it.
Added checking for switch statements with multiple default clauses.
Fix browser tests not working when not cloned in TypeScript directory
Addressing CR feedback.
Accepting baselines.
Improving code and addressing code review feedback. Binder now builds more generally useful linked list of all container declarations. Emitter uses original spelling when creating unique local container names.
Ensuring local module names are unique in emit. Fixes #41 and #42.
Improving code and addressing code review feedback. Binder now builds more generally useful linked list of all container declarations. Emitter uses original spelling when creating unique local container names.
Ensuring local module names are unique in emit. Fixes #41 and #42.
Update README.md
Update README.md
Condense all error spans to just the name for variable, class, interface, module, enum and enum member
Address PR feedback
Update baselines for not emitting when module flag is not specified
Remove error about missing module flag from checker
Add error about missing module flag to createProgram
Merge pull request #155 from Microsoft/check_this
fixed typo in comment
Merge pull request #157 from Microsoft/use_strict_in_functions
Report errors if the type parameter uses constraint that is using private type/module Fixes #86
Report error on Class/Interface heritage clause if it cant be accessed Fixes #78 and #83
Checker and emitter changes to report errors on inaccessibility of symbols when writing types in declaration file
Make the symbol writing api on the text writer
emit 'use strict' at the beginning of the function
Addressed code review feedback.
Better error recovery for when an arrow function is missing a curly brace.
added collision check for '_this'
Merge pull request #142 from Microsoft/declFileErrorReporting
Updating with code review feedback
Merge pull request #145 from Microsoft/restConstructorParam
fix typo in function name
Pulled out the d.ts compilation into separate it block
Merge pull request #141 from Microsoft/typoInDeclFileEmit
Issue# 144: Do not emit the name of the rest paramter in constructors
Merge pull request #140 from Microsoft/prologuedirectives
added new strict mode test
Report global errors and re-enable assert for the number of errors reported
Enable compiler runner to report the errors from compiling generated declaration files
Fixed the typo in declaration emitter of implements clause
emit prologue directives as first lines in file
Merge pull request #38 from Microsoft/projectBaselines
Merge pull request #137 from Microsoft/referencecomments
Fix web test server for new repo
Add some new shortcuts for tests options
Merge pull request #136 from Microsoft/functionNameInPropertyAssignment
relax the restrictions to reference comment shape
do not propagate function name in property accessors
Merge pull request #35 from Microsoft/emitRefactor
renamed isEmitToOwnFile to shouldEmitToOwnFile as per feedback
Cleanup temporary project output after running tests
Support automatic semicolon insertion in class member declarations.
Update README.md
Update README.md
Renamed emitToOwnOutputFile to isEmitToOwnOutputFile
Add more text to the README.md
do not check inherited properties if interface has one item in heritage list
Merge pull request #33 from Microsoft/MergingErrors
Merge branch 'master' into MergingErrors
New baselines.
Update README.md
Addressing code review feedback.
Update tsc
Update package.json
Update .gitignore
Update .npmignore
Moved the emit functionality into emitFiles
Remove assert
Merge pull request #30 from Microsoft/declarations
Removed unnecessary check for commas in 'parseDelimitedList'.
Better error recovery when errant semicolon found in a class.
Incorporating code review feedback
Fix for 954635: Clodule declaration ordering Fix for 955714: Fundule declaration ordering
When importing, only check for reserved type names when importing a type.
Error for more than one enum omitting an initial initializer
Remove SymbolLinks.typeChecked
Update CONTRIBUTING.md
Merge pull request #29 from Microsoft/iofixes
Merge pull request #26 from Microsoft/contributions
add code review comments
Incorporating code review feedback.
Use the isDeclarationVisible in checker to determine if the declaration needs to be emitted This would help in unifying logic of when to check if the type is visible
Check if accessible symbol needs futher qualification
Check if there is alias symbol in the scope corresponding to the symbol whose name we are trying to get in the symbol table
Start emitting qualified path if the current symbol is not visible in enclosing declaration Note that this doesnt handle aliases yet.
More I/O fixes Support for --charset command line option File read and write errors are propagated into compiler diagnostics emitFiles returns diagnostics in EmitResult
add new lines
remove some more smart quotes
add contribution guidlines
add contribution guidlines
fixed references in perftc
Do not emit arrow style call signatures when writing T of T[]
Emit the types in declaration file
Report error on unclosed multiline comment.
Do not emit the signature for implementation of overload in the declaration file
Correct the external module check to determine if declaration is part of export assignment
Correct the condition for variable statement emit in the declaraiton file
Emit alias declaration if its name is used as identifier of export assignment
Emit declaration if its identifier is used in export assignment of external module
Emit global context declarations into the declaration file
Responding to CR feedback
Updating some tests for resolved bugs
add prefixes for getCanonicalName
moved getCanonicalName to 'core'
Preserve trailing commas on array- and object-literals.
Support emit for trailing comma in array literals.
Syntax error for nonambient module with a quoted name
Remove unnecessary isAmbientContext function
derive value of 'useCaseSensitiveFileNames' from underlying platform for node base implementation of 'sys'
Fix for I/O performance problems sys.readFile checks whether file exists before reading instead of relying on exceptions sys.writeFile returns a boolean result and doesn't use exceptions to communicate errors Disabled code to create directories until performance has been verified
Update the readme with links to docs, fixed
Update the readme with links to docs
Add snapshot of compiler sources
Initial commit
