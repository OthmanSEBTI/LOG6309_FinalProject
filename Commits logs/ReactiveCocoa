Merge pull request #3732 from ReactiveCocoa/headers-phase
Fixed build phases order in target
12.0
Require ReactiveSwift 7.0. (#3731)
Fix broken filenames (#3727)
Added missing `UIKitReusableComponents` to macOS target (#3730)
Merge pull request #3729 from NachoSoto/catalyst
Compiling several files in macOS target
SUPPORTS_MACCATALYST
11.2.2
Update Carthage xcconfigs to 1.1 (#3728)
Use preferred AnyObject keyword (#3726)
11.2.1
Fix spm xcode 12.5 missing Foundation import (#3725)
11.2.0
Requires RAS >= 6.6.0. Disable some test cases in Mac Catalyst. (#3722)
11.1.0
bump package target to iOS 9 and update testing packages (#3712)
Bump SPM swift-tools-version to 5.2 (#3710)
11.0.0
Remove binding for WKInterfaceActivityRing + CI pipeline fixes (#3706)
10.3.0
Fix watchOS build error (#3703)
Add support for macOS Catalyst (#3698)
10.2.0
Update ReactiveSwift to 6.2.0. (#3696)
Update Readme (#3691)
Add support for Swift Package Manager (#3693)
Preparation for Swift Package Manager (#3692)
Merge pull request #3686 from ReactiveCocoa/10.1.0-release
[CI] Fix podspec linting
10.1.0 release
Merge pull request #3677 from olejnjak/update-dependencies
Update tests for native Result
Update CHANGELOG.md
Update Cartfile
Update dependencies
Merge pull request #3675 from rehatkathuria/master
Add a binding target for the barTintColor of UINavigationBar
Merge pull request #3670 from tdimeco/watchkit-additions
Update CHANGELOG.md
Fix some WatchKit binding mistakes
Add new bindings for standard WatchKit components
Allow for observable enum values (#3667)
10.0 release (#3665)
Merge pull request #3666 from gfontenot/update-readme-version
Update version in README to 9.0
Merge pull request #3664 from iv-mexx/patch-1
Add Upgrade-Instructions
Update to ReactiveSwift 6.0 and remove antitypical/Result (#3661)
Merge pull request #3656 from ReactiveCocoa/9.0-release
9.0.0
Merge pull request #3591 from Marcocanc/non-optional-textvalues
Merge branch 'master' into non-optional-textvalues
Merge pull request #3650 from ReactiveCocoa/swift-4.2
Update Changelog
non-optional nsattributedstring
make text and attributedText non-optional
Update ReactiveMapKit.podspec
Update the other Swift versions
Adopt Swift 4.2
Merge pull request #3491 from ReactiveCocoa/kvo-update
Merge pull request #3648 from Marcocanc/update-podspec
Update CI image to Xcode 10.2
Update podspec to ReactiveSwift 5.0
Drop `swift(>=3.2)` compile time condition. Fix an error message typo.
Merge remote-tracking branch 'origin/master' into kvo-update
Merge pull request #3647 from liscio/master
Oops! Forgot the Cartfiles.
Update CHANGELOG, bump test deployment target
Fix use of deprecated functions, other warnings
Merge pull request #3646 from Marcocanc/ras-5
Update ReactiveSwift to 5.0
Merge pull request #3642 from ReactiveCocoa/anders/fix-config
Fixed an intermittent crash in a ObjC-ported KVO stress test.
Fix the KVO test case which cannot be run in isolation.
Use Xcode 10.1 for CI.
Move the changelog entry to the appropriate place.
Fix build configurations of ReactiveMapKit.
Reenable disabled test cases.
Merge remote-tracking branch 'origin/master' into kvo-update
Merge pull request #3589 from cocoahero/Reactive+UIApplication
Update CHANGELOG.md
Merge branch 'master' into Reactive+UIApplication
Remove UIApplicationSpec for now.
Merge pull request #3636 from eimantas/nsview-bindings
Merge pull request #3635 from eimantas/master
Update `CHANGELOG.md`
Add bindings for `alphaValue`
Add a little documentation for `NSView`'s bindings
Merge pull request #3634 from eimantas/nsview-bindings
Set proper PR#
Update `CHANGELOG.md`
Add `isHidden` property binding to `NSView`
Merge pull request #3631 from raphaeloliveira/update-readme
Update README.md
Merge pull request #3629 from jcavar/patch-1
Change to latest method name
8.0.2
Split the ReactiveMapKit target up. (#3625)
8.0.1
Binding targets for WKInterfaceLabel & WKInterfaceButton (#3616)
Update the changelog to cover #3615.
fixed memory issue (#3615)
Add swift version to podspecs (#3622)
Merge pull request #3617 from ReactiveCocoa/ci-xcode-9.4
Xcode 9.4: Update to recommended settings
Update .swift-version
[CI] Use Xcode 9.4 image
Add public constructor for retrieves the lifetime of AnyObject. (#3614)
8.0.0
Upgrade to ReactiveSwift 4.0. (#3610)
Merge pull request #3587 from asmallteapot/UIBarButtonItem-extensions
Remove unreleased version from CHANGELOG
Fix CHANGELOG entry
Add UIBarButtonItem extensions
8.0.0-rc.1
Update ReactiveCocoa.podspec (#3607)
Merge pull request #3601 from ReactiveCocoa/xcode-10
Updated ReactiveSwift for Xcode 10
Merge pull request #3604 from ReactiveCocoa/no-mapkit-on-watchos
Revert SWIFT_COMPILATION_MODE for now as requested
[ReactiveMapKit] Remove `armv7k` from `VALID_ARCHS` build setting which was for watchOS
Xcode 9.4: Update to recommended settings
MapKit is not available on watchOS
Merge pull request #3600 from Azureblade3808/master
Simplified fix for issue #3596.
Fix for issue #3596.
Added a test case for issue #3596.
Update ReactiveSwift to 4.0.0-rc.1. (#3597)
Merge pull request #3599 from ReactiveCocoa/cl-copy-matchers
Pick up the nimble matchers from ReactiveSwift
Merge pull request #3590 from mishagray/cocoapod-static-lib
Merge pull request #3588 from cocoahero/Reactive+UIViewController
what's up with the whitespace in CHANGELOG.md? reverting atom's changes
changelog.md
fixes for allowing cocoapod to generate static framework
support for static libs on cocoapods
Merge branch 'master' into Reactive+UIViewController
Merge pull request #3585 from Marcocanc/responder
Update CHANGELOG.
Add spec for UIApplication extension.
Add reactive extension for UIApplication.applicationIconBadgeNumber.
Updated CHANGELOG.md.
Add view lifecycle trigger signal extensions.
Add UIViewController.title BindingTarget.
make punctuation more consistent
remove trailing empty line
add changelog
Add UIResponder extension
Merge pull request #3584 from banjun/correct-changelog
correct CHANGELOG refs at 7.2.0
7.2.0
Mitigate a regression in type inference. (#3583)
Avoid flag override by adding `$(inherited)` to `OTHER_SWIFT_FLAGS[config=Release]`. (#3581)
Merge pull request #3576 from asmallteapot/navigation-item-extension
sign my work
Add spec cases for new UINavigationItem extensions
Append `objc` prefixes to all ObjC messaging placeholders. (#3580)
Add CHANGELOG.md entry
Add reactive extensions for all UINavigationItem properties
Merge pull request #3570 from ReactiveCocoa/anders/handle-forwarded-selectors
Handle forwarded selectors without any implementation.
Reactive extension for MKLocalSearchRequest (#3571)
Merge pull request #3566 from ra1028/feature/UIKeyboard-improvement
Refactor
Refactor
Force to required to pass at least one event
Merge master
Merge pull request #3565 from banjun/uisearchbar-focus-and-cancel
Update CHANGELOG.md
Add fileprivate to KeyboardEvent.notificationName
Add spec
Observe the keyboard change context for specified Events
update CHANGELOG
add specs for observing starts and ends of editing, and binding to the cancel button
add reactive extension for UISearchBar allowing access to starts and ends of editing, and the cancel button
7.1.0
Update ReactiveSwift to 3.1. (#3561)
7.1.0-rc.2
Fix broken Swift 3.2 build. (#3556)
7.1.0-rc.1
Update ReactiveSwift to 3.1.0-rc.1. (#3555)
Remove no longer needed ‘try!’ (#3554)
[CI] Use Xcode 9.2 image (#3553)
Merge pull request #3549 from Palleas/add-reactive-nstextview
Update Changelog
Add extension for NSTextView
7.0.1
Make `Reactive#makeBindingTarget(…)` available on `AnyObject`, not just NSObject (#3545)
DynamicProperty of optional property (#3548)
Readme: clarify section on ABI stability release. (#3544)
Add tintColor BindingTarget for UIView (#3542)
Merge pull request #3541 from ReactiveCocoa/anders/update-podspec-1
Update the podspec.
7.0.0
Merge pull request #3539 from ReactiveCocoa/anders/ras-3.0
Update ReactiveSwift to 3.0.
Merge pull request #3536 from ronaldsmartin/uikit/add-uitextfield-placeholder-binding
Update CHANGELOG.md
Add 'placeholder' BindingTarget to UITextField
7.0.0-rc.1
Merge pull request #3533 from ReactiveCocoa/ras-3.0.0-rc.1
Update ReactiveSwift to 3.0.0-rc.1.
Merge pull request #3531 from ReactiveCocoa/more-bindings
Merge pull request #3461 from ReactiveCocoa/remove-dynamic-property
UISearchBar bindings.
Merge remote-tracking branch 'origin/master' into remove-dynamic-property
7.0.0-alpha.2
Merge pull request #3529 from ReactiveCocoa/ras3
Update ReactiveSwift to 3.0.0 alpha 1.
Merge branch 'master' into remove-dynamic-property
Merge pull request #3526 from ReactiveCocoa/swift4
Temporarily override the Swift version for ReactiveMapKit pod linting.
Build ReactiveCocoa with Swift 4.0.
Update Travis CI configuration.
Swift 4.
7.0.0-alpha.1
Merge pull request #3524 from ReactiveCocoa/reactive-mapkit
Merge branch 'master' into reactive-mapkit
Merge pull request #3518 from ReactiveCocoa/unmute-cocoapods-warnings
Update ReactiveMapKit build settings.
Merge pull request #3527 from ReactiveCocoa/update-quick-and-nimble
Update Quick and Nimble
ReactiveMapKit.
Merge pull request #3517 from ReactiveCocoa/hotfix-6.0.2
Merge branch 'master' into hotfix-6.0.2
6.1.0-alpha.2
Unmute CocoaPods warnings.
6.0.2
iOS + tvOS: disable code coverage to fix app submission with Xcode 9
Disable code coverage for the macOS target.
Add `.swift-version` for CocoaPods.
Merge pull request #3516 from ReactiveCocoa/thanks-cocoapods
Add `.swift-version` for CocoaPods.
Merge pull request #3511 from ReactiveCocoa/disable-code-coverage
Disable code coverage for the macOS target.
6.1.0-alpha.1
Merge pull request #3510 from ReactiveCocoa/ras-2.1-a2
Update ReactiveSwift to 2.1.0 alpha 2.
Merge pull request #3509 from ReactiveCocoa/disable-code-coverage
Merge pull request #3508 from ReactiveCocoa/ras-2.1-alpha.1
iOS + tvOS: disable code coverage to fix app submission with Xcode 9
Update ReactiveSwift to 2.1.0 alpha 1.
Merge pull request #3504 from albsala/uisearchbarcancelsignal
Removed unnecessary map
Added change to CHANGELOG.md
Added unit test for UISearchBar’s cancelButtonClick
Added cancelButtonClick Signal to UISearchBar
Merge pull request #3470 from ReactiveCocoa/cl-fix-productname
Merge pull request #3502 from iv-mexx/feature/changelog
Merge pull request #3489 from ReactiveCocoa/keypath
Fix changelog formating: Without extra newline, the header for 4.0 is not rendered as header
KVO with Smart Key Path.
Merge branch 'master' into keypath
6.0.1
Merge pull request #3501 from ReactiveCocoa/ras-2.0.1
Update ReactiveSwift to 2.0.1.
Merge pull request #3498 from ReactiveCocoa/fix-swift-runtime-infinite-recursion
Silent a CocoaPods warning, take 2.
Silent a CocoaPods warning.
Fixed an issue causing infinite recursion in the Swift runtime.
6.0.0
Merge branch 'rac2'
Update ReactiveSwift to 2.0.0.
6.0.0-rc.3
Merge pull request #3493 from ReactiveCocoa/rac2-rc3
Update ReactiveSwift to 2.0.0-rc.3.
Reactive key path subscript.
Merge pull request #3490 from ReactiveCocoa/xcode9-ci
Add Xcode 9 CI tests.
6.0.0-rc.2
Merge pull request #3486 from ReactiveCocoa/ras2-rc2
Copy the PR template from ReactiveSwift. [skip ci]
Update changelog. [skip ci]
Merge pull request #3484 from nickdomenicali/nsobjectprotocol
Update ReactiveSwift to 2.0.0-rc.2.
Replace NSObject with NSObjectProtocol in extensions
Merge pull request #3481 from Qata/master
Fixed typos in the changelog. [skip ci]
Update changelog. [skip ci]
6.0.0-rc.1
Merge pull request #3483 from ReactiveCocoa/ras2-rc1
Update ReactiveSwift to 2.0.0-rc.1.
Change available to conditional compilation directive
Change annotation to fit style
Add @unavailable annotation for tvOS
Merge pull request #3480 from andrei-kuzma/uibutton-pressed-tvos
Add scrollsToTop as a BindingTarget on UIScrollView
Updated UIButtonSpec
Fixed issue with UIButton pressed action on tvos
Merge pull request #3479 from Igor-Palaguta/selectedRangeValues
Merge pull request #3476 from ReactiveCocoa/update-release-roadmap
Add ability to monitor selectedRange for UITextView
Merge pull request #3478 from gparker42/gparker42-patch-1
Make a KeyValueObservingSpec test be independent of the iteration count
6.0.0-alpha.1
Merge pull request #3475 from ReactiveCocoa/ras-2.0.0-alpha.2
Verbose Pod spec repo update.
Update ReactiveSwift to 2.0.0 alpha 2, Result to 3.2.3, and Nimble to 7.0.1.
Update the release roadmap. [skip ci]
5.0.4
Merge pull request #3474 from ReactiveCocoa/textvalues-fix
Merge branch 'master' into textvalues-fix
Merge pull request #3472 from ReactiveCocoa/controlevent-map
Update the changelog. [skip ci]
Beefed up the descriptions of control event signals. [skip ci]
UITextField text signal now reacts to `editingDidEndOnExit`.
Introduce `mapControlEvents`.
Merge pull request #3453 from ReactiveCocoa/control-events-deadlock-fix
Merge branch 'master' into control-events-deadlock-fix
Merge branch 'master' into control-events-deadlock-fix
Update changelog. [skip ci]
Merge pull request #3466 from ReactiveCocoa/take-referring
Update the change log. [skip ci]
Introduce `take(duringLifetimeOf:)`.
Safe, read-only `DynamicProperty` as `Property`.
Full buffering in `CocoaTarget` for reentrant calls.
Merge pull request #3460 from ReactiveCocoa/intercepting-spec-patch
Use unowned reference in `DynamicProperty`.
Fix bad productName values
Restore the bridging casts in InterceptingSpec for Swift 3.1+.
Disable UISwitch spec deallocation check for iOS prior to 10.2.
Updated test cases to be compatible with Swift 3.0. NSNumber, NSValue and NSNull bridging was introduced since Swift 3.0.1.
Fixed a Swift 3.0 crash due to an errorous `Associations` overload signature.
Merge pull request #3457 from ReactiveCocoa/uikeyboard-fix
Fixed a bridging issue in `KeyboardChangeContext`.
Merge pull request #3459 from ReactiveCocoa/ios-ci-fix
Fix iOS CI test, and add 32-bit iOS test.
Merge pull request #3458 from ReactiveCocoa/update-gitignore
Update .gitignore. [skip ci]
Reentrance support in `CocoaTarget.invoke`.
5.0.3
Merge pull request #3442 from ReactiveCocoa/uitextfield-continuous
Merge pull request #3449 from ReactiveCocoa/kvo-dependent-keys
Continuous UITextField signals now react to all editing events.
New KVO test case for #3443. The bug was fixed in #3439. It caused the KVO logic to observe the deallocation of object values of non-weak properties, causing various issues including but not limited to deadlocks and unexpected `nil`s.
Test cases for KVO on dependent keys.
Merge pull request #3435 from ReactiveCocoa/swizzling-kvo-interop-fix
Updated a comment in ActionProxy.
Use ObjC association directly for proxy storage.
Merge pull request #3439 from ReactiveCocoa/kvo-swift-object
Merge pull request #3447 from Marcocanc/UIFeedbackGenerator
Resolved a couple of interoperability issues of RAC method swizzling. Two boundary cases were resolved: proxying-then-KVO and interception-then-proxying. A circular invocation bug was also fixed, which would happen on RAC-intercepted, KVO-swizzled selectors when KVO creates its subclass on top of the RAC runtime subclass. Preconditions were also added to trap upon unsupported swizzling combinations.
Merge remote-tracking branch 'upstream/master' into UIFeedbackGenerator
Revert "Disabled four ActionProxy/DelegateProxy interop test cases."
Capture the superclass instead of relying on `+class`. The class hierarchy up to the subclass returned by `swizzleClass` is immutable. So instead of `+class`, the superclass can be obtained upfront.
Merge pull request #3446 from ReactiveCocoa/silence-the-warnings
Disabled four ActionProxy/DelegateProxy interop test cases.
Fixed an ActionProxy crash when `NSApp` is not present.
Refined the DelegateProxy implementation.
Identify delegate proxies by the setter selector.
Fixed an interoperability issue with KVO in the swizzling logic. The original implementation had not taken account of the existence of other swizzling users.
New test cases: ActionProxySpec and DelegateProxySpec.
Merge pull request #3448 from ReactiveCocoa/fix-ci
Specify an unambiguous simulator
Fix CI by specifying valid, specific simulators
BindingTargets for UIFeedbackGenerator
Merge pull request #3444 from Marcocanc/UINavigationItem+UITabBar
Make it fileprivate as requested
Remove obsolete .swift-version which was used in RAC 4.x
Silence the warnings
Update podspec
fix availabilities
Add Extensions for UINavigationItem & UITabBarItem
Merge pull request #3441 from ReactiveCocoa/update-podspec
Update the pod spec to silent deprecation warnings.
Merge pull request #3440 from walkingsmarts/master
Update documentation
Add an item about documenting return value
Native Swift Object support in RAC KVO API.
Merge pull request #3437 from ReactiveCocoa/andersio-patch-2
Merge pull request #3436 from ReactiveCocoa/andersio-patch-1
Tune down the interception perf tests.
Disable the MapView deallocation check for macOS.
Merge pull request #3433 from ohbargain/nsbutton_in_nsstackview_emit_failure
Merge pull request #3431 from ohbargain/nsbuttonspec_fix_element_run_failure
add window
add test case to demonstrate nsbutton inside nsttackview issue.
Put button inside NSWindow for responder chain to take effect.
Merge pull request #3413 from Burgestrand/pull-request/allow-non-initial-kvo
Fixed badges in the README.
5.0.2
Merge pull request #3426 from ReactiveCocoa/swift3.1
Update `.swift-version`.
Use Xcode 8.3 (Swift 3.1) image for CI.
Update dependencies (Nimble, RAS & Result).
Merge pull request #3425 from ReactiveCocoa/delegate-proxy-bugfix
Fixed a false negative in `DelegateProxy.responds(to:)`. It happened on a selector when the proxy has a forwardee, is implemented by the forwardee and is not implemented by the proxy.
Added `DelegateProxySpec`.
Saved an unnecessary call to the original setter in `DelegateProxy`.
The proxy signals should respect the lifetime of the delegator.
Fixed an bug preventing the forwardee from being cleared in `DelegateProxy`.
Merge pull request #3394 from ReactiveCocoa/nscontrol
Merge branch 'master' into pull-request/allow-non-initial-kvo
Improve the documentation of `NSObject.swizzle`.
ActionProxy: s/signal/invoked/; s/consume/invoke/
Streamlined `ActionProxy.consume`.
Share swizzling logic between ActionProxy and DelegateProxy.
Added two test cases for the `ActionProxy` related swizzling.
Hide the NSControl interception.
Merge pull request #3418 from ReactiveCocoa/kvo-nested-key-path
Fixed an occurrence of exception due to key path tail observers not being detached. This happens specifically when a nested key path is being observed, for example `parent.child`, where `parent` is being replaced by a new object. `KeyValueObserver` is not eager enough to clean up the tails, causing the then-deallocated object (the original `parent`) to have still observers attached.
Mark forgotten test from master as pending due to off-topic failure.
Add `NSObject.reactive.signal(forKeyPath:)`.
Rename `NSObject.reactive.values(forKeyPath:)` to `producer(forKeyPath:)`.
Merge pull request #3410 from c12dd/master
add textColor  QuickSpec
add Sets the textColor of the text field
Merge pull request #3408 from ReactiveCocoa/update-nimble
Update Nimble to be built with Swift 3.1
Merge pull request #3407 from ReactiveCocoa/utilize-lifetime-make
Utilize `Lifetime.make()` from RAS 1.1
Merge pull request #3405 from ReactiveCocoa/fix-schedulerprotocol-usage-warning
Fix a `SchedulerProtocol` usage warning
5.0.1
Merge pull request #3404 from ReactiveCocoa/ras-1.1
Update Cartfile and podspec as well
Update ReactiveSwift to 1.1.0.
Merge pull request #3396 from alper/patch-1
Merge pull request #3395 from dcaunt/reactive-uipickerview
Merge pull request #3397 from kean/patch-1
Represent selection with a named tuple
Added parameter to the other documentation as well.
Fix #selector usage in README and docs
Correctly initialize the submodules
Add Selection type for UIPickerView extension
Add UIPickerView reactive extensions
Merge pull request #3385 from ReactiveCocoa/delegate-intercept
Removed UISearchBar docs that are no longer necessary.
Workaround to compiler issues.
Merge pull request #3390 from jklausa/textfield-reactive-secure-text-entry
Merge pull request #3388 from ReactiveCocoa/cl-additional-controls
Merge pull request #3391 from keitaito/keitaito-patch-1
Fix typo
Add `isSecureTextEntry` binding to UITextField.
Add a few missing bindings
Removing some unnecessary bits, adding tests
Merge remote-tracking branch 'origin/cl-appkit-additions' into cl-additional-controls
Delegate interception for UISearchBar.
Merge commit 'f2b767e' into cl-additional-controls
Add missing `extern` keyword
Add another cross-platform wrapper
Adding some additional AppKit control bindings
Add some extra control bindings
Merge pull request #3377 from ReactiveCocoa/5.0-release-minor-fixes
Update README and Info.plist for 5.0 release
5.0.0
Merge pull request #3371 from ohwutup/add-pressed-signal-for-nsbutton
Merge pull request #3375 from dcaunt/fix/docs
Merge pull request #3374 from ohwutup/add-selected-items-signal-nspopupbutton
Fix broken link
Update binding links
Fix documentation index BindingTarget link
Update MutableProperty line link
Fix README BindingTarget link
update test to make sure click disables the button
test isenabled
use modify
Add signal for selected NSMenuItems to NSPopUpButton
Merge pull request #3372 from ReactiveCocoa/unsafecocoaaction-depr
add tests
Mark `unsafeCocoaAction` as unavailable.
go back to private trigger
Use CocoaAction
add pressed signal for nsbutton
Merge pull request #3369 from ReactiveCocoa/andersio-patch-1
Minor changes to the ObjC-to-Swift table in CHANGELOG.
Small improvement to CocoaAction docs
Merge pull request #3363 from ReactiveCocoa/reactiveswift-1.0.0
Update ReactiveSwift to 1.0.0
Merge pull request #3361 from ReactiveCocoa/readme-update
Update the README layout to match ReactiveSwift. [skip ci]
5.0.0-rc.1
Merge pull request #3302 from ReactiveCocoa/swiftify-runtime-utils
Gardening in `NSObject+Association` and related call sites.
Gardening in `NSObject+Intercepting`.
Rename association APIs. Document the association keys.
Move `setupInterception` into an `NSObject` extension.
Use IMP cache backed calls in the `forwardInvocation` impl.
Migrate selector cache to use Read-Copy-Update.
Allocate a contiguous memory block for association keys.
Removed the unused `Atomic` copy.
Merge branch 'master' into swiftify-runtime-utils
Fix podspec which was broken in 5.0.0-alpha.6
5.0.0-alpha.6
Merge pull request #3330 from ReactiveCocoa/kvo-operation-fix
Merge pull request #3355 from iv-mexx/updateReadme
Mention the necessary import of ReactiveSwift
Merge pull request #3354 from ohbargain/nspopupbuttonspec-typo
fixed typo
5.0.0-alpha.5
5.0.0-alpha.4
Merge pull request #3341 from dcaunt/reactive-uiscrollview
Merge pull request #3342 from ReactiveCocoa/public-make-target
Update tests for ReactiveSwift 1.0 RC1
Merge branch 'master' into reactive-uiscrollview
Merge pull request #3322 from iv-mexx/feature/uiswitchAction
Fix testcase for recent version of master
Change name of UISwitch action to `toggled`
Add reactive.valueChanged action to UISwitch
Merge pull request #3345 from ReactiveCocoa/cocoaaction-uithread
Merge pull request #3348 from ReactiveCocoa/test-fix
Fix NSPopUpButtonSpec for RAS 1.0.0-rc.1.
Merge pull request #3337 from ohbargain/nspopupbutton
Merge remote-tracking branch 'ReactiveCocoa/master' into reactive-uiscrollview
Bound the properties of `CocoaAction` to the main thread.
Allow any arbitrary scheduler in `makeBindingTarget`.
Remove the unused parameter in `makeBindingTarget`.
Public `NSObject.makeBindingTarget`.
Merge pull request #3344 from ReactiveCocoa/ras-rc1
Force CI to use iOS 10.2 Simulator.
Merge pull request #3343 from ReactiveCocoa/release-roadmap
Update ReactiveSwift to 1.0.0-rc.1.
Release Roadmap
revert emitting signals to non-optional
Merge pull request #3335 from dcaunt/reactive-uisearchbar
convert all to optional
Add reactive extensions for UIScrollView
Merge pull request #3340 from dcaunt/fix-uikeyboard-typo
Fix a typo
Update comment
Improved formattings.
Add docs, runtime error for delegate override
Add reactive NSPopUpButton
Merge pull request #3336 from iv-mexx/removeDuplicateDocumentation
Update DebuggingTechniques
Add specific references to documents in ReactiveSwift that are now removed in ReactiveCocoa
Remove DesignGuidelines
Update Design Guidelines
Remove Documentation that is already in ReactiveSwift
Add reactive UISearchBar
Improved the documentation. Minor refactoring.
Use `Unmanaged` references in the message forwarding implementation.
Merge branch 'master' into swiftify-runtime-utils
Fixed a `Lifetime` related KVO crash.
Merge pull request #3321 from calebd/reactive-refresh-control
Fix the build.
Send the UIControl sender for each control event
Update test name.
Rename internal property names.
Reduce code duplication.
Add tests for isRefreshing <~ isExecuting binding.
Rename refresh action.
Bind action isExecuting to refresh control isRefreshing.
Remove `refresh` signal and add `refreshed` action to UIRefreshControl.
Add attributed title binding.
Add comments.
Add reactive refresh control.
Merge pull request #3320 from iv-mexx/feature/documentation
Merge pull request #3319 from ReactiveCocoa/keyboard-madness
Moved `keyboardChange` back to `Reactive<NotificationCenter>`.
Update ReactiveSwift to 1.0.0-alpha.4.
Add ReactiveCocoa specific documentation
Added `UIView.Type.reactive.keyboardChange`.
Update ReactiveSwift to 1.0.0-alpha.4.
Only build pushes to master and PRs on CI
Merge pull request #3307 from augusteo/attributedText-uitextview
Update Quick to v1.0.0
change Georgia to system font
Merge pull request #3305 from ReactiveCocoa/playground
Remove references to 'script/bootstrap' from playground documentation. https://github.com/ReactiveCocoa/ReactiveSwift/pull/76
Abolish the lock for the signature cache.
fixed tests
fix type error
Disable iOS and tvOS CI playground validation.
add optional strings in UITextView
fix indentation
added attributedText signals
textview optional text string binding
clean spacing, import Result.NoError
Improved the documentation of the implementation.
Get the SDK root and pass it to the Swift compiler.
Corrected directory paths and parameters for playground validation.
add tests
add attributed text to uitextfield
add attributed text binding target
Enabled playground CI validation for iOS and tvOS.
Added a playground for tvOS.
Add sandboxes.
Improved the documentation with minor refactoring.
Removed unnecessary code and variables.
Fixed a typo in a code snippet of the changelog.
Fixed a typo in a code snippet of the readme.
Selector alias caching.
Abolished the interop-implementation table.
Explicit locking for impl. table and signature cache.
Fixed a thread safety issue in the method interception logic.
Updated the intercepting performance tests.
Abolished global atomic properties.
Updated the intercepting performance tests.
Added two test cases to InterceptingSpec.
Documented and refactored `setupInterception`.
Avoid any swapping of implementations as much as possible.
Method signature caching. Reduced dynamic casting overhead.
Reduced the message forwarding overhead related to runtime selectors.
Fixed a couple of typos in the changelog.
Update changelog.
Minor refactoring in `NSObject+Interception` and `ObjC+*`.
Removed the ObjC runtime wrappers.
Documentation. Added back a missing `fileprivate` modifier.
Rewrote the ObjC object interception logic in Swift.
Migrated InterceptingSpec to use the runtime wrapper.
Runtime subclassing and ObjC runtime wrapper.
Moved the NSInvocation related protocols into a separate file.
Merge pull request #3299 from ReactiveCocoa/cleanup-specs
Association API.
Removed the `RACSwiftInvocationArguments` wrapper class.
Fixed a `nil` expectation in InterceptingSpec.
Streamlined 3 test cases from KVO, Lifetime and Intercepting spec.
Merge pull request #3297 from ReactiveCocoa/andersio-patch-1
Include prerelease tags in Carthage/Pods tutorial.
Rewrote an occasionally failing async KVO test case.
Migrated test cases to use latest Dispatch APIs when appropriate.
Merge pull request #3296 from ReactiveCocoa/travis-8.1
Added a few bits about `BindingTarget` and `Lifetime`.
Update changelog.
Merge branch 'travis-8.1' into trigger-arguments
Update Travis CI config to use the Xcode 8.1 image.
Ported a few object interception test cases from ReactiveObjC.
Merge pull request #3295 from ReactiveCocoa/separate-uikit-ios-files
Separate iOS-specific UIKit files into its own directory / group
Merge pull request #3293 from walkingsmarts/reactive-uistepper
Sort UIKit specs by name
Make more `UIStepper` properties reactive
Make `UIStepper` value reactive
Merge branch 'master' into trigger-arguments
Merge pull request #3290 from ReactiveCocoa/andersio-patch-1
Merge pull request #3291 from walkingsmarts/reactive-uislider
Assert `nil` before triggering the action
Fix tests for `values` signal
Rename `continuousValues` to `values`
Made false note true
Add signal for `continuousValues`
Added a link in the readme to the changelog.
Fixed a typo.
Exclude UIStepper from tvOS builds
Sort spec files by name
Make `UISlider` great again
Use the Xcode 8.1 sneak peek image for CI test.
Split the giant table.
Update changelog.
Merge pull request #3288 from walkingsmarts/master
Merge pull request #3118 from ReactiveCocoa/migration-guide
Updated the ReactiveObjC API migration table.
Revert "Trigger signal for optional, unbacked protocol requirements."
Remove redundant availability API calls.
Add a few `MKMapView` properties to reactive extension
Added a table of RAC5 counterparts to commonly used ObjC APIs.
Make MKMapView's type reactive
Replace h2 with h3 for layout consistency.
Adjust based on feedback
Bridge C string as `NSValue`.
Refactored the internal ObjC interception setup API.
Bridge scalar and struct arguments as `NSValue` and `NSNumber`.
Implement the argument bridging logic.
Added an private enum for ObjC type encoding.
Added an internal NSInvocation and NSMethodSignature wrapper.
`response(to:)` now handles selectors added at runtime correctly.
Trigger signal for optional, unbacked protocol requirements.
Merge pull request #3284 from ReactiveCocoa/as-reload-data
Add NSCollectionView.reactive.reloadData binding target
Add NSTableView.reactive.reloadData binding target
Fix up path of AppKit group in ReactiveCocoaTests
Add UICollectionView.reactive.reloadData binding target
Add UITableView.reactive.reloadData binding target
Merge pull request #3256 from bitomule/UIGestureRecognizer-trigger
Add a note about Atomic
Add a note about properties
Write about Signal lifetime semantics
Merge pull request #3283 from ReactiveCocoa/nimble-5.1.1
Merge pull request #3282 from ReactiveCocoa/nimble-equal-operator
Updated Nimble to 5.1.1.
Merge pull request #6 from andersio/gesture-patch
Merge branch 'master' into gesture-patch
Merge branch 'UIGestureRecognizer-trigger' into gesture-patch
Merge pull request #3277 from walkingsmarts/reactive-constant
Add `Shared` files everywhere
Update podspec for tvos and watchos platforms
Update podspec file
[UIViewSpec] Consistently use `==` operator over `to(equal(...))`
Use trailing closure syntax
Merge branch 'master' into migration-guide
Move contents into the CHANGELOG
Change equality check to `≈`
Merge pull request #3278 from walkingsmarts/master
Use `==` for equality checks in `UIBarItem` specs
Add reactive `image` and `title` to `UIBarItem`
Document the reactive `constant`
Add reactive `constant` to `NSLayoutConstraint`
Merge pull request #3276 from walkingsmarts/master
Removed generic CocoaTarget type when it's void
Style issues fixed
Merge pull request #3270 from ReactiveCocoa/robjc-interop
Make reactive `backgroundColor` for `UIView`
Merge pull request #3275 from ReactiveCocoa/refactor-textfield-textview-extensions
Merge pull request #3273 from ReactiveCocoa/dynamicproperty-forbid-nil-object
Merge pull request #3274 from ReactiveCocoa/fix-indent
Merge pull request #5 from andersio/gesture-patch
Refactor NSTextField and UITextView extensions
Fix indent
DynamicProperty.init should not accept nil value for `object`
Merge pull request #3272 from ReactiveCocoa/readme-typo
Adjusted the wording in the readme.
Fixed a few typos in the readme.
Merge pull request #3261 from ReactiveCocoa/readme-5.0
Changed the method prefix and class suffix used for swizzling.
Fixed a typo in the readme.
Formatting & access modifiers. Included the spec in tvOS test.
Andersio suggestions
Add cross reference notes to UIKit text observation methods
Changed protocol to internal
Added space
Removed empty lines
Merge pull request #3266 from ReactiveCocoa/as-unused-var
Added UIGestureRecognizer tests
Removed extra space
Made test class private
Changed gesture signal name to stateChanged
New CocoaTargetProtocol
Remove unused private variable in DynamicProperty
ReactiveCocoa 5.0.0-alpha.3.
Merge pull request #3265 from ReactiveCocoa/trigger-deadlock-fix
Fixed the typos in the new test cases for deadlocking.
Marked `NSObject.synchronized` as final and non-ObjC. Renamed the containing file.
Appended the `d` at the end of `NSObject.synchronized`.
Introduced a constrained, internal wrapper of `objc_sync_*`.
Added test cases for deadlocking in InterceptingSpec and LifetimeSpec.
Fixed a bug which caused a deadlock in `trigger(for:)`.
Fixed up some language, added a tiny bit more
Merge remote-tracking branch 'upstream/master' into migration-guide
Replace &raquo; with ⚠️.
Reorganized the links. Promoted all h3 to h2.
A tiny bit of rewording in the readme.
Improved the writing (again).
Improved the writing.
Fixed another typo in a code snippet.
Fixed a typo.
Rewrote the readme for ReactiveCocoa 5.0.
Added a CocoaPods badge to README.md.
Update podspec.
Merge pull request #3252 from ReactiveCocoa/rex-modulemap
Merge branch 'master' into rex-modulemap
Fixed the ReusableComponentsSpecs.
Adjusted the `prepareForReuse` extensions to account for platform API differences.
Removed the false workaround. Updated the project settings.
Reintroduced `reactive.prepareForReuse` for reusable components.
Update podspec
Merge branch 'add-podspec' into rex-modulemap
Added UIGestureRecognizer test
Add some extra control bindings
Changed name to recognised and moved to computed property
Trigger method for UIGestureRecognizers
Merge pull request #3 from ReactiveCocoa/master
Add official podspec
Merge pull request #3210 from ReactiveCocoa/rex
Use custom module map for the framework. Removed the Utils submodule.
Reenabled dealloc checks in UITextField/UITextView specs.
Disabled the dealloc check for leaking UIKit components.
Merge pull request #3250 from ReactiveCocoa/reactiveswift-alpha-3
Update ReactiveSwift to 1.0.0-alpha.3
ReactiveSwift 1.0.0-alpha.3
Added `InterceptingSpec`.
Refactored `KeyValueObservingSpec`.
DynamicProperty: don't expose signal setter
Fixed the failing `NSControlSpec` test cases.
Test if controls are released properly in `NSControlSpec`.
Converted UIKit extension tests into Quick specs.
Precondition on invocation swizzling setup.
Corrected the type coercions in NSObject reactive extensions.
Use optional chaining in `UIControl.reactive.setAction(_:for:)`.
Query selectors from instances instead of the expected type.
Mark `CocoaTarget` as final.
Revert "Reintroduced `reactive.prepareForReuse` for reusable components."
Reintroduced `reactive.prepareForReuse` for reusable components.
Added `NSTextField.reactive.continuousAttributedStringValues`.
Underscored the internal API.
Renamed `CocoaTrigger` to `CocoaTarget`.
Merge pull request #3243 from iv-mexx/ObjCBridgingDocumentation
Fix missing space
Use private modulemap.
Tweaked the implementation of `NSObject.reactive.trigger(for:)`.
Fixed a typo in the doc of `UIProgressView.reactive`.
Shared `CocoaTrigger` for all uses of the target-action pattern.
Create one `UIScheduler` for each instance of binding target.
Removed an unused global variable.
Remove ObjectiveCBridging documentation because now lives in the ReactiveObjCBridging project
Update README with regards to Swift, ObjC and bridging between those
Merge branch 'master' into rex
Merge pull request #3242 from ReactiveCocoa/update-reactiveswift
Update ReactiveSwift to 1.0.0-alpha.2
Updated dependency: ReactiveSwift 1.0.0-alpha.2
Tweaked the capture lists and formatting of some closures.
Updated the documentation of `CocoaAction` and tweaked its implementation.
Removed all file headers.
Updated the API documentation.
Added `Reactive<UIButton>.title(for:)`.
Enabled state binding in `Reactive<UIBarButtonItem>.pressed`.
Fixed a typo of the property name in `Reactive<NSControl>`.
Cleaned up the association API.
Reused `associatedObject(_:key:initial:) in `signal(for:setup:)`.
Added `NSControl.reactive.isEnabled`.
Renamed `*texts` to `*textValues`.
Renamed `Control` of `CocoaAction` to `Sender`.
Hid `UIControl.setAction`.
Fixed the watchOS target settings.
Reverted the weak behavior of `CocoaAction`. Fixed its retain cycle test case.
Merge branch 'master' into rex
Reformatted the remaining test cases from Rex.
Expose control values as binding targets and signals.
New control binding API for `Action`s.
Removed shorthands of `NSObject.reactive.trigger(for:)`.
Updated dependency: ReactiveSwift, `reactivity` branch.
Update DynamicProperty docs to remove AnyObject
Replace explicit bridging in DynamicProperty with id-as-Any
Remove AnyObject constraint on DynamicProperty.Value
Renaming: `Reactivity.makeBindingTarget`.
Replaced `rac_` prefixes with `Reactivity`.
Use `()` instead of `Void`.
Consolidated the interface of `CocoaAction`.
Made the associated object API internal.
Removed the user header search path setting for extobjc.
Reverted accidential changes to the build and project settings.
Merge pull request #3226 from iv-mexx/readme
Deployed `BindingTarget` in the UIKit extensions.
Targeted the merge commit of ReactiveSwift#30.
fix broken link to legacy documentation
Merge branch 'master' into rex
Removed the private header from the iOS target.
Nullability annotation for the private header.
Refactored and Renamed `signal(for:)` to `trigger(for:)`.
Merge pull request #3216 from wongzigii/patch-1
Update .swift-version to 3.0
Update checkout of ReactiveSwift
Update Cartfile.resolved to 1.0.0-alpha.1
Update Cartfile
Merge pull request #3215 from ReactiveCocoa/update-quick
Update Quick to v0.10.0
Implementation of `UIControl.trigger(for:)`.
Implementation for `NSObject.signal(for:)`.
Renamed `rex_` to `rac_`.
Made the new source files buildable.
Reindented the new source files.
Incorporate new source files into the project.
Removed unwanted implementations.
Merge remote-tracking branch 'rex/split-repo-prep' into rex
Merge pull request #3205 from ReactiveCocoa/update-nimble
Sorted for merging.
Merge pull request #146 from RACCommunity/RAC5-swift3
Update Nimble to v5.0.0
Merge pull request #3202 from pawel-sekara/master
Specified commit of ReactiveSwift in Cartfile to prevent conflicts with Cartfile.resolved; Updated renamed Observer methods in tests
Merge pull request #3198 from wongzigii/patch-1
Remove invalid links after split up
Merge pull request #3195 from ReactiveCocoa/remove-instruments-templates
Remove Instruments templates
Merge pull request #3194 from ReactiveCocoa/remove-objc-code
Remove ReactiveObjC and ReactiveObjCBridge
Merge pull request #3182 from ReactiveCocoa/reactive-objc-and-bridge
Try to get the dates closer together
Try to work around CI failure
Update Nimble
Revert "Add a workaround for Nimble issue"
Merge branch 'master' into reactive-objc-and-bridge
Merge pull request #3186 from yageek/bugfix/warning_3183
Create a common macro.
Merge branch 'master' into reactive-objc-and-bridge
Add a workaround for Nimble issue
Merge pull request #3187 from sharplet/nimble-master
Switch Nimble to master and update dependencies
Remove warning on XCode8 for #3183
Adjust the timeout for Travis
Updated for Swift 3 GM.
Fixed the failing `UIButton.rex_pressed` test.
Updated for the ReactiveSwift spin-off.
Fix inverted logic
Xcode has ideas
Remove the rest of Result from ReactiveObjC
Don't set playground target for ReactiveObjC or ReactiveObjCBridge
Only valid playgrounds when a target is set
Remove bridging header from ReactiveObjC
Create ReactiveObjC.framework and ReactiveObjCBridge.framework
Merge pull request #3181 from ReactiveCocoa/depend-on-reactive-swift
Depend on ReactiveSwift through Carthage
Merge pull request #3137 from ReactiveCocoa/reactive-swift
Remove unneeded build settings
Merge branch 'master' into reactive-swift
Merge pull request #3175 from ReactiveCocoa/event-logger-starting
EventLogger now logs the `starting` SignalProducer event.
Merge pull request #3171 from ReactiveCocoa/xcode8-gm
Fix Xcode 8 GM compatibility
Fix description
Flatten Xcode hierarchy for Swift code
Remove unnecessary platform conditional
Remove unnecessary import
Rename file to reflect that it's an extension
Merge branch 'master' into reactive-swift
Merge pull request #3167 from walkingsmarts/master
Fix casing for enum values in markup
Merge branch 'master' into reactive-swift
Merge pull request #3165 from ReactiveCocoa/upstream-quick
Switch back to Quick/Nimble
Switch back to Quick/Quick
Merge branch 'master' into reactive-swift
Merge pull request #3131 from ReactiveCocoa/property-lifetime
Removed `AnyBindingTarget`.
Renamed the `BindingTarget.Value` requirement.
Merge branch 'master' into property-lifetime
Merge pull request #3156 from ReactiveCocoa/update-xcconfigs
[RACCompoundDisposable] Add explicit `self`
Update xcconfigs
Merge branch 'master' into reactive-swift
Merge pull request #3154 from ReactiveCocoa/update-result3-alpha4
Updated for Swift 3.0 Preview 6.
Update Quick and Nimble
Update to recommended settings
Update Result to 3.0.0-alpha.4
Evidently verbose is a bad idea
Make Carthage builds verbose as well
Split up Carthage job by platform
Merge branch 'master' into reactive-swift
Merge pull request #3149 from Igor-Palaguta/ThenNoError
add one more override for Error and NoError case
then should be available for NoError
Merge branch 'master' into reactive-swift
Merge pull request #3129 from ReactiveCocoa/anders/patch-1
Update SwiftPM symlink
Use newer version of Result
Update Package.swift
Fix .travis.yml scheme names
Merge branch 'master' into reactive-swift
Merge branch 'master' into RAC5-swift3
Merge branch 'master' into property-lifetime
Merge branch 'master' into anders/patch-1
Merge pull request #153 from sebastianvarela/RAC5-swift3
Merge pull request #3136 from ReactiveCocoa/swift3-beta-6
Merge pull request #3145 from ReactiveCocoa/swift3-beta-6-update
Updated tests for Xcode 8 beta 6.
Updated the dependencies.
Introducing `BindingTarget`.
Merge pull request #150 from sharplet/swift-2.3
Make this TestError internal as well
This is ReactiveSwift
Merge pull request #3139 from ReactiveCocoa/ikesyo/swift3-beta-6
Make TestError explicitly internal
Fix the remaining build errors in ObjectiveCBridging.swift for Xcode 8 beta 6
Merge pull request #3138 from ReactiveCocoa/mdiep/swift3-beta-6
Fix lots of compile errors with Xcode 8ß6
Update Result for Xcode 8ß6
Split up README for ReactiveSwift
Rename ReactiveCocoa-Mac to ReactiveCocoa-macOS
Use ReactiveSwift in ReactiveCocoa
Streamlined the implementation of composed property.
Create ReactiveSwift
Construct CI build matrix from platform & OS X image
Swift 3 beta 6: id is now imported as Any (SE-0116)
Swift 3 beta 6: updated String constructor
Swift 3 beta 6: dynamictype -> type(of:) (SE-0096)
Swift 3 beta 6: added explicit casting
Swift 3 beta 6: argument labels have been removed from function types (SE-0111)
Swift 3 beta 6: moved location of where statements in generic declarations
Swift 3 beta 6: private -> fileprivate (SE-0025)
Swift 3 beta 6: @noescape is now default, @escaping is not (SE-0103)
Merge pull request #3135 from dcaunt/fix-readme-bootstrap
Update readme for removal of script/bootstrap
Merge pull request #3133 from ReactiveCocoa/ikesyo/generic-scoped-disposable
Generic ScopedDisposable
Merge pull request #3132 from ReactiveCocoa/swiftpm-build-only
Update .travis.yml for Swift Package Manager support
Add support for Swift Package Manager
Merge pull request #3130 from Nandiin/patch-1
added missing "```" to correct the format
Merge pull request #3123 from ReactiveCocoa/atomic-modify
Merge pull request #3119 from ReactiveCocoa/anders/lifetime-split
Merge branch 'master' into atomic-modify
Use `Atomic.modify` with shorthand argument names.
Merge pull request #3127 from ReactiveCocoa/anders/replay-lazily
Updated the documentation of `ReplayState.observe`.
Merge branch 'master' into anders/lifetime-split
Merge pull request #3120 from ReactiveCocoa/anders/replay-lazily
Merge pull request #3122 from ReactiveCocoa/rename-ignorenil
Refined the implementation & documentation of `ReplayState`.
Rename two more references to ignoreNil
Merge pull request #3125 from ReactiveCocoa/NachoSoto-patch-1-1
Update README for RAC 5 and Swift
fix remaining warning on Xcode8b4
Altered `Atomic.modify` to return the result of the supplied action.
Rename in the playground as well
Update ReactiveCocoa Dependency (damm branch fuckers)
Decoupled the deinitialization detection from `Lifetime`.
Streamline the implementation of `replayLazily`.
Rename ignoreNil() to skipNil()
Start outlining the guide
Add a TOC
Fix file extension
Merge branch 'master' into migration-guide
Merge pull request #3114 from ReactiveCocoa/update-result
Write about the repository split
Start a migration guide
Update Result to 3.0.0-alpha.2
Merge pull request #3113 from ReactiveCocoa/remove-objc-build-scripts
Merge pull request #2857 from ReactiveCocoa/RAC5
Merge pull request #2959 from andersio/signal-lifetime
Remove obsolete objc-build-scripts
Use `pod lib lint --quick` on CI
Don't use Carthage binaries on CI
Use build-for-testing and test-without-building for CI on Xcode 8
Allow warnings when validating the podspec
Add Xcode 8 to Travis build matrix
Update to ReactiveCocoa 4.2.2
Automatic Xcode project file changes
Use SWIFT_VERSION = 2.3 and record Xcode migration
Merge pull request #152 from sharplet/send-action-swizzle
Move swizzling helper out of framework target
Fix Build on Xcode8b4
Partial support for Xcode8b4
Merge pull request #3108 from ReactiveCocoa/RuiAAPeres-patch-1
Fixes broken link
Added another signal deallocation test case.
Annotated and cleaned up a few test cases in `SignalLifetimeSpec`.
Added a signal lifetime test case.
Merge branch 'RAC5' into signal-lifetime
Merge pull request #3102 from ReactiveCocoa/swift3-beta-4
NSObject+KeyValueObserving: changed as? Type to as! Type?
NSObject+KeyValueObserving: fixed indentation
Fixed warnings for unused values
Cleaned up KeyValueObservingSpec
Updated the playground pages for Swift 3 beta 4.
Updated tests for Xcode 8 beta 4.
Changes for stdlib changes in Xcode 8 beta 4
Added prefixes back to Lock, Locking, and RecursiveLock
Temporarily updated result
Initial support for Swift 3.0 beta 4
Merge pull request #3067 from ReactiveCocoa/swift3-beta-3
SignalProducer.combineLatest: removed no longer necessary workaround
Fixed unused expression result warnings
Fixed warning by verifying test result at compile time
SchedulerSpec: fixed compilation now that order of parameters is enforced
SignalProducerSpec: fixed compilation now that order of parameters is enforced
Updated Quick and Nimble
Signal(Producer).on: changed order of parameters now that they're enforced
Fixed warnings regarding new if syntax
Fixed warnings by adding explicit let
Observer: moved `next` to be the first parameter now that order is taken into account
Defined SWIFT_VERSION to 3.0 to fix compilation in Xcode 8.0 beta 3
Merge pull request #3101 from ReactiveCocoa/RAC5-merge
Merge branch 'master' into RAC5-merge
Merge pull request #3087 from ReactiveCocoa/anders/dynamic-property-2
Ported the nested key path workaround from `RACKVOWrapper`.
Merge pull request #3084 from Patrickuang/FixThrottleScheduleDateIssue
Rename function name to `rewindByInterval`
Merge pull request #3097 from ReactiveCocoa/fix-onStarted
Added two test cases for nested key paths.
Updated the Design Guidelines.
Added a `starting` parameter to `SignalProducer.on`.
Refinements and Documentations.
Merge pull request #3096 from chrrasmussen/master
Merge pull request #3098 from ReactiveCocoa/update-quick-v0.9.3
Merge branch 'master' into anders/dynamic-property-2
Merge pull request #3030 from sharplet/lifetime
Reachability- and observer-aware lifetime of Signal.
Update Quick to v0.9.3
Reversed the order of invocation of nested `started` events.
Start SignalProducers in order as defined for combineLatest() and zip()
Replace usage of internal `DeallocationToken` class with `Lifetime`
Synchronize access to `NSObject.lifetime`
Add Lifetime to enable observation of object deallocation in Swift
Add UT on testing device time change during throttle.
Add comment on the fixing and refactor the date comparison logic between previousDate and currentDate.
Trimmed down the implementation of the KVO extension.
Updated the documentation.
Revamped the KeyValueObserver API.
Added `NSObject.valuesForKeyPath`.
Added a stress test for adding observers.
Ported the async and stress tests from `RACKVOProxySpec`.
Merge pull request #3079 from ReactiveCocoa/anders/static-dispatch-atomic
Merge branch 'master' into anders/dynamic-property-2
Merge pull request #3086 from ReactiveCocoa/update-quick
Replace `rac_valuesForKeyPath` with `KeyValueObserver`.
Clean up the property names
Patches.
Update Quick back to Quick/Quick
Merge pull request #3085 from ReactiveCocoa/timeout-noerror
Signal and SignalProducer: added timeoutWithError overloads for NoError. Fixes #3083.
Replace usage of internal `DeallocationToken` class with `Lifetime`
Handle the case when throttle: previous date is newer than current date. For example, previous date is 5 mins faster than the standard time, adjust the device time 5 mins back to the standard time and trigger the signal again, the scheduleDate is (5 mins + interval) later.
Synchronize access to `NSObject.lifetime`
Add Lifetime to enable observation of object deallocation in Swift
Merge pull request #3078 from ReactiveCocoa/mdiep/property-consistency
`lock` should be a constant reference.
Take 2.
Type erasure for static dispatch in `Atomic`.
Merge pull request #3077 from ReactiveCocoa/use-foundation-locking
Drop the skip(first:)
Share a replayed producer
Replace `MutexType` with `Foundation.Locking`.
Merge branch 'master' into use-foundation-locking
Merge pull request #3074 from ReactiveCocoa/extend-nsrecursivelock
[MutexType] Just extend NSRecursiveLock and remove RecursiveLock class
Merge pull request #3046 from filblue/reuse-atomic-in-mutable-property
Reuse Atomic in MutableProperty
Updated for the latest RAC5 changes.
Edited the comments of the composed property relay impl.
Merge branch 'RAC5' into anders/property-consistency
Merge pull request #3023 from ReactiveCocoa/merge-readonly-properties
Revert `PropertyProtocol.sources`. This reverts commit f3163d06fbce577787ebb8c0dd4fb5aa49d15218.
Revert "Make `PropertyProtocol.source` an optional."
Caught a typo in the `PropertyProtocol` docs.
Merge branch 'RAC5' into merge-readonly-properties
Merge branch 'RAC5' into anders/property-consistency
Merge pull request #3066 from ReactiveCocoa/rac5-merge-docs
Fix the event enum cases and a few parameter names.
Document new Property operators in 5.0.
Merge branch 'master' into rac5-merge-docs
Update tvOS specific implementation.
Update the resolved Cartfile.
Merge pull request #2995 from tomj/eimaintas_tomj_pr
Merge pull request #3059 from ReactiveCocoa/update-result
Get the delimiters in order.
Proofread
Fix the markup for `Signal.swift`
Complete markup for `SignalProducer.swift`
Fixed grammer in `DocumentingCode.md`.
Merge branch 'RAC5' into anders/property-consistency
Improve the documentation of the relay creation, and composed property related matters.
Merge branch 'rac5-fix-travis' into anders/property-consistency
Merge branch 'rac5-fix-playground' into anders/property-consistency
Lazily initialises and shares the signal of a composed property.
Reverts to use a relay as the single source of truth for a composed property.
Make `PropertyProtocol.source` an optional.
Update Result to 2.1.3
Merge branch 'RAC5' into merge-readonly-properties
Merge pull request #3057 from ReactiveCocoa/rac5-fix-travis
Merge pull request #3005 from ReactiveCocoa/swift2.3
Add a few more guidelines to `DocumentingCode.md`
Add markup to first 30% of `SignalProducer.swift`
Initial `SignalProducer.swift` documentation trimming
Merge branch 'swift2.3' into rac5-fix-travis
Complete markup for `Signal.swift`
Add markup to another 15% of `Signal.swift`
[Travis] Still use `build` and `test` actions for macOS to correctly run `validate-playground.sh`
Update for the latest `RAC5` commit.
Update dependencies.
[Travis] Use `build-for-testing` and `test-without-building` build actions on Xcode 8
Revert "[ReactiveCocoa-iOSTests] Explicitly don't code sign"
Add markup to another 10% of Signal.swift
Add markup to another 10% of Signal.swift
Add markup to another 15% of Signal.swift
Add markup to first 25% of Signal.swift
Fix indentation
Add missing `return` laceholders
Make markup conform to code documentation guidelines
Revert "[Travis] Split Carthage jobs"
Merge branch 'rac5-fix-travis' into merge-readonly-properties
Mini proofread on `DocumentingCode.md`
Proofreading for `Property.swift`
Proofreading for `Observer.swift`
Proofreading for `ObjectiveCBridging.swift`
Proofreading for `FoundationExtensions.swift`
Proofreading on Flatten.swift
Proofreading for `EventLogger.swift`
Proofreading for `Event.swift`
Proofreading for `DynamicProperty.swift`
Proofreading for `Disposable.swift`
[Localisation](https://www.youtube.com/watch?v=RPBX47zSktc)
Proofreading for `CocoaAction.swift`
Proofreading for `Bag.swift`
Proofreading for `Atomic.swift`
Proofreading for `Action.swift`
Proofreading for `Event.swift`
Small enhancement to @eimantas work on Scheduler.swift
Use closure as a term for function arguments.
[WIP] Add markup to property binding operators.
Add markup to `Disposable.swift`.
Add markup to `Bag.swift` file.
Add markup to `Atomic.swift` file.
Add initial draft about how to document the code.
Add markup to `Property.swift`
Add some markup formatting
Add some whitespace between markup tokens
Change `parameter` to `parameters` everywhere
Add initial markup for `Flatten.swift`
Add some markup to `DynamicProperty.swift`
Fix grammer und formattering!
Add markup to `CocoaAction.swift`
Add markup to `Action.swift`
Add markup to `FoundationExtensions.swift`
Add markup to `ObjectiveCBridging.swift`
Add markup to `EventLogger.swift`
Fix indentation for event and scheduler markup
Fix indentation in `Scheduler.swift`
Add markup to `Scheduler.swift`
Add markup for `Event` and `Observer` classes
Merge branch 'swift2.3' into rac5-fix-travis
Merge pull request #3056 from andersio/rac5-fix-playground
Merge branch 'rac5-fix-playground' into merge-readonly-properties
Update `PropertySpec`.
Make `PropertyProtocol` class bound, and fix a few missed old names.
Update the `SignalProducer` playground.
[Travis] Split Carthage jobs
[ReactiveCocoa-iOSTests] Explicitly don't code sign
Targets the `RAC5` branch of ReactiveCocoa.
Update the documentation of `Property`.
Merge `AnyProperty` and `ConstantProperty`.
Merge pull request #3001 from ReactiveCocoa/RAC5-swift3
Merge branch 'swift2.3' into RAC5-swift3
Update framework dependencies.
Share `Data`'s implementation of `rex_data` with `NSData`.
Remove the argument labels of `combinePrevious(_:)`. (2)
Update `UIViewController`.
Mark a few APIs unavailable.
Rename a few more APIs.
Remove the argument label of `combinePrevious`.
Update the playground.
Revert deployment target to 10.9.
[Travis] Check Carthage compatibility
Update Quick and Nimble
Update CI config.
Update the test cases.
Swift 3 enablement.
Swift 3 enablement.
`AnyProperty(initial:then:)`.
Mark a few more APIs unavailable.
Prettify a few lines in RACKVOProxySpec.
Re-indent the playground sources to match the rest of the repo.
Update the playground for the latest renaming.
Update FoundationExtensionSpec.
Fix the signatures in Foundation extensions.
Merge pull request #3048 from ReactiveCocoa/rp/AmbiguityValuesTest
less kung fu. :P
Added missing test to #3043
Add back the missing label of `concat(value:)` and `prefix(value:)`.
Revert the signature change to `skip(until:)` and `take(until:)`.
Merge pull request #3043 from ReactiveCocoa/fix-producer-variadic-init
`take(first:)`, `take(last:)` and `skip(first:)`.
Remove the redundant `SWIFT_VERSION` added by the migrator.
Ignore `PlaygroundUtility.remap`.
Fixed a few missed bits that found by the migrator.
Fix `SignalProducer(values: Value...)` signature to be distinguished from `SignalProducer(values: S)`
Merge pull request #140 from RACCommunity/rp/deploy
Fix a couple of typos.
Fix `CocoaAction` KVC issues.
Rename a bunch of signal and producer operators.
Fix the broken unbreakables.
Revert the renaming of `timer`.
Add tons of unavailable stuff.
Rename `producerError` to `producerFailed`.
Rename `OptionalType` to `OptionalProtocol`.
Rename `ObserverType` to `ObserverProtocol`.
Fix the documentation of `Disposable` types.
Clean up the `Action` namings.
Clean up the `Scheduler` namings.
Clean up `Property` namings.
Update Result to the latest Swift 3.0 compatible `master` commit.
Merge branch 'RAC5' into RAC5-swift3
Removed before_install step for carthage setup
Add bindable property to wrap a control's value (#119)
Automatically upload .framework when tagging
Remove confusing UIActivityIndicatorView.animating extended property (#139)
Implement rex_animating for UIActivityIndicatorView (#134)
Merge pull request #137 from RACCommunity/repo-transfer
[beta 2] Remove the weird workaround for linker error on Xcode 8 beta 1
Update README to point at RACCommunity
Merge pull request #3028 from ReactiveCocoa/rac5-unavailable-api
`fatalError` for the unavailable API.
Changed `rex_text` bindable property to be an optional string (#133)
Merge pull request #3031 from ReactiveCocoa/rp/sandbox
Added a page, where we can experiment things from a clean slate
Remove `buffer` from the playground.
Removed test cases of the unavailable APIs.
Maintain removed APIs in a separate source file. `buffer` is made a private implementation.
Update dependencies.
Merge branch 'master' into RAC5
Merge pull request #3019 from ReactiveCocoa/specs-remove-buffer-usage
Remove SignalProducer.buffer usage in some specs
Update Result and fix code signing on Xcode 8 for device builds
Merge branch 'master' into swift2.3
Merge pull request #3018 from azeff/fix_mutableproperty_binding_teardown
Correclty teardown MutableProperty binding when it is disposed. Add assertions to existing unit tests.
Merge pull request #3011 from ReactiveCocoa/startWithNext-errors
Update the playground.
Changed SignalProducer.startWithNext and Signal.observeNext to deprecated. Will remove in a future release.
Fixed SignalProducer playground
Deprecated Signal.observeNext (in favor of the more specific one for Error == NoError)
Deprecated SignalProducer.startWithNext (in favor of the more specific one for Error == NoError)
Added Signal.observeResult
Added SignalProducer.startWithResult
Signal.observeNext is only exposed for Error == NoError (fixes #3010)
SignalProducer.startWithNext is only exposed for Error == NoError (fixes #3010)
Merge pull request #3015 from ReactiveCocoa/deprecate-buffer
Merge pull request #130 from neilpa/bump4.2.1
Revert the argument label change to `AnyProperty(_:)`.
Changes to the labels of `AnyProperty` initialisers.
Oops! Somehow `MutablePropertyProtocol` is overlooked.
Correct and complete the `RACSignal` nullability annotation.
Shortened `addDisposable(_:)` to `add(_:)`. Make `+=` everywhere.
Deprecate SignalProducer.buffer()
Default values for `takeFirst`, `takeLast` and `skipFirst`.
Introduce `ActionProtocol.toRACCommand`.
The Mega Renaming Patch.
Move the top-level `combineLatest` and `zip` to their respective types.
Reenable `toAction` tests.
RAC 4.2.1 now provides debounce
bumped RAC to 4.2.1
Annotate `RACCommand` so that it looks less surprising in Swift.
Refactor the UIScheduler.
Patches: Use #keyPath, adopt `DispatchGroup.wait` and suppress unintended unused result warnings.
Annotate `RACSignal` so that it looks less surprising in Swift.
[Travis] Don't allow failures
Merge branch 'master' into swift2.3
Merge pull request #3012 from dmcrodrigues/remove-last-wrapper-to-runtime-functions
Convert `RACCommand.toAction` into a free function. Fix a few argument labels.
Remove `@discardableResult` for internal implementations. Suppress the unused result warning in `Signal.observe`.
Remove `@warn_unused_result`.
Record Swift migration on the project
Remove the last wrapper to runtime functions
Making Travis CI work (Swift 3) (#3007)
Update the deployment target of Mac to 10.10.
Merge branch 'swift2.3' into RAC5-swift3
Merge branch 'RAC5' into RAC5-swift3
Merge branch 'master' into RAC5
Add Xcode 8 build matrix
Merge branch 'liscio-swift3' into RAC5-swift3
Turn off address sanitizer for ReactiveCocoa-iOSTest to avoid compiler segfault.
Replaced the use of the obsolete `QueueScheduler(queue:)`.
Support Swift 2.3 with a weird workaround for Xcode 8 beta 1
Oopsie. Remove merge droppings...
Merge branch 'swift3' of https://github.com/liscio/ReactiveCocoa into liscio-swift3
Pick up Nimble change that got missed
Many changes leading to (almost all) tests passing
Swift 3.0 enablement. (#2999)
Correct the QueueScheduler init (for now)
Update Cartfile, fix Result name references
Swift 3.0 enablement.
Merge pull request #2975 from miikegb/make_flatten_operate_on_sequencetypes
Merge pull request #2991 from inamiy/TestScheduler/fix-currentDate
Merge pull request #2993 from sharplet/RAC5
Merge branch 'master' into RAC5
Merge pull request #2992 from natestedman/observertype
Fix a/an grammar in Observer documentation.
Add ObserverType to Observer, for constrained extensions.
Fix TestScheduler not having correct `currentDate` while advancing
Merge pull request #2987 from sharplet/then-interrupted
Merge pull request #2984 from andersio/rac5-inout
Update then() to forward interruptions on the original producer
Changed `modify(action:)` to expose an inout parameter.
Merge pull request #2981 from ReactiveCocoa/update-result
Update Result to 2.1.0
Merge pull request #2977 from kirillyakimovich/master
Playground typo fixed
Fixed indentation on tests.
Fixed test description to accurately describe its intention.
Added flatten variants that operate on SequenceTypes
Merge pull request #2966 from andersio/rac5-property-init
Improve coverage of the test cases for #2966.
Use the new `prefix` operator.
Changes to the producer- and signal-sourced `AnyProperty`s.
Merge branch 'master' into RAC5
Merge pull request #2972 from andersio/zip-fix
Workaround to the malfunctioning `defer`.
Fixed an issue preventing zipped producers from completing.
Add test cases for `zipWith`.
Merge pull request #2961 from github-user32/master
Merge pull request #126 from iv-mexx/feature/UISegmentedControl
Implement `rex_selectedSegmentIndex` for UISegmentedControl
bump RAC to 4.2 (#124)
Add userInteractionEnabled to UITableViewCell (#127)
Merge branch 'master' into RAC5
Merge pull request #2963 from andersio/rac5-property-fix
Further simplify the implementation.
Fixed a nil-unwrapping crash in `AnyProperty`. It would happen on properties with its producer terminated when being passed into the affected initialiser.
Failing test case.
Fix memory leak when binding MutablePropertyType to a producer by ensuring startWithCompleted's result is added to the disposable.
Merge pull request #2922 from andersio/RAC5-property
Add test cases for `Concat` and `Merge` flattening strategies.
Remove the invalid caveats.
Make all flatten strategies available on `PropertyType`.
Rename the initialisers.
Merge pull request #2957 from srvv/playground
Playground: Correct description for materialize
Merge pull request #2955 from rpowelll/playground-typo
Fix a typo in the documentation playground
Merge pull request #2952 from ReactiveCocoa/debounce
Merge pull request #2954 from ReactiveCocoa/rp/suffix
More generic method
Changed suffix to concat(value:)
Since we have prefix, it makes sense to have sufix as well.
Align to Swift 2.2 convention.
Fix a typo.
Use an `Any` array to capture sources instead of closures.
Conform debounce to RAC conventions
Merge pull request #2935 from tzongw/master
Merge pull request #2941 from inamiy/beginWith
Rename `beginWith()` to `prefix(value:)`
add a test case for `bind`
avoid signal retain in `bind`
Merge pull request #2943 from tomj/signal_playground
Merge pull request #2947 from JovannyEspinal/patch-1
Update BasicOperators.md
Merge pull request #2912 from ReactiveCocoa/uischeduler-check-main-queue
Initial Signal playground operators drop
Merge pull request #2944 from ReactiveCocoa/simplify-signal-combineLatestWith
Simplify Signal.combineLatestWith implementation a bit
Typo in `Signal` docs
`Event` is a type, let the playground docs reflect that
Add `beginWith()`
Add a warning to `signal` of `AnyProperty`.
Simplified implementation of `AnyProperty(propertyProducer:capturing:)`.
Revert changes to producer/signal-sourced AnyProperty initialisers.
Merge pull request #2938 from miikegb/fix-typos-signalproducer-playground-page
Added a test case for `AnyProperty`. It fails if the event is sent before the latest value is observable via `value`.
Fixed typo, re-order scan and reduce to improve readability and update description for sampleWith operator.
Revert the changes in protocols.
Move `capture` into the `AnyProperty` namespace.
Move implementation details from `lift` to `AnyProperty`'s initialiser.
Add debounce to SignalProducerType.
Add debounce to SignalType.
Test that a throttled signal completes immediately (in a scheduler sense)
Merge pull request #2936 from ReactiveCocoa/update-nimble
Update Nimble
Merge pull request #2930 from tomj/playground_build_steps_typos_formatting
Merge pull request #2932 from ReactiveCocoa/utilize-event-value-getter
Utilize Event.value getter
Port the top-level `combineLatest` and `zip` to work on `PropertyType`.
Factored out the source capturing logic for property composition, so as to communicate the intent better.
Merge pull request #2931 from ReactiveCocoa/make-merge-more-generic
Make `merge` static methods of `Signal` and `SignalProducer` more generic
Merge pull request #2917 from ReactiveCocoa/optimize-zipWith
Merge pull request #2925 from larryonoff/feature/signal-producer-add-merge
Tell users to build project dependencies before the project itself
Tighten up the instructions in the playgrounds and README
Merge pull request #2928 from larryonoff/feature/signal-producer-extend-init
move Signal.merge() and SignalProducer.merge() into FlattenSpec
add SignalProducer variadic init with values
add ... merge operator variant to Signal
Update ZipState to hold both left and right states
Revert ZipState.isFinished
fix protocol that is extended
add merge operator for SignalProducer
Merge pull request #2920 from ReactiveCocoa/extra-composite-disposable-operator
Updated the documentation and formatting.
Move the capturing closure into the box.
Property composition and enhancements.
Merge branch 'master' into RAC5
Add += operator variant for CompositeDisposable and ActionDisposable
Optimize Signal.zipWith
[UIScheduler] Don't rely on `NSThread.isMainThread()`
Merge pull request #2915 from ReactiveCocoa/action-tweaks
Merge pull request #2918 from ReactiveCocoa/fix-ci-build
Correctly exit with failure
`=` must be used for strings instead of `-eq`
Fix indentation
[Action] Pass the initializer
[Action] Use raw `_executing` in init
Merge pull request #2902 from Palleas/validate-playground
Merge pull request #2914 from ReactiveCocoa/cocoaaction-spec
Don't echo anything if not validating playground
Fail if Workspace, scheme, action or sdk is not set
Factor out CocoaActionSpec.swift
Merge pull request #2910 from ReactiveCocoa/unsafe-cocoa-action-retain-cycle
Remove unused private variable
Merge pull request #2908 from ReactiveCocoa/cocoaaction-private-setter
Merge pull request #2891 from tditchek/master
Break retain cycle with Action.unsafeCocoaAction
[CocoaAction] Use private setter for some properties
Update README.md
Add a test for #2233
removed incorrect info from README (Issue #2890)
Ensure Xcode action and SDK vars are available
Validate playground code as part of travis build
corrected spacing in README (Issue #2890)
Merge pull request #2905 from ReactiveCocoa/2900-style-tweaks
Fix wording
Minor style tweaks for SignalProducer.buffer()
Use == operator instead of equal matcher
Merge pull request #2903 from ReactiveCocoa/replay-lazily-lifetime
Merge pull request #2900 from ReactiveCocoa/buffer-deadlock
updated README
Don't dispose of the producer until all observers have terminated
Add a test for #2728
Use forEach
replayBuffers should never be nil
Merge pull request #2670 from Adlai-Holler/feature/ReplaceSpinlocks
Wrap use of QueueScheduler in #available
Merge pull request #2901 from Palleas/patch-1
Fix link to CocoaAction
Reimplement SignalProducer.buffer() with a single Atomic
Add missing slashes
Add test case for issue 2515
Merge pull request #2883 from RuiAAPeres/rp/CocoAction
Internal usage only
Merge pull request #2897 from ReactiveCocoa/nested-logging-event-types
Make logging event types nested in a namespace type
Merge pull request #2878 from geoffspears/master
Merge pull request #2895 from ReactiveCocoa/refactor-eventlogger
Reverting the GCC_WARN_ABOUT_MISSING_NEWLINE flag.
Refactor EventLogger with protocol extension
Merge pull request #2893 from raphaeloliveira/FixBasicOperatorsDocTableOfContents
Fix BasicOperators.md table of contents
Merge pull request #2892 from ReactiveCocoa/flatten-minor-tweaks
So we can preserve the semantics ✨
[Flatten.swift] Minor style tweaks
[Flatten.swift] Just import NoError enum
Merge pull request #2885 from ReactiveCocoa/flatten-no-error
Don't call SignalProducers signals
expect(_) == _
Group disposal tests together
Simplify implementation by using flatMap overloads
fixed README to reflect correct throttle usage (Issue #2890)
updated README.md (Issue #2890)
fixed misrepresentation of throttle in README.md (Issue #3890)
Use some flatMaps
Merge pull request #2889 from ReactiveCocoa/original-value-from-modify
Merge pull request #2884 from ReactiveCocoa/unique-values
Make use of the return value of Atomic.modify in SignalType.zipWith
Add other NoError, NoError variants of flatMap
SignalProducer.flatMap with NoError
SignalProducer.flatten with NoError
flatMap Signal-of-SignalProducers with NoError
Merge pull request #2888 from sharplet/as-fix-dynamic-property-init
Allow DynamicProperty to be initialized with an optional object
Merge pull request #2887 from tomj/remove_println_from_docs
`println()` should be `print()` in the documentation
Fix indentation
Atomic isn't necessary because Signals are serial
Explicitly list cases
Add missing whitespace
Use a trailing closure
flatten Signal-of-SignalProducers with NoError
flatMap Signal-of-Signals with NoError
flatten Signal-of-Signals with NoErrors
Fix race condition in uniqueValues
CocoaAction separation.
Add uniqueValues(_:) variant
Merge pull request #2881 from ReactiveCocoa/void-return-types-redux
Fix typo
Merge branch 'master' into unique-values
Change void return types to using Void
Resolved a couple of missing newlines that are contrary to the specified project coding conventions.
Merge pull request #2874 from tomj/render_playground_markup_by_default
Display playgrounds as rendered by default, so more people will grok RAC
Merge pull request #2871 from RuiAAPeres/rp/updateContribution
Updated Contributing file
Merge pull request #2869 from ReactiveCocoa/make-racdelegateproxy-public
Merge pull request #2867 from ReactiveCocoa/travis-tvos-and-watchos
Make RACDelegateProxy public
Merge pull request #2806 from larryonoff/feature/extend-composite-disposable
[Travis] Let's test tvOS and build watchOS schemes
Merge branch 'dmcrodrigues-add-tvOS-test-target'
Set `parallelizeBuildables` and `buildImplicitDependencies` to NO for tvOS scheme
Remove SDKROOT from tvOS test target
Specify the base configuration file for tvOS test target
Remove MTL_ENABLE_DEBUG_INFO from tvOS test target
Clean up some framework references
Merge pull request #2865 from ReactiveCocoa/playground-fix-styling
Let's test ReactiveCocoa for tvOS
Merge pull request #2866 from ReactiveCocoa/unreal-started-event
:fire: .Started case from SignalLoggingEvent
Prefer tab indentation
Add a trailing newline
Consistently use `()` over `Void`
Consistent code styling for Playground
Merge pull request #2864 from ReactiveCocoa/travis-faster-build
Merge pull request #2863 from ReactiveCocoa/RAC5-dynamicproperty-tweaks
Merge pull request #2862 from ReactiveCocoa/dynamicproperty-operators-tweaks
[Travis] Don't generate debug symbols
[Travis] Disable static analysis during build for faster builds
Make `optionalize()` internal
Make ObjectiveCRepresentable methods static and remove AnyRepresentation
Simplify passing method references
Rename ObjectiveCRepresenting to ObjectiveCRepresentable
Use the wrapped `self.representation` instead of the given `representation`
Use Optional.init
Factor out the operators into DynamicProperty.swift
Use SignalType / SignalProducerType and generic constraints for DynamicProperty operators
Merge pull request #2551 from sharplet/dynamic-sugar
Merge pull request #121 from eofs/feature/uikit-uiprogressview
Merge pull request #2859 from ReactiveCocoa/2854-redux
Merge pull request #2858 from ReactiveCocoa/inline-liftRight-in-takeUntil
Merge pull request #2860 from ReactiveCocoa/avoid-using-buffer
Merge pull request #2835 from dmcrodrigues/dr/add-collect-with-predicate-and-collect-with-count
Updated playground to include all versions of `collect`
Updated documentation and re-introduce `collect()`
Created two independent APIs to use `collect` with a predicate which can or not include the next value in the sequence
Introduce `CollectStrategy` to provide a flexible configuration of `collect`
Extend `collect` with a count-based and a predicate-based version
Try to avoid using `SignalProducer.buffer`
Use == operator instead of beTrue matcher
Update the documentation
Use guard syntax
rac_notifications shouldn't strongly capture the observed object
Inline liftRight in SignalProducer.takeUntil
Added rex_progress to UIProgressView
Merge pull request #2852 from sharplet/bridgeable-property
Merge pull request #2849 from iv-mexx/playgroundPrintTuples
Merge pull request #2853 from tomj/add_basic_operator_link
Add link to Basic Operators in `Signal` Playground
Merge pull request #2850 from iv-mexx/playgroundSubscriptionExamples
Merge pull request #2851 from aschuch/patch-1
Fix typo in EventLogger `functionName`
Add example about the subscription behavior of a signalProducer
Add example about the subscription behavior of a signal
playground: fix printing of tuples
Merge pull request #2848 from RuiAAPeres/rp/updatePlayground
Identation + start (code review)
Updated README to mention playground
Updated playground with new operators
Merge pull request #2839 from RuiAAPeres/rp/debug
Merge pull request #2847 from ReactiveCocoa/refactor-modify
Merge pull request #2846 from ReactiveCocoa/avoid-default-for-switching-event
Merge pull request #2844 from ReactiveCocoa/bufferstate-improvements
Merge pull request #2845 from ReactiveCocoa/2782-tzongw-master
Added explicit identifier
Refactor modify using withValue
Avoid using `default` for switching `Event`
Unfocus the test
Renaming
Style fix
dispose subscriber when completed
Add a failing test case for memory leak in RACSubject
Minor improvements to BufferState.addValue
Merge pull request #2795 from RuiAAPeres/swift-playground
Tested the events param
Updated Debugging techniques
The message formating shouldn't be logEvents's responsability
Separated the events types
Merge pull request #2788 from sdduursma/property-map
Removed the EventLogger Protocol.
Add Property map operator
Code Review
Merge pull request #2792 from victorlin/sample-with
Merge commit 'ddb7e245426a3a7d843ccdd923b9b5d8eb93cc90' into rp/debug
Merge pull request #2840 from iv-mexx/documentation_debugging
Allow DynamicProperty to support regular reference types
Make DynamicProperty generic over types bridgeable to Objective-C
Add <~ overload for binding `_ObjectiveCBridgeable` properties to DynamicProperty
Overload <~ to automatically bridge values to Objective-C
debugging documentation for binding to DynamicProperty
Use a protocol extension
Updated the Debugging Techniques document
Updated README
Missing parameters on the producer's debug()
Added debug operator
Add missing space in doc
Add documents for sampleWith
Add tests for lifted sampleWith
Add tests for sample with
Add sampleWith for signal producers
Add sample with
Merge pull request #2836 from ReactiveCocoa/restore-var-binding
Let's shadow the original variable
Restore var binding
Merge pull request #118 from ikesyo/replace-observer
Merge pull request #2764 from andersio/property-renewal
Merge pull request #2828 from ReactiveCocoa/2570-cradnovich-actiontype-protocol
Use associatedtype
[ActionType] Update the documentations
Implement #2564: ActionType for protocol extension
Reverted the removal of the lock name.
Merge pull request #2800 from ReactiveCocoa/fix-leak-on-lift
Merge pull request #2696 from erichoracek/raccommand-input-type
Merge pull request #2826 from RuiAAPeres/rp/useSwap
the swap does exactly that.
Initial work in the Signal class
Replace some Observer use cases with start / startWithNext
Improved documentation.
Improved `producer` implementation.
Removed a unnecessary capture in `producer`, and a unnecessary posting of Next event in `init(_:)`. A little change is made in the comments.
Merge pull request #2811 from ReactiveCocoa/dealloc-signal-for-replayLazily
Merge pull request #2819 from ReactiveCocoa/optional-syntactic-sugar
Merge pull request #117 from ikesyo/replace-sink-with-observer
Merge pull request #116 from ikesyo/refactor-barbuttonitem-and-button
Replace `sink` with `observer`
Refactor UIBarButtonItem.rex_action and UIButton.rex_pressed
Use syntactic sugar for Optional in SignalType.skipRepeats
Renaming
Use a plain class for dealloc signal instead of NSObject.rac_willDeallocSignal
Merge pull request #2814 from ReactiveCocoa/extract-dynamic-property
Merge pull request #113 from ikesyo/filterMap-minor-refactorings
Minor refactorings for rex_started, rex_completed and filterMap
Merge pull request #112 from ikesyo/trailing-newlines
Add/Restore trailing newlines for consistency with RAC's codebase
Merge pull request #105 from larryonoff/feature/extend-action
rename sink to observer
change the order of properties in source file
add Action tests
fix typo
add `rex_` prefix to new properties
add completed and started signals to Action
Merge pull request #2812 from RuiAAPeres/rp/fixAssert
Extract DynamicProperty into its own file
Merge pull request #110 from bjarkehs/fix_podspec
Exclude UISwitch as well
Should be true, otherwise the assert is pointless
Merge branch 'master' of https://github.com/ReactiveCocoa/ReactiveCocoa into swift-playground
Fix tvOS in podspec and add to travis
Merge pull request #104 from dmcrodrigues/dr/uitableview-prepare-for-reuse-signal
Merge pull request #108 from RuiAAPeres/rp/methodConventions
Update formatting and remove some unnecessary imports
Extend UICollectionReusableView to provide `rex_prepareForReuse`
method names were inconsistent
Rename rex_prepareForReuseSignal and define a protocol to be shared by reusable components
add CompositeDisposable init that accepts sequence with optional disposables
Merge pull request #103 from RuiAAPeres/rp/pruning
Merge pull request #101 from RuiAAPeres/rp/DismissViewController
Added rex_prepareForReuseSignal for UITableView's components
To be aligned with the RAC repo
Merge pull request #2804 from kirillyakimovich/master
Merge branch 'master' into rp/DismissViewController
Merge pull request #100 from RuiAAPeres/rp/VCDisappear
Added the parameter labels.
Code review (func name + tuple named parameters)
Confusing unused line removed
Fix the problem with dismiss via Cocoa API
Merge pull request #2802 from ReactiveCocoa/update-xcconfigs
Update xcconfigs
Minor style fixes
Fix memory leak on `lift`
fix leak on lifted sampleOn
Merge pull request #2801 from ReactiveCocoa/travis-release-build-with-testability
DismissModally Property
[Travis] `xcodebuild test -configuration Release ENABLE_TESTABILITY=YES`
Added the other pair viewDidAppear/viewWillAppear
Use `rex_toTriggerSignal` instead
VC's did/will disappear
Merge pull request #2797 from vagase/UIControl-memory-leak
SignalProducer
Merge pull request #99 from RuiAAPeres/rp/WillDeallocate
fix memory leak cause by unremoved disposable object
To be consistent with the nomenclature.
Code review
Adding in unused warnings
Added deallocate trigger signal
Added .xcplayground + imports
Merge pull request #2777 from ReactiveCocoa/fix-racsequence-foldright
[RACSequence] Clarify the -tail documentation
Merge pull request #95 from RuiAAPeres/rp/UITextView
Merge pull request #97 from dmcrodrigues/dr/uiswitch-on-property
Unified chained `*map` operators into a single `filterMap`
Merge pull request #94 from dmcrodrigues/dr/fix-cocoapods-spec
Merge pull request #93 from 335g/selector
Update Quick to v0.9.2
Add UISwitch on's property
Simplified logic
Update Quick
Update Nimble
[Travis] Use xcodebuild directly with xcpretty
[Travis] Use HEAD of xctool for Xcode 7.3
[Objective-C] Fix -[RACSequence foldRightWithStart:reduce:]
Added UITextView text's producer
Fix podspec and xcodeproj versions
Embrace #selector to fix a warning and achieve a green state
Forward-declare generic RACCommand
Fix variance
Allow RACCommand to specifiy covariant input type
Use #selector
Merge pull request #92 from neilpa/datepicker
Merge pull request #91 from neilpa/label-missing-keys
Disable `testUpdatePropertyFromPicker`
Keys for UILabel associations
Merge pull request #90 from RuiAAPeres/AttributedText
Added AttributedText to UILabel
Updated compatible Swift version in README
Merge pull request #89 from RuiAAPeres/rp/swift2.2
Updated Dependencies for Swift 2.2
Merge pull request #2771 from 335g/result2
carthage update
Update to use Result v2.0.0
Adds rex_date to UIDatePicker.
Replace `MutablePropertyState` with a getter and setter closure.
New Test Case.
Dropped `SignalProducer.buffer(1)` from `MutableProperty`.
Deadlocked properties failing test, by Oleg Shnitko (@olegshnitko). https://github.com/ReactiveCocoa/ReactiveCocoa/pull/2744/commits/92b4082687ac6e3e5c90ad19b838c11a92cbd618
Merge pull request #2760 from ReactiveCocoa/swift-2.2
SignalProducer.combineLatestWith: added workaround for #2751
Updated .travis.yml to use Xcode 7.3
Fixed invalid Quick usage in RACSequenceSpec
Changed qck_it to qck_context to avoid having tests inside of tests
Updated code for Swift 2.2
Updated dependencies for Swift 2.2
Clean up clarity of `seenValues`
Inline filter in unique values
Merge pull request #2701 from NachoSoto/test-signal-handler-lifetime
Merge pull request #2718 from trifonov-ivan/skip-repeats-holds-unneeded
Merge pull request #2732 from cxa/master
Replace increment operator ++ with += 1 because of ++ is deprecated in Swift 2.2 and will be removed in Swift 3
In uniqueValues send completed
Fix style in test
Fix up punctuation in uniqueValues documentation
Use Atomic to lock set while checking for unique values
make skipRepeats implementation more clear
Merge pull request #2721 from tonyarnold/fix/remove-box-project-reference
Remove unused Box.framework project reference
make skipRepeats not capture of previous values
Merge pull request #2717 from seltzered/patch-1
Clarify flatten works on both Signal & SignalProducer
Remove whitespace
Move `uniqueValues` testing to Signal
`uniqueValues` is available to `SignalType`s and `SignalProducerType`s
Lock set when in use in `uniqueValues`
Add note to `uniqueValues` that values are retained
Each call to `start` that uses `uniqueValues` gets a unique set
Add `.uniqueValues` to SignalProducer
Update LICENSE.md
Merge pull request #85 from bjarkehs/fix_rac_dependency_podspec
We require 4.0.1 of RAC to work
Merge pull request #83 from mbuchetics/master
fixed Mac target
Signal lifetime: added test to verify that observe handlers are deallocated.
Merge pull request #2702 from ReactiveCocoa/NachoSoto-patch-1-1
fixed tests
updated podspec
use Result.NoError
Updated README
Merge pull request #2695 from ReactiveCocoa/noerror-from-result
Update Result, use Result.NoError
Merge pull request #81 from bjarkehs/podspec
Merge pull request #82 from ikesyo/rac4
Update RAC to 4.0 final :tada:
Merge pull request #2688 from ReactiveCocoa/rac4-changelog
Merge pull request #2689 from NachoSoto/reactive-cocoa-h
Actually fixed including tvOS headers
CHANGELOG: added links to issue numbers
CHANGELOG: changed "value" to "capacity" for clarity
CHANGELOG: clarified `flatten` improvements
Updated podspec for release candidate 2
Updated podspec to 0.9.0-alpha.3
Added podspec
CHANGELOG: more tweaks for RAC 4
 CHANGELOG: RAC 4 section
Merge pull request #2680 from yinanfang/update-readme
Update format
Update README.md
Merge pull request #2677 from olegshnitko/fix/switchToLatest-leaks
[UPD] flatten spec contexts naming
[UPD] codestyle and DRY in Flatten.spec
[FIX] leaking Signal.concat
[ADD] Signal.concat disposing tests
[UPD] refine Signal.flatten tests
[FIX] leaking Signal.merge
[FIX] switchToLatest leaks
[ADD] failing tests
Merge pull request #80 from RuiAAPeres/addedUITextField
Update dependencies to RAC 4 RC 2
Add const type qualifier to new pthread_mutex code
Merge pull request #2673 from ReactiveCocoa/more-tvos-headers
Actually added several UIKit extensions to the tvOS target
Merge pull request #2672 from ReactiveCocoa/no-default-capacity
Remove default capacity for SignalProducer.replayLazily()
Remove default capacity for SignalProducer.buffer()
Merge pull request #2639 from ReactiveCocoa/replayLazily
Improved replayLazily doctoring
replayLazily: improved docstring
Indentation
Added SignalProducer.replayLazily for multicasting
Use instancetype as return value for initializers, switch ordering in Atomic assertions
Merge pull request #2650 from Adlai-Holler/FixQueueSchedulerDoc
Merge pull request #2669 from ReactiveCocoa/update-nimble
RACSerialDisposable: hold mutex during -isDisposed
Replace OSSpinLock with pthread_mutex throughout
Update Nimble to v3.1.0
Merge pull request #2666 from ReactiveCocoa/NachoSoto-patch-1
Fixed @warn_unused_result message on SignalType.merge
Added test
Added it to the tvOS target
Added the rex_textSignal to UITextField
Merge pull request #2664 from ReactiveCocoa/NachoSoto-patch-1
Merge pull request #2651 from NachoSoto/uicontrol-tvos
README: added Swift version and compatible platforms
Merge pull request #79 from neilpa/travis-update
Pipe watchOS build through xcpretty on travis
Add destination for watchOS
Add tvOS and watchOS to travis
Specify an ios simulator in travis for testing
Update xcode and carthage in travis
Merge pull request #2649 from JuIioCesar/master
Added missing UIKit extensions to tvOS target
Fix documentation for QueueScheduler.init(:,name:)
Fix typo on BasicOperators.md
Merge pull request #2645 from mingliangfeng/master
Update DesignGuidelines.md
Merge pull request #2641 from Adlai-Holler/feature/DisposableIsClass
Merge pull request #2622 from andersio/propertySignal
Require that Disposable is a class
Remove a bad framework search path from ios tests to fix warning
Minor code improvements.
Refactored a `ConstantProperty` test case.
Added a test case for `Signal.empty`. Minor code improvements.
Merge pull request #75 from neilpa/mutefor-clock
Rename muteFor param clock
Merge pull request #74 from neilpa/time-operators
deferredRetry doesn't delay a final failure
Merge pull request #2624 from ReactiveCocoa/atomic
delayed => deferred
Refactor `Atomic.value`
Add AtomicSpec to test targets
Lazily initialised `MutableProperty.signal`.
Fix indentation.
Add `signal` to PropertyType and implementations.
Merge pull request #2617 from andersio/2615-modify
Use `withValue(action:)` in `value.getter`.
Brought Atomic's `modify`, `swap` and `withValue` to MutableProperty. Removed a test case from AtomicSpec.
Simplify delayedStart and delayedRetry and test
Merge pull request #2621 from ReactiveCocoa/minor-code-improvements
Use method references
Use forEach
Use the return value from `removeAtIndex`
Add delayedStart test
Use observe helpers in tests
Add muteFor tests
Add debounce test
Add SignalProducer.delayedRetry
Add muteFor operator
Add a debounce operator
Merge pull request #2620 from raven/patch-1
Typo in README.md
Add SignalProducer.delayedStart
Merge pull request #73 from neilpa/docs
Missing doc comments
Doc comments for property extensions
Merge pull request #72 from neilpa/more-targets
Test the tvOS target
Add UIKit extensions to tvOS target
Add tvOS target
Add a watchOS target
Bump dependencies
Merge pull request #2618 from ReactiveCocoa/nimble-operators
Use == operator instead of equal matcher
Use == operator instead of beFalse or beTrue matcher
Use == operator instead of beFalsy or beTruthy matcher
Merge pull request #2616 from ReactiveCocoa/readme-new-targets
README: added note about watchOS and tvOS support
Merge pull request #2582 from ReactiveCocoa/disposable-cleanup
Merge pull request #2603 from Vadim-Yelagin/issue2586
Tweak test formatting
Fix for code style
Test a no-op `testTransform` instead of `map`
Move all "should deallocate" tests to SignalLifetimeSpec.swift
Replace `Signal.never` with `Signal { _ in nil }`
Rename test cases to "should deallocate..."
Update test cases involving the lifetime of Signal.never
Capture self weakly in disposable from Signal.observe
Add another test case for issue 2585
Add test case for issue 2585
Fix some signal/producer doc comments in flatten
Cleanup @warn_unused_result usage in flatten
Remove var parameter bindings in flatten
Merge branch 'master' into disposable-cleanup
Updated Result to 1.0.1 (see https://github.com/antitypical/Result/releases/tag/1.0.1)
Merge pull request #2565 from neonichu/scope-private-libextobjc-headers
Merge pull request #2606 from NachoSoto/deployment-target
Setting WATCHOS_DEPLOYMENT_TARGET explicitly to 2.0
Setting TVOS_DEPLOYMENT_TARGET explicitly to 9.0
Merge pull request #2602 from bencochran/kerning-tweak
Merge pull request #2598 from natestedman/foundation-imports
Merge pull request #2601 from Adlai-Holler/UpdateAtomic
Add support for rethrowing in Atomic closure methods
Merge pull request #2597 from natestedman/remove-var-binding
“import Foundation” in SignalProducer.swift.
“import Foundation” in Signal.swift.
“import Foundation” in Property.swift.
“import Foundation” in Atomic.swift
“import Foundation” in Action.swift
Remove var parameter binding in Signal.
Remove var parameter binding in SignalProducer.
Remove var parameter binding in Disposable.
Remove “guard var” in Signal.swift.
Remove “guard var” in Disposable.swift.
Merge pull request #2592 from ReactiveCocoa/sequence-schedule-test
Attempt to fix flakey test in travis
Reduce scope of state used for flatten operators
Remove MergeState from merge operator
Merge branch 'master' into disposable-cleanup
Cleanup take-concat test
Implemented failing test using concat and take to expose a behavior that I found odd: when concatting 2 producers, the second one is started even if the first one sends enough values for the observer, when using take()
Extra verification in flatten disposal tests
Merge pull request #2587 from paulyoung/recommended-settings
Update to recommended project settings for Xcode 7.1
Bump dependencies
Merge pull request #2583 from natestedman/fix-will-never-be-executed
Merge pull request #48 from neilpa/predicates
Bring back signal generator disposable
One last predicate
Predicate => Property
Remove unused arity code for now
Use meaningless expression instead of non-executing code.
Add Flatten.swift to other targets
Unify merge implementations
Unify concat implementations
Unify switchToLatest implementation
Share flatMapError implementation
Organize Flatten.swift by operator not types
Explicit flatten implementations for producers to fix disposal bugs
Tweak kerning of “c” in “Reactive”
Failing tests for disposing flattened producers
Remove the optional disposal when creating signals
Failing flatMapError test when disposed
Merge pull request #2577 from ReactiveCocoa/bag-improvements
Merge pull request #2576 from cesteban/skipUntil
Merge pull request #2580 from Adlai-Holler/BufferOptimization
Make BufferState.addValue a little quicker
Fix typo
Add tests for trigger completion to skipUntil and takeUntil examples
Bag: using CollectionType.indices instead of assuming (0..<endIndex)
Bag: removed redundant SequenceType implementation
Bag.insert: explicitly checking for overflow
Merge remote-tracking branch 'origin/master' into skipUntil
Merge branch 'master' into predicates
Merge pull request #2574 from kaishin/master
Add new logo & brand assets
Merge pull request #2572 from ReactiveCocoa/signal-on
Avoid wrapping NotProperty too
Private predicate initializers
Remove unused CompoundPropertyType
More overloads to minimize AnyProperty wrapping
Customize and/or for predicate properties
Merge pull request #70 from ikesyo/associated-property-noescape
Merge pull request #2573 from gfontenot/gf-result-1
Add noescape attribute for `initial` and `placeholder` closures of associatedProperty
Update Result to 1.0
Initialize predicate properties with terms
Add CompoundPropertyType exposing terms
Add skipUntil
Added test to verify SignalProducer.on calls disposed handler
Moved `on` operator to Signal
Merge pull request #2571 from ReactiveCocoa/lift-associativity
Use extension methods in predicate tests
Relocate synchronous sampleOn test
Make liftLeft and liftRight private
Split binary lifing by associativity
Merge pull request #69 from ikesyo/reconsider-associated-property
Remove unneeded comments
Remove NSObject.rex_stringProperty
Remove NSObject.rex_classProperty
Remove NSObjectType and NSObject.rex_valueProperty
[POC] Reconsider associatedProperty(), associatedObject(), rex_valueProperty() interfaces
Merge pull request #68 from ikesyo/refactor-rex_valueProperty
Refactor NSObject.rex_valueProperty() using associatedProperty()
PropertyOf => AnyProperty
Merge branch 'master' into predicates
Merge pull request #66 from neilpa/travis-ci
Manually download RAC prebuilt framework for Travis
ios travis builds still don't work after updating rex code signing
Forgot to add the iphonesimulator back to carthage bootstrap
One last try at building ios on travis
Don't codesign simulator builds
Disable ios builds in travis until RAC signing issue is resolved
Stop using submodules with carthage
carthage bootstrap in travis should use submodules
Specify iphonesimulator for carthage in travis
Remove xcpretty from travis to test
Add iOS testing to Travis
Revert "Try using the default travis test script"
Try using the default travis test script
Run carthage on travis
Setup travis-ci
Merge pull request #65 from neilpa/key-shadowing
Rename associated object keys to avoid shadowing
Merge pull request #62 from iv-mexx/UILabelTextColor
Use the default color of a new UILabel as fallback instead of force unwrapping
Scope usage of private libextobjc headers
Added a failing test to illustrate bug in SignalProducer.sampleOn(SignalProducer)
Merge pull request #2526 from NachoSoto/signal-merge
Add testcase that replicates a bug with binding UIControl.enabled and UIControl.selected
Merge branch 'master' into UILabelTextColor
Merge pull request #61 from iv-mexx/fixTestFails
Merge pull request #2545 from felixjendrusch/explicit-dependencies
fix assertions for floats by using XCTAssertEqualWithAccuracy
fix crash in UIButtonTests caused by `performSelector` without object where object was expected
add `rex_textColor` to UILabel
Merge pull request #2547 from ReactiveCocoa/class-vs-static
Signal: changed class methods/properties to static
Restrict continuous integration to Mac and iOS
Explicitly set build dependencies for Mac and iOS
Update OS X image to 7.1
Readded travis.yml
Signal.merge now takes a SequenceType of Signals
Renamed Signal.mergeSignals to Signal.merge
Merge pull request #2544 from NachoSoto/to-rac-signal-extension
Implemented Signal.mergeSignals. Fixes #2487
Changed toRACSignal from free function to protocol extension
Merge pull request #59 from skyylex/master
Improving UIKit test with proper test operators.
Functional tests for UIKit Extensions
Merge pull request #2534 from NachoSoto/fatal-error
DynamicProperty: using fatalError instead of assert(false)
Merge pull request #2531 from NachoSoto/signal-flatmap-error
Moved flatMapError to Signal. Fixes #2414
Merge pull request #58 from skyylex/rex_pressed_example
Code zip and extended explanation
Merge pull request #2524 from ianthehenry/objcpp
use #import, not @import
UIButton.rex_pressed example in README
Merge pull request #2520 from gfontenot/gf-simulator-signing
Don't code sign frameworks for tv or watch sims
Don't sign framework for iOS simulator
Merge pull request #2517 from ReactiveCocoa/latest-quick-and-nimble
Update Quick and Nimble
Merge pull request #56 from neilpa/rac4-alpha3
Update RAC to 4.0-alpha.3
Merge pull request #2512 from ReactiveCocoa/suffix-test-products
Suffix test product names
Disable bitcode on OS X
Ensure the Profile and Test configurations have a valid PRODUCT_BUNDLE_IDENTIFIER
Set all targets PRODUCT_NAME to PROJECT_NAME
Merge pull request #2509 from tonyarnold/fix/productname
Use the default product name from the xcconfigs
Hardcode the framework name to fix issues arising from #2398
Update NSTextField.rex_textSignal comment
Remove commented out code
Update to Event.Failure
Merge pull request #2502 from NachoSoto/apple-tv-2
Updated Result to 0.6-beta.5 to include tvOS support
Merge pull request #2503 from ReactiveCocoa/remove-swift1.2-wmo-setting
Merge pull request #2505 from bencochran/Error-to-Failed-off-master
Merge pull request #2507 from dkhamsing/patch-1
Update redirects
Merge pull request #55 from ikesyo/new-observer-api
Update documentation and readme for `Failed` change
Update changelog for Event.Failed
Rename Event and Observer Err parameters to Error
Rename Error to Failed
Disabled Bitcode for Mac target
Replace `start` and `observe` overloads with new Observer API
Remove SWIFT_WHOLE_MODULE_OPTIMIZATION build setting
Update plist version to 0.9.0
Xcode 7.1 project settings
Readded tvOS scheme
Enabled Bitcode
Merge pull request #52 from neilpa/rac4-alpha2
Merge pull request #2501 from ReactiveCocoa/rename-schemes
Use RAC 4 alpha 2 release
Rename schemes to match with watchOS one
Merge pull request #2500 from ReactiveCocoa/alpha2-docs
More changelog updates for alpha2
Merge pull request #2499 from ReactiveCocoa/alpha2-docs
Update changelog with new observer API
Update changelog with public bag and atomic
Add swift compat to the README
Merge pull request #2189 from ReactiveCocoa/swift2
Merge pull request #2494 from ReactiveCocoa/bagspec-no-testable
Remove [at]testable from BagSpec
Merge pull request #2493 from ReactiveCocoa/observer-typealias-use
Use Signal<Value, Error>.Observer typealias in SignalProducerType extension for consistency
Protocols for all arities
Arity based tuple-helpers that may be useful
Better extensions for boolean properties
Merge pull request #54 from avalanched/master
UIView.rex_alpha, UIView.rex_hidden
update UIControl.rex_selected tests
UIControl.rex_highlighted
UIControl.rex_selected
UIImageView bindable properties
Merge pull request #2489 from ReactiveCocoa/public-bag
Bag requires a public init
Prep for RAC 4 alpha-2
Actually make Bag and Atomic public
Move bag and atomic out of internal utilities
Publicize Bag and Atomic
Merge pull request #2481 from chenjsa/swift2
Merge pull request #2486 from ReactiveCocoa/update-quick-and-nimble
Use haveCount matcher
Update Quick and Nimble
Create CONTRIBUTING.md
Update BasicOperators.md
Merge pull request #2484 from AquaGeek/any-property
Note rename in the changelog
Rename variable to 'property'
Fix 2476: Rename PropertyOf to AnyProperty
Merge pull request #2483 from ReactiveCocoa/fix-queue-deprecation-warning
Update QueueScheduler deprecation warning.
Update BasicOperators.md
Merge pull request #1 from ReactiveCocoa/swift2
Merge pull request #2477 from chenjsa/swift2
Update BasicOperators.md
Update BasicOperators.md
Update BasicOperators.md
Basic predicate tests
Simple predicates for boolean PropertTypes
Merge pull request #2475 from dapenggao/swift2
Change `sink` to `observer`
Merge pull request #2474 from dapenggao/swift2
Update `SignalProducerSpec` to the new `Observer` API
Merge pull request #2442 from ReactiveCocoa/observer-api
Merge remote-tracking branch 'origin/swift2' into observer-api
Merge pull request #2449 from NachoSoto/flatten-for-all
Simplified Signal<Signal<T, E>, E>.flatten
Added SignalProducer.flatten and SignalProducer.flatMap for SignalProducers of Signals (fixes #2422)
Added Signal.flatten and Signal.flatMap for Signals of Signals (fixes #2422)
Explicitly using .Next instead of default
SignalProducer: added an initializer that takes a Signal.
SignalProducer.lift: added note warning that the implementation will start the receiver of the operator right away
Merge pull request #2439 from NachoSoto/producer-takeuntil-signal
Remove unnecessary closure literal
Merge pull request #2450 from NachoSoto/disposable-test
Simplified RACSchedule.schedule implementation
Removed remaining references to 'sink' from tests
Updated documentation for new observer API
Refactored SignalProducer.lift to make it more consistent
Fixed SignalProducer.sampleOn(Signal) docs
Fixed SignalProducer.lift taking a Signal and added tests for it
SignalProducer: added overloads to operators taking a Signal:
SignalProducer.takeUntil: added overload with trigger as Signal
Fixed infinite recursion in RACScheduler.schedule
Added test coverage for RACScheduler: DateSchedulerType extension, uncovering infinite recursion in RACScheduler.schedule
Merge remote-tracking branch 'origin/swift2' into observer-api
Merge pull request #2421 from NachoSoto/bag-memory-fix
Revert "Workaround for memory problem in Bag. Thanks @jckarter!"
Workaround for memory problem in Bag. Thanks @jckarter!
Revert "Fixed a few more warnings related to Bag being a class now"
Revert "Changed Bag to a class to reduce memory pressure and workaround #2417"
Revert "Bag.generate: copying elements to make generator thread-safe"
Bag.generate: copying elements to make generator thread-safe
Fixed a few more warnings related to Bag being a class now
Fixed warnings for unused variables
Changed Bag to a class to reduce memory pressure and workaround #2417
Re-added BagSpec to test suite and updated to Swift 2.0
Bag: added test reproducing #2417 memory problem (only affects Swift 2.1 as of beta 2)
Remove unnecessary Signal.observe(_:) override
Fix point-free sweetness.
Merge pull request #2441 from NachoSoto/signal-generator-no-escape
Point-free sweetness
Add Observer.swift you big dummy
Checkpoint
Signal.init: added @noescape annotation to generator
Merge pull request #2435 from dapenggao/patch-1
Merge branch 'master' into swift2
Merge pull request #2433 from ReactiveCocoa/fix-flatten-leak
Change indentation
Fix intermixing of spaces and tabs
Change `observeWithStates` from a free function into a private method
Reverse indentation
Reduce dependency on the `signal` property of `SignalType`
Replace `default` with explicit `case` in `switch`
Use a better version of `modf`
More accurate typing for `wallTimeWithDate`
`import Foundation` for `Scheduler.swift`
Get rid of our circular reference when the signal's disposed of.
Merge pull request #2428 from dapenggao/patch-1
Update Signal.swift
Merge pull request #2413 from iv-mexx/updateReadme
Remove spaces in empty line
Fix indentation again, indent with spaces
Fix indentation
Merge pull request #2418 from ReactiveCocoa/xcode7.1-beta2-fix
Fixed build error by explicitly referencing self inside closure. Fixes compatibility with Xcode 7.1 beta 2
add type annotations to example to make it compile in Xcode 7.0
add type annotations to example to make it compile in Xcode 7.0
add type annotations to example to make it compile in Xcode 7.0
replace `println` with `print` for swift2
Merge pull request #2405 from rpowelll/patch-1
Merge pull request #2388 from ReactiveCocoa/rename-generics
Change `catch` to `flatMapError` in README
Merge pull request #2398 from tonyarnold/fix/product_name
Explicitly set the PRODUCT_NAME to TARGET_NAME
Merge pull request #2295 from liscio/enh/queue-qos
Merge pull request #2389 from nikita-leonov/debugging-tecniques
Corrections based on a proofreading feedback.
Corrections based on a proofreading feedback.
Remove old priority-based API, fix deprecation
Merge branch 'enh/queue-qos' of github.com:liscio/ReactiveCocoa into enh/queue-qos
Merge branch 'swift2' of https://github.com/ReactiveCocoa/ReactiveCocoa into enh/queue-qos
Merge pull request #2391 from ReactiveCocoa/fix-#2382
Fixed spelling.
Merge pull request #42 from ikesyo/publicize
Merge pull request #43 from ikesyo/remove-staticstring-workarounds
Merge pull request #44 from ikesyo/update-gitignore
Fix test failures reported in #2382
Add Carthage/Build to .gitignore
Remove workarounds for compiler warning about StaticString
Make some extension methods public
Fixed spelling.
Fixed spelling.
Fixed description of expected result.
Fixed description of expected result.
Fixed formatting.
Fixed formatting.
Fixed spelling.
Added debugging techniaues document with an explanation of signals chains debugging approach.
Merge pull request #41 from neilpa/version-0.8
Version 0.8
Merge pull request #40 from neilpa/housekeeping
Delete SignalProperty et. al.
Update signal and producer README docs
Remove print operators
Protocol extensions instead of concrete ones
Explicitly lift missing producer operators
Merge pull request #39 from neilpa/swift2
Remove testCompletionOperator
Merge branch 'master' into swift2
Merge pull request #38 from neilpa/last-rac3-release
Version 0.5
Ugh codesigning
Update changelog for renamed type params
Merge remote-tracking branch 'bencochran/Rename-Generic-Parameters' into rename-generics
Merge pull request #2380 from nikita-leonov/fix-flatMap-signalProducerType
Moved merge, switchToLatest, flatMap to SignalType extensions.
Moved ignoreNil and concat into SignalProducerType.
Moved flatten to the SignalProducerType as well
Moved flatMap into SignalProducerType.
Merge pull request #2363 from SpruceHealth/error_casting_compiler_bug_workaround
Merge pull request #2378 from dapenggao/swift2
Merge branch 'swift2' of https://github.com/dapenggao/ReactiveCocoa into swift2
Merge pull request #5 from ReactiveCocoa/swift2
Change `lift` signature
Merge pull request #2370 from dapenggao/swift2
Update Action.swift
Remove unused import
Merge branch 'swift2' into error_casting_compiler_bug_workaround
Switch bridging test to use NSError instead of NSError subclass
Update Signal.swift
Update Property.swift
Merge pull request #2375 from nikita-leonov/rac4-readme-startWithNext-fix
Merge pull request #2376 from gfontenot/gf-update-result-take-two
Update Result to new newest beta
Changed old style of handling next even to a new one with startWithNext.
Merge pull request #2373 from ReactiveCocoa/revert-2372-gf-update-result
Revert "Update Result to new beta version"
Merge pull request #2372 from gfontenot/gf-update-result
Update Result to new beta version
Clearer naming
Minor changes
Reverse fix indentation
Workaround is now unneeded
Merge branch 'swift2' of https://github.com/dapenggao/ReactiveCocoa into swift2
Merge pull request #4 from ReactiveCocoa/swift2
Use `enum` for `NoError`
Merge pull request #2367 from bencochran/Fix-Filter
Fix `filter`
Update Action.swift
Merge pull request #3 from ReactiveCocoa/swift2
Merge pull request #2 from dapenggao/fix-indentation
Merge branch 'swift2' into error_casting_compiler_bug_workaround
Merge pull request #2354 from dapenggao/swift2
Test that NSError.userInfo is retained while bridging
Improved NSError casting workaround
Update README.md
Merge pull request #35 from neilpa/rac4-alpha1
Merge branch 'master' into rac4-alpha1
@testable for start/observe overloads
Internalize start and observe overloads for now
Update SignalProducer.swift
Update Disposable.swift
Workaround to prevent NSError from losing its UserInfo
Update to RAC 4 alpha.1
Merge pull request #2357 from ReactiveCocoa/rac4-changelog
Fix changelog typo
Added flatten over signals-of-producers
Link to changes that may be coming to RAC4
RAC 4 is a WIP
Update Action.swift
Minor improvements
Discard line changes
Discard line changes
Update Signal.swift
Minor changes
More changelog grammar
Revert experiment
Changelog grammar
Merge pull request #2359 from ReactiveCocoa/revert-tvOS
Only delete the tvOS scheme
Remove tvOS scheme and target
Rollback Result pre-tvOS
Add back quick and nimble submodules
Merge pull request #32 from ikesyo/stop-buiding-test-target
Merge pull request #33 from ikesyo/update-rac
Fix RAC# spacing
Document renamed try and catch in changelog
Removed start and observe overloads
Avoid inline-code in changelog headers
Event cases no longer Boxed
Event.Sink is a function in RAC4
Remove Carthage/Build/iOS from FRAMEWORK_SEARCH_PATHS of Mac target
Changelog update 3.0 anchor
Document operators implemented as protocol extensions
Update to RAC 3.0 final
Stop building test target on Run and Analyze action
Stub sections for RAC4 changes
Depend on explicit version of RAC4
Update Signal.swift
Update Bag.swift
Update ObjectiveCBridging.swift
Update Atomic.swift
Change `OptionalType`'s type alias to `Wrapped`
Change `if case let` to single-case `switch`es
Merge pull request #1 from ReactiveCocoa/swift2
Use `if case let` instead of single-case `switch`es
Stylistic improvements
Minor format changes
Replace a few more `T`s and `E`s, including in comments
Renamed Event’s `E` to `Err`
Rename `T` to `Value` and `E` to `Error`
Merge pull request #2352 from NachoSoto/signal-flatmap
Added Signal.flatMap (cc #2315)
Merge pull request #2350 from NachoSoto/flatten-for-signal
Updated case let syntax
Simplified Signal.concat implementation
Updated case let syntax
Removed unnecessary breaks
Moved FlattenStrategy to Signal to re-enable flatten over signals of producers (Fixes #2315)
Merge pull request #2347 from dapenggao/swift2
Clean up
Remove redundant import statements
Remove redundant import statement
Merge pull request #2345 from stevebrambilla/unused-warnings
Change unused result message for blocking operators
Remove warn_unused_result for blocking operators
Removed NSURLConnection+RACSupport from tvOS target (equivalent to #2339)
Merge pull request #2342 from NachoSoto/enabled-swift-optimizations
Re-enabling Swift optimizations
Merge pull request #2341 from ReactiveCocoa/revert-revert-deprecated
Bring back "Remove Objective-C API implementations deprecated in 2.0""
Merge branch 'master' into swift2
Merge pull request #2333 from NachoSoto/tvos
Merge pull request #2334 from ReactiveCocoa/raccommand,-my-nemesis
Changed xcconfig and Result to commits including tvOS frameworks
Merge pull request #2340 from ReactiveCocoa/revert-2330-objc-deprecations-redux
Revert "Remove Objective-C API implementations deprecated in 2.0"
Actually, these aren't needed.
Make allowsConcurrentExecution be KVOable
Merge pull request #2339 from marchinram/swift2
Removed EMBEDDED_CONTENT_CONTAINS_SWIFT = YES from iOS target
Cleaned up header and bug fix for OS X
Removed unneeded build settings
Updated build settings and conditionally compiled NSURLConnection+RACSupport to support watchOS
Merge pull request #2330 from ReactiveCocoa/objc-deprecations-redux
Pointing Result to https://github.com/antitypical/Result/pull/80
Fix documentation
Updated product name in tvOS scheme
Added #elif TARGET_OS_TV to avoid including iOS targets in AppleTV framework
Added target for tvOS
Let's just not use KVO
Move the -replayLast to avoid multiple subscriptions
Implement RACCommand with a RACSubject instead of KVO
Remove Objective-C API implementations deprecated in 2.0
Merge pull request #2328 from ReactiveCocoa/fix-concat-leak
Don't lose the concatted disposable.
Merge pull request #2318 from sebreh/swift2
Consistent use of "case let" in switch cases
Remove optional closures from startWithX/observeX
Unused map results to forEach
Remove Swift 1.2 note from README
Code signing failz
Update for Xcode7 beta6
Update RAC for beta 6
Merge remote-tracking branch 'origin/master' into swift2
Version 0.4
startWithX/observeX with optional closures
Updated specs to use new start/observe naming
Replace start/observe closure syntax with distinct functions
Merge pull request #2316 from ReactiveCocoa/swift2-upgrade-quick-and-nimble
beCloseTo matcher can now take NSDate
Upgrade Nimble to v2.0.0-rc.3
Upgrade Quick to v0.6.0
Merge pull request #2310 from ReactiveCocoa/merge-master
Use availability to restore old functionality
guard-let in Disposable
Update README
Merge branch 'master' into merge-master
Merge pull request #2307 from ReactiveCocoa/shorten-NSComparisonResult-cases
Shorten NSComparisonResult cases
Merge pull request #30 from neilpa/compiler-warning
Workaround compiler warning
Merge pull request #2303 from Nirma/modern_checking
Use optional chaining in place of nil check
Merge pull request #2299 from Nirma/modern_loops
Use end index instead of count
Use range based looping
Merge pull request #2292 from rpowelll/xcode-beta-carthage-fixes
Port the test to use the "new API"
Eliminate the ability to supply a queue
Use code signing for iOS target
Simplify/modernize QueueScheduler API/behavior
Merge pull request #2285 from ReactiveCocoa/xcode7-beta6-redux
Upgrade Quick and Nimble dependencies
Update some test code for Xcode 7 beta 6
Deal with unused warning
Merge pull request #2284 from mishagray/xcode7b6
xcode 7 beta 6 fix
Merge pull request #2283 from juliangrosshauser/unsafecocoaaction-doc-fix
Fix typo
Remove unnecessary backtick
Note Swift 1.2 vs 2 in the README
Merge branch 'master' into swift2
Organize UIKit tests
Merge pull request #29 from avalanched/retain-cycles
fix retain cycles in UIKit extension
add failing dealloc test for UIKit extensions
Merge pull request #28 from neilpa/retain-cycles
Add more retain cycle tests
More retain cycle warnings
Warn about retain cycles
Fix retain cycles in associated properties
Add failing dealloc test for rex_text
Merge pull request #2272 from yoichitgy/fix-typo-in-documentation
Fix a typo in DesignGuidelines.md: 'is is' to 'it is'
Fix iOS for Swift 2 changes
Merge AppKit and UIKit extensions to swift2
Remove the custom send* operators
Remove SinkType methods
Bump dependencies
Version 0.3.0
Include UIBar* code in iOS target, not Mac
Merge pull request #24 from neilpa/more-uikit-extensions
Code formatting tweaks
Update to RAC RC-1
Merge branch 'master' into more-uikit-extensions
Merge pull request #23 from neilpa/nstextfield
Xcode file sort
Merge remote-tracking branch 'skyylex/master' into nstextfield
Merge pull request #2248 from ReactiveCocoa/xcode7-beta5
Enable code coverage
Updates for Xcode 7 beta 5
Merge pull request #2236 from ReactiveCocoa/swift2-readme
Merge pull request #2242 from ReactiveCocoa/improve-getting-started
Dependencies are in Carthage/Checkouts
[README] Update installation instructions
Merge pull request #2232 from richeterre/master
Fix link in Design Guidelines
Merge pull request #2227 from ReactiveCocoa/remove-unused-repack
Remove unused repack<A>() and repack<A, B>() from master
Merge pull request #2226 from natan/framework-overview-typo
Fixed two minor typos in FrameworkOverview.md
Remove usage of `|>` from README examples
Remove `|>` section from basic operators
Merge branch 'master' into swift2
Merge pull request #2192 from ReactiveCocoa/propertyof-operator
Merge pull request #2221 from ReactiveCocoa/swift2-upgrade-quick-and-nimble
Merge pull request #2218 from ReactiveCocoa/fix/2216
Upgrade Quick to v0.5.1
Using `#elif TARGET_OS_IPHONE` after evaluating `#if TARGET_OS_WATCH` seems fine
Update a custom matcher implementation
Upgrade Nimble to v2.0.0-rc.2
Fix header visibility for watchOS target
Update watchOS scheme
Fix preprocessor directive for iOS build
NSTextField extension. Code zipping
Merge pull request #22 from bjarkehs/uibarbuttonitem
Allow action binding to UIBarButtonItem
Merge pull request #2214 from MarcoSero/watchos-fixes
rex_textSignal implementation
Remove DYLIB_INSTALL_NAME_BASE override
Merge pull request #2209 from MarcoSero/watchos
Update Result to 0.6-beta.1
Remove build settings specified in xcconfig
Add watchOS target
One more fix with #2207
Merge pull request #2207 from zhigang1992/master
toSignalProducer is only available on Swift Signal
Merge pull request #2205 from ReactiveCocoa/xcode7-beta4
repack<A>() and repack<A, B>() are not used
No need to use one-element tuple
Scheme was changed somehow
Bump Nimble and Quick for beta 4
One-element tuple does not have member 0
removeRange() is now the method on RangeReplaceableCollectionType
Return type of NSURLSession.dataTaskWithRequest() is non-optional now
Remove SinkType implementation
Merge pull request #20 from aschuch/patch-1
Update documentation on UILabel.rex_text
tests for PropertyOf from Signal and SignalProducer
documentation
replace propertyOf of with a PropertyOf initializer
Merge pull request #2191 from almassapargali/master
change scheduler on README
Merge pull request #1382 from ReactiveCocoa/swift-development
Merge pull request #2186 from ReactiveCocoa/cocoa-action-cast-fix
Remove CocoaAction initializer that doesn't work
Fix minor README typo, link to CHANGELOG for ObjC section
propertyOf for Signal and SignalProducer (tests crash)
Merge pull request #2181 from ReactiveCocoa/readme-reboot
Merge pull request #2099 from ReactiveCocoa/protocol-extensions
Demonstrate error handling in the README example
Fix heading levels (again)
Rephrase and restructure the naming issue
Explain typed errors
Make NoError an un-initializable class
Link to legacy documentation
Link to the Framework Overview and Basic Operators more
Link up some more text in the README
Extract RAC-relative links into footnote style
Return type inference
Use SignalProducerType where possible
Extend SignalType over Signal where possible
Cleanup event type
Dead code
Minor OptionalType tweaks
Merge branch 'swift2' into protocol-extensions
Merge branch 'swift-development' into swift2
Explain the two languages in use
Bigger headers
Better formatting
Swap hot/cold and UI programming discussion
Explain divergences from Rx
Simple example of throttled search requests
First draft
Merge pull request #2177 from ReactiveCocoa/pr/2165
Merge pull request #2152 from ReactiveCocoa/design-guidelines
Minor proofreading/formatting, add other bridges and TOC
Merge branch 'swift-development' into pr/2165
Re-add TOC breakdown
*associated with
Clarify that error and interrupted should be forwarded ASAP
Suggest `NoError` when talking about error events
Use `switch` over `Event` values
Merge branch 'swift-development' into design-guidelines
Merge pull request #2161 from ReactiveCocoa/upgrade-nimble
Fixed two typos
Better section titles.
Added preliminary bridging documentation based on the information in the changelog.
Rewrite Basic Operators to use “event stream” as the overarching term
Suggest looking at existing operators for writing new ones
Forward error and interruption events
Explain how to clean up in disposables elsewhere
Avoid introducing concurrency
Compose existing operators
Prefer writing operators that apply to both
Meh, don't recommend against buffers today
Prefer managing lifetime with operators
Share the side effects of a signal producer
Capture side effects within signal producers
Switch schedulers in as few places as possible
Observe events on a known scheduler
Add links to “Process only as many as needed”
Add “best practices” and “implementing new operators” summaries
Explain how SignalProducer disposal works
Explain how Signal operators can be lifted
Explain how producers start work/send events on demand
More links
Describe the high-level Signal contract
More links
Remove MemoryManagement.md
Clarify Signal memory management
Clarify that observers are released upon terminating events
Clarify the behavior of Signal.init
Clarify how observers of a signal see events
Upgrade Nimble to v1.0.0
Explain how termination leads to disposal
Explain how Signal memory management works
Explain event simultaneity
Merge pull request #2158 from ReactiveCocoa/xcode7-beta3
Explain that signal observation never has side effects
Explain how signals start work upon instantiation
Explain synchronous events
Explain non-recursive events
Explain serial event delivery
Explain processing only as many values as needed
Clarify that errors are forwarded immediately even for delay()
Explain “avoid blocking”
Describe Completed events
Describe Interrupted events
Describe Error events
Describe Next events
Updates for Xcode 7 beta 3
NSTextField extestion code zip
NSTextField extension for observing all text changes
Reorder best practices
Rephrase “never block” title
Embolden TOC
Reduce subheadings
Describe the Event contract
Slim down TOC to just the major sections
Finish section outlines
Merge branch 'swift-development' into design-guidelines
Merge pull request #2155 from ReactiveCocoa/travis-xcode64
Merge pull request #2147 from ReactiveCocoa/reduce-property-deadlocking
[Travis] Switch to Xcode 6.4
WIP sections for Design Guidelines
Merge pull request #2151 from MichaelMcGuire/swift-development
Fix documentation for scan operator
Merge pull request #2148 from ReactiveCocoa/producer-signal-typealias
Add ProducedSignal typealias in SignalProducer
Refactor buffer() to permit limited recursion during replaying
Failing tests for recursive behavior with buffer()
Failing test for property deadlocking
Merge pull request #2133 from ReactiveCocoa/refactor-error-creation
Merge pull request #2134 from ReactiveCocoa/refactor-action-apply
Merge pull request #2104 from ReactiveCocoa/action-cocoa-action
rex_controlEvents wrapper for rac_signalForControlEvents
Replace shouldBeEnabled() with _enabled.value in Action.apply()
Refactor NSError creation to use message parameter of Result.static.error()
carthage update
Remove |> from operator docs
Merge branch 'swift2' into protocol-extensions
Merge branch 'swift-development' into swift2
Merge pull request #2063 from iv-mexx/feature/operators
More typical example for `mapError`
Unindent callback parameters
Move `reduce` before `collect
unsafeCocoaAction
Add punctuation to links
Add links to the interactive RAC Marbles visualisations for operators
Use `println` directly instead of `{println($0)}`
Fix the `collect` example by marking it as code snippet
Add another paragraph about the `collect` operator to the `aggregate` section
Add another newline
Update `catch` example to better show its use
Update `flatten` examples to better show differences in semantics
Replace `{println($0)}` closures with just `println`
Text-Improvements after review
Default arg for ignoreError instead of overload
propertyOf => toProperty
Use RAC extensions branch
Add unused warning to flatten helpers
Remove filterMap now that ignoreNil is implementable
Lift dematerialize and ignoreNil to producers
:burn: |>
Implement flatten as producer extensions
Remove unnecessary producer type params
Extend SignalProducer directly
Add back promoteErrors type param
Add NoErrorType for to workaround 'same type constraint'
Fewer extension scopes
Remove unnecessary generic specifiers
Extend signal directly where possible
Implement dematerialize as a constrained extension method
Define ignoreNil as a constrained Signal extension
Fix trailing closures for subscriptions again
Merge branch 'swift2' into protocol-extensions
Xcode7 beta2 fixes
Bump dependencies
import Foundation
Use the associated property methods
Associated object fixes
NSObject wrappers for associated properties
Formatting
UIButton.rex_title
Fix UILabel comment
rac_pressed => rex_pressed
Version 0.2.3
Bump dependencies
Merge pull request #15 from neilpa/basic-uikit-extensions
Document rex_pressed
UIButton.rex_pressed and CocoaAction extensions
Stuff actually builds
UILabel.rex_text
UIControl.rex_enabled
Associated object helpers
Tweak the warn unused message
Merge pull request #2111 from ReactiveCocoa/warn-unused-result
Include a message with warn_unused_result
Add warn_unused_result to Action.apply
Add warn_unused_result to producer operators
Add warn_unused_result to signal operators
Fix mutability warning
Trailing closure tests for signal subscription
Make `next` the last param for subscription methods
Update signal protocol comments
Add an optionalize operator
Expand on Action.cocoaAction doc comment
Add lazy cocoaAction property to Action
Remove param labels from zip and combineLatest
Privatize binary signal operator functions for producers
Remove lifting |>
Move observe, start and lift helpers to extensions
Remove start* free functions
More SignalProducer protocol extension operators
Remove dupe SignalProducer functions
Merge branch 'swift2' into protocol-extensions
Implement SignalProducer.on via protocol
Remove free functions implementing unary Signal operators
Closures for unary producer lifting
Require lifting on SignalProducerType
Remove combineLatestWith and zipWith producer free functions
Merge pull request #2102 from ReactiveCocoa/functions-as-observers-2
space between type parameters
Add tests for lifted SignalProducer operators
Merge branch 'swift2' into functions-as-observers-2
remove DebugSinkOf
represent observers using functions rather than `SinkType`s
Lift signal operators as producer extensions
SignalProducerType.map test
Define SignalProducerType w/ map
Comment out dematerialize extension
Merge branch 'swift2' into protocol-extensions
Workaround incorrect compiler mutability warnings
SignalProducer try => attempt
Delete OptionalType since its not going to work currently
Last remnants of signal pipe operator
Remove observe free-functions
Replace ignoreNil with filterMap
Remove remaining use of |> in signal operator definitions
Organizing protocol extension types
Use stdlib ErrorType
Merge pull request #2096 from sharplet/pull-master
Use protocol extensions in Signal tests
Merge branch 'master' of https://github.com/ReactiveCocoa/ReactiveCocoa into pull-master
Implement most Signal operators as protocol extensions
Fix some new build warnings
Xcode recommended project settings update
Builds for Swift 2 with tests passing
Bye-bye Box
carthage update swift2
Run the swift 2 upgrade tool
Convert mapError to extension method
Testing map as an extension method
Define SignalType
Raw functions as observers instead of SinkType
Merge branch 'swift-development' into swift2
Rename try to avoid reserved word conflicts
Rename catch to avoid reserved word conflicts
Better handle errors in rac_dataWithRequest
Remove superflous casts
Nested recursive functions work now
Use tagged Result version
Upgrade recommended build settings
Merge pull request #2073 from ReactiveCocoa/framework-overview-tweaks
Merge pull request #2076 from ReactiveCocoa/buffer-capacity
Fix up code review notes
Correct a sentence
Modify `on` example to clear up confusion from #2060
Unused var warning
Fix mutability warnings in tests
Remaining test fixes to get them working
Workaround @nullability
More paramater order/naming tweaks
Update check prompt
Disable optimizations to workaround compiler crashes
Merge pull request #2079 from ReactiveCocoa/use-disposables-operator
Merge pull request #2080 from ReactiveCocoa/public-typealiases
Remove Box leftovers
Ignore parameters
Remove box and fix bad xcode auto conversions
Run the swift converter
Kill travis until it supports Swift 2
Bump Nimble and Quick dependencies
Remove Box from the workspace
Update Result dependency
Minor documentation tweaks for DebugSinkOf
Make some typealiases public
Use disposables operator in the codebase
Another buffer doc tweak
Update SignalProducer.buffer docs to reflect capacity behavior
Preformatting for link to Signal too
Minor tweaks to Framework Overview
Merge pull request #2064 from ReactiveCocoa/move-framework-overview
Update Haskell links in framework overview
Merge pull request #2058 from norio-nomura/fix-dropping-signal-in-buffer
Add example to demonstrate difference of merging strategies
Fix spelling errors
Add completion events to the `combineLatest` and `zip` examples
Mention difference in waiting behavior of the result between `combineLatest` and `zip`
Fix legacy framework overview links
Resurrect legacy framework overview
Relocate RAC3 framework overview
Fix description of retry
Retry example
Removed syntax noise
Side effects
Fix links
Order of the observe example changed
Observation
Operator composition: pipe, lift
make more use of the |> operator
Errors: catch, map, promote. Retry still TODO
markup producers as `SignalProducer`
markup producers as `SignalProducer`
Concatenating producers: merge, concat, latest
Combining signals: combineLatest, zip
Transforming signals: map, filter, reduce
Merge pull request #2062 from ReactiveCocoa/framework-overview
Merge remote-tracking branch 'iv-mexx/feature/documentation' into framework-overview
Remove logging on SignalProducer.buffer()
Change bufferingObserver acquires lock before retrieving observers.
Add logging to explain the Carthage hanging issue
Merge pull request #2055 from ReactiveCocoa/squiggle-precedence
Bump ~> precedence to 93
Version 0.2.2
Typos
Merge pull request #14 from neilpa/signal-property
Property operators work with producers now
Test cleanup
sinkProperty -> propertySink
Document property helpers
Curry property operators
PropertyOf helpers and tests
Test signal property
Increase <~ operator precedence
Add SignalProperty
Version 0.2.1
Merge pull request #13 from neilpa/timeout-after
Add timeoutAfter to the README
Test timeoutAfter
Merge pull request #12 from neilpa/nsobject-kvo
Test rex_producerForKeyPath
Typed KVO signal producer
Split Foundation extensions
Add timeoutAfter operator
Merge pull request #2052 from ReactiveCocoa/travis-6.3
Merge pull request #2051 from ReactiveCocoa/recursive-property-access
More time for timer tests to avoid Travis failures
Better validation of recursive property test
Name the MutableProperty lock
Merge pull request #2049 from alskipp/FlattenStrategy-Equatable
Merge pull request #2046
Move to SignalProducerSpec, polish flow a little bit
Turn travis back on
Version 0.2.0
Support app extensions
Bump ReactiveCocoa
Don't println in tests
Allow recursive value gets in MutableProperty
Add failing MutableProperty test on recursive access
add test for observeOn
Remove manual `==` for FlattenStrategy enum
Merge pull request #2042 from ReactiveCocoa/disallow-recursion
Materialize Interrupted, but still interrupt the resulting signal
Fix some incorrect comments about signals-of-producers
Document the new semantics of materialize()
Dispose upstream after sending Interrupted
Move generatorDisposable and interrupted into init()
Revert flatten() operators to work on Producers
Don’t materialize Interrupted events
Process CompoundDisposable's inner disposables in reverse
Forward Interrupted immediately from observeOn
Inline Signal.send
Merge pull request #11 from neilpa/uncollect
Document uncollect
Uncollect any SequenceType
Test uncollect
Add uncollect
return to the original Signal.observeOn
Begin to correct the wrong test
Refactor Producer dispose upstream before sending Interrupted
Rename confusing `observer` variable in SignalProducer.startWithSignal
Rename confusing `observer` variable in SignalProducer.buffer
Disable Whole Module Optimization in Debug builds
Replace interruptionDisposable with Atomic variable
Merge branch 'swift-development' into disallow-recursion
Merge pull request #2021
Rename EventSink typealias to just Sink
Document DebugSinkOf and make its conventions match
edit comment
Enable Swift optimizations to reduce the risk of stack overflows
Merge pull request #1878 from larryonoff/bugfix/rac_valuesAndChangesForKeyPath-documentation
Refactor Bag to use contiguous storage for its elements
add test for observeOn
put event immediately other than .Next
carthage update
Short circuit private .Concat methods once disposed
Tail call into sendInterrupted when disposed during setup
Simplify CompoundDisposable implementation a bit
No need to invoke Signal.interrupt if already terminated
Clean up observer swapping in Signal.send
typealias Observer = Event<T, E>.EventSink
Rename `Event.SinkOfEvent` to `Event.EventSink`
Refactor to give Interrupted special treatment
Use `SinkType` instead of `SinkOf`
Ensure that events are forwarded serially by startWithSignal
Wait for the last observer before forwarding Interrupted
Disallow and fix recursion within Signal and SignalProducer
Add `DebugSinkOf`
Merge pull request #2038 from ReactiveCocoa/action-event-signal
Rename event helpers
Merge pull request #2037 from ReactiveCocoa/organizing-docs
Bring back values and errors on Action
Convenience properties for next and error on Event
Merge pull request #2040 from ReactiveCocoa/disposable-plus-equal
Return DisposableHandle from +=
Merge pull request #2041 from ReactiveCocoa/fix-latest-deadlock
Merge pull request #2039 from ReactiveCocoa/nsnotif-producer
Take 2 at rac_notifications comments
Update rac_notifications doc comment
Overhaul switchToLatest to avoid race condition windows
Append disposables operator
Naive fix for switchToLatest deadlock
Tweak rac_notifications test
Test NSNotificationCenter.rac_notifications
Add failing test case for .Latest deadlock
Update NSNotificationCenter.rac_notifications to return a producer
Add Event.mapError
Unified events signal for Action
Update the legacy README
Copy the RAC 2 README to the legacy docs
Stub out design guidelines
Stub out basic operator docs
Placeholders for new Swift docs
Update legacy doc links
Relegate RAC 2 docs
rephrase the first sentence for the property section
update styling for event cases
fixed capitalization and some spelling errors
fix another reference
fix reference to basic operators
move enumeration of event types to the events section
add comment about controling signal producers
call signal operators `primitives` to avoid confusion with the `|>` operator
call the observer for Signal.pipe a sink
add examples of functions to the signal producers section
repelace subscriber with observer
Merge pull request #2032 from ReactiveCocoa/refactor-currying
Merge pull request #2029 from ReactiveCocoa/completed-order-in-concat
Fix some preconditions that got moved into closures
Replace explicit currying syntax in SignalProducer operators
Replace explicit currying syntax in Signal operators
Fix order of Completed event in .Concat
fix grammar
add a reference to signal operators
add a todo
add paragraps about signal- and signal producer operators
reorder sections / subsections
unify header level
add sections about _Pipes_ and _Buffers_
remove links to old ObjC classes
update _Schedulers_ section
update _Disposable_ section
Merge pull request #1928 from Rupert-RR/issue-#1868-rac_description-on-non-NSObject-objects
Merge pull request #2028 from khaullen/patch-1
Updates property spec to fix always-passing test
Changed some uses of [self rac_description] that inherit from the NSObject implementation to call the global RACDescription function instead, in the OSX targets
Changed some uses of [self rac_description] that inherit from the NSObject implementation (which had been overlooked in a previous commit) to call the global RACDescription function instead.
reworded the event section
add a section about events at the beginning
mention `DynamicProperty`
fixe typos and adapt to smaller review comments
Corrected use of dot syntax on id object
fix anchor link (for good?)
Merge pull request #2008 from bromas/CocoaActionReleaseBuild
add a comment to the _Signals_ section about (lack of) random access to stream values
fix anchor link
fix anchor link
remove some todos that have already been done
added _Property_ section
fix typo
update _Command_ section to _Action_
add references to Action and Property
rearranged the sections, _Commands_ (_Actions_) now further up
corrected statement about SinkOf
add reference to SinkOf and remove another closure reference that was missed earlier
update _Subscriptions_ section to _Observers_
remove haskell and clojure references
remove _Value Types_ section
remove _connections_ section
remove _Sequences_ section
update _Signal_ and _SignalProducer_ sections after review comments
Changed some uses of [self rac_description] that inherit from the NSObject implementation (which had been overlooked in a previous commit) to call the global RACDescription function instead.
Removed rac_description implementation from NSObject and made its behaviour the default in the global RACDescription function unless the object implements rac_description (to preserve the different NSValue, NSString and RACTuple implementations).
Changed all uses of [self rac_description] that inherit from the NSObject implementation to call the global RACDescription function instead.
Changed name of global rac_description function to RACDescription, to align with Apple's conventions for C functions. Updated all calls to this function to reflect this.
Merge pull request #2017 from ReactiveCocoa/prevent-concat-growth
Prevent infinite memory growth with .Concat
add another todo to _Subscription_ section
add todos for sections that have yet to be updated
add _Signal Producer_ section
edit _Signal_ section
remove _Streams_ section again, d`oh
update _Signal_ section
remove the _Streams_ section because streams are now directly implemented as `Signal`
update the _Streams_ section
fix links to RAC classes that have been moved to the Objective-C subfolder
updates the swift optimization level in order to avoid further compiler related bugs during development.
Merge pull request #1961 from larcus94/promises-futures
Merge pull request #2009 from ReactiveCocoa/safe-dequeueing
Fix indentation
Use strings as shared example names
Merge pull request #2010 from ReactiveCocoa/promote-errors-interrupted
Merge pull request #2011 from ReactiveCocoa/queue-scheduler-naming
Allow QueueSchedulers to be named for debugging
Handle Interrupted events in promoteErrors
Don’t attempt to remove elements of empty queues.
Merge pull request #1988 from ReactiveCocoa/remove-producer-flatmap
Allows CocoaAction to be used in release builds.
Merge pull request #2005 from mortonfox/patch-1
Fixed links to RACSignal and RACSequence
Version 0.1.3
Merge pull request #10 from nomothetis/operators
Added tests for operators.
Added operators.
Carthage compat badge
Version 0.1.2
Fix the build
Merge pull request #4 from larryonoff/foundation-extensions
NSUserDefaults.rex_signalForKey now skips repeats
Merge pull request #8 from larryonoff/print-improvements
changed Foundation extension methods prefix from rac to rex
fixed NSUserDefaults.signalForKey initial value
fixed `dataWithContentsOfURL:` error unwrapping
print methods improvements
Document ignoreError in README
Tests for ignoreError
Overload ignoreError since curried defaults don't work
Parameterized terminal event for ignoreError
added NSData rac_dataWithContentsOfURL and NSUserDefaults rac_signalForKey
Version 0.1.1
Lower deployment targets
Merge pull request #3 from larryonoff/print-and-ignoreError
fixed ignoreError documentation
ignoreError infinity fixed
fixed code style
Merge pull request #1992 from ReactiveCocoa/app-extension-api
adde printAll, printNext, printError, ignoreError methods
Update README.md
Bump xcconfigs for app extension build setting
Enable app extension compatibility
Add producer tests
Remove flatMap() for producer-of-producers
Version 0.1
Update schemes
iOS target
Shared scheme
Update README.md
Update README.md
Create LICENSE
Create README.md
Document filterMap
Test filterMap
Test groupBy
Implement filterMap
Delete Atomic for now
Lock when updating groupings
Implement groupBy
Port Atomic from RAC
App extension API
Dependencies
Organizing
Xcode project
Add signal specs
Make operators internal
More generic signal producers
Improve documentation
Change zip func declaration
Fix indentation
Make some operators private
Merge pull request #1942 from liyihe96/swift-development
Use map instead of transform closure
Make some operators private again
Use sequences instead of arrays
Improve style
Merge pull request #1975 from ReactiveCocoa/uninterrupted
Merge pull request #1974 from ReactiveCocoa/make-it-final
Treat interrupted events on flattened signals like completion
Test interruption of flattened signals
Drop interrupted events on flattened inner signals
Finalize CombineLatestState
Finalize CompositeDisposable.DisposableHandle
Merge pull request #1966 from ReactiveCocoa/signal-flatten
Merge pull request #1896 from ReactiveCocoa/memory-corruption-workaround
Merge remote-tracking branch 'origin/swift-development' into memory-corruption-workaround
carthage update
Add flatMap for signal-of-producers
Privatize flatten helpers
Move flatten to signal-of-producers
Implement concat in terms of signal-of-producers
Merge pull request #1825 from sharplet/trying
Implement switchToLatest in terms of signal-of-producers
Implement merge in terms of signals-of-producers
Merge pull request #1918 from gavrix/buffer-bugfix
carthage update
Stricter private dependency pins
Merge pull request #1959 from Dwarven/swift-development
Merge pull request #1949 from ReactiveCocoa/disposable-minor-refactoring
Add array signal operators
Add combineLatestWith signal producer operator
Update for Xcode 6.3
Revert changes to SerialDisposable.State
Merge pull request #1952 from siemensikkema/patch-1
Merge pull request #1954 from ReactiveCocoa/swift-minor-improvements
Merge pull request #1947 from ReDetection/patch-arc-gcd-check
Merge pull request #1926 from ikesyo/collect-optimization
Don't use empty signal producer
Use right memo
Add signal producer operator
Add zip array operator
Add a documentation comment for CollectState to explain its purpose
Merge pull request #1925 from ReactiveCocoa/not-use-dynamicType
Update README.md
Use Signal.Observer instead of SinkOf for consistency
Simplify type constraints for MutablePropertyType binding operators
> `let` constant must be initialized before use
Use Optional initializer for consistency
Omit type specifiers in Event
Just use as? operator
Merge pull request #1953 from ReactiveCocoa/noescape-for-signal-and-producer
Fix memory corruption in times()
@noescape for Signal/SignalProducer
Fix comment
Minor refactorings in Disposable for more immutability
Merge pull request #1933 from ReactiveCocoa/new-result-type
proper check if ARC is enabled for the GCD
Use Box.map()
Result 0.4
Guarantee to update refresh control on main thread
Result is an enum type again
Setup Box as a dependency
++Result
Merge pull request #1934 from iCodesign/swift-development
selector is a type property, should be accessed from a type
++Result
Upgrade to the new Result type
Replace import statements
Remove LlamaKit
Setup Result as a dependency
Add antitypical/Result dependency
Merge pull request #1924 from ReactiveCocoa/trailing-closure
Changed usages of rac_description on objects of type id to use the global rac_description function.
Added a global function to get the RACDescription which will use the NSObject rac_description category method if it exists, otherwise fall back on the description method (if it exists) or just a standard string.
Optimize collect() performance and memory usage
Use class name, not dynamicType
Use trailing closure syntax
Minor text formatting related changes.
Merge pull request #1917 from ReactiveCocoa/skipRepeats-if-let
Merge pull request #1921 from GuessMeApp/master
Merge pull request #1922 from richeterre/swift-development
Update Signal.pipe example
Update for Xcode 6.3
Merge branch 'swift-development' into memory-corruption-workaround
Buffer behavior fixed according to #1916
Use multiple if-let unwrapping in skipRepeats
Merge pull request #1905 from ReactiveCocoa/release-build-for-test
Fix a failing test with optimization
Merge branch 'swift-development' into release-build-for-test
Merge pull request #1902 from ReactiveCocoa/uncurry-combinePrevious
Uncurry reduce
Uncurry scan
Specify Release configuration for test build
Uncurry combinePrevious
Merge branch 'swift-development' into memory-corruption-workaround
Merge pull request #1900 from sharplet/trailing-closures
Merge pull request #1901 from ReactiveCocoa/not-use-generator-directly
Use for-in loop for a sequence, not use the generator directly
Merge pull request #1898 from ReactiveCocoa/multiple-if-let-unwrapping
Make "next" the trailing closure for Signal.observe() and SignalProducer.start()
Merge pull request #1897 from ReactiveCocoa/static-class-properties
Remove a temporary value
Use multiple if-let unwrapping
Use static class properties
Merge pull request #1893 from ReactiveCocoa/atomic-noescape
Merge pull request #1891 from NachoSoto/app-extension-only
Merge pull request #1894 from ReactiveCocoa/non-void-return-types
Merge pull request #1886 from ReactiveCocoa/flat-map
Long-winded workaround to avoid dictionary generator
Remove Atomic.modify overload using tuples
> Unannotated single-expression closures with non-Void return types can now be used in Void contexts
Use @noescape for Atomic
Updated xcconfigs to set APPLICATION_EXTENSION_API_ONLY = YES
Remove .travis.yml because of Quick/Nimble
Update Quick and Nimble
Merge remote-tracking branch 'origin/master' into swift-development
Update changelog for flatten/flatMap
Merge branch 'swift-development' into flat-map
Merge pull request #1846 from ReactiveCocoa/3.0-changelog
Clarify that `UIScheduler` can enqueue work asynchronously
Link to Errors.swift
Link to Scheduler.swift
Link to docs on KVO and KVC
Remove “in addition” that didn't really make sense
Add an example of Signal.pipe
Rename join/joinMap to flatten/flatMap
Explain Scheduler changes
Explain Disposable changes
Explain startWithSignal
Explain SignalProducer.buffer
Explain Signal.pipe
Explain PropertyType
Emphasize the key takeaways in each section
Link to the correct header for join/joinMap discussion
Explain join and joinMap
Explain RACCommand -> Action transition
Update NSObject+RACPropertySubscribing.h
Update NSObject+RACPropertySubscribing.h
Merge pull request #1877
Spaces to tabs
fix ReactiveCocoa/ReactiveCocoa#1869 rac_valuesAndChangesForKeyPath doesn't send initial value on subscriptio
Unlink sections that don't have content
Explain cold signals -> `SignalProducer`
Explain hot signals -> `Signal`
Tweaks to Objective-C bridge formatting
Explain the Objective-C bridge
Explain Interrupted event
Stub a header for join/joinMap discussion
fix -take: vs recursive -sendNext:
Add unit test for -take vs recursive signal
Merge pull request #1866 from kazmasaurus/mkannotation-prepare-for-reuse
Adds `#import`s so that things actually compile >.<
Update error handling of +try: according to Cocoa conventions
Merge pull request #1857 from 335g/MutablePropertyType-lifetime
explain StrongReferenceCycles
Fixes Xcode's wonky indentation and swaps in tabs for spaces.
Adds `prepareForReuseSignal` for `MKAnnotationView`
Merge pull request #1845 from 335g/re-edit-binding-operator
Merge pull request #1860 from numist/ignore_-Wreceiver-is-weak
Merge pull request #1850 from ReactiveCocoa/signal-flatmap
edit test for DynamicProperty
captured DynamicProperty
modification tests
reset
restore property deallocate test
ignoreNil := filter + map
:set noexpandtab
Disable -Wreceiver-is-weak in RACObserve
add test binding-SignalProducer object nil
remove test
add test binding-SignalProducer signal completed
add test binding-SignalProducer retain
Explain ignoreNil
Replace filterMap with ignoreNil
write declaration to each
add test binding-Signal object nil
add test binding-Signal signal completed
implement function & 1 test
filterMap
flatMap tests
Add Signal.flatMap
clarity of placeholder type name
Merge pull request #1834 from MichaelMcGuire/swift-development
“Parameterized types” section
Stub section headers for linking
Merge branch 'swift-development' into 3.0-changelog
Remove 2.0 changelog
Stub out some high-level things to cover
Remove 2.0 changelog, for easier reading
Intro for the 3.0 changelog
Merge branch 'master' into swift-development
edit 3rd operator(<~) definition
Merge pull request #1841 from ReactiveCocoa/remove-racbacktrace
Remove the backtrace description in FrameworkOverview.md
Merge pull request #1832
Use P for the mutable property type variable instead of U
Clarify purpose and restrictions of MutablePropertyType
Merge pull request #1840 from ReactiveCocoa/gitignore-for-master
Remove RACBacktrace
Update gitmodules too
Update gitignore for newer Carthage
rename DependentType -> MutablePropertyType
Merge pull request #1838 from ReactiveCocoa/try-to-crash-less
:fire: doNothing.
And sink.
Ditto observe.
Ditto for start.
Use nil instead of doNothing to avoid crashing all the things.
Fixing throttle bug
add DependentType
Merge pull request #1826 from 335g/tests-for-Signal
simplify test target
erase unnecessary parts
Merge pull request #1830 from ReactiveCocoa/throttle-todo
Remove stale TODO
adjust indentation
add test-promoteErrors
add test-zip
add test-combineLatest
add test-combinePrevious
Add +[RACSignal try:] which wraps computations that may fail
Merge pull request #1824 from ReactiveCocoa/swift-enable-fixed-tests
Uncurry timeoutWithError which crashes on 1.2b3
Enable SignalProducer.start test fixed by 1.2b3
Fix startOn crash in Swift 1.2b3
Merge pull request #1802
Merge pull request #1775 from ReactiveCocoa/swift-1.2
Refactor curried functions
Force NSNumber downcasts
Update to Quick/Nimble master
Fix up merge/Swift warnings and errors
carthage update
Merge branch 'swift-development' into swift-1.2
Configure project to use tabs by default
More explicit disposal in producer tests
Name closure params when >1 in producer tests
Note the broken SignalProducer.start test
Capture disposables/sinks explicitly in producer tests
Merge pull request #1817 from iCodesign/swift-development
use pipe to observer instead of useless mappedSignal in mapError test
minor format change
add new operator(Signal.mapError) which would map from errors to other errors and tests
Revert xcconfigs update from #1811
Merge pull request #1811 from iCodesign/swift-development
Revert xcconfigs update from #1811
Merge pull request #1811 from iCodesign/swift-development
SignalProducer observer lifetime tests
Move Cathage compatible badge to the header
Add Carthage compatibility badge to the README
Merge pull request #1808 from brow/fix-swift-bridging-again
same comment elsewhere
move comment
explanatory comment
don't annotate params with __weak when OS_OBJECT_HAVE_OBJC_SUPPORT=0
Merge pull request #1796 from ReactiveCocoa/command-action-bridging-tests
Code style tweaks
SignalProducer.startOn tests
SerialDisposable => SimpleDisposable
Most SignalProducer.startWithSignal tests
SignalProducer.timer tests
SignalProducer.lift tests
SignalProducer.catch tests
Some SignalProducer.start tests
SignalProducer.on tests
SignalProducer.init disposable tests
SignalProducer.buffer tests
Merge pull request #1790 from ReactiveCocoa/swift-throttle-redux
Revert "Initialize disposable with schedulerDisposable"
s/complete/terminate/ in docs
Initialize disposable with schedulerDisposable
Merge remote-tracking branch 'origin/master' into swift-development
Merge remote-tracking branch 'origin/swift-development' into command-action-bridging-tests
Merge pull request #1797 from ReactiveCocoa/rename-bridging-functions
Rename `as` bridging functions to `to`
Start test Action enabled, to simplify RACCommand
Fix tests for RACCommand's dumb asynchrony
Tests for asRACCommand()
Tests for RACCommand.asAction
Merge pull request #1773 from NachoSoto/some-signal-tests
Save scheduleDate, not the real date of execution
Tests for throttle()
Handle Interrupted events while throttling
Refactor throttle to close race condition window
Merge remote-tracking branch 'origin/swift-development' into swift-throttle-redux
Unchanged take test
Guidelines
Merge branch 'swift-development' of github.com:ReactiveCocoa/ReactiveCocoa into some-signal-tests
Merge pull request #1735 from ReactiveCocoa/disposal-event
Use fatalError() instead of assert(false)
Invert token unwrapping in Signal.observe
Switch to <~ in Action and ObjectiveCBridging
Merge remote-tracking branch 'origin/swift-development' into disposal-event
Merge pull request #1792 from ReactiveCocoa/promote-no-error
Add promoteErrors operator over NoError
Merge pull request #1772 from ReactiveCocoa/join-with-strategy
Clarify that only actives forward errors in join()
Merge pull request #1791 from juliangrosshauser/fix-typo-in-readme
Fix typo in README
Refactor throttle()
Stub additional SignalProducer disposal tests
Add more Signal lifecycle tests around disposal
Merge remote-tracking branch 'origin/swift-development' into disposal-event
Pass the CompositeDisposable to setUp in startWithSignal
Cut off Signal observers when terminating event is received
Fix take(0) test
Fix Signal.init, .pipe memory management tests
Merge remote-tracking branch 'origin/swift-development' into join-with-strategy
Merge pull request #1759 from brow/switchToLatest
move state transitions from `LatestState` into `latest`
use Optional in place of enum to represent latest inner signal
Work around a runtime crash.
Correct the observed key path.
Subclass the dynamic property superclass.
Add a dynamic property superclass in ObjC.
Fix incorrect interruption when startWithSignal terminates
Fix wait() crashing if no values are sent
Add ignoreNil for easily creating CompositeDisposables
Remove CompositeDisposable.init over optionals
Merge branch 'swift-development' into disposal-event
Fix a runtime crash.
Rename the value property to work around Swift insanity.
Give DynamicProperty custom setters to work around Swift insanity.
Merge pull request #1767 from infimache/master
Bump xcconfigs for -Wno-nullability-completeness.
Stop Travis trying to build while we’re on an unsupported IDE.
Merge pull request #1777 from emilypriddy/patch-2
Update FrameworkOverview.md
Okay Xcode, whatever you say.
Parameters with default values don’t work with trailing closure syntax now.
Cast it like you mean it.
It’s just `count` now.
Use external labels when not using trailing closure syntax.
Avoid calling property getters for effects.
Merge pull request #1776 from emilypriddy/patch-1
Bump Quick & Nimble for Swift 1.2 support.
Update FrameworkOverview.md
@noescape for good measure.
@autoclosure has changed position.
Cast with extreme prejudice.
Use external labels.
Bump LlamaKit for Swift 1.2 support.
Merge pull request #1702 from almassapargali/signal-tests
s/SwitchToLatest/Latest/
Merge pull request #1771 from NachoSoto/objective-c-bridging-tests
Test for Signal.takeUntilReplacement
Tests for Signal.takeUntil
Signal.take completes immediately if count is 0
Tests for Signal.take
use ternary operators where possible
Tests for Signal.skipWhile
Tests for Signal.skipRepeats
Tests for Signal.skip
make LatestState vars private and give the default values
Simplified code
Tests for Signal.reduce
Test for Signal.scan
Test for Signal.filter
Test for Signal.map
Formatting
RACSignal.asSignalProducer: testing errors are forwarded
Rename latest() back to switchToLatest()
Group all join() tests together
Refactor tests to use join() instead of primitives
Hide merge/concat/latest and remove map variants
Add join() and joinMap() with strategies
Add a JoinStrategy enum
Merge remote-tracking branch 'origin/swift-development' into join-with-strategy
Merge pull request #1763 from ReactiveCocoa/overloaded-combine-and-zip
Dupe all the documentation comments
Merge remote-tracking branch 'origin/swift-development' into overloaded-combine-and-zip
Merge pull request #1770 from NachoSoto/signal-collect
started should release observer after disposal
Merge branch 'swift-development' into signal-tests
Tests for asRACSignal on a Signal
Tests for asRACSignal on a SignalProducer
TestError: exposed domain
Tests for RACSignal.asSignalProducer
Using collect instead of reduce
Created collect for Signal
prevent non-latest inner signal from sending on the observer
don't refer to `SignalProducer`s as "signals" in comments
tighten scopes
combine updating state and checking for completion
gather state into a struct
UITextField -rac_textSignal and -rac_newTextChannel send values on all editing events
test that latest of empty producer completes
update context string to match new function name
renaming
Merge branch 'swift-development' into switchToLatest
Merge pull request #1699 from JaviSoto/swift-signal-producer-tests
Merge pull request #1761 from NachoSoto/signal-producer-retry
Merge branch 'swift-development' of github.com:ReactiveCocoa/ReactiveCocoa into swift-signal-producer-tests
Implemented retry for Signal Producer.
Added more errors to TestError
Merge pull request #1760 from NachoSoto/signal-producer-repeat
Merge pull request #1745 from ReactiveCocoa/kvc-kvo-property
Return nil instead of -1 upon nil property
Merge branch 'swift-development' into kvc-kvo-property
SignalProducer.times: fixed retain cycle in local function.
SignalProducer.times: avoid recursive call
Moved helper method to SignalproducerSpec
SignalProducer.times(0) should produce an empty signal
SignalProducer.times is now evaluated lazily
Fixed test description
Merge pull request #1756 from almassapargali/timeout-with-error
document latestMap
use renamed function in tests
Merge remote-tracking branch 'origin/swift-development' into switchToLatest
rename (switchToLatest, switchMap) to (latest, latestMap)
added interval = 0 doc
dis -> disposable
Add combineLatest/zip over multiple producers
Add zip over multiple Signals
Add combineLatest over multiple Signals
implement switchMap
documentation
rm inconsequential assignment
disintercalate newlines from closure args
avoid a `materialize`
don't wrap observer
Abstracted SignalProducer.tryWithResults
Implemented times() for SignalProducer
no need to track completion state
Merge pull request #1757 from saniul/producer-merge-mergeMap
Document `mergeMap`.
Style change
Reverted erroneous change to the initial inFlight count.
Merge branch 'swift-development' into producer-merge-mergeMap
Merge pull request #1755 from saniul/producer-concatMap
merge and mergeMap for SignalProducers
refactor spec using `SignalProducer.buffer`
pass remaining tests
Style: don’t place an empty line at top of methods
“The word ‘sends’ doesn't belong.”
forward values from the latest inner signal
Merge pull request #1754 from ReactiveCocoa/lift-signal-operators
should release observer after termination
>= in precondition
open bracs on EOL
timeoutWithError() tests
timeoutWithError() implementation
concatMap implementation for SignalProducers
Merge branch 'swift-development' into signal-tests
Lift takeUntilReplacement over SignalProducers
Lift zipWith over SignalProducers
Merge pull request #1746 from ReactiveCocoa/pr/1739
Merge branch 'swift-development' into pr/1739
Refactor zipWith to use Atomic, fix completion
Add failing test for early zipWith completion
Allow nil objects for DynamicProperty
Add a DynamicProperty for KVC/KVO
Merge pull request #1740 from neilpa/signal-try
explicit checks in tryMap tests
tryMap code style
Avoid implicitly unwrapped optionals in try tests
Merge pull request #1741 from kirillyakimovich/master
[UPD] review comments
[UPD] we really don't want to call description without debug
Tests for try and tryMap
Implement try in terms of tryMap
Implement try and tryMap for signal
takeLast() when error test
takeLast() tests
dematerialize() tests
zipWith() tests
zipWith() implementation
Merge branch 'swift-development' into signal-tests
Throttle: track it correctly
Throttle: actually track previousDate again
Merge pull request #1734 from bencochran/fix-groupBy-ordering
Merge pull request #1710 from ReactiveCocoa/producer-sync
Merge pull request #1719 from ReactiveCocoa/then
Update bridging, fix some compilation errors
Merge pull request #1714 from ReactiveCocoa/concat-nada
Update extant SignalProducer operators
Update all extant Signal operators
Rename Cancelled event to Interrupted
WIP updating Signal operators
Incorporate Cancelled into SignalProducer API
“Don't Do It”
Add sendCancelled() too
Incorporate Cancelled into main Signal API
Add a Cancelled event, remove event()
Let queuedSignalProducers
Merge pull request #1728 from kaybutter/property-binding-operators
Fix typo
Add regression test for groupBy: ordering
made sure binding is properly disposed when property completes
changed <~ tests from pending to active
simplified <~ disposable handling for signal producers
reenabled tests for <~ operator
implementations of <~ for producers and poperties
Preserve overall order in -groupBy:transform:
Turthy or falsy
Use be{Falsy,Truthy}
Be idiomatic with startWithSignal
Implement `wait` with `then` instead of `map`
Another comment clarification
Use startWithSignal for idiomatic disposal
Improve some comments
Wrap producer queue in Atomic
Merge pull request #1718 from ReactiveCocoa/takeWhile-tests
Merge branch 'then' into producer-sync
Use dispatch group instead of toEventually
More value
Use SignalProducer.buffer in then() tests
Remove ignoreValues
Document concat queue semantics
Improve locality of completion producer
Rearrange ConcatState internals
Replace Atomic with direct OSSpinLock
Move startNextSignalProducer to ConcatState
Add dequeueSignalProducer to ConcatState
Go without latestSignalCompleted
Go without selfCompleted flag
Add enqueSignalProducer to ConcatState
Make ConcatState class, with internal Atomic
throttle: readability
throttle: clean up scoping
Names: s/subscribe/start
throttle: remove predicate, reduce reliance on optionals
throttle: schedule flushes after relinquishing lock
throttle: send values after relinquishing lock
Give ConcatState refs to observer, disposable
Extract subscribeToSignalProducer to private func
Just delete complete💯() altogether
materialize() test
combineLatestWith() tests
sampleOn() tests
removed commented takeWhile() tests, see #1718
Merge branch 'swift-development' into signal-tests
"return a the" mack
Test first() and last() with multiple values
Use SignalProducer.buffer over manual "equivalent"
Array literal spacing
Grámmär
Complete concat() outside of lock
Merge pull request #1722 from samcal/patch-1
Use SignalProducer.buffer over manual "equivalent"
s/context/describe/
Test takeWhile doesn't send failing initial value
typo
Throttle uses predicate
Use CompositeDisposable and remove date check
Add date check for schedulers that don't support Disposables
Implement throttle
Merge pull request #1717 from almassapargali/take-while
remove unused link references
remove all references to ReactiveCocoaFramework/
Test concat() sequencing
Test concat() completion
Test concat() with inner error
Test concat() with outer error
fix broken link
do not wrap in (), use var
delay() tests
observeOn() tests
Merge branch 'producer-sync' into signal-tests
Just your basic ignoreValues tests
Implement then() (and ignoreValues())
Attempt completion only when queue is empty
make swiftc happy again
Implement tests stubs for takeWhile()
added space between generic types
tests that take(n) completes after n values (#1710)
implemented takeWhile()
takeWhile() test (commented out)
add represantive values
takeUntilReplacement() test
takeUntil() tests
take() tests
implemented skipWhile
implemented skipRepeats tests
implemented skip tests
finished Signal.pipe tests
implemented "should not trigger side effects"
Prevent dequeueing when queue is empty
Merge pull request #1695 from ReactiveCocoa/bring-back-cocoa-action
Revert "Adjust completion control inside take()"
Adjust completion control inside take()
Revert "Signals, how do they work?"
Fix reference to CocoaAction.selector
Switch last() to use single()
Merge branch 'swift-development' into bring-back-cocoa-action
Store Action.enabled to defer completion
Compose first() on top of single()
Make take(0) complete immediately
Add Signal.empty
Fix take() completion
Compose wait() on top of last()
Compose last() on top of first()
Document wait(SignalProducer)
Implement wait(SignalProducer) and specs
Implement last(SignalProducer) and specs
Implement single(SignalProducer) and specs
Implement spec stubs for first(SignalProducer)
Merge remote-tracking branch 'origin/master' into swift-development
reduce() tests
test for scan()
test for filter
map test
"should stop forwarding events when disposed" implemented
move expectation to according change
use TestError
Merge branch 'swift-development' into signal-tests
Merge pull request #1704 from ReactiveCocoa/swift-take-until-replacement
Reordered takeUntilReplacement() observation
Revert "Implement takeUntilReplacement()"
Revert "Fix race conditions in takeUntilReplacement()"
Revert "Argh git fail removing duplicate takeUntilReplacement()"
Revert "s/Forard/Forward"
Revert "Whitespace, modify->withValue(), simplify atomic usage"
Merge pull request #1707 from kkazuo/patch-2
fixing memory leak issue #1691
Make sure that they use the matcher with values that are actually possible: a signal can't both send an error and complete
Merge pull request #1705 from almassapargali/test-error
add domain to TestError
leave only Default case
Simply comparing the error optionals
use optional chaining
some of Signal.pipe tests
Merge pull request #1698 from JaviSoto/swift-property-tests
just use Signal.never when events won't happen
Whitespace, modify->withValue(), simplify atomic usage
Merge branch 'swift-development' for \#1688 changes
fixed indentation
use AnyObject signals when type is not important
implemented "should deallocate..." tests
use weak var on keep alive test
use SimpleDisposable on dispose tests
condensed observe() methods
testing signal completion too
added TestError
use beTruthy and beFalsy
toEventually() -> to()
s/Forard/Forward
Argh git fail removing duplicate takeUntilReplacement()
Implemented verification of Signal Producer outcome using a Nimble matcher
Using success() and failure()
Signals that error out don't complete!
Style changes + improvements per code review
Fix race conditions in takeUntilReplacement()
Implement takeUntilReplacement()
Merge pull request #1688
Merge branch 'swift-development' into pr/1688
removed not used observe() args
move should dispose tests to where they belongs
should forward events to observers implemented
Fixed reduce() Disposable TODO
add spec wide testScheduler var and init it beforeEach
WIP: Signal tests
WIP: SignalProducer tests
#Grammar
WIP: Property tests. Tests that rely on binding SignalProducers to Properties are commented out because the <~ is not enabled due to a Swift compiler crash
Updated commented out <~ method for SignalProducer to use the new API that requires a explicit Error types
Made ConstantProperty API public
Extended note
Simplified list of active disposables to a bool
Array initialization convention
completeIfAllowed() on concat outer signal completing
Remove redundant disposable
Fixed silly mistake in new reduce() impl
Used mutable closure arguments
Avoid exceeding takeLast() reserved capacity
Remove redundant comment
Simplified reduce()
Restore CocoaAction unit tests
Recreate CocoaAction class, with new initializers
Merge pull request #1694 from ReactiveCocoa/stub-swift-tests
Stub tests for Objective-C bridge
Stub tests for Property types
Add interface comments for single/last/wait
Stub tests for SignalProducer APIs
Stub tests for Signal APIs
Merge pull request #1689 from ReactiveCocoa/happy
Fixed reduce() edge case
Implemented concat
Redo takeUntilReplacement without concat
Merge pull request #1684 from ReactiveCocoa/implement-action
combinePrevious should use scan, not reduce
Fixed unnecessary atomics
s/sendNext/sendError/
Add takeUntilReplacement (and concat) to Signal
Implemented skipRepeats, skipWhile, and takeLast
Reduce and scan
Implement combinePrevious
Merge pull request #1685 from ReactiveCocoa/burn-unused-code
Update ActionSpec accordingly too
Merge branch 'swift-development' into implement-action
Merge branch 'swift-development' into burn-unused-code
Merge pull request #1683 from ReactiveCocoa/parameterized-errors
(Hopefully) better documentation for error params
Add asRACCommand() variant with non-nil output
Allow any ErrorType when converting to RACSignal
Constrain errors to a new ErrorType protocol
Guarantee a non-nil error converting from RAC 2.x
Remove NSError couplings from future APIs
Remove NSError-based try()
Remove unused Identity and OptionalExtensions code
Restore Action tests
Implement Action.apply
Merge pull request #1655 from ReactiveCocoa/signal-templates
Fix a variety of type errors
Implement parameterized catch() over producers
Parameterize everything by the error type sent
Annotate where we're working around missing <~s
Note TODOs
Remove old tests entirely
Merge remote-tracking branch 'origin/swift-development' into signal-templates
Merge pull request #1682 from ReactiveCocoa/pr/1681
Use real LlamaKit, not Carthage's fork
Add takeUntil() over signals and producers
Add sampleOn() over producers, using binary lift()
Add sampleOn() over signals
Add materialize() and dematerialize()
Add skip() over signals
Add delay() over signals
Disable old unit tests
Work around versions of <~ broken in the compiler
Assign Action's executeClosure in init
Implement combineLatestWith()
Fix bizarre type error within first()
Rename start(setUp:) to startWithSignal()
Fix a bunch of rando compiler errors
Update FoundationExtensions for new types
Update Objective-C bridge for new types
Enable Action, fix compiler errors
Refactor first() to use take(1)
Hide disposable property, add disposablePipe()
Skip initial disposal checks
Refactor start(setUp:) to not return a disposable
Use pipe() instead of Signal.init for start()
Refactor Signal.init to not provide a disposable
Implement startOn() for producers
Implement observeOn() for signals
Stub pieces of the new Action implementation
++LlamaKit
Implement on() for signal producers
Implement timer() signal producers
Replace old types with new files in project
Implement <~ for property types
Implement take() for signals
Add filter() over signals
Add map() over signals
Only bother disposing if we know we're not already
Add first() over signal producers
Implement properties after factoring out protocol
Implement SignalProducer.buffer
Refactor start() to implement lift() sensibly
Document SignalProducer.try
Implement most of the SignalProducer basics
Merge remote-tracking branch 'origin/swift-development' into signal-templates
Comment out unimplemented Signal methods
Merge pull request #1680 from ReactiveCocoa/pacify-xcode
OK Computer
++xcconfigs
Write a basic implementation for Signal<T>
Add refactored interfaces to project
Break out Event types and functions into own file
Merge pull request #1678 from ReactiveCocoa/backport-racqueuescheduler-lldb-fixes
More accurate comment.
Better check for NULL.
Add a comment.
Use assign semantics when OS_OBJECT_HAVE_OBJC_SUPPORT=0
Merge pull request #1667 from croath/master
Merge pull request #1654 from ReactiveCocoa/try-constructors
Update LICENSE.md
Actually pull out the NSError
Remove defaultError parameter from try()
Merge remote-tracking branch 'origin/swift-development' into try-constructors
Merge pull request #1653 from ReactiveCocoa/try-improvements
Revert "Allow default error to be specified for try/tryMap"
Merge pull request #1665 from ReactiveCocoa/refactor-tryMap
Merge pull request #1337 from ReactiveCocoa/code-style-fixes
Merge pull request #1627 from ReactiveCocoa/kvo-proxy-redux
Refactor `tryMap` with `fromResult`
More dot-syntax for `-rac_description`
Merge branch 'master' into code-style-fixes
Refactor TestObject to use manual KVO notifying
Add a concurrent queue that we can barrier in test
Use an atomic TestObject property
Fix style, condition checking in RACKVOProxySpec
Clean up RACKVOProxy a bit, use GCD instead
Refactor async disposal test to wait longer
Use constants in expectations
Refactor RACKVOProxySpec without AsyncBlock
Merge remote-tracking branch 'origin/master' into kvo-proxy-redux
Merge remote-tracking branch 'origin/master' into swift-development
Merge pull request #1664 from ReactiveCocoa/mo-travis-mo-problems
Copy some .travis.yml settings from Carthage
Merge pull request #1663 from ReactiveCocoa/scheduler-type
Rename to SchedulerType and DateSchedulerType
Merge pull request #1635 from ReactiveCocoa/immediate-main-thread-scheduler
Add QueueScheduler.mainQueueScheduler
Replace reentrant MainScheduler with UIScheduler
Merge pull request #1645 from ReactiveCocoa/event-syntactic-sugar
Add free function versions of start(), for |>
Add overload for SignalProducer.start with a sink
Add free function versions of observe(), for |>
|> should be left associative
Document the choice of |> precedence
Make `executing` and `enabled` into `Property`s
Split Property by mutability, rename producer
Rename Plan<T> to SignalProducer<T>
Merge branch 'swift-development' into signal-templates
Sketch a new (but pretty similar) Action interface
Merge branch 'master' into swift-development
Merge pull request #1658 from ReactiveCocoa/carthage-0.5
Use a Cartfile.private, loosen version constraints
Update to Carthage 0.5 directory structure
Rename Property.values to `valuesPlan`
Rename SignalTemplate<T> to Plan<T>
Change `static` declarations to `class` in Signal
Rename `generator` to `startHandler` for templates
Document and export Property
Document and export SignalTemplate
Document and export Signal
Finish basic interface sketches
Super WIP
Refactor NSErrorPointer-try in terms of the other
autoclosure is dumb, you can't give real closures
Add ColdSignal.try constructor for lazy operations
Allow default error to be specified for try/tryMap
Add an overload of `try` that uses Result<()>
Merge pull request #1648 from jconst/swift-development
remove merge for ColdSignal of HotSignals; instead use HotSignal.pipe() and .merge() in the new merge(SequenceType)
revert last 2 commits to remove mergeWith convenience function
forgot a <T>
add mergeWith convenience function and change a line in the spec to test it
give HotSignal a merge class function that takes a SequenceType
write merge function for ColdSignal of HotSignals
write tests for to-be-implemented merge function for a sequence of HotSignals
update to carthage 0.4 directory structure
Fix over-aggressive find/replace in sendNext()
Add Event.value and .error convenience properties
Replace sink.put() with send{Next,Error,Completed}
Add sendNext, sendError, sendCompleted functions
Merge pull request #1638 from ReactiveCocoa/combining-conveniences
Merge pull request #1636 from ReactiveCocoa/document-memory-management
Merge pull request #1639 from ReactiveCocoa/action-command-bridging
Add Action > RACCommand bridging
Add RACCommand > Action bridging
Add combineLatest & zip over multiple ColdSignals
Add combineLatest and zip over multiple HotSignals
Merge pull request #1637 from kkazuo/patch-1
Code style fix (space -> tab)
Clarify memory management of ColdSignals
Move Event<T> to bottom of ColdSignal.swift
Clarify memory management of HotSignals
Port -deliverOnMainThread tests to Swift
Run MainScheduler actions immediately if allowed
Merge pull request #1608 from ReactiveCocoa/hot-signal-generator-lifetime
Test merge() lifetime
Capture ObservableProperty in buffer() signal
Make HotSignal.take terminate ASAP
Update to latest objc-build-scripts
Merge pull request #1628 from ReactiveCocoa/improve-actions
Failing test for take(1) on a weak signal
Verify that derived signals don't live too long
Refactor HotSignal lifetime tests around new API
Reorganize existing HotSignal lifetime tests
Rename infinite/finite to “weak” and normal init
Refactor HotSignal callers to use finite/infinite
Allow nil disposables even for infinite signals
Detach all observers when a finite signal is done
Replace initializer with HotSignal.infinite/finite
Test that derived signals are _not_ kept alive
Test that interval() terminates upon deallocation
Merge remote-tracking branch 'origin/swift-development' into hot-signal-generator-lifetime
Add missing optional to CocoaAction.execute param
Test KVO compliance for enabled/executing
Add a CocoaAction wrapper class, for binding to UI
Merge remote-tracking branch 'origin/swift-development' into improve-actions
Merge pull request #1622 from ReactiveCocoa/kill-subscription-terminology
Merge branch 'swift-development' into kill-subscription-terminology
Merge pull request #1614 from ReactiveCocoa/action-tests
Merge pull request #1626 from ReactiveCocoa/make-debugging-internal
Fix out-of-date docs for `value` and `errors`
Fix accidentally-recursive Action initializer
Rename Action.execute to apply
Refactor Action to simplify, not use a scheduler
Improve Action/ObservableProperty debugDescription
Coarsely convert RACKVOProxy to Quick/Nimble
Allow reading ObservableProperty concurrently
Make ObservableProperty changes thread-safe
Make file, function, and line properties internal
Merge pull request #1625 from tonyarnold/patch-1
Minimum iOS version required for the Xcode project is 8.0
Update requirements to iOS 6 and OS X 10.8
Update xcodeproj for RACKVOProxy
Merge pull request #1623 from ReactiveCocoa/remove-differences-from-rx
Clarify that RAC is inspired by Rx, not based upon
Remove “Differences from Rx” document
Remove subscriber terminology from other docs
Remove subscriber terminology from ColdSignal docs
Rename `on` block from `subscribed` to `started`
Rename subscribeOn to evaluateOn
Test Action.execute
Back `enabled` with an ObservableProperty
Improve ColdSignal and HotSignal debugDescription
Merge branch 'swift-development' into action-tests
Merge remote-tracking branch 'origin/master' into swift-development
Merge pull request #1618 from ReactiveCocoa/pr/1425
Add unit tests for -deliverOnMainThread
No need for a barrier upon incrementing
Bring queueLength into each signal subscription
Refactor -deliverOnMainThread to deduplicate code
Fix method brace style
Merge pull request #1611 from ReactiveCocoa/cold-signal-tests
WIP more enabled/disabled tests for Action
Test and fix enabled/executing default behavior
Initialize Actions with scheduler to serialize on
Stub ActionSpec
Test ColdSignal.startMulticasted
Test ColdSignal blocking first/last/single/wait
Test ColdSignal.then
Test ColdSignal.concat
Test and fix ColdSignal.switchToLatest
Test ColdSignal.merge
Test ColdSignal.combineLatestWith
Test ColdSignal.dematerialize
Test ColdSignal.materialize
Test ColdSignal.catch
Test try and tryMap
Test ColdSignal.on
Test ColdSignal.timeoutWithError
Test ColdSignal.delay
Test ColdSignal.subscribeOn
Test ColdSignal.deliverOn
Test ColdSignal.takeUntil
Test ColdSignal.takeWhile
Test ColdSignal.takeLast
Test ColdSignal.take
Test ColdSignal.skipWhile
Test ColdSignal.skipRepeats
Test ColdSignal.skip
Test ColdSignal.combinePrevious
Test ColdSignal.reduce
Test ColdSignal.scan
Test ColdSignal.map
Test ColdSignal.filter
Fix mapAccumulate tests
Test ColdSignal.mapAccumulate
Test ColdSignal.fromResult
Test ColdSignal.fromValues
Test basic ColdSignal constructors
Add == over Event<T>
Finish testing ColdSignal.startWithSink
WIP tests for ColdSignal.startWithSink()
Revert "Merge pull request #1597 from talko/backportlivesubscriber"
Merge pull request #1597 from talko/backportlivesubscriber
Refactor lifetime tests to verify deallocation
Make a HotSignal's generator keep it alive
Failing test that HotSignal generators stay alive
Revert to delivering one event per run loop.
Remove unnecessary nil check.
Make delivery code more similar to RACSubscriber.
Merge branch 'master' into deliver-to-ui
Queue events and drain them on the main thread.
Merge pull request #1598 from ReactiveCocoa/debugging-tools
Merge remote-tracking branch 'origin/swift-development' into debugging-tools
Merge pull request #1600 from ReactiveCocoa/property-binding-syntax
Merge pull request #1603 from ReactiveCocoa/zip
Merge remote-tracking branch 'origin/swift-development' into debugging-tools
Merge remote-tracking branch 'origin/swift-development' into property-binding-syntax
Merge branch 'swift-development' into zip
Merge pull request #1599 from ReactiveCocoa/monadic-operators
Merge pull request #1601 from ReactiveCocoa/refactor-event-sink
Merge pull request #1602 from ReactiveCocoa/remove-prunedisposed
Merge pull request #1581 from ReactiveCocoa/swift-unit-tests
Merge pull request #1604 from ReactiveCocoa/jspahrsummers-patch-1
Undo changes made to the project file by Xcode - should get folded into 076d38e.
Remove mention of Slack chat room
Import LlamaKit in ColdSignalSpec
Integrate RACKVOProxy into RACKVOTrampoline; adjust how we generate context parameters to avoid collisions in the proxy table
Initial implementation of RACKVOProxy per discussion in https://github.com/ReactiveCocoa/ReactiveCocoa/issues/1122
Charry picked from aborted 3.0 - Add RACLiveSubscriber, reduce subscriber allocations
Cherry picked from aborted 3.0 - Replace -didSubscribe…: with a disposable property
Add ColdSignal.zipWith
Add HotSignal.zipWith
Change ObservableProperty.values into a property
Add debug logging functions to events and signals
Record instantiation sites for debugDescription
Test property binding operators
Upgrade startMulticasted error handler to be fatal
Add <~! binding operator for ColdSignal
Add <~ binding operator for HotSignal
Hide `doNothing` declarations
Refactor eventSink() as Event.sink()
Refactor filter and tryMap in terms of mergeMap
Add mergeMap, switchMap, concatMap to ColdSignal
Add mergeMap and switchMap to HotSignal
Refactor CompositeDisposable to return handles
Test and fix HotSignal.buffer
Test and fix HotSignal.next
Test HotSignal.switchToLatest
Test HotSignal.merge
Test HotSignal.combineLatestWith
Test HotSignal.sampleOn
Test HotSignal.throttle
Test HotSignal.delay
Test HotSignal.deliverOn
Merge branch 'swift-development' into swift-unit-tests
Merge pull request #1595 from ReactiveCocoa/weak-references
wow observer, you're so strong
Only invoke -rac_valuesForKeyPath: against `id`
Allow nil observers in rac_valuesAndChanges…
Tear down KVO with an unsafe reference
Simplify -rac_valuesAndChangesForKeyPath:
Refactor KVO code to use weak references
Merge pull request #1592 from ReactiveCocoa/fix-racy-test
Disable nil check for disposable lifetime test
Merge pull request #1589 from ReactiveCocoa/hot-signal-lifetime
Remove non-nil test for innerSignal
Try with a longer timeout (i dunno lol)
Merge pull request #1590 from ReactiveCocoa/improve-synchronous-cold-signals
Refactor startMulticasted() to be disposable
Flip so the lower-level function is startWithSink
Refactor users of ColdSignal for the new API
Add startWithDisposable() convenience function
Replace every Subscriber and SinkType with SinkOf
Don't generate any values if disposed up-front
Refactor ColdSignal.init, start(), and Subscriber
Refactor pipe() so the sink keeps its signal alive
Add test for HotSignal generator lifetime
Add regression test for HotSignal disposal
Add regression test for observe() disposable
Add regression test for observe() lifetime
Add failing test for HotSignal.pipe() lifetime
Merge pull request #1585 from robb/fix-gitmodules
Update .gitmodules
Test HotSignal.takeWhile()
Test HotSignal.takeUntilReplacement()
Test HotSignal.takeUntil()
Test HotSignal.take()
Test HotSignal.skipWhile()
Merge pull request #1584 from robb/llamakit-plus-plus
Update LlamaKit
Merge pull request #1576 from Shulepov/swift-ObservableProperty-issue1543
Merge pull request #1578 from ReactiveCocoa/swift-cartfile
Test HotSignal.skipRepeats()
Test HotSignal.skip()
Test HotSignal.scan()
Test HotSignal.filter()
Merge pull request #1577 from ReactiveCocoa/cartfile
Test HotSignal.map()
Add tests for interval()
Add tests for pipe()
Sort tests by name
Merge branch 'cartfile' into swift-cartfile
Revert "Don't use Carthage for xcconfigs"
Merge branch 'cartfile' into swift-cartfile
Don't use Carthage for xcconfigs
Signal shouldn't retain ObservableProperty
Tests for ObservableProperty
Move LlamaKit to Cartfile as well
Merge branch 'cartfile' into swift-cartfile
Fix continuation test not running on main thread
Use Carthage for submodules
fixes #1543
Merge pull request #1573 from ReactiveCocoa/fix-swift-bridging
More accurate comment.
Better check for NULL.
Add a comment.
Use assign semantics when OS_OBJECT_HAVE_OBJC_SUPPORT=0
Merge pull request #1568 from foliot/skipRepeats-enhancement
Changed areEqual to isEqual.
Slight formtting adjustments.
Implemented enhancement to skipRepeats.
++Quick
Merge pull request #1549 from ReactiveCocoa/fix-replay-1
Test replay(2) continues forwarding.
Whoops. didSet gets the oldValue.
Style.
Test that forwarding continues.
collect the values and send 2 for the replay(0) test.
Project should use tabs.
Use a better dummy error.
Use the TestScheduler.
context -> describe.
Swift style.
Merge pull request #1557 from ReactiveCocoa/upgrade-quick
Migrate shared examples to QuickConfiguration format
++Quick
Add some tests for replay(0)
Remove this logging.
Add some tests for replay(2).
new line.
Rename some of the test vars.
Revert "When index == lastIndex we still want to send the value."
Start with an initial state of -1.
Link LlamaKit.
Add a HotSignalSpec to test replay.
When index == lastIndex we still want to send the value.
++Quick
++xcconfigs
Merge pull request #1545 from ReactiveCocoa/signal-fromresult
Add ColdSignal.fromResult()
Merge pull request #1542 from ReactiveCocoa/always-more-swift-fixes
Don't fail first() when the take(1) completes
Merge pull request #1541 from ReactiveCocoa/misc-fixes
Fix on() not forwarding events
Merge pull request #1532 from ReactiveCocoa/swift-api-redux
Expose ObservableProperty initializer
Fix visibility and `subscribed` behavior for on()
:fire: SignalSpec, it's diverged too far
Merge pull request #1536 from rodionovd/documentation-fix-links
Documentation: remove /ReactiveCocoaFramework/ subpath from URLs
Concatenate in buffer() and replay(), don't merge
Add ColdSignal.concat for signals of signals
Generalize ColdSignal.start to any SinkType
Make Action.enabled complete upon deallocation
Add ColdSignal.takeUntil
Combine Foundation extensions into one Swift file
Rename ColdSignal.subscribe to start
Rename ColdSignal.start to startMulticasted
Add some basic Xcode groups
Move Event type into ColdSignal.swift
Remove interface sketch from repository
Ensure that ColdSignal events are serialized
Update HotSignal lifetime, incorporate disposables
Merge branch 'swift-development' into swift-api-redux
Merge remote-tracking branch 'origin/master' into swift-development
Merge pull request #1413 from ReactiveCocoa/xcode6
Merge remote-tracking branch 'origin/master' into xcode6
Merge pull request #1456 from talko/serial
Merge pull request #1531 from ReactiveCocoa/group-source-by-language
Audit operator parameters, types, & preconditions
Rename ColdSignal.defer() to lazy()
Add HotSignal.combineLatestWith()
Restore old HotSignal.throttle() implementation
Add HotSignal.delay()
Add HotSignal.deliverOn()
Reimplement HotSignal.take() with takeWhile()
Add HotSignal.sampleOn()
Add HotSignal.takeUntilReplacement()
Add HotSignal.takeUntil()
Add HotSignal.skipRepeats()
Try to sort signal operators more sensibly
Add HotSignal.next(), like first()
Add last(), single(), and wait() to ColdSignal
Split HotSignal interface with extensions too
Split ColdSignal interface across some extensions
Merge branch 'swift-development' into group-source-by-language
Merge branch 'swift-development' into swift-api-redux
Update more bundle IDs to be org.reactivecocoa
Merge branch 'xcode6' into swift-development
Set bundle ID to org.reactivecocoa.ReactiveCocoa
Update Foundation extensions for new signal types
Refactor Action for new signal types
Add ColdSignal.first()
Minor tweaks to cold <> hot conversions
Add ColdSignal.combineLatestWith
Add ColdSignal.then()
Add ColdSignal.start() to get a HotSignal
Add HotSignal.replay()
Add HotSignal.buffer() to get a ColdSignal
Fix type signatures and documentation in Action
Remove HotSignals from ObservableProperty
Merge branch 'group-source-by-language' into swift-api-redux
Merge branch 'swift-development' into group-source-by-language
Copy LlamaKit.framework into iOS test target
Fix LlamaKit framework references
Remove now-unnecessary SwiftSpec file
Remove unused prefix header
Split specs by language as well
Move all Swift sources into their own folder
Move extobjc sources into Objective-C folder too
Move all Objective-C sources into their own folder
Merge branch 'xcode6' into swift-development
Use angle bracket imports in ReactiveCocoa.h
Delete inner, spurious ReactiveCocoa/ folder
Kill more dumb Xcode-added search paths
Fix framework copying for iOS tests
Fix assertion failure in NSNotificationCenter spec
"Fix" iOS tests
Fix up Mac tests that are failing
Purge many tests that require a GUI host
Create dummy Swift spec so the stdlib is linked
++objc-build-scripts
Remove dumb automatically-added search paths
Migrate Mac tests to Quick/Nimble
WIP migrate to Quick and Nimble
++Quick a bunch
Add Nimble and Quick
Omit some more headers from RAC builds
Re-add ReactiveCocoa specs
Fix compilation in a few files, add extobjc files
Re-add ReactiveCocoa sources
Create enclosing workspace
Finish restoring ObservableProperty, document it
Break out a RemovalToken struct from Bag
WIP rebuilding ObservableProperty
WIP rebuild Action—harder, better, faster, etc.
Rename back to ColdSignal.asDeferredRACSignal.
Re-enable ObjectiveCBridging with the types so far
:fire: Promise (forever?????????)
:fire: ObservableProperty (for now)
Reboot Producer/Consumer as ColdSignal/Subscriber
Start reboot, refactor Signal into HotSignal
Merge pull request #1529 from ReactiveCocoa/promise-improvements
Fix deadlock in Promise.await()
Don't rely on the Promise staying alive to resolve
Get rid of nasty disposable logic in Promise
Merge pull request #1512 from ReactiveCocoa/signal-tests
Deduplicate build settings
Apply xcconfigs
Add iOS framework target, share new schemes
Reboot project organization
Add Quick submodule
++xcconfigs, :fire: Expecta and Specta
++xcconfigs
Merge branch 'master' into xcode6
Merge pull request #1518 from ReactiveCocoa/producers-from-sequences
Merge pull request #1521 from ReactiveCocoa/deploy-to-ios-8
Test Signal.apply
Test and fix Signal.firstPassingTest
Test Signal.deliverOn, simplify nil operator tests
Add TestScheduler.advance, for simple stepping
Test, fix, and redocument Signal.throttle
Test Signal.delay
Update interval test for DateScheduler changes
Fix memory management in sampleOn test
(Failing) tests for Signal.sampleOn
Test Signal.combineLatestWith
Test and update docs for Signal.buffer
Merge remote-tracking branch 'origin/swift-development' into signal-tests
Merge remote-tracking branch 'origin/swift-development' into producers-from-sequences
Write Producer.fromSequence the annoying way
Bump iOS deployment target to 8.0
Merge pull request #1515 from ReactiveCocoa/date-scheduler-current-date
Broken definition for Producer.fromSequence()
Require a currentDate property for DateSchedulers
Test skipRepeats()
Test filter()
Test skipWhile()
Test skip()
Rename to combinePreviousWithStart, test
Test takeWhile()
Test take()
Rename to scanWithStart(), add test
Test mapping
Test signal merging and switching
Use curried methods for observation callbacks
More code review feedback.
Test optional unwrapping operators
Test pipeWithInitialValue
Add basic test for Signal.interval
Basic tests for instantiating/observing a Signal
Merge pull request #1511 from ReactiveCocoa/update-quick
Update Quick to restore unit testing functionality
Merge remote-tracking branch 'origin/master' into swift-development
Merge pull request #1492 from ReactiveCocoa/scheduler-tests
++ is a thing, certainly
Merge branch 'swift-development' into scheduler-tests
Merge pull request #1505 from ReactiveCocoa/llamakit
++xcconfigs
++xcconfigs for jspahrsummers/xcconfigs#29
Migrate to LlamaKit, fuck up all build settings
Re-add our own `identity` function
Use ReactiveCocoa/LlamaKit for important fixes
Replace swiftz_core with LlamaKit
Merge pull request #1501 from ReactiveCocoa/fix-subscriber-disposable-cycle
Fix retain cycle in -didSubscribeWithDisposable:
Merge pull request #1500 from ReactiveCocoa/unsafe-subscriber-ref
Reference disposables directly in -didSubscribe…
Use an unsafe self reference in -[RACSubscriber init]
Bump Specta to wip-0.3
Upgrade project settings because lol Xcode
Make Optional extensions internal
Fix raw value conversions for Error enum
Update Quick and swiftz
Merge pull request #1481 from equinux/master
Switch to use CFBridgingRelease.
More code review feedback.
Merge pull request #1461 from talko/alert
Merge pull request #1491 from ReactiveCocoa/promise-improvements
Merge pull request #1493 from ReactiveCocoa/improved-timer-leeway
Merge pull request #1489 from ReactiveCocoa/value-types-properly
Add Promise.notify
Dispose of signal observation when await() is done
Verify TestScheduler.currentDate as well
Test TestScheduler advancement and dequeuing
Add default leeway of 0 to TestScheduler
Add interval-based scheduleAfter to TestScheduler
Test DateScheduler functions on QueueScheduler
Use a better default leeway for Signal.interval()
Add overrides of scheduleAfter with default leeway
Test DateScheduler functionality for MainScheduler
Remove test for Disposable copying
Make all Disposables and Schedulers into classes
Merge pull request #1407 from ReactiveCocoa/swift-tests
Merge branch 'swift-development' into swift-tests
Merge branch 'master' into swift-development
Merge branch 'swift-development' into swift-tests
Merge pull request #1444 from ReactiveCocoa/dont-chain-me-bro
Merge branch 'swift-development' into dont-chain-me-bro
Merge pull request #1445 from ReactiveCocoa/bind-to-error-handling
Merge branch 'swift-development' into bind-to-error-handling
Merge pull request #1443 from ReactiveCocoa/retry
Update for new Optional behavior
Merge branch 'swift-development' into retry
Update DisposableSpec
Merge branch 'swift-development' into swift-tests
Actually fix access of _current property
Update to latest version of Quick
Merge branch 'swift-development' into swift-tests
Fix: Crash on iOS5 in RacBacktrace #1321
Formatting.
Merge pull request #1478 from talko/disposablecherrypick
Signal.current was never meant to be recursive
Add test case for -[UIAlertView rac_willDismissSignal].
Formatting.
Skip adding disposables that are already disposed
Merge pull request #1135 from ReactiveCocoa/remove-racactivesignals
Merge branch 'swift-development' into swift-tests
Merge pull request #1475 from pyrtsa/fix/beta6-issues
Merge pull request #1336 from ReactiveCocoa/optimize-take
Switch back to master on maxpow4h/swiftz
Merge pull request #1465 from ReactiveCocoa/dont-use-debug
Temporarily switch to pyrtsa/swiftz to fix the "local function" error
Get rid of "__conversion()", no longer supported
Circumvent "cannot reference local function" errors
Guard RACBacktrace with RAC_DEBUG_BACKTRACE instead of DEBUG.
Merge remote-tracking branch 'origin/master' into remove-racactivesignals
Add [UIAlertView rac_willDismissSignal]. This is required when events are required if the alert is dismissed programatically. rac_buttonClickedSignal does not fire an event in that situation.
Reimplement RACSerialDisposable with OSSpinLock rather than OSAtomic in order to fix -disposable method to be thread safe.
Merge pull request #1454
Compare Disposable data to nil, not false
Failing unit test to expose thread-unsafe implementation of -[RACSerialDisposable disposable].
fix other Atomic bool cases
update swiftz ref
remove internal func specifiers, fix Disposable.disposed
Revert "Rename boolean operators for Swift compatibility"
Merge remote-tracking branch 'origin/master' into xcode6
Updated swiftz ref
Action.swift: indentation
Atomic.swift: indentation
Bag.swift: Indentation + whitespace
updated for Xcode 6 beta 5
Fix accidental shadowing in QueueScheduler.init()
Disable specs for Atomic and Bag
Update to use new Nimble matcher syntax
++Quick to latest master
Merge branch 'swift-development' into swift-tests
Add errorHandler parameter to Producer.bindTo
Disallow chaining of Promise.start()
Add Producer.retry
Remove the magically-reappearing EventBuffer
Merge pull request #1426 into swift-development
Add some more required constructors
Merge branch 'swift-development' into pr/1426
Merge pull request #1406 from ReactiveCocoa/add-swiftz-core
Merge branch 'swift-development' into add-swiftz-core
++swiftz
Merge remote-tracking branch 'origin/master' into swift-development
Merge pull request #1436 from kylef/extscope2
Include EXTScope.h in ReactiveCocoa.h
Added missing public init to MainScheduler
Add -[RACSignal deliverOnMainThread]
Merge pull request #1424 from ReactiveCocoa/pr/1422
Remove prefix underscores on private functionality
Make TestScheduler.ScheduledAction private
Make SignalingProperty.signal and .value public
Remove duplicative access control on extensions
Make _empty consumer functions public
Make nested typealiases public
Make belated additions public
Make Atomic and Bag internal-only
Merge branch 'swift-development' into pr/1422
Merge pull request #1423 from ReactiveCocoa/audit-atomic-usage
Merge pull request #1409 from ReactiveCocoa/improve-memory-management
Merge pull request #1408 from ReactiveCocoa/centralized-errors
Refactored for Swift beta 4 compatibility
Actually increment inFlight in Producer.merge
Fix array manipulation in CompositeDisposable
Move SerialDisposable work outside of spinlock
Define a module for ReactiveCocoa-Mac too
Add other headers to umbrella (required for modules)
Rename boolean operators for Swift compatibility
Don't automatically build tests with main target
++xcconfigs
Inline EventBuffer behavior to reduce confusion
Keep Signals alive while observe() Disposable is
Use RACError codes for error generation
Define a single error domain with centralized codes
WIP spec for Schedulers
Spec for Disposables
Remove Event.map, as it's not used anywhere
Spec for Bag
Spec for Atomic
Add tryMap overload that deals with Results
Replace things with swiftz_core equivalents
Link swiftz-core (from maxpow4h/swiftz) into RAC
Flip scheduler disposal check
Refactor `try` in terms of `tryMap`
Replace single-char type names where confusing
Use more specific word than “stream” in bridging
Improve `identity` documentation
Clarify what `nil` means for mapAccumulate
Remove confusing “stream-of-streams” language
Clarify Producer, and its relationship to Signal
Infer RACEventType
Add & use case analysis over Optional type
Remove unnecessary temporaries in scheduler bridge
Rename _dummy… methods to _empty…
Make Consumer final
Rename Bag.add -> insert
Remove unnecessary Foundation imports
Allow Actions to be initialized with a Scheduler
s/observable/signal/
Replace explicit `get` on computed properties
Combine DeferrableScheduler & RepeatableScheduler
:fire: currentScheduler :fire:
Add TestScheduler
Move date scheduling into DeferrableScheduler type
Add RepeatableScheduler conformance to QueueScheduler
Add Signal.throttle
Add Signal.apply
Whoops, add Bag to iOS target too
Remove NSLockingExtensions
Replace removeObjectIdenticalTo with Bag type
Inline spinlock management into Atomic
Use structs for disposables to minimize thrashing
Replace removeDisposable with pruneDisposed
Stop observing notifications when Signal deallocs
Parameterize ScopedDisposable by innerDisposable
Retain a promise's action until it's been resolved
Add pipeWithInitialValue for controllable Signals
Clean up memory management in Signal
++Quick for Xcode 6 beta 3 support
Get rid of Objective-C tests
Merge remote-tracking branch 'origin/master' into swift-development
Refactor Signal into a final class—compose!
Refactor Producer as a struct
Refactor Signal to always require an initial value
ignoreNil -> unwrapOptionals, add forced variant
Signal.{takeWhile,filter} should return optionals
Get rid of some uses of Box
The Return to Compilability
Merge pull request #1401 from JaviSoto/patch-1
Referencing the right class in the RACScheduler method deprecation message.
Merge pull request #1398 from ReactiveCocoa/lift-with-signal-of-arguments
Add Producer.try and Producer.tryMap
Add Action.results and Action.errors
Add case analysis function for Event type
Add case analysis function for Result type
++xcconfigs
Turns out we don't need a bridging header, oops
Whoops, forgot to commit this workspace
I don't know what's real anymore
Lift with a signal of tuples of arguments.
Remove stub tests file generated by Xcode
Fix up submodule references
Get Quick tests sorta kinda working on OS X
WIP reboot project organization and workspace
Add modocache/Quick as a submodule
Add NSNotificationCenter extension as POC
Add NSURLSession extension as proof-of-concept
Bridge RACEvent <> Event
Nicer Action signatures with ExecutionSignal alias
Remove weird synchronous Promise constructor
Various naming, asynchrony, and docs improvements
Better names for bridging methods
Rename Enumerable/Enumerator to Producer/Consumer
Rename Observable to Signal
Allow Promises to resolve asynchronously
s/RxSwift/ReactiveCocoa/
Fully bridge RACScheduler and Scheduler
Merge remote-tracking branch 'origin/master' into swift-development
Add Action.toCommand
Remove useless `final` annotations in extensions
Add RACCommand.toAction
Add RACSignal.toPromise
Add RACSignal.toObservable
Add Observable.toInfiniteSignal
Add Action.swift to project and targets
Add Promise.toSignal
Restore bridging header to improve type safety
Move Observable.constant definition up a bit
Better docs for toSignal
Update bridging, move into implementation files
Merge jspahrsummers/RxSwift@15734da
Merge pull request #1393 from ReactiveCocoa/xctest
Only build the active architecture to test iOS
Move to specta/specta, specta/expecta, and XCTest
Categorize things into neat Xcode groups
Update xcconfigs and inherit more settings from it
Don't treat warnings as errors within test targets
Drop -Wall, inherit warning flags from xcconfigs
Update not/and/or operator names in tests
Fix GCD memory management in tests
Merge pull request #1388 from paulcbetts/patch-1
Point more directly to the "What to do" part for Slack
Merge pull request #1381
Rephrase note
Merge pull request #1387 from ReactiveCocoa/fix-scheduler-subclass-visibility
Fix visibility of RACScheduler+Subclass.h
Merge pull request #1385 from ReactiveCocoa/put-a-final-on-it
Make Refl into a struct
Mark properties as final too
Fix naming of private properties in AsyncBuffer
Mark all signal/sequence methods as final
Mark all Disposable implementations as final
Mark AsyncBuffer as final
Remove MutableBox, make Box final
Merge pull request #1384
Move more functions into Stream with TypeEquality
Minor stylistic fixes
Moved flatten and dematerialize inside stream
Rename Observable -> Signal
Fix up RACSignal boolean operators for Swift
Bridge RACSignal <> Observable
Import all of RAC into Swift
Merge pull request #1307 from ReactiveCocoa/bump-deployment
Bump deployment targets for Swift
Add Swift sources, with generated bridging header
Disable automatic unit test builds for now #yolo
Merge jspahrsummers/RxSwift@9f60589ceba10a6e594e618034ab41bfad465318
Introduce Slack chat room.
Merge pull request #1228 from jlawton/applicative
Merge pull request #1355 from axelarge/scheduler-subclassing
Merge pull request #1371 from mengxy/master
Fix Xcode 6 compile error
Make RACScheduler easier to subclass.
Merge pull request #1354 from ReactiveCocoa/fix-cocoapods-link-in-readme
Fix the link to the CocoaPods specs in the readme.
Fix a test naming
Fix signal names
Use -rac_description in NSFileHandle support
Use dot-syntax for -rac_description where the receiver type is not id
Revert "Use convenience constructor for NSMutableArray"
Merge pull request #1251 from TimurBK/master
Merge pull request #1344 from ReactiveCocoa/inspiration
about/related to
Merge branch 'master' of github.com:ReactiveCocoa/ReactiveCocoa
Inspired by, not is.
One more RACTuplePack()
RACTuplePack() handles nil to RACTupleNil.tupleNil conversion
Merge pull request #1340 from wiruzx/patch-1
Reconsider conditional expression on -take:
Fix typo
Style fixes + tests change.
Use +tupleWithObjectsFromArray: where passing `NO` to `convert`
Use RACTuplePack
Use pointer equality for RACTupleNil
Use convenience constructor for NSMutableArray
Optimize -take: in case the count is 0
Merge pull request #1328 from ReactiveCocoa/subscribeon-simple-subscription
Merge pull request #1278 from ikesyo/indexed-scan-aggregate
Simplify subscription on -subscribeOn:
Merge pull request #1313 from mattjgalloway/optimise_kvo
Fix code style
Fix for case where attributes is NULL
Flip to isObject
Add comment saying why we're using -map: over -reduceEach:
Use -map: rather than -reduceEach: to improve performance (no block trampoline)
Remove the -map: optimisation
Fix code style
Use an optimised version of map instead of re-implementing rac_valuesForKeyPath
Optimise addDeallocObserverToPropertyValue
Remove the requirement for the reduceEach on rac_valuesForKeyPath
Remove the extra RAC KVO keys
Merge pull request #1312 from ReactiveCocoa/update-build-scripts
Prefer finding schemes in our project file
Update to jspahrsummers/objc-build-scripts@a46f07e3fdf1cb0ec5f7f0fa5b2e8b870a8321d2
Merge pull request #1281 from mattjgalloway/kvo_bug
Merge pull request #1296 from ReactiveCocoa/fix-immediate-recursion
Flip recursive scheduling counter, avoid overflow
Fix recursive scheduling with the immediate scheduler.
Merge pull request #1294 from ikesyo/cleanup-imports
Clean up blank lines
Fix project name
Sort forward declarations
Use forward declaration
Sort imports
Remove unused imports
Fix code format
Rearrange and add comment
Better name
Add test to check that the right signal is fired if there's two instances of the same class that add a signal for the same selector
Store the pre-swizzled class as an associated object on the object
Add test that signalForSelector's then KVOs then signalForSelector's again
Find the instance method rather than the immediate one on the class
Add failing test for KVO bug
Add -aggregateWithStart:reduceWithIndex:
Steal documentation for -aggregate: from 3.0-development
Add -scanWithStart:reduceWithIndex:
Rename block parameter of -scanWithStart:reduce:
Merge pull request #1270 from ikesyo/backport-aggregate
Use dot syntax
Merge pull request #1271 from ikesyo/more-object-subscripting
Use dot syntax
Merge pull request #1272 from ikesyo/readme-third-person-singular-present
Merge pull request #1274 from ReactiveCocoa/libextobjc-update
++libextobjc
Minor code style fixes
Third person singular present for comments in README
Replace -objectAtIndex:, -objectForKey: with object subscripting
Minor code style fixes
Backport reimplementation of -aggregate: from 3.0-development
Merge pull request #1269 from eightytwo/feature/import-uirefreshcontrol
Add import for UIRefreshControl+RACCommandSupport
Style.
Remove RACTuple.tail.
Merge pull request #1249 from ReactiveCocoa/leak-or-false-positive
Updated header doc removing statement about nil on cancellation.
Tidy up and document control flow a little better.
Changed condition of second test to beNil().
Changed takeUntil: for imagePickerSignal.
Changed reduceEach to mapReplace, added blank line after cancelled signal, separated test for picker cancellation
Added signal for picker cancellation.
Merge pull request #1255 from ikesyo/fix-typos
Merge pull request #1242 from ReactiveCocoa/bind-fix
Style and import fixes.
Fix code style in README.md
Fix some typos
Add test case based on #1238
Removed dismiss code out of category, added note about dismiss responsibility to header.
Added test for functionality.
Updated project settings for header, added import to ReactiveCocoa.h.
Style fixes.
Added RAC support for UIImagePickerController.
Use a weak reference to recurse.
Remove explicit count variable
Test without unnecessary operators
Check for disposal before binding to new signals
Add failing test for #1238
Merge pull request #1231 from ReactiveCocoa/xcode-5.1-says-so
Remove redundant ONLY_ACTIVE_ARCH
Reword comment for RACSignal.reduceApply
Fix typo.
Assert at least 1 arg, reword method summary.
Update project per Xcode 5.1
Rename apply to reduceApply
One more reference to -ap
Comment that the apply block should return an object.
Fix references to -ap
Rename ap to apply. Don't use RACTuple.first.
Document precondition of RACTuple.tail
Basic test for RACSignal.ap
Add RACSignal.ap
Add RACTuple.tail
Merge pull request #1222 from 343max/syntaxFixes
fixed a missing semicolon in the Readme
Merge pull request #1203 from calebd/bug-fix-nsindexset
Code style.
Better solution to the empty index set problem.
Merge pull request #1204 from ReactiveCocoa/mac-static-lib-includes
Add a test for empty index sets.
Fix bug in NSIndexSet tests.
Merge pull request #1205 from camdez/master
Copied Mac .a headers include umbrella & EXT*.
Copy Mac .a headers into include/ReactiveCocoa.
Fix typo in README
Return nil if count is 0.
Merge pull request #1194 from ReactiveCocoa/flatten-dependencies
Merge pull request #1199 from ReactiveCocoa/format-private-headers-consistently
Cleaner paths for Mac specta & expecta.
Document the use of the workspace.
Well now I'm just being pedantic.
Make the formatting of private headers more consistent.
Merge pull request #1184 from ReactiveCocoa/retain-for-setKeyPathonObject
Reword comment for clarity?
Bump specta.
Document thread-unsafeness of -setKeyPath:onObject:
Another scheme to bump.
Mr. Clean, right behind you
Scheme version bump.
Test object lifetime for -setKeyPath:onObject:
Comment on objc_precise_lifetime attribute use
Add __strong for explicitness and defensisveness
Hook up the iOS tests too.
Pull the dependencies from the .xcworkspace.
Add a workspace for standalone development.
Merge pull request #1192 from ReactiveCocoa/xcode-5.1-project-changes
Revert "Conditionally use a weak reference in -setKeyPath:onObject:"
Xcode 5.1
Conditionally use a weak reference in -setKeyPath:onObject:
Retain object over -setValue:forKeyPath:
Merge pull request #1167 from ReactiveCocoa/racsignal-mergewith
Add tests for completion and error
Merge pull request #1169 from ReactiveCocoa/backtrace-stack-overflow
Revert "Autorelease the backtrace instead of precise lifetiming it"
Autorelease previous backtrace frames
Failing test for huge RACBacktrace list
Fix the name set for -merge:
Improve the documentation for -merge:
Rename to -merge:
Add -[RACSignal mergeWith:]
Merge pull request #1164 from ReactiveCocoa/xcconfigs-bump
Merge pull request #1165 from trevorsheridan/patch-1
Fix typo
++xcconfigs
Merge pull request #1156 from numen31337/master
minor correction
Merge pull request #1150 from ReactiveCocoa/fix-nsuserdefaults-test
Nicer wording.
Merge pull request #1128 from ReactiveCocoa/subscribers-retaining-disposed-disposables
Documented the asynchronicity of the NSUserDefaults channel.
Changed the expectation to asynchronous since the setting is asynchronous.
This isn't needed anymore.
Merge pull request #1143 from ReactiveCocoa/observe-deallocation-of-objects-conforming-to-protocol
Break out if the property is a protocol or a block.
Observe deallocation of `id<Protocol>` properties.
Merge pull request #1140 from ReactiveCocoa/better-async-response-check
Consider a nil NSURLResponse to be an error
Merge pull request #1138 from chrissloey/patch-1
2014, yo
Merge pull request #1133 from ReactiveCocoa/better-rendering-fix
Isolated multicasted subscription disposal test because ARC.
Removed some tests that were testing implementation details.
Fixed some tests.
Removed RACActiveSignals checking in RACDynamicSignal.
Better rendering fix.
Merge pull request #1129 from ReactiveCocoa/fix-markdown-misrendering
Fix the italics and fixed width text being nested wrong when rendered by Github.
Fixed RACSubject and RACSubscriber retaining disposed disposables.
Abuse the fact -didSubscribeWithDisposable: is only ever passed compound disposables to change the signature.
Added test for subscribers retaining disposed disposables.
Merge pull request #1114 from ReactiveCocoa/signal-naming-envvar
Update instrumentation README
Use sel_getName in signal naming to avoid allocations
Vary -rac_description behavior based on the envvar too
Change RAC_DEBUG_SIGNAL_NAMES into an envvar
Merge pull request #1098 from drhr/master
Cleaned up rac_textSignal clearsOnBeginEditing test
Merge pull request #1103 from ReactiveCocoa/jspahrsummers-patch-1
Remove old demo app links
Added test case for -rac_textSignal, adjusted formatting
Updated comments & channel events for the previous change
-rac_textSignal should accommodate IB 'clear when editing begins'
Merge pull request #1095 from AshFurrow/ashfurrow-links
Added more info links.
Non-collaborators can't apply labels to issues
Merge pull request #1086 from ReactiveCocoa/debug-signal-names
Update the doc.
Merge pull request #1084 from JaviSoto/feature-xcode51-clang-error
Guard signal names with RAC_DEBUG_SIGNAL_NAMES.
Updated xcconfigs submodule to fix clang error on Xcode 5.1 due to deprecated linker flag (Fixes #1050)
Merge pull request #1082 from ReactiveCocoa/ask-us-questions
Mention asking questions in the README
Merge pull request #1078 from ReactiveCocoa/optimise-tests
Revert "Don’t optimise the tests"
Merge pull request #1077 from ReactiveCocoa/double-dynamic-all-the-way
Fix swizzled implementation of `-methodSignatureForSelector:`
Actually start observing
Don’t optimise the tests
Merge pull request #1076 from ReactiveCocoa/fix-methodsignatureforselector
Assert that selector isn't NULL.
Actually pass the argument along.
Merge pull request #1073 from ReactiveCocoa/reuse-dealloc-signal
Merge pull request #1072 from ReactiveCocoa/remove-disposables
Just use _cmd.
Don't need to weakify/strongify.
Re-use the same dealloc signal.
Revert "Re-use the same dealloc signal."
Re-use the same dealloc signal.
Remove the disposable from self and the observer when disposed of.
Merge pull request #1058 from ReactiveCocoa/signal-selector-class
Merge pull request #1070 from ReactiveCocoa/normal-command-kvo
Remove RACCommand.observationInfo override
Fixed some things.
Merge pull request #1066 from alexfish/fix-dynamic-signal-header
Move `objc_msgSendSuper` cast to it’s own line
Clarify comments around dynamically implemented `-methodSignatureForSelector:`
Fixing RACDynamicSignal.h import
Merge pull request #1061 from Breek/remove_config_h
Remove inclusion of config.h
Implement a generic version of `-methodSignatureForSelector:`
Swizzle -methodSignatureForSelector: to claim we implement anything.
Test for the class reporting.
Hide the fact that we've been dynamically subclassed.
Merge pull request #1045 from ReactiveCocoa/skip-nil-flattened-streams
Allow nil inner signals when flattening
Merge pull request #1040 from ikesyo/uitableviewheaderfooterview
Remove unnecessary property/implementation
NSStringFromClass() instead of +description
Use dot notation
Merge pull request #1011
Style fix
Merge pull request #1039 from ikesyo/more-delayed-schedule
Add test for UITableViewHeaderFooterView+RACSignalSupport
Extract TestTableViewController
Implement -[UITableViewHeaderFooterView rac_prepareForReuseSignal]
Fix indentation
Use -afterDelay:schedule: in -timeout:onScheduler:
Merge pull request #1026 from ReactiveCocoa/kvo-dealloc-race
Merge branch 'master' into kvo-dealloc-race
Merge pull request #1031 from ReactiveCocoa/pr/1019
Various style fixes
Simplify RACIndexSetSequence with derived variables
Remove umbrella import from RACIndexSetSequence
Make NSIndexSet+RACSequenceAdditions public
Merge pull request #1028 from ReactiveCocoa/user-defaults-improvements
Use objc_precise_lifetime
Small modifications according to review notes
Simplify the documentation
Turn -rac_willDeallocSignal into a replaying signal
Documentation added. Public header added to common headers list.
Refactoring: buffer copying optimized. Formatting fixed.
Add a third slash for Xcode
Clarify that the terminal sends a value upon subscription
Test that the terminal sends an initial value
Complete when NSUserDefaults deallocates
Get rid of the beforeAll block
Make NSString properties copy
Optimize like hell in test builds (to exercise races)
Explain why we lock the whole scope
Strongify immediately upon reading
Skip subscription in -takeUntil: upon immediate completion
Manually control object lifetime in property subscription
Failing test (under Release) for KVOing zombies
Merge pull request #1005
Remove extraneous newline
Merge pull request #1022 from ReactiveCocoa/fix-user-defaults-header-more
Make NSUserDefaults+RACSupport.h more public
Merge pull request #1021 from ReactiveCocoa/fix-user-defaults-header
Make NSUserDefaults+RACSupport.h public
Merge pull request #1018 from ReactiveCocoa/user-defaults
Add NSUserDefaults+RACSupport.h to ReactiveCocoa.h
Expect BOOLs, not NSNumbers
Merge pull request #1010 from ikesyo/swizzling-use-selector-var
Style: spaces around BOOL
NSIndexSet sequence additions TestSpec fixed according to Notes
Reive notes taken into account, small odds fixed
Don't send signals back when sent from the other side
Remove unused variable
RACSequence addition added to NSIndexSet
Add -[NSUserDefaults rac_channelTerminalForKey:]
Replaced interval+take1+subscribeNext with afterDelay
Merge pull request #1006 from ReactiveCocoa/copy-3.0-flatten
Use `SEL` variable in RACSwizzleRespondsToSelector
Cherry-pick -flatten: from 3.0
Revert "Another attempt to fix #988"
Added Coursera class
Another attempt to fix #988
Failing testcase for #988
Merge pull request #989 from corristo/flatten-last-sync-signal-bug
Typo
Merge pull request #1 from ReactiveCocoa/flatten-last-sync-signal-bug
Fixed -flatten: to not deallocate dequeueAndSubscribeIfAllowed while it's running.
Code style & naming
Failing test case for #988, sometimes crashes with EXC_BAD_ACCESS
Merge pull request #982 from ReactiveCocoa/remove-traces-of-racextensions
Merge pull request #978 from ReactiveCocoa/fix-bool-lifting
Removed traces of RACExtensions since they're part of the core framework now.
Remove test that boxes _Bool into NSValue
++expecta/specta to arm64 branches
Replace 2-space indentation with tabs in the README
Merge pull request #957 from ReactiveCocoa/cutoff
Merge pull request #962 from ReactiveCocoa/take-until-replacement-redux
Clarified docs.
Expanded the baseline test a bit.
Implement -takeUntilReplacement: without subjects
Merge pull request #961 from ReactiveCocoa/readme-fixes
need a ^
No argument to subscribeCompleted.
Remove unnecessary takeUntil:
lol removeObserver
Changed -takeUntilReplacement: to forward errors from the receiver.
use self void * reference.
Renamed -cutOff: to -takeUntilReplacement:.
Style++
2-space tabs.
Such whitespace.
More correct RAC example.
More correct non-RAC example boilerplate .
sequenceNext is now then.
Fixed cut off signal not being disposed as soon as the receiver sends a value.
Added some disposal test.
No need to save this disposable since subjects aren't kept alive by subscribers.
Renamed the disposables so it's clearer what they refer to.
Got rid of the replay subject.
Hopefully clearer phrasing.
Changed -cutOff: implementation.
Added -cutOff: implementation.
Added tests for -cutOff:.
Added declaration of -cutOff:.
Merge pull request #953 from derrh/master
Bump for jspahrsummers/libextobjc#51
Promotes UICollectionViewCell category to UICollectionReusableView
Merge pull request #941 from ReactiveCocoa/nil-bound-streams
++xcconfigs for arm64 support
Merge pull request #948 from ReactiveCocoa/bufferwithtime-nil-values
Added dedicated tests for NSNull and nil values in -bufferWithTime:scheduler:.
Fixed -bufferWithTime:scheduler: not supporting nil values.
Test for a stream generically (not just a signal)
Merge branch 'master' into nil-bound-streams
Merge pull request #942 from ReactiveCocoa/ci-lulz
Update to jspahrsummers/objc-build-scripts@006869577c9f5af9349ab2e4c3b6691199ec1e97
Stop `cd`ing around in cibuild, messes things up
Update to jspahrsummers/objc-build-scripts@449d8fac8097dc236d6c9a46e353b9293249dc13
Assert that the result of a -flattenMap: block isn't nil
Merge pull request #938 from ReactiveCocoa/xcconfigs++
xcconfigs++
Merge pull request #926 from ikesyo/fix-respondstoselector-replacement
Remove indent at blank lines
Improve evaluation order
Revert "Improve evaluation order"
Merge pull request #933 from ReactiveCocoa/xctool
Update objc-build-scripts
Merge pull request #932 from brow/sample_edge_case
test behavior of -sample: before receiver sends
Improve evaluation order
Remove exception test
Fix typo
Merge pull request #922 from brow/synchronous_disable
Update objc-build-scripts
++xcconfigs
watspace
eh, style
use -take: instead of -first
Merge pull request #927 from ReactiveCocoa/fix-xcodebuild
Remove RunUnitTests scripts
++xcconfigs for arm64 support
Replacing implementation of -respondsToSelector: should validate if the instance has a signal for the selector
Add failing test for -respondsToSelector: with -rac_signalForSelector:
Merge pull request #923 from drhr/master
Added spaces to README typo fix
Fixed typo in example.
move & rename
sample enabledSignal synchronously at init time
Merge pull request #905 from egrim/patch-1
Correct example output in BasicOperators.md
Merge pull request #895 from ReactiveCocoa/remove-stack-depth
Merge pull request #891 from ReactiveCocoa/kvo-respond-to-selector
More detail in -respondsToSelector: comment
Make use of rac_getImmediateInstanceMethod
Merge in ext_getImmediateInstanceMethod
Added test for NSController support.
Describe setup of KVO -respondsToSelector: test
Use -publish/-connect to cause subscription side-effects
s/is/may be
Fix misplaced tab
Letters, how do they work?
u before a, except after c
Revert "Add failing test for broken KVO implementations."
Simplify the feedback ignoring logic.
Remove stack depth counter.
Comment on the need to implement -respondsToSelector:
Make subscription side effects explicit
Redefine -respondsTo… for -rac_signalFor… on KVO'd target
Test -rac_signalForSelector: support for -respondToSelector:
Add failing test for broken KVO implementations.
Merge pull request #888 from ansel1/master
Use tabs not spaces
More efficient implementation of objectPassingTest and any on RACSequence.
Merge pull request #873 from ReactiveCocoa/refresh-control-command
Simplify signal composition for refreshing
Verify -endRefreshing is called on error
Merge pull request #880 from ReactiveCocoa/false-leak-fix
Merge pull request #879 from ReactiveCocoa/add-nil-disposable
Whoops, release the _existing_ disposable on return
Use the same condition for retain _and_ release
Refactor ternaries in -swapInDisposable:
Remove nil checks before invoking -addDisposable:
Allow nil for -addDisposable:
Revert "Break retain cycle"
Break retain cycle
Verify -endRefreshing is called
Eliminate nested subscription
Publicize UIRefreshControl+RACCommandSupport.h
Add UIKit tests for UIRefreshControl
Add RACControlCommandExamples to UIKit tests
Add command support for UIRefreshControl
Merge pull request #856 from ReactiveCocoa/multicast-connect-race
Merge pull request #855
Fix Cocoa naming convention in example
Merge pull request #861 from ReactiveCocoa/multicast-connect-race-test
Spaces only in comments
Error is initialised to no
each value -> each of the receiver's values
Grammar fix for tryBlock documentation
Consistency of verb usage for error events
Parity between parameter naming in tryMap documentation
Indenting comments in a similar way to other comments
Me fail english, that's unpossible
Merge pull request #867 from ReactiveCocoa/stochastic-analyzer
Merge pull request #865 from ReactiveCocoa/bind-stopping
s/assumed/used
Move `hasConnected` property to an instance variable
Prevent static analyzer false positive
Same tests, reorganized for slightly better coverage
Adjusting the try/tryMap documentation
Where did these spaces come from?
Test -bind: stopping more thoroughly
Dispose of source signal when -bind: is stopped
Remove original coarser demonstration test
Test that stopping -bind: disposes source signal
Return back to unconditional signalling
Merge pull request #864 from ReactiveCocoa/disposable-leak-fix
Merge pull request #859 from ReactiveCocoa/serial-disposable-race
Test for +createSignal: disposing of inner subscriptions
Test that RACSerialDisposable.disposable is released
Add comments
Merge branch 'multicast-connect-race' of github.com:ReactiveCocoa/ReactiveCocoa into multicast-connect-race-test
Revert "Remove atomic flag"
Use `CFBridgingRetain` in place of a cast and `CFRetain`
Improve documentation around the `hasConnected` variable
Remove Complete state lock
errorPtr is a more descriptive parameter that does not shadow error value
Documenting try/tryMap. Assertions for nil args
Error is expressed by the mapBlock returning nil
Add test showing case where -bind: doesn't stop
Fix RACSerialDisposable leaking its set disposable upon dealloc
Dispose of RACSubscriber.disposable regardless of whether a block is set
Ensure passthrough subs dispose of given disposables
Clear out RACSubscriber's blocks on disposal
Remove atomic flag
Semaphores revealed
Rearrange atomic checks to remove race
Test connect race with dispatch group and atomic flag
Merge pull request #858 from ReactiveCocoa/faster-primitive-signals
Use singletons for +return:nil and +return:RACUnit
Turn RACEmptySignal into a singleton in Release builds
Fix ownership race condition when swapping disposables
Replace the semaphore test with a condition lock
Swap `willNot` with `notTo` because the semaphore prior waits
Removed __autoreleasing from tests
Only build descriptions for +error: and +return: in DEBUG
Added test for completion, fixed whitespace/indentation
Import OSAtomic.h in RACDynamicSignal
lmao if NSError actually supports <NSCopying>
Move +createSignal: behavior into RACDynamicSignal
Move +return: behavior into RACReturnSignal
Move +empty behavior into RACEmptySignal
Move +error: behavior into a private subclass
Documentation wording
tryMap checks for nil return and error set byref
Style changes & Comparison against value rather than error
Simplify the race condition test
Remove the lock when connecting
Test case names for try: tryMap:
Added try: & tryMap: Removed passWhen
Add missing import
Fix race condition when connecting to a multicast connection
Add test that `-[RACMulticastConnection connect]` isn’t racy
Added passWhen:sendError:
Merge pull request #846
Minor style tweaks
Modifications as requested by jspahrsummers:
- Removed UICollectionViewCell+RACSignalSupport.h from ReactiveCocoa.h because this category applies to iOS >= 6.0 and the apparent minimum version of iOS supported by ReactiveCocoa is iOS >= 5.0. - Adjusted UICollectionViewCellRACSupportSpec.m to account for known cases where prepareForReuse is never called in some simulator/device configurations.
Add UICollectionViewCell.rac_prepareForReuseSignal
Merge pull request #841 from ReactiveCocoa/racify-url-connection
Make the connection signal cold instead
Add RACified NSURLConnection loading category
Add RACCompoundDisposableProvider.d to Mac static library target
Merge pull request #829 from ReactiveCocoa/disposable-optimization
Merge pull request #830 from ReactiveCocoa/subscription-optimization
Comment nitpick :trollface:
Fix stillHasSubscribers check after removal
Go back to an array, but start the capacity at 1
Merge remote-tracking branch 'origin/master' into subscription-optimization
Add another disposable to +compoundDisposable… test
Merge pull request #835 from ReactiveCocoa/guidelines-fixes
Merge pull request #819 from ReactiveCocoa/mac-static-library
Build EXTRuntimeExtensions into static library too
Merge remote-tracking branch 'origin/master' into mac-static-library
Fix link to Parallelizing Independent Work in README
Replace reference to RACBind with RACChannelTo
Fix OOB array access in -initWithDisposables:
Optimize disposable usage in base signal operators
Remove -didSubscribeWithDisposable: for passthrough
Refactor _subscribers into a singly linked list
Inline 2 disposables into RACCompoundDisposables
Instruments template for compound disposable growth
Add DTrace probes for compound disposable growth
Merge pull request #822 from ReactiveCocoa/document-initially-order
Use two -initially:'s in example
Merge pull request #823 from jonsterling/generalize-distinctUntilChanged
Now with 0.1% better succinctness
Slight rewording of example comment
Add -initially: example and try to be less word jumbly
Generalized -distinctUntilChanged to RACStream
Document -initially: order
Add all headers to ReactiveCocoa-Mac
Add ReactiveCocoa-Mac to script/cibuild
Add ReactiveCocoa-Mac static library target
Merge pull request #817 from ReactiveCocoa/graduate-racextensions
Header Shit Work
Add ex-RACExtensions to ReactiveCocoa.h
Sort Foundation Support group
mv RACExtensions/* ReactiveCocoaFramework/ReactiveCocoa
Make RACExtension headers public
Add RACExtensions to product targets
Remove RACExtensions from test targets
Merge pull request #816 from jlawton/RACObserveWithProtocol
Merge pull request #815 from ReactiveCocoa/name-signal-for-selector
Fix RACObserve with protocols.
Supply name to signal for selector
Merge pull request #791 from ReactiveCocoa/dtrace-support
Remove NSObject * type
Merge branch 'master' into dtrace-support
Merge pull request #803 from ReactiveCocoa/test-scheme-configuration
Merge pull request #806 from ReactiveCocoa/readme-logout-example
Set a better example
Merge pull request #812 from ReactiveCocoa/triple-slash-documentation
Merge pull request #813 from ReactiveCocoa/retract-racdelegateproxy
Retract RACDelegateProxy from public
What's one extra slash?
Merge pull request #787 from ReactiveCocoa/selector-signal-docs
Show RAC log out in README example
Use Test configuration for Test scheme
Simplify the return type check. Since we check for unions explicitly, we don't have to worry about unions containing structs or arrays.
Switch strcmp for strstr in case the type signature has frame size and offsets.
Removed use of NSMethodSignature to get the return type.
Removed function wrapper macro.
Removed tests.
Cleaned up the check and fixed the comment about missing return type encoding.
Added check for arrays, unions, complex and vector types.
Added note about C array or unions as arguments.
Added check for struct return types.
Changed the tests to expect exceptions.
Rename methods in the selector signal test protocol so they don't clash with those in RACTestObject.
Rename some methods in RACTestObject for conformity.
Added more exotic return type methods to RACTestObject.
Remove unnecessary arguments.
Merge remote-tracking branch 'origin/signal-for-selector-stret' into selector-signal-docs
Extend not supported types.
ffffuuuuu
s/str/original
Collapse all whitespace at once
Merge pull request #790 from ReactiveCocoa/bool-type-encoding
Override rac_description for basic value classes
Omit "name:" string from signal descriptions
Combine signal name and address
Better descriptions with signal and subscriber addresses
Do a better job of cleaning up whitespace
Rename folder and add a README
Add Instruments template for tracking signal events
Get legit
Add DTrace probes for signal events
Playing around with simple DTrace probes
Syntax how does it work
Use @encode for blocks too
Support block arguments and return types
Add fallback cases for BOOL, when it differs from char
Use @encode directives instead of hardcoding
Added selector signal stret assertion.
No structs rather than scalar.
Selector signal documentation clarification.
Merge pull request #778 from codecaffeine/master
Merge pull request #775 from ReactiveCocoa/fix-dealloc-swizzling
Fix unused include
Added tests for signals for struct returning protocol selectors.
Added tests for signals for struct returning selectors.
Revert "Bring in rac_getImmediateInstanceMethod from libextobjc"
Merge pull request #782 from rabovik/fix-dealloc-swizzling
Dealloc swizzling without recursion and rac_getImmediateInstanceMethod.
Making the title shorter
Adding a link to Escape from Callback Hell
Merge pull request #776 from rabovik/fix-dealloc-swizzling
class_replaceMethod is redundant, -dealloc is already replaced with new implementation
Don't use deallocMethod in the block (less confusing)
Only save the original -dealloc if from the exact same class
Bring in rac_getImmediateInstanceMethod from libextobjc
Defensive test for -dealloc only being called once
Add failing unit test for #774
Add travis config.
Merge pull request #764 from kkazuo/more-import
import UIAlertView+RACSignalSupport.h in ReactiveCocoa.h
Merge pull request #763 from ShadoFlameX/fix_long_int_casting
Fixing compilation warning for missing long int casting.
Merge pull request #761 from ReactiveCocoa/lifting-polish
Avoid custom property setter name
Style fix
Fold arguments accessors into property declaration
Remove unused imports
Supply names to lift signals
Indicate signal type in variable names
Inline lifting signal
Change -rac_allArguments to -rac_argumentsTuple
Add -rac_setArgumentsTuple:
Update lifting documentation
Merge pull request #618 from ReactiveCocoa/2.0-development
Merge pull request #759 from ReactiveCocoa/autoconnect-and-replay-changes
Merge pull request #757 from ReactiveCocoa/short-switch-redux
Refactor -autoconnect without private APIs
Refactor -replayLazily to never dispose
Add tests for -replayLazily
Save both disposables
Merge pull request #758 from ReactiveCocoa/fix-command-enabled-completion
Complete any input enabledSignal on dealloc
Test RACCommand.enabled always completes on dealloc
Refactor -switchToLatest to actually be cold
Add failing test verifying that -switchToLatest is cold
Revert "Revert "Merge pull request #754 from ReactiveCocoa/short-switchToLatest""
Revert "Merge pull request #754 from ReactiveCocoa/short-switchToLatest"
Merge branch 'master' into 2.0-development
Merge pull request #750 from ReactiveCocoa/text-view-delegate-warning
Merge pull request #749 from ReactiveCocoa/multicast-command-executions
Document when RACUnderlyingCommandErrorKey is present
Add comment about receiving errors after executions
Don't save immediateExecuting into a property
Slightly better example name
Merge pull request #754 from ReactiveCocoa/short-switchToLatest
Comment to explain completion nuance
Merge pull request #755 from ReactiveCocoa/fix-backtrace-overflow
Fix false idempotents
Types are good
Merge pull request #751 from lukeredpath/bug/fix-retain-cycle-in-delegate-proxy
Prefer dot-syntax over square-bracket syntax.
Multicast receiver to maintain single subscription behavior
Autorelease the backtrace instead of precise lifetiming it
Reimplement -switchToLatest using existing operators
Avoid retain cycles between RACDelegateProxy and RACEventTrampoline.
omg caps i'm so ashamed
Fix synchronous expectation for [control isEnabled]
Restore multicasting of newActiveExecutionSignals
Add the originating RACCommand to error.userInfo
Refactor RACCommand to deliver normally
Merge branch 'master' into 2.0-development
Document -rac_signalForDelegateMethod: memory mgmt
Update documentation (RACCommand isn't a signal)
Fix executing/errors not always arriving on main thread
Multicast `rawExecutionSignals` for performance
Merge pull request #733 from ReactiveCocoa/command-replacement
Try a clearer `reentrantMainThreadScheduler` comment
Merge pull request #748 from ikesyo/fix-signalforselector-on-previously-kvo'd-receiver
Update README examples
Clean up unit tests, add more for new functionality
Restore and deprecate -executeCommand:
Rewrite CHANGELOG sections about commands
Restore automatic catching of inner errors
Declare 1.x RACCommand methods as unavailable
Factor out command control.rac_command tests
Fix disposal happening too late in NSControl.rac_command
Remove unneeded RACSignal.h import
Fix up unit tests and implementation bugs
Refactor existing unit tests for new RACCommand interface
Create executing signal before enabled signal
Ensure that executionSignals terminates on the main thread
Update observers of canExecute
Refactor RACCommand implementation
Merge branch '2.0-development' into command-replacement
Back to the original variable name
Revert "Style fix"
Style fix
Unify tests for KVO'd receiver
Fix -rac_signalForSelector: doesn't invoke original method on previously KVO'd receiver
Add failing test
Merge pull request #745 from BluMenlo/2.0-development
Fix RACSignalSupport to reset delegate after dynamically adding methods
Merge pull request #686 from ReactiveCocoa/uikit-bindings
Style fix.
Merge branch '2.0-development' into uikit-bindings
Merge pull request #741 from ReactiveCocoa/backtrace-lifetime-fix
Dispose of the event signal when the channel terminates.
Updated change log with new method names.
Stricter types for nil values.
Don't use GCD's QSS destructor
Remove overridden -dealloc method
nil out the previous backtrace when a backtrace is deallocated
Xcode 5dacted
Use NSInvocation instead of diagnostic ignoring pragmas.
Refactored method docs and renamed the methods to highlight the fact they return new channels every time.
Remove animated setting from -rac_channelForControlEvents:key:nilValue:.
Refactor -rac_channelForControlEvents:key:nilValue: to use lifting.
Moved -rac_channelForControlEvents:key:nilValue: to a private header.
Move inner signal operators back to RACCommand
Merge pull request #735 from ReactiveCocoa/active-signals-optimization
Fix the RACViewChannelExampleSetViewValueBlock.
Add RACViewChannelExamples to UIControlRACSupportSpec.
Why do the strongify macros silence the non-void return function exits without a return warning anyway.
Changed RACChannelViewExamples to use numeric properties instead of string properties.
Removed unused headers.
Moved all NSTextField tests to RACViewChannelExamples.
Use a CFSet instead of NSSet for RACActiveSignals
Turn RACCommand into an NSObject
Remove <RACSubscriber> from RACCommand
Add operators to manipulate inner signals
Refactor RACCommand interface to be more FRPy
Merge branch '2.0-development' into uikit-bindings
Merge pull request #729 from ReactiveCocoa/remove-fishhook
Revert "Merge pull request #709 from ReactiveCocoa/add-fishhook"
Merge remote-tracking branch 'origin/master' into 2.0-development
Merge pull request #724 from ReactiveCocoa/merge-fast-enumeration-bug
Copy the input argument to +merge:
Add failing test from #723
Updated change log section about UIKit bindings.
Remove change log section about RACPropertySubject class tree change.
Merge branch '2.0-development' into uikit-bindings
Revert "Merge control events signal with KVO signal."
Revert "Update comments to reflect the KVO merge."
Merge pull request #695 from ReactiveCocoa/refactor-properties-and-bindings
More documentation "clarifications"
Merge remote-tracking branch 'origin/2.0-development' into refactor-properties-and-bindings
Merge pull request #720 from js/fix-liftselector-doc
Merge pull request #719 from ReactiveCocoa/uikit-test-archs
Fix rac_liftSelector:withSignals: documentation to nil terminate
Enable ONLY_ACTIVE_ARCH for Debug/Test on UIKit host
Merge pull request #716 from ReactiveCocoa/test-scheduler
Merge branch 'master' into 2.0-development
++specta and expecta
Merge branch 'master' into 2.0-development
Merge pull request #717 from ReactiveCocoa/fold-left-bug
Fix RACSequence enumeration restarting
Add minimal failing test for #714
Merge pull request #715 from ReactiveCocoa/catchy
Add PR link into changelog
CHANGELOG (needs update with PR link)
Refactor other unit tests to use RACTestScheduler
Implementation and tests for RACTestScheduler
Fix outdated description for -afterDelay:schedule:
Fix return types for RACScheduler class methods
Assert that -catch: block returns non-nil
Use RACSerialDisposable for -catch: subscription
Fix -catch: disposable test
Spell good
Use a capacity of 0 for replaying a channel's leadingSubject
Use a real value for RACReplaySubjectUnlimitedCapacity
Flip example sides, clarify arrows
Fix return type mentioned in the CHANGELOG
Merge pull request #713 from ReactiveCocoa/flatten-crash
Test disposal after -catch:
Add basic tests for -catch:
Reimplement -catch: without subscribeForever
Minor grammar fix in changelog
Update and reorganize CHANGELOG
-rac_bind: > -rac_channelToBinding:
RACBind > RACChannelTo
"binding" > "channel"
"endpoint" > "terminal"
Merge branch '2.0-development' into refactor-properties-and-bindings
Revert "Disable warnings about repeated __weak usage in tests"
Remove redundant recursive synchronization in completeSignal()
++xcconfigs (via libextobjc)
Refactor -flatten: to fix crash and use compound disposal
Reproducible failing test for #711
Disable warnings about repeated __weak usage in tests
Merge pull request #712 from ReactiveCocoa/fix-dangling-points
Clarify type of block argument in shared examples
test that shit
strongify only after we've checked the dealloc flag disposable
Rename endpoints (yet again) to "leading" and "following"
Merge remote-tracking branch 'origin/2.0-development' into refactor-properties-and-bindings
Merge pull request #709 from ReactiveCocoa/add-fishhook
Remove RACBacktrace+Private.h from targets
Add shared examples for all view bindings
Document which bindings start with what values
Merge remote-tracking branch 'origin/2.0-development' into add-fishhook
Remove RACBacktrace+Private.h where unused
Call dispatch_ functions directly in RACBacktraceSpec
Move rac_dispatch_ functions into RACBacktrace+Private.h
Add documentation link to facebook/fishhook
Merge pull request #710 from ReactiveCocoa/fix-cstring-lifting-test
Fix C string lifting test.
Disable static analyzer for offending false positives on iOS
Prefix fishhook API with rac_ (subtree redux)
Disable fishhook compiler warnings
Subtree fishhook
Remove local fishhook copy
Update backtrace documentation for iOS
Use C99 designated initializers for fishhook rebindings
Test for iOS builds using __IPHONE_OS_VERSION_MIN_REQUIRED
Cast away signed comparison warnings
Cast away signed conversion warnings
Integrate fishhook into RACBacktrace
Enable NSOperationQueue backtrace test on iOS
Use -Wno-sign-compare and -Wno-sign-conversion for fishhook.c
Prefix fishhook API with rac_
Enable fishhook only for DEBUG
Add fishhook.c
Update comments to reflect the KVO merge.
Merge control events signal with KVO signal.
Use rac_setArgument:atIndex:.
Replace rumors/facts terminology with left/right
Merge remote-tracking branch 'origin/2.0-development' into refactor-properties-and-bindings
Merge pull request #696 from ReactiveCocoa/ractypeparsing-unsupported-types
Style fixes.
Use autoreleasing NSData to free the buffer.
Style fixes.
Add some tests for primitive return types boxing.
Note that RACBindingEndpoint shouldn't be instantiated
Refactor unit tests
Refactor RACKVOBinding and RACAppKitBindings
Refactor RACBinding interface with endpoints yet again
Merge branch '2.0-development' into ractypeparsing-unsupported-types
Merge remote-tracking branch 'origin/2.0-development' into refactor-properties-and-bindings
Merge pull request #707 from ReactiveCocoa/uiactionsheet-tests
Test by invoking UIActionSheetDelegate method directly
Revert "Remove UIActionSheetRACSupportSpec"
Merge pull request #705 from ReactiveCocoa/prepare-for-reuse-signal
Merge remote-tracking branch 'origin/2.0-development' into prepare-for-reuse-signal
Unit tests for UITableViewCell+RACSignalSupport
Remove UIActionSheetRACSupportSpec
Fix building and linking of the UIKit test host
Merge pull request #704 from ReactiveCocoa/serial-disposable
Remove erroneous disposal in -dealloc
Merge branch 'master' into 2.0-development
Merge pull request #699 from ReactiveCocoa/optimizations
Merge pull request #703 from ReactiveCocoa/lock-free-active-signals
Add note about char * causing a retain on all arguments.
Argh missing imports
Forward-declare RACSignal
Fix incorrect sample in -rac_signalForSelector: docs
Add UITableViewCell.rac_prepareForReuseSignal
Actually, these don't really need to be atomic swaps
Refactor __block disposables to be RACSerialDisposables
Add RACSerialDisposable
Merge pull request #676 from lawrencelomax/reduce-boolean
Remove call to `-retainArguments` since we don't support arrays anymore.
Add test for pointer lifting.
Remove obsolete comment
Merge remote-tracking branch 'origin/2.0-development' into refactor-properties-and-bindings
Fix two-way binding in RACKVOBinding
Extend RACKVOBinding lifetime as long as the KVO
Refactor unit tests
Whitespace in -and/-or implementation and tests
Add back notes pointing out arrays and unions are not supported.
Refactor NSObject+RACAppKitBindings
Reinstate comment about signal lifetime
Move endpoints' logic into RACBinding directly
Document thread requirements for RACActiveSignals
Remove temporary arrays and modify RACActiveSignals directly
Manage active signals in a lock-free way
Increase the size of the test struct to make sure it doesn't just work for small structs.
Merge pull request #689 from ReactiveCocoa/remove-switch-without-default
@joshaber can't handle the power of
Factor out +zip: and +combineLatest: logic into 1 method
Merge branch '2.0-development' into remove-switch-without-default
Merge pull request #685 from ReactiveCocoa/racsignal-initially
Add test for structs.
Add back test for lifting const char *.
Switch the dynamically allocated buffers with local variables.
Add vertical whitespace.
Removed section about char * lifting from change log.
Revert "Updated change log."
Avoid -tupleByAddingObject: in zip/combine
Don't allocate RACSignal->_subscribers until needed
Refactor -invalidateGlobalRefIfNoNewSubscribersShowUp
Boxing is implied, all signals return objects
Pluralisation for -and/-or asserts
Assert wording consistency for -and/-or
Improved language in header comments for -and/-or
Merge pull request #690 from ReactiveCocoa/update-documentation
Added Assertion for 0-Tuple for -and, -or
Updated change log.
Add back string support to RACTypeParsing.
Added back char pointer lifting tests.
Remove reference to type limitations.
Update -rac_returnValue: to support arbitrary types.
Update -rac_argumentAtIndex: to support arbitrary types.
Update -rac_setArgument:atIndex: to support arbitrary types.
Update change log with the correct method.
Fix additional typo
RACObservablePropertySubject -> RACKVOBinding
Refactor RACBinding as endpoints with signals/subscribers
Remove RACPropertySubject
Removing compiler-inferred return types
Punctuating comments
Fix typo in operation name string
Merge branch '2.0-development' into uikit-bindings
Merge pull request #694 from ReactiveCocoa/fix-backtrace-collection
Import RACBacktrace.h in files using asynchronous GCD
Restore macros that redefine GCD functions using rac_
Make a copy of the key path where it could change.
Update -rac_bindingForControlEvents:key:primitive:nilValue: to use properties instead of the old initializer.
Added note about RACPropertySubject to change log.
Make RACPropertySubject a subclass of RACBinding to get rid of duplication, get rid of the hacky +alloc without -init.
Rename the backing subject and document it clearly.
Add commas to improve readability.
Reindent the complex signal.
Use an empty string as the nilValue for UITextField.
Added UIKit bindings to the change log.
Merge branch '2.0-development' into uikit-bindings
Use -set...:animated: methods where available.
Added binding to UIStepper.
Added binding to UIDatePicker.
Added binding to UISwitch.
Added binding to UISegmentedControl.
Added binding to UISlider.
Fix broken RACBacktrace link in Framework Overview
Merge pull request #591 from henrikhodne/hh-uialertview-raccommandsupport
Refactor -initially: to use +defer: internally
Merge pull request #680 from ReactiveCocoa/cleaner-backtrace-retrieval
Shout out to RACBacktrace in the Framework Overview
Clarify that RAC will use the rac_ GCD functions
Merge branch '2.0-development' into cleaner-backtrace-retrieval
Update DesignGuidelines.md
Update BasicOperators.md
Update MemoryManagement.md
Update README for 2.0 deprecations
Fix duplicate subscriptions in tests
Match nil values as RACTupleNil
Test that a missing case and default causes a signal error
Inline RACSwitchSignalExamples back into RACSignalSpec
Remove +switch:cases:, change missing default behavior
Added binding to UITextField.
Require a `nilValue` since many controls have primitive properties.
Added rac_bindingForControlEvents:keyPath:.
Refactored RACObservablePropertyBinding to use the superclass initializer.
Refactored RACObservablePropertySubject to use the superclass initializer.
Refactored RACPropertySubject and RACBinding to have more general initializers.
Add -intially: to the CHANGELOG
Merge branch '2.0-development' into racsignal-initially
Add EXTRuntimeExtensions.m to the UIKit test host target.
Merge pull request #682 from ReactiveCocoa/add-changelog
Add -[RACSignal initially:]
RACSubscriber can be replaced with id<RACSubscriber> too
Change AlertView signal to use rac_description
Fix alert view test description
Change reduceByAnd/Or to just and/or
Merge pull request #684 from ReactiveCocoa/sprinkle-rac_description
Fixed indentation in reduceByAnd
Fixed some style issues for reduceByAnd/Or
Merge branch 'master' into sprinkle-rac_description
Revert most of ebae4a7a5f46e411a1843f6c095c0e9ea4bf5cd8.
Merge pull request #683 from ReactiveCocoa/sprinkle-rac_description-master
Minor proofing
Use -rac_description to prevent unwieldly backtraces
Condense -bindTo: example a bit
CHANGELOG
Merge branch 'add-changelog' into cleaner-backtrace-retrieval
Revert use of -rac_description on RACExtensions
Copy the introductory text from #618
Add TOC
Don't use bullets for single items, fix C string section
Uppercase for consistency
List major non-breaking improvements
List some minor breaking changes as well
Capture all major breaking changes
Use -rac_description to prevent unwieldly backtraces
Merge pull request #671 from ReactiveCocoa/thread-local-stack-counter
Removed unnecessary parens.
Describe how to use RACBacktrace in the debugger
Expose rac_ GCD functions for iOS, explain them
Document how to use RACBacktrace on OS X
Remove +printBacktrace, shorten +captureBacktrace…
Be less stingy with vertical whitespace.
Break out early if we don't need to create the data wrapper.
Merge pull request #678 from ReactiveCocoa/only-observe-weak-dealloc
Add tests for dynamic getters deallocating
Use -indexOfObjectPassingTest: in destroyCurrentThreadData.
Use for loops instead of getting the index even when we don't need it.
Update alert view tests to match implementation
Note that Class objects' deallocation isn't observed either
Only watch weak properties for deallocation
Add rac_copyPropertyAttributes() from libextobjc
Merge branch '2.0-development' into thread-local-stack-counter
Merge remote-tracking branch 'origin/thread-local-stack-counter' into thread-local-stack-counter
Merge pull request #670 from ReactiveCocoa/default-binding-values
Switch to using an array instead of a dictionary for performance.
Rewrite UIAlertView support to use delegate proxy
Merge remote-tracking branch 'origin/2.0-development' into hh-uialertview-raccommandsupport
Managed to invert the operators with a find & replace
Gone for @kastiglione's naming
Added -reduceAll and -reduceAny in #660
Merge remote-tracking branch 'origin/2.0-development' into thread-local-stack-counter
Merge remote-tracking branch 'origin/2.0-development' into default-binding-values
Merge pull request #632 from ReactiveCocoa/racobserve-change-dictionary
Always require two arguments for RACObserve
observee -> object
Test that -setNilValueForKey: still works
Move some nilValue testing to RACPropertySignalExamples
Initialize empty disposables with init.
Move the state tracking variables in RACObservablePropertyBinding to a thread local storage for thread-safety.
Refactor properties and bindings to accept a nilValue
Don't send nil for an integer value in tests
Refactor RAC() to accept >= 2 arguments and a nil value
Merge branch '2.0-development' into racobserve-change-dictionary
Add -[RACSignal setKeyPath:onObject:nilValue:]
Merge pull request #669 from ReactiveCocoa/its-grammar
s/it's/its/g
Merge pull request #667 from ReactiveCocoa/clarify-map-previous
Explain how -mapPrevious… is different
Rename -fold…combine: parameter to `reduce`
Rename -aggregateWithStart:combine: parameter to `reduce`
Rename -scanWithStart:combine: parameter to `reduce`
Rename -mapPrevious… to -combinePrevious…reduce:
Add examples for -scan… and -mapPrevious…
Merge pull request #664 from ReactiveCocoa/date-based-scheduling
Fix method name in RACImmediateScheduler
Fix argument indentation
Merge branch '2.0-development' into date-based-scheduling
totes unused
Merge pull request #658 from robb/switch-case
Code comments go out of date fast.
Merge branch '2.0-development' into racobserve-change-dictionary
Merge branch '2.0-development' into switch-case
Merge pull request #662 from ReactiveCocoa/switchToLatest-docs
Clarify completion documentation for -switchToLatest & +if:then:else:
Extract common logic into +switch:cases:useDefault:default:
Test +switch:cases:default: for nil values
Extracting common specs into RACSwitchSignalExamples
Implement +switch:cases:default:
Fixing documentation of +switch:cases:
Improving +switch:cases:
Revert "Implement +if:then:else: using +switch:cases:"
Fixed grammr
Implement +if:then:else: using +switch:cases:
Implement +switch:cases:
Added tests for unordered collection.
Added test for ordered collection replacement.
Added test for ordered collection removal.
Added test for ordered collection insertion.
Merge pull request #656 from ReactiveCocoa/correct-combineLatest-documentation
Correct +combineLatest: documentation regarding completion
Added test for callback on add with NSKeyValueObservingOptionInitial.
Restore formatting and signal name, remove unnecessary weakify/strongify.
Add notes about which thread the events are sent from.
Refactor schedulers and unit tests to use NSDate
Add RACQueueScheduler method for calculating walltime
Use NSDate instead of GCD time in RACScheduler
Merge branch '2.0-development' into racobserve-change-dictionary
Merge branch 'master' into 2.0-development
Merge pull request #652
Minor style fix
Add test for disposing
Remove unnecessary nil checking
Merge pull request #638 from ReactiveCocoa/appkit-bindings-proxy
Test `completed` in RACPropertySignalExamples
Clarify `completed` events on RACBinding
Merge remote-tracking branch 'origin/2.0-development' into appkit-bindings-proxy
Fix method signatures in deprecated warning messages.
Remove disposables cleanup.
Always include RAC specific KVO change dictionary values.
Clarified docs.
Renamed RAC specific KVO change dictionary keys.
Merge branch '2.0-development' into racobserve-change-dictionary
Overwrite super's designated initializer
Add test which reproduces the issue #651
Merge branch 'master' into 2.0-development
Merge pull request #648 from ReactiveCocoa/concat-as-flatten
implement -concat as -flatten:1
Merge branch 'master' into 2.0-development
Merge pull request #642 from ReactiveCocoa/newcomers-guide
Combine the two sentences about composing signals
Rephrase the example about setting a textfield to the current time
More understandable phrasing for how RAC models values
List all the patterns that RAC unifies
Remove unnecessary FRP shoutout
Remove FRP section entirely, combine it with the intro
Merge pull request #635 from ReactiveCocoa/deprecate-sequence-many
Merge pull request #640 from ReactiveCocoa/do-and-subscribe
Merge pull request #639 from ReactiveCocoa/immediate-take-until-test
Replace README TOC with a step-by-step list of materials
Actually, move the FRP explanation even further down
Move simple RAC examples to the top of the README and rename them
Merge branch 'master' into 2.0-development
Fixed default value in -asynchronousFirstOrDefault:success:error:
Describe -do… and -subscribe… in Basic Operators document
Test that -takeUntil: handles immediate signals correctly
Test manual completion of an AppKit RACBinding
Note that two simultaneous bindings is undefined behavior
Deprecate old AppKit binding methods
Additional lifecycle and completion tests
Allow bindings to terminate their property subjects
Forward completion in bindings and property subjects
Test that RACBindings propagate completion
Test that observable property subjects complete
No need to log on property subject errors
Lifecycle tests
Refactor implementation of -rac_bind:options:
Manually trigger bindings in unit tests
Basic tests for -rac_bind:options:
Skip the initial model value, not the view's
First pass at a generic RACBinding wrapper for AppKit
Merge pull request #636 from ReactiveCocoa/k&r-reduce-blocks
Style correction
Use K&R style block types for improved type checking
Merge pull request #634 from ReactiveCocoa/tweak-kvo-observing
Clarify test name
Break out observer dealloc condition and comment
Fix dealloc triggered callbacks for single key key paths
Test that observer dealloc does not trigger did change callback
Rename -sequenceNext: to -then:
Deprecate -sequenceMany:
Prevent observer from observing its own deallocation
Fix the disposable not being removed when disposed.
Fix the test for intermediate path components.
Merge branch '2.0-development' into racobserve-change-dictionary
Merge pull request #626 into 2.0-development
Deduplicate build settings and clean up build phases
Merge branch '2.0-development' into racobserve-change-dictionary
Expose scheme for new test host target
Merge remote-tracking branch 'origin/2.0-development' into pr/626
Merge pull request #611 from ReactiveCocoa/uiactionsheet-signal-support
Merge pull request #629 from ReactiveCocoa/rename-ignoreElements
Remove managing delegate assignment from RACDelegateProxy
Publicize UIActionSheet+RACSignalSupport.h
Merge pull request #601 from ReactiveCocoa/racobserve
Replace some left over uses of RACAble.
Deprecate -rac_addObserver:forKeyPath:options:block:.
Changed the new RACKVOWrapper method to take only one block and accept arbitrary KVO options.
Deprecate -ignoreElements
Rename `-ignoreElements` to `-ignoreValues`
Added -rac_changesForKeyPath:observer: and deprecated rac_signalWithChangesFor:keyPath:options:observer:.
Fixed broken tests, thanks @kastiglione.
UITextViewRACSupportSpec fails?
Added an iOS App target and a test target for UIKit testing.
Merge branch 'racobserve' into racobserve-change-dictionary
Change NSObjectRACPropertySubscribingExamples to account for initial value being sent on subscription.
Port code depending on RACAble to use RACObserve instead.
Deprecate RACAble and RACPropertySubscribing methods it depends on.
Use shorter names for intermediate variables.
No need to send the initial value in RACObservablePropertySubject since -rac_valuesForKeyPath:observer: does that already.
Send the initial value.
Handle the object or observer being deallocated before the signal is subscribed to.
Specify RACObserve sends the current value of the property on subscription.
Merge branch '2.0-development' into racobserve
Copy documentation wording from UITextView+RACSignalSupport.h
Remove no longer valid test
Descope RACDelegateProxy signals
Merge branch '2.0-development' into uiactionsheet-signal-support
Merge pull request #616 from ReactiveCocoa/deprecate-window-and-buffer
Merge pull request #608 from ReactiveCocoa/signal-for-selector-from-protocol
Don't set the delegate afterward – just don't do it, bro
Better tests for -bufferWithTime:
Merge branch '2.0-development' into deprecate-window-and-buffer
Use unsafe_unretained for delegates, to support OS X
Reduce the argument tuple
Try to clarify the behavior of rac_delegateProxy
Merge branch '2.0-development' into signal-for-selector-from-protocol
Merge pull request #620 from ReactiveCocoa/remove-lift-block
Remove -rac_liftBlock:withSignals*:
Test UIActionSheet with non-zero button index
Use -reduceEach over map for clarity over tuple arguments
Move responsibility of assigning the delegate out of RACDelegateProxy
Use unsafe_unretained for Mac compatibility
Merge remote-tracking branch 'origin/signal-for-selector-from-protocol' into uiactionsheet-signal-support
Merge pull request #617 from ReactiveCocoa/rename-to-property
Added change dictionary to -rac_addObserver:forKeyPath:willChangeBlock:didChangeBlock: blocks.
Merge branch '2.0-development' into racobserve
Update UIButton+RACCommandSupport
Update UIBarButtonItem+RACCommandSupport
Deprecate -rac_deriveProperty:from:
Rename -toProperty:onObject: to -setKeyPath:onObject:
Rewrite -bufferWithTime: without -windowWithStart:close:
Deprecate -windowWithStart:close and -buffer:
Merge remote-tracking branch 'origin/2.0-development' into signal-for-selector-from-protocol
Merge pull request #590 from ReactiveCocoa/signal-for-selector
Merge pull request #612 from ReactiveCocoa/libextobjc-subtree
Merge branch '2.0-development' into libextobjc-subtree
Merge branch '2.0-development' into racobserve
Note when completed is sent
Merge pull request #609 from ReactiveCocoa/consistent-lifting
Note the thread that events are sent upon
Merge remote-tracking branch 'origin/2.0-development' into signal-for-selector
Fix up RACBacktraceSpec
Move the contents of RACBacktrace+Private into the prefix header
Go back to quoted imports for RAC
++xcconfigs
++xcconfigs
++xcconfigs to project-headers-first
Merge pull request #613 from ReactiveCocoa/import-cleanup
Remove unnecessary imports
Remove .gitmodules entry for libextobjc
Namespace the rest of EXTScope for consistency
Replace EXTScope cleanup with namespaced static inline
Fix up libextobjc and xcconfig project file references
Re-add jspahrsummers/xcconfigs into the external/ folder
Read part of libextobjc into the ReactiveCocoa folder as a subtree
Remove libextobjc submodule
Fix RACObservablePropertySubject using the wrong KVO signal method.
Remove serialization.
Add UIActionSheet+RACSignalSupport
Refactor common sender responsibilities into RACDelegateProxy
Remove now-unused JRSwizzle and RACSwizzling
Add RACObserve macro.
Fixed bugs with callback serialization.
Moved rac_addObserver:forKeyPath:willChangeBlock:didChangeBlock: to RACKVOWrapper.
Merge branch '2.0-development' into racobserve
Merge branch 'zero-alloc-selector-search' into 2.0-development (pull request #602)
Minor stylistic tweaks
Re-add old methods as deprecated/unavailable
Add case 0 for clarity
Delete dynamic selector generation code
Refactor all lifting methods to only accept signals
Revert "Rewrite using sel_registerName()"
Revert "Makes argument count to SEL calculation only once"
Revert "switch-case jump only small arg count"
Revert "Add case of arg count = 0"
RIP NSObject.rac_lift
Disable UITextField test too :\
Refactor UITextView+RACSignalSupport
Remove RACEventTrampoline
Refactor RACDelegateProxy to be suitable for public use
Fix initial value in UITextField+RACSignalSupport
(Failing) tests for UITextField and UITextView support
Refactor UIGestureRecognizer+RACSignalSupport
Refactor UIControl+RACSignalSupport
Add unit tests for UIControl+RACSignalSupport
Move test UIButton class into its own file
Add -rac_signalForSelector:fromProtocol:
Remove now-unnecessary -respondsToSelector: override
Add case of arg count = 0
switch-case jump only small arg count
Makes argument count to SEL calculation only once
HARDER
Increase margin of error for +interval: tests harder
Increase margin of error on +interval: tests
Test a signal from a class that already forwards invocations
Test asynchronously invoking the superclass
Test that the original method is invoked first
Test sending non-object arguments
Go back to a dynamic subclass implementation
Add objc_allocateClassPair() wrapper to RACObjCRuntime
Use RACTupleNil for nil arguments
Merge remote-tracking branch 'origin/2.0-development' into signal-for-selector
Merge remote-tracking branch 'origin/master' into 2.0-development
Merge pull request #605 from ReactiveCocoa/deprecate-bindto
Reworded RACBind() docs to clarify it subscribes one binding to the other when used in an assignment.
Deprecate -[RACBinding bindTo:].
Merge pull request #600 from ReactiveCocoa/throttle-values-passing-test
Rewrite using sel_registerName()
Change RACObservablePropertySubject to use RACObservablePropertyObserving.
Find appropriate selector without NSString allocation
Merge branch '2.0-development' into racobserve
Added test for willChangeBlock and didChangeBlock being called in the right order.
Fixed some style issues in the tests.
Remove unnecessary disposal removal.
Merge branch 'master' into racobservablepropertysubject-custom-keypath-handling
Refactored RACObservablePropertyObserving to hide the serialization implementation details.
Fix buffered nexts getting resent after completion
Refactor -throttle: to use -throttle:valuesPassingTest:
Add -throttle:valuesPassingTest:
Merge branch 'master' into 2.0-development
Merge pull request #589 from ReactiveCocoa/update-xcode
more bumps
bumps
Add some missing synchronization because objects being thread-safe doesn't imply references to them are as well.
Remove calls to -rac_addDeallocDisposable:.
Moved stuff around to avoid an unnecessary call to -valueForKey:.
Added an explicit serialization lock instead of using @synchronized on one of the blocks.
Rename childDisposable to firstComponentDisposable and change keyPathComponentsCount to keyPathHasOneComponent.
Clean up docs of RACObservablePropertyObserving.
Merge branch 'master' into racobservablepropertysubject-custom-keypath-handling
Merge pull request #593 from limboy/2.0-development
fix the wrong output of flattenMap
Unset the associated object when unsetting the delegate
Improve docs for UIAlertView+RACCommandSupport.
Unset alert view delegate when unsetting command.
Document that UIAlertView.rac_command overrides the delegate
Clean up UIAlertView+RACCommandSupport.
Improve docs for UIAlertView.rac_command.
Add RACCommand support to UIAlertView
Test signals on two classes in the same hierarchy
Test -rac_signalForSelector: on NSObject
Verify the return value of a targeted method
Use RACTestObject instead of RACSubclassObject
Test a zero-argument method
Test that completed is sent upon deallocation
Use an error signal for a race condition, assert otherwise
Remove block and simplify RACForwardInvocation()
Factor out -forwardInvocation: swizzling for clarity
Fix spec filename
Refactor to send _after_ forwarding, handle more cases
Merge remote-tracking branch 'origin/2.0-development' into signal-for-selector
Minor style fixes in NSInvocation+RACTypeParsing
Documentation improvements
++specta + expecta
updates for Xdacted
Extract function for signature generation
Add header documentation for -rac_allArguments
Update -rac_signalForSelector: header documentation
Improve spec example names
Refactor to tidy -rac_signalForSelector: implementation
Merge branch 'pr/555' into 2.0-development (pull request #555)
Merge remote-tracking branch 'origin/2.0-development' into pr/555
Merge pull request #588 from ReactiveCocoa/interval-scheduler
Merge pull request #558 from AshFurrow/uibutton-command
Clarify the behavior of clock vs. wall time in timers
Rename to -after:repeatingEvery:withLeeway:schedule:
Disallow nil and +immediateScheduler for timers
Merge branch '2.0-development' into interval-scheduler
Merge pull request #584 from ReactiveCocoa/remove-racsubscriber
Merge pull request #586 from ReactiveCocoa/deprecate-add-dealloc-disposable
Merge pull request #585 from ReactiveCocoa/remove-did-dealloc-signal
Merge remote-tracking branch 'github/2.0-development' into uibutton-command
Deprecate -bufferWithTime: instead of -bufferWithTime:interval:
Deprecate -timeout: in favor of -timeout:onScheduler:
Deprecate +interval: in favor of +interval:onScheduler:
Implement test and interval scheduleing
Declare a RACScheduler method for interval scheduling
Refactor callers to use -rac_deallocDisposable instead
Deprecate -rac_addDeallocDisposable:
Deprecate -rac_didDeallocSignal
Move RACSubscriber class to a private header
Merge branch 'master' into 2.0-development
Merge pull request #582 from ReactiveCocoa/subscription-not-disposing
Merge branch 'master' into subscription-not-disposing
Merge pull request #580 from ReactiveCocoa/dealloc-fixes
Wrap all signal subscribers in a passthrough object
Skip unnecessary disposable in replay subject subscription
Remove `disposed` variable in normal scheduling
Skip unnecessary disposables in recursive scheduling
Allow RACDisposable to be created without a block
Add RACDisposable.disposed
RACDisposable unit tests
Failing test for disposal not cutting off sent values
Revert "Try a -takeUntil: when lifting instead of dealloc disposable"
Try a -takeUntil: when lifting instead of dealloc disposable
Restore -rac_didDeallocSignal, add -rac_willDeallocSignal
Stop swizzling in NSObject+RACKVOWrapper
Remove add/remove KVO trampoline methods
Turn RACKVOTrampoline into a RACDisposable
Omit RACSwizzling and JRSwizzle from the Mac target
Tear down dealloc disposables within -dealloc itself
Failing test for object lifetime with dealloc disposables
Move dealloc disposables into NSObject+RACDeallocating
Drop dynamic subclass approach to -rac_signalForSelector:
Add tests to confirm -rac_signalForSelector works on KVO'd objects
Refrain from dynamically subclassing a KVO dynamic subclass
Deduce signature of non-existant method from selector component count
Refactor -rac_signalForSelector: to adopt a runtime proxy subclass
Use rac_forward_ prefix for forwarding alias
Handle when forwarding is already installed in `-rac_signalForSelector:`
Go deeper into the `-rac_signalForSelector:` rabbit hole
Add -[NSInvocation(RACTypeParsing) rac_allArguments]
Commented RACObservablePropertySubject.
Commented RACObservablePropertyObserving.
Merge branch 'nil-observer' into 2.0-development (pull request #569)
Slightly better assertion failure message
Merge branch 'nil-observer' into racobservablepropertysubject-custom-keypath-handling
Added back the assert on stack depth.
Removed use of NSKeyValueObservingOptionInitial.
Relaxed the deallocation test a bit to account for chain deallocations.
Refactored early returns again.
Since observer can be nil, synchronize on willChangeBlock or didChangeBlock instead.
Added tests to check for observation stop on target dealloc with nil observer.
Change the check for NSObject so we don't use a non-checked string.
Merge branch 'nil-observer' into racobservablepropertysubject-custom-keypath-handling
Changed -rac_addObserver:forKeyPath:options:block: to accept nil observer.
Added nil observer test.
Refactored RACObservablePropertySubjectSpec to use RACTestObject.
Cleaned up imports.
Break out RACObservablePropertyObserving into it's own file.
Revert "Refactored the deeply nested branches into early returns."
Merge branch 'master' into racobservablepropertysubject-custom-keypath-handling
Merge pull request #566 from ReactiveCocoa/fix-current-scheduler
doh need that still
use tls for the current scheduler to support concurrent queues
Merge branch 'master' into 2.0-development
Merge pull request #565 from ReactiveCocoa/fix-concat
Merge pull request #564 from ReactiveCocoa/another-header
Fix -concat disposal and stop O(N) disposable growth
Failing unit test for -concat disposal
Mark RACSignal ** as __strong to fix -concat
Unit test for -concat sometimes missing later signals
hey look another header
Merge pull request #563 from ReactiveCocoa/add-headers-ios
add the headers for iOS
Merge pull request #561 from ReactiveCocoa/expose-current-scheduler
Merge pull request #562 from ReactiveCocoa/more-queue-scheduler-changes
Fix up RACTestExampleScheduler interface
Use the real class name in the default RACScheduler name
Use a default name when nil for RACTargetQueueScheduler
Documentation improvements to RACTargetQueueScheduler
Add `name` parameter back to RACQueueScheduler
Make RACQueueScheduler initializer protected
note the serialization expectation
Fix method name in deprecation warning
close dem brackets
Merge branch '2.0-development' into expose-current-scheduler
Merge branch 'master' into 2.0-development
update the spec
Merge branch '2.0-development' into expose-current-scheduler
really deprecate it
deprecate
rename RACTargetedQueueScheduler
—volatile
fix import style
expose RACTargetedQueueScheduler
fix races with the current scheduler
test some things
more docs
volatile
don't overretain self
clarify docs
move queue to the private category
fix the import style
don't import subclass in the umbrella header
Cleaned up UIButton+RACCommandSupport.m
Marked UIButton+RACCommandSupport.h as a public header.
Addressed code review issues from pull request.
actually do the schedule
use the proper import style
Fixed UIButton RACCommand support unit test.
derp
support RACQueueScheduler subclasses
Revert "expose the current scheduler key"
added RACTargetedQueueScheduler
expose the current scheduler key
Changed debugger back to LLVM.
Added RACCommand support to UIButton.
Moved clang deprecation suppresion pragmas to implementation file of RACSignal+Operations.
Merge pull request #556 from AshFurrow/remove-nstask
Removed NSTask+RACSupport.
Adjusted deprecation warning for -let:.
Moved  to deprecated category.
Deprecated let:
Merge branch 'master' into racobservablepropertysubject-custom-keypath-handling
Removed the note about RACObservablePropertySubject's thread-safety.
Synchronize access to childDisposable.
Refactored the deeply nested branches into early returns.
Added serializing of callbacks.
Merge pull request #553 from ReactiveCocoa/more-optimization
More saving keyPathComponents in temporary.
Save keyPathComponents in temporary.
Renamed willBlock and didBlock to willChangeBlock and didChangeBlock.
Fixed formatting in NSObject(RACObservablePropertyObserving) docs.
Revert "Pull disposable arrays out onto the stack for enumeration"
Rewrote RACObservablePropertySubject's bindings.
Merge branch 'master' into racobservablepropertysubject-custom-keypath-handling
Prefer -addDisposable over +compoundDisposableWithDisposables:
Move didSubscribe block declaration into RACSignal.m
Use cheaper synchronization for RACSignal's subscribers array
Remove unused tearingDown property
Optimize active signals set
Merge branch 'master' into more-optimization
Merge pull request #551 from kastiglione/document-sdk-requirements
Merge pull request #552 from kastiglione/pbxproj-cleanup
Clean-up duplicate entries in ReactiveCocoaTests
Add SDK requirements to README
Set iOS deployment target to 5.0
Merge pull request #549 from ReactiveCocoa/skip-rac-description-in-debug
Optimize KVO trampoline storage
Meh, we don't really need exception safety here
Pull disposable arrays out onto the stack for enumeration
Replace @onExit with try/finally to avoid blocks overhead
Refactor RACCompoundDisposable to use CFArray
Avoid -rac_description within -description
Only do work in -rac_description in DEBUG builds
Merge branch 'master' into racobservablepropertysubject-custom-keypath-handling
Removed some dead code.
Merge pull request #540 from ReactiveCocoa/main-thread-command
Merge pull request #543 from ReactiveCocoa/better-subscribe-on-docs
Merge pull request #541 from lsavino/patch-1
Clarify -deliverOn: and -subscribeOn:
Add quotes to header search paths
Undo some documentation changes
No need to redeliver RACCommand.canExecute anymore
Test that RACCommand completes on the main thread
Derp, canExecute needs to be main-threaded too
Add a couple assertions to verify the main thread
Move most RACCommand logic to the main thread
Merge branch 'master' into 2.0-development
Merge pull request #539 from ReactiveCocoa/better-racable-documentation
Merge pull request #538 from ReactiveCocoa/fix-command-binding-concurrency
++formatting
Add an example of @strongify with RACAble
Document that RACAble… may introduce retain cycles
Fix missing import
Fix concurrency in UIBarButtonItem.rac_command
Fix concurrency in NSControl.rac_command
Merge branch 'deprecate-some-starts' into 2.0-development (pull request #536)
OCD blank line removal
test for ensuring it only invokes the block once
style
use -toArrray
Merge pull request #537 from ReactiveCocoa/restore-old-command-signals
Match old -addSignalBlock: behavior despite deprecation
fixed some derps
rename
Merge pull request #535 from ReactiveCocoa/remove-cstr-lifting
include in the iOS test target
deprecate some starts
Remove support for lifting char * args and return values
Merge pull request #530 from ReactiveCocoa/catch-command-errors
Merge branch '2.0-development' into catch-command-errors
-addDeferedSignal: > -addActionBlock:
Merge pull request #529 from ReactiveCocoa/remove-command-deprecations
Catch and redirect deferred signal errors
Reinstate -addSignalBlock: as a deprecated method
Rename -addSignalBlock: to -addDeferredSignal:
Remove pre-1.0 RACCommand deprecations
Merge branch 'master' into 2.0-development
Merge branch 'pr/528' (pull request #528)
Minor style fixes, add a signal name
Added test for ignore: with nil to RACSignalSpec
Merge pull request #501 from ReactiveCocoa/once
spell out what happens for +immediateScheduler
fix the return docs
Added note about nil
Testing that -ignore: works for equal objects (different pointers) using an NSMutableString
include the scheduler in the name
new scheduler each time
Indenting according to docs
Implemented -ignore stream operation to filter the specified value (including nil)
Merge pull request #510 from ReactiveCocoa/ios-testing-target
fix the signal name
test the expected scheduler behavior
Merge pull request #521 from kastiglione/extract-event-trampoline-management
Remove unnecessary imports
Tidy definition of RACEventTrampolinesKey
Document RACAddEventTrampoline()
Extract RACAddEventTrampoline(id, RACEventTrampoline)
let's try this again
Remove outdated comment, the observer now actually does the work.
Added support for deallocation of intermediate key path values.
Merge branch 'master' into racobservablepropertysubject-custom-keypath-handling
Fix dumb NSError comparison issues
Fix bizarre test failures on Release
Fix building and running Mac tests
Remove signal naming tests, because they don't play well in Release
Set up dependencies and schemes for iOS testing
Add the magic incantation to script/cibuild for iOS testing
Merge pull request #512 from webdevotion/master
Merge pull request #517 from andrask/master
Concretize the circumstances of the firing of rac_textSignal
iOS needs to empty the pool after the dispose.
Moved the frameworks in the proper groups.
Changed the platform wrapping to mirror the others.
Reverted refactoring of RACLifting specs.
Wrapped NSOperationQueue test in platform conditional.
Revert "Extracted the NSOperationQueue RACBacktrace test."
Merge branch 'master' into ios-testing-target
Fixed typo ( missing ^ for completed block )
Add iOS target tests to CI build.
Extracted the NSOperationQueue RACBacktrace test.
Imported RACBacktrace private header for GCD overrides.
Added iOS specific RACLifting spec.
Added iOS testing target, refactored RACLifting spec.
Merge branch 'pr/506' (pull request #506)
Explain why the block properties are "strong"
Restore the type signature for dependencyBlock
Merge remote-tracking branch 'KyleLeneau/ios_unit_test_target' into ios-testing-target
Avoid using copying property as a block value
Merge branch 'master' into once
test cleanup
better docs
Update -collect and -toArray documentation
Merge pull request #498 from ikesyo/refactor-toarray
Add tests for -toArray
Add a test for -collect handling nil values
yo dawg I heard u like blockz
clarify docs
added +once:
Merge branch 'master' into racobservablepropertysubject-custom-keypath-handling
Merge remote-tracking branch 'kastiglione/clarify-sequenceNext' (pull request #496)
Refactor -toArray using -collect and -first
Clarify -sequenceNext:'s documentation and implementation
Merge pull request #491 from kkazuo/supports-nsrange
Receive as NSValue * instead of id
Merge pull request #494 from ReactiveCocoa/fix-array-enumeration
Fix integer underflow in index arithmetic
Honor the length in RACArraySequence fast enumeration
Add a RACSequence enumeration test that overflows the stack
Merge pull request #489 from ReactiveCocoa/faster-stream-names
Added comments
Add lifting support for NSRange
Add test case for NSRange returning method lifting
Imitate rac_description in NSNotificationCenter+RACSupport
Replace many calls to -description with -rac_description
Add -[NSObject rac_description] for faster descriptions
Merge pull request #480 from ReactiveCocoa/rac-gesture-signal
Merge remote-tracking branch 'origin/master' into rac-gesture-signal
Remove that blank line
Merge pull request #485 from kkazuo/typeparsing-ushort
Merge pull request #484 from kkazuo/typeparsing-const-pointer
Skip const type qualifier for -rac_returnValue
Fix ushort type code parsing for -rac_returnValue
Change RACKeyPathUtilities to be undefined on strings that aren't key paths.
Refactored key path manipulation.
Skip const type qualifier
Revert previous change
Switched assertion macros to C versions.
Merge branch 'master' into racobservablepropertysubject-custom-keypath-handling
Merge pull request #483 from kkazuo/typeparsing-ushort
Add supports const char * value for type parsing.
fix type code parser for unsigned short
Merge pull request #470 from ReactiveCocoa/racobservablepropertysubject-fix-keypath
Add rac prefix to category methods and nicer comments.
Merge pull request #481 from ReactiveCocoa/assertion-refactoring
NS(Parameter)?Assert -> NSC(Parameter)?Assert
Instead of rewriting NSAsserts, cause compiler errors
Merge pull request #479 from kkazuo/supports-nsrange
Add UIGestureRecognizer+RACSignalSupport to framework header
blank lines
Set UIGestureRecognizer+RACSignalSupport header public
Add supports of NSRange for rac_argumentAtIndex:
Sort that UIKit group
Add RACEventTrampoline -trampolineForGestureRecognizer:
Add UIGestureRecognizer -rac_gestureSignal
Merge pull request #478 from ReactiveCocoa/queue-scheduler
supports NSRange value
better docs
tests
added +schedulerWithQueue:name:
Merge pull request #462 from ReactiveCocoa/frp-best-practices
Merge pull request #476 from ReactiveCocoa/fix-parameter-assert
Redefine NSParameterAssert as NSCParameterAssert
Change assert in RACLiftAndCallBlock to NSCParameterAssert
Hotfix -sequenceNext: example
Merge branch 'master' into racobservablepropertysubject-fix-keypath
mark as unused
Merge pull request #438 from kastiglione/lift-with-arguments-array
Merge pull request #466 from ReactiveCocoa/shpakovski-basic-operators
Merge pull request #467 from ReactiveCocoa/build-scripts
Merge branch 'kvotrampoline-tests' into racobservablepropertysubject-custom-keypath-handling
Renamed test to be clearer.
Fix update being applied to key paths when there are nil intermediate values.
Added NSString(RACKeyPathUtilities).
Added test for intermediate nil values triggering ignoring an update that never happens.
Added test for deallocation of intermediate objects in an observed key path.
Revert "Revert "Revert "Removed RACKVOBinding subclasses."""
Update "Importing ReactiveCocoa" instructions
Gut script/cibuild and replace with previous build server logic
Added jspahrsummers/objc-build-scripts
Fix switching example
Finish Switching section
Fix signal operator links
Explain how -flattenMap: combines the two operators
Refactoring
Merge branch 'master' into shpakovski-basic-operators
Be more direct
Merge branch 'master' into frp-best-practices
Merge pull request #461 from ReactiveCocoa/sequence-optimization
One less "often"
Note that subjects should be for "base" input only
Fix another link
Fixed link & more specific link
Add bullets, mention commands and selector signals
disposables > disposal
Link to the new section from the Memory Management guide
Add a section about avoiding subjects
Add a new section about avoiding subscription & disposal
Skip the objectEnumerator in left folds
Optimize fast enumeration for RACArraySequences
Enumerate eager sequence binding results with fast enumeration
Optimize parts of empty and unary sequence binding
Add a private class specifically for unary sequences
Pull sequence binding dependencies out of the block
Add missing import
Only autorelease RACDynamicSequence tails sometimes
Optimize dynamic sequence lazy dependencies
Merge pull request #460 from ReactiveCocoa/tuple-optimization
Use == instead of -isEqual: for singletons
Add a custom sequence adapter for RACTuple which avoids copying
Add unit tests for RACTuple.rac_sequence
Skip unnecessary copying in +tupleWithObjectsFromArray:…
Optimize NSNull and RACTupleNil checks
Calculate array capacity ahead of time and skip copying
Merge pull request #457 from ReactiveCocoa/weak-actual-delegate
Make RACDelegateProxy.actualDelegate weak
Merge pull request #454 from ReactiveCocoa/racobservablepropertysubject-note-thread-safety
Make the note clearer by making the possible race condition more explicit.
Added note about RACObservablePropertySubject's thread-safety.
Merge pull request #453 from ReactiveCocoa/unsafe-unretained-racbind
Use unsafe_unretained references for RACBind targets
Improving example for the operator flattenMap.
++specta
Improving the combine operations.
Adding information on -flattenMap:
Improving description for Linear Operators.
include a test configuration
Merge pull request #442 from ReactiveCocoa/defer-kvo-start
Improve description for Linear Operators.
Improve description for some methods.
Create new documentation for Obj-C operators.
Make local copy of arguments prior to lifting signals
Follow array literal conventions
Merge branch 'master' into lift-with-arguments-array
Unit test
Use -rac_signalWithStartingValue… for RACAbleWithStart()
Added a separate method to observe with an initial value
Make RACAble macros slightly easier to read
Merge pull request #440 from ndouglas/small_fix_to_RACBacktrace
Merge pull request #424 from jonsterling/rac-lifting-HOM
Correct format string types
Use @unsafeify over @weakify
Add method lifting tests around handling nil
Replicate method lifting specs for *FromArray variety
Document *FromArray variety of lifting methods
Sets correct length for memmove() operation.
Assert argument count in -rac_liftSelector:withObjectsFromArray:
Extract lifting strategy into RACLiftAndCallBlock()
Add -rac_liftBlock:withArgumentsFromArray:
Add -rac_liftSelector:withObjectsFromArray:
Adding an iOS Unit Testing target referencing #405
Removed no-longer-necessary method on RACTestObject
Clarified documentation of <RACLiftingTestRig>
Renamed method in <RACLiftingTestRig> for consistency with RACTestObject
Remove test for RAFLiftProxy HOM failure on primitive return types
Style cleanup in NSObjectRACLiftingSpec
Correct typo in RAFLiftProxy assertion
Merge pull request #426 from ReactiveCocoa/kvo-options
whitespace
Move collection mutation tests to RAC property subscribing examples
Added spec that -rac_lift HOM should fail for messages returning primitive type
Factored out common behavior in RACLifting specs
Improved documentation for -rac_lift in light of changes
RACLiftProxy: assert that it can only receive void or object-returning messages
Added commentary to RACLiftProxy
Corrected typo in -rac_argumentAtIndex: documentation
Remove case for void argument type in -rac_argumentAtIndex:
Amend rac_signalFor: docs
Change ordered sets to arrays in NSKeyValueObservingOptionPrior test
s/to.beTruthy/notTo.beNil
Remove RACPropertySubscribingExamples itShouldBehaveLike block from +rac_signalWithChangesFor:keyPath:options:observer:
Dont name used variables _
Rename actual and objectValue to lastValue and proxySet, respectively
Copy keyPath
No need to unsafeify keyPath
Always read the key path
formatting
Merge remote-tracking branch 'origin/master' into kvo-options
Sort tests in project
Clean up tests
whitespace
Clean up all the tests
Add some tests
Add test for sending KVO dictionaries
Revert "Add RACTuplePackWithNils that converts NSNulls to nils"
Revert "Add variety of RACAble macros with backward compatibility"
Remove -rac_signalFor:keyPath:observer:
Move +rac_signalFor:keyPath:onObject: tests to RACPropertySubscribingExamples. Make +rac_signalWithChangesFor:keyPath:options:observer: behave like RACPropertySubscribingExamples
Remove all the codes
Fixed copy-pasta mistake
RACLiftProxy: set NULL as return value for non-object return types
Added specs for -rac_lift HOM
Added HOM version of RAC lifting
Merge pull request #406 from KyleLeneau/uibarbutton_command_support
Making some code changes based upon feedback
Merge pull request #416 from ReactiveCocoa/fix-cycle
fix a cycle created by -startWith:
Merge pull request #409 from ReactiveCocoa/named-scheduler
4 debug eyes only
allow custom names for schedules
Making changes based upon issue #406
Merge pull request #402 from ReactiveCocoa/bump-libextobjc
Adding UIBarButtonItem RACCommand Support.
Updated libextobjc to get new configurations.
Merge pull request #384 from ReactiveCocoa/signal-for-selector
lolstyle
Merge pull request #386 from iMartinKiss/feature/delay-scheduler
Merge pull request #391 from ReactiveCocoa/less-lulzy-example
+rac_signalForSelector:
return nil if we don't suceed
just use the selector as the key
better docs
Rename `-delay:schedule:` -> `-afterDelay:schedule:`
Merge pull request #395 from ReactiveCocoa/readme-objc
style.
Mention that iOS targets need -ObjC
less lulzy RAC-less parallel work example
Merge pull request #390 from zlajo/feature/group_by_event_forwarding
improved source code
implemented forwarding of completed and error events to RACGroupedSignal when using -groupBy:
Update README.md
Add convenience method for delayed schedule on RACScheduler
derp
mark unused
I guess conditionalize the test based on asserts
corrected the method signature
send the argument instead of the receiver
assert if the method has an existing implemenation
more clarification
clarify wording
don't need that anymore
added -rac_signalForSelector:
Merge pull request #382 from kkazuo/xcode-header-export
Fix detection of initial KVO observation
Merge branch 'feature/kvo-options' into develop
Rename RACAbleTypeReplacement -> RACAbleTypeReplace
Make KVO signal creating with types more readable
import NSObject+RACDeallocating.h in ReactiveCocoa.h
Export NSObject+RACDeallocating.h
Add variety of RACAble macros with backward compatibility
Add RACTuplePackWithNils that converts NSNulls to nils
Merge pull request #377 from aitskovi/objectPassingTest
Extend RACAble underlaying methods by two additional arguments
Style Fixes
Merge branch 'did-dealloc-signal' (pull request #376)
Remove unnecessary test (actually testing -takeUntil:)
Style fixes
Documentation
Merge pull request #379 from kkazuo/complete-on-dealloc
Send complete on dealloc a RACEventTrampoline
add test for rac_didDeallocSignal
rewrite with rac_addDeallocDisposable:
Add objectPassingTest
Merge pull request #375 from ReactiveCocoa/complete-command
added tests
moved -dealloc into the Lifecycle section
Add rac_didDeallocSignal to NSObject
complete the signal and errors
Merge pull request #374 from ReactiveCocoa/command-retain-cycle
Fix all NSAssert retain cycles
Failing tests
Remove unused -[RACSignal tearDown] method
Merge pull request #368 from aitskovi/all
Hide RACCommand's subscriber behavior in a private RACSubject
Merge pull request #372 from ReactiveCocoa/fix-disposable-growth
don't keep the disposable around
Revert "remove the disposable after the scheduled block has been executed"
remove the disposable after the scheduled block has been executed
Merge pull request #370 from ReactiveCocoa/recursive-block-fix
Fix recursive scheduling to handle the block being asynchronous
Better test for -repeat that adds concurrency
Add a failing test for scheduling recursively asynchronously
Style Fixes
Add -(BOOL):any function
Merge pull request #363 from ReactiveCocoa/better-appkit-binding
++words
Merge branch 'master' into better-appkit-binding
Merge pull request #366 from dmitrym0/master
Sneak in a link to @joshaber's blog post
Unsubscribe from the source notification center, not the default one.
Send initial values on rac_textSignal subscription
Style fixes
Merge branch 'master' into better-appkit-binding
Merge pull request #362 from ReactiveCocoa/execute
add an example
-execute: => -executeCommand:
Merge pull request #359 from ReactiveCocoa/aitskovi-fold
Add NSControl.rac_textSignal
Add NSText.rac_textSignal
added -execute:
Generalize NSButton+RACCommandSupport to all NSControls
Merge pull request #360 from ReactiveCocoa/fix-toproperty
style yo
dispose of the compound disposable on error or completion
doc the block parameter
one more style
style
asserts + style
document the parameters
Merge branch 'fold' of https://github.com/aitskovi/ReactiveCocoa into aitskovi-fold
Merge pull request #357 from ReactiveCocoa/remove-disposed-disposables
don't bother with the weaking
atomic
Merge remote-tracking branch 'origin/master' into remove-disposed-disposables
Merge pull request #358 from ReactiveCocoa/first-byref-fix
Never pass values across thread boundaries by reference
Merge pull request #356 from ReactiveCocoa/weak-subscriber
remove dealloc disposables if they're disposed of before dealloc
weakly reference the subscriber
Merge pull request #348 from ReactiveCocoa/concat-thread-safety
Merge pull request #334 from ReactiveCocoa/asynchronous-waiting
Merge branch 'master' into asynchronous-waiting
Merge pull request #347 from ReactiveCocoa/rac-macro-type
Merge pull request #342 from ReactiveCocoa/better-sequencing-docs
Merge pull request #341 from ReactiveCocoa/readme-binding-lifetime
Always deliver -asynchronousFirstOrDefault: to the main thread
Merge branch 'master' into asynchronous-waiting
Rename foldLeft param for clarity
Migrate any to use foldLeft
Add non lazy foldr specialization for EagerSequence
Remove non-lazy fold
Merge pull request #352 from ReactiveCocoa/fix-switchtolatest
Use Increment and Decrement.
Flip the branches around.
No need for Orig here.
Remove use of anonymous @synchronized.
Use RACSignal constructors.
Update -if:then:else: tests.
Fixed -switchToLatest completing when the latest child signal hasn't completed yet.
Merge pull request #351 from ReactiveCocoa/command-errors
Test that nothing but errors are sent on the "errors" signal
Rewrite the -catch: as a -doError:
Fix documentation typo
Fix -first methods not disposing after the first event
Tests for -first methods disposing of the subscription
Merge branch 'master' into asynchronous-waiting
Add RACCommand.errors for handling all errors generically
Rename "sender" to "value"
Merge pull request #333 from ReactiveCocoa/wait-until-completed
Capture errors locally before passing them back by reference
Add another test for -asynchronousFirstOrDefault:success:error:
Add foldLeftWithStart:combine:
Add foldRightWithStart (non lazy)
Rename foldRightWithStart to foldRightLazilyWithStart
Revert "Add RACProxy"
Add RACProxy
Fix thread safety of -[RACSignal concat:]
Clean up duplication in -asynchronouslyWaitUntilCompleted:
Merge branch 'wait-until-completed' into asynchronous-waiting
Merge branch 'master' into wait-until-completed
Merge pull request #345 from ReactiveCocoa/fix-racpropertysubject-constructor
Refactor fold interface
Add back +property, test them both.
Add type information to the RAC() macro
Merge pull request #346 from joshvera/fix-raccommand-items-in-flight
Change _itemsInFlight to an int32_t. Fixes armv7 misalignment.
Change RACPropertySubject to inherit +subject constructor instead of using it's own.
-flattenMap: examples with operators applied after/within
Document the relationship of -sequenceMany: to -flattenMap:
RAC() to the most descendant properties possible
Add any function
Add foldr implementation
Merge pull request #337 from js/uses-tabs-project-setting
Set usesTabs=1 for the pbxproj
Merge pull request #335 from js/composed-chars-string-sequence
Make -[NSString rac_sequence] work with composed characters
Only set result/error/success if `done` is not already set
Tests for run loop spinning methods
Add methods to spin the run loop recursively while waiting for events
Add -[RACSignal waitUntilCompleted:] for blocking until termination
Merge pull request #331 from ReactiveCocoa/documentation-cleanup
Copy all the footer links from the Design Guidelines
Better headings, remove License section
Move "When to use RAC" into the README
Remove Foundation Support link
Title the ToC
Move RACExtensions mention to the Framework Overview
Move Getting Started after the interesting stuff
Add a simple table of contents
Merge pull request #330 from ReactiveCocoa/signal-chain-style
Add a section about indentation style
Merge pull request #329 from ReactiveCocoa/readme-commands
Replace RACAsyncCommand example with an up-to-date one
Merge pull request #327 from ReactiveCocoa/added-not
added -not
Merge pull request #323 from ReactiveCocoa/dispose-when-completed
better phrasing
test that it doesn't assert
re-align the #if defs
dispose when the signal completes or errors
++expecta with changes from petejkim/master
Merge pull request #322 from js/patch-1
Add README note on recursive submodules
Merge pull request #320 from ReactiveCocoa/tuple-unpack-lifetime
Merge pull request #321 from ReactiveCocoa/minor-doc-errors
+zipWith: is now the primitive, not +zip:reduce:
Better phrasing in "debugging streams" section
Better phrasing in "use the same type" section
This is closer to real code than pseudo-code
Fix retain cycle in -viewDidLoad example
Merge pull request #319 from ReactiveCocoa/archive-build-note
Jump through some hoops to make tuple unpacking __strong
Add a test for RACTupleUnpack variables being captured
Added note about archive builds.
++libextobjc to disable ONLY_ACTIVE_ARCH on iOS
Merge pull request #317 from ReactiveCocoa/stream-combination-refactor
Test combining > 2 signals
Add a test for appending NSNull to a RACTuple
Whoops, use the temporary variable I added
Style fixes
Better documentation for +zip: implementation
Remove the braces rustling @joshaber's jimmies
Use isEqual: instead of ==
Tests for +combineLatestWith:
Make the documentation of reduce: variants consistent
Fix +zip: and +combineLatest: not returning 1-tuples
Refactor +combineLatest: in terms of +combineLatestWith:
Add -[RACSignal combineLatestWith:]
Give +zip:reduce: a name, avoid crashing when the block is nil
Implement +zip:reduce: in RACStream, remove overrides
Add support for appending to tuples
Implement -zipWith: for RACSequence
Implement -zipWith: for RACSignal
Add -zipWith: as a required RACStream primitive
Merge pull request #315 from ReactiveCocoa/link-to-docs-prominent
Merge pull request #316 from ReactiveCocoa/clarify-guidelines-purpose
++phrasing
Added -[RACStream reduceEach:] to reduce tuples
Refactor RACBlockTrampoline to accept a tuple of args
Note that the Design Guidelines assume RAC familiarity
Link to the Documentation folder from the intro section
Merge pull request #312 from ReactiveCocoa/command-signals-redux
Tests for the new RACCommand behaviors
Don't subscribe to signals asynchronously by default
"based" > "based on"
Monoid is more accurate than MonadPlus
Fix typo
Annotate assertion variable with __attribute__((unused))
Fix up existing unit tests
Refactor RACCommand implementation
Merge pull request #304 from ReactiveCocoa/design-guidelines
New RACCommand interface, with async blocks
le sigh
No list at the top level?
Revert "TRY INNER BULLETS I DUNNO MAN"
Revert "And outer bullets?"
And outer bullets?
TRY INNER BULLETS I DUNNO MAN
Some explicit line breaks
Whoops, fix all the anchors I broke
Maybe blank lines will help?
Bold group headings
Try a bulleted list at the top level instead
Add a table of contents to the design guidelines
Merge pull request #310 from ReactiveCocoa/signal-naming
Merge pull request #311 from ReactiveCocoa/signal-contract
Merge pull request #306 from EnthusiasticCode/design-guidelines
Rewrote first paragraph as suggested
Fixed some more typos
Merge branch 'design-guidelines' of https://github.com/ReactiveCocoa/ReactiveCocoa into design-guidelines
Merge branch 'master' into design-guidelines
Merge branch 'detailed-readme' (pull request #293)
Link to the license file
Merge branch 'master' into detailed-readme
Unify the location of footnotes and add a Documentation link
Minor proofreading, code style fixes, and line wrapping
Don't mention view models
Note that the main thread always has a scheduler
Typos
Added an additional example
Merge branch 'design-guidelines' of https://github.com/ReactiveCocoa/ReactiveCocoa into design-guidelines
Merge pull request #309 from ReactiveCocoa/sequence-contract
Typos
Fixed typos and some clarifications for 'side effects behaviour'
Clarified description of side effect behaviour in `RACStream` operations.
Clarified `RACSignal` example for 'side effects occur for each subscription'
Merge branch 'design-guidelines' of https://github.com/ReactiveCocoa/ReactiveCocoa into design-guidelines
Clean up hot/cold terminology in Connections overview
"Disposal cancels work and cleans up resources"
Add missing method indicator
"Subscriptions are automatically disposed"
"Errors are propagated immediately"
"Subscription will always occur on a scheduler"
"Signal events are serialized"
"results" > "events" in section about delivery
Intro section
++phrasing
Fix phrasing typo
++formatting
Describe good signal naming conventions
++phrasing
"Side effects occur once"
"Evaluation blocks the caller"
"Evaluation occurs lazily"
Merge pull request #307 from ReactiveCocoa/new-operator-guidelines
dat indentation
Better block argument name
"Avoid stack overflow"
"Do not block"
"Cancel work and clean up"
"Avoid introducing concurrency"
"Compose existing operators"
++phrasing
"Prefer building on RACStream methods"
Section overview
Merge pull request #305 from ReactiveCocoa/ractuplepack
++phrasing
"Debug streams with names" best practice
"Share side effects" best practice
"Make side effects explicit" best practice
"Switch schedulers rarely" best practice
"Deliver onto a known scheduler" best practice
Add an explicit subscription to parallelization example
"Process only as much as needed" best practice
"Avoid retaining" best practice
"Use the same type" best practice
Merge branch 'design-guidelines' of https://github.com/ReactiveCocoa/ReactiveCocoa into design-guidelines
Add actual subscriptions to login example
Updated 'Side effects occur for each subscription' following PR suggestions
Merge branch 'design-guidelines' of https://github.com/ReactiveCocoa/ReactiveCocoa into design-guidelines
Switched +tupleWithObjects: with +tupleWithObjectsFromArray:.
Clarify "event delivery" contract heading
"Collection transformations" use case
Minor code formatting cleanup
"Parallelizing work" use case
Wrapped ARG in parentheses to force precedence of the expression with respect to :?.
Fixed some formatting.
"Chaining dependencies" use case
"Handling asynchronous data sources" use case
Add a heading to explain stream naming
Better phrasing for what signals represent
Remove "again" from "side effects per subscription" heading
Merge pull request #301 from ReactiveCocoa/setup-instructions
Added 'Side effects occur again for each subscription' guideline
Added RACTuplePack().
Fixed some style issues.
Rewrite Design Guidelines headings
Pull Disposables out to the top level
Fix Clojure seq link
Phrasing and linkage cleanup
"Schedulers" section
"Connections" section
"Commands" section
"Subjects" section
"Disposables" section
"Subscription" section
Fix link
"Value types" section
"Sequences" section
Some clarification about signal events
Bring signals and sequences up a level for readability
Fix anchors?
Fix overview links
"Signals" section
"Streams" section
Stub Design Guidelines and Framework Overview
Add Getting Started instructions to the README
Merge the "Examples" section into the other code samples and add detail
Merge pull request #298 from ReactiveCocoa/move-demos
Merge pull request #300 from ReactiveCocoa/fix-bindto
Update README links
Merge pull request #299 from ReactiveCocoa/one-signal-per-property
Change -bindTo: to not send unnecessary starting value.
Optimize signal binding tracking
Disallow multiple signals being bound to the same property
Remove demos, which will now be in their own repos
Update direct file URLs to refer to the ReactiveCocoa org
Merge pull request #294 from andrask/master
Removed continue from loop. Fixed indentation issues in test.
Merge branch 'master' of https://github.com/github/ReactiveCocoa
Merge pull request #295 from github/log-names
Make some clarifications based on feedback from @jspahrsummers
Pass through names when using -logNext/Error/Completed
-zip:reduce: completion should not depend on the order of input signals
Update login example to reflect the removal of RACMaybe
Fix a few typos and clarify a point
Remove problematic parens from a URL
Rewrite the README to describe FRP and RAC in detail
Merge remote-tracking branch 'origin/fix-superclass-dealloc-swizzling'
Revert name of 'stops KVO on subclasses' test
Change 'stops KVO' test names in RACKVOWrapperSpec
Merge pull request #290 from github/fix-kvo-signal
Wrap comment in NSObject+RACKVOWrapper.m swizzle block
Wrap KVO lifetime on subclasses tests in it blocks
Use class_getInstanceMethod and method_getImplementation instead of class_getMethodImplementation
speling is hard
Merge pull request #291 from EnthusiasticCode/fix-imports-in-extensions
Merge remote-tracking branch 'origin/master' into fix-superclass-dealloc-swizzling
Call class_replaceMethod with deallocMethod's type encoding in -rac_addObserver:forKeyPath:options:queue:block
Fixed imports in RACExtensions.
complete when either object deallocs
added a failing test
Merge pull request #289 from github/lazy-kvo-signal
Merge remote-tracking branch 'origin/master' into fix-superclass-dealloc-swizzling
don't include the KVO whatnot in the iOS headers
just conditionalize the nil case
style
slightly more documentation
varargs
array instead of a set
document the block type
lazy KVO signal
more tests
refactor the KVO wrapper to fit better with KVO signals
Merge pull request #286 from github/take-until-dispose
more tests for property subscribing
use a compound disposable
Merge branch 'master' into take-until-dispose
Merge pull request #284 from github/fix-notification-cycle
Merge pull request #283 from github/fix-tests
don't need to be blocks anymore
Combine stops KVO on target deallocation tests
Test that the target is deallocated when it is a subclass of a subclass in RACKVOWrapperSpec
dispose of the trigger subscription once we get a value
keep object around unsafeily
added a failing test
updated tests to new specta style
Merge pull request #280 from EnthusiasticCode/racsequence-enumerator
Merge pull request #282 from EnthusiasticCode/remove-extconcreteprotocol
Merge pull request #281 from github/xcode46
++libextobjc
Remove references to EXTConcreteProtocol and dependencies.
++expecta and ++specta
Xcode++
Added deallocation test for -[RACSequence objectEnumerator].
Fixed comments and added synchronization around property access of RACSequenceEnumerator.
Merge branch 'master' into racsequence-enumerator
Update RACiOSDemo with new binding code
Add NSObject+RACObservablePropertySubject.h to iOS
Merge remote-tracking branch 'EnthusiasticCode/two-way-binding' (pull request #163)
Make the headers public in the iOS target.
Tag the weak stream as unused because NSAssert only expands in debug builds.
Avoid capturing self in blocks when not necessary.
Add -[RACSequence objectEnumerator].
More vertical whitespace.
Merge branch 'master' into two-way-binding
Merge pull request #279 from github/dynamic-sequence-deallocation
s/more correct/safer
Autorelease the tails of dynamic sequences upon deallocation
Test that RACSequence deallocation doesn't overflow (thanks @Coneko!)
Merge pull request #278 from github/disposable-optimization
Merge branch 'master' into disposable-optimization
Merge pull request #274 from github/bounded-compound-disposables
Merge pull request #276 from github/switch-and-if-renaming
Merge pull request #275 from github/sequence-tests
Actually, we can even use an array here instead of a set
Use a spin lock in RACCompoundDisposable
Merge branch 'bounded-compound-disposables' into disposable-optimization
Wrap removing weak disposables in an autorelease pool
Don't weakly capture the top-level compound disposable
Use compound disposables to avoid races and add some AR pools
Merge branch 'mutable-dealloc-disposables' into disposable-optimization
Use a non-recursive lock in RACCompoundDisposable and hold it less
Simplify RACScopedDisposable
Use compare-and-swap instead of a mutex in RACDisposable
Only need to replace the associated object if the set is new
Use a mutable set for -rac_addDeallocDisposable:
Rename -switch > -switchToLatest
Fix RACSequenceAdditionsSpec
Fix eager sequences test
Refactor RACSequenceExamples to use block arguments
Merge pull request #265 from github/rx-differences
Remove subscribeForever() disposables when done
Remove -bind: disposables when done
Remove recursive scheduling disposables when they're done
Allow nil in -removeDisposable:
Add -[RACCompoundDisposable removeDisposable:]
Remove parentheses in standalone document too
Specify the overload of Merge that -flatten: corresponds to
Remove parentheses from C# method names
Use qualified names for IObserver methods
Merge branch 'master' into rx-differences
Merge pull request #270 from github/materialize
Fix typo
Use -materialize instead of -asMaybes in GHAPIDemo
Refactor -sequenceNext: using -materialize
Rewrite -any: and -all: in terms of -materialize
Refactor -collect using -aggregateWithStartFactory:combine:
Added -dematerialize
Added -materialize
Add a name to -ignoreElements
Added RACEvent class, representing any stream event
Remove RACMaybe and -asMaybes
Merge pull request #268 from github/build-on-primitives-more
Merge branch 'master' into build-on-primitives-more
Merge pull request #269 from github/ignore-elements
Tests for -ignoreElements
Add -[RACSignal ignoreElements]
Refactor -distinctUntilChanged to use -bind:
Call -subscribe: directly in -defer:
Refactor -finally: to use -doError: and -doCompleted:
Tests for -finally:
Refactor -timeout: to use +interval:
Add unit tests for -timeout:
Remove -flatten override from RACSignal
Remove -map: override from RACSignal
Merge pull request #259 from github/fix-combine-latest-cycle
Make NSEumerator+RACSequenceAdditions.h public for iOS too
Merge pull request #266 from EnthusiasticCode/nsenumerator-sequence
use -enumerateObjectsUsingBlock: so it tracks the index for us
Fixed some formatting.
Put acronyms in parentheses
Add -[NSEnumerator rac_sequence].
Declare -[RACTuple rac_sequence] as a property.
Merge pull request #263 from github/more-header-fixes
use NSNumbers as subscriber IDs
2013, yo
Remove incorrect comma
Put notable method differences into a list
Embolden the class names for better readability
Document high-level interface equivalence
First pass at a "Differences from Rx" document
Document Rx equivalents
Merge pull request #260 from github/fix-flatten-cycle
Merge pull request #264 from github/memory-management-docs
Add missing code block terminator
Add high-level memory management documentation
Add a Documentation folder for notes that don't fit anywhere else
Merge pull request #262 from EnthusiasticCode/ractuple-sequence
Vertical whitespace.
Merge pull request #261 from EnthusiasticCode/debug-names
Vertical whitespace is cheap.
Use angle brackets for all imports in exported headers
Remove values that duplicate xcconfigs
Remove explicit search paths from the RACiOSDemo
Use the real Copy Headers build phase for the iOS library
++xcconfigs
Moved subscript accessors to separate category.
Add -rac_sequence to RACTuple.
Changed some instances of automatic stream naming to use -setNameWithFormat:.
Wrap -setNameWithFormat: in #ifdef DEBUG, document it's for debugging purposes only.
nil out the cycle block
added a failing test
just use a plain object as the subscription identifier
added a failing test
Add name to RACObservablePropertySubject and it's bindings.
Merge branch 'master' into two-way-binding
Merge pull request #251 from github/replay-last
Merge pull request #250 from github/easier-signal-naming
Merge branch 'easier-signal-naming' into replay-last
Revert "Added RACNamedSignal() to declare and name a signal"
Revert "Added RACNamedSequence()"
Merge pull request #253 from github/take-until-completed
Clarify that signalTrigger can also send completed
Indicate that -takeUntil: sends completed
Merge branch 'easier-signal-naming' into replay-last
Merge branch 'master' into easier-signal-naming
Merge pull request #245 from github/fix-multicast
Merge branch 'master' into easier-signal-naming
better test for multicasting to a replay subject
test autoconnection + replay subject
make the disposable atomic
Merge pull request #252 from danielctull-forks/master
Merge pull request #248 from github/flatten-replaced
Merge pull request #246 from github/fix-throttle-and-delay
Copy the headers to the new standard location in Xcode 4.3
Added -replayLast
Merge branch 'master' into two-way-binding
Removed checks in RACKVOBinding constructor.
Renamed RACObserverPropertySubject to RACObservablePropertySubject.
Use -setNameWithFormat: to clean up name-setting code
Remove +createSignal:name: in favor of -setNameWithFormat:
Add -[RACStream setNameWithFormat:]
Added RACNamedSequence()
Added RACNamedSignal() to declare and name a signal
Revert "Explain +merge: a bit more"
Explain +merge: a bit more
Explain +merge: a bit more
Replace +flatten: with +merge: in the README
Slightly less synchronization for -throttle:
Remove -rac_performBlock:afterDelay:
Refactor -throttle: to work on background threads
Make -delay: work in the background and delay completion
Added -[RACScheduler after:schedule:]
Merge branch 'master' into two-way-binding
Renamed RACProperty to RACPropertySubject, RACKVOProperty to RACObserverPropertySubject.
Moved memory management tests back into the shared examples.
Added more details of how the binding is executed in the RACBind docs.
Added KVC tests for sets and ordered sets.
Moved memory-management tests into RACPropertySpec.
Revert "Revert "Removed RACKVOBinding subclasses.""
don't need to synchronize for the disposable anymore
back to using a BOOL to track whether we've connected
fix a race when multicasting to a replay subject /ht @jspahrsummers
Rephrased the docs of RACProperty and RACBinding.
Revert "Removed RACKVOBinding subclasses."
Merge remote-tracking branch 'EnthusiasticCode/eager-sequences' (pull request #241)
Removed RACKVOBinding subclasses.
Merge branch 'master' into two-way-binding
No need for swizzling, just use a regular observer.
Add test for KVC to-many relationship accessors.
Remove useless NSKeyValueObservingOptionPrior.
Changed instances of "property" where it referred to RACKVOProperty.
Refactored prepareClassForBindingIfNeeded.
Document when the exception is thrown in the exception name declaration.
Declare -lazySequence and -eagerSequence as properties, call them with dot notation.
Merge pull request #235 from github/multicast
Added test for eager evaluation.
Fixed formatting and wording of docs.
Fix -bind: setting the correct name.
Added -eagerSequence and -lazySequence.
Merge pull request #206 from andrask/master
Style changes.
Added docs for RACKVOBinding class hierarchy.
note that the method is thread-safe
synchronize for a little less time
more tests
doc updates
consistent naming
use an init instead of a class method
weakify/strongify
Style errors corrected.
Merge remote-tracking branch 'origin/master' into multicast
Merge branch 'master' of https://github.com/github/ReactiveCocoa
Merge pull request #240 from github/signal-logging
Merge pull request #237 from github/concat-block-cycle
Rephrased the docs of RACProperty and RACBinding, hopefully a bit clearer now.
Refactored the RACKVOBinding class hierarchy so they all share the same initializers.
Corrections based on  previous comments by @joshaber. Changed tests to include NSNull conversion testing.
Moved and merged interfaces.
Modified the RACBind macro to make use of the key.
Clarified why memory management examples are separated from the others.
Removed some explicit block return types.
Added some comments and whitespace.
Merge branch 'master' of https://github.com/github/ReactiveCocoa
Fixed some formatting and other code smells in the tests.
Rename the tests and sort them so it's clearer what they're testing for.
Refer to instances of RACBinding in docs.
Add debug logging methods to RACSignal
Rewrite -concat to avoid a recursive block
added names for -replay and -replayLazily
remove RACCancelableSignal forward declaration
use -autoconnect with -replayLazily
replaced connectable signals with multicast connections
Added more memory management tests.
Fixed some expectations in RACKVOWrapperSpec.
Fixed RACProperty docs.
Added asserts / logs for errors on RACProperty.
Revert "Made the test for the race conditions more robust and friendlier on the CI."
Added docs to -[RACBinding initWithSignal:subscriber:].
Moved RACBinding to it's own files.
Fixed RACProperty -initWithSignal:subscriber: docs.
Removed RACLazyProperty.
Moved NSObject(RACKVOProperty) to it's own files, changed RACBind to use RACKVOProperty directly.
Added docs to RACKVOProperty.
Added RACPropertySignalExamples to RACKVOPropertySpec.
Merge pull request #233 from github/interval-test-races
Fix the max interval not being based on leeway
Use a much larger margin of error to account for system load
Refactor +interval: tests to handle delayed intervals
Merge pull request #225 from github/signal-name-debugging
Merge branch 'master' into two-way-binding
Add a name for +if:then:else:
Merge branch 'master' into signal-name-debugging
Merge pull request #223 from github/demo-infinite-spinner
Merge pull request #229 from github/subscriber-multiple-subscriptions
Merge branch 'master' into signal-name-debugging
Fix indentation in RACSubscriberExamples.h
Handle nil disposables
Merge branch 'master' into subscriber-multiple-subscriptions
Merge branch 'master' into demo-infinite-spinner
Merge branch 'master' into two-way-binding
Added RACLazyProperty.h to umbrella header.
Implemented -nonLazyValues.
Added test for -nonLazyValues to check for sending default value.
Fixed RACLazyProperty not handling synchronous start signals correctly.
Implemented RACLazyProperty.
Merge pull request #230 from github/fix-flatten-documentation
Merge pull request #218 from github/backtrace-fixes
Merge pull request #217 from github/dispose-scheduling
Merge pull request #216 from github/better-tuple-unpack-docs
Merge pull request #213 from github/if-then-else
Merge pull request #211 from github/remove-raccollection
Added some memory management tests.
Refactored RACProperty to make it easier to subclass.
Added a test to check for double default value generation.
Added tests for RACLazyProperty.
Added -nonLazyValues.
Added RACLazyProperty docs.
Added RACLazyProperty.
Implemented RACProperty bindings.
Document that completed/error invalidate subscribers
Added RACProperty bindings tests.
Added RACProperty direct access implementation.
Added tests for RACProperty base class.
Added asserts for overriding -subscribe:.
Implemented RACKVOProperty direct access.
Merge branch 'subscriber-multiple-subscriptions' into two-way-binding
Fix documentation for -[RACStream flatten]
Fix -concat sending completed to the subscriber multiple times
Tests for -concat
Disable TEST_AFTER_BUILD
Factor out RACSignalSpec mock error object
Support for subscribing RACSubject to multiple signals
Support for subscribing RACSubscriber to multiple signals
Test RACSubscriber multiple subscription behaviors
Document disposable behavior with multiple subscriptions
Refactor RACSubscriberExamples to test other events too
Added tests for RACKVOProperty.
Fixed RACRemainderKVOBinding.
Fixed some issues with RACKeyKVOBinding.
Implemented RACKeyKVOBinding.
Decreased margin of error by 10. Was failing the test too often when using my laptop unplugged.
Merge pull request #227 from mdiep/improve-project-description
Removed a lot of tests, renamed the spec.
Commented out some code to make it build.
Added missing imports to RACKVOProperty.
Yet another interface to bindings.
Describe RAC in terms of streams, not sequences
Merge branch 'master' into racbinding
Merge branch 'master' into signal-name-debugging
Spaces -> tabs in +interval:withLeeway:
Merge branch 'master' into if-then-else
Merge remote-tracking branch 'EnthusiasticCode/interval-with-leeway' (pull request #222)
Extracted +interval: and +interval:withLeeway: tests into common describe block.
Revert "Extracted +interval: and +interval:withLeeway: tests into shared examples."
Use Objective-C-like square brackets instead of parens
Default name to an empty string
Add names for RACAble signals
Add names to RAC extension methods
Add names for RACSignal operations
Add names for RACSequence methods
Extracted +interval: and +interval:withLeeway: tests into shared examples.
Added parameter sanity checking.
Fixed some formatting in the method docs.
Add names for RACStream methods
Move name property to RACStream, so methods there can set it
Add default names to all main RACSignal constructors
Added +createSignal:name:… to make it easy to set names
Changed +interval:withLeeway: to deliver on the global concurrent high priority queue, changed +interval: to call +interval:withLeeway:, updated docs.
Changed the timer tests to explicitly deliver on the main thread so it doesn't cause problems with expect.
Changed the timer to fire on the main dispatch queue.
Merge remote-tracking branch 'EnthusiasticCode/remove-nsarray-parameters' (pull request #219)
Fixed the method docs.
Initialize mutable arrays with their final sizes.
Fix -retry: sending RACMaybes
Fix the use of -asMaybes in GHAPIDemo
Added +[RACSignal interval:withLeeway:].
:fire: RACAsyncCommand :fire:
Updated implementation of RACSequence.
Changed tests to use enumerators and not arrays.
Clean up and redocument RACCommand (no semantic changes)
Updated docs to not refer to arrays.
Fixed implementations.
Switched instances of NSArray in the API with <NSFastEnumeration>.
Merge remote-tracking branch 'EnthusiasticCode/zip-forward-errors-immediately' (pull request #209)
Moved the blocks to before because of Specta memory management.
Fix backtrace logging with RACSchedulers
Unit tests for RACBacktrace with RACScheduler and NSOperationQueue
Unit tests for RACBacktrace with a GCD queue
Disable TEST_AFTER_BUILD
Split out asynchronous disposable test and use a scheduler
Actually use RACScheduler disposables where appropriate
Remove unneeded RACScheduler.h import
Compare and contrast RACTupleUnpack with the manual version
Add +if:then:else:
More tests for -switch
Improve -switch documentation
Refactored tests for clarity.
Removed synchronization around error forwarding.
bufferWithTime and buffer corrected, tests created
:fire: RACCollection :fire:
Merge pull request #210 from github/tuple-unpack-fixes
Change the variable that __autoreleasing is applied to
bufferWithTime window opening signaling corrected.
Merge pull request #208 from github/fix-readme-schedulers
Changed +zip:reduce: semantics to forward errors immediately as discussed in #195.
Fix the use of schedulers in the README
Merge pull request #207 from github/fix-lift-cycle
don't need the block return cast anymore
test that shit
fix a retain cycle caused by lift
bufferWithTime restart buffering after window is closed
Merge pull request #200 from github/remove-teardown-delay
Merge branch 'master' into remove-teardown-delay
Merge pull request #203 from github/one-way-binding-errors
Assert when an error is sent via -toProperty:onObject:
Fix thread safety for disposing of a -toProperty:onObject: binding
Merge pull request #199 from jonsterling/find-optional-methods
Merge pull request #198 from github/back-to-the-class
Change order of method lookup cases; add explanatory comment
Remove delay from -invalidateGlobalRefIfNoNewSubscribersShowUp
Fix some references to <RACSignal> in documentation
Converted <RACStream> into an abstract class
Enhance +findMethod:inProtocol:outMethod to find @required methods
Update GHAPIDemo
Fold <RACSignal> back into the RACSignal class
Merge pull request #197 from andrask/master
White space changes.
Optimized code with available shortcuts.
takeUntil augmented to handle completion as trigger. Added test for this case.
Merge pull request #196 from github/better-sequence-to-signal
Add -[RACSequence signal] convenience method
Yield the scheduler between values in -signalWithScheduler:
Added convenience methods for simpler transformation, and changed the docs a bit.
Implemented new RACBindingPoint-based RACBinding constructor.
Merge pull request #193 from github/better-sequence-logging
Merge pull request #189 from github/geometry-lifting
Copied over old RACBinding implementation, deleted some stuff.
Updated umbrella header and header exports.
Removed old RACBindings files.
Refactored tests to use the RACBindingPoint interface.
Merge branch 'master' into two-way-binding
Added tests for RACBindingPoint interface (Actually only copied them over from RACBindings).
Fixed the RACBind macro to use @keypath.
Log head/tail (without resolving) in -[RACDynamicSequence description]
Log values accumulated so far in -[RACSignalSequence description]
Added skeleton implementation of RACBindingPoint.
Added RACBind magic macro.
Added RACBindingPoint interface.
Test CoreGraphics lifting
Add lifting support for CoreGraphics types
Merge pull request #181 from github/synchronous-signal-documentation
Fix typo
Try documenting +createSignal: without talking about synchronicity
Merge branch 'master' into synchronous-signal-documentation
Merge pull request #185 from github/tuple-unpacking
Refactored RACBinding implementation and implemented composite key paths support.
Real documentation for RACTupleUnpack()
GET EVEN MORE CRAY, allow declarations too
Unit tests
Adding the magic :zap:
Changed RACBinding to be a RACDisposable subclass, split key path into key and remainder.
Key path test now makes sure only the last part of the key path is modified.
Merge pull request #184 from github/fix-replay-race
don't need the block
lolwhitespace
moar tests
do the subscribe only after catching up
be sure replay finishes before sending anything else
Merge pull request #183 from github/fix-first
no dot
fix NSError equality testing on 10.7
keep a local strong reference to the error so it escapes the queue's autorelease
Added test case for key paths.
The race condition was fixed, but the test was wrong.
Added missing volatile specifier.
Updated docs.
Merge branch 'master' into two-way-binding
Merge pull request #178 from github/keeplatest
moved the tests into RACStreamExamples
not in signal land anymore
better docs
rename to -mapPrevious:… and move to RACStream
Changed implementation to use swizzled KVO methods instead of KVO callbacks.
Merge pull request #182 from github/racable-memory-management-documentation
Merge branch 'master' into racable-memory-management-documentation
Merge pull request #180 from github/use-racsignal-protocol
Clearer non-self example
Memory management documentation
Improve base RACAble() documentation a bit
Move 'name' property to <RACSignal>
"Events" instead of "values"
A bit better phrasing
Better document +createSignal: disposable behavior
Return id from <RACStream> constructors
Update demos
Use class types when invoking -rac_addDeallocDisposable:
Change @class to @protocol where applicable
Use @weakify and @strongify within RACSignal
RACSignal * -> id<RACSignal>
Change RACSignal methods to return id<RACSignal>
Remove explicit synthesis from RACSignal
Added tests for rac_removeObserverWithIdentifier:.
Added another test for the disposing of bindings.
Pulled the tests out of the nested describe block after all.
added -keepLatestWithStart:combine:
Moved the tests in the right describe block.
remove duplicated RACBlockTrampoline entry for iOS
Fixed the test for KVO interference.
Added a test for disposing the binding and one for race conditions on atomic properties being set concurrently.
Added test for KVO interference.
Merge pull request #174 from github/notification-center-tests
Tests for NSNotificationCenter+RACSupport
Remove unnecessary __block
Merge pull request #169 from github/scheduler-fixes
Made the test for the race conditions more robust and friendlier on the CI.
Explicit comparisons for volatile uint32_t values
Indicate that subscriptions on the main thread are :sparkles:
Test -scheduleRecursiveBlock: for a synchronous scheduler
Test rescheduling multiple times recursively
Make recursion-flattening more explicit and work synchronously too
newBackgroundScheduler -> scheduler
Document -subscribe: behavior w.r.t. +currentScheduler
Merge branch 'master' into scheduler-fixes
Merge pull request #172 from github/remove-file-watching
Unrolled the static block. It was causing very weird problems with variable capture.
Remove +rac_watchForEventsForFileAtURL:scheduler:
Revert "Actually, we should never need a new scheduler when recursing"
Fixes to RACBehaviorSubject to bring it in line with RACReplaySubject
Save the disposable returned from scheduling in RACReplaySubject
Refactor +subscriptionScheduler to default to a background scheduler
Actually, we should never need a new scheduler when recursing
Remove +iterativeScheduler and use -scheduleRecursiveBlock: instead
Refactor -scheduleRecursiveBlock: to enqueue instead of run blocks
Fix GHAPIDemo and also document that new schedulers are cheap
Added -[RACScheduler scheduleRecursiveBlock:]
Rename +backgroundScheduler to +newBackgroundScheduler for clarity
Change -[RACScheduler schedule:] to return a disposable
Clean up organization of +subscriptionScheduler tests a bit
Whoops… never removed RACDeferredScheduler
Add test for -repeat plus -take:
Unit test for infinite -repeat
Merge branch 'master' into scheduler-fixes
Merge pull request #170 from EnthusiasticCode/concat
Fixed typo.
Added +[<RACStream> concat].
Merge pull request #167 from github/more-compound-disposables
Merge branch 'master' into two-way-binding
Documented caveat about properties that return values different from the ones being set.
Made version counter rollover-safe.
Refactored the small blocks capturing the pointers away.
Fixed the race condition.
Changed API.
Revert "FFS, just get rid of -first"
FFS, just get rid of -first
Refactored +iterativeScheduler to not consecutively execute blocks
expect() failures don't get caught on a background thread
Merge branch 'more-compound-disposables' into scheduler-fixes
Remove +[RACScheduler deferredScheduler]
Remove stopBinding workaround in -[RACSignal bind:]
Support initializing RACCompoundDisposable with -init
Make sure we don't ever modify "disposables" while disposing
Use RACScheduler.iterativeScheduler for infinite resubscriptions
Send replayed values on the subscriptionScheduler in RACReplaySubject
Removed test for transformation application. It's best left as an implementation detail.
Added test for race conditions when bound objects are changed simultaneously.
Revert "Added shorthand method to iOS-specific category."
Changed rac_bind:signalBlock:toObject:withKeyPath:signalBlock: to accept nil signal transformation blocks.
Merge pull request #165 from github/nil-errors
Remove unnecessary import
TomDoc style for <RACSubscriber> parameters
First draft of implementation.
Merge pull request #164 from github/side-effects-documentation
Added shorthand method to iOS-specific category.
Removed shorthand method.
Changed the names of the methods.
Make sure sending a nil error doesn't blow up any <RACSubscriber>
Document that -sendError: should accept nil
Document RACSequence side effect behavior
Document general <RACSignal> side effect behavior
Document +[RACSignal createSignal:] side effect behavior
Added some basic tests.
Added draft of interface of methods for two-way binding.
Merge remote-tracking branch 'origin/scheduler' (pull request #150)
copy dat block
fewer block lulz
added a getter for disposed
omg all the documentation fixes
don't need to check queue for NULLness anymore
docs cleanup
make explicit methods to the class methods
explicitly method +mainThreadScheduler
clarify that there may still be a valid current scheduler
remove the reference to queues
bring back +backgroundScheduler
better docs for +iterativeScheduler
better docs for +subscriptionScheduler
removed RACScheduler.sharedBackgroundScheduler
don't need this import anymore
more docs
refactored RACScheduler to use private subclasses instead of a schedule block
Merge pull request #144 from EnthusiasticCode/zipping-and-combining-duplicate-signals
More style fixes.
Style fixes.
test disposal and subscription
use the subscription scheduler and a compound disposable
added RACCompoundDisposable
Added support for nil errors.
Added spaces around RACDisposable * block returns.
Fixed some style issues.
Renamed completedOrErrors and values.
Merge branch 'master' into zipping-and-combining-duplicate-signals
Move the side-effect tests from RACStream to RACSignal.
Merge pull request #154 from EnthusiasticCode/collect
tests for all the things
don't need to synchronize anymore since we can't be concurrent
moved
don't need to import specs anymore
Using tabs instead of spaces for indentation
Merge remote-tracking branch 'origin/master' into scheduler
Merge pull request #153 from github/combining-empty-streams
Merge pull request #151 from github/simplify-specs
removed concurrency and fixed the queue memory management
Merge branch 'master' into zipping-and-combining-duplicate-signals
Converted leading spaces to tabs.
Fixed RACSignal with side-effecting duplicates.
Added tests for side effecting duplicates.
Conforming -[<RACSignal> collect] to doc and code style guidelines.
Added -[<RACSignal> collect]
Update +zip: and +zip:reduce: documentation
Make +zip: return an empty stream if not given any streams
Test that +merge: completes immediately without any signals
Make +combineLatest: with an empty array complete immediately
Use a prefix header for unit tests, instead of RACSpecs.h
update the docs
note that that probably isn't right
use the thread dictionary (ht @coneko)
more docs about caveats
assert that we have a queue
nil out the current scheduler key when we're dealloc'd
separate the immediateScheduler and currentQueueScheduler
more tests
more docs
added +isOnMainThread
do the proper bridging retain/release
added +subscriptionScheduler
Merge pull request #149 from jwilling/prefix-methods
update demo
prefix methods
fix the demo
re-arranged the inits
special case the main queue in the current scheduler
import OSAtomic for iOS
flatten potential recursion in the immediate scheduler
just bridge to id
just return self if we're not concurrent
docs for asSerialScheduler
-schedule: now returns a disposable
first pass at a smarter scheduler
Merge pull request #147 from github/subscriber-threading
Fix subscribeForever not getting unlocked due to short circuiting
Document -[RACSubscriber stopSubscription]
Merge branch 'master' into subscriber-threading
Merge pull request #135 from github/more-racstream
Refactor GHAPIDemo to not use -injectObjectWeakly:
Just remove -injectObjectWeakly:
Merge branch 'master' into more-racstream
Merge pull request #142 from github/bind-fixes
Explicitly compare against nil
Explicitly compare against nil
Revert "Moved -distinctUntilChanged into <RACStream> as -skipRepeats"
Merge branch 'bind-fixes' into more-racstream
Merge branch 'master' into bind-fixes
Merge pull request #128 from github/sample
Fix GHAPIDemo
Removed RACAsyncSubject -- use RACReplaySubject instead
Refactor RACReplaySubject to be consistent when live vs. replaying
Just use huge values, damnit
Synchronized faster in the RACReplaySubject test, to uncover races
Test to verify that RACReplaySubject uses the same order every time
Refactor <RACSignal> methods for automatic resubscription
+combineLatest: should only ever error once
BREAKING CHANGE: Always terminate RACSubscribers on completed/error
Move expect() to the main thread
Test that RACSubscriber doesn't send nexts after completed/error
Copy all the blocks ugh
Made RACSubscriber thread-safe
Added a multithreading shared example for <RACSubscriber>s
Document the RACSubscriber class
Document <RACSubscriber>, and especially its threading requirements
Merge pull request #145 from EnthusiasticCode/fix-zip-reduce-error-forwarding
Fixed RACSignal's +zip:reduce: error forwarding logic.
Fixed RACSignal's +zip:reduce: error tests.
Fixed RACSignal's +zip:reduce: to handle duplicate signals.
Fixed +combineLatest:reduce: to handle duplicate signals.
Changed the +zip:reduce: example data to catch more errors.
Added tests for zipping and combining duplicate signals.
Update added methods to use the new -bind: interface
Merge branch 'bind-fixes' into more-racstream
Add memoization to RACDynamicSequence
Updated -[RACSequence bind:] to match the new signature
Updated -[RACSignal bind:] to match the new <RACStream> signature
Change the block type given to -bind: to return a block itself
Added reentrancy tests that -bind: currently fails (miserably)
Implement -[RACSignal bind:] from scratch, without -flatten:
Added some additional memory management unit tests
Add a memory management test to RACPropertySignalExamples
Let some more project/xcconfig settings fall through to the target
Add a memory management test to RACPropertySignalExamples
Added some additional memory management unit tests
Remove unnecessary __block qualifier
Document expected -bind: semantics
Implement -[RACSignal bind:] from scratch, without -flatten:
++xcconfigs to add x86_64 for iOS
fixed the tests
document the repeating behavior
don't wipe the value after sending
Merge pull request #137 from EnthusiasticCode/fix-readme-license
Updated README to reflect the license change.
Merge branch 'master' into more-racstream
Merge pull request #131 from github/remove-fast-enumeration-extensions
Merge branch 'master' into more-racstream
Implement +merge: using NSArray -> RACSequence -> <RACSignal>
Merge branch 'master' into remove-fast-enumeration-extensions
Merge pull request #134 from github/sequence-lazy-bind-fixes
Merge pull request #130 from github/remove-nsarray-extensions
Moved -distinctUntilChanged into <RACStream> as -skipRepeats
Moved -skipWhileBlock: and -skipUntilBlock: into <RACStream>
Document the workaround
Workaround for #94 specifically for the case of -bind:
Manually kill the disposable when -bind: terminates
Additional termination testing for -bind: on infinite streams
Moved -takeUntilBlock: and -takeWhileBlock: into <RACStream>
Moved -scanWithStart:combine: into <RACStream>
Moved -injectObjectWeakly: into <RACStream>
Moved -mapReplace: into <RACStream>
Fix NSDictionary.rac_sequence with mutable dictionaries
Make sure -[RACSequence bind:] only evaluates head when needed
Added +sequenceWithLazyDependency:headBlock:tailBlock:
Test for lazy -bind: which RACSequence fails
Refactored +merge: to not depend on -rac_toSignal
Remove NSObject+RACFastEnumeration
Remove NSArray+RACExtensions
test for -sample:
assert that sampler isn't nil
documentation
added -sample:
Merge pull request #124 from github/sequence-block-cycle
Refactored -[RACSequence bind:] into a recursive method
Merge pull request #120 from EnthusiasticCode/zip-reduce
Added missing tests.
Removed nested alternating @synchronized because of deadlocking, they're unnecessary anyway.
Merge pull request #121 from github/mit-license
Relicense ReactiveCocoa under the MIT license
Removed unnecessarily explicit RACSubscriber creation.
Refactored sendCompleteOrErrorIfNecessary to avoid using so much flow control.
Replaced mentions of "subscribable" with "signal".
Readded the documentation for +[<RACSignal> zip:reduce:], it disappeared during the earlier merging of 'master'.
Changed stringWithFormat: to valueWithNonretainedObject: as signal identifier.
Fixed more formatting.
Merge branch 'master' into zip-reduce
++specta
++specta
Merge branch 'master' of github.com:github/ReactiveCocoa
++specta
Add a terminating nil to all itShouldBehaveLike invocations
++specta
++specta for shared example and teardown improvements
Merge pull request #118 from github/signal
Clarified the semantics of the method in the comments.
Added test for zipping subscribables that stagger values sent.
Don't blame me, the autocomplete doesn't put spaces.
Simplified error and completed handling logic and added tests for error handling logic.
Specified streams must be instances of the same concrete class in the method documentation.
Fixed formatting according to github style guidelines.
Added +[<RACStream> zip:reduce:].
spaces
selectMany: => flattenMap:
nospace
added some up-to-date examples to the README
Merge branch 'master' into signal
Merge pull request #98 from github/lift
fixed the demos
subscribable => signal
subscribable => signal
renaming all the things to signals
legit fixed the merge conflicts
Merge branch 'master' into lift
Merge pull request #117 from github/remove-all-load
Merge pull request #92 from github/lazy-sequences
just get the type encodings from the invocation itself
Merge branch 'master' into lazy-sequences
No more need for -all_load, use -ObjC instead
Merge remote-tracking branch 'origin/master' into lift
extract the invocation methods into a category
Merge pull request #116 from github/contributing
Remove Contributing section from README
Adding CONTRIBUTING file
Merge pull request #115 from github/fix-scan
-scanWithStart:combine: shouldn't actually start with the start value, just use it as the starting previous value
lolwut
fix the no subscribable arguments test
fix the void-returning method test
combine two basically identical tests
invoke immediately if it's not given any subscribable arguments
caps the MACROS
use EXTScope
retain the arguments after setting them, to be safe
better var name, use unretained object
note the max number of args
return a default unit instead of nil for void methods
Merge pull request #114 from github/fix-demo-combine-latest
Remove explicit synthesis from GHDLoginViewController
Fix use of +combineLatest:reduce: in GHAPIDemo
Make -bind: the primitive again, and build -flattenMap: on top
Fix GHAPIDemo calling -flattenMap:
Add a BOOL *stop for flattenMap: so binds can terminate early
Test for take:1 not needing to resolve more than one value in a seq
Test for take:1 completing even if the original doesn't
Added <RACSubscribable>.sequence
Added -[RACSequence subscribableWithScheduler:]
Use __func__ for the -toArray condition name
Fix use of mapReplace: in NSTask+RACSupport
Rename bind: -> flattenMap: in GHAPIDemo
Rename bind: -> flattenMap:
Expanded -take: unit tests
Fix <NSCoding> for RACEmptySequence
Added <NSCopying> and <NSCoding> to RACTuple
Added <NSCopying> and <NSCoding> to RACTupleNil
Fix -[RACSequence isEqual:]
Fix manual stream creations
filter: shouldn't terminate on the first predicate failure
Fix itShouldBehaveLike()s… again…
Merge branch 'master' into lazy-sequences
++libextobjc to fix ext_copyPropertyAttributes() overflow
++libextobjc to 0.2.2 to fix SEL casts
Use verifyValues() to test stream equality, not -isEqual:
Change the semantics of -bind: such that returning nil terminates it
Remove unnecessary non-nil check in RACSequence verifyValues
Test and fix -[RACSequence bind:] not concatenating empty sequences
Test -take: on infinite streams
itShouldBehaveLike() has to be in a describe(), not an it()
Fix RACExtensions for breaking API changes
Add all optional extensions to the unit test target
Fix RACiOSDemo for breaking API changes
Fix GHAPIDemo for breaking API changes
Merge remote-tracking branch 'origin/master' into lazy-sequences
Merge pull request #104 from github/get-return-value-fixes
getReturnValue: always returns an __unsafe_unretained object
Merge pull request #103 from github/select-const
it => is
-selectConst: => -mapReplace:
-selectConst:
Merge branch 'master' into lazy-sequences
Merge pull request #97 from github/better-combine-latest
more accurate wording
fixed the wrong arg index bug
added failing tests
lastests isn't a word bro
Merge pull request #95 from github/better-interval
empty
TABS
Merge branch 'better-combine-latest' into lift
Merge branch 'master' of github.com:github/ReactiveCocoa into better-combine-latest
check for pointer equality first
style
style
fixed a left over usage of combineLatest:
replace subscribeSelector with liftSelector
don't need to wrap the user info in a dictionary anymore
updated tests
don't actually need a scheduler parameter anymore
Moved -sequenceMany: into <RACStream>
Moved -take: into <RACStream>
Removed test for -[RACSubscribable map:]
Added -filter: to <RACStream>, removed -where:
Added streamWithValues() convenience block for RACStreamExamples
actually use the immediate scheduler like we said we did
fixed the test
just use NSTimer
Merge pull request #96 from github/kvo-crash
keep the target alive until the notification's delivered
added a crashing unit test
Tests for NSDictionary sequences
Tests for NSOrderedSet.rac_sequence
Tests for NSSet.rac_sequence
Tests for NSString.rac_sequence
Tests for NSArray.rac_sequence
Tests for +sequenceWithHeadBlock:tailBlock:
Tests for RACSequence -isEqual:, -hash, <NSCopying>, <NSCoding>
Test <NSFastEnumeration> and -array
Um, guess I never actually removed -drop:…
Tests for -skip:
Add some additional groupings to <RACStream> tests
Test for -startWith:
Move non-nil checks into the verifyValues() blocks
Factored out common <RACStream> tests into a shared example
Moved -skip: (and -drop:) into <RACStream>
Remove +sequencesWithConcatenatedSequences:
Move -startWith: into <RACStream>
Remove -selectMany: in favor of -bind:
Remove -select: in favor of -map:
Loosen <RACSubscribable> return types
Renamed -merge: to -flatten:, and removed -merge
Remove unnecessary <RACStream> conformance from RACSubscribable
Remove -[RACSequence flatten]
Reimplemented -[RACSequence bind:] lazily
Changed NSDictionary.rac_sequence to return tuples
Hide RACDynamicSequence and expose its constructor in RACSequence
Remove +sequenceWithGeneratorBlock:startingValue:
Provide a default implementation of -flatten
s/RACStream/RACSequence/ implements <RACStream>
Merge remote-tracking branch 'origin/master' into lazy-sequences
Merge remote-tracking branch 'origin/master' into better-interval
Merge pull request #91 from github/sequence-next-on-completed
slightly less lulzy +interval: implementation
Ensure we don't get values until the first subscribable completes
Assert that the block isn't nil
Fix sequence category prefix (mtl_ -> rac_)
Tests for RACSubscribable conformance to <RACStream>
Fix RACSequence fast enumeration
Unit tests for RACSequence's conformance to <RACStream>
Added -flatten to <RACStream>
Added -concat: to <RACStream>
Added +empty to <RACStream>
Added <RACStream> to RACSequence
Added <RACStream> to <RACSubscribable> and RACSubscribable
Added <RACStream> concrete protocol
Added some subgroups to the 'Core' group
Adding sequence code from github/Mantle@701af7b969f4c014f1a3489223232b226759275a
Rename 'concattedDisposable' to something that makes more sense
Refactored -sequenceNext: to always sequence on completed
Unit tests for -sequenceNext:
Merge pull request #88 from github/merge-concurrent
better documentation
test for RACTupleNils being nil
tests for RACBlockTrampoline
comment
documentation for RACBlockTrampoline
tests for +combineLatest:reduce:
style
implement -isEqual: and -hash on RACTuple
properly support nil args
assert that the block's not null
nil reduce block sends a tuple
docs update
support up to 15 arguments
Merge branch 'master' into better-combine-latest
check all the subscriptons
return whether it should complete
more tests
share the subs and subjects
fix a race
don't actually need completedSubscribables
just use NSAssert
mergeConcurrent => merge
start with the current value of the text fields
++xcconfigs for armv7s
work on taking an arbitrary block
docs
more documentation
tests for merge
implement all the merge variations in terms of -mergeConcurrently:
style
Merge branch 'master' into merge-concurrent
Merge remote-tracking branch 'origin/import-extkeypathcoding' (pull request #86)
import EXTKeyPathCoding as part of the framework header
lolzxcode
lolxcode
Merge pull request #85 from github/remove-rac-keypath
Indentation lulz
Add libextobjc folder to GHAPIDemo search paths
Update demos too
Remove RAC_KEYPATH_SELF in favor of @keypath
Replace RAC_KEYPATH with @keypath from libextobjc
Add EXTKeyPathCoding.h
Uhhh… explicitly import metamacros.h
++libextobjc for @keypath supporting two args
Merge pull request #84 from github/resend-nil-errors
Resend nil errors too
Tests for RACAsyncSubject resending errors
Merge remote-tracking branch 'origin/switch' (pull request #83)
completion tests
smaller lock scopes
tests for -mergeConcurrent:
note that 0 means unlimited
actually add the subscribable to the active subscribables
dequeue from the front of the array instead of the back
fix off-by-one with active subscribables
actually remove the subscribable from the active subscribables
break out of recursive locks
style
switch tests
accept nil
Merge pull request #81 from tonyarnold/header-visibility-for-ios-fixes
Set all headers to have visibility of "Project" for the iOS static library
Merge remote-tracking branch 'origin/weak-all-the-things' (pull request #79)
actually these guys need to stay unsafe
s/unsafe_unretained/weak
target 10.7
Merge pull request #78 from tonyarnold/xcode-4.5-fixes
first pass at -mergeConcurrent:
Fixes suggested by Xcode 4.5 (duplicate headers)
Add `armv7s` to the list of valid architectures
Merge remote-tracking branch 'origin/fix-autoconnect' (pull request #77)
reset disposed to NO
test reconnecting after a subscription was disconnected
indentation
style
fixed -autoconnect and added tests
only create plain RACSubscribables, never subclasses
Merge pull request #76 from github/fixes
test to make sure delays on the queue are ok
—words
use -makeObjectsPerformSelector:
go ahead and dispose if we're already done
s/will/to
style
just test with a plain NSObject
tests for various dealloc situations
make sure we do the delay on the main queue
test with RACSubject since they're more finicky
don't add a nil disposable
synchronize on the disposables as we cleanup
nil disposables are cool and we need to synchronize
lol trailing whitespace
if we completed/errored before getting our disposable, then dispose of it as soon as we get it
since we're already done, go ahead and dispose
just use scoped disposables
Merge remote-tracking branch 'origin/remove-generators' (pull request #75)
lolgenerators
Merge pull request #71 from github/perform-selector
parens because lol
renameing and style fixes
more tests
lolz
note that arguments start with nil/0
updated examples and tests
doesn't need to be nil terminated
start with everything nil/0
support pointer types
doesn't work for weird things
NSAssert
copy dem blocks
classes are objects, right?
spaces => tabs
need to weakly ref self
Merge remote-tracking branch 'origin/master' into perform-selector
added rac_performSelector:withObjects:
Merge pull request #69 from github/backtrace-performance
Only capture backtrace addresses initially
Merge pull request #68 from github/async-subject-nil-values
Only send the lastValue if one was set
Added a unit test to catch RACAsyncSubject in the act
Merge pull request #67 from github/fix-dangling-pointer
added a test to make sure the RAC macro gets expanded properly
thread safety for the disposables set
finish writing the description
make sure it hasn't been disposed before we think it should be
precise lifetime
set it atomically
match the other tests
share the property subscribing examples
tests for toProperty:onObject:
test on a test object
return a copy so we can guarantee it's never mutated
renaming
dispose of the subscribable when the object deallocs to prevent dangling objects
Added a Contributing section to the README
Merge pull request #65 from github/derived-assignment
don't need the extra keypath macro anymore
accidentally'd a word
spaces troll
fixed for RAC changes
use metamacros to pair down the RAC macros
Merge pull request #64 from github/fold
test sending nil
split the trampoline into two objects
renamed fold => scan
moved to the right place and added some tests
subscripting assignment trampoline
test for fold
-foldWithStart:combine:
Merge pull request #62 from github/readme-typo
"simple add" -> "simply add"
Merge remote-tracking branch 'origin/move-nsfilemanager-category' (pull request #61)
hwooops, update xcode proj
moved NSFileManager category to the right directory
Merge remote-tracking branch 'origin/fix-merge-sync' (pull request #60)
synchronize the loop too
synchronize access to the innerDisposables set
Merge remote-tracking branch 'origin/watch-file' (pull request #58)
Xcode
more documentation about the racey risks inherent in the API
style
added a note about files being overwritten
pass a scheduler instead of a queue
missing thing
moved from NSFileHandle => NSFileManager, added tests
split the queue expression into its own line
Merge remote-tracking branch 'origin/master' into watch-file
Merge remote-tracking branch 'origin/free-categories' (pull request #59)
fixed the imports for the extension categories
Merge remote-tracking branch 'origin/fix-withstart' (pull request #57)
added a note in the readme about the extensions
split a lot of the Foundation bridging categories out of the framework
added a couple tests
don't need that import anymore
canceled => disposed
missing import for iOS
added an NSFileHandle method to watch the file for changes
Merge remote-tracking branch 'origin/command' (pull request #56)
lolz really fix it this time
fixed RACAbleWithStart to work with non-object properties
moved +command from RACAyncCommand to RACCommand
Merge pull request #55 from github/fix-generator-races
more documentation on the expectations and obligations of dispose
Merge remote-tracking branch 'origin/sequence-many' (pull request #52)
style
just implement it in terms of -sequenceMany:
added -sequenceNext:
this is why we can't have nice things
fixed test
dispose of our subscription when we reach our count
style + dispose before sending completed
-toArray should use the condition lock blocking method
don't generate the next value if we've been disposed
Merge pull request #54 from github/send-first-distinct-nil
Send any initial nil value from -distinctUntilChanged
Added a test for initial nil being distinct
Merge pull request #53 from github/fix-distinct-for-nils
check equality in addition to -isEqual:
added -sequenceMany:
++xcconfigs (submodule lulz)
++libextobjc to fix EXTConcreteProtocol invoking +initialize
Merge pull request #49 from github/concrete-protocols
Merge branch 'master' into concrete-protocols
Remove unnecessary protocol conformance assertion
Remove unnecessary 'self' casts
Share the build scheme of RACiOSDemo
Moved <RACSubscribable> into RACSubscribableProtocol.h
Merge branch 'master' into concrete-protocols
Merge pull request #51 from github/racablewithstart
brought back RACAbleWithStart
Merge branch 'master' into concrete-protocols
Merge pull request #50 from github/generator
added a comment about how the generator should be limited on the same scheduler given
added a test to make sure it only generates as many values as is needed
dot syntax
nil block means repeat the start value
only send completed if we weren't disposed of
import OSAtomic
note that the next block cannot be nil
added tests for generators
added +generatorWithScheduler:start:next:
Update README.md
Remove deleted headers from framework header
Use recursive header search paths in demos
Moved libextobjc into ReactiveCocoa folder
Document <RACSubscribable>
Folded RACSubscribable+Operations into <RACSubscribable>
Folded NSObject+RACSubscribable into <RACSubscribable>
Converted <RACSubscribable> into an empty concrete protocol
Build and expose EXTConcreteProtocol
Remove xcconfigs submodule (use libextobjc's instead)
Adding jspahrsummers/libextobjc as a submodule
Merge remote-tracking branch 'origin/raccommand-fixups' (pull request #46)
documentation
removed more RACCommand+Private
don't need RACCommand+Private anymore
init method name changed
expose -initWithCanExecuteSubscribable:block:
doesn't need to be on the main queue
unbind before re-binding
just use a void pointer
updated documentation
don't bother overriding the compiler option
lolz iOS
updated the example
fixed RACAsyncCommand
Revert "removed RACAsyncCommand (for now, at least)"
Revert "removed RACAsyncCommand"
don't complicate the test with a can execute subscribable
updated NSButton's RACCommand support, added tests
removed RACAsyncCommand
removed RACAsyncCommand (for now, at least)
fixed the tests for the new interface
new, simpler interface for RACCommand
added +commandWithExecuteBlock:
added a spec for RACCommand
brought some sanity and documentation to RACCommand
Merge branch 'incremental-combine-latest' (pull request #45)
Don't clear the last values in +combineLatest:reduce:
Merge pull request #44 from bvanderveen/combine-latest-tuple
remove synchronization gate object. it is not needed if we simply clear the dictionary rather than re-assign the pointer with a newly allocated dictionary
unit tests for -combineLatest:.
Add +combineLatest:, which is the same as combineLatest:reduce: where the reduce defaults to the identity function.
Merge remote-tracking branch 'origin/fix-kvo-subscribable-teardown' (pull request #41)
send completed so that the subscribable chain gets torn down
just create a disposable, it's slightly less awkward
lolspace
Merge pull request #39 from aegzorz/master
Added OSAtomic.h to imports to fix compile error
Merge pull request #38 from github/async-backtraces-only-in-debug
Disable RACBacktrace for Release builds
Merge remote-tracking branch 'origin/fixes-from-816dcf11'
added -doCompleted and changed -timeout: to timeout on a global queue
Merge remote-tracking branch 'origin/more-synchronization'
Merge branch 'master' into more-synchronization
fixed the synchronization for the self disposable
synchronize access to the cancel block
Merge pull request #34 from github/async-call-stacks
@autoreleasepool backtrace capturing as well
Clean up ignoreCount arithmetic
Added README instructions for enabling async backtraces
Exposed a bit of an interface to RACBacktrace
Capture backtraces for function pointer dispatches too
Added +[RACBacktrace captureBacktraceIgnoringFrames:]
Get rid of rac_interpose_t typedef
Always inline RACBacktraceBlock()
Omit +captureBacktrace from backtraces
Be more object-oriented
Renamed GCD+RACExtensions to RACBacktrace
Merge branch 'master' into async-call-stacks
Merge remote-tracking branch 'origin/more-synchronization'
synchronize access to the disposable
use the built-in atomic read/writes
Merge remote-tracking branch 'origin/sync-disposable'
synchronize access around the disposable
Pass through to default handlers
Log a message when handlers are enabled
Don't inject handlers without DYLD_INSERT_LIBRARIES
Merge remote-tracking branch 'origin/master' into async-call-stacks
Merge branch 'master' of github.com:github/ReactiveCocoa
expose the KVO wrapper
Use exit() instead of abort()
Share GHAPIDemo scheme
Added backtrace tracking across async calls
Copy ReactiveCocoa.framework into unit tests
added -doError: and fixed -timeout:
Merge pull request #31 from nickynick/master
Added newline back :)
Switch to static functions to prevent category methods from clashing
Don't create static objects on initialize/load, do it lazily instead
Merge pull request #28 from github/fix-firstordefault-semaphore-lifetime
Merge pull request #30 from github/fix-rackvowrapper-dealloc
No need for -performSelector:
Remove -rac_originalDealloc declaration
Go back to github/specta
Merge pull request #29 from github/thread-safe-kvo
Import NSObject+RACKVOWrapper in ReactiveCocoa.h
Unit tests for automatic trampoline deallocation
Unit test for adding and removing an observer
Remove RAC classes from unit test target
Bump unit test deployment target to 10.7
Completely refactored NSObject+RACKVOWrapper
Remove unnecessary -rac_removeObserverTrampoline: method
Refactor -firstOrDefault:success:error: to use NSCondition
Unit tests for -firstOrDefault:success:error:
Merge remote-tracking branch 'origin/derived-prop'
docit
Merge pull request #24 from github/block-instead-of-spin
Actually block in -[RACSubscribable firstOrDefault:success:error:] (using a GCD semaphore) to avoid gobbling CPU
added -rac_deriveProperty:from:
Merge pull request #22 from github/use-xcconfigs
Merge pull request #23 from github/better-constructor-types
Type RACSubscribable's +start: methods as returning a RACSubscribable instead of id, since it's never going to be anything more specific
Type +[RACUnit defaultUnit] as a RACUnit
Converted constructors to use instancetype instead of id or their specific type
Inherit INSTALL_PATH from Mac-Framework.xcconfig
++xcconfigs
Adding a Profile configuration that is more suitable for instrumentation than Release
Always build the unit test target with the ReactiveCocoa scheme
Set up all targets and configurations with xcconfigs, and removed now-duplicate build settings
Adding jspahrsummers/xcconfigs as a submodule
Merge pull request #18 from github/update-expecta
Refactored test specs to use new Expecta matcher syntax
Update expecta to latest master
Re-pointed Specta submodule to the latest master of petejkim/specta
default cancelable subscribables to use a replay subject but allow overriding
use JRSwizzle instead of our own thing
added JRSwizzle as a submodule
Merge pull request #16 from carlbrown/master
Specify iOS target setting in ReactiveCocoaFramework to match RACiOSDemo
removed the WithStart macros, too buggy
added RACAbleKeyPath
Merge branch 'master' of github.com:github/ReactiveCocoa
support change suppression
some work on RACCollection
log out the number of active requests
Merge branch 'master' of github.com:github/ReactiveCocoa
just run the runloop until [NSDate date]
tests for async subject and replay subject
project organization
more synchronization fixes
apparently we need -all_load again :(
synchronize access to the completed subscribables set
autoreleasepool around the runloop spinning
added -firstOrDefault:success:error:
cleaned up the invalidation / teardown logic
added a name property
include the task's arguments in the error user info
include a string rep of the data if we can get one
xcoooooooode
lolxcodez
Merge pull request #9 from EnthusiasticCode/master
Fixed a retain cycle in -[NSObject(RACOperations) rac_whenAny].
recalculate the future time for each call
Merge branch 'master' of github.com:github/ReactiveCocoa
implement +interval: using dispatch_after
Merge pull request #8 from akiland/master
Set SKIP_INSTALL to YES for ReactiveCocoa-iOS target.
Merge pull request #7 from jwilling/master
make Xcode 4.4 happy
Merge branch 'master' of github.com:github/ReactiveCocoa
added -addObjectsFromArray:
perform the block immediately if we're already on the main queue
Merge pull request #5 from codykrieger/uitextview-subscribable
run the task asynchronously on the main queue
Merge remote-tracking branch 'github/master' into uitextview-subscribable
Merge branch 'master' of github.com:github/ReactiveCocoa
don't send any messages if the task was canceled
Merge remote-tracking branch 'github/master'
Merge pull request #6 from akiland/master
Merge branch 'master' of github.com:github/ReactiveCocoa
don't send completed, that's crazy
add -asCancelable
NSTask should return a cancelable subscribable
better comment for RACCancelableSubscribable
toSubscribable => rac_toSubscribable
Add i386 to VALID_ARCHS on ReactiveCocoa-iOS target.
Add cancellable support to NSTask.
Helps if we actually connect the connectable subscribable.
added RACCancelableSubscribable
deliver the events on the given scheduler
Remove commented-out nonsense.
Remove NSLog() messages everywhere.
Working swizzling of -setDelegate: and forwarding delegate events through RACDelegateProxy.
Set the delegate method so we know what to pass on to the RACSubscriber.
Initial cut at generic delegate protocol proxy support for event trampolines.
Change file header comments to the correct project name.
Add rac_textSubscribable support to UITextView.
make sure the piping happens on the main thread
added -takeWhileBlock:, -skipUntilBlock:, and -skipWhileBlock:
do the -any before -select:
added -aggregateWithStartFactory:combine:
added -rac_completionSubscribable
added -concat
added -takeLast:
use -any instead of -asCompletion
don't really need -asCompletion
NSTask wrappers now wait for the task to complete to make it easier to reason about where the task's being performed
-[RACTuple objectAtIndex:] is now cool with asking for an object at an index past its count
better comment
added +startWithScheduler:subjectBlock:
Merge pull request #4 from jonsterling/tuple_subscripts
RACTuple: add support for modern object subscripting
added +[NSString rac_readContentsOfURL:usedEncoding:scheduler:]
added +[NSData rac_readContentsOfURL:options:scheduler:]
added -rac_runAsyncWithScheduler:
don't import the NSTask extensions in iOS
don't include the NSTask wrapper in the iOS target
added NSTask, NSFileHandle, and NSNotificationCenter wrappers
Merge branch 'master' of github.com:github/ReactiveCocoa
fixed a few bugs with tearing down the subscribable
added -asCompletion
set the completion and error before calling through to super
moved work to -loadImageAtURL:
don't defer the service request
multicast to an async subject
RAC-ier
publish and autoconnect the request
xcode lolz
better documentation
once all our subscribers are gone, nil out our disposable so that subsequent subscriptions call through to the underlying subscribe again
note that -defer: can be used to go hot => cold
don't need the multicast dance anymore
don't require an async subject anymore
comments
fix since -login no longer returns an async subject
use -injectObjectWeakly:
defer the request until a subscription happens and return just subscribables
use -toProperty:onObject:
import connectable subscribables
added -autoconnect
added -retry: and -retry
use -injectObjectWeakly:
RACCommand is a subject
make it clear that the didSubscribe block is called every time a subscriber subscribes
added -injectObjectWeakly:
added convenience properties to RACTuple
Merge pull request #3 from KingOfBrian/master
added -any, -any:, and -all:
Small fix for cancelPreviousPerformBlock w/ unit test + flag in project to detect future missing selectors
use the git read-only URLs for submodules
synchronize all the things (thanks @julianwalker!)
use a normal subject instead of a replay - fixes #1
pass completed on to the subject
read me work
don't duplicate the tear down work if we're already tearing down
more documentation
added RACGroupedSubscribable
synchronize access to the groups dictionary
added -groupBy:
docs and hard wrapping
Merge branch 'master' of github.com:github/ReactiveCocoa
async subject replays error
replay subjects replay completion and error
synchronize that shit
Give that error block a paramater name for the sake of nicer autocompletion.
Add a convenience method to subscribe to error and completed events.
even more idiomatic cocoa
changed -start: to handle errors in a more Cocoa-y fashion
be consistent about saying subscriber instead of observer
define -selectMany: in terms of select and merge
added -mergeWith: and -merge
spec for -takeUntil:
Merge branch 'master' of github.com:github/ReactiveCocoa
cleaned up some dangling disposables
added +startWithScheduler:block:
license
gave that bitch a link. bitches love links.
talk about bindings
what is it
more read me work
readme formatting
license
copyright GitHub
comment
style
fixed the demo, added comments and avatar loading
don't use the accessor since it converts RACTupleNils to nil
added -let:
API changed
catchToMaybe => asMaybes
stop the subscription on dealloc
fixed the demo project
better iOS-only guard
use rac_textSubscribable
added -rac_textSubscribable
use rac_subscribableForControlEvents:
added a UIControl helper for getting a subscribable from control events
added a simple iOS demo
fixed the iOS/Mac-specific imports
NSButton is Mac-specific
fixed the valid architectures for iOS
use the rac_ prefix for the category methods
added an iOS target for a static lib
comment
added -subscribeOn:
more work on the scheduler
added -allObjects
starting to work on RACCollection
added RACScheduler
hardcore warnings
GITHUB
fixed the default class prefix
fixed scan
send errors and completeds
don't allow a null defer block
copyright github
correct -publish and added -multicast:
observer => subscriber
added -timeout
clean up the KVO disposables earlier and without sending messages to the subject's subscribers
added -tearDown to subscribable
kill the bloc when we stop observing
more documentation
lots more documentation
removed RACAsyncFunctionOperation
added NSArray+RACExtensions
proper return type
don't use instancetype anymore
don't send the callback if the observation has been stopped
brought GHAPIDemo up to speed
Merge branch 'master' of github.com:github/ReactiveCocoa
keep the subject around until we can complete it
removed the RACDemo
stop the KVO trampoline when either the source or observer get released
this doesn't exist anymore
added tuple nils instead of nulls
convert nulls to nils when creating a tuple from an array
create RACTuple to encapsulate the idea of a collection that could contain nils
more edits
ugly
style
more explanation
more README work
subscribable not subscriber
more stuff
more README
hot README action
added RACConnectableSubscribable
don't need RACSequence anymore
added -performBlockOnEachSubscriber: to RACSubscribable
subscriber not observer
fixed -buffer: and added -bufferWithTime:
Add a gitignore. Really? This long without one Josh?
Rx-ier
fixed -toArray
a better -whenAny:
don't keep a subscribable alive anymore if no one subscribes within a runloop
just return self if we're already a scoped disposable
MORE DOCUMENTATION
Merge branch 'master' of github.com:github/ReactiveCocoa
DOCUMENTATION
added -toArray
use -distinctUntilChanged in whenAny
standardized the subscribable's lifecycle
added rac_whenAny:
strongly ref self since we don't want the enumerable to disappear while we're enumerating on it
added support for RAC-based bindings
use -valueForKey: so that we can be sure to get an object
fixed the KVO-to-subscribable lifetimes
fixed some disposables and fixed -distinctUntilChanged
don't create an autoreleased object since there probably isn't an autorelease pool yet
better naming, swizzle dealloc so that our observers get removed sooner
better names
complete the KVO subject when the object is dealloc'd
don't need the predicate stuff in the kvo wrapper anymore
spelling's hard
more renaming
added a category to make it easier to get an object or nil from an array that might contain EXTNils
consolidating
use our prefixed methods
Merge branch 'master' of github.com:github/ReactiveCocoa
added -distinctUntilChanged
more conveniences
namespace the kvo methods too
correct prefix and scope for everything RAC-related
keep self around for the disposal
toSubscribable should just return a subscribable
more correct -finally:
added -defer:
added -takeUntilBlock:
added -aggregate:
fixed -scan
more correct -catch:
added -catchTo:
better -catch:
added -catch:
added -skip:
added -first and -firstOrDefault:
moved the RACAsync functionality into RACSubscribable
renamed do => doNext
real -do implementation
make a copy so we never end up modifying the collection while we're enumerating over it
defer changed to catchToMaybe
10.6 support and set the installation path properly
combineLatest => whenAll
added -combineLatest:
generic GH object
refactoring
support -repeat
fixed -repeat
replaced -defer with -catchToMaybe
use self instead of RACSubscribable
RACSubscribable => RACProperty
added RACScopedDisposable
fix tests
added -switch
added -takeUntil:
corrected -toProperty:onObject:
use toProperty
register the json operation
added -interval:
added RACUnit
renamed Querying -> Operations
added RACFastEnumeration
note that it needs to conform to RACSubscribable
added -scan
words
added -concat:
tests need the querying extension
look for the NSValue-wrapped object
no really fixing tests
fixing tests
tie loginEnabled to the number of active executions of login
set the auth header when the user account is set
use setValuesForKeys:
don't register our custom json operation anymore
remove more json op
don't need the custom json operation anymore
new terminology
renamed the concept of observable to subscribable
stuff
expose disposables
moved the subscribe conveniences to a category
async command should use a replay subject instead of an async since it doesn't complete
implement command as a plain object
stop observing in the dispose block
an attempt to manage lifecycle in a reasonable way
don't dispose when we dealloc
all teh things
dispose of things properly
assert that it's a valid subscriber
first pass at window
dispose
dispose block goodness
everything's using dispose blocks now
dispose block all the things!
call the dispose blocks
-subscribe: now returns a dispose block
don't close the window on errors or completions
corrected the override of -subscribe:
expose RACBehaviorSubject
added RACBehaviorSubject
added -window
more specs
don't strongly reference self
reworked all the things
gotta synthesize
remove RACSequence and RACValue
block
added the -replaySubjectWithCapacity: initializer
refactoring all the things to be based on subjects
don't use the PCH for these universal includes anymore, since Xcode's being a little bitch about it
reorganizing
added finally
added -subscribeTo:
async subject all the things
-addAsyncFunction should use RACAsyncSubjects
return types are now all id
added -repeat and -defer
expose RACReplaySubject and RACAsyncSubject
+subject
+subject
added RACAsyncSubject and RACReplaySubject
formatting
don't need refresh all on here anymore
RACNil doesn't exist anymore
expose more headers
better -windowWithStart:close:
added -windowWithStart:close:
renamed -buffer: and -window: to indicate they only take a count
placeholders
added -window:
added -buffer:
hide the values until we've loaded
added a user view after logging in
don't need to manually unsubscribe anymore
don't underflow our poor unsigned int
perform the async functions in the operation queue
method name changed
don't need to manually unsubscribe anymore
simplified RACAsyncCommand to just take an async function
don't need these classes anymore
unsubscribe when completed or error are sent
don't need to wrap them in commands anymore
use the new method api
expose methods that just return a RACValue
don't need this in the window controller anymore
manually manage `numberOfActiveExecutions`
added the ability to add any block to RACAsyncCommand, provided it returns a sequence
atomic
added -startWith:
added +returnValue:
implemented the do's in terms of -subscribe:
don't need RACReturnPrimitive anymore
added a block that's called whenever someone subscribes
added RACSubject
added RACAsync
unsubscribe after the first next
more cleanup for -until:
-take: is done after it's met its amount
log the user result
fixed loginEnabled
don't need to set the queue manually anymore
implement the execution block just as a subscribeNext: call. of course.
added numberOfActiveExecutions
make sure the command can execute first
added -executeCommand
remove
to the top
just assign it
api changes
and canExecute with the value we get from the queue's operationCount
observe a sequence for canExecute
calling -execute: should always execute, regardless of -canExecute:
expose canExecute as assignable privately
canExecuteValue => canExecute
just call super's -canExecute:
-execute: *always* executes regardless of -canExecute:
don't have a shared operation queue
only sends `next`
-addOperationBlock: => -addOperationYieldingBlock: and it now takes the value passed to -execute:
added -refreshAll
added apis for getting the user's repos and orgs
try a different formatting style
organize
changes
return Maybe's instead of raw values
added methods to create operations for specific api calls
added all the things
brought back unsubscribe on error
reorganized
don't unsubscribe on errors
don't send completed
updated for API changes
lots of unsubscribing
added -unsubscribe: to RACObservable
iterate over a copy of the subscribers so that the subscribers can unregister themselves in their callback blocks
added -until: and -waitUntil:
user account now has a URL endpoint too
fixed -combineLastest:, -merge:, -zip:, and -selectMany: to actually act as their Rx counterparts do
a more sensible -canExecute: for RACAsyncCommand
expose the canExecuteBlock and executeBlock properties in a private header
work on tests
work on tests
set the username and password as soon as the button's clicked
whitespace lolz
alright, seriously correct -selectMany:
failing test since it hasn't really been implemented
-selectMany: will take a queryable
chain that shit
corrected -selectMany:… maybe?
return a RACSequence instead of an id
use -bind:toObject:withNegatedKeyPath:
added -bind:toObject:withKeyPath:transform: and -bind:toObject:withNegatedKeyPath:
added a transformer that takes a block
added -subscribeCompleted:
added a logging-in spinner
added test helpers
do the actual GH API call
added -subscribeError:
added an explicit success value to the async function and operation
add a block that returns an operation instead of adding an operation directly
more docs
added support for adding operations to RACAsyncCommands
test that we can't login while we're already logging in
fixed the tests
enabled by default
disable the login button while we're logging in
we create canExecuteValue now
maxConcurrent => maxConcurrentExecutions
don't include enabledness support directly in NSButton
canExecute depends on the operation count and our allowed number of concurrent operations
moved
use primitive types instead of RACValues
added a convenience method for binding with continuous updates
added a define for succinctly getting an observable from a property
don't need a dedicate BOOL for loginEnabled anymore
unit test that shit
reorganizing and exposing things for testing
changed which herders are exposed
-toSequence: and -toObject:keyPath:
added -toObject:keyPath:
-toSequence: now
-toProperty: => -toSequence:
hooked up success and failure labels
-toProperty: returns itself for easy chaining
doh, set the value's value, not the value itself
thanks Xcode?
async function now returns a RACValue instead of a sequence
more work
adding a new demo
more reorganizing
turned ReactiveCocoa into a framework, broke the demo out into its own project
documentation
better implementation of -take:
moved all the queryable implementations into their own category
types
also send completed
only assert if we actually have async functions to perform
check -canExecute: before executing
command can't be nil
renaming
don't need these in the KVO wrapper anymore
lldb I guess
added subscribeNext:completed:error:
send the error callback
added methods for sending next, completed, and error to the observers
added maxConcurrent to RACAsyncCommand
RACOperation is being replaced by RACAsyncCommand
fleshed out RACAsyncCommand
helps if you actually set the values
work on RACAsyncCommand
changes to RACCommand
reworking RACCommand to more closely resemble its RxUI counterpart
share our scheme, I guess
RACOperation example
moved the block to be the last argument
use -bind:toObservable:
added -bind:toObservable:
RACOperation
-take: example
fixed -take:
restore the original suspendNotifications value after we're done adding
added -take:
added -subscribeNext:completed:
return self instead of the observer to allow for chaining
expose -performBlockOnAllObservers: as a private method
use -selectMany:
implemented -selectMany:
added -zip:
remove -selectMany: for now
our added array should always be the same number of items as our observables, so use RACNil if the observable doesn't have a value
added RACNil
property shouldn't be nil
removed the reduce block from -combineLatest: since that can be done with a subsequent -select:
-whenAny: => -combineLatest:, I think that's more in line with Rx's
don't need to declare the return type
_
added a duplicate button
set the initial enabled value
use _ as a placeholder
use -distinctUntilChanged
added -distinctUntilChanged
use execute instead of setting the value directly
added -execute and -canCurrentlyExecute to RACCommand
trying to think through -selectMany:
select the text field's value first
use the custom synthesizers
custom synthesizers for sequences and values to reduce boilerplate
warn that we're about to blow away their target and selector
better variable names
xcode lolz
added +[RACCommand command]
better formatting
added RACCommand
implemented +merge:
added +value
added -observableValueForKeyPath:
more x
use -subscribeNext:
added -subscribeNext: since that's all we're ever doing so far
use x as the standing for brevity
test some shit
expose -lastObject
added specta and expect for testing
better formatting
changed whenAny: to whenAny:reduce:
disclaimer
README
observe and throttle both fields
RACObservableValue instead
better naming
whoops, reverse that
wall werror guys
that can be a class method
cleaning up
create an observable sequence from a property
more fields!
lame whereAny
set the model instead of the UI
refactor array into sequence
better demo
-selectMany:
prune the backing observing array
all the things
first!
Initial Commit
