build: remove out cache (#36355)
build: make src cache smaller (#36344)
docs: update README.md to use correct twitter handle (#36345)
ci: pin some more action versions (#36343)
ci: pin amannn/action-semantic-pull-request (#36341)
ci: pin version of actions/checkout (#36342)
chore: enable scorecard github action (#35741)
refactor: change defined(MAS_BUILD) to IS_MAS_BUILD() (#36332)
fix: abort ShipIt installation attempt at the final mile if the app is running (#36130)
build: provide moduleVersion to docs-parser directly (#36329)
docs: update tutorials for Forge 6 (#36313)
chore: upgrade to Node.js v18 (#35999)
fix: `app.dock.setIcon()` crash before app ready (#36279)
feat: add app.getPreferredSystemLanguages() API (#36035)
build(deps): bump loader-utils from 1.2.3 to 1.4.1 in /spec (#36281)
chore: remove unsupported OS_FREEBSD flag check (#36273)
build(deps): bump loader-utils from 1.2.3 to 1.4.1 (#36276)
refactor: move draggable regions to WebContents (#36230)
fix: arm linux glibc dependency (#36247)
docs: fix driverId -> deviceId typo (#36246)
feat: Add BrowserWindow option to hide window in Mission Control (macOS) (#36092)
test: re-enable window.open referrer test (#36155)
build: fix building with enable_plugins = false (#36193)
docs: add EOL dates to timeline doc (#36187)
fix: remove undocumented feature and flaky test for webview resize event (#36154)
build: prefix version in uploader script (#36169)
chore: bump chromium to 109.0.5382.0 (main) (#36057)
test: fix flake in will-navigate test (#36153)
docs: add utility process info to tutorial docs (#36074)
docs: correcting main example in WebRequest documentation (#36113)
refactor: handle uncaught promise error (#35484)
build: use npm@7 for npm view command
build: strip v in the getElectronVersion helper
fix: resolve loadURL properly for in-page navigations (#36129)
docs: document that when `invoke` rejects, it gives a different Error (#36127)
build: use python3 for appveyor commands (#36131)
build: ensure get-version runs in the electron git checkout (#36128)
build: determine electron version from tags not files (#36106)
docs: fixed MenuItem documentation to use the same formatting for all role options (#36112)
Bump v23.0.0-nightly.20221024
Bump v23.0.0-nightly.20221021
test: exit properly when `node-spec-runner` validates specs (#36091)
test: disable flaky linux arm/arm64 crash test case (#36094)
refactor: enable OOPIF printing to PDF (#36051)
Bump v23.0.0-nightly.20221020
feat: UtilityProcess API (#34980)
refactor: migrate from asar to @electron/asar (#36070)
Bump v23.0.0-nightly.20221019
fix: printToPDF default margins (#36060)
fix: headless job tracking in printToPDF (#36046)
Bump v23.0.0-nightly.20221018
feat: support `serialPort.forget()` (#35310)
chore: Move draggable regions implementation from NativeBrowserView into InspectableWebContentsView (#35007)
chore: bump chromium to 108.0.5355.0 (main) (#35900)
Bump v23.0.0-nightly.20221017
docs: update VS Code debugger types to remove "pwa-" prefix (#36042)
fix: override app's desktop name and v8 flags in default-app (#35997)
test: re-enable <webview> tag DOM events emits resize event (#36026)
chore: remove useless Node.js V8 patch (#36013)
Bump v23.0.0-nightly.20221014
docs: fix erroneous removal warning for decrementCapturerCount (#36016)
fix: Windows 7 frame showing for frameless non-resizable windows (#35365)
Bump v23.0.0-nightly.20221013
Revert "Bump v23.0.0-nightly.20221013"
test: re-enable power monitor tests on arm64 (#36015)
Bump v23.0.0-nightly.20221013
refactor: use views NonClientHitTest for draggable regions on mac (#35603)
fix: disable `nodeIntegrationInWorker` for certain Worker types (#35919)
docs: use webContents.mainFrame.on() in MessagePort tutorial (#35824)
test: more robust PDF specs (#35979)
build: fix building with enable_ppapi = false (#35988)
Bump v23.0.0-nightly.20221012
chore: remove WebKit leftovers after it was renamed to Blink (#35966)
fix: `webContents.printToPDF` option plumbing (#35975)
docs: remove references to Widevine (#35980)
fix: on-screen-keyboard hides on input blurred in webview (#35921)
test: remove redundant color diffing dependency (#33215)
fix: drag and drop should copy on macOS (#35963)
Bump v23.0.0-nightly.20221011
test: add tests for valid electron module names (#35931)
Bump v23.0.0-nightly.20221010
fix: override `content::ContentMainDelegate::CreateContentClient()` (#35932)
Revert "Bump v23.0.0-nightly.20221010"
Bump v23.0.0-nightly.20221010
fix: expose the built-in electron module via the ESM loader (#35930)
docs: remove pywin32 mention in Windows build instructions (#35940)
fix: add missing #include "base/cxx17_backports.h" (#35945)
Bump v23.0.0-nightly.20221007
Bump v23.0.0-nightly.20221006
chore: cherry-pick c83640db21b5 from chromium (#35924)
fix: only override valid electron module names (#35915)
refactor: eliminate `DecrementCapturerCount` patch (#35710)
build: clean up patch linting errors (#35917)
Bump v23.0.0-nightly.20221005
docs: update supported Mac versions (#35911)
docs: update bluetooth fiddle example event name to trigger correct event (#35894)
Bump v23.0.0-nightly.20221004
chore: update libcxx filenames (#35904)
Revert "Bump v23.0.0-nightly.20221004"
Bump v23.0.0-nightly.20221004
fix: ensure mas builds of the same application can use safestorage (#35864)
build: move from stale GH app to stale action (#35845)
fix: `TryCatch` scope in node_bindings (#35850)
chore: bump chromium to 108.0.5329.0 (main) (#35628)
Bump v23.0.0-nightly.20221003
Bump v23.0.0-nightly.20220930
Bump v23.0.0-nightly.20220929
docs: update breaking changes for v21 (#35820)
Bump v22.0.0-nightly.20220928
feat: replace scroll-touch* with generic input-event (#35531)
build: fix deps workflow tag comparison (#35830)
fix: set display_id in desktop capturer on Linux (#33861)
Bump v22.0.0-nightly.20220927
fix: Handle an electron.d.ts file in a custom build (#33979)
feat: add WebContents.opener and webContents.fromFrame() (#35140)
feat: add support for Web Bluetooth pin pairing (#35416)
build: fix major dependencies update workflow file (#35811)
Bump v22.0.0-nightly.20220926
build: remove unused GitHub app config file (#35797)
docs: minor grammar fixes in tutorial (#35804)
chore: bump node to v16.17.1 (main) (#35800)
fix: potential exception when calling webFrameMainBinding.fromIdOrNull() (#35785)
fix: set macOS crypto keychain name earlier (#34683)
feat: add app.getSystemLocale() method (#35697)
chore: update NMV for Electron 22 (#35772)
docs: update E22 release dates (#35773)
Bump v22.0.0-nightly.20220923
docs: changed event.data to data under the message.port in docs (#35086)
build: make patches owned by patch-owners (formed by upgrades + security) (#35778)
docs: update the link for Introduction to Node.js (#35761)
Bump v22.0.0-nightly.20220922
fix: allow docking DevTools with WCO (#35754)
docs: add forge-overview.md (#35473)
docs: remove claim that HTTPS authenticates the remote server (#35526)
feat: add exposeInIsolatedWorld(worldId, key, api) to contextBridge (#34974)
Bump v22.0.0-nightly.20220921
ci: add blocked/needs-repro issues-helper  (#35605)
fix: WebAuthn Discoverable Credential (Resident Credential) (#35374)
chore: add missing .eslintrc.json files to limit imports properly (#35719)
docs: fix wording mistake in security.md section 4 (#35682)
Bump v22.0.0-nightly.20220920
chore: fix ambiguous reference gcc compile error (#35714)
fix: edge case in app.isInApplicationsFolder() (#35636)
Bump v22.0.0-nightly.20220919
Revert "Bump v22.0.0-nightly.20220919"
Bump v22.0.0-nightly.20220919
feat: add webContents.close() (#35509)
Bump v22.0.0-nightly.20220916
fix: uv_os_gethostname failing on Windows 7 (libuv patch regression) (#35702)
docs: reverse support matrix order (#35699)
build: update `.nvmrc` Node.js version from 14 to 16 (#35676)
build: add stale configuration (#35698)
feat: allow custom v8 snapshots to be used in the main process and the default snapshot in the renderer process (#35266)
build: fix building with enable_basic_printing false (#35687)
fix: EventEmitter is missing properties in sandbox preload script. (#35522)
Bump v22.0.0-nightly.20220915
chore: make macOS spellchecker fns formal no-ops (#35514)
Bump v22.0.0-nightly.20220914
build: make check-symlinks.js aware of BRANDING.json changes (#35579)
docs: add back docs about asar archives (#35563)
docs: add IPC validation guideline link in checklist (#35573)
docs: Markdown linting and typo (#35568)
fix: allow maximizing when window enters tablet mode with WCO (#35617)
fix: remove extra dot in extension (#35618)
feat: expose content-bounds-updated event (#35533)
docs: fix typescript error in code samples (#35641)
Bump v22.0.0-nightly.20220913
docs: Use inline image link in faq.md (#35413)
docs: add performance advice to disable default menu creation (#35525)
fix: potential "Object has been destroyed" error in BrowserWindow.getFocusedWindow (#35520)
Bump v22.0.0-nightly.20220912
Bump v22.0.0-nightly.20220909
fix: ensure history navigations are sandboxed-iframe-aware (#35420)
chore: bump chromium to 107.0.5286.0 (main) (#35590)
chore: remove UnresponsiveSuppressor altogether (#35507)
docs: fix misspelling in fuses (#35609)
docs: update sandbox renderer defaults for Electron 20 (#35379)
fix: Set background for WCO container (#35569)
Bump v22.0.0-nightly.20220908
fix: session.getBlobData never resolves with blob sizes > 65536 (#35277)
docs: improve registerFileProtocol example (#35580)
ci: make sure artifacts are saved for fork PRs (#35593)
chore: move dark mode activation to main_win.cc (#35529)
docs: add fuses and asar integrity docs (#35528)
docs: fix missing includes in code example (#35479)
build(deps): bump ansi-regex from 4.1.0 to 4.1.1 (#35541)
chore: remove no-op force-paint for hidden windows (#35532)
chore: bump chromium to 107.0.5274.0 (main) (#35375)
Bump v22.0.0-nightly.20220906
Revert "Bump v22.0.0-nightly.20220906"
Bump v22.0.0-nightly.20220906
Bump v22.0.0-nightly.20220905
fix: `screen.getCursorScreenPoint()` crash on Wayland (#35503)
Bump v22.0.0-nightly.20220902
Bump v22.0.0-nightly.20220901
feat: webFrameMain.origin (#35438)
chore: remove unneeded SetBackgroundOpaque hack (#35496)
refactor: BrowserView is owned by a BaseWindow (#35511)
chore: drop unresponsive suppressor for menus (#35498)
test: move api-media-handler-spec from spec-main to spec (#35518)
refactor: simplify WebContents::Destroy (#35510)
Bump v22.0.0-nightly.20220831
fix: crash loading non-standard schemes in iframes (#35485)
Bump v22.0.0-nightly.20220830
fix: compensate for title bar height when setting bounds on `BrowserView` (#34713)
chore: bump node to v16.17.0 (main) (#35350)
fix: crash on WebWorker destruction (#35422)
Bump v22.0.0-nightly.20220829
fix: crash when switching origins with emulation settings set (#35466)
chore: use nghttp2's config.h on all platforms (#35449)
docs: update docs description to match sidebar (#35144)
chore: delete implicit fallthrough patch (#35452)
fix: pass rfh instances through to the permission helper (#35419)
build: fix missing patch config dir error (#35451)
test: fix some broken globs for spec-main (#35439)
Bump v22.0.0-nightly.20220825
fix: fullscreen crashing with `roundedCorners: false` (#35421)
chore: remove unused `GuestViewContainer` (#35405)
fix: Node.js `atob` input validation (#35415)
ci: fix appveyor x64 tests (#35406)
ci: fixup doc-only-change on Windows (#35431)
build: fix export patches to work when source directory does not exist (#35432)
Bump v22.0.0-nightly.20220824
Bump v22.0.0-nightly.20220823
fix: add restore event for minimized maximization (#35342)
chore: apply chromium commit 30a32e6 (#35370)
fix: undefined details.requestingUrl from session.setPermissionCheckHandler (#35281)
feat: session.setDisplayMediaRequestHandler (#30702)
Bump v22.0.0-nightly.20220822
build: update libcxx filenames (#35397)
Revert "Bump v22.0.0-nightly.20220822"
fix: ensure chrome colors are initialized (#35034)
Bump v22.0.0-nightly.20220822
chore: update process singleton patch (#35376)
ci: use AppVeyor workflows (#35377)
Revert "Bump v22.0.0-nightly.20220819"
Bump v22.0.0-nightly.20220819
Revert "Bump v22.0.0-nightly.20220818"
Bump v22.0.0-nightly.20220818
fix: don't bypass redirect checks (#35357)
chore: bump chromium to 106.0.5216.0 (main) (#34993)
docs: add dependencies and troubleshooting section to build-instructions (#35345)
Bump v22.0.0-nightly.20220817
fix: promise support with webFrameMain.executeJavaScript (#35292)
build: allow Linux distros to build against system shared libraries (#34841)
fix: Frameless window shows frame while opening (#35189)
test: drop now-empty remote runner (#35343)
Bump v22.0.0-nightly.20220816
fix: IPC emit order in -ipc-ports handler (#35320)
fix: `serialPort.open()` failing (#35306)
fix: add uv_loop_close when object release to fix crash (#35322)
Bump v22.0.0-nightly.20220815
refactor: don't expose deprecate as an internal module (#35311)
test: migrate remaining webview specs to main (#35213)
docs: removes unused import in preload script (#35324)
docs: add Electron deps to license credits file (#35283)
refactor: simplify `Browser::SetLoginItemSettings` (#35303)
Bump v22.0.0-nightly.20220812
build: bump @electron/get to 2.0.0, node to >= 12+ (#35301)
fix: WCO occlusion of DevTools (#35209)
Bump v22.0.0-nightly.20220811
Bump v22.0.0-nightly.20220810
docs: fix getStoragePath return type (#35288)
chore: remove deprecated 'new-window' event (#34526)
fix(docs): fix a typo in section on debugging with VSCode (#35256)
Bump v22.0.0-nightly.20220809
test: migrate asar specs to main runner (#35230)
build: fix error in the `ts-compile-doc-change` step (#35258)
Bump v22.0.0-nightly.20220808
fix: app.relaunch loses args when execPath specified (#35108)
refactor: use optional chaining / nullish coalescing operator (#35217)
test: temporarily disable tests on mas arm64 that are causing a crash (#35226)
build: fix webpack prod failure (#35227)
Revert "Bump v22.0.0-nightly.20220805"
Bump v22.0.0-nightly.20220805
test: migrate remaining chromium specs to main (#35216)
test: migrate node specs to main (#35212)
docs: remove reference to electron/i18n in README (#35228)
Revert "Bump v22.0.0-nightly.20220804"
Bump v22.0.0-nightly.20220804
docs: update tray docs with info for mac menubar icons (#35136)
feat: add WebContents.ipc (#34959)
test: migrate <webview> tag event specs to main runner (#35077)
test: migrate webview attribute specs to spec-main (#35076)
build: upgrade webpack and related deps (#34990)
Revert "Bump v21.0.0-nightly.20220803"
docs: fix link in tutorial (#35192)
Bump v21.0.0-nightly.20220803
docs: update categories to match sidebar (#35196)
fix: consider dock space when showing menu (#35194)
fix: Wayland general CSD fixes (#34955)
chore: fix linking with component ffmpeg (#35178)
chore: update NMV for Electron 21 (#35124)
fix: fail non-fatally when InitLogging fails (#35138)
chore: remove unsupported skiptaskbar linux impl (#35179)
Bump v21.0.0-nightly.20220802
fix: touch events not recognized by WCO on windows (#35117)
fix: modify file extension generation on Windows (#34723)
ci: turn off windows on arm test result comments (#35142)
fix: DCHECK entering fullscreen while loading url (#35111)
fix: ensure native modules use the correct config (#35159)
Bump v21.0.0-nightly.20220801
fix: remove skip-taskbar feature on Linux. (#35123)
docs: new main -> renderers messageChannel example (#34978)
fix: empty result of `webContents.getUserAgent()` (#35069)
Bump v21.0.0-nightly.20220729
docs: update E21 release date (#35122)
ci: switch to GHA for WOA (#35109)
Bump v21.0.0-nightly.20220728
test: migrate shell specs to main process (#35058)
Bump v21.0.0-nightly.20220727
docs: don't wait for ready event to register open-url listener (#35019)
chore: add electon deps to //src gitignore (#35065)
test: migrate the rest of the webFrame tests to main (#35080)
test: migrate more chromium specs to main (#35081)
fix: crash on startup in X11 (#35075)
fix: use win_clang_x64 binary for x86 extract symbols (#35078)
fix: allow setsize to be called within a move or resize for preventDefault (#34843)
test: add process module tests for main process (#35057)
fix: handle WCO pressed state when going maximized -> minimized (#35070)
test: remove duplicate test that is causing hang in Windows (#35071)
test: move chromium spec config to its own folder (#35063)
fix: Make disable_color_correct_rendering patch work again (#35050)
test: migrate process module specs to spec-main (#35056)
Bump v21.0.0-nightly.20220726
test: remove references to robotjs (#35064)
test: remove unused spec/expect-helpers (#35055)
test: migrate nativeImage specs to main (#35062)
test: migrate clipboard spec to spec-main (#35059)
chore: bump node to v16.16.0 (main) (#34853)
fix: properly fire serial-port-added and serial-port-removed events (#34958)
Bump v21.0.0-nightly.20220725
docs: Add missing link to tutorial page (#35035)
refactor: use Get/SetID from views:View in Button (#35022)
docs: update build dependencies for Fedora (#35024)
Bump v21.0.0-nightly.20220722
chore: remove unused WebContents._sendToFrameInternal (#35010)
Bump v21.0.0-nightly.20220721
fix: clean up callback handling in `webContents.print()` (#34894)
refactor: only create webContents after 'will-attach-webview' (#32941)
build(deps): bump terser from 4.6.7 to 4.8.1 (#34987)
fix: add support for --ozone-platform-hint flag on Linux (#34937)
Bump v21.0.0-nightly.20220720
build: update mediastreamdevicescontroller.patch (#34995)
Revert "Bump v21.0.0-nightly.20220720"
Bump v21.0.0-nightly.20220720
chore: bump chromium to 105.0.5187.0 (main) (#34921)
build: consolidate gn templates (#34918)
refactor: unduplicate MediaStreamDevicesController (#34895)
fix: merge crash annotations instead of overwriting (#34795)
Bump v21.0.0-nightly.20220719
fix: delegate to `PrintViewManagerBase` on failed print (#34893)
fix: crash on `BrowserWindow.setEnabled()` (#34904)
test: optionally validate disabled Node.js specs (#34899)
fix: potential hang on print settings failure (#34892)
ci: wait longer for goma to be ready (#34956)
Bump v21.0.0-nightly.20220718
fix: do not define _LIBCPP_ABI_NAMESPACE=Cr for all native modules (#34932)
Bump v21.0.0-nightly.20220715
chore: cherry-pick 5e227bebf193 from v8 (#34931)
Revert "Bump v21.0.0-nightly.20220715"
Bump v21.0.0-nightly.20220715
Revert "Bump v21.0.0-nightly.20220714"
Bump v21.0.0-nightly.20220714
fix: ensure that v8 sandbox isnt enabled for arm (#34914)
chore: bump chromium to 105.0.5173.0 (main) (#34770)
fix: alwaysOnTop browser window option for X11 Linux (#34766)
Bump v21.0.0-nightly.20220713
fix: enable `deviceName` validation on Linux (#34872)
fix: `base::DictionaryValue` usage in APNS notifs (#34897)
feat: Enable APNS registration + notification delivery in macOS apps (#33574)
Bump v21.0.0-nightly.20220712
fix: ensure that requestMediaKeySystemAccess resolves (#34886)
fix: update Windows caption buttons to match Win11 style (#34790)
feat: sandbox preloads by default (#32869)
fix: set Wayland application ID (#34855)
Bump v21.0.0-nightly.20220711
chore: improve run-clang-tidy.ts behavior when filenames < jobs (#34736)
build: use third_party DEPOT_TOOLS when running lint scripts (#34846)
fix: safer check for WCO button updates (#34833)
build: run CI tests on Xcode 13.3.0 (#34850)
Bump v21.0.0-nightly.20220708
fix: ensure v8 pointer compression + sandbox is enabled on 64bit native modules (#34844)
fix: `setRepresentedFilename` with non-default `titlebarStyle` (#34834)
test: add first-party-set chromium tests (#34827)
fix: WCO pressed background state updates (#34771)
Bump v21.0.0-nightly.20220707
Bump v21.0.0-nightly.20220706
chore: modernize base::Value useage in asar/archive (#34796)
chore: update Discord invite links (#34730)
chore: fix typos (#34731)
feat: enable v8 sandboxed pointers (#34724)
chore: modernize Value usage in converters (#34794)
Bump v21.0.0-nightly.20220705
Bump v21.0.0-nightly.20220704
Bump v21.0.0-nightly.20220701
docs: document the removal of IA32 Linux support (#34787)
Bump v21.0.0-nightly.20220630
chore: used nested namespaces (#34737)
chore: modernize ListValue usage in permission manager (#34662)
chore: modernize some devtools code using deprecated ListValue (#34655)
build: remove appveyor hook to defunct service (#34789)
Bump v21.0.0-nightly.20220629
build: fix release_dependency_versions workflow (#34573)
fix: re-enable HKDF crypto functionality (#34767)
fix: `<datalist>` bounds vertical cutoff (#34759)
Bump v21.0.0-nightly.20220628
build: update makeRequest parameters (#34782)
chore: modernize base::Value usage in accessibility_ui (#34666)
chore: update printing patch for main gclient sync (#34777)
fix: resolve symlinks when computing relative asar paths for integrity (#34776)
chore: modernize ListValue usage in gpu info (#34663)
Revert "Bump v21.0.0-nightly.20220628"
build: fix building with enable_basic_printing false (#34711)
Bump v21.0.0-nightly.20220628
Revert "Bump v21.0.0-nightly.20220628"
Bump v21.0.0-nightly.20220628
build(deps-dev): bump got from 6.7.1 to 11.8.5 (#34697)
chore: remove spurious trailing namespace comments (#34732)
chore: bump chromium to 105.0.5129.0 (main) (#34403)
Bump v21.0.0-nightly.20220627
docs: replace broken Windows taskbar images (#34729)
test: use maximize event instead of resize event (#34740)
chore: replace Object.assign with object spread syntax (#34739)
refactor: load webFrame via process._linkedBinding in security-warnings.ts (#34735)
Bump v21.0.0-nightly.20220624
fix: WCO respects maximizable/closable/minimizable (#34677)
Bump v21.0.0-nightly.20220623
chore: modernize ListValue usage in dict_util.mm and related files (#34661)
chore: modernize base::Value usage in shell/renderer/printing (#34682)
test: disable flaky transparent window test (#34660)
Bump v21.0.0-nightly.20220622
chore: chunk filenames when linting C++ files (#34237)
chore: remove undocumented page-title-set webview event (#34533)
fix: allow macOS debug builds to be built (#34536)
docs: expand tutorial (#34604)
refactor: use std::size(args) instead of hardcoded values (#34651)
fix: modernize ListValue in net converters (#34657)
chore: modernize ListValue code in session (#34656)
chore: modernize base::Value usage in WebRequest (#34667)
Bump v21.0.0-nightly.20220621
chore: Revert "build: build & release libcxx objects on darwin (#34586)" (#34680)
Revert "Bump v21.0.0-nightly.20220621"
Bump v21.0.0-nightly.20220621
fix: window button visibility fullscreen interaction (#34530)
chore: move main process only accessible API bindings away from common (#34634)
chore: let result: ReturnType<typeof this._callWindowOpenHandler>; (#34628)
build: build & release libcxx objects on darwin (#34586)
build: mark existing Node.js flakes as dontcare (#34644)
refactor: remove deprecated drag-and-drop code (#34615)
Bump v21.0.0-nightly.20220620
fix: overzealous media key listening on Windows (#34594)
chore: fix BrowserView painting when origin updated (#34581)
fix: performance problem in `crashReporter.start()` on macOS (#34609)
build(deps): bump jpeg-js from 0.4.3 to 0.4.4 in /spec-main (#34607)
refactor: use stubs for gdk-pixbuf dependency (#34077)
chore: cleanup undocumented keys from webFrame.getWebPreference() (#34588)
Bump v21.0.0-nightly.20220617
fix: draggable regions updating on bounds change (#34582)
Bump v21.0.0-nightly.20220616
chore: fix spelling errors in multiple files (#34574)
chore: warn when using the deprecated new-window event (#34528)
fix: make preload calculation identical between sandbox & non-sandboxed (#34531)
Bump v21.0.0-nightly.20220615
feat: add immersive dark mode on windows (#33624)
feat: add panel support for BrowserWindow (#34388)
fix: crash when `setWindowOpenHandler` callback throws (#34523)
test: add missing page-title-updated event spec for webview (#34529)
Bump v21.0.0-nightly.20220614
test: use webContents.setWindowOpenHandler() in specs (#34514)
fix: make navigator.userAgentData non-empty (#34481)
Bump v21.0.0-nightly.20220613
Revert "Bump v21.0.0-nightly.20220613"
Bump v21.0.0-nightly.20220613
chore: remove unused proxy-window-open.snapshot.txt (#34501)
refactor: move duplicate code to RendererClientBase::ShouldLoadPreload helper (#34477)
fix: all files selection logic on linux (#34496)
fix: don't require glibc 2.29+ on linux arm64 builds (#34491)
Bump v21.0.0-nightly.20220610
docs: add macOS height option info (#34451)
Bump v21.0.0-nightly.20220609
fix: update normal bounds prior to minimizing (#34473)
build: update clang-format script (#34286)
Bump v21.0.0-nightly.20220608
chore: use --root instead of --project_root for cpplint (#34456)
fix: html fullscreen transitions stacking (#32905)
Bump v21.0.0-nightly.20220607
Revert "Bump v21.0.0-nightly.20220607"
Bump v21.0.0-nightly.20220607
Revert "Bump v21.0.0-nightly.20220607"
Bump v21.0.0-nightly.20220607
chore: fix nan spec runner on macOS (#34447)
build: switch to --use-color flag for clang-tidy (#34457)
test: fix for flaky renderer crash test (#34452)
Bump v21.0.0-nightly.20220606
build: add --unique option to release notes script (#34296)
docs: fix `did-frame-navigate` example in webFrameMain docs (#34419)
chore: bump node to v16.15.1 (main) (#34424)
Bump v21.0.0-nightly.20220603
fix: fullscreen windows aren't resizable on macOS (#34379)
fix: render process crash handling (#34428)
test: re-enable shared worker webview test (#34338)
Bump v21.0.0-nightly.20220602
Revert "Bump v21.0.0-nightly.20220602"
chore: increase timeout for electron-build step (#34427)
chore: remove redundant @available checks (#34407)
build: disable 32-bit Windows symbol generation (#34412)
Bump v21.0.0-nightly.20220602
fix: crash in WebFrameMain mojo connection when RenderFrameHost is nullptr (#34411)
Revert "Bump v21.0.0-nightly.20220601"
Bump v21.0.0-nightly.20220601
chore: update husky to v8.0.1 (#34343)
ci: cache python install to better deal with download errors. (#34360)
Revert "Bump v21.0.0-nightly.20220601"
Bump v21.0.0-nightly.20220601
chore: bump chromium to 104.0.5073.0 (main) (#34272)
Bump v21.0.0-nightly.20220531
fix: zombie windows when fullscreening and closing (#34378)
refactor: printToPDF should be headless (#33654)
Bump v21.0.0-nightly.20220530
fix: hide content protected windows during screen capture with `ScreenCaptureKitMac` (#34362)
ci: re-enable CalculateNativeWinOcclusion (#34374)
Bump v21.0.0-nightly.20220527
Bump v21.0.0-nightly.20220526
build: trigger mksnapshot/chromedriver releases automatically (#34346)
Revert "Bump v20.0.0-nightly.20220525"
Bump v20.0.0-nightly.20220525
Revert "Bump v20.0.0-nightly.20220525"
Bump v20.0.0-nightly.20220525
fix: esc not working on Windows during fullscreen (#34317)
build: do not checkout chromium for ts docs check (#34331)
Bump v20.0.0-nightly.20220524
chore: use webContents.setWindowOpenHandler() in default-app (#34308)
refactor: return options directly in makeBrowserWindowOptions() helper (#34309)
feat: add support for HIDDevice.forget() (#34210)
chore: add a TRACE call for `crash_reporter::Start()` (#34268)
test: use webContents.setWindowOpenHandler() in specs (#34310)
fix: crash on navigator.serial.getPorts() (#34280)
Bump v20.0.0-nightly.20220523
docs: remove X-Content-Security-Policy header in quick-start.md (#34307)
fix: building node modules with Visual Studio 2017 (#34217)
docs: add height option and color transparency info (#34278)
fix: service worker registration with custom protocols (#34290)
revert: add first-instance-ack event to the `app.requestSingleInstanceLock()` flow (#34297)
ci: Add GitHub token permissions for workflows (#34298)
Bump v20.0.0-nightly.20220520
fix: crash when creating interface for speculative frame (#33919)
Bump v20.0.0-nightly.20220519
fix: DCHECK on `webContents.print()` (#34271)
fix: delayed bounds when moving/resizing and preventing default (#34204)
docs: Update release dates for E20 (#34267)
Bump v20.0.0-nightly.20220518
chore: bump chromium to 103.0.5046.0 (main) (#33906)
docs: added units to <webview>.print() pageSize option (#34088)
fix: WCO crash on bad `titlebarStyle` (#34140)
Bump v20.0.0-nightly.20220517
Revert "Bump v20.0.0-nightly.20220517"
Bump v20.0.0-nightly.20220517
docs: add missing explanation for [angle|dawn]_enable_vulkan_validation_layers = false (#34216)
test: add `setTitlebarOverlay` spec (#34221)
Bump v20.0.0-nightly.20220516
Bump v20.0.0-nightly.20220513
fix: fetching PDF element from `WebLocalFrame` (#34176)
fix: tray icon not highlighting on empty menu (#34173)
Bump v20.0.0-nightly.20220512
chore: upgrade extract-zip for installer (#34166)
test: fix background transparency flake (#34190)
fix: crash when loading extension with missing manifest (#34168)
docs: clarify added/removed events on device APIs (#34177)
fix: call loadUrl when opening new windows from links (#34159)
test: fixup done being called multiple times (#34175)
build: re-enable 32-bit Windows symbol generation (#34162)
docs: fix typo in quick-start.md (#34149)
Bump v20.0.0-nightly.20220511
chore: rm enable_31_bit_smis_on_64bit_arch_and_ptr_compression.patch (#34157)
Revert "Bump v20.0.0-nightly.20220510"
Bump v20.0.0-nightly.20220510
test: run node specs with py3 (#34154)
fix: building node modules with Visual Studio 2017 (#34109)
fix: create singleton pipename from user & executable (#34139)
Revert "Bump v20.0.0-nightly.20220510"
Bump v20.0.0-nightly.20220510
Revert "Bump v20.0.0-nightly.20220510"
Bump v20.0.0-nightly.20220510
Revert "Bump v20.0.0-nightly.20220510"
Bump v20.0.0-nightly.20220510
chore: bump node to v16.15.0 (main) (#33947)
chore: stub gtk_native_dialog_get_type (#34141)
feat: allow customizing browser data location (#33554)
fix: fix a crash in `safeStorage` on Linux (#33913)
build: change upload-to-s3 vars to upload-to-storage (#34105)
Bump v20.0.0-nightly.20220509
docs: add missing ackCallback parameter (#34126)
Bump v20.0.0-nightly.20220506
build: remove ending slash upload-index-json (#34125)
Revert "Bump v20.0.0-nightly.20220506"
Bump v20.0.0-nightly.20220506
build: use azure function to hash assets instead of lambda (#34117)
build: remove S3 uploads (#34104)
refactor: prevent RemoveFromLoginItems() from mounting volumes from login items (#34068)
chore: stop using v8::Locker everywhere (#34078)
test: unflake some more tests (#34084)
fix: offscreen rendering crash on input select (#34069)
Bump v20.0.0-nightly.20220505
build: fix run-clang-format extension matching (#34076)
fix: requestSingleInstanceLock API sometimes hangs (#33777)
refactor: initialize member variables directly (#34046)
Bump v20.0.0-nightly.20220504
test: unflake some focus tests (#34061)
test: fix nativeModulesEnabled in spec/webview-spec.js (#34027)
build: remove dead circle config bits (#34034)
test: fix require('echo') -> require('@electron-ci/echo') (#34026)
Bump v20.0.0-nightly.20220503
fix: make BrowserWindow#isFocused() return false when blur() is called on macOS (#33734)
Handle SIGUSR2 (#33589)
test: skip flaky test on 32-bit Windows (#34021)
test: scope internal test fixtures under `@electron-ci` (#33822)
fix: support mixed-case extensions in Linux file dialogs (#33918)
fix: move FirstPartySets into the browser process (#33998)
Bump v20.0.0-nightly.20220502
build: allow script/spec-runner.js with empty list of runners (#33982)
spec: allow connections to port 2049 (#33983)
Bump v20.0.0-nightly.20220429
fix: fix FirstPartySetsHandler initialization (#33971)
refactor: better solution for resizable frameless DCHECK (#33790)
fix: disable MallocNanoZone on mac (#33704)
Bump v20.0.0-nightly.20220428
build: use smaller resource_class because goma (#33905)
docs: fix return type of setJumpList() in electron.d.ts (#33910)
chore: remove git.io (#33933)
build: ensure sync-done file exists during git cache save (#33949)
build: actually verify az urls too (#33929)
Bump v20.0.0-nightly.20220427
build: improve CI speeds and reduce CI costs (#33904)
build: use dev-cdn instead of sysroots s3 bucket (#33922)
Bump v20.0.0-nightly.20220426
Bump v20.0.0-nightly.20220425
build: fix macos release GN gen (#33915)
ci: update release script to handle new CircleCI configs (#33914)
Revert "Bump v20.0.0-nightly.20220425"
Bump v20.0.0-nightly.20220425
chore: bump chromium to 102.0.4999.0 (main) (#33731)
Revert "Bump v20.0.0-nightly.20220422"
Bump v20.0.0-nightly.20220422
Revert "Bump v20.0.0-nightly.20220422"
Bump v20.0.0-nightly.20220422
Revert "Bump v20.0.0-nightly.20220422"
Bump v20.0.0-nightly.20220422
build: improve circleci config (#33881)
Bump v20.0.0-nightly.20220421
build: fix intermittent compilation failures on macOS (#33768)
chore: backport 7c9b3938d from libuv (#33815)
fix: adopt partition alloc early initialization (#33832)
chore: use semantic-commit-action (#33857)
Bump v20.0.0-nightly.20220420
fix: include accessibility blink strings (#33840)
Bump v20.0.0-nightly.20220419
docs: document when BrowserWindow and BrowserView can be used (#33696)
docs: update security guide regarding ctx isolation (#33807)
Bump v20.0.0-nightly.20220418
chore: fix patch conflicts from 37b7e347 (#33818)
Revert "Bump v20.0.0-nightly.20220418"
Bump v20.0.0-nightly.20220418
fix: potential crash caused by dlopen different gtk libraries (#33650)
Bump v20.0.0-nightly.20220415
Bump v20.0.0-nightly.20220414
Revert "Bump v20.0.0-nightly.20220414"
Bump v20.0.0-nightly.20220414
ci: build python2 from source (#33793)
Revert "Bump v20.0.0-nightly.20220414"
Bump v20.0.0-nightly.20220414
fix: event propagation after exiting fullscreen on Windows (#33757)
ci: manually install python@2 (#33785)
fix: apply senderFrame details to ipcMain port event (#33756)
chore: interpret bytes to string (#33766)
feat: allow `null` when subscribing notification (#33641)
chore: add missing GN dep (#33758)
fix: #ARGB to #RGBA conversion (#33707)
Revert "Bump v20.0.0-nightly.20220412"
Bump v20.0.0-nightly.20220412
Revert "Bump v20.0.0-nightly.20220412"
docs: note reason for is_cfi = false (#33749)
build: add comment for enable_cet_shadow_stack (#33747)
Bump v20.0.0-nightly.20220412
Revert "Bump v20.0.0-nightly.20220412"
Bump v20.0.0-nightly.20220412
build: migrate urllib to python3 (#33737)
docs: note safeStorage.isEncryptionAvailable() needs ready event (#33724)
Revert "Bump v20.0.0-nightly.20220412"
Bump v20.0.0-nightly.20220412
Revert "Bump v20.0.0-nightly.20220412"
Bump v20.0.0-nightly.20220412
build: explicitly run scripts with python3 (#33720)
chore: bump chromium to 102.0.4989.0 (main) (#33557)
test: re-enable disabled ScriptOrModule specs (#33702)
build: use python3 to lint (#33627)
feat: implement chrome.tabs.reload (#33560)
Bump v20.0.0-nightly.20220411
Revert "Bump v20.0.0-nightly.20220411"
Bump v20.0.0-nightly.20220411
Revert "Bump v20.0.0-nightly.20220411"
chore: modify uploaded assets for win-ia32 (#33699)
Bump v20.0.0-nightly.20220411
Bump v20.0.0-nightly.20220408
build: temporarily disable 32-bit Windows symbol generation (#33653)
fix: report more detailed errors in shell.openExternal() on Windows (#33620)
Revert "Bump v20.0.0-nightly.20220407"
Bump v20.0.0-nightly.20220407
docs: recommend setting e.returnValue (#33628)
chore: switch to gender neutral terms (#33532)
chore: use //chrome resources directly (#33626)
Bump v20.0.0-nightly.20220406
chore: combine some smaller MAS patches (#33595)
chore: fix typo in NotifyWindowRequestPreferredWidth method name (#33568)
Revert "Bump v20.0.0-nightly.20220404"
fix: remove usage of private pid API on MAS (#33594)
fix: add missing translation string for ax tree (#33614)
fix: revert "fix: some frameless windows showing a frame on Windows (#32692)" (#33599)
build: disable RDP
Revert "Revert "build: enable RDP for release builds""
Revert "build: enable RDP for release builds"
Bump v20.0.0-nightly.20220404
build: enable RDP for release builds
Revert "Bump v20.0.0-nightly.20220404"
Bump v20.0.0-nightly.20220404
build: enable RDP for release builds
Revert "Bump v20.0.0-nightly.20220404"
Bump v20.0.0-nightly.20220404
Revert "build: enable RDP for release builds"
build: enable RDP for release builds
Revert "Bump v20.0.0-nightly.20220404"
Bump v20.0.0-nightly.20220404
build: upload to AZ as well as S3 (#33573)
docs: mark platform-specific functionality for BrowserWindow (#33512)
fix: create `userData` on requestSingleInstanceLock() if needed (#33559)
Revert "Bump v20.0.0-nightly.20220401"
Bump v20.0.0-nightly.20220401
Revert "Bump v20.0.0-nightly.20220331"
Bump v20.0.0-nightly.20220331
docs: remove "cache" from app.getPath (#33509)
fix: don't unmaximize on macOS if user set max bounds (#33480)
fix: build when pdf component is disabled (#33513)
chore: bump chromium to 102.0.4971.0 (main) (#33454)
test: make test apps' name prefixed with electron-test- (#33511)
ci: save Windows artifacts at end of job in case they fail (#33510)
Bump v20.0.0-nightly.20220330
test: re-enable `test-child-process-stdio-overlapped` (#33502)
chore: remove redundant code in node integration (#33500)
refactor: use posix_spawn instead of NSTask so we can disclaim the spawned ShipIt executable (#33468)
feat: add app.isHidden API for macOS (#32155)
fix: on macOS show BrowserWindow on maximize if not currently shown (#32949)
chore: bump NMV for Electron 20 (#33476)
build(deps): bump ansi-regex from 3.0.0 to 3.0.1 in /spec (#33484)
chore: set v8_typed_array_max_size_in_heap to default (#33496)
feat: add new Squirrel.Mac bundle installation method behind flag (#33470)
docs: fix type of 'value' param in setUserDefaults (#33481)
build(deps): bump minimist from 1.2.5 to 1.2.6 in /spec-main (#33431)
fix: getting focused window with destroyed webContents (#33404)
test: re-enable desktop specs (#33497)
chore: fix moveAbove desktopCapturer spec (#33471)
build(deps-dev): bump minimist from 1.2.5 to 1.2.6 (#33432)
Bump v19.0.0-nightly.20220329
chore: update libuv patch for event loop integration (#31647)
docs: update heading level of webFrame.insertCSS (#33467)
ci: fixup esbuild on macos (#33486)
fix: crash when WindowButtonsProxy references cleared NSWindow (#33069)
chore: update node types version (#33452)
docs: simplify skipTaskbar breaking changes text (#33479)
docs: Use Node's URL parser in the 5th security recommendation (#33463)
build: store last ninja log in artifacts (#32936)
fix: calling of X11 functions when running under Wayland (#33355)
fix: BrowserView background color in webContents (#33435)
docs: Update release dates for E19 and fix typos (#33464)
Bump v19.0.0-nightly.20220328
chore: bump chromium to 102.0.4962.3 (main) (#33447)
Bump v19.0.0-nightly.20220325
fix: non-client windows messages on legacy widget host (again) (#33438)
fix: gn check when //printing component is disabled (#33429)
chore: bump chromium to 102.0.4961.0 (main) (#33091)
Update china npmmirror (#33401)
feat: add WCO title bar style setters (#33066)
docs: fix SCA and postMessage links in web-frame-main.md (#33415)
docs: remove pywin32 from Windows build instructions (#33402)
Bump v19.0.0-nightly.20220324
chore: update out-dated node patches (#33421)
chore: bump node to v16.14.2 (main) (#32833)
ci: abort CI if goma authentication is invalid (#33413)
Revert "test: re-enable webview resize events test (#33220)" (#33409)
fix: libuv patches to address child_process.spawn slowness (#33337)
Bump v19.0.0-nightly.20220323
docs: update Ubuntu version used for Linux prebuilt binaries (#33372)
fix: persist BrowserView content bounds when calculating layout (#32747)
docs: add new IPC validation section to the security tutorial (#33369)
fix: initialize asar support in worker threads (#33216)
chore: use pylint-2.7 (#33232)
test: fix crash on image.crop (#33148)
docs: remove extra $ from npm install command (#33366)
chore: upgrade @electron/get version to ^1.14.1 (#33259)
ci: enable thin LTO on Mac (#33194)
Bump v19.0.0-nightly.20220322
chore: change usages of std::vector with const elements (#33373)
fix: disable SIGUSR1 when --inspect is disabled (#33188)
fix: use stricter options in SecStaticCodeCheckValidity (#33368)
docs: mark skipTaskbar as unsupported on Linux (#33226)
fix: pend bounds change when moving BrowserWindows (#33288)
test: re-enable webview resize events test (#33220)
test: fix and re-enable Network.getResponseBody test (#33227)
fix: IncrementCapturerCount doesn't increase the capturer count (#32973)
fix: NOTREACHED when resizing windows frameless bounds (#33029)
chore: bump @electron/docs-parser version (#33346)
docs: add note about supported versions to issue template (#33348)
feat: support more color formats for `backgroundColor` (#31868)
Bump v19.0.0-nightly.20220321
feat: add nativeTheme.inForcedColorsMode (#32956)
fix: iocp integration when process is reused (#33207)
docs: possible change in tutorial/ipc (#33218)
chore: fix pylint-2.7 errors (#33233)
fix: removed unused imported Objects (#33304)
fix: intialize FPS file in network service (#33339)
fix: ensure ElectronBrowser mojo service is only bound to appropriate render frames (#33323)
Bump v19.0.0-nightly.20220318
Bump v19.0.0-nightly.20220317
docs: update links to Chromium source (#33309)
docs: remove unused images (#33310)
build: fix build by removing usage of removed preloadUrl (#33319)
chore: remove awkward semi-documented preloadURL WebPreference (#33228)
fix: BrowserWindow.fromWebContents should work in browser-window-created (#33257)
fix: crash when destroying node env with pending promises (#33280)
fix: ensure external memory adjustments are balanced (#33266)
build: drop pywin32 usage (#26186)
fix: fiddle ipc code pattern 3 (#33262)
docs: webFrame.insertCSS should mention options arg (#33274)
Bump v19.0.0-nightly.20220316
docs: remove "marked" from process.getBlinkMemoryInfo() (#33263)
feat: allow setting code cache directory (#31154)
docs: specify default for BrowserWindow's center option (#33264)
fix: race condition where webContents can be nullptr during re-focus and a multi-window close sequence (#33063)
docs: reword sentence for better understanding (#33265)
Bump v19.0.0-nightly.20220315
Bump v19.0.0-nightly.20220314
fix: add missing [[maybe_unused]] to IsEnvSet (#33224)
fix: cppgc/node collisions in renderer process (#33252)
fix: prevent UAF crash in setCertificateVerifyProc (#33204)
chore: cherry-pick 2ed58f4 from chromium (#33109)
Bump v19.0.0-nightly.20220311
Bump v19.0.0-nightly.20220310
fix: fire show event when BrowserWindow shown via maximize() (#32979)
Formatted C++ Files According to the clang-format file. (#33158)
fix: propagate unsafely-treat-insecure-origin-as-secure to renderer children (#33189)
Bump v19.0.0-nightly.20220309
fix: settings not persisting across devtools loads (#33120)
feat: warn that preloads will be sandboxed by default in v20 (#32868)
fix: non-client mouse events on WCO-enabled windows (#32871)
fix: crash when showin item in folder on DevTools (#33024)
fix: patches to use BUILDFLAG(IS_WIN) / BUILDFLAG(IS_MAC) checks (#33160)
docs: fix documented return value for getFocusedWebContents (#33170)
Bump v19.0.0-nightly.20220308
chore: add ignore revs file for GH blame UI (#33171)
fix: gracefully fail if app.configureHostResolver is called before ready (#33062)
build: put v8_context_snapshot_generator.dSYM in its own zip file (#33183)
docs: fix missing dependencies in ipc patterns (#33082)
fix: really strip crashpad handler binary (#33126)
Revert "Bump v19.0.0-nightly.20220307"
test: disable newly added tests on WOA (#33143)
Bump v19.0.0-nightly.20220307
Revert "Bump v19.0.0-nightly.20220303"
ci: use larger machine for docs only check (#33141)
docs: Updated list numbering (#32991)
docs: remove platform notices from tutorial titles (#32937)
Bump v19.0.0-nightly.20220303
ci: disable use-thin-lto on Mac only (#33115)
Revert "Bump v19.0.0-nightly.20220302"
Bump v19.0.0-nightly.20220302
Revert "Bump v19.0.0-nightly.20220228"
fix: max window size defaults to 0 (#33025)
fix: disable partition alloc on mac (#33114)
test: BrowserWindow backgroundColor and transparency (#31017)
fix: macOS tray icon alternate images (#33026)
docs: consolidate info docs (#32964)
Bump v19.0.0-nightly.20220228
chore: bump chromium to 100.0.4894.0 (main) (#32852)
Revert "Bump v19.0.0-nightly.20220225"
Bump v19.0.0-nightly.20220225
Update main.js (#33039)
fix: tray garbage collection (#33040)
Bump v19.0.0-nightly.20220224
Revert "Bump v19.0.0-nightly.20220223"
fix: DCHECK when calling app.exit() (#33035)
Bump v19.0.0-nightly.20220223
fix: broken OSR transparent option (#32885)
feat: add ability to configure if window should close when opener closes (#31314)
Revert "Bump v19.0.0-nightly.20220221"
chore: fix out-of-date chromium patch (#33030)
build(deps): bump ajv from 6.10.1 to 6.12.6 (#32865)
build(deps): bump ajv from 6.11.0 to 6.12.6 in /spec-main (#32864)
Bump v19.0.0-nightly.20220221
chore: fix typos (#32985)
fix: don't restore maximized BrowserWindow when calling showInactive (#32870)
fix: command string for windows protocol handler (#32953)
chore: add @electron/wg-security to patches/ CODEOWNERS (#32963)
docs: fix broken link to GNOME notifications spec (#32934)
build(deps): bump ajv from 6.10.2 to 6.12.6 in /spec (#32863)
build(deps): bump pathval from 1.1.0 to 1.1.1 (#32861)
Revert "Bump v19.0.0-nightly.20220216"
fix: stale renderer process on quit (#32888)
build: use gen2 macOS resources for tests (#32935)
chore: update patch to fix CI (#32950)
fix: webContents.openDevTools({mode}) not working (#32829)
chore: backport EPROTOTYPE fixes from libuv (#32856)
chore: error catching in node_bindings (#32858)
build(deps): bump pathval from 1.1.0 to 1.1.1 in /spec (#32859)
docs: update checklists (#32902)
Bump v19.0.0-nightly.20220216
docs: fix relative link in developer documentation (#32844)
Revert "Bump v19.0.0-nightly.20220215"
Bump v19.0.0-nightly.20220215
Revert "Bump v19.0.0-nightly.20220214"
Bump v19.0.0-nightly.20220214
Revert "Bump v19.0.0-nightly.20220211"
Bump v19.0.0-nightly.20220211
Revert "Bump v19.0.0-nightly.20220210"
Bump v19.0.0-nightly.20220210
build: add stack_trace.h to main delegate (#32854)
Revert "Bump v19.0.0-nightly.20220210"
Bump v19.0.0-nightly.20220210
chore: bump chromium to 100.0.4857.0 (main) (#32419)
docs: add IPC doc (#32059)
test: disable the test that makes spec runner hang on exit (#32834)
Bump v19.0.0-nightly.20220209
fix: pointer lock escape handling (#32369)
build: rebuild the `dist_zip`s when the deps get modified (#32713)
Make ElectronBrowser mojo interface frame associated. (#32734)
fix: failure to print on macOS (#32767)
Bump v19.0.0-nightly.20220208
docs: clarify meaning of cssOrigin (#32753)
Bump v19.0.0-nightly.20220207
fix: savePage throw on relative paths (#32728)
Bump v19.0.0-nightly.20220204
test: improve webContents.savePage() specs (#32727)
build: Support cygwin in script/lib/util.py (#32731)
Bump v19.0.0-nightly.20220203
chore: bump NMV for Electron 19 (#32703)
refactor: use QuickLookThumbnailing where applicable (#32456)
test: fix failing tests of focus/blur events of WebContents (#32711)
docs: Update E18 release date (#32665)
fix: WCO window hover on window controls on Windows (#32672)
Bump v19.0.0-nightly.20220202
fix: some frameless windows showing a frame on Windows (#32692)
fix: crash on printer dialog cancellation (#32632)
ci: fixup gclient cache on ubuntu 20 (#32691)
Bump v18.0.0-nightly.20220201
docs: fix typo in BrowserWindow description (#32667)
feat: add focus and blur events for WebContents (#25873)
docs: fix missing tag end in clipboard example (#32673)
fix: transparent window max/unmax event firing (#32643)
fix: expose all serial devices to setDevicePermissionHandler (#32651)
Bump v18.0.0-nightly.20220131
chore: update to latest TypeScript (#32596)
docs: update the build docs for electron to improve doc readability (#32663)
Update config.py (#32666)
docs: Remove the latin words from doc (#32641)
Bump v18.0.0-nightly.20220128
Revert "ci: update to Ubuntu 20.04 docker image (#32614)" (#32656)
fix: css transparent background being lost (#32593)
Bump v18.0.0-nightly.20220127
docs: update context bridge docs about Promises and Errors (#32533)
fix: maxWidth not being respected (#32628)
fix: Add support for Wayland window decorations (#29618)
build(deps): bump node-fetch from 2.6.1 to 2.6.7 (#32599)
fix webRequest.onBeforeSendHeaders' attributes (#32474)
docs: separate the dependency list for ubuntu (#32607)
Revert "Bump v18.0.0-nightly.20220126"
Bump v18.0.0-nightly.20220126
ci: update to Ubuntu 20.04 docker image (#32614)
ci: update ts-compile-doc-change to properly use src cache (#32613)
docs: correct requestSingleInstanceLock parameter (#32595)
fix: webContents.setZoomFactor crash (#32604)
fix: make window without rounded corners closable (#32597)
Bump v18.0.0-nightly.20220125
feat: add WCO height option (#31222)
feat: Added missing info to IAP transaction and product structures (#31739)
feat: add rawHeaders to IncomingMessage (#31853)
Bump v18.0.0-nightly.20220124
refactor: implement ajax() in tests using native fetch instead of jQuery (#32579)
fix: bundle a11y strings in resources (#32564)
Bump v18.0.0-nightly.20220121
Revert "Bump v18.0.0-nightly.20220120"
ci: call autoninja without ninjalog_uploader_wrapper.py (#32569)
fix: undisable AXTextMarker and related APIs on MAS (#32543)
test: disable flaky test on WOA (#32542)
Bump v18.0.0-nightly.20220120
fix: strip crashpad_handler binary (#32540)
fix: undefined backgroundColor (#32517)
fix: crash when saving edited PDF files (#32512)
Bump v18.0.0-nightly.20220119
build(deps): bump shelljs from 0.8.3 to 0.8.5 (#32481)
docs: fix broken images for symbol server setup (#32485)
Clarify will-redirect event doc (#32093)
Remove broken link and update CircleCI's name (#32448)
Bump v18.0.0-nightly.20220118
Bump v18.0.0-nightly.20220117
fix: check for maximized window before unmaximizings (#32438)
fix: maximize/unmaximize firing on linux (#32441)
fix: re-enable PartitionAlloc on macOS (#32442)
docs: fix anchors for broken relative links (#32478)
Bump v18.0.0-nightly.20220114
fix: Corrupted title of alert dialog (#32434)
fix: desktop screen capture on macOS not releasing (#32435)
fix: optional postMessage transfer arg (#32433)
Bump v18.0.0-nightly.20220113
docs: explicitly allow string for MessageBoxOptions.icon (#32422)
fix: use setAspectRatio for frameless window on mac (#32287)
chore: update IsWebContentsCreationOverridden patch (#32421)
feat: expose blowfish cipher family (#32356)
Bump v18.0.0-nightly.20220112
fix: will-attach-webview handler modifying params.instanceId does not break <webview> (#32386)
chore: update DesktopMediaList patch (#32414)
chore: fix incorrect usage of reference (#32413)
chore: update notification provenance patch (#32415)
build: pin colors to v1.4.0 in package.json (#32420)
chore: bump node to v16.13.2 (main) (#32418)
Bump v18.0.0-nightly.20220111
chore: bump chromium to 99.0.4767.0 (main) (#31986)
fix: Support running git-[im,ex]port-patches with Python3 too (#32303)
feat: Add `first-instance-ack` event to the `app.requestSingleInstanceLock()` flow (#31460)
Bump v18.0.0-nightly.20220110
docs: clarify case insensitive dictionary hosting (#32222)
docs: fix note for `will-move` event (#32362)
fix: incorrect `skipTransformProcessType` option parsing in `win.setVisibleOnAllWorkspaces()` (#32364)
docs: left is a valid mode in contents.openDevTools() options (#32372)
Bump v18.0.0-nightly.20220107
fix: Allow npm_config_arch override on mac (#32266)
chore: cleanup spec-main/ambient.d.ts (#32363)
fix: Don't create console window when creating process (#32340)
fix: drop nativeWindowOpen deprecation warning (#32370)
feat: add Substitutions menu roles on macOS (#32024)
feat: remove nativeWindowOpen option (#29405)
chore: deprecate nativeWindowOpen in Electron 17 (#32116)
Bump v18.0.0-nightly.20220106
docs: improve BrowserView example (#32098)
docs: fix wording on testing documentation (#32279)
fix: use allocationtype kold in v8 scriptormodule legacy lifetime (#32339)
Bump v18.0.0-nightly.20220105
Rename patch file to .patch to conform to naming standard which utilizes .gitattributes settings (#32324)
Bump v18.0.0-nightly.20220104
fix: #32141 register wrong command for setAsDefaultProtocolClient for windows (#32220)
docs: correct webFrame description (#32205)
fix: crash caused by app.getLocaleCountryCode() (#32256)
docs: add Bugsnag as a 3rd party crash server (#32053)
[fix] Docs rendering issue with rendering on electronjs quick-start (#32293)
build: remove stale dependency for webrtc desktop capture module (#32304)
Bump v18.0.0-nightly.20220103
docs: fix typo in bug report issue template (#32208)
Bump v18.0.0-nightly.20211231
Bump v18.0.0-nightly.20211229
Bump v18.0.0-nightly.20211228
Revert "Bump v18.0.0-nightly.20211227"
Bump v18.0.0-nightly.20211227
Bump v18.0.0-nightly.20211223
Bump v18.0.0-nightly.20211222
Bump v18.0.0-nightly.20211221
Bump v18.0.0-nightly.20211220
fix: check for single bluetooth listener (#32240)
Bump v18.0.0-nightly.20211217
chore: bump node to v16.13.1 (main) (#32086)
fix: older systems crash when playing media files (#32046)
Bump v18.0.0-nightly.20211216
fix: ensure bluetooth devices are not returned by default (#32178)
Bump v18.0.0-nightly.20211215
Update discord url to electronjs (#32173)
Bump v18.0.0-nightly.20211214
Bump v18.0.0-nightly.20211213
Bump v18.0.0-nightly.20211210
Bump v18.0.0-nightly.20211209
Bump v18.0.0-nightly.20211208
Bump v18.0.0-nightly.20211207
Revert "Bump v18.0.0-nightly.20211207"
Bump v18.0.0-nightly.20211207
Bump v18.0.0-nightly.20211206
fix: window.open not overriding parent's webPreferences (#32057)
refactor: use process type specific electron imports in default_app (#32097)
docs: change China mirror domain to npmmirror.com (#32076)
Bump v18.0.0-nightly.20211203
Bump v18.0.0-nightly.20211202
fix: gtk_native_dialog_run() calls show() internally (#32049)
Bump v18.0.0-nightly.20211201
fix: avoid double call in OnRefreshComplete on aura platforms (#32052)
docs: add debug build (#31979)
Bump v18.0.0-nightly.20211130
Revert "Bump v18.0.0-nightly.20211130"
Bump v18.0.0-nightly.20211130
build: account for path-filtering workflow in release-build script (#32063)
Revert "Bump v18.0.0-nightly.20211130"
Bump v18.0.0-nightly.20211130
build: add CI path-filtering for docs-only changes (#31741)
Bump v18.0.0-nightly.20211129
Bump v18.0.0-nightly.20211126
chore: make Discord invite non-vanity (#31991)
Bump v18.0.0-nightly.20211125
Bump v18.0.0-nightly.20211124
chore: update patches (#31988)
Revert "Bump v18.0.0-nightly.20211124"
Bump v18.0.0-nightly.20211124
chore: bump chromium to 98.0.4706.0 (main) (#31555)
docs: add playwright e2e testing docs (#31961)
fix: console windows from ELECTRON_RUN_AS_NODE instances (#31963)
Bump v18.0.0-nightly.20211123
Bump v18.0.0-nightly.20211122
fix: fix aspect ratio when max width/height is set (#29101)
chore: add ELECTRON_ prefix to C++ include guards (#31925)
build(deps-dev): bump aws-sdk from 2.727.1 to 2.814.0 (#31867)
fix: BrowserView setBackgroundColor needs two calls (#31863)
fix: ninja build failed on some system (#31887)
fix: lint Objective-C header files (#31923)
Bump v18.0.0-nightly.20211119
Bump v18.0.0-nightly.20211118
fix: add resource strings for file selection (#31881)
chore: update nmv to 103 for Electron 18 (#31778)
docs: update cache paths in installation doc (#31803)
Bump v17.0.0-nightly.20211117
Bump v17.0.0-nightly.20211116
chore: use `std::forward()` in `ConvertToV8()` (#31817)
docs: type names changed from wrapper to primitive (#31752)
fix: provide paths for all NetworkContextFilePaths keys (#31777)
fix: make BrowserView aware of owning window (#31796)
fix: change cookie default from NO_RESTRICTION to LAX_MODE (#31800)
fix: media shouldn't open permissions dialog (#31805)
Bump v17.0.0-nightly.20211115
fix: setContentProtection affects BrowserWindow frame (#31768)
fix: crash on browserView.webContents.destroy() (#31794)
fix: correct default text for button labels in gtk dialogs (#31798)
fix: in GTK open dialog, do not preview huge files (#31799)
fix: crash caused by GetHostNameW on Windows 7 (#31804)
Bump v17.0.0-nightly.20211112
Revert "refactor: only create webContents after 'will-attach-webview' (#30311)" (#31785)
Bump v17.0.0-nightly.20211111
doc: Update E17 release dates (#31786)
chore: move libs only used in browser out of common (#31780)
Bump v17.0.0-nightly.20211110
fix: generate angle brackets in release notes (#31757)
refactor: merge duplicate code from sandboxed/non-sandboxed renderer init (#31755)
fix: BrowserView setBackgroundColor() (#31746)
fix: failing Node.js certificate spec (#31748)
Bump v17.0.0-nightly.20211109
chore: cleanup obsolete lib/common/remote/ipc-messages.ts (#31756)
test: fix crash in electron::NativeWindowMac::Close() (#31750)
refactor: remove duplicate contextIsolation from getWebPreference() (#31730)
Bump v17.0.0-nightly.20211108
chore: remove Breakpad tests for crashReporter on Linux (#31729)
refactor: move certificate_manager_model to shell (#31631)
fix: <webview> background transparency (#31722)
Bump v17.0.0-nightly.20211105
fix: clipboard.writeBuffer raw format access (#31116)
test: deflake <webview> tag loads devtools extensions on WOA (#31702)
fix: crash dump location on Linux (#31668)
Bump v17.0.0-nightly.20211104
fix: second-instance additionalData parameter (#31661)
fix: apply transparency settings to WebContentsPreferences (#31685)
refactor: use upstream AutofillDriverFactory diffs (#31676)
fix: incorrect Content-Disposition serialization (#31669)
Bump v17.0.0-nightly.20211103
refactor: replace deprecated DISALLOW_COPY_AND_ASSIGN (#31633)
Bump v17.0.0-nightly.20211102
fix: do not run dialog callback inside transaction commit (#31606)
chore: bump node to v16.13.0 (main) (#31607)
test: fix test-datetime-change-notify after daylight change (#31654)
fix: clipboard.read() to recognize custom types (#31623)
fix: use disable-hid-blocklist to allow FIDO (#31626)
Bump v17.0.0-nightly.20211101
fix: crash on close window when webContents destroyed (#31620)
Bump v17.0.0-nightly.20211029
fix: navigator.keyboard.lock() not working (#31572)
Bump v17.0.0-nightly.20211028
docs: update test automation doc (#31506)
fix: use shorter paths for creating singleton sockets (#31608)
Bump v17.0.0-nightly.20211027
chore: fix supported versions automation (#31602)
docs: update development-related documentation (#31043)
docs: link to Apple developer docs for `app.ready` event (#31583)
chore: update chore_add_context_to_context_aware_module_prevention.patch (#31579)
Bump v17.0.0-nightly.20211026
fix: clipboard.read() crash (#31566)
chore: fix malformed mojom::CreateNewWindowParams patch (#31573)
feat: add webContents.getMediaSourceId() method (#31204)
fix: do not trigger CSP violations when checking eval (#30991)
build: retry hasher function if it fails first time (#30899)
feat: add `webContents.getPrintersAsync()` (#31023)
chore: bump node to v16.12.0 (main) (#31518)
fix: silent print settings (#31489)
docs: remove Nw.js comparison document (#31053)
docs: win.getParentWindow() returns BrowserWindow | null (#31548)
Bump v17.0.0-nightly.20211025
Bump v17.0.0-nightly.20211022
chore: import base/macros.h into asar archive.h (#31557)
Revert "Bump v17.0.0-nightly.20211022"
Bump v17.0.0-nightly.20211022
fix: vibrant window should have transparent background (#31493)
fix: MediaMetadata not working properly (#31492)
chore: bump chromium to 96.0.4664.4 (main) (#31317)
Bump v17.0.0-nightly.20211021
Bump v17.0.0-nightly.20211020
fix: don't use private enterprise APIs in MAS build (#31482)
fix: remove 'NOTREACHED()' from 'GetWindowResizeEdge' (#31470)
fix: ensure TracingAgent in place for SWs (#31459)
Bump v17.0.0-nightly.20211019
fix: link to image (#31454)
docs: add window customization guide (#31054)
fix: add isDestroyed check (#31208)
Avoid Undefined Variable In printToPdf Example (#31455)
Bump v17.0.0-nightly.20211018
Bump v17.0.0-nightly.20211015
feat: Add data parameter to `app.requestSingleInstanceLock()` (#30891)
feat: warn when ipcRenderer.sendSync() called with no listeners for channel (#31344)
fix: mac window crash native theme update (#31329)
fix: reset render_frame_disposed_ after render frame host change (#31401)
fix: event with invalid timestamp in trace log (#31349)
fix: generate valid config.gypi (#31404)
Bump v17.0.0-nightly.20211014
chore: bump node to v16.11.1 (main) (#31369)
Bump v17.0.0-nightly.20211013
Revert "Bump v17.0.0-nightly.20211013"
fix: also pass securityOrigin to media permissions request handler (#31357)
test: fix flaky contentTracing.startRecording spec (#31409)
Bump v17.0.0-nightly.20211013
test: re-enable failing Node.js specs (#31315)
Bump v17.0.0-nightly.20211012
docs: update Versioning doc (#31248)
fix: black window on screen capture when content protection is enabled (#31340)
Bump v17.0.0-nightly.20211011
chore: remove BoringSSL patch redundancy (#31323)
chore: update false to use analogous function in SetGroups (#31325)
fix: correctly notify WebViewGuestDelegate when webview is detached (#31350)
docs: nativeWindowOpen default was changed in Electron 15 (#31345)
Bump v17.0.0-nightly.20211008
chore: update E17 node module version (#31282)
Bump v17.0.0-nightly.20211007
fix: crash on missing render frame (#31289)
feat: add commandLine.removeSwitch (#30933)
chore: refactor persisting permission granted to serial ports (#31181)
Bump v17.0.0-nightly.20211006
docs: add missing 'context-menu' event to webview-tag.md (#31277)
test: add missing context-menu event spec for <webview> (#31280)
chore: bump chromium to 96.0.4647.0 (main) (#30814)
chore: remove Node.js patch on Module.globalPaths (#31275)
refactor: only access memory coordinator interface from browser process (#31295)
fix: return HTNOWHERE in resize hit test to allow draggable regions to kick in when required (#30925)
Bump v17.0.0-nightly.20211005
chore: add logging for print_backend failures (#29884)
fix: "Failed to serialize arguments" when emitting 'context-menu' for webview (#31259)
Bump v17.0.0-nightly.20211004
feat: make desktopCapturer main-process-only (#30720)
fix: dialog is not defined (#31180)
fix: fix typo in description of secureDnsMode (#31255)
Bump v17.0.0-nightly.20211001
fix: Enable X509_V_FLAG_TRUSTED_FIRST flag in BoringSSL (#31213)
Bump v17.0.0-nightly.20210930
chore: remove redundant 10.11 @avilable checks (#31184)
fix: draggable regions in BrowserViews are independent (#31085)
build: Explicitly pass the project root to cpplint.py (#31156)
chore: fix pylint (#31138)
Bump v17.0.0-nightly.20210929
fix: BrowserView drag now delegates to the OS when possible (#31114)
Bump v17.0.0-nightly.20210928
chore: bump node to v16.10.0 (main) (#31094)
Bump v17.0.0-nightly.20210927
refactor: use native WeakRef instead of v8util.weaklyTrackValue() (#31153)
fix: .lldbinit config stale (unavailable) (#31108)
Revert "Bump v17.0.0-nightly.20210927"
Bump v17.0.0-nightly.20210927
Revert "Bump v17.0.0-nightly.20210927"
Bump v17.0.0-nightly.20210927
Revert "Bump v17.0.0-nightly.20210927"
docs: Update Branch Name (#31106)
fix: crash in v8 due to regexp reentrancy (#31102)
fix: running tests with release build (#31092)
Bump v17.0.0-nightly.20210927
fix: crash creating private key with unsupported algorithm (#31087)
fix: avoid double free when destroying WebContents (#31104)
Bump v17.0.0-nightly.20210924
chore: remove obsolete chunk of BoringSSL patch (#31086)
test: re-enable some Node.js specs (#31077)
chore: remove gin::Wrappable crash keys (#31075)
fix: first mouse not dragging BrowserView (#31062)
Bump v17.0.0-nightly.20210923
feat: add support for WebHID (#30213)
feat: add width option to dialog.showMessageBox() (#30474)
fix: startDrag params type incorrect (#31034)
fix: update Windows' cache after changing window's style (#31021)
chore: clarify new-window fix comment (#31069)
fix: proper localization when using GtkFileChooserNative (#30888)
Bump v16.0.0-nightly.20210922
build(deps): bump tar from 4.4.15 to 4.4.19 (#30776)
feat: add frame to context-menu event params (#30831)
docs: update glossary (#30874)
docs: update public timeline for E16 (#31000)
fix: propagate window.open settings to child window (#31031)
Bump v16.0.0-nightly.20210921
fix: maximized state calculation for non-resizable windows (#30989)
feat: add isMainFrame argument to 'certificate-error' event (#30879)
fix: suppress insecure resource warning for more local hostnames (#30885)
fix: transparency on child windows being lost (#31003)
chore: add wg-security as required reviewer for security-warnings.ts (#30987)
Bump v16.0.0-nightly.20210920
refactor: make `InitWithWebContents` and `InspectableWebContents` take a `unique_ptr` (#30920)
fix: disabling and enabling resizability on macOS (#30999)
Bump v16.0.0-nightly.20210917
chore: update links of documentation of chromes (#30959)
fix: links to images (#30990)
Bump v16.0.0-nightly.20210916
fix: add casing for WCO edge (#30938)
chore: update E16 node module version (#30774)
docs: add link to @electron/fuses (#30978)
chore: bump node to v16.9.1 (main) (#30919)
fix: prevent navigator.fonts.query() from crashing (#30930)
Bump v16.0.0-nightly.20210915
docs: update context isolation doc (#30898)
chore: correct hierarchy of BrowserWindow headings (#30905)
fix: Building on macOS with is_debug true (#30913)
fix: always include pepper flash font file (#30928)
Bump v16.0.0-nightly.20210914
refactor: reuse upstream //shell_dialogs (#30663)
fix: remove conflicting RunFileChooserEnd for Mac (#30935)
fix: delete rfh after open/save dialog done (#30916)
Bump v16.0.0-nightly.20210913
Bump v16.0.0-nightly.20210910
chore: fix compile errors (#30903)
feat: add support for validating asar archives on macOS (#30667)
Bump v16.0.0-nightly.20210909
chore: bump node to v16.9.0 (main) (#30867)
Bump v16.0.0-nightly.20210908
refactor: remove dead code in NeedsCompleteGpuInfoCollection (#30855)
docs(protocols): simplify packaging section & cleanup  (#30832)
feat: warn when crash key name is longer than 39 bytes (#30742)
feat: serialize NativeImage over ipc (#30729)
docs: Update windows info for auto-updater (#30538)
Bump v16.0.0-nightly.20210907
fix: show maximized frameless window (#30804)
Bump v16.0.0-nightly.20210906
Revert "Bump v16.0.0-nightly.20210906"
refactor: use getter for frame in webrequest details (#30830)
Bump v16.0.0-nightly.20210906
chore: move native-image.ts back into common (#30838)
docs: updated webview tag documentation to accurately reflect preload behavior with asar archives (#30768)
fix: BrowserWindow backgroundColor (#30778)
fix: devtools not resizable on Windows (#30823)
chore: follow-up to roll 95.0.4612.5 (#30835)
chore: move global_menu_bar_registrar_x11 out of chromium_src (#30837)
refactor: simplify desktop_capturer patch (#30685)
refactor: Convert ProcessSingleton changes to patch (#30594)
docs: move module creation guide to /development (#30826)
Bump v16.0.0-nightly.20210903
Bump v16.0.0-nightly.20210902
build: temporarily revert broken dump_syms changes in breakpad (#30825)
Revert "Bump v16.0.0-nightly.20210902"
feat: deprecate desktopCapturer.getSources in the renderer (#30721)
Bump v16.0.0-nightly.20210902
ci: fix setCertificateVerifyProc tests (#30799)
fix: remove extension warning that do not have any impact (#29695)
feat: add 'dom-ready' event to WebFrameMain (#29290)
chore: bump chromium to 95.0.4629.0 (main) (#30676)
ci: ignore pdb download failure (#30785)
Bump v16.0.0-nightly.20210901
docs: fix code example in process-model.md (#30690)
fix(linux): OpenURI portal support for shell.showItemInFolder() (#30716)
docs: improve documentation about macOS entitlement usage security (#30740)
feat: add app.configureHostResolver (#30576)
docs: add remote removal to E14 breaking changes (#30769)
chore: bump node to v16.8.0 (main) (#30714)
Bump v16.0.0-nightly.20210831
feat: add support for the U2F Web API (#30438)
Bump v16.0.0-nightly.20210830
fix: remove ipc wrapper for nativeImage.createThumbnailFromPath (#30728)
feat: add webContents.fromDevToolsTargetId() (#29399)
Bump v16.0.0-nightly.20210827
Bump v16.0.0-nightly.20210826
fix: titlebar and buttons state under simple fullscreen (#30671)
docs: feature_request additional information not required (#30684)
Bump v16.0.0-nightly.20210825
feat: add <webview>.sendToFrame() / frameId to 'ipc-message' event (#30451)
docs: explain the null webContents case in permission checks (#30645)
fix: crash when using TouchBarScrubber arrow button (#30661)
Bump v16.0.0-nightly.20210824
chore: bump chromium to 95.0.4612.5 (main) (#30503)
docs: remove link to outdated examples from README (#30648)
feat: add <webview> 'did-redirect-navigation' event (#30457)
Bump v16.0.0-nightly.20210823
chore: bump node to v16.7.0 (main) (#30350)
Bump v16.0.0-nightly.20210820
Revert "fix: DCHECK on reload when forcefullyCrashRenderer() is called (#30544)" (#30646)
build: embed binary checksums in the npm package (#30611)
build: add nvmrc file (#30612)
ci: drop with_tags with_branch_heads from sync on appveyor (#30601)
Bump v16.0.0-nightly.20210819
fix: WebFrameMain mojo pipe not reset (#30629)
docs:  typo in launch-app-from-url-in-another-app.md (#30566)
docs: update Hazel information (#30517)
docs: remove unused Desktop Environment Integration doc (#30577)
fix: change gin_wrappable to scoped crash key (#30578)
refactor: dynamically search defines from node (#30563)
fix: documentEdited with non-default titlebarStyle (#30565)
build: remove redundant --ignore_locks from appveyor (#30591)
fix: cross-origin navigation disposing WebFrameMain instances (#30076)
fix: DCHECK on reload when forcefullyCrashRenderer() is called (#30544)
chore: delete unused content_tracing.idl (#30554)
Bump v16.0.0-nightly.20210818
fix: ensure web_contents() is alive before grabbing view (#30571)
fix: media key globalShortcuts on macOS (#30552)
refactor: simplify <webview> event dispatch (#30458)
Bump v16.0.0-nightly.20210817
fix: {exit|enter}-html-fullscreen emitted after esc in webview (#30537)
fix: handle nullish WebContentsView in UpdateDraggableRegions (#30556)
build: fix gclient config file
build: add basic codespaces configuration (#30528)
Bump v16.0.0-nightly.20210816
 docs: clarify platform-specific usage of the acceptFirstMouse option (#30522)
docs: uniformize tutorial titles (#30527)
fix: persist BrowserView background color when bounds offscreen (#30510)
ci: update git on CI machines (#30526)
build: manually pull 64bit dugite for 32bit tests (#30531)
build: fix publish-to-npm script post requests migration
fix: disable kWindowCaptureMacV2 for desktopCapturer (#30507)
build: do not excessively log response bodies
build: ensure getAssetContents is called in a async wrapper fn
Bump v16.0.0-nightly.20210813
build: use basic auth to trigger CI if either a username OR password is provided
Revert "Bump v16.0.0-nightly.20210813"
Bump v16.0.0-nightly.20210813
build: do not pass undefined to Auth header in CI scripts
Revert "Bump v16.0.0-nightly.20210813"
Bump v16.0.0-nightly.20210813
build: fix release CI jobs start script (#30521)
Revert "Bump v16.0.0-nightly.20210813"
Bump v16.0.0-nightly.20210813
Revert "Bump v16.0.0-nightly.20210813"
Bump v16.0.0-nightly.20210813
refactor: remove all usages of the legacy request module (#30492)
Bump v16.0.0-nightly.20210812
chore: bump chromium to 94.0.4590.2 (main) (#30274)
ci: make arm64 macos test cleanup more resilient (#30495)
fix: explicitly define REFGUID from ::GUID&, not base::GUID (#30442)
build: update remark (#30493)
feat: enable windows control overlay on Windows (#29600)
Bump v16.0.0-nightly.20210811
build(deps): bump path-parse from 1.0.6 to 1.0.7 (#30480)
repl: fix crash when SharedArrayBuffer disabled (#30456)
ci: cleanup keychain after tests on arm64 mac (#30472)
Bump v16.0.0-nightly.20210810
docs: add missing <webview> event documentation (#30450)
docs: fix camelcase in menu example (#30341)
fix: mouse doesn't work on frameless browserwindows (#30447)
fix: respect image animation policy pref (#30403)
Bump v16.0.0-nightly.20210809
Bump v16.0.0-nightly.20210806
fix: build SetCrashKeyGW without tray on Windows (#30437)
Revert "Bump v16.0.0-nightly.20210806"
Bump v16.0.0-nightly.20210806
feat: add `electron.safeStorage` encryption API (#30020)
chore: more crash-keys for gin::Wrappable debugging (#30404)
build: use fully qualified path names for deps (#30414)
feat: add fuses for NODE_OPTIONS and --inspect (#30190)
build: rebase release branch before reverting bump (#30400)
Bump v16.0.0-nightly.20210805
build: bust the deps cache on windows (#30401)
docs: crashpad on linux lands in 16, not 15. (#30387)
Bump v16.0.0-nightly.20210804
fix: move window buttons in-place on macOS (#30322)
build: fix building with enable_desktop_capturer = false (#30372)
feat: enable sandbox by default in limited circumstances (#30197)
fix: console window popping up when --enable-logging passed on windows (#30375)
feat: switch to crashpad on linux (#30278)
refactor: only create webContents after 'will-attach-webview' (#30311)
Bump v16.0.0-nightly.20210803
fix: crash due to race between attach and destruction of webview (#24344)
Bump v16.0.0-nightly.20210802
fix: toggleDevTools menu role closes devtools window (#29922)
docs: update to the use of arrow functions in line with the style guide (#30194)
feat: Allow detection of MITM HTTPS proxies like ZScaler (#30174)
build: update build images to update npm and node (#30359)
fix: respect LogJsConsoleMessages feature in InspectableWebContents::DidAddMessageToConsole (#30312)
Bump v16.0.0-nightly.20210730
chore: update deps (#30339)
fix: BrowserViews not painting their WebContents (#29919)
chore: remove experimental from navigator.serial implementation (#30237)
fix: use contentAspectRatio not aspectRatio (#30305)
fix: guard against missing native view (#30304)
Bump v16.0.0-nightly.20210729
refactor: remove guestInstanceId from WebPreferences (#30280)
build: set the export goma auth fallback flag for the control process (#30313)
docs: create documentation for browser api (#30071)
test: deflake crashReporter.getLastCrashReport test (#30276)
Bump v16.0.0-nightly.20210728
fix: Add missing items to menuItem.role documentation (#30217)
refactor: move related code to makeWebPreferences in guest-view-manager.ts (#30272)
feat: partially support chrome.tabs.update (#30069)
chore: update publish to npm to use GitHub token (#30275)
Bump v16.0.0-nightly.20210727
fix: type internal APIs that can return null properly (#29852)
fix: persist permission granted to serial ports (#30209)
fix: update traffic lights position for macOS 11 (#30263)
refactor: remove base::Value from WebContentsPreferences (#30193)
chore: bump chromium to 94.0.4584.0 (main) (#30030)
Bump v16.0.0-nightly.20210726
docs: update title of guide (#30205)
Bump v16.0.0-nightly.20210723
fix: increase stack size on windows x86 (#29474)
fix: process.exit crash in nativeWindowOpen (#30218)
Bump v16.0.0-nightly.20210722
chore: add additional crash key to gin::Wrappable (#30161)
Bump v15.0.0-nightly.20210721
build: handle release failure by existing with code 1 (#30216)
Bump v15.0.0-nightly.20210720
build: update version-bumper to support alpha (#30165)
docs: mention sandboxing in security docs (#30147)
feat: support crashpad on linux (#29719)
chore: remove unused getWebPreferences method (#30160)
docs: update default branch for Electron Packager API links (#30175)
docs: Ffx broken context isolation link in sandbox docs (#30177)
Bump v15.0.0-nightly.20210719
Bump v15.0.0-nightly.20210716
fix: allow colored tray titles when font type is specified (#30146)
fix: BrowserWindow transparency not working (#30136)
chore: bump node to v16.5.0 (main) (#30031)
Bump v15.0.0-nightly.20210715
fix: handle redirects within registered protocols (#29796)
fix: double traffic lights on exit fullscreen (#30114)
feat: add signal option to dialog.showMessageBox (#26102)
docs: update supported versions to match new release cadence (#30121)
docs: add runtime.reload as supported extension api (#29925)
spec: disable flaky fullscreen test (#30141)
docs: fix fiddle path (#30139)
fix: use correct userData path when unbundled (#30113)
Bump v15.0.0-nightly.20210714
Update quick-start.md (#30064)
docs: add <webview> 'did-attach' event documentation (#29899)
fix: pressing ESC should exit fullscreen from webview (#30063)
feat: expose location and modifiers on before-input-event (#29850)
chore: update releases to 8 weeks in CONTRIBUTING (#30115)
docs: Update timeline for E15 alpha announcement (#30109)
feat: continue-activity event is extended to support webpageURL property (#30042)
Bump v15.0.0-nightly.20210713
spec: fix check for electron_common_testing binding in logging-spec.ts (#30086)
chore: cherry-pick 9bab573a37 from chromium (#30084)
test: disable failing node tests (#30096)
build: decode error output as utf8 (#30093)
fix: crash when invoking login callback synchronously (#30068)
fix: return RGBA values from getSystemColor (#30055)
chore: disable fullscreen test on mac arm (#30083)
Bump v15.0.0-nightly.20210712
chore: fix flaky fullscreen inheritance test (#30081)
chore: remove unneeded conversions between wstring and u16string (#30047)
fix: window ordering on mac (#29857)
Bump v15.0.0-nightly.20210709
docs: modernize protocol-handler docs (#29380)
Bump v15.0.0-nightly.20210708
docs: move webRequest filters definition to structures/web-request-filter.md (#29900)
feat: add missing resourceType conversions for webRequest listener details (#29902)
build: fix building with enable_plugins = false (#30040)
Bump v15.0.0-nightly.20210707
Revert "Bump v15.0.0-nightly.20210707"
Bump v15.0.0-nightly.20210707
docs: mention contextIsolation in ipc-main example (#29918)
Bump v15.0.0-nightly.20210706
chore: bump chromium to 93.0.4566.0 (main) (#29980)
fix: download the arm64 version of Electron when running node under rosetta (#29953)
docs: match css filename in dark-mode.md (#29936)
chore: correct spelling of is_quitting in electron::Browser (#29948)
chore: bump node to v16.4.1 (main) (#29994)
Bump v15.0.0-nightly.20210705
fix: build error caused by extra ] (#30015)
fix: self.module.paths not working in web workers (#29955)
docs: remove `Experimental` from `contextBridge.exposeInMainWorld` (#29985)
fix: do not leak NSUUID (#29990)
docs: remove mention of node-mac-notifier (#29991)
Bump v15.0.0-nightly.20210702
chore: remove unused _grantOriginAccess method (#29976)
fix: webview should maximize on requestFullscreen (#29952)
chore: cleanup usages of const char* (#29906)
chore: clean up forward declarations (#29904)
feat: enable window controls overlay on macOS (#29253)
Bump v15.0.0-nightly.20210701
build: add support for spawning builds for a specific commit on appveyor (#29971)
fix: honor user-defined Downloads directory (#29938)
fix: potential crash on macOS app exit (#29941)
fix: correctly propagate title updates for window with no navigation entries (#29946)
refactor: modify Node.js options object directly (#29939)
Bump v15.0.0-nightly.20210630
Revert "Bump v15.0.0-nightly.20210630"
Bump v15.0.0-nightly.20210630
fix: crash when clicking links with target=_blank from webview (#29874)
feat: add MenuItem.userAccelerator property (#26682)
chore: set python interpreter to python3 in script/spec-runner.js (#29740)
chore: bump chromium to 93.0.4558.0 (main) (#29895)
Bump v15.0.0-nightly.20210629
fix: geolocation crashes electron on macOS (#29343) (#29913)
docs: remove requestHeaders in webRequest.onHeadersReceived (#29907)
chore: bump node to v16.4.0 (main) (#29699)
Bump v15.0.0-nightly.20210628
chore: remove unused using and namespace declarations (#29892)
Bump v15.0.0-nightly.20210625
chore: bump chromium to 93.0.4552.0 (main) (#29862)
fix: properly order out child windows (#29821)
fix: Inspector method overrides when contextIsolation enabled (#29841)
fix: stop window.open from hanging when prevented (#29851)
Bump v15.0.0-nightly.20210624
build(deps): bump lodash from 4.17.20 to 4.17.21 in /spec (#29067)
fix: deny instead of canceling when certificate-error passes false (#29826)
Bump v15.0.0-nightly.20210623
fix: ensure set vibrancy with invalid value is a no-op (#29795)
fix: child window alwaysOnTop level persistence (#29813)
chore: remove revert_remove_contentrendererclient_shouldfork.patch (#29842)
chore: bump chromium to 93.0.4550.0 (main) (#29751)
docs: fix broken markdown in dialog.md (#29782)
Bump v15.0.0-nightly.20210622
fix: properly handle optional requestHeaders with onBeforeSendHeaders (#29798)
fix: allow ppapi processes access to resource bundle on all platforms (#29827)
refactor: migrate AdaptCallbackForRepeating to SplitOnceCallback (#29825)
Bump v15.0.0-nightly.20210621
fix: do not cancel CORS preflight request on proxy auth. (#29266)
fix: microtasks policy in CreateEnvironment (#29531)
fix: relax app.getLocaleCountryCode() test (#29679)
fix: update Squirel.Mac to fix CPU spin during update (#29791)
chore: tune-up electron::api::NetLog (#29534)
docs: fix frontmatter for Tray tutorial (#29788)
fix: flakey extension bg page test (#29744)
fix: fix hover state not clear bug when BrowserWindow is not resizable (#611) (#29721)
build(deps-dev): bump ws from 7.2.1 to 7.4.6 in /spec-main (#29421)
ci: cleanup electron dirs after running tests on arm (#29769)
Bump v15.0.0-nightly.20210618
fix: select element not working on Windows (#29742)
chore: remove unused and broken ipcRendererInternal.sendTo() (#29743)
ci: run linux arm tests on CircleCI (#29714)
feat: bring --enable-logging functionality in line with Chromium (#25089)
fix: color select eyedropper not working within DevTools (#29729)
Bump v15.0.0-nightly.20210617
chore: fix BoringSSL conflict in patches (#29748)
chore: bump Node.js to v16.2.0 (#29244)
docs: clarify use of ELECTRON_SKIP_BINARY_DOWNLOAD (#29720)
chore: bump chromium to 93.0.4539.0 (main) (#29608)
fix: ensure detached devtools are not always draggable (#29717)
chore: remove c-style conversion for vibrantView (#29724)
fix: draggable regions with devtools open (#29696)
fix: disable CET as v8 deoptimization is incompatible with it (#29689)
Bump v15.0.0-nightly.20210616
fix setWindowOpenHandler call syntax (#29551)
fix: potential crash when setting vibrancy (#29677)
fix: ensure the typescript definitions only export correct value types (#28712)
chore: bumping NAN dep to include test changes (#29686)
chore: disable default async spellchecker on Windows (#29690)
Bump v15.0.0-nightly.20210615
test: re-enable some skipped tests (#29655)
docs: added guide and updated docs for Tray (#29385)
docs: Update represented-file fiddle tutorial (#29245)
refactor: use std::make_unique/base::MakeRefCounted when possible (#29637)
refactor: use PathProvider for user-data-dir and others (#29649)
build: restore workspace on osx builds to get docs-only-change file (#29465)
docs: use relative links within docs (#29651)
docs: fix typo in process-model.md (#29563)
docs: fix file mode of versioning-sketch-2.png (#29609)
Bump v15.0.0-nightly.20210614
chore: use consistent integer type for request ID (#29540)
refactor: use locale functions in command_line_args.cc (#29550)
fix: check DCHECK_IS_ON() instead of #ifdef DCHECK_IS_ON (#29620)
fix: use correct spelling of attachment with Content-Disposition header (#29621)
chore: use HTTP method constants (#29650)
fix: copy received data in URLPipeLoader to prevent corruption (#29567)
Bump v15.0.0-nightly.20210611
docs: fix image links in `performance.md` (#29592)
Bump v15.0.0-nightly.20210610
fix: ensure custom traffic lights float to top (#29595)
fix: ensure fuse order is read in a stable way (#29599)
Bump v15.0.0-nightly.20210609
fix: Revert "fix: don't propagate GDK_BACKEND to subprocs (#28898)" (#29610)
Revert "Bump v15.0.0-nightly.20210609"
fix: select-bluetooth-device on Windows (#29591)
Bump v15.0.0-nightly.20210609
chore: bump chromium to 93.0.4536.0 (main) (#29586)
fix: don't propagate GDK_BACKEND to subprocs (#28898)
Bump v15.0.0-nightly.20210608
docs: fix typo (#29553)
ci: save artifacts before cleaning up big things on macOS (#29578)
feat: add new imageAnimationPolicy webpref and webContents setter (#29095)
chore: use std::make_unique/base::MakeRefCounted when possible (#29510)
fix: improper wrapping of fs.promises.readFile (#29528)
chore: bump chromium to 93.0.4535.0 (main) (#29549)
build: remove individual release build workflows (#29344)
fix: make intermediates work with 'select-client-certificate' (#29552)
Bump v15.0.0-nightly.20210607
docs: Update notifications (renderer) docs (#29267)
docs: Updated "recent documents" fiddle tutorial (#29242)
chore: update base class name in comment (#29512)
chore: bump chromium to 93.0.4532.2 (main) (#29527)
Bump v15.0.0-nightly.20210604
chore: return early on promise rejection (#29279)
chore: pull ProxyingURLLoaderFactory closer to upstream class it mirrors (#29486)
chore: use =default for default constructors/destructors (#29511)
fix: change ASAR archive cache to per-process to fix leak (#29293)
refactor: use auto env = base::Environment::Create(); everywhere (#29502)
Bump v15.0.0-nightly.20210603
docs: remove devDependencies badge from README (#29499)
chore: bump chromium to 93.0.4530.0 (master) (#29256)
refactor: replace a few usages of V8 hidden properties (#29400)
docs: link to IncomingMessage (#29457)
build: Improve squirrel.mac BUILD.gn xcrun_action error (#29448)
test: add spec for --require filtering in NODE_OPTIONS (#29501)
build: update support.md on stable version bumps (#29381)
refactor: point prepare-release at main (#29394)
refactor: eliminate duplicate C++ / JavaScript implementation of app.isPackaged (#29464)
Bump v15.0.0-nightly.20210602
build: fix macOS build (#29484)
fix: keep shifted character in menu accelerator (#29202)
chore: use static_cast rather than C-style cast (#29467)
chore: don't use after move (#29468)
build: support building Electron on msys2 (#29449)
chore: remove unused methods (#29438)
feat: add new runningUnderARM64Translation property to detect x64 translated apps running on Windows ARM (#29168)
fix: inspector context menu throwing an error (#29436)
docs: Updated "progress bar" fiddle feature in docs (#29237)
feat: include resize edge with will-resize event (#29199)
feat: support loading debug urls with loadURL() (#29404)
Bump v15.0.0-nightly.20210601
chore: remove duplicate option get for CustomScheme (#29422)
fix: Alt+Click should not toggle menu bar (#29318)
docs: adjust markdown link syntax in introduction.md (#29426)
chore: move destructors to header so they can be trivially destructible (#29379)
fix: correctly handle Alt+Key shortcuts (#29328)
chore: use HTTP status code constants (#29378)
chore: use consistent parameter names (#29361)
fix: add service worker schemes from command line in renderer (#29425)
chore: fix typos in comments (#29401)
chore: trim unused STL includes (#29414)
build: merge chromedriver gen and build (#29439)
Bump v15.0.0-nightly.20210531
build(deps-dev): bump ws from 6.2.1 to 7.4.6 in /spec (#29416)
docs: fix issue with reference links (#29384)
fix: use default_branch in release-notes (#29415)
refactor: use main in release-notes (#29395)
refactor: publish-to-npm respects main (#29375)
Bump v15.0.0-nightly.20210528
docs: update link to Chromium's coding style guide (#29330)
refactor: version-utils respects main (#29374)
refactor: getCurrentBranch respects main (#29369)
docs: remove freenode channel from support list (#29370)
chore: simplify WrappableBase::SecondWeakCallback (#29359)
chore: prefer empty() check for readability (#29360)
chore: fix typos in comments (#29362)
Update quick-start.md (#29333)
Bump v15.0.0-nightly.20210527
docs: Update notifications (main) docs (#29268)
docs: fix typos in clang-tidy examples (#29327)
docs: fix link to `docs/fiddle/quick-start` (#29325)
fix: close autoHide menu bar when focus is lost (#29320)
Chore: update Windows build instructions (#29342)
feat: add experimental cookie encryption support (#27524)
feat: add support for Blob's going over the ctx bridge (#29247)
build: ensure that mksnapshot for Apple Silicon has all of the needed files for snapshot generation (#29338)
chore: use base::Time::Now() directly (#29331)
build: remove unused build job (#29299)
Bump v14.0.0-nightly.20210524
docs: update 14.0.0 stable dates (#29255)
docs: update currently supported versions for 13.0.0 release (#29295)
refactor: expose process.contextId directly (#29236)
docs: Update online detection doc and fiddle (#29212)
build: ensure gclient cache restore works in release builds
build: ensure object files are included even if unparsable
chore: remove unused patch chunk from bad merge (#29248)
Use path.join when logging screenshot path. (#29211)
docs: Update docs for keyboard shortcuts (#29207)
refactor: eliminate duplicate code (#29174)
docs: rework introduction docs (#29062)
Bump v14.0.0-nightly.20210523
build: linux publish builds that direct checkout should use git cache
build: only upload libcxx headers on linux
build: correct libcxx_objects build action name (#29296)
Revert "Bump v14.0.0-nightly.20210523"
Bump v14.0.0-nightly.20210523
test: rebuild nan tests with libc++ and libc++abi (#29281)
refactor: remove accessible_pane_view.patch (#29262)
Bump v14.0.0-nightly.20210520
chore: bump chromium to 92.0.4511.0 (master) (#29173)
fix: pdf viewer permissions (#29210)
chore: put "mas" in the names of mas patches (#29213)
chore: bump node to v14.17.0 (master) (#29151)
Bump v14.0.0-nightly.20210519
fix: adjust initial webContents focus calculation (#29204)
docs: option title for showSaveDialog is not supported for some platforms (#28747)
docs: update style guide (#29029)
fix: window bounds not scaled from screen coordinates (#29162)
fix: AdjustAmountOfExternalAllocatedMemory regression in NativeImage destructor (#29179)
docs: update the macos Dock Instructions (#29197)
docs: update macos-dark-mode fiddle and guide content (#29198)
docs: update drag and drop tutorial (#29200)
Update accelerator.md (#29193)
docs: expand description of isolate_holder.patch (#29209)
docs: expand description of desktop_media_list.patch (#29208)
chore: drop thread_capabilities.patch (#29135)
chore: remove blink_fix_prototype_assert (#29194)
refactor: remove ssl_security_state_tab_helper.patch (#29196)
Bump v14.0.0-nightly.20210518
chore: remove add_realloc.patch (#29131)
chore: remove unused function from render_widget_host_view_base.patch (#29134)
chore: remove blink-worker-enable-csp-in-file-scheme.patch (#29136)
chore: uncomment some DCHECKs (#29132)
Bump v14.0.0-nightly.20210517
refactor: implement <webview> using contextBridge (#29037)
docs: --force-fieldtrials was h2 rather than h3 (#29161)
Bump v14.0.0-nightly.20210514
fix: ensure extensions w/o a background page have file access (#29123)
fix: illegal access errors with nodeIntegrationInSubFrames (#29093)
fix: remove background color hack in vibrancy (#29114)
chore: bump chromium to 92.0.4505.0 (master) (#29058)
Bump v14.0.0-nightly.20210513
build: make patch auto fixes come from PatchUp rather than Electron Bot (#29153)
build: save the ninja log for release builds too (#29140)
docs: update "list" of docs languages in readme.md file (#29073)
docs: Improve description of findInPage options (#29077)
docs: revise Mac App Store Submission Guide (#28922)
build: store artifacts in simpler way (#29133)
build: rename and unify checkout-fast and checkout-and-save-cache (#29138)
build: dedupe release summary jobs (#29139)
chore: add wg-security as required reviewer for other files with IPC handlers (#29092)
chore: remove no-op EnableWebComponentsV0 feature (#29107)
fix: Menu.setApplicationMenu can return a useless array 29088 (#29118)
build: split tests by timing to make it more even (#29121)
build: unconditionally include stack_trace.h (#29110)
build: use autoninja to print stats (#29111)
Bump v14.0.0-nightly.20210512
build: merge double space in SHASUM validation logic (#29117)
refactor: replace v8::Local<T>::Cast() with As<T>() (#29097)
build(deps): bump lodash from 4.17.20 to 4.17.21 (#29066)
fix: prevent crash on web-contents creation when error is thrown (#28971)
build: do not use a shared checkout for linux publish (#29076)
build: offload hash checking logic to lambda worker during release (#29096)
Bump v14.0.0-nightly.20210511
fix: update NSView radii on fullscreen transition (#29084)
build(deps): bump hosted-git-info from 2.7.1 to 2.8.9 (#29079)
Bump v14.0.0-nightly.20210510
Revert "Bump v14.0.0-nightly.20210510"
Bump v14.0.0-nightly.20210510
Revert "Bump v14.0.0-nightly.20210510"
Bump v14.0.0-nightly.20210510
Revert "Bump v14.0.0-nightly.20210510"
Bump v14.0.0-nightly.20210510
Revert "Bump v14.0.0-nightly.20210510"
Bump v14.0.0-nightly.20210510
fix: webFrame spell checker APIs crashing in sandboxed renderers (#29053)
build: use executors instead of YAML templating (#29075)
Revert "Bump v14.0.0-nightly.20210508"
Bump v14.0.0-nightly.20210508
Revert "Bump v14.0.0-nightly.20210508"
Bump v14.0.0-nightly.20210508
Revert "Bump v14.0.0-nightly.20210508"
Bump v14.0.0-nightly.20210508
refactor: use WeakMap instead of hidden V8 properties to store WebViewImpl (#29049)
Bump v14.0.0-nightly.20210507
refactor: remove setupWebViewAttributes gymnastics (#29032)
chore: bump chromium to 92.0.4499.0 (master) (#29046)
chore: cleanup dead <webview> related code (#29039)
refactor: invoke loadURL in SrcAttribute instead of sending IPC directly (#29031)
chore: cherry-pick 7abc7e45b2 from node (#29021)
Bump v14.0.0-nightly.20210506
docs: rework sandbox guide (#28978)
chore: update force/warn context aware patch (#29011)
docs: menu must be added on whenReady (#28958)
chore: make raw requires type-safe (#29006)
spec: attempt to fix flaky nativeTheme spec (#29022)
chore: bump chromium to 92.0.4498.0 (master) (#28991)
refactor: 'focus-change' does not need guestInstanceId (#29001)
fix: <webview> focus / blur events don't work with contextIsolation enabled (#29004)
chore: remove unused patched webprefs (#29002)
chore: remove patch post renderer process reuse removal (#29003)
fix: drag region BrowserView calculations on macOS (#28984)
build: remove macOS nightly release tests (#29005)
Bump v14.0.0-nightly.20210505
docs: link to `BrowserView` from `webview` page (#28942)
refactor: remove unnecessary setupDialogProperties (#28982)
refactor: use "as const" for constant mappings (#28980)
Bump v14.0.0-nightly.20210504
Revert "Bump v14.0.0-nightly.20210504"
refactor: remove more dead code post render process reuse (#28983)
Bump v14.0.0-nightly.20210504
chore: remove unused element_instance_id_to_guest_map_ from WebViewManager (#28979)
fix: close attached sheet on window close (#28967)
docs: update REPL guide (#28943)
chore: bump chromium to 92.0.4496.0 (master) (#28907)
fix: allow Node.js to manage microtasks queue (#28957)
docs: Added loadFile instead of loadURL in BrowserWindow documentation example (#28829)
chore: Browser::SetAppUserModelID is Windows only (#28909)
Bump v14.0.0-nightly.20210503
docs: remove reference to global Electron install (#28945)
build: enable woa testing (#28952)
refactor: replace --offscreen flag with ApplyWebPreferences (#28938)
Bump v14.0.0-nightly.20210430
build: add release-env context to publish-macos (#28937)
refactor: plumb RFH instead of RPH for notifications (#28790)
build: fix npm-run python bytes error (#28932)
Bump v14.0.0-nightly.20210429
docs: uniformize module API doc format (#28920)
chore: Update husky v6.0.0 (#28827)
fix: provide no-op implementation of app.setUserModelId (#28915)
docs: Add clarification for Visual Zoom behavior (#28860)
build: temporarily disable WOA testing (#28916)
docs: remove `api/locales` page (#28911)
build: fix dump_syms.py to work with python 3 (#28910)
fix: emit window-all-closed after closing the window (#28867)
Bump v14.0.0-nightly.20210428
build: remove dead python methods and helper (#28884)
build: actually use SSL when downloading things via python (#28885)
build: remove the vendor directory (#28883)
docs: the tools folder does not exist anymore (#28882)
docs: Remove mentions of the old external_binaries directory (#28859)
refactor: remove internal navigation controller (#28839)
test: disable shell.trashItem in renderer test on win-ia32 (#28868)
chore: bump chromium to 92.0.4488.0 (master) (#28676)
feat: add session.storagePath to get path on disk for session data (#28665)
test: worker should be able to load asar files (#28858)
Bump v14.0.0-nightly.20210427
Bump v14.0.0-nightly.20210426
Revert "Bump v14.0.0-nightly.20210426"
Bump v14.0.0-nightly.20210426
Revert "Bump v14.0.0-nightly.20210426"
Bump v14.0.0-nightly.20210426
build: fix releases that failed halfway through npm publish actions (#28851)
build: import execute method in symbols zip script
Revert "Bump v14.0.0-nightly.20210426"
Bump v14.0.0-nightly.20210426
build: delete dsyms after they have been zipped in release builds
Revert "Bump v14.0.0-nightly.20210426"
build: free up space on macOS some more
Bump v14.0.0-nightly.20210426
fix: only set backgroundColor in default-app for default index.html (#28792)
refactor: use rfh instead of process id in permission manager (#28791)
refactor: be more precise when creating api::WebContents (#23128)
refactor: remove ProcessPreferences (#28786)
Bump v14.0.0-nightly.20210423
fix: shell.trashItem crash when called in renderer (#28748)
chore: restore "Additional Information" section (#28764)
docs: fix unintentional emoji in win.getMediaSourceId description (#28767)
refactor: clean up unused parts of the render_frame_host patch file (#28769)
feat: add WebFrameMain.visibilityState (#28706)
Bump v14.0.0-nightly.20210422
build(deps): bump elliptic from 6.5.3 to 6.5.4 (#28066)
build: disable pseudolocales in Electron (#28766)
chore: remove app.allowRendererProcessReuse (#26874)
feat: remove BrowserWindow option inheritance (#28550)
build(deps): bump ssri from 6.0.1 to 6.0.2 (#28723)
fix: handle async nature of [NSWindow -toggleFullScreen] (#25470)
Bump v14.0.0-nightly.20210421
feat: add BrowserWindow.isFocusable() (#28642)
fix: ensure widget size is set correctly on linux on small screens (#28681)
Bump v14.0.0-nightly.20210420
build: fix docs only change script to pull all files not just 30 (#28737)
feat: remove deprecated additionalFeatures (#28548)
build: read node files as binary files (#28729)
chore: update ts parser for description comment fixes and generic types (#28709)
build: unify machine-mac-large-arm and machine-mac-large (#28700)
chore: clean up some spec things (#28680)
docs(build-instructions): clarify that these are for building Electron itself (#28674)
Bump v14.0.0-nightly.20210419
fix: do not handle write errors after request is aborted (#28682)
fix: end attached sheet when calling window.hide() (#28671)
Bump v14.0.0-nightly.20210416
fix: increase corner radius for vibrancy view on big sur (#28655)
chore: bump chromium to 92.0.4475.0 (master) (#28462)
build: provide line numbers of bad patch lines when linting (#28666)
Bump v14.0.0-nightly.20210415
Bump v14.0.0-nightly.20210414
build: do not require vsts token for releases (#28643)
feat: enable nativeWindowOpen by default (#28552)
feat: add more info in setWindowOpenHandler details (#28518)
Bump v14.0.0-nightly.20210413
build: better error handling for release builds (#28621)
refactor: clean up webFrame implementation to use gin wrappers (#28497)
Bump v14.0.0-nightly.20210412
fix: crash on invalid select-serial-port callback (#28602)
fix: load source maps from custom protocols and asar bundles (#28573)
docs: systemPreferences.subscribeWorkspaceNotification return type (#28588)
Defined the name of the preload script (#28597)
refactor: use URL API (#28583)
Bump v14.0.0-nightly.20210409
build: give ASAN tests more memory to avoid SIGKILL or disabling tests (#28567)
chore: don't minimize js in development (#28571)
chore: remove deprecated worldSafeExecuteJavaScript option (#28456)
docs: note that new-window event is deprecated (#28549)
Bump v14.0.0-nightly.20210408
chore: bump node to v14.16.1 (master) (#28563)
build: add safety net for mac_deployment_target (#28517)
feat: support wasm-eval csp behind WebAssemblyCSP flag (#28535)
docs: fix typo in breaking-changes.md (#28551)
Bump v14.0.0-nightly.20210407
docs: remove checkbox options in dialog.showMessageBoxSync (#28418)
fix: beforeunload and unload firing in BrowserViews (#28382)
fix: allow accessing file:// when web security is disabled (#28489)
fix: call `UnregisterIsolate` consistently (#28486)
ci: Add goma fallback flag (#28539)
fix: pass postData to new-window event (#28513)
test: disable "fs in renderer process" test under ASan (#28509)
Bump v14.0.0-nightly.20210406
fix: invoke the window open handler for _blank links (#28498)
fix: dialog DCHECK on Linux (#28478)
build: ignore ninja summary print failures (#28514)
docs: Remove GoDaddy from Windows code signing options (#28494)
fix: enable system maximization for frameless windows except if transparent (#28207)
fix: reject task append to JumpList when description exceeds 260 characters (#28485)
docs: the minimum supported version of macOS is now 10.11 (#28480)
Bump v14.0.0-nightly.20210405
chore: add types for electron_renderer_web_frame binding (#28455)
Bump v14.0.0-nightly.20210402
fix: free IsolateData in ~NodeEnvironment (#28469)
feat: Use GtkFileChooserNative to support the XDG Desktop Portal specification (#19159)
refactor: remove unneeded patch_count variable (#28467)
Bump v14.0.0-nightly.20210401
docs: add frameName note for window.open (#28435)
build(deps): bump y18n from 5.0.1 to 5.0.5 in /spec (#28445)
build: fix unicode patch file comparison in git.py (#28454)
Bump v14.0.0-nightly.20210331
chore: update Community link in default menu (#28449)
build(deps): bump y18n from 4.0.0 to 4.0.1 (#28448)
Revert "chore: bump chromium to 91.0.4448.0 (master) (#28009)"
chore: bump chromium to 91.0.4448.0 (master) (#28009)
Revert "refactor: make LoginItemSettings::path a wstring"
refactor: make ShowTaskDialog take a wstr
refactor: make LoginItemSettings::path a wstring
chore: omit some unnecessary conversions
fix: handle an unparsable pdf manifest (#28432)
fix patches
Bump v14.0.0-nightly.20210330
fix: errors thrown in functions over the `contextBridge` (#28346)
fix: put RemoteCertVerifier upstream from the caching and coalescing layers (#28358)
use PartitionAllocator for ArrayBuffers in the main process
Bump v14.0.0-nightly.20210329
refactor: remove more uses of v8::Isolate::GetCurrent() (#28369)
test: increase timeout for spellchecker (#28427)
don't defer in NSWindow creation
disable typedarrays-test.js
backport fcdf35e from v8 to fix nan crash
Bump v14.0.0-nightly.20210326
feat: initialize field trials from command line arguments (#28305)
docs: add missing line in web-contents.md (#28376)
well that was an odyssey
test: load minimal dict for spellchecker (#28386)
Bump v14.0.0-nightly.20210325
fix: disappearing thumbar after win.hide() (#28366)
fix: export patches not retaining CRLF line endings (#28360)
fix a messed up merge
perf: do not double-proxy methods being return over the contextBridge (#28285)
fix: isolate Pepper plugins (#28332)
only bind setAppUserModelId on windows
linter
wstrings are cross-platform
lint
upgrade nan dep in tests
SetAppUserModelID -> wstring
Bump v14.0.0-nightly.20210324
doc: desktopCapturer menu position (#28315)
more windows build fix
fix: make sure service worker scheme is registered with allowServiceWorkers (#28326)
fix: window.print() in pdf plugin (#28328)
Bump v14.0.0-nightly.20210323
fix: escape URL passed to shell.openExternal on windows (#28334)
windows build fixes
fix GetAsString maybe?
fix: libuv hang on Windows (#28175)
bump nan
incantations for WebContentsPreferences::GetPreloadPath wide strings
fix StrCat issue
undo changes to WebContentsPreferences::GetPreloadPath to fix mac build
ci: cleanup directories on arm64 machines after running tests (#28329)
feat: add ContextBridgeMutability feature (#27348)
Bump v14.0.0-nightly.20210322
refactor: prefer embedder-focused InitializeNodeWithArgs (#28271)
docs: update Node global symbols example to use contextBridge (#28245)
fix: destroy MessageDispatcher before WebContents (#28286)
test: spellchecker may take several minutes to load under ASan (#28230)
Bump v14.0.0-nightly.20210319
fix: drag region offsets in BrowserViews (#28268)
fix: missing HandleScope in ResetBrowserViews (#28266)
feat: allow omitting submitURL when uploadToServer is false (#28105)
chore: rename process.contextIsolation to process.contextIsolated (#28259)
fix: DesktopCapturer gc'd prior to capture completion (#28273)
fix: bad menu position when no positioning item specified (#28224)
Change example to work with latest versions of selenium-webdriver (#28231)
2757472: Reland "Reland "[LSC] Remove base::string16 alias""
Bump v14.0.0-nightly.20210318
docs: add missing curly brace to quick start example code (#28253)
feat: add process.contextIsolation property (#28030)
feat: add process.contextId used by @electron/remote (#28007)
Revert "chore: bump chromium in DEPS to 91.0.4449.0"
Bump v14.0.0-nightly.20210317
chore: bump chromium in DEPS to 91.0.4449.0
docs: update Quick Start Guide for Electron 12  (#28223)
test: disable some tests under ASan which might receive SIGKILL because of OOM (#28156)
update node headers
fixup 2651385: Moving Profile::shared_cors_origin_access_list_ into //content layer
2720306: [api] Remove deprecated [Shared]ArrayBuffer API
2757472: Reland "Reland "[LSC] Remove base::string16 alias""
2757472: Reland "Reland "[LSC] Remove base::string16 alias""
add additional skipping of atk toolchain check
docs: remove no longer relevant link (#28196)
only include mac notifications on mac
2752406: [LSC] Replace base::string16 with std::u16string in //ui
2648046: Introduce alert notification helper .app
Use nogncheck for content/browser/site_instance_impl.h
2733070: Rename observer to URLLoaderNetworkServiceObserver
Bump v14.0.0-nightly.20210316
2721718: Move HostID to extensions::mojom::HostID
2651385: Moving Profile::shared_cors_origin_access_list_ into //content layer.
2725403: Add URLLoaderClient::OnReceiveEarlyHints()
2743594: Remove WebSize from blink.
Update patches
chore: bump chromium in DEPS to 91.0.4448.0
fix: recalibrate simpleFullscreen when display metrics change (#28150)
docs: document the parameter structure of hookWindowMessage (#28189)
2734095: Introduce StoragePartitionId type to wrap current string representation.
2651385: Moving Profile::shared_cors_origin_access_list_ into //content layer.
2752932: Associate each AwProxyingURLLoaderFactory with a frame tree node id.
2752406: [LSC] Replace base::string16 with std::u16string in //ui
2752406: [LSC] Replace base::string16 with std::u16string in //ui
update to xcode 12.4.0
fixup gn check
fix: revert "refactor: mmap asar files (#24470)" (#28137)
chore: update patches
Bump v14.0.0-nightly.20210315
docs: remove unnecessary enableBlinkFeatures (#28129)
docs: expand OS version prompt in issue template (#28135)
fix: handle a nil backgroundColor in win.getBackgroundColor() (#28120)
chore: bump chromium in DEPS to 91.0.4446.0
chore: bump chromium in DEPS to 91.0.4445.0
fix: convert system colors to device color space in systemPreferences (#28121)
fixed typo in docs/api/window-open.md (#28117)
docs: remove "Additional information" section from issue template (#28136)
docs: about->description in issue template (#28144)
docs: add bug label to bug reports (#28145)
docs: use :syntax: for emoji in feature request template (#28146)
Bump v14.0.0-nightly.20210312
docs(breaking-changes): contextIsolation disables require in renderer  (#28087)
docs(quick-start): make import command npm 7-compatible (#28077)
test: reliably wait for spellchecker to load (#28118)
fix: change #if defined(OS_MACOSX) to #if defined(OS_MAC) (#28102)
docs: fix cookies event documentation for type generation (#28115)
Bump v14.0.0-nightly.20210311
chore: bump chromium in DEPS to 91.0.4443.0
fix: ensure child window transparency works (#28054)
chore: cherry-pick 1fe571a from node (#28067)
test: enable locale test for asan build (#28085)
chore: convert Mac App Store Private API Rejection template to form (#28100)
Bump v14.0.0-nightly.20210310
chore: bump chromium in DEPS to 91.0.4442.0
chore: remove deprecated remote module (#25734)
chore: convert bug report template to form (#27971)
Bump v14.0.0-nightly.20210309
fix: capturePage not resolving with hidden windows (#27883)
chore: bump chromium in DEPS to 91.0.4441.0
test: show full object diff (#28062)
build: call goma_ctl.py ensure_start directly (#28053)
chore: remove obsolete native node module patch (#23760)
test: print more infomation in locale test (#28040)
test: ignore the ready event from PDF Viewer (#28039)
Bump v14.0.0-nightly.20210308
chore: bump chromium in DEPS to 91.0.4440.0
docs: auto update downloading multiple times (#27888)
docs: update WebPreferences default values for Electron 12 (#27984)
docs: `setWindowOpenHandler` should show object return (#28015)
chore: bump chromium in DEPS to 91.0.4439.0
refactor: cleanup how WebContents is destroyed (#27920)
test: exit after app.relaunch is called (#28016)
chore: bump chromium in DEPS to 91.0.4438.0
update patches
chore: fix lint
chore: remove deleted file from chromium_src list
chore: wire up activation_time in OSR
refactor: DesktopMediaList::Type replaces content::DesktopMediaType_*
refactor: CreateDataPipe deprecated form was removed
refactor: blink::MenuItem::Type was moved to mojom
refacotr: grit::ResourceMap replaced with webui::ResourcePath
refactor: extensions::ViewType was moved to mojom
refactor: MenuItemType was moved to mojom
refactor: content::SiteInstance::GetSiteForURL was removed
refactor: ExtensionUserScriptManager is now UserScriptManager
refactor: CertVerifier is not in the network namespace anymore
Bump v14.0.0-nightly.20210305
chore: Add a condition to crashReporter deprecate log (#27953)
fix: navigator.setAppBadge/clearAppBadge from a service worker (#27950)
docs: suspend and resume are available on Linux (#27958)
chore: might_have_observers has been removed
refactor: extensions::ViewType moved to mojom
chore: update patches
chore: media_internal_resources becomes resources
chore: update patches
build: add 'use_rts' definition
chore: bump chromium in DEPS to 91.0.4435.3
chore: bump chromium to 90.0.4415.0 (master) (#27694)
test: fix contextIsolation value for later added test (#27998)
Bump v14.0.0-nightly.20210304
feat: expose des-ede3 cipher (#27897)
docs: update fiddles/quick-start to set contextIsolation: false (#27970)
fix: offset browserview drag regions on macOS (#27952)
Bump v13.0.0-nightly.20210303
fix: warning when worldSafeExecuteJavaScript is disabled (#27928)
fix: check web_contents() for destroyed WebContents (#27815)
test: add more logging for a few tests. (#27956)
docs: update currently supported versions for 12.0.0 release (#27873)
Bump v13.0.0-nightly.20210302
feat: enable context isolation by default (#26890)
fix: make TouchBarPopover and TouchBarGroup work (#27901)
fix: ensure owner window valid (#27786)
docs: update timeline dates for 12.0.0 and 13.0.0 (#27867)
chore: revert webFrameMain.executeJavaScriptInIsolatedWorld method (#27926)
Bump v13.0.0-nightly.20210301
build: remove node-gyp arm64 tricks (#27916)
build: update docker images to node 14 (#27915)
fix: race-condition in electron.net (#27898)
fix: navigator.bluetooth.requestDevice (#27902)
Bump v13.0.0-nightly.20210226
fix: values return from the ctx bridge with dynamic property support should themselves support dynamic properties (#27899)
chore: move stray prod deps to dev deps (#27914)
chore: bump node to v14.16.0 (master) (#27706)
Bump v13.0.0-nightly.20210225
Bump v13.0.0-nightly.20210224
docs: fix header level of some events in app.md (#27860)
Bump v13.0.0-nightly.20210223
test: run tests under asan on linux-x64 (#23570)
fix: isFullScreen typo (#27823)
Update feature_request.yml (#27825)
fix: cap sendInputEvent text length at n-1 (#27827)
Bump v13.0.0-nightly.20210222
fix: pass IsScreen via parameter instead of sync IPC method (#27774)
fix: gather crash data for unexpected helper path (#27804)
Bump v13.0.0-nightly.20210219
docs: update menu item '&' escaping (#27770)
Revert "perf: patch libuv to use posix_spawn on macOS (#27026)" (#27797)
fix: don't create last saved path if none exists (#27745)
fix: enableBlinkFeatures warning in webviews (#27753)
Bump v13.0.0-nightly.20210218
fix: restore window event redispatching on mac (#27701)
fix: add support for title change with window history navigation (#27724)
Bump v13.0.0-nightly.20210217
fix: check WebContents before emitting render-process-gone event (#27730)
fix: libuv hang when nodeIntegrationInSubframes enabled (#27582)
test: fix and undisable parallel/node-crypto (#27689)
test: fix flaky did-change-theme-color test (#27739)
fix: disable unload metrics to fix CI failure (#27731)
Bump v13.0.0-nightly.20210216
Bump v13.0.0-nightly.20210215
docs: transparent window opaque while dev tools opened (#27705)
ci: ignore errors deleting user app directories on WOA testing (#27709)
chore: update copyright headers (#27697)
Bump v13.0.0-nightly.20210212
fix: ECDH.setPrivateKey correctly sets the key (#27688)
Revert "ci: ignore errors deleting user app directories on WOA testing"
ci: ignore errors deleting user app directories on WOA testing
feat: support registering MV3 extension service workers (#27562)
Bump v13.0.0-nightly.20210211
docs: MessagePorts guide (#27678)
fix: crash in crypto.createDiffieHellman (#27674)
fix: set WebContents background color ubiquitously #27592 (#27593)
Bump v13.0.0-nightly.20210210
feat: add `win.setTopBrowserView()` so that BrowserViews can be raised (#27007)
refactor: only allow internal messages from the main process (#27676)
chore: bump chromium to e836cbe709f3cd703f233de8eb6cc6ec99b72c9d (#27475)
chore: cherry-pick 0c8b6e41 from v8 (#27672)
feat: add roundedCorners option for BrowserWindow (#27572)
Bump v13.0.0-nightly.20210209
feat: add exit code to render-process-gone details (#27580)
build: make sure fuses.h gets generated (#27667)
perf: optimize data structures in context_bridge::ObjectCache (#27639)
fix: early GC of WebFrameMain instances (#27648)
refactor: load preload script directly as a string (#27546)
fix: BrowserView rendering flicker (#27585)
perf: patch libuv to use posix_spawn on macOS (#27026)
Bump v13.0.0-nightly.20210208
chore: fix typo in electron_api_base_window.cc (#27644)
fix: memory leak in BrowserWindow (#27621)
fix: clean up base::LinkedList in context_bridge::ObjectCache (#27630)
fix: do not run display check on "closed" windows in tray (#27615)
fix: remove windowName set as title for native window.open() (#27481)
Bump v13.0.0-nightly.20210205
fix: avoid flicker when leaving fullscreen in frameless window (#27587)
chore: fix lint (#27620)
Bump v13.0.0-nightly.20210204
Bump v13.0.0-nightly.20210203
docs: remove v5 and v6 modernization docs (#27498)
build: fix buildflags.h generation on macos (#27579)
refactor: precache atoms in window-state-watcher (#27575)
Bump v13.0.0-nightly.20210202
feat: add option to not transform processes on win.SetVisibleOnAllWorkspaces (#27200)
docs: Update ipcMain.handle() docs in ipc-main.md for error-handling details (#27461)
fix: crash when loadExtension fails (#27561)
refactor: remove unused extension content script code (#27570)
feat: implement allowFileAccess loadExtension option (#25198)
Bump v13.0.0-nightly.20210201
fix: clean up implementations of titleBarStyle (#27489)
fix: pass button callback in constructor (#27545)
chore: remove bunch of usages of any (#27512)
Bump v13.0.0-nightly.20210129
fix: replace default frameName title with null check (#27521)
fix: dont try to serialize WasmModuleObjects (#27518)
docs: Update Readme, don't mention Electron < 2 (#27535)
test: fix failing http spec (#27525)
docs: update Xcode / macOS SDK version in build-instructions-macos.md (#27513)
Bump v13.0.0-nightly.20210128
fix: pdf viewer missing resources (#27499)
Bump v13.0.0-nightly.20210127
docs: add note About Apple Silicon (#27486)
docs: add missing contextBridge API to README (#27485)
feat: enable world safe JS by default (#26889)
docs: update verb tenses for structured clone notes (#27483)
refactor: cleanup WebFrameMain + improve tests (#27455)
refactor: use C++11 class member variable initialization (#27477)
docs: update web-embeds (#27488)
Bump v13.0.0-nightly.20210126
chore: bump chromium to bf3f97675b5d9eade34526ebf730c (master) (#27305)
build: fix build with enable_printing=false (#27456)
chore: enable Trusted Types in default app (#27453)
Bump v13.0.0-nightly.20210125
fix: CSP with `unsafe-eval` detection with Trusted Types (#27446)
fix: <webview> not working with Trusted Types (#27445)
refactor: replace base::Bind() with base::BindOnce() / base::BindRepeating() (#27447)
Update security.md (#27449)
fix: don't throw on bad icons in BrowserWindow constructor (#27441)
fix: hiddenInset missing maximize button (#27428)
test: use new uuid for each ServiceWorker test (#27444)
chore: update to latest TypeScript, which has built-in WeakRef declarations (#27425)
Bump v13.0.0-nightly.20210122
ci: enable arm64 macOS tests (#24832)
fix: add eyedropper tool functionality to browser view (#27275)
Bump v13.0.0-nightly.20210121
fix: actually clear pending requests in devtoolsagenthost (#27379)
Revert "Bump v13.0.0-nightly.20210121"
Bump v13.0.0-nightly.20210121
Revert "Bump v13.0.0-nightly.20210121"
Bump v13.0.0-nightly.20210121
Revert "Bump v13.0.0-nightly.20210121"
Bump v13.0.0-nightly.20210121
docs: change semver to SemVer (#27350)
fix: enable navigator.setAppBadge/clearAppBadge (#27067)
refactor: store WeakMaps in CallbacksRegistry / ObjectsRegistry (#27037)
fix: shutdown crash in DownloadItem callback (#27342)
docs: correct typo in native-file-drag-drop.md (#27387)
Revert "build: remove buildflags workaround (#27372)" (#27410)
Bump v13.0.0-nightly.20210120
fix: increase stack size on windows (#27376)
build: remove buildflags workaround (#27372)
Bump v13.0.0-nightly.20210119
Revert "Bump v13.0.0-nightly.20210119"
Bump v13.0.0-nightly.20210119
fix: make SetWindowButtonVisibility work for customButtonsOnHover (#27073)
fix: improve redirect behavior in protocol module (#26297)
fix: prevent crash when keyboard event immediately precedes calling BrowserWindow.close() (#27315)
chore: duplicate symbols for mojom interfaces in component build (#27186)
Bump v13.0.0-nightly.20210118
Bump v13.0.0-nightly.20210115
feat: add webFrameMain.send() / webFrameMain.postMessage() (#26807)
Bump v13.0.0-nightly.20210114
chore: use markdownlint to lint the docs (#26792)
fix: crash in renderer process with non-context-aware modules (#27296)
revert: test use emittedUntil in PDF Viewer tests (#27273)
chore: remove ancient Browser::Focus implementation on Windows (#27279)
refactor: use platform-specific TaskRunner to print (#27225)
Bump v13.0.0-nightly.20210113
chore: surface webcontents load error more readily (#22824)
chore: do no semantic check on commit messages (#27276)
build: fixup feature request template (#27288)
chore: bump chromium to a264339194bfa02f5ecb3b8cba449 (master) (#27111)
Bump v13.0.0-nightly.20210112
Bump v13.0.0-nightly.20210111
docs: update devtools extension tutorial (#26326)
feat: add frame and webContents to webRequest details (#27078)
docs: renames Comodo to Sectigo (#27232)
docs: correct meaning of DesktopCapturerSource.id  (#27255)
docs: coordinate system of badly named method getCursorScreenPoint (#27156)
build: fix installing of code-signing identity on macOS (#27221)
fix: set presentationModeEnabled value for PDF viewer (#27223)
test: use emittedUntil in PDF Viewer tests (#27248)
Bump v13.0.0-nightly.20210108
fix: broken PDF viewer (#27209)
test: skip media-started-playing media-paused events test when media not supported (#27215)
test: skip PictureInPicture video when media not supported (#27218)
ci: fix broken homebrew cache (#27224)
test: skip protocol.registerSchemesAsPrivileged stream test when media not supported (#27216)
Bump v13.0.0-nightly.20210107
docs: coordinate system of Display.bounds and Display.workArea (#27157)
docs: add libraries for arch and manjaro linux (#27196)
build: fix missing dependency resulting in a random build failure (#26757)
Bump v13.0.0-nightly.20210106
docs: NSVisualEffectMaterialDark has been deprecated and removed as of macOS 10.15 (#27125)
chore: bump node to v14.15.4 (master) (#27198)
chore: use structured template for feature request (#27175)
feat: add webFrameMain.executeJavaScriptInIsolatedWorld() (#26913)
feat: make win.setAspectRatio() work on Windows (#26941)
docs: webFrameMain.fromId() can return undefined (#27068)
docs: document frameId meaning (#27072)
chore: bump node to v14.15.3 (master) (#27077)
fix: handle BrowserView reparenting (#27000)
fix: default offset when no drag regions (#27147)
refactor: remove path from nativeImage converter (#26546)
docs: update broken Chrome webview URL (#27079)
build: show more info about exported patches (#27148)
fix: unclickable regions in some draggable BrowserViews (#27143)
Bump v13.0.0-nightly.20210104
docs: fix two "add" mistake in snapcraft.md (#27151)
Bump v13.0.0-nightly.20201223
chore: bump chromium to 7264889ce3aad1568ff3d211c81fe (master) (#27003)
Bump v13.0.0-nightly.20201222
Bump v13.0.0-nightly.20201221
fix(extensions): implement missing web_request hooks (#22655)
Bump v13.0.0-nightly.20201218
chore: remove extra setTitlebarAppearsTransparent (#27042)
chore: put NativeWindowMac's methods in order (#27040)
fix: handle _sendToFrameInternal() throwing an exception in remote/server.ts (#27046)
fix: make webContents.id work even after destroy (#27038)
Bump v13.0.0-nightly.20201217
fix: memory leak in desktopCapturer.getSources (#27031)
chore: bump node to v14.15.2 (master) (#27045)
refactor: remove last use of InternalCallbackScope (#27029)
Bump v13.0.0-nightly.20201216
docs: include author and description in package.json in quick-start.md (#26983)
docs: update select-serial-port example (#26992)
fix: make protocol wrapper remote-friendly again (#27009)
feat: add missing 'context-menu' values (#26788)
feat: make trafficLightPosition work for customButtonOnHover (#26789)
feat: add support for webContents option in BrowserView (#26802)
chore: remove deprecated systemPreferences methods (#26849)
build(deps): bump ini from 1.3.5 to 1.3.7 (#26930)
refactor: use public node::CallbackScope where possible (#27001)
fix: incorrect case in content::PermissionType mapping (#27006)
fix: throw when using globalShortcut before ready (#27002)
Bump v13.0.0-nightly.20201215
fix(asar): readdir(withFileTypes) fails on deep directory (#26865)
docs: update quick start description after fiddle integration (#26943)
chore: bump chromium to 096e5313aaf19dfa0c4710145c34d (master) (#26535)
Bump v13.0.0-nightly.20201214
fix: add SafeForTerminationScopes for SIGINT interruptions (#26933)
fix: Upload all *.dll.pdb to symbol server (#26962)
fix: window with CustomButtonsOnHover should have rounded corner (#26901)
fix: Avoid crashing in NativeViewHost::SetParentAccessible on Windows (#26924)
Bump v13.0.0-nightly.20201211
docs: add missing deprecated systemPreferences APIs to breaking-changes (#26848)
feat: add support for DOM elements going over the context bridge (#26776)
build: fix JS linting (#26876)
Bump v13.0.0-nightly.20201210
ci: ignore failures on Ninja summary (#26914)
feat: add event.senderFrame property returning the originating webFrameMain (#26764)
fix: message box missing an "OK" button in GTK (#26857)
build: remove requests from git submodule (#26908)
fix: restrict sendToFrame to same-process frames by default (#26875)
fix: stack traces in non-Node.js contexts (#26820)
build: remove unused install-build-deps (#26891)
test: disable flaky reporting API test (#26898)
Bump v13.0.0-nightly.20201209
build: remove boto from git submodule (#26877)
refactor: move IPC handlers from navigation-controller to rpc-server (#26846)
chore: add @mlaurencin to manual backport config (#26872)
Bump v13.0.0-nightly.20201208
chore: blank lines before lists in markdown (#26793)
fix: systemPreferences.effectiveAppearance returning systemPreferences.getAppLevelAppearance() (#26852)
fix: screen EventEmitter methods with remote (#26809)
docs: update OSR max FPS number (#26805)
refactor: convert more C++ enums to C++11 enum classes (#26850)
docs: clean up the native modules documentation (#26813)
docs: add description to read-me.md (#26823)
feat: route frame based permission checks through our permission check handler (#19903)
fix: handle security warnings promise when JS is disabled (#26837)
build: use python3 for electron hooks (#26839)
fix: add a "set" trap to the "screen" module proxy (#26818)
chore: remove unused _replyInternal method (#26825)
Bump v13.0.0-nightly.20201207
chore: remove unused FindByID helper (#26826)
feat: exposeInMainWorld allow to expose non-object APIs (#26594)
fix: send IPC_MESSAGES.RENDERER_RELEASE_CALLBACK as internal message (#26808)
Bump v13.0.0-nightly.20201204
Bump v13.0.0-nightly.20201203
feat: allow path override with --ignore-scripts (#25377)
chore: remove unused sendToAll + related APIs (#26771)
Bump v13.0.0-nightly.20201202
docs: app distribution page (#26239)
chore: remove TODO on SetHidden calls (#26746)
fix: properly emit after hooks after exception (#26752)
fix: internalModuleReadJSON for unpacked JSON (#26749)
docs: BrowserWindow extension APIs are deprecated in Electron 9 (#26722)
docs: fix contentTracing code sample (#26737)
docs: add debugging vars to env var doc (#26743)
fix: draggable views on BrowserViews on Windows (#26738)
fix: Add default Bluetooth permission strings (#26730)
Bump v13.0.0-nightly.20201201
fix: add check in IsMaximized for non-WS_THICKFRAME windows (#26586)
fix: draggable regions calculation in BrowserWindow/BrowserView (#26690)
refactor: simplify child process tracking for app.getAppMetrics() (#26657)
chore: use ESLint API for linting (#26705)
docs: revised offscreen rendering page (#26542)
test: deflake current-render-view-deleted test (#26698)
chore: remove deprecated extension APIs (#26696)
build: use all-for-one goma (#26699)
chore: remove deprecated shell.moveItemToTrash() (#26723)
Bump v13.0.0-nightly.20201130
fix: delay emitting NotifyIcon events on Windows (#26668)
feat: add process.uptime() to sandboxed renderers (#26684)
chore: fixup patches linting (#26595)
docs: added fiddle support for code samples (#26501)
fix: uaf in WebContents::DidStopLoading (#26702)
build: remove sccache (#26701)
Bump v13.0.0-nightly.20201127
chore: remove deprecated crashReporter APIs (#26695)
Bump v13.0.0-nightly.20201126
fix: use-after-free in ElectronBrowserContext during shutdown (#26680)
Bump v13.0.0-nightly.20201125
chore: add descriptions for patches (#26671)
Revert "build: use one-for-all goma (#26679)" (#26689)
chore: tidy up docs markdown (#26666)
build: use one-for-all goma (#26679)
refactor: replace V8 hidden values with WeakMap / WeakSet (#26659)
chore: include alt text for images in markdown (#26665)
Bump v13.0.0-nightly.20201124
fix: Update Squirrel.mac to fix permissions bug. (#26358)
fix: crash on exit in Event destructor (#26537)
build: update npx.py to support npx@7 (#26662)
chore: use relative links in docs (#26360)
fix: make screen wrapper remote-friendly again (#26620)
refactor: use getWebPreference() for all options (#26531)
fix: reject contentTracing.stopRecording on failure (#26608)
fix: segfault on webContents.fromId(xxx) (#26609)
docs: use asterisks for unordered lists (#26552)
chore: update nmv for Electron v13 (#26581)
Bump v13.0.0-nightly.20201123
Bump v13.0.0-nightly.20201120
refactor: align shutdown signal handling with upstream (#26559)
build: fix build with enable_printing=false (#26597)
Bump v13.0.0-nightly.20201119
docs: fix relative link (#26585)
chore: tidy up markdown (#26554)
chore: improve docs relative link linting (#26359)
docs: add a white background to body (#26504)
fix: use public APIs in place of private CTFontDescriptorIsSystemUIFont in ui/gfx (#26548)
revert: disable rosetta as Electron does not run under rosetta
Bump v12.0.0-nightly.20201118
Revert "Bump v12.0.0-nightly.20201118"
Bump v12.0.0-nightly.20201118
docs: update contextIsolation documentation on access to globals (#19732)
fix: LC_ALL env should not be changed (#26507)
docs: restructured docs directory (#26335)
build: don't generate patches mtime cache if it already exists (#26468)
feat: allow setting the Origin header and Sec-Fetch-* headers in net.request() (#26135)
refactor: rename managed_web_contents to inspectable_web_contents (#26525)
refactor: inline and rename findInPage request id (#26524)
chore: remove redundant access modifier (#26523)
chore: remove undocumented tabTraverse method (#26522)
refactor: consolidate WebContents::{Create,New} (#26521)
refactor: move GetPrinterList off WebContents (#26518)
fix: getLoginItemSettings() on windows (#26515)
test: support for adding extra module paths (#26490)
refactor: move TerminationStatus converter (#26520)
fix: setCertVerifyProc canceling unrelated requests (#26517)
fix: BrowserWindow.fromBrowserView in multiple-BrowserView windows (#26493)
docs: note about structured clone and DOM types (#26516)
docs: update breaking changes for Electron 11 (#26526)
chore: bump node to v14.15.1 (master) (#26533)
Bump v12.0.0-nightly.20201117
fix: webContents interaction with draggable browserviews (#26496)
chore: bump chromium to ac06d6903a2c981ab90a8162f1ba0 (master) (#26499)
feat: add powerMonitor.onBatteryPower (#26494)
docs: update currently supported versions for 11.0.0 release (#26368)
docs: update 12 stable dates (#26367)
feat: add displayFrequency to Display object (#26472)
build: Use goma for all releases (#26476)
fix: Cannot read property 'setDockSide' of undefined (#26474)
fix: do not use crashpad APIs in the MAS build (#26491)
Bump v12.0.0-nightly.20201116
build: fix build with enable_builtin_spellchecker=false (#26466)
chore: bump chromium to adc5df74b86afdff676989ced8cd3 (master) (#26223)
feat: add app.runningUnderRosettaTranslation to detect running under rosetta (#26444)
Bump v12.0.0-nightly.20201113
Bump v12.0.0-nightly.20201112
chore: remove ScopedAllowBlockingForTesting (#26447)
docs: update issue template (#26293)
fix: ensure that internal messages are sent from the main process (#26429)
feat: add 'resized' event to BrowserWindow (#26216)
feat: add APIs to enable/disable spell checker (#26276)
chore: add patch description to gin allocator patch (#26415)
Bump v12.0.0-nightly.20201111
Bump v12.0.0-nightly.20201110
Revert "Bump v12.0.0-nightly.20201110"
build: upload dsym files for all mac releases (#26425)
fix: renderer crash on setImmediate (#26365)
refactor: merge CommonWebContentsDelegate into api::WebContents (#26189)
feat: add webContents.setWindowOpenHandler API (#24517)
Bump v12.0.0-nightly.20201110
Bump v12.0.0-nightly.20201109
build: verbose is flag, no value (#26414)
Revert "Bump v12.0.0-nightly.20201109"
chore: move upload-to-github to TS (#26390)
fix: use the gin PageAllocator instead of V8::PageAllocator (#26331)
fix: make draggable regions work when devtools is opened on macOS (#26361)
chore: cleanup inline HTML in docs (#26354)
Bump v12.0.0-nightly.20201109
Revert "Bump v12.0.0-nightly.20201109"
build: fix usage of octokit/rest and make uploading better (#26386)
Bump v12.0.0-nightly.20201109
docs: add native c++ windows debugging method (#26286)
Bump v12.0.0-nightly.20201106
chore: a few style fixes for internal-ambient.d.ts (#26347)
chore: cleanup whitespace in docs (#26356)
chore: fix markdown in docs (#26357)
Bump v12.0.0-nightly.20201105
build: support for running clang-tidy (#26150)
Bump v12.0.0-nightly.20201104
fix: [webview] fix missing properties on events when contextIsolation: true (#26289)
build: use goma for Windows releases (#26324)
refactor: store <webview> attributes as typed Map (#26307)
test: fix visibility flake on mac (#26323)
Bump v12.0.0-nightly.20201103
fix: fail protocol request when OnWrite fails (#26296)
Bump v12.0.0-nightly.20201102
docs: link ProtocolResponseUploadData (#26294)
fix: improve ses.cookies.set error message when url is missing (#26268)
docs: tidy up links (#26292)
fix: window.open not accepting size values with "px" at the end (#26104)
docs: update information on Linux support (#26265)
docs: revised dark mode feature page (#26187)
chore: cleanup pylint violations (#26252)
Bump v12.0.0-nightly.20201030
build: Python3 compat and Win line-endings fixes (#26091)
chore: tidy up .eslintrc.json (#26251)
fix: draggable region edge calculation on resize (#26233)
feat: correctly identify permissions when using setPermissionRequestHandler (#26172)
build: auto-push patch file changes (#26235)
chore: don't self-include inspectable_web_contents.h (#26236)
chore: bump node to v14.15.0 (master) (#26222)
Bump v12.0.0-nightly.20201029
docs: clarify default value of enableRemoteModule (#26170)
fix: build with printing disabled (#26248)
fix: hover text only working when VO enabled (#26183)
build: only check patch diffs in testing builds (#26232)
docs: can use depot_tools Python for Windows build (#26184)
feat: honor `nativeTheme.themeSource = 'dark'` before creating BrowserWindow on Windows (#25373)
fix: set app locale after user's script is loaded (#26185)
refactor: don't send ipcRenderer.sendSync() returnValue as an array (#26178)
Bump v12.0.0-nightly.20201028
fix: incorrect Content-Disposition encoding (#25961)
docs: revised the keyboard shortcuts feature page (#25999)
build: drop use of --typeRoots for default_app (#26094)
feat: add support for UNNotificationResponse in app 'ready' event (#25950)
chore: bump chromium to 9b2191ea59cba1e2f6da4dbb7dee0 (master) (#25995)
fix: transparently package bundles as zip archives (#25030)
fix: draggable regions exclusively on BrowserViews (#26145)
build: rename the v8 context snapshot on arm64 macOS builds (#26086)
chore: tidy up usage of PendingRemote (#26176)
docs: remove semantic commit checklist item (#26168)
test: deflake ses.setProxy test (#26167)
refactor: Chromium code style for enum classes (#26165)
feat: Electron Fuses, package time feature toggles (#24241)
chore: change some for loops to range-based (#26182)
chore: use consistent parameter names (#26162)
Bump v12.0.0-nightly.20201027
feat: Added support for all proxy modes (#24937)
docs: revised windows taskbar page (#26120)
fix: delay emitting powerMonitor events on windows (#25836)
docs: fix app 'ready' event arguments (#26171)
docs: revised linux desktop actions page (#26118)
chore: use auto to avoid repeating type (#26113)
fix: ensure object is not used after move (#26115)
docs: Windows Security modifies Chromium checkout (#26151)
fix: Don't sort the headers of ClientRequest (#26134)
refactor: remove x11 logic from filenames.gni (#26146)
Bump v12.0.0-nightly.20201026
docs: add snapcraft + electron-packager example (#25750)
docs: revised the represented file feature page (#26018)
fix: optimized asar paths checks (#26024)
feat: add osProcessId / name properties to webFrameMain (#26093)
chore: bump @typescript-eslint version (#25986)
chore: bump @electron/docs-parser version (#26088)
fix: disable use of the vm module in the renderer (#26087)
Bump v12.0.0-nightly.20201023
fix: re-enable the spellchecker when new language list set (#26119)
fix: setSimpleFullScreen shows traffic light in frameless window (#26096)
chore: synchronously destroy WebContents on event prevented (#26090)
docs: revised the application progress bar feature page (#26003)
chore: prefer empty() check for readability (#26109)
fix: return early on promise rejection (#26095)
docs: add discord link to docs community page (#26048)
Bump v12.0.0-nightly.20201022
fix: release NSAlert properly (#26078)
docs: revised the web embeds feature page (#26008)
build: fix running eslint on Windows (#26014)
feat: add webPreferences.enablePreferredSizeMode (#25874)
build: lint the npm folder (#26085)
feat: add disabledCipherSuites option to setSSLConfig (#25818)
chore: sort filenames (#26049)
Bump v12.0.0-nightly.20201021
docs: put required field frontmost in the dialog options (#26059)
docs: revised the online-offline event detection feature page (#26017)
feat: add net.online / net.isOnline() (#21004)
chore: make RenderProcessHostPrivilege enum class (#26050)
build: Wrap bundles using webpack (#25557)
build: mtime cache for patches to speed up build (#25881)
fix: add Wayland support (#26022)
Bump v12.0.0-nightly.20201020
docs: revised Notifications feature page (#25901)
docs: improve relative link linting and fix broken (#26020)
build: lint patches for trailing whitespace (#26007)
feat: add support for share menu on macOS (#25629)
docs: revised the macos dock menu feature page (#25985)
perf: remove GC timer that fired once per minute. (#25958)
docs: revised the recent documents feature page (#25941)
test: disable flaky arm tests (#26046)
fix: crash when printing (#25989)
docs: update native file drag and drop (#26044)
chore: bump node to v14.14.0 (master) (#25994)
fix: support new PDF viewer update (#26010)
build: fix invocation of cpplint on Windows (#26011)
chore: tweak branch detection in release notes. (#25973)
fix: correct null pointer checks in autoresizing browser views (#25951)
fix: segfault in SerialChooserController (#25969)
Bump v12.0.0-nightly.20201019
feat: add serviceName to 'child-process-gone' / app.getAppMetrics() (#25975)
chore: fix linter errors (#25996)
feat: Expose renderer spellcheck API (#25060)
refactor: use Map instead of Object for better semantics (#25982)
fix: Save As PDF from PDF Preview (#25959)
ci: disable CalculateNativeWinOcclusion for woa (#26001)
chore: update chore_expose_v8_initialization_isolate_callbacks.patch (#25992)
Bump v12.0.0-nightly.20201016
feat: support exclude from capture on Windows (#24274)
docs: revised the drag and drop feature page (#25939)
chore: bump chromium to 6b9fa6b352d824d052222e1abe541 (master) (#25558)
fix: maximized frameless window bleeding to other monitors (#25940)
build: fix missing dependency resulting in a random build failure (#25943)
docs: fix protocol.registerFileProtocol() usage in session.md (#25949)
Bump v12.0.0-nightly.20201015
docs: move breaking-changes-ns.md contents to breaking-changes.md (#25921)
fix: pass module resolution paths to wrapped function (#25891)
Bump v12.0.0-nightly.20201014
refactor: create IPC_MESSAGES enum for IPC message channels (#25694)
docs: revised version of the quick start guide (#25760)
chore: cleanup some typos in comments (#25770)
docs: add troubleshooting for gclient sync issues (#25841)
fix: uv loop polling when render process reuse enabled (#25869)
Bump v12.0.0-nightly.20201013
fix: s3put not replacing enough \\ (#25866)
fix: update squirrel.mac to handle bug in Big Sur (#25864)
fix: NativeImage.getScaleFactors returns correct scales (#25832)
docs: gclient sync --ignore_locks was removed (#25843)
chore: convert guest-view-manager.js to TypeScript (#25825)
Bump v12.0.0-nightly.20201012
refactor: wrap Object.prototype.hasOwnProperty.call (#25834)
feat: hide electron links in default help menu when packaged (#25831)
Bump v12.0.0-nightly.20201009
feat: add webFrameMain API to the main process (#25464)
chore: update chore_expose_v8_initialization_isolate_callbacks.patch (#25851)
fix: notifications successfully never timeout with included flag (#25820)
docs: update link to `did-fail-load` events (#25794)
docs: fix typos (#25808)
feat: add support for preventing the system context menu (#25795)
fix: wasm code generation in the renderer (#25777)
chore: bump node to v14.13.1 (master) (#25824)
feat: add ability to close connections for a session (#24945)
refactor: replace a few any-s with proper types (#25681)
build: print upload script output (#25814)
fix: window.open doesn't work correctly in child window (#25080)
chore: bump node to v14.13.0 (master) (#25788)
Bump v12.0.0-nightly.20201007
test: improve app 'session-created' event spec (#25799)
fix: sync devtools frontend mime types with upstream (#25780)
fix: prevent UAF in NativeImage.getBitmap (#25782)
chore: use noop ShouldAbortOnUncaughtException cb (#25772)
Bump v12.0.0-nightly.20201006
refactor: remove duplicate <webview> event list (#25697)
fix: access violation during redirects (intercepted requests) (#25393)
docs: end listener must be placed before data listener (#25568)
refactor: check ELECTRON_ENABLE_LOGGING via native implementation (#25623)
fix: passing content-length down the stream for intercepted requests (#25324)
fix: allow ClientRequest responses to be throttled (#25531)
build: python3 compat and fix line endings on Win (#25767)
docs: added additional instructions to RUN the application (#25743)
docs: trim trailing whitespace (#25768)
fix: no more need to hijack process.stdout on Win32 (#25765)
docs: link ProtocolRequest doc (#25761)
fix: output Unix-style paths for git diffs on Win (#25763)
build: fix typos in script messages (#25766)
docs: add Discord Server to README (#25751)
Bump v12.0.0-nightly.20201005
fix: python3 compatibility (#25762)
docs: update snapcraft tutorial background information (#25747)
docs: fix spelling error in updates tutorial (#25725)
chore: move remote module fixtures for easier deletion when removed (#25736)
fix: nativeImage.crop().toBitmap() returning garbage (#25757)
feat: add webContents.forcefullyCrashRenderer() to forcefully terminate a renderer process (#25580)
build: fix mergeShasums (#25752)
build: use https for sysroot download (#25754)
chore: fix nmv for Electron v12 (#25749)
chore: convert guest-window-manager.js to TypeScript (#25709)
Bump v12.0.0-nightly.20201002
chore: cleanup typings/internal-electron.d.ts (#25711)
fix: crash when application launched from UNUserNotificationCenter notification (#25702)
docs: rename launch-failure -> launch-failed to match C++ code (#25726)
fix: suppress worldSafe warning emitted from security checks (#25692)
Bump v12.0.0-nightly.20201001
build: move to ACR for docker image storage (#25710)
build: use aws-sdk-js instead of boto (#25693)
fix: gdi printing in silent printing mode (#25679)
ci: fixup doc only check on Windows (#25700)
chore: force homebrew cache to update (#25703)
chore: fix package.json reference to atom directory (#25682)
Bump v12.0.0-nightly.20200930
chore(extensions): remove unused features json (#25660)
feat: custom toast xml and failure reporting for notifications (#25401)
fix: submenu should be autoreleased (#25617)
refactor: use chromium x11 error handler (#25611)
feat: [net] add "credentials" option to net.request (#25284)
docs: command line flags for GPU controls (#25589)
refactor: remove unnecessary copied helper (#25668)
Bump v12.0.0-nightly.20200929
chore: add got for release script (#25671)
fix: ensure ready-to-show event is fired (#25632)
docs: clarify example in message-channel-main (#25625)
feat: add serial api support (#25237)
Bump v12.0.0-nightly.20200928
fix: crash in printing on Windows (#25622)
Bump v12.0.0-nightly.20200925
docs: document process.crashReporter apis in node children (#25579)
chore: improve renderer crash logging (#25592)
Bump v12.0.0-nightly.20200924
chore: remove custom Node.js debugger (#25587)
chore: bump node in DEPS to v14.12.0 (#25593)
docs: pepper flash plugin info appears at chrome://version now (#25445)
feat: allow setting SSL config (#25461)
chore: fix minor script warnings (#25575)
build: fix Node.js filename generation (#25577)
feat(extensions): expose ExtensionRegistryObserver events in Session (#25385)
fix: decompress devtools discovery html (#25576)
fix: order menu items before filtering excess separators (#25563)
Bump v12.0.0-nightly.20200923
docs: add more info about downloadItem.setSavePath api (#25402)
fix: unsubscribe from observers when window is closing (#25554)
docs: remove unused StreamProtocolResponse / StringProtocolResponse (#25573)
docs: fix incorrect dialog.showMessageBox() docs (#25549)
docs: remove deprecated options for the findInPage method. (#25574)
feat: add macOS fast user switching evt (#25321)
Bump v12.0.0-nightly.20200922
chore: bump node to v14.11.0 (master) (#25489)
build: use newer xCode image (#25564)
feat: add BrowserWindow.isTabletMode API (#25209)
build: add --only support to the nan test runner (#25560)
fix: check printer list when no default printers (#25515)
refactor: remove native_browser_view web contents get function (#25526)
Bump v12.0.0-nightly.20200921
chore: bump chromium to ec5bc1743792d64724693eb357083 (master) (#24984)
fix: NOTREACHED in content::ChildProcessHost::GetChildPath when enable_plugins=false (#25525)
refactor: replace USE_X11 with OS_LINUX for sharing code with Ozone (#25522)
fix: app.importCertificate crash on Linux (#25523)
chore: add @nornagon as codeowner of remote (#25500)
Bump v12.0.0-nightly.20200918
fix: close window when leave fs crash (#25468)
feat: read/write Toast Activator CLSID in shortcuts (#25493)
chore: upgrade to Node.js v14.9.0 (#25249)
Bump v12.0.0-nightly.20200917
test: retry the "v8 samples" test for a few times (#25477)
fix: prevent destroyed view references from causing crashes (#25411)
build: fix build with enable_pdf_viewer=false (#25494)
fix: disable CORS when webSecurity is disabled (#25463)
docs: update menu example to avoid remote (#25291)
fix: check for destroyed webcontents in converter (#25431)
Bump v12.0.0-nightly.20200916
chore: log hint on renderer crash (#25317)
fix: ensure ready-to-show event is fired (#25448)
test: make a few tests hide their windows (#25466)
fix(extensions): define platform info to prevent renderer crash (#25357)
Bump v12.0.0-nightly.20200915
fix: call node::Stop on exit (#25430)
chore: update dependencies (#25456)
refactor: use owner window for BrowserWindow.fromWebContents (#25408)
feat: remove getMediaSourceIdForWebContents() (#25414)
docs: remove references to remote from docs (#25416)
chore: remove unused code from our js scripts (#25419)
Bump v12.0.0-nightly.20200914
chore: change `== None` to `is None` (#25202)
chore: remove unused imports in our python scripts (#25406)
refactor: add a wrapper for wrangling uv handles. (#25332)
fix: Ensure electron delay loads the same modules as chromium (#25428)
chore: add wg-security as required reviewer for rpc-server changes (#25415)
Bump v12.0.0-nightly.20200911
test: reduce flakiness in pdf test (#25407)
fix: crash on nativeImage on Windows on ARM (#25396)
chore: deprecate remote (#25293)
Bump v12.0.0-nightly.20200910
refactor(extensions): break load warnings into newlines (#25358)
build: use python 2 shebang for git scripts (#25335)
Bump v12.0.0-nightly.20200909
fix: bind fake mojo service for badging (#25294)
fix(extensions): devtools now open for background pages (#22217)
docs: full links to MD files in development README (#24963)
docs: clarify a11y docs (#24973)
fix: update node certdata to NSS 3.56 (#25313)
chore(extensions): remove old renderer code (#25347)
Bump v12.0.0-nightly.20200907
fix: handle electron script errors better (#25328)
Bump v12.0.0-nightly.20200904
fix: only focus a webContents if the window was not initially hidden (#25292)
docs: breaking changes for moveItemToTrash (#25286)
feat: [crashReporter] enable compression by default (#25288)
chore: graceful handling of notes with sub-lists (#25279)
fix: avoid creating client_id file for empty DIR_CRASH_DUMPS (#25296)
Bump v12.0.0-nightly.20200903
fix: multiple dock icons when calling dock.show/hide (#25269)
chore: remove "no breaking changes" warning in PR template (#25285)
feat: add shell.trashItem() to replace shell.moveItemToTrash() (#25114)
fix: provide asynchronous cleanup hooks in n-api (#25135)
Bump v12.0.0-nightly.20200902
docs: setZoomLevel chromium zoom policy (#25105)
revert: "fix: reply notifs sometimes destroyed too early" (#25247)
feat(extensions): add support for some chrome.management APIs (#25098)
docs: note remote deprecation in docs/api/remote (#24941)
ci: cleanup up test app directories (#25145)
Bump v12.0.0-nightly.20200831
fix: client area inset calculation when maximized for framless windows (#25052)
chore: replace CRLF with LF (#25161)
docs: fix supported platforms of powerMonitor (#25149)
fix: save dialog extensions should be deterministic (#25164)
Bump v12.0.0-nightly.20200828
fix: honor pageRanges when printing (#25064)
fix: do not reset process_id in URLLoaderFactoryParams (#25139)
chore: remove bv before setting owner window (#25172)
chore: wrap add/remove view in extra check (#25166)
chore: we do not use the nightly tag on npm (#25147)
fix: resolve RegisterSuspendResumeNotification dynamically (#25162)
fix: make shell.moveItemToTrash return false on Windows when move unsuccessful (#25124)
Bump v12.0.0-nightly.20200827
chore: force source code and markdown files to use LF line ending (#25134)
test: add tests for shell.moveItemToTrash (#25113)
Bump v11.0.0-nightly.20200826
fix: mitigate use of private macOS font API (#25117)
fix: prevent crash if BrowserView webContents was destroyed (#25112)
chore: update import for use new ECMA features (#24987)
Bump v11.0.0-nightly.20200825
docs: add restricted header info to ClientRequest docs (#25075)
fix: [linux] open directories with dbus FileManager (#25087)
fix: save normal window bounds when maximizing (#25051)
fix: register for connected standby changes (#25076)
build: update to typescript 4 (#25091)
fix: global shortcut media keys working with accessibility (#24145)
ci: fix WOA failing tests (#25018)
feat: add nativeImage.createThumbnailFromPath API (#24802)
docs: update currently supported versions for 10.0.0 release (#25027)
docs: update 11.0 stable release date (#25073)
feat: make window visual effect state customizable (#25083)
Bump v11.0.0-nightly.20200824
fix: reply notifs sometimes destroyed too early (#25086)
feat: allow monospaced font styles to be specified for macOS tray titles (#25059)
Bump v11.0.0-nightly.20200822
Revert "refactor: use aws-sdk-js instead of boto (#24863)"
Revert "Bump v11.0.0-nightly.20200822"
Bump v11.0.0-nightly.20200822
build: remove mksnapshot token file
build: fix electron_mksnapshot_zip_done check
Bump v11.0.0-nightly.20200821
Revert "Bump v11.0.0-nightly.20200821"
build: more space on arm64 builds, running out of ideas here (#25043)
refactor: wire will-navigate up to a navigation throttle instead of OpenURL (#25065)
feat: expose currencyCode on Product struct in IAP module (#25058)
feat: record v8 cpu samples in the main process (#24819)
Bump v11.0.0-nightly.20200821
fix: add handling for non-absolute extension paths (#25068)
fix: Resolve bookmarks without mounting network drives (#24708)
fix: revert 6ecf729 to fix Linux titlebar dark mode (#25055)
Bump v11.0.0-nightly.20200820
fix: DCHECK on print job cancellation (#25031)
feat: reinvigorate visibleOnFullscreen option (#24956)
fix: calculate frame when setting window placement (#25014)
fix: enable TLS renegotiation in node (#25022)
Bump v11.0.0-nightly.20200819
fix(extensions): enable WebSQL in background pages (#24798)
test: use custom partition for sw tests (#24999)
Bump v11.0.0-nightly.20200818
docs: fix typos (#24982)
docs: update default value for `enableRemoteModule` in BrowserWindow (#24955)
build: increase available space on mac arm64 vm (#25008)
fix(docs): update outdated ref to NSP (#24925)
build: upload windows breakpad symbols (#25000)
fix: browser contexts live forever (#24964)
fix: pdf download not working (#24946)
Bump v11.0.0-nightly.20200817
chore: bump chromium to 7d4ac110045b7647fa8a81f5f0709 (master) (#24970)
Bump v11.0.0-nightly.20200814
refactor: use aws-sdk-js instead of boto (#24863)
Bump v11.0.0-nightly.20200813
docs: add Notification section to SECURITY.md (#24926)
chore: bump chromium to 0e4ca9c0a63d7a39bd910997ad4c6 (master) (#24687)
Bump v11.0.0-nightly.20200812
Bump v11.0.0-nightly.20200811
Revert "Bump v11.0.0-nightly.20200811"
Bump v11.0.0-nightly.20200811
Revert "Bump v11.0.0-nightly.20200811"
Bump v11.0.0-nightly.20200811
docs: fix typo in api/ipc-renderer (#24901)
docs: fixed minor typos (#24912)
fix: export libuv symbols (#24659)
fix: pdf viewer template strings (#24913)
fix: ts-node node is not a thing
build: in release notes script, do not assume electron dirname (#24927)
fix: add deps on the new devtools highlighter (#24921)
build: handle unhandled promise rejection in notes (#24923)
chore: update patches (#24919)
fix: don't try to init mmap on missing asar (#24890)
Bump v11.0.0-nightly.20200810
build: fix path to git attributes for for patch export (#24896)
fix: send guid with linux crashes (#24881)
build: remove the tools folder (#24880)
build: type check the script folder during lint (#24892)
build: convert some scripts to TS (#24891)
Bump v11.0.0-nightly.20200807
Revert "Bump v11.0.0-nightly.20200807"
build: upload the file stream not a JSON blob for the read stream (#24889)
Bump v11.0.0-nightly.20200807
fix: add handle scope in SelectClientCertificate (#24868)
Bump v11.0.0-nightly.20200806
Revert "Bump v11.0.0-nightly.20200806"
Bump v11.0.0-nightly.20200806
Revert "Bump v11.0.0-nightly.20200806"
Bump v11.0.0-nightly.20200806
build: only do the lower case symbol copy on case sensitive file systems (#24876)
Revert "Bump v11.0.0-nightly.20200806"
fix: do not render inactive titlebar as active on Windows (#24847)
Bump v11.0.0-nightly.20200806
fix: use non-symbols in isURLInstance check (#24831)
build: ensure symbol files are named lowercase on disk so that boto can find them (#24856)
build: quash octokit deprecation warning (#24790)
Bump v11.0.0-nightly.20200805
fix: duplicate suspend/resume events (#24818)
docs: remove reference to remote from faq (#24816)
docs: remove references to 'remote' from app-arch tutorial (#24815)
refactor: mmap asar files (#24470)
Bump v11.0.0-nightly.20200804
fix(extensions): bypass cors in requests made from background pages (#24483)
refactor: ginify Archive (#24799)
chore: remove overwritten Node.js patch (#24775)
Bump v11.0.0-nightly.20200803
Bump v11.0.0-nightly.20200731
fix: provide AXTextChangeValueStartMarker for macOS a11y value change notifications (#24801)
refactor: ginify WebContents (#24651)
Bump v11.0.0-nightly.20200730
chore: add V8 crash information to crashReporter (#24771)
fix: increase max crash key value length (#24782)
fix: save crash reports locally when uploadToServer: false on linux (#24778)
build: upload sentry src bundles on windows as well (#24773)
feat: add capabilities to app.getLoginItemSettings() and app.setLoginItemSettings()  (#24494)
Bump v11.0.0-nightly.20200729
test: fail tests if the spec runner promise rejects (#24762)
refactor: ginify app (#24679)
fix: wrap OnWindowMessage w/ handlescope (#24716)
fix: crash when navigating from a page with webview that has inherited zoom level (#24757)
refactor: ginify autoUpdater (#24678)
refactor: ginify Screen (#24677)
refactor: ginify SystemPreferences (#24675)
Bump v11.0.0-nightly.20200728
Revert "Bump v11.0.0-nightly.20200728"
build: fix failing arm64 builds on macOS (#24748)
Bump v11.0.0-nightly.20200728
build: only move folder if it exists when freeing space (#24740)
fix: loading dedicated/shared worker scripts over custom protocol (#20625)
fix: disable rosetta as Electron does not run under rosetta (#24670)
chore: update symbol server URL (#24709)
chore: bump node to v12.18.3 (master) (#24707)
chore: add trop annotations to release notes. (#24672)
Bump v11.0.0-nightly.20200727
Bump v11.0.0-nightly.20200724
fix: missing base::CommandLine include (#24718)
refactor: ginify InAppPurchase (#24674)
fix: ensure that errors thrown in the context bridge are created in the correct context (#24534)
feat: add worldSafe flag for executeJS results (#24114)
docs: fix role typos in startSpeaking/stopSpeaking (#24550)
build: fix linting issue in docs (#24710)
docs: clarify use of pageRanges when printing. (#24694)
Bump v11.0.0-nightly.20200723
docs: add Documentation for Open Recent Menu-item (#24374)
fix: remove corner mask override to increase window resize performance (#24642)
fix: Allow VoiceOver to navigate "back into" web contents (#24655)
refactor: ginify NativeTheme (#24673)
Bump v11.0.0-nightly.20200722
build: upload x-compiled arm mksnapshot only on linux (#24680)
chore: bump chromium to 1a093e6a0cb5e72ba78990fe39824 (master) (#24575)
perf: do not convert object keys in ctx bridge as they are always primitives (#24671)
docs: update the URL for catapult's trace viewer. (#24654)
Bump v11.0.0-nightly.20200721
Revert "chore: add Trop annotations to release notes. (#24644)"
doc: fix typos in role values (#24552)
chore: add Trop annotations to release notes. (#24644)
build: add arm64 macOS publish jobs (#24652)
docs: document missing permission types (#24660)
docs: update webContents.send link in ipcMain docs (#24245)
docs: add descriptions for types of permissions (#23781)
fix: Close protocol response streams when aborted (#24014)
fix: use Node.js isolate setup logic in bindings (#24579)
refactor: clean up Session with CleanedUpAtExit (#24603)
refactor: use gin::Arguments in WebContents (#24604)
test: add more auto updater tests for squirrel.mac (#24611)
Bump v11.0.0-nightly.20200720
feat: add child-process-gone event to app (#24367)
build: add apple silicon support (#24545)
Bump v11.0.0-nightly.20200717
refactor: WebContents::From returns pointer (#24605)
build: free up space on macOS VM in background (#24607)
build: stop the macOS checkout step early if the src cache already exists (#24606)
refactor: stop using isolate() in WebContents (#24602)
build: tsify asar and move to webpack js2c pipeline (#24495)
build: convert touch-bar to typescript (#24511)
fix: chrome://accessibility not loading (#24437)
Bump v11.0.0-nightly.20200716
fix: do not register the node ESM loader in renderer processes (#24301)
refactor: rename InspectableWebContents{Impl =>} (#24543)
docs: fix wrong description in breaking-changes.md (#24477)
Bump v11.0.0-nightly.20200715
chore: bump chromium to ab0f6deadb33bb3a0201cd2d21602 (master) (#24539)
perf: pass primitives directly through the context bridge, avoids copying (#24531)
build: free up more space on the mac VM (#24549)
fix: broken --trace-sync-io flag in Node.js (#24529)
fix: Node.js cpu and heap profiling (#24528)
Bump v11.0.0-nightly.20200714
chore: bump chromium to 6d130075d378a64187360ba4e7820 (master) (#24256)
refactor: ginify NativeImage (#24486)
fix: use default NSVisualEffectState (#24471)
build: ensure that electron/lib/browser can only use browser or common imports (#24512)
chore: remove some unused code in the net module (#24488)
fix: default to simplex for printing DuplexMode (#24489)
build: run the JS linter on the build folder (#24513)
docs: fix incorrect formatting in browser docs. (#24473)
fix: always callback error with invalid print settings (#24476)
build: tsify worker/init (#24497)
build: tsify isolated_renderer/init (#24496)
build: update octicons (#24492)
build: update in-range dependencies (#24480)
build: fix linting issue in spec-main
build: update @types packages and fs-extra (#24475)
build: update to standard 14 (#24479)
refactor: ginify BrowserView (#23578)
Bump v11.0.0-nightly.20200709
build: update typescript parser deps (#24474)
build: update webpack / TS build deps (#24460)
build: update linting deps (#24461)
fix: coerce executeJavaScript arguments (#24396)
fix: clipboard.readBuffer returning empty value (#24454)
build: update ts defs generator (#24459)
fix: uv_walk crash on web worker close (#24436)
Bump v11.0.0-nightly.20200708
fix: use try/catch for base class converter error (#24246)
chore: don't duplicate devtools constants (#24440)
feat: add name to app.getAppMetrics() output (#24359)
Bump v11.0.0-nightly.20200707
docs: fix typos in doc/tutorial/electron-versioning.md (#24362)
chore: tsify menu (#24358)
build: use python3 for electron hooks (#24435)
fix: use RenderViewReady to call InstallTransparency (#24390)
build: fix build with context snapshot disabled (#24433)
chore: tsify web-contents (#24325)
chore: add missing _Deprecated_ to 'renderer-process-crashed' on app (#24410)
Bump v11.0.0-nightly.20200706
chore: use node_bindings loop for clarity (#24391)
fix: intermittent 100% CPU usage on macOS (#24394)
Bump v11.0.0-nightly.20200703
fix: remove same-tag notifications before showing new ones (#24302)
build: build squirrel and its dependencies from source (#24318)
feat: expose sessionId in debugger module (#24170)
Bump v11.0.0-nightly.20200702
chore: bump node to v12.18.2 (master) (#24381)
chore: tsify auto-updater (#24328)
test: convert more tests to async / await (#24373)
docs: add hardened runtime entitlement info (#24369)
chore: remove upstreamed BoringSSL patch (#24363)
Bump v11.0.0-nightly.20200701
ci: update timeout on breakpad generation to 30 minutes (#24382)
chore: tsify dialog (#24324)
test: make sure tests fail properly instead of timing out (#24316)
chore: tsify extensions shim (#24355)
feat: add app.getApplicationInfoForProtocol API  (#24112)
Bump v11.0.0-nightly.20200630
fix: macOS modal focus (#24286)
chore: tsify net-log (#24322)
Bump v11.0.0-nightly.20200629
refactor: rename TopLevelWindow to BaseWindow (#24305)
chore: tsify browser-window (#24326)
test: use delay() helper (#24321)
Bump v11.0.0-nightly.20200626
chore: add deprecation warning for the default of contextIsolation (#23507)
chore: convert rpc-server to ts (#24271)
feat: implement systemPreferences.getMediaAccessStatus() on Windows (#24275)
Bump v11.0.0-nightly.20200625
feat: support suspend/resume on macOS (#24254)
Bump v11.0.0-nightly.20200624
fix: frameless vibrant modals shouldn't bezel (#24250)
feat: support suspend/resume on Windows (#24251)
chore: expose electrons built in modules in the REPL along with nodes (#24249)
chore: minify internal JS code (#24252)
fix: only notify mouse-up on mouse-up (#24240)
Bump v11.0.0-nightly.20200623
refactor: prevent consistent early exception (#24191)
refactor: improve the REPL (#24204)
chore: bump chromium to a84d34e372b8fb5e9a94b1b4b447e (master) (#23908)
refactor: remove uses of v8::Isolate::GetCurrent (#24179)
Bump v11.0.0-nightly.20200622
fix: emit click events with tray context menu (#24200)
fix: isTrustedSender() in test-app (#24214)
Bump v11.0.0-nightly.20200619
chore: bump node to v12.18.1 (master) (#24199)
Bump v11.0.0-nightly.20200618
fix: do not use CONTEXT_MENU flag for tray menu (reland) (#24097)
chore: bump node to v12.18.0 (master) (#23789)
fix: use correct 'pasteandmatchstyle' shortcut on macOS (#24153)
docs: fix MenuItem click handler type (#24147)
fix: let Node.js perform microtask checkpoint in the main process (#24131)
Bump v11.0.0-nightly.20200617
chore: cleanup unused WebContents::DereferenceRemoteJSObject() (#24167)
refactor: use WeakRef on main process side of remote (#24115)
build: remove dead symlink from MAS build (#24158)
feat: Add did-become-active event on mac (#23872)
Bump v11.0.0-nightly.20200616
Revert "build: remove dead symlink from MAS build (#23831)" (#24146)
build: remove dead symlink from MAS build (#23831)
chore: remove unused deprecate.fnToProperty() (#24069)
fix: emit 'shutdown' outside -[NSApplication terminate:] (#24111)
build: retry external binary downloads a few times (#24110)
chore: remove test usages of createIDWeakMap (#24116)
Bump v11.0.0-nightly.20200615
fix: showing certificate dialog with no window (#24091)
refactor: use WeakRef on renderer side of remote (#24037)
test: add test for gc race in remote (#24087)
fix: fs.readdir should support withFileTypes (#24062)
Bump v11.0.0-nightly.20200612
fix: handle non client pointer events from pen on Win10 (#24042)
refactor: tsify remote (#24034)
test: extract defer helper (#24019)
Revert "fix: do not use CONTEXT_MENU flag for tray menu (#23843)" (#24076)
refactor: remove renderer-side refcount in remote (#24054)
fix: correctly handle nexttick scheduling in stream reads (#24022)
Bump v11.0.0-nightly.20200611
ci: use call instead of cmd /C (#23985)
fix: assign session to remote webContents (#23989)
docs: fix explanation of darwin auto-quit prevention (#24003)
fix: Add .paks for media-internals and webrtc-internals pages (#24010)
Bump v11.0.0-nightly.20200610
chore: backport advapi32 libuv fix (#24030)
fix: Allow windows behind macOS elements if frame = false (#23976)
test: extract RemoteControlApp to spec-helpers (#24020)
chore: use more inclusive language in a few places (#24023)
build(deps): bump minimist from 1.2.0 to 1.2.5 in /spec-main (#24026)
Bump v11.0.0-nightly.20200609
docs: update setAboutPanelOptions iconPath description (#23998)
chore: ensure release notes always come from Clerk (#23777)
feat: add {stream} opt to custom protocol registry to configure media player (#22955)
docs: mention build-tools in the build instructions (#23909)
Bump v11.0.0-nightly.20200608
fix: volume key globalShortcut deregistration (#23984)
test: reduce flakiness of post-context-release ipc test (#23992)
fix: add missing isComposing KeyboardEvent property (#23971)
build: check patches on update (#23103)
fix: throw instead of crash when using ipcRenderer after context released (#23917)
chore: update tracking bug (#23959)
fix: missing HandleScopes in touch bar (#23936)
Bump v11.0.0-nightly.20200604
fix: use acceptLanguages argument in session.setUserAgent() (#23944)
docs: remove confusing notes on Node (#23929)
build: fix filenames autogen with new BUILDFLAG syntax (#23952)
fix: destroy GetSize callback at last (#23930)
fix: compensate for lazy-loaded circular deps (#23890)
Bump v11.0.0-nightly.20200603
test: load page with some content when testing extension (#23901)
fix: restore original GTK/appindicator implementation of tray icons (#23674)
fix: correctly support the --inspect-brk-node flag (#23903)
fix: default to NTLM v2 in the network service for POSIX platforms (#23846)
docs: default of allowRendererProcessReuse is true (#23888)
docs: move protocol-ns to protocol.md (#23883)
Bump v11.0.0-nightly.20200602
chore: note quiet period in PR template. (#23889)
chore: update patches (#23902)
chore: remove IPC hiddens (#23720)
perf: lazily load some modules in sandbox mode (#23856)
fix: Make the `--disable-color-correct-rendering` switch work again (#23787)
fix: notify URLLoaderClient about redirect inside intercepted protocol's handler (#23742)
test: wait for beforeunload handler to be installed (#23874)
fix: add patch to prevent crash during frame swap with ctx isolation enabled (#23684)
fix: expose electron/common and electron/renderer modules in sandboxed preloads (#23857)
build: make electron renderer init scripts profilable (#23855)
chore: bump chromium to d66c2e32380bf5d1eb5e1fe37faef (master) (#23791)
Bump v11.0.0-nightly.20200601
fix: do not use CONTEXT_MENU flag for tray menu (#23843)
build: fix for "enable_desktop_capturer = false" (#23864)
feat: add V8CacheOptions webpreference (#23842)
fix: MakeAbsoluteFilePath is a blocking call (#23840)
chore: tsify sandboxed init (#23719)
docs: remove upgrading-node.md (#23802)
Bump v11.0.0-nightly.20200529
fix: use system installed objcopy to copy debug symbols (#23835)
fix: ensure nativeImage serialization main->renderer (#23759)
Bump v11.0.0-nightly.20200528
Revert "fix: trigger activate event when app is activated via app switcher (#23727)" (#23818)
fix: volume key globalShortcut registration (#23782)
test: refactor how spec files are collected (#23774)
fix: only bezel frameless windows (#23779)
fix: weakly reference MenuModel from MenuController (#23778)
fix: handle asynchronous URL loading in bw proxy (#23776)
fix: pass correct buffer length (#23785)
Bump v11.0.0-nightly.20200527
feat: add desktopCapturer.getMediaSourceIdForWebContents() to get stream source id from web contents (#22701)
chore: bump chromium to 580fe983e138952553cd6af11ee8b (master) (#23379)
Bump v11.0.0-nightly.20200526
fix: trigger activate event when app is activated via app switcher (#23727)
test: return after inspector connection is closed (#23763)
ci: deflake WOA tests (#23707)
test: use WebContents event to test beforeunload (#23699)
test: more logging in node inspector test (#23746)
Bump v11.0.0-nightly.20200525
chore: tsify more of lib (#23721)
refactor: use typeutils for nativeImage serialization (#23693)
Bump v11.0.0-nightly.20200522
chore: remove unused isolated-world-args (#23716)
fix: read GTK dark theme setting on Linux (#23678)
docs: Explain console-message parameters (#23661)
docs: remove app feedback program doc (#23673)
fix: trigger about panel for about role on on win (#23687)
fix: support 10-x-y in the release notes generator (#23709)
docs: errors in isolated world are not dispatched (#23653)
feat: Add Secure Keyboard Entry APIs in macOS (#20678)
test: hide child windows in webview spec (#23682)
test: multiple processes may crash in crashReporter test (#23695)
Bump v10.0.0-nightly.20200521
docs: document optional scaleFactor param to nativeImage fns (#23671)
feat: expose the desktopCapturer module in the main process (#23548)
refactor: correctly serialize nativeImage/buffer with typeUtils (#23666)
test: call "expect()" on a correct call stack (#23675)
net: Don't ignore the referer header in net.request (#23386)
fix: wrap EmitWarning with HandleScope (#23667)
Bump v10.0.0-nightly.20200520
feat: deprecate uncompressed crash uploads (#23598)
docs: note no planned breaking changes for v11 (#23638)
refactor: ginify Session (#23569)
test: bind to 127.0.0.1 in contextBridge spec (#23639)
docs: remove note about experimental nature of sandbox (#23651)
test: attempt to track down "illegal access" error (#23645)
Bump v10.0.0-nightly.20200519
test: disable parallel/test-worker-sharedarraybuffer-from-worker-thread (#23652)
docs: update currently supported versions for 9.0.0 release (#23510)
docs: update 10.0 stable release date (#23511)
fix: make sure hunspell file is not destroyed in UI thread (#23631)
test: add retries to another beforeunload test (#23644)
test: fix multiple connections in inspector test (#23648)
build: save mksnapshot args on Windows (#23634)
refactor: tsify net module (#23618)
ci: use longer mocha timeout on WOA testing (#23633)
fix: nativeImage remote serialization (#23543)
Bump v10.0.0-nightly.20200518
feat: allow compressing crash uploads on linux (#23597)
test: retry beforeunload test (#23576)
refactor: improve MoveItemToTrash error description (#23589)
feat: add app render-process-gone event (#23560)
refactor: remove the RenderFrameFunctionStore and use privates to memory manage (#23592)
Bump v10.0.0-nightly.20200515
chore: align crash patch with upstream (#23595)
feat: look harder for a commit's pull request. (#23593)
build: remove unused header from a patch (#23585)
Bump v10.0.0-nightly.20200514
feat: add contents.getBackgroundThrottling() + backgroundThrottling property (#21036)
test: remove usage of the remote module from tests (#23571)
fix: exclude crashpad_handler binary on linux (#23538)
fix: generate symbols for the correct crashpad handler binary (#23537)
test: skip remote module related tests when enable_remote_module = false (#23557)
perf: use type-utils for desktopCapturer.getSources() result serialization (#23549)
Bump v10.0.0-nightly.20200513
fix: expose v8util.createIDWeakMap() regardless of enable_remote_module (#23546)
fix: leave behind the unmodified XDG_CURRENT_DESKTOP variable (#23512)
feat: app.getPath('recent') (#23381)
docs: add documentation on how to use the built-in spellchecker (#23508)
fix: run Node.js at-exit callbacks in renderer proc (#23419)
build: use correct v8_context_snapshot_generator in mksnapshot zip (#23536)
fix: do not destroy thread in UI thread (#23495)
build: fix building with enable_remote_module = false (#23499)
Bump v10.0.0-nightly.20200512
chore: add TRACE calls for heavy ctx bridge methods (#23501)
feat: add new render-process-gone event (#23096)
chore: clean up context bridge scopes and add specs for internal bridge (#23334)
docs: add document on contextIsolation (#23474)
test: skip "handles Promise timeouts correctly" when ELECTRON_RUN_AS_NODE is disabled (#23415)
chore: add DCHECK to ensure extension_system() is not used for in-memory sessions (#23475)
docs: badgeCount needs notifications permission on macOS (#23488)
Bump v10.0.0-nightly.20200511
Update mime-typed-buffer.md (#23384)
spec: fix conditions for some tests (#23489)
fix: NSImageName string conversion (#23467)
build: allow use of BUILDFLAG directives from within JS code (#20328)
refactor: SystemPreferences::SetUserDefault (#23412)
chore: handle Browser.close over CDP (#23436)
chore: fix linting (#23473)
fix: do not initialize any extension related logic in OffTheRecord contexts (#22772)
Bump v10.0.0-nightly.20200508
chore: support --remote-debugging-pipe (#23433)
fix: crashReporter incompatible with sandbox on Linux (#23265)
fix: multiple extension filters on macOS (#23409)
Bump v10.0.0-nightly.20200507
chore: remove obsolete cjs assert patch (#23422)
feat: add enableWebSQL webpreference (#23311)
Bump v10.0.0-nightly.20200506
build: update sccache for linux (#23418)
docs: fix markdown list item formatting error (#23368)
Bump v10.0.0-nightly.20200505
fix: guard pdf behind correct buildflags (#23404)
fix: respect system language preferences on Win/macOS (#23247)
Bump v10.0.0-nightly.20200504
refactor: return null when passing empty menu templates (#23364)
Bump v10.0.0-nightly.20200501
fix: hold browser_context instead of render_frame_host to fix lifetime issues (#23271)
fix: ensure guest-embedder map is updated when webview is removed (#23342)
chore: remove unused ELECTRON_GET_CONTENT_SCRIPTS ipc handler (#23371)
docs: fix autoupdater tutorial API (#23298)
Remove redundant release note items (#23335)
docs: fix Chrome Tracing tool link markdown (#23367)
chore: bump chromium to 0f4170320ff37e971064916aed1dc (master) (#23285)
docs: rename duplicated interface (#23362)
refactor: remove code for non-native extensions shim (#23340)
docs: event.newGuest for new-window in WebContents and webContents in BrowsweWindow's constructor (#21698)
Bump v10.0.0-nightly.20200430
fix: prevent Menu.buildFromTemplate with empty array (#23308)
chore: bump node to v12.16.3 (master) (#23327)
chore: remove obsolete webview patch (#23341)
fix: do not leak IPC or context bridge promises (#23321)
ci: make sure msedge isn't running at end of woa test (#23332)
Bump v10.0.0-nightly.20200429
fix: build when some buildflags are disabled (#23307)
docs: remove sccache info from build instructions (#23297)
refactor: use Node.js isolate setup in node mode (#23213)
Bump v10.0.0-nightly.20200428
fix: do not add 104 to the history length (#23301)
refactor: port window.open and window.opener to use ctx bridge instead of hole punching (#23235)
docs: menu-item.md remove duplicate options (#23286)
fix: missing handlescopes in event emission (#23140)
Bump v10.0.0-nightly.20200427
docs: add section for how to handle update servers with auth (#23000)
fix: isolate callbacks in node_bindings (#23261)
docs: update description on second-instance event. (#23119)
style: use build/include_directory for NOLINT (#23266)
chore: bump chromium to 4563763ef26ad940d4e988d7245dd (master) (#23219)
test: fix crashReporter test on woa (#23242)
fix: set default menu in will-finish-launching event (#23214)
Bump v10.0.0-nightly.20200423
ci: robustify doc only change check (#23237)
fix: do not mutate ipc instances across contexts (#23236)
test: refactor crashReporter tests (#23178)
fix: do not allow child windows to specify their own preload script (#23226)
refactor: port parts of window-setup to use ctx bridge instead of being run in the main world (#23194)
fix: do not double-declare webPreferences (#23223)
fix: block custom window.open when nativeWindowOpen is true (#23188)
Bump v10.0.0-nightly.20200422
fix: ensure that functions are not retained beyond their context being released (#23207)
refactor: improve feature string parsing (#23130)
fix: moveAbove not working on Windows (#23161)
test: add test for datalist autofills (#23110)
fix: allow blocking IO for setAppLogsPath to avoid DCHECK (#23111)
fix: use Node's microtasks policy in node_main.cc (#23153)
docs: update versioning doc for new major-x-y format (#23176)
chore: bump chromium to a70ba0e79c1551239beb37961f643 (master) (#23199)
feat: support fullScreen BrowserWindow property (#23145)
fix: cherry-pick 04dab5a91b61 from chromium (#23179)
chore: bump chromium to 2600291d041c530698616a4716cdf (master) (#23122)
spec: fix type errors in devToolsWebContents (#23187)
build: fix crashpad+asan (#23180)
refactor: remove extra args from crashreporter init (#23144)
fix: explicitly mark unlimited requests as max priority (#23118)
docs: update code of conduct (#23137)
docs: remove GitHub references (#23136)
Bump v10.0.0-nightly.20200420
chore: rename renderer_ipc.cc to ipc_renderer.cc (#23125)
docs: fix devToolsWebContents union type (#23143)
Bump v10.0.0-nightly.20200417
fix: wasm codegen in script.runInNewContext (#23129)
chore: remove disable_user_gesture... patch (#23066)
fix: diagnostic reporting capabilities in Node.js (#23126)
chore: shrink boringssl patch (#23101)
docs: Improve the codesigning docs (#22838)
docs: explain the swipe event on macOS (#23117)
Bump v10.0.0-nightly.20200416
fix: deinit platform before resetting node env (#23116)
fix: add missing handle scope in file_dialog_gtk (#23109)
Bump v10.0.0-nightly.20200415
chore: bump chromium to 8f405dc5d5e416ffaf640aa3d088a (master) (#23107)
ci: fix v8 cppgc file in wrong location (#23112)
feat: crashReporter: expose rateLimit and compress options (#23062)
chore: bump node to v12.16.2 (master) (#23057)
Bump v10.0.0-nightly.20200414
build: fix nightly release copy (#23097)
chore: bump chromium to 98ebf6c3f0b7bd96bdb1a4b42208f (master) (#22999)
build: rename atom.ico to electron.ico (#23099)
chore: rename atom things to electron things in our docs / scripts (#23100)
build: rename atom.rc to electron.rc (#23098)
chore: remove discouraged base::Passed (#22871)
chore: remove patch: fix_breakpad_symbol_generation_on_linux_arm (#23076)
build: improve patch filename remembering (#23070)
fix: enable workaround for nativeWindowOpen hang (#22825)
Bump v10.0.0-nightly.20200413
fix: don't assign NSAlert to window which is not visible (#22672)
fix: do not ignore electron exit signals in cli.js wrapper (#22878)
chore: remove export_fetchapi... patch (#23067)
Bump v10.0.0-nightly.20200410
fix: reset node env earlier during shutdown (#23039)
chore: fix type check in systemPreferences module specs (#23064)
docs: fix type definition for setUserDefault (#23002)
build: update patches (#23061)
build: implement zip64 stripping (#22998)
ci: ignore exit code of update-index (#23036)
Bump v10.0.0-nightly.20200409
chore: remove no longer needed debugging patch (#23030)
chore: make WebContentsView take webPreferences as parameter (#22997)
fix: missing HandleScope in OnDownloadPathGenerated (#23005)
ci: auto-3way patches and detect changes (#22976)
Bump v10.0.0-nightly.20200408
build: strip local/dbg symbols, from Linux binaries (#22968)
fix: nullptr check when closing windows (#22948)
fix: persist maximizable state when toggling fullscreen (#22988)
docs: Update the "Electron vs NW.js" document (#22836)
docs: note that shell can't be used in sandboxed renderers (#22974)
Bump v10.0.0-nightly.20200407
feat: expose electron/{process} typed modules (#22937)
build: set merge=union for .patches (#22985)
chore: bump chromium to 1ba9678489174a6123358a7683f37 (master) (#22719)
Bump v10.0.0-nightly.20200406
Bump v10.0.0-nightly.20200403
fix: webframe crashes for removed render frame (#22925)
refactor: ginify DownloadItem (#22924)
refactor: ginify Menu (#22916)
feat: expose the sameSite value for cookies (#22789)
fix: undo and redo broken in webviews (#22911)
docs: document what experimental means explicitly (#22893)
Bump v10.0.0-nightly.20200402
Bump v10.0.0-nightly.20200401
feat: add property support for remainder of BrowserWindow (#22771)
docs: clarify app.enableSandbox documentation (#22894)
fix: strip extra data from release zips (#22891)
test: do not trigger unhandled promise rejections (#22922)
fix: webRequest module should work with file:// protocol (#22903)
fix: ensure standard schemes are registered in nw service process (#22867)
chore: there is no need to define _init (#22882)
fix: screen module should still be creatable if the first create is before the ready event (#22895)
refactor: ginify Notification (#22821)
 ci: cleanup extraneous release tests (#22892)
Bump v10.0.0-nightly.20200331
docs: minor grammar & spelling fixes (#22851)
fix: propagate preferred color scheme to the renderer (#22896)
docs: enumerate deprecation policy (#22859)
docs: update Electron 9 release date (#22863)
ci: use smaller vms for testing since we are using goma (#22887)
chore: update PR template to suggest 'none' instead of no-notes (#22864)
fix: dialog fails to show after modal close (#22858)
Bump v10.0.0-nightly.20200330
feat: default gtk darkTheme option to nativeTheme.shouldUseDarkColors for better platform support (#20138)
refactor: ginify Tray (#22822)
chore: remove unused classes of views API (#22861)
Bump v10.0.0-nightly.20200327
fix: missing HandleScope in WebDialogHelper (#22843)
fix: heap-use-after-free in tray.popUpContextMenu (#22842)
build: upgrade asar to a version that requires Node 10 (#22351)
docs: Burn the about document (#22839)
fix: don't try to hide host which has set flag disable_hidden_ (#22832)
feat: enhance native window.open to match the custom implementation's behavior (#19703)
docs: categorize breaking changes (#22834)
refactor: ginify protocol (#22812)
Bump v10.0.0-nightly.20200326
refactor: ginify Cookies (#22823)
fix: prevent remote from messing with constructor names (#22820)
Bump v10.0.0-nightly.20200325
fix: don't allow window to go behind menu bar on mac (#22770)
refactor: ginify powerMonitor (#22751)
Bump v10.0.0-nightly.20200324
build: fix beta version bumper logic for betas beyond 10 (#22810)
build: fix missing pdf dep in chromium_src (#22811)
Revert "fix: better window hierarchy checks"
fix: better window hierarchy checks
refactor: ginify net.request (#22779)
Bump v10.0.0-nightly.20200323
feat: add ImageView (#22738)
fix: allow net requests to use Same-Site cookies (#22788)
feat: add support for net requests to use the session cookie store (#22704)
chore: stop leaking v8 environment (#22761)
refactor: ginify ServiceWorkerContext (#22756)
build: enable JS semicolons (#22783)
fix: print from PDF viewer not working (#22760)
Bump v10.0.0-nightly.20200320
build: update eslint + eslint plugins (#22777)
refactor: move set_owned_by_client calls to base View (#22739)
build: update typescript and webpack (#22776)
refactor: ginify globalShortcut (#22755)
refactor: ginify desktopCapturer (#22746)
fix: add missing pdfTwoUpViewEnabled status (#22735)
chore: add @loc to manual backport config (#22748)
test: no need to loadURL in menu test (#22737)
build: auto-generate the codesigning cert used for macOS CI testing runs (#17668)
refactor: ginify session.netLog (#22732)
chore: fix net specs when rerunning locally (#22745)
fix: prevent crash in ListValue v8 converter when conversion fails (#22753)
refactor: EventEmitters without gin_helper (#22726)
chore: update app module property support (#22713)
chore: refactor all the net specs to be async with better error handling (#22731)
Bump v10.0.0-nightly.20200318
docs: update type and description of IncomingMessage.headers (#22522)
docs: Added a note about chromium logs on the debugging page (#22476)
chore: more modules to dual prop/fn support (#22688)
refactor: omit duplicates from app's x11 icon list (#22702)
refactor: precache the IsWindowStateEvent() XAtom (#22706)
fix: remove bad usages of for-in and guard against it (#22616)
fix: persist maximizable state through theme change (#22677)
build: update release scripts to handle a remote master (#22707)
Bump v10.0.0-nightly.20200317
chore: bump chromium to bd902e8eecfd48fd85d01d0eea0f2 (master) (#22694)
chore: support props/fns for BrowserWindow (#22686)
Bump v10.0.0-nightly.20200316
chore: fix default_app dimensions (#22675)
fix: enter handle scope when creating custom event (#22657)
fix: when building with enable_pepper_flash = false (#22684)
chore: bump chromium to bc8f70ed4cfe2262ea833750eaddb (master) (#22649)
fix: crash on invalid zoomFactor (#22673)
fix: crash when destroying WebContentsView during GC (#22674)
chore: revert deprecated WebContents properties (#22640)
feat: add onclose method to MessagePort (#22532)
Bump v10.0.0-nightly.20200313
fix: add handle scope in dialog's promise callback (#22658)
Bump v10.0.0-nightly.20200312
feat: MessagePorts in the main process (#22404)
docs: remove reference to electron-updater (#22641)
feat: add force option to app.focus() (#22612)
Bump v10.0.0-nightly.20200311
chore: bump chromium to 31b4a223e6e2bd9d5ce6c37cbdec6 (master) (#22514)
fix(extensions): add more properties to port.sender.tab (#22592)
feat: add API to check if session is persistent (#22622)
fix: remove catch-all HandleScope (#22531)
chore: ShowItemInFolder should use COMSTA (#22614)
build: fix broken Views build (#22621)
test: test setPath for errors thrown (#22626)
Bump v10.0.0-nightly.20200310
fix: when building with enable_pdf_viewer = false (#22604)
build: fix build without built-in spellchecker (#22594)
fix: prevent in-memory sessions from writing to custom spellchecker dictionary (#22157)
chore: don't delete nightly tag after draft (#22588)
test: disable spellchecker context menu test for arm (#22590)
ci: fix windows source cache (#22609)
build: upload sentry src bundles to symbol S3 bucket (#22572)
docs: clarify that we support the latest minor for the stable lines we support (#22613)
fix: quick follow-up to threadpool PR (#22611)
refactor: migrate base::ThreadPool() as trait to base::ThreadPool:: API (#22555)
Bump v10.0.0-nightly.20200309
chore: proxy_config_monitor_ is no longer used in BrowserContext (#22576)
Bump v10.0.0-nightly.20200306
chore: shrink key gen patch (#22543)
feat: programmatically modify traffic light positioning (#22533)
docs: clean up dark mode related docs (#22489)
fix: reposition traffic lights on theme change (#22534)
feat: add events for spellcheck dictionary downloads (#22449)
Bump v10.0.0-nightly.20200305
feat(extensions): add chrome.tabs.connect API (#22457)
feat(extensions): add chrome.i18n API (#22455)
ci: add third_party/angle/.git/HEAD to src archive (#22538)
fix: destroy node platform after destroying wrappers (#22527)
chore: lint docs on precommit (#22515)
Bump v10.0.0-nightly.20200304
docs: add custom dir placeholder explainer to installation guide (#22491)
fix: disable contextBridge object identity caching (#21803)
build: we moved goma to build-tools (#22488)
docs: document the openItem -> openPath breaking change (#22507)
fix: add patch to fix linux arm build (#22523)
fix: bail early if no printers on the network (#22418)
fix: properly forward properties to webview (#22485)
fix: do not reposition traffic lights when fullscreened (#22492)
chore: bump chromium to 5b340c815ce15ab2efcf277ed19e9 (master) (#22064)
Bump v10.0.0-nightly.20200303
test: give arm machines more time to load spellchecker (#22494)
test: add specs for custom dictionary API (#22158)
feat: optional typically sync callback for WebFrame#executeJavaScript* (#21423)
docs: add documentation on case insensitive dictionary hosting (#22483)
feat: add disableDialogs option to WebPreferences (#22395)
Bump v10.0.0-nightly.20200302
fix: call focus on native window on call to webContents.focus on mac (#22323)
fix: Add ContentsView to AXChildren (#22399)
fix: make webRequest work for CORS preflight requests (#22407)
fix: dictionaries download path should be in userdata (#22444)
fix: do not call close on sheets themselves (#22410)
chore: ensure correct scopes are in place (#22397)
test: throw if no valid outDir (#22412)
fix: revive offscreen rendering support (#22160)
Revert "Bump v10.0.0-nightly.20200227"
Bump v10.0.0-nightly.20200227
chore: add tests for the spellchecker (#22099)
docs: improve documentation on spellchecker download URL (#22383)
fix: allow persistent media salts (#22386)
fix: port CL that fixes ARIA tree impl for macOS (#22367)
fix: guard against duplicate TouchBarItem IDs (#22272)
chore: add deprecation warning on setting app.allowRendererProcessReuse to false (#22337)
Bump v10.0.0-nightly.20200226
fix: add patch to set the base download URL rather than override it completely (#22382)
test: disable clipboard tests for WOA (#22374)
fix: pass safeDialogs preference properly (#22353)
fix: don't run environment bootstrapper (#22342)
Bump v10.0.0-nightly.20200225
feat: set app.enableRendererProcessReuse to true by default (#22336)
fix: explicitly specify `typeRoots` in devtools-frontend (#22195)
chore: bump node to v12.16.1 (master) (#22168)
chore: do not override history methods when rendererprocessreuse is enabled (#22335)
chore: wrap process restart flag in renderer process reuse check (#22334)
feat: Add OtherItemsProxy TouchBar item (#22270)
fix(extensions): set lowest isolated world id (#22212)
feat(extensions): add more properties to extension object (#22244)
fix: disable remote layer APIs in MAS build (#20965)
Bump v10.0.0-nightly.20200223
Bump v10.0.0-nightly.20200222
chore: allow custom node-spec-runner options (#22315)
fix: emit will-navigate for sandboxed contents (#22188)
fix: revert {Atom => Electron}Application rename (#22206)
docs: update session.clearAuthCache (#22292)
fix: typo in crash reporter constructor (#22274)
Bump v10.0.0-nightly.20200221
feat: add API for receiving logs from service workers (#20624)
docs: clean up protocol docs (#22262)
Bump v10.0.0-nightly.20200220
chore: remove libcc from release not generator (#22271)
docs: Correct Electron 9 stable date (#22258)
doc: remove accidental deprecation (#22256)
Bump v10.0.0-nightly.20200218
Bump v10.0.0-nightly.20200217
docs: update dev docs atom -> shell (#22199)
docs: replace electron.atom.io with electronjs.org in docs/fiddles (#22196)
fix: don't include breakpad_symbols dir in dsym.zip (#22191)
Bump v10.0.0-nightly.20200216
Bump v10.0.0-nightly.20200215
fix: add patch to route mouse event navigations through the WebContentsDelegate (#22202)
Revert "Bump v10.0.0-nightly.20200214"
Bump v10.0.0-nightly.20200214
chore: rename node bindings atom => electron (#22176)
chore: update NMV for Electron 10 (#22190)
fix: crash on custom printing margins (#22164)
Bump v10.0.0-nightly.20200213
Revert "Bump v10.0.0-nightly.20200213"
Bump v10.0.0-nightly.20200213
feat: enable pdf viewer (#21794)
Bump v10.0.0-nightly.20200212
Revert "Bump v10.0.0-nightly.20200212"
Bump v10.0.0-nightly.20200212
Revert "Bump v10.0.0-nightly.20200212"
fix: no-arg console.log is undefined (#22165)
build: fix release script to work with sudowoodo (#22170)
Bump v10.0.0-nightly.20200212
ci: fix script to initialize Windows VM (#22140)
fix RTL bug when used with traffic light repositioning (#22132)
ci: Speed up release (#22126)
build: fix spellchecker deps (#22142)
refactor: use NSVisualEffectMaterial* constants directly (#22121)
Bump v10.0.0-nightly.20200211
fix: make webRequest work with WebSocket (#22040)
spec: unskip webview.printToPDF (#22122)
chore: bump node to v12.15.0 (master) (#22063)
fix: remove cyclic references of BrowserWindow (#22006)
feat: add session.listWordsFromSpellCheckerDictionary API (#22101)
chore: Revert "notes: Adding Github CI to testing documentation (#21996)" (#22123)
feat: add session.removeWordFromSpellCheckerDictionary API (#22039)
fix: explicitly specify `typeRoots` to avoid crawling parent directories (#22078)
feat: disable the remote module by default (#22091)
fix: disallow loading extensions in temp sessions (#22090)
Bump v10.0.0-nightly.20200210
docs: modify the showMessageBox method to showMessageBoxSync (#22080)
refactor: remove use of Node's DebugOptions (#22083)
Bump v10.0.0-nightly.20200209
fix: use a WeakPtr so we do not UAF the store in FunctionLifetimeMonitor (#22056)
fix: flash plugin (#22072)
build: try using newer version of xcode/macOS sdk (#22104)
Bump v10.0.0-nightly.20200208
build: preserve timestamps when stripping files (#22094)
chore: remove debugging log (#22093)
build: copy chromedriver to correct location (#22074)
ci: fix build failure on doc only changes (#22075)
refactor: saner blink_initialization_order.patch (#22054)
Bump v10.0.0-nightly.20200207
test: get native unit tests running (#21914)
feat: enable passing Node.js cli flags (#21110)
feat: [extensions] support extension.getBackgroundPage (#21951)
docs: document supported extensions apis (#22021)
fix: add Chromium patch to fix RTL window buttons (#22016)
build: copy chromedriver to proper directory for release (#22070)
ci:  enable goma for all testing builds (#21992)
chore: remove teams without write access from CODEOWNERS (#22043)
docs: clarify requirements for GOOGLE_API_KEY (#22034)
chore: print more logging for failed tests (#22060)
Bump v10.0.0-nightly.20200206
chore: bump chromium to 28254008f9e7a2aea5d4426906bfd (master) (#22025)
build: actually save the brew cache on macOS (#22052)
feat: allow macOS apps to set activation policies (#21983)
fix: delay deletion of Wrappable objects (#22044)
fix: check WebContents in OnGetDefaultPrinter (#22041)
Bump v9.0.0-nightly.20200205
build: don't use component_ffmpeg for chromedriver (#22033)
feat: allow specifying pageSize for print (#22014)
notes: Adding Github CI to testing documentation (#21996)
fix: crash on boot with --log-net-log (#22035)
chore: rename atom -> electron (#21986)
chore: wrap cb with default invocation (#22013)
ci: make sure mksnapshot is invoked with proper args. (#21991)
docs: update currently supported versions for 8.0.0 release (#21909)
docs: update 9.0 release dates (#21910)
Bump v9.0.0-nightly.20200204
ci: fix ELECTRON_OUT_DIR (#21994)
refactor: prefer using app.whenReady() (#21972)
chore: bump chromium to 469ca5ff317a168e6ad99ca0f23f1 (master) (#22001)
feat: enable native extensions support (#21814)
ci: verify chromedriver (#21993)
fix: bind spellchecker receivers correctly in the renderer (#21997)
Bump v9.0.0-nightly.20200203
Bump v9.0.0-nightly.20200202
Bump v9.0.0-nightly.20200201
test: add test for app.on('certificate-error') event (#21978)
fix: default printer if none is provided (#21956)
fix: return path from netLog.stopLogging (#21985)
chore: bump chromium to 8a35438d19da7538142380551a2ce (master) (#21971)
chore: add safety checks to RepositionTrafficLights (#21981)
fix: don't crash on invalid certs (#21976)
Bump v9.0.0-nightly.20200131
docs: add links to the issue tracker, to developer/issues (#21945)
docs: fix missing import, explicitly use nativeTheme api (#21937)
feat: allow GUID parameter to avoid systray demotion on Windows  (#21891)
fix: prevent print crash on bad deviceName (#21946)
docs: windows don't need to be retained (#21957)
test: check actual output generated from printToPDF (#21949)
Bump v9.0.0-nightly.20200130
fix: use the new MediaPlayPause key listener for internal chrome logic (#21959)
docs: fix missing docs for <webview>.print() (#21962)
fix: ensure web_contents is not nullptr in UpdateDraggableRegions (#21955)
fix: add executable to ChromeDriver's rpath for electron 8+ (#21961)
chore: bump chromium to 669e1d2c51901c686b055da965f2d (master) (#21954)
fix: compilation of native modules on windows with older msvc versions (#21950)
chore: fix linter errors in .mm files (#21931)
Bump v9.0.0-nightly.20200129
build: strip zip determinism on artifact upload (#21756)
fix: show module name in deprecation warning for context-aware modules (#21952)
chore: bump chromium to 4b6692e4cc2839729bb7ac009586a (master) (#21864)
update (#21915)
docs: move breaking changes out of API folder (#21870)
docs: remove references to inaccessible team pages (#21923)
docs: fix links to SECURITY and CONTRIBUTING files (#21921)
feat: add more options to printToPDF (#21906)
fix: use powerMonitor.on() only after app is ready (#21927)
Bump v9.0.0-nightly.20200128
fix: ensure tray icon is the proper size on linux (#21904)
fix: About Panel credits should be dark mode aware (#21880)
ci: Use Windows VM initialized via script (#21882)
docs: clean up context bridge API docs (#21888)
fix: window.print() only working once (#21893)
feat: expose the chromium validated certificate in the certificate verify proc (#21890)
docs: add .lldbinit to macOS debugging docs (#21879)
Bump v9.0.0-nightly.20200127
docs(offscreen-rendering): missing word "is" (#21898)
test: use exit event to wait for process exit (#21865)
fix: menu not updating with Tray.setContextMenu (#21883)
Update browser-window.md (#21892)
fix: recursive printing crash (#21889)
Bump v9.0.0-nightly.20200126
Bump v9.0.0-nightly.20200125
feat: Exposing methods required by capturing a hidden webContents (#21679)
Bump v9.0.0-nightly.20200124
docs: details to run unit tests on Windows (#21840)
test: make window.history.pushState test more robust (#21875)
feat: custom positioning for traffic light buttons (#21781)
build: move external binaries to S3 (#21829)
test: specify target arch on mksnapshot (#21871)
ci: use goma for windows and linux builds (#21868)
Bump v9.0.0-nightly.20200123
docs: added info on bookmark return values for securityScopedBookmarks (#17584)
feat: add tray.closeContextMenu() (#21807)
Revert "Bump v9.0.0-nightly.20200122"
Bump v9.0.0-nightly.20200122
fix: some websites using WebComponents V0 not loading (#21858)
fix: Windows checkboxChecked edge case (#21852)
fix: crash when doing redirect navigation with webRequest listener (#21838)
fix: call SetCanActivate in setFocusable (#21846)
fix: [extensions] load extensions on the IO thread (#21811)
chore: [extensions] support old APIs when enable_electron_extensions = true (#21812)
chore: bump chromium to b243c83a66a7fded00f3408107778 (master) (#21827)
Bump v9.0.0-nightly.20200121
fix: [extensions] some chrome.extension APIs (#21804)
fix: ignore (un)lock events for sessions that aren't the current session (#21805)
docs: menu item labels are not dynamic (#21823)
Bump v9.0.0-nightly.20200119
Bump v9.0.0-nightly.20200118
docs: update setAspectRatio documentation (#19945)
fix: crash when restoring minimized hidden window (#21813)
chore: bump chromium to 279aeeec3c9fe2237bc31f776f269 (master) (#21521)
feat: add mouse-down & mouse-up to Tray (#21795)
Bump v9.0.0-nightly.20200117
fix: npm download failed when define 'npm_config_platform=mas' (#21801)
Bump v9.0.0-nightly.20200116
fix: printToPDF failing to generate PDF (#21783)
feat: [extensions] implement a couple of tabs APIs (#21779)
Bump v9.0.0-nightly.20200115
test: fix some failing and disabled node specs (#19518)
test: disable some flaky node tests (#21752)
docs: ignore_locks not break_repo_locks (#21775)
feat: just enough //extensions to load a simple devtools extension (#19515)
ci: Use Visual Studio Build Tools instead of VS Studio (#21771)
build: fix release asset names (#21772)
fix: pass full response headers in net module (#21552)
docs: Little fix in Goma docs (#21762)
Bump v9.0.0-nightly.20200114
fix: pass startPage url correctly to extensions (#21711)
chore: update goma documentation (#21761)
feat: flesh out the api for //extensions (#21587)
feat: [extensions] background pages (#21591)
build: upload windows toolchain profile (#21327)
fix: double-autorelease of NSImage (#21757)
fix: stream protocols not completing (#21733)
Bump v9.0.0-nightly.20200113
fix: disable private macOS APIs in MAS build except for CAContext/CALayerHost (#21573)
add border radius to frameless window (#20360)
docs: New fiddle example 'Create a new window' (#20480)
docs: Added Window Management Fiddle example (#20535)
feat: warn when remote is used without enableRemoteModule: true (#21546)
docs: Update online-offline-events.md to reflect nodeIntegration required (#21707)
docs: update source code dir structure (#21659)
Es6ify api docs (#21686)
fix(scripts): account for sys.platform being "linux" as well "linux2" (#21741)
fix: prefer occluded rather than unloading layout info (#21585)
fix: don't fallback to OpenFolderViaShell (#21668)
docs: responseHeaders should be Record<string, string[]> (#21730)
Bump v9.0.0-nightly.20200111
fix: avoid contextBridge double free on garbage collection (#21592)
feat: remove visibleOnFullscreen option (#21706)
Bump v9.0.0-nightly.20200110
fix: don't unnecessarily copy draggable regions (#21704)
test: move some fixtures from spec/ to spec-main/ (#21403)
test: retry for a few flaky tests (#21658)
chore: bump node to v12.14.1 (master) (#21703)
fix: Notification crash in before-quit (#21709)
docs: initial document for comparing web embeds (#20478)
feat: allow http-parser NODE_OPTION in packaged apps (#21694)
Bump v9.0.0-nightly.20200109
Bump v9.0.0-nightly.20200108
build: document electron goma usage and add the external binaries (#21622)
docs: Update react devtool version in document (#21601)
fix: load window-setup in sandboxed renderer (#21416)
refactor: throw error for getLastCrashReport if crashReporter not started (#21643)
Bump v9.0.0-nightly.20200106
Bump v9.0.0-nightly.20200105
Bump v9.0.0-nightly.20200104
docs: fix typos in security.md (#21665)
chore: update license year (#21657)
Bump v9.0.0-nightly.20200103
Bump v9.0.0-nightly.20200102
Bump v9.0.0-nightly.20200101
Bump v9.0.0-nightly.20191231
fix: highlight defaulted button correctly (#21642)
fix: SimpleURLLoaderWrapper redirects (#21630)
docs: fix shell.openPath documentation (#21641)
fix: improve error handling in npm install (#21589)
Bump v9.0.0-nightly.20191230
Bump v9.0.0-nightly.20191229
Bump v9.0.0-nightly.20191228
Bump v9.0.0-nightly.20191226
Bump v9.0.0-nightly.20191225
Bump v9.0.0-nightly.20191224
Bump v9.0.0-nightly.20191223
Bump v9.0.0-nightly.20191222
Bump v9.0.0-nightly.20191221
Bump v9.0.0-nightly.20191220
chore: bump node in DEPS to v12.14.0 (#21579)
refactor: update node main instance management (#21562)
Bump v9.0.0-nightly.20191219
fix: set enable_negotiate_port to false in allowNTLMCredentialsForDomains (#21571)
chore: make release branch pattern more robust (#21568)
build: free up macos disk space on Mac publish (#21569)
chore: bump node to v12.13.1 (master) (#21198)
Bump v9.0.0-nightly.20191218
ci: retry uploading pdb files on appveyor (#21561)
feat: remove deprecated base::Value-based serialization (#21560)
feat: remove deprecated base::Value-based serialization (#21560)
docs: replace systemPreferences.isDarkMode() with nativeTheme.shouldUseDarkColors (#21480)
build: allow getOutDir cli argument (#21545)
refactor: try just using regular [Sync] for MessageSync (#20797)
Bump v9.0.0-nightly.20191217
feat: enable explicit IAP restoration (#21461)
test: clean up some stale code in renderer spec runner (#21384)
docs: update webContents.printToPDF() example for promisified API (#21541)
docs: update installation docs to reflect latest @electron/get changes (#21491)
Bump v9.0.0-nightly.20191216
feat: allow pages to override window.history.length (#17742)
refactor: export internalWindowOpen from guest-window-manager (#21498)
Bump v9.0.0-nightly.20191215
ci: use cmd to call gclient (#21523)
Revert "Bump v9.0.0-nightly.20191214"
Bump v9.0.0-nightly.20191214
chore: bump chromium to 94cc24d3bb17a7406ba6c6cc6dc29 (master) (#21485)
fix: avoid contextBridge crash when RenderFrame address is reused (#21501)
feat: enable pointer compression and 31bit smis (#21468)
fix: enforce parent-child relationship in custom postMessage() handler (#21496)
chore: fix patch linter (#21495)
docs: Explain notarization, improve code-signing docs (#21373)
feat: add win.getBackgroundColor() for macOS (#21448)
Revert "Bump v9.0.0-nightly.20191213"
Bump v9.0.0-nightly.20191213
fix: quit after Chromium is fully started (#21488)
Bump v9.0.0-nightly.20191212
fix: sourcemaps not loading with network service (#21473)
fix: avoid Electron.dsym files in the main app bundle (#21447)
Bump v9.0.0-nightly.20191211
fix: name and expirationDate should be optional when setting cookie (#21454)
fix: MediaKey globalShortcuts not working on macOS (#21442)
fix: restore POST forms that open a new window with target=_blank (#21469)
chore: bump chromium to f755b70e34659441e72c1a928a406 (master) (#21000)
fix: restore accessibility window title on macOS (#21462)
Bump v9.0.0-nightly.20191210
fix: window menu should handle keys correctly (#21434)
chore: workflows and pipeline state were split in the circle API (#21441)
fix: hiding window menu should work on startup (#21436)
test: move remote specs to main process (#21387)
Bump v9.0.0-nightly.20191209
Bump v9.0.0-nightly.20191208
Bump v9.0.0-nightly.20191207
feat: add tracing info to WebContents IPC methods (#21404)
fix: fix ClientRequest.getUploadProgress (#21388)
feat: remove deprecated setLayoutZoomLevelLimits (#21383)
docs: fix return type of getPrinters (#21411)
fix: do not use messages after move (#21419)
fix: ensure persistence store still exists when GC runs (#21402)
Bump v9.0.0-nightly.20191206
docs: improve Windows build variable documentation (#20548)
ci: fix crash on arm testing (#21407)
fix: pass noLink correctly on Windows (#21386)
fix: remove minor "trailing whitespace" warnings (#21398)
Bump v9.0.0-nightly.20191205
chore: remove native_mate (Part 14) (#21365)
Bump v9.0.0-nightly.20191204
docs: Adds Native-UI tray Fiddle example (#20526)
docs: adds Native-UI Open external links and the file manager Fiddle example (#20524)
docs: update installation.md (#21331)
chore: remove unused shell/common/crash_reporter/win/crash_service.cc (#21349)
Bump v9.0.0-nightly.20191203
fix: deprecate setLayoutZoomLevelLimits (#21296)
fix: backgroundThrottling rwh assignment (#21037)
docs: rename ELECTRON_CACHE env variable to electron_config_cache (#21313)
fix: ensure no node globals passively leak when nodeIntegration is disabled (#21342)
Bump v9.0.0-nightly.20191202
Two 'close' in this line (#21345)
build: add hashes to the external binary downloader (#21328)
chore: delete the security issue template (#21344)
Bump v9.0.0-nightly.20191201
build: fix building with enable_builtin_spellchecker = false (#21334)
Bump v9.0.0-nightly.20191130
Bump v9.0.0-nightly.20191129
Bump v9.0.0-nightly.20191128
build: disable `strip_absolute_paths_from_debug_symbols` on debug.gn (#20884)
build: make CI faster, magic contained within (#21086)
test: retry beforeunload tests up to 3 times (#21293)
Bump v9.0.0-nightly.20191127
docs: app.dock could be `undefined` (#20609)
fix: correctly plumb checkboxChecked on win (#21248)
refactor: rewrite the net module to simplify state tracking (#21244)
fix: restore --ignore-connections-limit functionality (#21286)
feat: add session.addWordToSpellCheckerDictionary to allow custom words in the dictionary (#21266)
Bump v9.0.0-nightly.20191126
fix: allow reading body from non-2xx responses in net.request (#21055)
test: refactor net tests (#21265)
fix: reloadIgnoringCache() should ignore the cache (#21263)
fix: add missing early return (#21264)
Bump v9.0.0-nightly.20191125
Bump v9.0.0-nightly.20191124
Bump v9.0.0-nightly.20191123
chore: improve nativeImage path converter error (#21243)
feat: expose executeJavaScriptInIsolatedWorld on webContents (#21190)
fix: prevent silent failure when DOM storage quota exceeded (#20899)
Bump v9.0.0-nightly.20191122
fix: record cpu_profiler data for main process (#21187)
ci: handle network drive not being available (#21247)
docs: remove string literal type from window events (#21235)
docs: clarify uniqueness of WebContents.id, BrowserWindow.id (#21101)
Bump v9.0.0-nightly.20191121
refactor: declare KeyWeakMap<K, V> returned by createIDWeakMap() / createDoubleIDWeakMap() (#21171)
ci: generate debug symbols on Linux (#18676)
build: update release build endpoint from /jobs to /job (#21232)
fix: focus with OOPIF embedded inside <webview> (#21219)
build: delete unneeded files when running a release (#21216)
Revert "Bump v9.0.0-nightly.20191120"
Bump v9.0.0-nightly.20191120
fix: menu should not be garbage-collected when popuping (#21169)
docs: document the channel param for `event.reply` (#21185)
spec: skip flaky <webview>.capturePage() test on Windows (#21175)
Bump v9.0.0-nightly.20191119
build: use symbol_level 1 for 32bit linux releases (#21193)
build: use python3 to download external binaries (#21184)
fix: allow chromium to handle WM_NCCALCSIZE for frameless windows (#21164)
docs: fix `isMactemplateImage` type definition (#21166)
fix: stream protocols sometimes flake out (#21113)
Bump v9.0.0-nightly.20191118
Revert "Bump v9.0.0-nightly.20191118"
Bump v9.0.0-nightly.20191118
docs: Use Promise for `dialog.showMessageBox` (#21143)
Bump v9.0.0-nightly.20191117
Bump v9.0.0-nightly.20191116
fix: incorrect size of windows on differently scaled monitors (#21100)
Bump v9.0.0-nightly.20191115
test: remove a bunch of usage of the remote module (#21119)
fix: implement 'login' event for net.ClientRequest (#21096)
Bump v9.0.0-nightly.20191114
fix: webRequest should be able to modify CORS headers (#21099)
chore: remove unused promisify code (#21114)
chore: remove outdated v8 compat patch (#21115)
feat: add 'screen' to systemPreferences.getMediaAccessStatus() (#20764)
docs: document webkitdirectory breaking change (#20934)
build: missing include in windows release builds (#21045)
Bump v9.0.0-nightly.20191113
docs: added windows -> create frameless window example (#20591)
FEAT [#20442] : adds the fiddle for launching an app from URL in another app, including all 3 files main.js, index.html, renderer.js (#20718)
feat: #20442 adds fiddle for opening external links and the pro version of opening all outbound links (#20763)
build: include windows toolchain profiler (#20949)
feat: enhance PrinterInfo object values (#21081)
build: use autogenerated docker images for CI runs (#21056)
test: re-enable some node specs (#21084)
fix: NativeImage serialization of <webview>.capturePage() result (#20825)
build: fix nightly version bumping (#21079)
Bump v8.0.0-nightly.20191112
refactor: simplify Converter<content::PermissionType>::ToV8 (#21053)
docs: change invalid `bash session` language tag (#20827)
fix: implement 'login' event for WebContents (#20954)
Bump v8.0.0-nightly.20191111
Bump v8.0.0-nightly.20191110
Bump v8.0.0-nightly.20191109
chore: remove deprecated <webview>.getWebContents() (#20986)
docs: use new China's mirror address (#21030)
docs: correct the syntax to caniuse.com link (#21048)
chore: remove unnecessary patches (#21044)
fix: refactor printing for mojom (#21026)
Bump v8.0.0-nightly.20191108
feat: convert shell.openItem to async shell.openPath (#20682)
refactor: always initialize api::Protocol (#21009)
build: remove debug builds (#21016)
feat: deprecate <webview>.getWebContents() (#20726)
fix: check for validity of guest webcontents (#21019)
Bump v8.0.0-nightly.20191107
feat: add app.getApplicationNameForProtocol API (#20399)
build: speedy tests on circle by splitting the test files into multiple jobs (#21015)
build: store the ninja log for our builds (#21011)
docs: Adds Desktop notifications Fiddle example (#20525)
Bump v8.0.0-nightly.20191106
chore: emit the document-start and document-end events in a sandboxed renderer (#20987)
feat: allow TouchBarButton instances to be disabled (#20945)
chore: bump chromium to f30828899e4cd7161f6dc6507023f (master) (#20824)
build: speed up windows source retrieval  (#20955)
docs: fix win.setIcon ts type (#20950)
docs: update installation instructions for proxies (#20780)
fix: changed crlf to lf in some docs files (#20832)
fix: allow iframe-initiated HTML fullscreen to exit while in macOS fullscreen (#20962)
chore: upgrade ts generator for better type safety (#20975)
test: don't require 'q' until the test that needs it (#20958)
Bump v8.0.0-nightly.20191105
chore: fix build with enable_electron_extensions (#20959)
refactor: add Error to isSerializableObject() (#20886)
fix: proper i18n of recentDocuments item (#20948)
fix: cannot access nativeTheme via electron.remote (#20938)
fix: don't export __esModule = true by electron.ts (#20939)
fix: capture the promise global to avoid userland mutation (#20925)
chore: lint patch descriptions (#20919)
docs: document JS constant naming (#20892)
refactor: remove references to non-existent webui (#20867)
Bump v8.0.0-nightly.20191104
chore: remove no longer needed macOS SDK forward declarations (#19918)
Bump v8.0.0-nightly.20191103
fix: don't copy tray image when it's set (#20904)
chore: fix IsolateData handling (#20918)
Bump v8.0.0-nightly.20191102
feat: allow some NODE_OPTIONS in packaged apps (#20857)
chore: lint spec-main (#20835)
chore: add patch info for setAspectRatio (#20920)
docs: add Synchronous Messages Fiddle example (#20451)
feat: implement win.setAspectRatio() on Linux (#19516)
build: allow CircleCI timeout and retry to be set via env variables (#20896)
Bump v8.0.0-nightly.20191101
docs: add app information example (#20487)
refactor: migrates util::Promise to gin (#20871)
fix: use Unicode version of ShellExecute() in OpenExternalOnWorkerThread() (#20879)
build: enable sccache on windows (#20790)
ci: fix release build on windows (#20859)
feat: enable builtin spellchecker (#20692)
build: lengthen wait times and retries for CircleCI releases (#20889)
docs: Adds Dialogs Fiddle example (#20473)
docs: clean up performance checklist formatting (#20830)
Bump v8.0.0-nightly.20191031
fix: swapped labels on open/save gtkdialog (#20861)
build: do not try to run non existent VSTS release builds (#20866)
chore: remove native_mate (Part 12) (#20869)
test: there is only --ci (#20794)
fix: Disable compositor recycling only for attached views (#20829)
refactor: send the 'close' message asynchronously (#20796)
Bump v8.0.0-nightly.20191030
fix: devtools extensions not loading (#20791)
refactor: pass base::Value by value in JS API implementations  (#20809)
build: change to download sysroots from the new sysroot bucket (#20803)
fix: do not DCHECK non-const methods (#20833)
Bump v8.0.0-nightly.20191029
fix: pass frameId to v8Util.setRemoteCallbackFreer() (#20732)
docs: the ipc main listener being removed can have args (#20712)
test: remove last usages of spec/window-helpers (#20792)
fix: deprecation warnings in Electron code (#20793)
fix: properly generate requestID in webContents.printToPDF() (#20769)
chore: bump chromium to f5b345dd470f14eef6e44732ccf23 (master) (#20649)
fix: prevent menu gc during popup (#20745)
Bump v8.0.0-nightly.20191028
chore: fix formatting of a few Python files (#20743)
build: fix doc only change when there isn't a PR (#20749)
docs: fix process.getSystemVersion() type (#20736)
Bump v8.0.0-nightly.20191027
Bump v8.0.0-nightly.20191026
docs: add the performance doc to the table of contents (#20727)
Bump v8.0.0-nightly.20191025
chore: remove native_mate (Part 11) (#20719)
chore: shrink RSA-PSS BoringSSL patch (#20713)
Bump v8.0.0-nightly.20191024
fix: return proper values for WM_GETMINMAXINFO (#20519)
chore: remove native_mate (Part 10) (#20696)
chore: remove _ns suffixes (#20691)
ci: skip build on doc only changes (#20542)
build: handle -x-y format for getCurrentBranch (#20706)
chore: update build_bring_back_node_with_ltcg_configuration.patch (#20672)
build: add support for automated minor releases (#20620)
[WIP] docs: update electron 8.0 dates (#20621)
refactor: move CompileAndCall to a helper (#20675)
fix: call InitializeContextRuntime in InitializeContext (#20684)
Bump v8.0.0-nightly.20191023
fix: send ELECTRON_BROWSER_CONTEXT_RELEASE asynchronously (#20632)
fix: explicitly cancel redirects when mode is 'error' (#20686)
fix: properly free remote objects (#20671)
docs: update currently supported versions for 7.0.0 release (#20622)
Bump v8.0.0-nightly.20191022
chore: remove unnecessary crypto patch (#20669)
fix: macOS getColor inconsistencies (#20611)
fix: use xib file to construct macOS Menu (#20615)
chore: bump node in DEPS to v12.13.0 (#20657)
docs: Performance checklist (#20230)
docs: update README.md (#20644)
Bump v8.0.0-nightly.20191021
chore: reduce crypto patch surface (#20646)
docs: Added Native User Interface -> Open path in file manager Fiddle example (#20589)
docs: Added Drag and drop files Fiddle example (#20472)
chore: remove native_mate (Part 9) (#20645)
fix: don't overwrite global constructor names in remote (#20637)
Bump v8.0.0-nightly.20191020
Bump v8.0.0-nightly.20191019
chore: bump node to v12.12.0 (master) (#20584)
test: fix BrowserWindow spec to await its result (#20612)
docs: mark contextBridge as experimental (#20638)
chore: bump chromium to e049d599a8332b9b2785b0178be74 (master) (#20314)
feat: add a new contextBridge module (#20307)
chore: remove some trop permissions (#20636)
Bump v8.0.0-nightly.20191018
feat: support fitToPageEnabled and scaleFactor (#20436)
chore: remove native_mate (Part 8) (#20598)
fix: add patch to node for native module size issue on windows (#20614)
Bump v8.0.0-nightly.20191017
refactor: use Map for windowProxies in window-setup.ts (#20600)
Bump v8.0.0-nightly.20191016
docs: add example for taking screenshot (#20531)
docs: remove class names from fiddle examples (#20596)
test: remove remote usage from chromium spec (#20568)
test: simplify node setInterval test (#20594)
docs: add notification examples (#20528)
docs: add system get version info Fiddle example (#20536)
refactor: use Map for callbacks in CallbacksRegistry (#20565)
Bump v8.0.0-nightly.20191015
chore: remove native_mate (Part 7) (#20561)
chore: bump node to v12.10.0 (master) (#20129)
test: move crashReporter specs to the main process (#20417)
test: skip desktopCapturer / remote module tests when the features are disabled (#20566)
spec: allow "Yu Gothic" as a Japanese sans-serif font on Windows (#20564)
docs: Update Issue Closure in CONTRIBUTING.md (#20545)
test: expand window.opener test and move to main process (#20549)
Bump v8.0.0-nightly.20191014
fix: generate breakpad symbols before stripping (#20530)
docs: fix minor grammar mistakes (#20521)
test: move debugger spec to main process (#20514)
fix: append network switches to network service process (#20546)
Bump v8.0.0-nightly.20191013
Bump v8.0.0-nightly.20191012
test: remove some remote usage from chromium specs (#20121)
fix: do not manually parse content-type (#20538)
test: remove remote usage from webFrame test (#20512)
test: remove remote usage from asar spec (#20513)
Bump v8.0.0-nightly.20191011
test: remove more unused files (#20529)
fix: return type of webview.printToPDF is now Uint8Array (#20505)
chore: delete some unreferenced test files (#20511)
fix: properly register custom url evt handling (#20518)
Bump v8.0.0-nightly.20191010
refactor: take advantage of structured clone algorithm in the remote module (#20427)
docs: add Asynchronous Messages Fiddle example (#20441)
docs: add clipboard Fiddle examples (#20445)
docs: add Menu Shortcuts Fiddle example (#20466)
docs: Adds Customize Menu section Fiddle example (#20468)
test: ensure cleanup of net requests in tests (#20510)
test: move module tests to main process (#20419)
docs: remove outdated document about updating chromium (#20490)
docs: add a dev doc describing the patch system (#20489)
fix: when building with enable_plugins=false (#20354)
refactor: use v8 serialization for ipc (#20214)
Bump v8.0.0-nightly.20191009
feat: allow Linux/Windows users to set notification timeout (#20153)
fix: cookies.get should be able to filter domain (#20471)
fix: fix crash in crashReporter.getUploadedReports (#20428)
docs: add WoA cross-compilation instructions (#20244)
docs: Update the sccache name (#20462)
ci: verify CircleCI job number before returning job url (#20483)
build: fix build with Visual Studio 2019 (#20465)
Bump v8.0.0-nightly.20191008
feat: improve TouchBarButton accessibility (#20454)
build(deps): bump eslint-utils from 1.3.1 to 1.4.2 (#20481)
fix: properly free IsolateData in node_main (#20446)
fix: fs.watch() behavior change in node >= 10.16.0 (#20408)
Bump v8.0.0-nightly.20191007
fix: enable worker threads (#20416)
test: remove unneeded console.log (#20424)
Bump v8.0.0-nightly.20191006
Add unsafe-inline (#20414)
chore: empty folder structure (#20439)
Bump v8.0.0-nightly.20191005
test: remove 'remote' usage from process tests (#20418)
feat: add --enable-api-filtering-logging commandline switch (#20335)
Bump v8.0.0-nightly.20191004
Revert "test: remove unneeded console.log"
test: remove unneeded console.log
docs: Minor fixes to build instructions (#20338)
refactor: implement sublabel fns in MenuModel (#20150)
chore: remove unused l10n_util includes (#20412)
test: close window before destroying browserView (#20411)
chore: enable native unittesting (#20293)
chore: remove upstreamed node_crypto CHECK patch (#20406)
Bump v8.0.0-nightly.20191003
fix: recentDocuments menu role on macOS (#20398)
ci: enable crashReporter tests on mac (#19582)
ci: save pdb files for testing builds (#20407)
Bump v8.0.0-nightly.20191002
feat: allow inspection of specific shared workers (#20389)
fix: remove unnecessary patch (#20390)
fix: allow paths to asar archives to contain the .asar extension in directories (#20342)
chore: remove native_mate (Part 6) (#20391)
docs: WebContents console-message event is emitted for offscreen windows (#20386)
fix: correctly crash when there is no crashReporter (#20388)
Bump v8.0.0-nightly.20191001
test: move more web contents specs (#20099)
refactor: convert some more remote stuff to typescript (#20324)
fix: Make the `--disable-color-correct-rendering` switch work again (#20356)
Update application-architecture.md (#20370)
Bump v8.0.0-nightly.20190930
Bump v8.0.0-nightly.20190929
Bump v8.0.0-nightly.20190928
Bump v8.0.0-nightly.20190927
fix: BrowserWindow.fromWebContents() can return null (#19983)
Bump v8.0.0-nightly.20190926
chore: update strip-binaries for moved swiftshader.so (#20341)
fix: backport Node nested microtask fix (#20303)
Revert "Bump v8.0.0-nightly.20190925"
Bump v8.0.0-nightly.20190925
docs: update selenium docs (#20336)
build: run publish jobs in the secure context and enable sccache (#20326)
Replace workspaceRoot with workspaceFolder. (#20306)
Bump v8.0.0-nightly.20190924
Bump v8.0.0-nightly.20190923
Bump v8.0.0-nightly.20190922
Bump v8.0.0-nightly.20190921
chore: bump chromium to 0239d631f03d0111f77b0b98c7765 (master) (#20285)
perf: only access remote module when <webview>.getWebContents() is called (#20272)
Bump v8.0.0-nightly.20190920
test: remove usage of remote module from node tests (#20103)
fix: correct 'Entire screen' to ' Entire Screen' (#20276)
docs: Add Notification API to docs (#20290)
test: move ipcRenderer spec to main runner (#20093)
refactor: move GetCursorBlinkInterval() to a helper function (#20060)
ci: actually kill leftover processes on WOA testing (#20286)
Bump v8.0.0-nightly.20190919
chore: remove native_mate (Part 5) (#20264)
fix: use coordinate offsets in ShowAutofillPopup (#20232)
fixes widget host fetching from render view host (#20239)
feat: set urgency on linux notifications (#20152)
docs: improve and add examples for clipboard (#20224)
ci: only kill WOA processes if they are running (#20274)
fix: reset capturers at the very end (#20270)
chore: bump chromium to 63be48daea281d4f8c834c2e707a7 (master) (#19923)
build: add enable_remote_module build flag (#19821)
Bump v8.0.0-nightly.20190918
ci: use CircleCI 2.1 config and v2 APIs (#20245)
fix: free screen and window capturers immediately after we're finished with them (#20156)
build: add WOA node headers to checksum file (#20255)
Bump v8.0.0-nightly.20190917
fix: strip chrome-sandbox typo (#20227)
docs: clarify VS installation instructions for Windows builds (#20236)
build: remove .only
fix: emit updated on NativeTheme on the UI thread to avoid DCHECK (#20137)
refactor: run clang-tidy (#20231)
fix: don't expose nativeTheme in the renderer process (#20139)
build: speed up linux CI even more (#20241)
Bump v8.0.0-nightly.20190915
Bump v8.0.0-nightly.20190914
docs: Add recent Electron version to security checklist (#20206)
Bump v8.0.0-nightly.20190913
refactor: apply some 'clang-tidy -fix' changes (#20172)
fix: crash when exiting simple fullscreen on macOS (#20144)
Bump v8.0.0-nightly.20190912
Bump v8.0.0-nightly.20190911
build: handle arm64 node headers (#20192)
Revert "build: handle arm64 node headers"
build: handle arm64 node headers
Bump v8.0.0-nightly.20190910
Bump v8.0.0-nightly.20190909
build: specific line with trailing whitespace (#20155)
Bump v8.0.0-nightly.20190908
chore: remove native_mate (Part 4) (#20146)
build: get all the release assets when looking for one to delete  (#20157)
Bump v8.0.0-nightly.20190907
Bump v8.0.0-nightly.20190906
Revert "Bump v8.0.0-nightly.20190906"
refactor: use base::StringPiece over std::string (#20119)
Bump v8.0.0-nightly.20190906
chore: remove native_mate (Part 3) (#20131)
fix: resolve crash loading file based serviceworkers (#20132)
fix: ensure popup and closepopup are posted in order (#20114)
docs: fix BrowserWindow options.hasShadow platform (#20038)
fix: Debug builds on Windows. (#20117)
build: don't wait until job requests return in case some jobs fail to return (#20133)
feat: add nativeTheme.themeSource to allow apps to override Chromiums theme choice (#19960)
fix: ensure document.visibilityState aligns with the visibility of the TopLevelWindow (#19988)
Bump v8.0.0-nightly.20190905
test: move robotjs-based devtools paste test to main runner (#20095)
docs: Improve wording of setBrowserView and getBrowserView (#20065)
test: fix test for desktopCapturer preventDefault (#20100)
fix: ensure modeL_ exists before calling delegate methods (#20111)
build: add WOA release to list of releases (#20094)
test: tsify deprecate spec (#20089)
test: remove usage of remote in shell.openExternal test (#20101)
chore: remove native_mate (Part 2) (#20106)
Bump v8.0.0-nightly.20190904
chore: remove native_mate (Part 1) (#20085)
fix: implement ses.getBlobData() for NetworkService (#20041)
chore: add SetGTKDarkThemeEnabled(enabled) internal helper to allow dynamic theme selection on linux (#19964)
ci: run tests on WOA hardware (#20031)
test: remove usage of 'remote' module from webview spec (#20048)
test: move chrome extensions spec to main runner (#20030)
Bump v8.0.0-nightly.20190903
fix: strip chrome_sandbox executable (#20049)
test: move security warnings spec to main runner (#20055)
test: move content-script tests to main runner (#20056)
test: move desktopCapturer spec to main runner (#20057)
Bump v8.0.0-nightly.20190902
Bump v8.0.0-nightly.20190901
fix: ensure that the "top" coordinate of the inner frame is correct (#20051)
docs: Update boilerplates-and-clis.md (#19975)
build: add gn-check to precommit linting (#19850)
docs: clarify `app.setName()` effects (#19893)
Bump v8.0.0-nightly.20190830
fix: honor cursor blink rate (#20020)
test: tsify more web contents specs (#19969)
fix: Revert "fix: make sure that menu bar gets focus even when you click an item to focus it first (#19710)" (#20019)
build: accidentally inverted a bool (#20029)
test: tsify affinity spec (#19961)
Bump v8.0.0-nightly.20190829
chore: improve smoke test for tray (#19991)
build: simplify unicode console output (#20017)
docs: add a CSP meta tag to make the tutorial compliant with the security checklist (#19819)
test: move WebContentsView spec (#19990)
chore: add missing includes (#20003)
fix: nws13n: make ses.setUserAgent work  (#20014)
chore: cache URLLoaderFactory per-session (#19998)
feat: add session.downloadURL() (#19889)
test: fix clearAuthCache test (#20015)
refactor: implement isRemoteModuleEnabled via getLastWebPreferences() (#19220)
build: add test runner parameter checks (#19994)
test: move webRequest spec to main runner (#19992)
test: tsify sub-frames spec (#19965)
test: tsify powerMonitor spec (#19963)
test: tsify internal-spec (#19962)
fix: gtk_init() called 2x in AtomBrowserMainParts (#19986)
chore: remove unused config files (#19997)
Bump v8.0.0-nightly.20190828
refactor: omit redundant map searches (#19929)
fix: handle WM_GETMINMAXINFO instead of letting chromium do it (#19928)
fix: allow unsandboxed renderers to request new privileges (#19953)
feat: add "accessibleTitle" property to a BrowserWindow instance (#19698)
chore: DCHECK for correct thread in EventEmitter::EmitWithSender (#19959)
test: tsify session spec (#19604)
fix: remove unused header from extensions-only file (#19947)
feat: migrate webRequest module to NetworkService (Part 9) (#19976)
Bump v8.0.0-nightly.20190827
fix: i18n of gtk msgbox buttons (#19904)
chore: bump node in DEPS to v12.9.1 (#19980)
test: tsify spec for experimental views api (#19966)
fix: ensure that reloads retain modified window background colors (#19967)
fix: don't call SetBounds on restore (#19886)
feat: HTTP preconnect feature minimal for electronjs (#18671)
Bump v8.0.0-nightly.20190826
refactor: simplify ShowSaveDialog, make consistent with ShowOpenDialog (#19924)
fix: adjust window size in NCCALCSIZE instead of adding insets (#19883)
fix: command-line scheme switch values' spillover (#19912)
refactor: use C++11 member initializers in native_mate (#19925)
Bump v8.0.0-nightly.20190825
Bump v8.0.0-nightly.20190824
chore: bump chromium to 62327c655093c821aa0fcfc6db53f5fd943e08c7 (master) (#19792)
refactor: use Error util when only throwing errors (#19837)
chore: make apply_all_patches.py work in both python2 and python3 (#19872)
refactor: replace ipcRendererUtils.invoke() with ipcRendererInternal.invoke() (#19574)
fix: crash on input file handler dialog (#19897)
build: use a lower process count for publish builds with no sccache (#19913)
Bump v8.0.0-nightly.20190823
refactor: unify module-list format and exports/electron (#19697)
docs: clarify dock.bounce usage (#19894)
refactor: make util::Promise type safe when chaining in native (#19809)
fix: mitigate white screen flash after occlusion by disabling compositor recycling  (#19873)
fix: notify views of content view size change (#19878)
chore: bump node to v12.9.0 (master) (#19863)
fix: extern Parse impl for Windows debug builds (#19876)
feat: add openbsd support in the node module (#19860)
Bump v8.0.0-nightly.20190822
feat: enable picture-in-picture mode for video tags (#17686)
chore: Update comment for desktop_capturer (#19848)
build: start building Windows on Arm builds (#19780)
fix: add default media usage strings to info.plist (#19871)
build: optimize the CI path where we update the patch files (#19851)
build: dynamically calculate out dir (#19857)
Bump v8.0.0-nightly.20190821
build: ninja count should be 2*cores + 2 (#19852)
fix: race condition in NodeStreamLoader (#19811)
feat: migrate webRequest module to NetworkService (Part 8) (#19841)
fix: trim branch name before comparing to master (#19853)
ci: add macOS debug builds (#19831)
docs: update documentation under tutorials (#19804)
Bump v8.0.0-nightly.20190820
feat: implement `will-move` event on macOS (#19641)
feat: migrate webRequest module to NetworkService (Part 7) (#19820)
fix: fall back to default logs path in getPath('logs') (#19653)
docs: fix punctuation errors in native-image.m (#19620)
chore: bump node to v12.8.1 (master) (#19790)
chore: upgrades-wg owns DEPS (#19830)
refactor: mojofy autofill renderer->browser (#18760)
chore: add error throwing utility (#19803)
Bump v8.0.0-nightly.20190819
Bump v8.0.0-nightly.20190818
Bump v8.0.0-nightly.20190817
docs: add mising return desc (#19778)
fix: return type in open/save dialogs (#19781)
Bump v8.0.0-nightly.20190816
docs: MessageBoxOptions.icon should allow type string (#19782)
fix: compilation failure after chromium upgrade (#19787)
feat: migrate webRequest module to NetworkService (Part 6) (#19752)
docs: add exemplary fiddle for `launch in fiddle` feat (#19759)
chore: bump chromium to cbeb16cf544f79c1990f1eae4d4fe (master) (#19610)
fix: use GTK3 stock i18n strings (#19756)
Bump v8.0.0-nightly.20190815
fix: ensure child_process.fork() doesn't modify main (#19742)
feat: Implement BrowserWindow.getMediaSourceId() and BrowserWindow.moveAbove(mediaSourceId) (#18926)
move image converter to gin (#19655)
fix: make sure that menu bar gets focus even when you click an item to focus it first (#19710)
docs: mention QuickEdit in Windows troubleshooting (#19701)
feat: add new nativeTheme API (#19656)
Bump v8.0.0-nightly.20190814
move net converter to gin (#19734)
fix: proper l10n on Linux dialog buttons (#19725)
Revert "fix: activate the uv_loop on incoming IPC messages (#19449)" (#19727)
feat: add property customization to save dialogs (#19672)
feat: macOS removal fallback when moveItemToTrash fails (#19700)
feat: add dontAddToRecent to windows showOpenDialog (#19669)
Bump v8.0.0-nightly.20190813
fix: crash in window.print() (#19690)
move file dialog converter to gin (#19709)
feat: migrate webRequest module to NetworkService (Part 5) (#19714)
chore: bump node to v12.8.0 (master) (#19521)
feat: add about panel customization on Windows (#19420)
docs: fix app.on('session-created' example (#19713)
build: fix nightly install command in release notes (#19711)
fix: don't handle browser messages before document element is created (#19718)
Bump v8.0.0-nightly.20190812
Bump v8.0.0-nightly.20190811
feat: migrate webRequest module to NetworkService (Part 4) (#19679)
Bump v8.0.0-nightly.20190810
fix: avoid losing focus on inputs when opening menu (Windows/Linux) (#19657)
refactor: move native window gin converter (#19577)
feat: allow customization of print page header and footer (#19688)
Bump v8.0.0-nightly.20190809
feat: add tray.focus() (#19548)
docs: update hasShadow for win and linux (#19675)
feat: add new options to tray.displayBalloon() (#19544)
docs: document device scaling issue (#19387)
fix: always use new site instance for a new navigation. (#18860)
Bump v8.0.0-nightly.20190808
fix: return correct bounds on will-resize (#19639)
test: remove ffi specs (#19661)
Bump v8.0.0-nightly.20190807
chore: remove pre network service classes from shell/browser/net (#19644)
fix: crash on print cancellation and silent print settings (#19598)
move gurl converter to gin (#19578)
fix: normalize behavior of `win.setOpacity()` for invalid number values across operating systems (#19535)
feat: associate InProgressRequest with requests (#19648)
fix: keep references to active menus created by api Menu (#19427)
spec: fix dirtyChai spec failures (#19652)
Bump v8.0.0-nightly.20190806
docs: update link to webContents.send (#19608)
fix: clearRecentDocuments role on Windows (#19599)
fix: make child windows not crash when ipc messages are received (#19553)
docs: remove implicit 'any' and 'Object' types from the docs (#19585)
feat: add tray.removeBalloon() (#19547)
Bump v8.0.0-nightly.20190805
fix: handle edge behavior for about panel on Linux (#19586)
fix: crash on window.print() (#19601)
test: tsify netlog spec (#19605)
test: tsify callbacks-registry spec (#19606)
Bump v8.0.0-nightly.20190804
Bump v8.0.0-nightly.20190803
fix: disable 'reopen windows?' dialog after crash (#19584)
chore: bump chromium to 32e0bab929213da1019992bf31d29 (master) (#19488)
test: report hexadecimal status codes on windows (#19597)
refactor: convert ipc-renderer.ts to TypeScript (#19556)
refactor: move file path gin converter to new file (#19575)
Bump v8.0.0-nightly.20190802
fix: expose setMenuBarVisibility again (#19557)
fix: use correct constants for tray icon messages (#19549)
Bump v8.0.0-nightly.20190801
docs: fix TouchBar related documentation (#19444)
refactor: migrate dialog API to //gin (#19482)
build: update the ABI version for electron 8 nightlies (#19551)
fix: use WeakPtr to detect deletion (#19257)
refactor: remove content::WebContentsObserver from Event (#19251)
chore: disable JS impl when //extensions support is on (#19512)
doc: add missing MenuItem roles (#19329)
build: fix first beta version choosing logic
feat: migrate custom macOS tray view to native one (#18981)
Bump v7.0.0-nightly.20190731
fix: set default dock bounce type (#19523)
build: fix with ENABLE_OSR disabled (#19533)
fix: throw better error on getPath('logs') (#19514)
refactor: move `gfx::ImageSkia` functions to their own util file (#19460)
fix invalid lang tags (#19513)
patch electron_node (#19436)
Bump v7.0.0-nightly.20190730
fix: tray.displayBalloon() does not work with custom icon on Windows (#19330)
feat: add getBounds() method for BrowserView (#19370)
docs: update supported versions section (#19461)
fix: [wc|bw]-created events do not emit an event object (#19465)
chore: simplify intentional-crash code (#19464)
fix: [extensions] remove InitForIncognitoProfile (#19477)
docs: BrowserWindow transparency limitation on Windows (#19399)
add desc (#19417)
docs: specify macOS-only about panel option (#19439)
fix: refactoring regression in LocationProxy (#19495)
fix: use GetAuraColor to get theme dependant menu bg color (#19469)
Bump v7.0.0-nightly.20190729
fix: remove .pdb from symbol file names (#19483)
build: remove GConf and dconf dependencies on linux (#19498)
fix: Expose missing Add/RemoveExtraParameter methods to macOS node child processes (#15790)
Bump v7.0.0-nightly.20190728
Bump v7.0.0-nightly.20190727
feat: emit always-on-top-changed on macOS (#19462)
refactor: don't use NSClassFromString in TouchBar code (#19445)
chore: clean up BrowserView/TopLevelWindow New impl (#19375)
doc: fix GPU infoType typings (#19470)
docs: add support for readonly,deprecated and platform doc annotations (#19478)
docs: fix type information for contents.sendInputEvent (#19479)
docs: fix app.getPath types so that "name" is a string enum (#19480)
fix: correctly emit BrowserWindow alwaysOnTop status in change event (#19463)
chore: bump chromium to 2bbf84f6437b49c70922b65b38bf3 (master) (#19451)
test: move autoUpdater specs to main process (#19440)
Bump v7.0.0-nightly.20190726
test: move menu spec to main process (#19412)
test: move the last of the browser window specs (#19295)
test: move dialog spec to main process (#19231)
chore: remove no longer needed macOS SDK forward declarations (#19446)
fix: clearing of the backgroundColor property on TouchBarButton (#19437)
doc: fix types for traceConfig recording_mode (#19448)
feat: allow setting capture mode and max file size in netLog API (#19215)
fix: activate the uv_loop on incoming IPC messages (#19449)
ci: report test results to appveyor (#19434)
test: move the TouchBar specs to the main process (#19413)
revert: use circleci v2.1 (#19456)
fix: throw on invalid webRequest filters (#19337)
Bump v7.0.0-nightly.20190725
chore: pass base::StringPiece args by value (#19432)
test: clean up and augment Tray module spec (#19410)
test: move Notification spec to main process (#19414)
feat: preliminary support for //extensions (#17440)
chore: bump chromium to 79eae5b7b2d9dac441ac0182ee160 (master) (#19166)
build: use a large machine for node tests as they run on N cores
build: disable flaky node tests that fail on linux
fix: ensure we wait for the inspect to disconnect
build: convert nodejs tap output to junit and store in circleci as test results
fix: ensure that the node env is not bootstrapped before running inspector
build: run node tests
docs: fix broken link in ipcMain docs (#19401)
spec: don't run codesigning spec on forks (#19418)
test: add tests for systemPreferences apis (#19419)
fix: "TypeError: fn is not a function" crash in release notes generator (#19394)
docs: fix instructions for opting out of dark mode (#19358)
test: move version-bump spec to main process (#19415)
test: move BrowserView specs to main process (#19409)
Bump v7.0.0-nightly.20190724
fix: remove TLS destruction (#19365)
docs: make setBounds take a Partial<Rectangle> (#19416)
build: update NMV for Electron 7 (#19369)
test: disable flaky webview.clearHistory test (#19398)
chore: omit superceded Chromium updates from notes (#19400)
feat: add memory to app.getAppMetrics() (#18831)
feat: add rotate gesture for macOS (#19294)
Changed line endings from crlf to lf in manifests.cc/h (#19382)
chore: use base::Environment in Linux MoveItemToTrash() (#19367)
build: make //electron:electron_lib a source_set (#19372)
docs: update public electron timeline (#19371)
Bump v7.0.0-nightly.20190723
feat: migrate webRequest module to NetworkService (Part 2) (#19338)
chore: use circleci v2.1 (#19346)
Bump v7.0.0-nightly.20190722
doc: improve EventEmitter md formatting (#19345)
fix: correctly convert MessageBoxType (#19349)
Bump v7.0.0-nightly.20190721
Bump v7.0.0-nightly.20190720
docs: update Electron Packager links (#19333)
fix: emit swipe event on macOS (#19319)
fix zoom button when alwaysOnTop set (#19314)
 test: run all tests on arm linux platforms (#19318)
feat: support `isHighContrastColorScheme()` on macOS (#19331)
Bump v7.0.0-nightly.20190719
build: update symbol generation logic for all helpers (#19336)
fix: bootstrap the node environment after we setup the InspectorAgent (#19317)
feat: support `mouse-move` event of Tray API on Windows (#19265)
docs: describe how to install Meiryo (#19308)
chore: upgrade transitive lodash dependency (#19297)
Bump v7.0.0-nightly.20190718
feat: support css origin in frame.insertCSS (#19268)
test: robustify MenuItem label/accel tests (#19287)
chore: upgrade node to 12.6.0 (#19312)
build: remove unused node patches (#19296)
chore: use dummy WebRequestNS when NetworkService is enabled (#19300)
chore: convert more files to TypeScript (#18820)
Revert "Bump v7.0.0-nightly.20190717"
Bump v7.0.0-nightly.20190717
test: move systemPreferences spec to main process (#19237)
fix: don't execute preload scripts for internal <iframe> in <webview> (#19260)
refactor: use NativeTheme dark mode detection on macOS 10.14+
test: move more BrowserWindow specs (#19290)
test: re-add accidentally deleted test (#19282)
build: simplify node patches (#19286)
test: actually test sandbox events in the test that says 'test sandbox events' (#19284)
test: disable security warnings in main runner (#19283)
test: move MenuItem spec to main process (#19235)
chore: remove tls check script (#19280)
build: use our patch system to apply patches to upstream node (#19270)
docs: mention fiddle in bug report template (#19248)
test: move some BrowserWindow specs to the main process (#19182)
refactor: replace SetHiddenValue() with mate::Dictionary::SetHidden() (#19263)
chore: update to Node.js v12.4.0 (#18924)
feat: support `systemPreferences.isDarkMode()` on Windows (#19217)
refactor: simplify RemoveFromLoginItems (#19179)
docs: differentiate static/instance class props (#19196)
feat: app.moveToApplicationsFolder conflict handling (#18916)
Revert "Bump v7.0.0-nightly.20190715"
Bump v7.0.0-nightly.20190715
check for sandbox param on root (#19216)
fix: serialize messages being sent over chrome message ports (#19104)
docs: Add command to quickly fix the SMBv2 cache (#19210)
docs: Update incorrect author name (#19247)
docs: remove redundant 'set origin' section (#19243)
spec: move powerSaveBlocker spec to main process (#19236)
test: move globalShortcut spec (#19233)
test: move inAppPurchase spec (#19232)
test: move ipcMain spec (#19230)
test: move contentTracing specs to main process (#19229)
feat: enable dark mode support by default on macOS (#19226)
fix: add support for prefers-color-scheme CSS query (#19228)
feat: add stack trace log to preload script error handling (#18905)
Bump v7.0.0-nightly.20190714
Bump v7.0.0-nightly.20190713
Bump v7.0.0-nightly.20190712
docs: specify possible values for ProcessMetric.type (#19203)
chore: revert key -> main change in window delegate listener (#19213)
fix: <webview> not working in scriptable popups (#19198)
Revert: electron/electron#14487 (#19011)
feat: expose new vibrancy types (#19073)
fix: revert use of IPC helpers for history due to failing test (#19189)
feat: add object to subscribe notification callback (#19110)
Remind user the executeJavaScript will not run their code immediately (#19129)
Bump v7.0.0-nightly.20190711
chore: deprecate setHighlightMode (#19202)
add toolTip property for MenuItem (#19099)
Bump v7.0.0-nightly.20190710
feat: Can a window always on top but behind the taskbar on Win32 (#18982)
fix: do not wait on promise returned by remote APIs (#18990)
ci: do not use the MOCHA_FILE env variable (#19171)
Bump v7.0.0-nightly.20190709
remove non-existent event (#19126)
chore: update to latest TypeScript 3.5.2 (#19133)
refactor: implement GetResourcesPath using MainApplicationBundlePath on Mac (#19135)
 fix: use gn/clang-format from src (#19145)
refactor: improve function deprecation module (#19012)
chore: bump chromium to b8ae827f4fead0b527079194b9899 (master) (#19112)
refactor: use IPC helpers in window-setup (#17948)
test: move some browser window specs to the main process (#19089)
Bump v7.0.0-nightly.20190708
build: strip recently added swiftshader/libvulkan.so (#19141)
refactor: don't expose isPromise as an internal module (#19139)
docs: fix simple typo in api for webview-tag (#19028)
feat: Implement BrowserWindow.setFocusable on macOS (#19033)
build: fix ffmpeg gn gen (#19127)
Bump v7.0.0-nightly.20190707
Bump v7.0.0-nightly.20190706
fix: dump correct breakpad symbols on macOS (#19042)
Bump v7.0.0-nightly.20190705
fix: check parent-child relationship in canAccessWindow (#19077)
Bump v7.0.0-nightly.20190704
feat: implement net module with NetworkService (#19094)
build: ensure that we bundle the correct version of @types/node (#19102)
fix: use bidning.ipc instead of binding.sendTo which is undefined (#19103)
fix: handle no env in externsion world set up (#19101)
test: disable IAP tests that hit Apple servers (#19100)
chore: deprecate some NSVisualEffectMaterial types (#19072)
chore: bump chromium to f156cb7658ec5382f5623a05841c6 (master) (#19096)
chore: fix node ref to point to the ref that was merged (#19098)
chore: remove unused BrowserWindow.fromDevToolsWebContents (#19090)
feat: convert webContents primitives to properties (#18998)
Bump v7.0.0-nightly.20190703
fix: ignore non-absolute session preload script paths when sandboxed (#19066)
chore: bump chromium to f1d9522c04ca8fa0a906f88ababe9 (master) (#18648)
build: update our nan reference to point at the upstream (#19084)
test: fix flaky onbeforeunload tests (#19085)
test: attempt to fix flaky webview.clearHistory test (#19083)
Bump v7.0.0-nightly.20190702
docs: fix undefined isMac in menu example (#19071)
fix: disable nodeIntegration & insecure resource warnings for localhost (#18814)
docs: make the dialog example work out of the box on all 3 platforms (#19055)
feat: improve callback value for webContents.print() (#19000)
chore: update @types/node and @primer/octicons (#19025)
fix: add shell=True to make run-gn-format run properly on Windows (#18993)
fix: Correct modal focus behavior on macOS (#18995)
Bump v7.0.0-nightly.20190701
chore: DirectoryLister memory management improvement (#18634)
chore: remove unused switches::kDisableHtmlFullscreenWindowResize (#19041)
fix: fire close event upon closing modal BrowserWindow in macOS (#19014)
Bump v7.0.0-nightly.20190630
feat: add a series of new printing options (#18984)
Bump v7.0.0-nightly.20190629
refactor: nws13n: setCertificateVerifyProc (#18221)
fix: correct triggeredByAccelerator Event property behavior (#18865)
fix: do not remove node globals when context isolation is enabled (#18967)
docs: UploadData does not have contentType (#19026)
Revert "Bump v7.0.0-nightly.20190628"
Bump v7.0.0-nightly.20190628
fix: crash when tray popup called twice (#18999)
test: move tray api tests to main process (#18986)
docs: documentation of NetworkService-based protocol module (#18952)
fix: delay emitting screen events by a tick to avoid re-entrancy crash (#19016)
docs: fix platform location for params (#18987)
test: move protocol specs to main process (#18923)
Bump v7.0.0-nightly.20190627
fix: silent printing mode (#18979)
change menu item docs (#18985)
build: fix include paths so that __file__ is absolute not relative (#18997)
chore: use ScopedPumpMessagesInPrivateModes in tray (#18977)
Bump v7.0.0-nightly.20190626
fix: set size of GTK about panel icon (#18957)
docs: precise that node integration is enabled in natively opened window if nodeIntegrationInSubFrames is true (#18156)
feat: show optional authors in gtk about panel (#18964)
Bump v7.0.0-nightly.20190625
fix: make tray not block main process (#18880)
docs: update badges (#18955)
spec: fix flakiness of test BrowserWindow.moveTop (#18962)
spec: remove unused variables (#18947)
move screen api test to main process (#18956)
fix: override the timers module impls to activate the uv loop (#18948)
build: clean up scripts folder, move release scripts, move zip manifest logic (#18945)
fix: make isDarkMode correctly detect dark mode in the auto setting on catalina (#18949)
Bump v7.0.0-nightly.20190624
Bump v7.0.0-nightly.20190623
build: remove scripts in the tools dir that are unused (#18944)
Bump v7.0.0-nightly.20190622
docs: fix spelling and grammar errors (#18910)
chore: account for remotes in branch parsing (#18930)
fix: sanitize invalid custom protocol headers (#18854)
Bump v7.0.0-nightly.20190621
chore: fix branch trimming for blast-off releases (#18907)
chore: remove unneeded require (#18863)
refactor: make savePath a property on DownloadItem (#18677)
spec: de-flake ses.protocol test (#18884)
Bump v7.0.0-nightly.20190620
fix: typo in comment (#18899)
feat: sandbox renderer processes for cross-origin frames (#18650)
fix: bundle swiftshader and ANGLE libraries on mac (#18870)
build: add an FYI job for building with RUN_AS_NODE disabled (#18890)
refactor: rename the atom namespace to electron
chore: replace atom path with shell in scripts
chore: fix linting after shell rename
refactor: replace includes for atom with shell
refactor: rename the atom directory to shell
Revert "feat: only allow bundled preload scripts (#17308)" (#18091)
spec: move more BrowserWindow specs to main runner (#18610)
fix: building with enable_run_as_node disabled (#18887)
Update CONTRIBUTING.md
Update CONTRIBUTING.md
Document our existing language policy
fix: app.getAppPath() returning default-app path for files or directories without package.json (#18763)
refactor: auto generate electron_version.h from the version file (#18866)
test: correct fake tests in api-protocol-spec (#18869)
fix: delay handling occlusion events to avoid flicker on macOS (#18661)
build: add basic linting for the patches folder to ensure that .patches match the state on disk (#18615)
chore: roll node to fix http2 memory leak (#18868)
Bump v7.0.0-nightly.20190619
refactor: piggy-back on ELECTRON_BROWSER_SANDBOX_LOAD to get content scripts (#18823)
ci: add a space at the end of NINJA_STATUS (#18871)
chore: add ability to log native deprecation warnings (#18681)
build: add env var to allow easily triggering a 3way patch (#18448)
build: enforce frozen lockfile on the lint stage (#18867)
chore: remove unused enum (#18848)
fix: extra space in security warning message causing list misalignment (#18815)
Bump v7.0.0-nightly.20190618
chore: fix current branch fetch on master (#18844)
refactor: auto generate Info.plist to avoid bumping during releases (#18849)
feat: add security warning for remote module with remote content (#18822)
refactor: replace atom_version and friends with electron_version (#18847)
refactor: use async invoke to get webPreferences in security-warnings.ts (#18821)
feat: add removeInsertedCSS (#16579)
feat: make async webContents / <webview> methods return a Promise (#18792)
build: get current release branch from commit (#18810)
docs: better explain supported release line levels (#18800)
Bump v7.0.0-nightly.20190616
fix: use print() function in both Python 2 and Python 3 (#18395)
Bump v7.0.0-nightly.20190615
UPDATED: electron-windows-store command line (#18499)
docs: add information about persistence and removal of DevTools Extensions (#18519)
refactor: re-implement desktop-capturer in TypeScript (#18580)
build: show ninja stats for testing/debug builds (#18653)
chore: convert callbacks-registry to ts (#18682)
docs: reorganize application distribution links in table of contents (#18744)
spec: deflake focus handling test (#18809)
test: unflake some net specs (#18782)
docs: add specific options for MenuItem.role (#18783)
feat: add creationTime / sandboxed / integrityLevel to app.getAppMetrics() (#18718)
build: use yarn to install arm modules (#18779)
fix: use is_valid for cookie url validation (#18770)
Bump v7.0.0-nightly.20190614
refactor: pass MessageBox params as a struct (#18732)
chore: convert extension apis to TypeScript (#18688)
fix: crash in BrowserWindow destructor after win.webContents.destroy() (#18686)
refactor: use app.commandLine.getSwitchValue() for parsing user-data-dir (#18764)
ci: make console.warn work in tests (#18771)
docs: fix invalid optional declaration (#18780)
fix: HTML fullscreen request for sub frames (#18736)
chore: upgrade docs-parser to fix nondeterminism (#18750)
feat: provide the frame URL with permission requests and checks (#18757)
Bump v7.0.0-nightly.20190613
fix: use crashpad on Windows (#18483)
test: add test for invalid cookie url (#18751)
refactor: mojofy autofill (#18723)
fix: callback values for printing cancellation and success (#17400)
fix: correct isDownloadable docs to match impl (#18720)
Bump v7.0.0-nightly.20190612
fix: remove lingering data when notifications autodismiss on Windows 7 (#18401)
feat: migrate protocol module to NetworkService (Part 12) (#18726)
fix: move window.open postMessage test to main runner to fix flake (#18735)
Bump v7.0.0-nightly.20190611
feat: migrate protocol module to NetworkService (Part 11) (#18706)
chore: fix duplicate error string (#18713)
chore: revert promisified systemPreferences notification methods
Bump v7.0.0-nightly.20190610
fix: properly pass openExternal activate option (#18657)
Bump v7.0.0-nightly.20190609
Bump v7.0.0-nightly.20190608
fix: use effectiveAppearance to check dark mode on mojave and above (#18666)
test: move some remote specs to the main runner (#18636)
fix: use isEqual instead of pointer equality to convert NSAppearance (#18665)
Bump v7.0.0-nightly.20190607
feat: allow resigning current NSUserActivity (#18659)
ci: allow use of .only in ci testing mode (#18678)
docs: Add missing document links to docs/readme (#18578)
Bump v7.0.0-nightly.20190606
feat: promisify systemPreferences notification methods (#18631)
chore: remove mips64el patches as they've largely been upstreamed (#18628)
build: unify YARN_VERSION variable usage and ensure CI uses yarn not npm (#18607)
fix: reject the executeJavaScript promise when it fails to execute the script (#18635)
chore: Remove AtomResourceDispatcherHostDelegate (#18623)
refactor: use the URL api to resolve urls in window setup (#18611)
ci: fix issues downloading from CircleCI (#18652)
ci: add windows zip manifest checking (#18629)
Bump v7.0.0-nightly.20190605
refactor: convert browser window state fns to props (#18618)
chore: bump chromium to bd6aad6a4b37dad7aae42fec349e9 (master) (#18626)
fix: ensure correct ordering of sendSync w.r.t. send (#18630)
refactor: simplify content script injection (#18532)
docs: ensure that optionality matches between documented params and signatures (#18613)
refactor: use ipcRenderer.invoke / ipcMain.handle in default-app (#18581)
Bump v7.0.0-nightly.20190604
chore: bump chromium to 2a7aff41ce73adc0eeee67d364989 (master) (#18505)
doc: change pyobjc link in  macos build instruction (#18471)
refactor: mojofy zoom api (#18608)
refactor: remove electron.asar and embed JS in binary (#18577)
test: move some BrowserWindow specs to the main runner (#18551)
refactor: remove menu-will-close / setTimeout workaround (#18582)
build: bring in a later compiler for Windows on Arm (#18591)
fix: lost window.opener after cross-origin navigation (#18173)
refactor: lazily hook into child_process in asar_init (#18576)
build: strip swiftshader binaries (#18588)
docs: update community Slack URL to point to Discourse invite thread (#18222)
docs: Update breaking changes on webFrame.setSpellCheckProvider (#17915)
refactor: lazy load child_process in the crash-reporter module (#18574)
fix: don't export private V8 symbols that can cause native node modules to crash (#18281)
Update gen-filenames.js to generate posix paths (#18488)
build: install python-dbusmock via pip for a Docker container (#18589)
build: remove Vulkan mock ICD (#18546)
refactor: mojofy draggable regions (#18536)
refactor: make autoHideMenuBar a property on BrowserWindows (#18555)
Bump v7.0.0-nightly.20190603
perf: lazily create the anchor tag used for URL resolving (#18571)
refactor: lazy load V8 module in browser/init (#18575)
refactor: bundle the browser and renderer process electron code (#18553)
Bump v7.0.0-nightly.20190602
chore: fix logging to stderr (#18537)
Bump v7.0.0-nightly.20190601
chore: re-enable disabled time ticks dcheck (#18525)
feat: Add option to conditionally disable site instance patches (#18396)
fix: handle gzipped chrome WebUI resources (#18531)
chore: remove upstreamed ffmpeg patch (#18524)
feat: add ipcRenderer.invoke() (#18449)
Bump v7.0.0-nightly.20190531
fix: contractions handling in spellchecker (#18506)
ci: add retries to downloads for arm testing (#18526)
refactor: set appLevelAppearance prop on systemPreferences (#18477)
test: move download-related session specs to main runner (#18508)
docs: specify use case for the 'services' role (#18484)
docs: use | instead of 'or' for docs (#18512)
Bump v7.0.0-nightly.20190530
docs: remove obsolete callback argument from dialog.showOpenDialog() (#18496)
feat: add process.getBlinkMemoryInfo() (#17762)
refactor: nws13n: session.allowNTLMCredentialsForDomains (#18129)
feat: enable reporting api (#18255)
test: move beforeunload tests to main runner and fix flake (#18432)
chore: remove last instances of base::Bind (#18178)
spec: run nan tests to ensure v8 compat has not broken (#18489)
fix: reverse dialog cancel bool for openDialog (#18492)
ci: add check for dist zip file changes (#18446)
Bump v7.0.0-nightly.20190529
fix: breakpad symbol generation on linux arm (#18490)
fix: ensure the webContents is not destroyed before communicating (#18467)
feat: [contentTracing] allow calling stopTracing() with no arguments (#18411)
test: move several session specs to the main runner (#18433)
fix: don't package mojom{,-lite}.js files in dist.zip (#18444)
test: narrow scope of afterEach in remote to tests that need it (#18447)
chore: bump chromium to 964c4bca8de5c320534d95606c861 (master) (#18440)
fix: create missing directories with app.setPath (#18244)
fix: respect minimizable/closable for customButtonsOnHover (#18425)
docs: clarify crash report extra param length (#18386)
Revert "Bump v7.0.0-nightly.20190528"
Bump v7.0.0-nightly.20190528
feat: migrate protocol module to NetworkService (Part 10) (#18464)
Bump v7.0.0-nightly.20190527
fix: set nativeWindowOpen when sandboxed (#18273)
Bump v7.0.0-nightly.20190526
Bump v7.0.0-nightly.20190525
Bump v7.0.0-nightly.20190524
chore: update the npm package to use @electron/get (#18413)
fix: compile error in netlog (#18443)
feat: migrate protocol module to NetworkService (Part 9) (#18374)
refactor: netLog directly uses network service (#18289)
Bump v7.0.0-nightly.20190523
Revert "Bump v7.0.0-nightly.20190523"
Bump v7.0.0-nightly.20190523
build: move Windows release builds to AppVeyor cloud (#18337)
chore: bump chromium to 54af93edd956a53c786668bc0e253 (master)
chore: remove leftover docs/api/structures/memory-info.md (#18421)
roll patches
skip more dbus tests
test: add spec for contentTracing.stopRecording (#18391)
chore: bump chromium in DEPS to 6a008993a2e54af93edd956a53c786668bc0e253
fix: docs/api/dialog.md: fix typo (#18392)
correct reference chrome://plugins to components (#18237)
skip dbus tests (#18409)
refactor: update husky ver 2.2.0 (#18300)
replace revert of metal support for gl::ProgressReporter with cherry-pick of fix
Replace views_bridge_mac with remote_cocoa
Update function signatures for focused element change notifications
v8/snapshot_toolchain.gni moved
disable robotjs-based tests
update patches
chore: bump chromium in DEPS to c4cd49fdba21ffb5fd53d1e6d508bb285a4ff9a6
feat: migrate protocol module to NetworkService (Part 8) (#18361)
docs: explicit rule for features in the beta cycle (#18393)
use unique_ptr instead of shared_ptr for SpellcheckRequest
FIXME: temporarily revert metal support for gl::progressreporter due to build errors
storage::IsolatedContext API changed
GetNetCaptureModeFromCommandLine moved to net
DelegatedFrameHost API changed
rebase patches
Bump v7.0.0-nightly.20190521
fix: correctly support the webkitdirectory input attr (#18343)
docs: clarify that 'second-instance' is only emitted when the second instance calls `app.requestSingleInstanceLock()` (#18272)
fix: reverse saveDialog cancellation bool (#18366)
fix: set window to null when no window is passed (#18240)
chore: bump chromium in DEPS to a351866f81b645d8c593132b664d5e74b1eb15f0
docs: replace the atom.io headers URL with electronjs.org (#18328)
docs: use "Breaking Changes" as the changes doc's title (#18326)
refactor: remove no longer needed dependency (#18340)
chore: remove extra colon in Issue Details (#18359)
fix: docs/api/browser-window.md: fix typo (#18367)
docs: add parentheses + change lower case to upper case in some places (#18368)
chore: remove dead code (#18370)
fix: leave space for autohide taskbar for frameless maximized window (#18321)
chore: remove duplicate internal deprecations module (just use deprecate) (#18352)
fix: Windows logger path (#18199)
chore: finish replacing assert with expect in tests (#18215)
docs: update sandbox-option.md (#18275)
chore: bump chromium in DEPS to 1027f1782fffa09d3278e857b66d721b861df385
refactor: address TODO for WebContents type parsing (#18158)
chore: bump chromium in DEPS to 655370a87309cf880a091b6b8477012b0718fe12
docs: link to better list of icons for nativeImage.createFromNamedImage() (#18336)
refactor: add invoke helpers in window-setup (#18233)
chore: bump chromium in DEPS to 810a86086f5fd70dd42ad025cf73ecc26f979fcf
feat: add 'gpu-info-update' event to app (#18250)
Chrome changed the devtools url
Update views visible API
Update gpuinfo enumerator api
chore: bump chromium in DEPS to 93f138f28f33aa9cd14a3624f9eef0a2167c8ffb
Update Spellcheck API
Update changed APIs/deps
pin user32 on startup
Update linux/win menu_bar.h
Disable custom libcxx patch
fix lint
Update for changed APIs
//ui/views_bridge_mac => //components/remote_cocoa/app_shim
Manual follow-up rename in comments and variable names.
use base::Owned instead of base::Passed for repeating handler
Convert Callbacks to OnceCallbacks in permissions APIs.
Update chromium patches
chore: bump chromium in DEPS to 4807e00d8504db501eb7a9d8ab66789e53fb7349
chore: update codeowners for release scripts (#18246)
chore: bump chromium in DEPS to ad1b791122c04bd91b825fbfbdf1ff4da82a0edb
fix: 'page-title-updated' event forwarding + documentation (#18270)
docs: update type for responseHeaders in the webRequest module (#18302)
feat: migrate protocol module to NetworkService (Part 7) (#18290)
fix: update the FileSelectHelper to support the new promise API (#18288)
refactor: combine bitmask flags property (replace '+' with '|' operator) (#18271)
feat: add webContents 'zoom-changed' event (#17747)
docs: add missing image (#18235)
docs: explicitly list supported versions (#18243)
fix: default enable_negotiate_port to false (#18251)
feat: allow setting working directory in app.setUserTasks() / app.setJumpList() (#18148)
feat: migrate protocol module to NetworkService (Part 6) (#18223)
chore: Add patch to partially revert chromium crashpad change (#17978)
chore: run protocol tests in separate WebContents (#18202)
chore: remove deprecated APIs (#18159)
docs: fix name of Backtrace in crash reporter docs (#18180)
docs: note session.clearAuthCache planned change for 7.0 (#18185)
fix: destroy tray on current tick (#18196)
build: linux needs java on GN (#18211)
build: fix linux release builds on CircleCI (#18201)
build: remove deprecated octokit auth calls (#18205)
docs: add FAQ entry about subpixel anti-aliased text (#18101)
fix: crash on systemPreferences.getAccentColor() (#18144)
refactor: eliminate duplicate code in asar.js (#18146)
refactor: make templateImage a property on nativeImage (#18124)
refactor: allow embedder overriding of internal FS calls (#17906) (#18183)
refactor: use base::size() for array sizes (#18155)
docs: added BugSplat to list of hosted solutions (#18162)
feat: migrate protocol module to NetworkService (Part 5) (#18170)
build: move to the new docs parser (#18103)
docs: clarify clipboard type options (#18107)
fix: do not mark navigations interupted with same-document navigations as aborted (#18109)
chore: remove v8 reverts now that nan is updated (#18130)
refactor: session.clearAuthCache nws13n (#17970)
refactor: make shell.OpenExternal async (#17135)
chore: convert more files away from base::Bind (#18121)
refactor: convert C++ enums to C++11 enum classes (#18087)
 feat: add env variable to skip binary download on npm install  (#17627)
feat: migrate protocol module to NetworkService (Part 4) (#18084)
chore: convert base::Bind instances across some files (#18112)
fix: revert to previous documentation folder structure (#18127)
chore: retry octokit calls several times on fail (#18085)
chore: bump chromium in DEPS to 84c40395c741fa24ccbd9fc2c5828e2e97472952 (#18117)
chore: convert more module and helper files from bind (#18069)
fix: fs.promises does not work with asar paths (#18092)
chore: add clang-format and limited linting for Objective-C sources (#18104)
chore: add native_mate to lint:cpp (#18100)
fix: honor extensionId arg in chrome.runtime.connect (#16998)
 feat: allow setting of global fallback user agent (#18016)
docs: update 6.0.0 release dates (#17923)
refactor: convert crash reporter to gin (#17952)
document the loadURL promise pre-attached rejection handler (#18043)
build: use https to download from GitHub for external binaries (#17928)
chore: convert session base::Bind instances (#18038)
chore: bump chromium to c75fbfd03652 (master) (#18090)
refactor: convert powerSaveBlocker to gin (#18073)
fix: correctly parse default_app path on windows (#18086)
build: free up space before running macos ci (#18083)
chore: clang-format (#18088)
docs: fix webContents 'new-window' event handler sample (#18067)
docs: remove incorrectly added let for the win variable (#18052)
docs: remove obsolete releasing document (#18072)
refactor: add emitCustomEvent() helper (#17960)
test: remove stray console.log for test suite (#18078)
chore: bump chromium to 7dff37844cb3 (master) (#18059)
fix: explicitly focus window on win.show() (#18046)
fix: ensure the inspector agent is shutdown before cleaning up the node env (#18028)
build: fix master build by updating the yarn.lock after race merge (#18074)
refactor: session.{clearCache,getCacheSize} nws13n (#17969)
build: ensure consistent lock files across multiple machines (#17955)
refactor: make name a prop on app (#17701)
build: fix issues for stable release we fixed in 5-0-x (#18064)
feat: support ELECTRON_DEFAULT_ERROR_MODE in the GPU process (#17728)
chore: remove promisification deprecation callbacks (#17907)
refactor: native_mate => gin (cookies API) (#18036)
chore: disable Vulkan validation layers (#17985)
feat: migrate protocol module to NetworkService (Part 3) (#18030)
refactor: allow requiring modules with no side effects (#17496)
chore: convert View APIs away from base::Bind (#18035)
build: add support for Electron trace events (#17920)
docs: Correct doc for registerFileProtocol (#18022)
docs: update nodeIntegration section for new defaults (#17715)
refactor: rewire the desktop capturer API to remove race conditions (#18029)
chore: disable release notes GH Action (#18039)
refactor: use fs.promises API, which is stable since Node 12 (#17999)
refactor: natively promisify WebContents.prototype.takeHeapSnapshot (#18000)
chore: rename atom-binding-setup.ts to electron-binding-setup.ts (#17949)
feat: migrate protocol module to NetworkService (Part 2) (#17965)
chore: convert some more files from base::Bind (#17968)
chore: add base workflow file (#18006)
chore: update base::Bind in app module (#17925)
build: rebase patches to fix master build (#17991)
docs: add example on handling the webPrefs change (#17971)
build: notify MC of failures to allow easy reruns (#17981)
docs: add information about contributing (#17961)
feat: upgrade to Node 12 (#17838)
docs: remove outdated refs to protocol.registerStandardSchemes (#17959)
fixes (#17363)
docs: add azure vm spinup tutorial (#17958)
docs: move organizational info docs to new directory (#17865)
fix: crash when failed to get devices in desktopCapturer (#17557)
refactor: session.clearHostResolverCache with network service (#17935)
build: fix a symbol linkage error for WoA (#17947)
chore: support converting OnceCallback to V8 (#17941)
refactor: migrate cookie api to network service (#17932)
chore: Bind=>BindRepeating for constructors (#17924)
docs: clean up the native module tutorial (#17624)
build: update ts generator (#17929)
fix: permission handler regression in default app (#17927)
docs: fully document MenuItem instance properties (#17479)
chore: remove deprecated app.enableMixedSandbox() (#17894)
fix: allow access to the profile dir in mac network sandbox (nws13n) (#17931)
fix: allow creating service for temporary partitions (nws13n) (#17930)
refactor: initialize feature list earlier (#17922)
feat: migrate protocol module to NetworkService (Part 1) (#17899)
build: actually run import-patches on gclient sync (#17885)
refactor: add missing constants for options (#17897)
docs: make gclient config command Windows friendly (#17900)
fix: crash when run from SMB network share (#17886)
build: optimize the happy path when syncing on CI (#17827)
docs: edit Release Timelines doc format and add title (#17903)
docs: Update AFP info (#17904)
chore: bump chromium to 1e9f9a24aa12 (master) (#17880)
refactor: turn OnOffscreen message into a command-line flag (#17687)
fix: Comparison using is when operands support __eq__ (#17864)
docs: Add Electron v6.0.0 Timeline (#17866)
fix: drain tasks before shutting down isolate (#17879)
refactor: make app logs dir creation opt-in (#17841)
feat: show underlying stack in errors in remote module (#17851)
docs: explanation on using protocols with partitions (#17759)
docs: added fee hint (#17563)
fix: copy pixels in AddImageSkiaRepFromBuffer (#17843)
fix: copy pixels in NativeImage::CreateFromBitmap (#17844)
doc: document occasional mismatch between NSImageName and string (#17826)
build: rename sandbox bundle (#17831)
fix: port OSR code to new viz compositor codepath (#17538)
refactor: remove superfluous ScopedAllowBaseSync in desktopCapturer (#17842)
chore: save HEAD when git-import-patches runs (#17824)
docs: fix doc linter warnings (#17818)
fix: skip zygote for unsandboxed ppapi processes (#17823)
fix: maintain a ref count for objects sent over remote (#17464)
fix: reset the NSUserNotication handle on dismiss (#17796)
fix: handle remote-debugging-port=0 correctly (#17800)
fix: ensure the sandboxed preloads globals do not leak (#17712)
docs: note desktop audio limitation on macOS (#17738)
fix: populate phase of WebMouseWheelEvents generated in webContents.sendInputEvent. (#17757)
docs: update guide on MAS entitlements and export compliance (#17695)
fix: incorrect default path setting for dl items (#17773)
fix: crash when alt key pressed with falsy menu bar visiblity (#17766)
chore: make it possible to turn on NetworkService with cmd flag (#17729)
fix: FrameSubscriber should not scale frame down (#17444)
 docs: add remote module to docs/tutorial/security.md (#17480)
fix crash when passing empty string to recording (#17698)
test: remove non-applicable processMemoryInfo specs (#17679)
refactor: make accessibilitySupportEnabled a property on app (#17362)
Bump v6.0.0-nightly.20190404
fix: the callback of beginFrameSubscription should pass NativeImage instead of Buffer (#17548)
feat: emit process 'loaded' event in sandboxed renderers (#17680)
refactor: mojofy MessageTo and MessageHost (#17613)
build: optionally exclude some parts of patches from being applied (#17625)
chore: fixup ismediakey patch for lost changes
build: fix spec-main linting for 'only' (#17666)
build: ensure runner is defined inside the spec callback (#17664)
build: force a windows CI run
build: auto-generate the browserify step GN inputs (#17626)
refactor: use mojo for electron internal IPC (#17406)
chore: add patch to fix MSVC++ incompatibilty on Windows
chore: disable custom libcxx on windows
chore: enable_data_url_support does not exist anymore
build: do not use custom libcxx on windows
build: disable the custom libcxx on Windows
don't copy in make_shared in win32_desktop_notifications
fix: use default constructor for NotificationData struct
chore: include what we use, cmath in toast.cc
chore: make DCHECK available in win7 toast impl
build: allow zip files to be created larger than 2GB
fixup! enable_file_url_support and enable_data_url_support have been removed
chore: replace DCHECK(a > b) with DCHECK_GT
fix: _ASSERT is not defined anymore, the appropriate replacement is DCHECK
fixme: IsNearDeath has been removed upstream
fix: base::LaunchOptions environ is now environment
chore: disable clang-format and cpplint for impl of HandleExternalProtocol
Revert "device/fido/mac: add more specific check for TouchID availability"
chore: add missing content:: namespace for BrowserContext in PlatformNotificationService
fix: Add stub implementations for ScheduleTrigger and ReadNextTriggerTimestamp
fix: SetCanonicalCookieAsync now takes the full CookieOptions
fix: RFH->ExecuteJavascriptForTesting now requires a callback
fix: ViewHierarchyChangedDetails moved to the views namespace
fix: enable_file_url_support and enable_data_url_support have been removed
fix: RFH->ExecuteJavascript now requires a callback
fix: remove enable_data_url_support from OnNetworkServiceCreated
chore: update permission_status.h include for new path
build: update circle base image and mac docs for 10.13 SDK
add extra arguments to HandleExternalProtocol
add //ui/base/idle dep
fixup! download gn from cipd instead of GCS
fixup! download gn from cipd instead of GCS
download gn from cipd instead of GCS
update chromium patches
update boringssl patches
chore: update to chromium 75.0.3740.3
docs: remove webaudio doc from browserwindow options (#17633)
docs: Lead with packaging tools on distribution page (#17639)
refactor: make applicationMenu a property on app (#17361)
docs: clarify cookie domain normalization (#17590)
chore: bump chromium in DEPS to 74.0.3729.58 (#17657)
fix: match net module headers & http.IncomingMessage headers (#17517)
test: de-flake getAllWebContents test by moving it to spec-main (#17610)
refactor: move //electron/manifests:manifests target into main BUILD.gn (#17611)
fix: make devtools extensions load correctly (#17614)
refactor: expose ipcRendererInternal to the main world for window-setup using the content script world pattern (#17591)
spec: add tests for the autoUpdater on macOS that actually test if it works (#17442)
chore: bump chromium in DEPS to 74.0.3729.48 (#17606)
fix: ensure dots in content script patterns aren't used as wildcards (#17593)
build: ensure we use objc regexps for export-patches (#17598)
fix: crashReporter.getParameters() takes no params (#17459)
chore: bump chromium in DEPS to 74.0.3729.45 (#17589)
fix: update patch to make Windows key work with global shortcuts (#17565)
fix: handle a race condition between preload scripts executing and (#17577)
build: remove native mksnapshot for arm/arm64 (#17561)
feat: only allow bundled preload scripts (#17308)
fix: correct crash reporter for Windows on Arm (#17533)
fix: use file path as key for safeDialogs on filesystem (#17546)
fix: set default_id and cancel_id correctly on confirm dialogs (#17547)
feat: allow windows to be excluded from the windows menu (#17404)
build: speed up windows download of external binaries (#17559)
chore: bump chromium in DEPS to 74.0.3729.38 (#17555)
fix: correctly return properties on the netLog module (#17525)
refactor: use ipcMainUtils.invokeInWebContents / ipcRendererUtils.handle helpers for Chrome APIs (#17417)
feat: add <webview>.getWebContentsId() (#17407)
build: use async remove method to handle errors better (#16917)
fix: validate sender for replies in ipcMainInternalUtils.invokeInWebContents() (#17416)
fix: add missing buffer size check in nativeImage (#17465)
refactor: Enable network service (Part 1) (#17431)
chore: remove some bot config options (#17506)
chore: update issue templates with guidelines (#17505)
fix: close context menu before popup (#17474)
build: pass through value of unknown flag as well as the flag to make --grep work again (#17485)
chore: Update node commit sha (#17486)
build: auto-fix whitespace in docs in pre-commit hook (#17490)
chore: bump chromium to 74.0.3729.27 (master) (#17345)
docs: update sandbox-option.md (#17468)
docs: clarify documentation for getLastCrashReport (#17458)
fix: take foreground visibility into account for isVisible on macOS (#17463)
build: strip trailing whitespace in docs (#17488)
docs: Use correct image URL on `docs/tutorial/windows-taskbar.md` (#17467)
fix: use a more unique identifier for NSUserNotification instances (#17469)
docs: process.getProcessMemoryInfo() returns a Promise (#16593)
fix: check the result when calling js function (#17443)
build: add a workaround for circleci known_hosts issue (#17471)
feat: expose colorSpace to display object (#17405)
feat: add systemPreferences.getAnimationSettings() (#17382)
spec: fix isEmpty() checks in nativeImage tests (#17441)
docs: correction to ipc-main-event.md 'frane' to 'frame' (#17424)
fix: report module name when require fails in sandboxed renderers (#17413)
chore: remove special handling for dialog methods in remote module (#17412)
docs: fix typo in webview.md (#17454)
refactor: make ELECTRON_INSPECTOR_CONTEXT_MENU handler async (#17411)
docs: document modernization initiative more clearly (#17376)
fix: regressions introduced by adding world isolation to Chrome extension content scripts (#17422)
feat: add tray.getTitle() (#17385)
chore: rename atomBinding to electronBinding (#17419)
fix: pass the correct HostPort into the node inspector (#17380)
fix: throw error when inserting menu items out-of-range (#17401)
chore: remove unused arg parsing code in dialog (#17420)
spec: add new test runner for main-process based tests (#17325)
refactor: implement clipboard APIs without the remote module (#17200)
spec: fix fixtures path for second instance test
fix: spec runner not parsing correctly
feat: enable NodeIntegrationInSubFrames for webview (#17226)
chore: update PR as per feedback
feat: promisify dialog.showCertificateTrustDialog() (#17181)
build: spread runner args onto the runner
refactor: make ELECTRON_INSPECTOR_CONFIRM handler async (#17378)
chore: steal all unknown args for use by the spec runners
chore: add deprecation helper for fnToProperty (#17377)
fix: we can not use ts-node apaprently
feat: add native emoji picker (#17359)
update for PR feedback
build: remove log from the spec runner
spec: chai is funky
wut
build: downgrade chai to work around nested adssertion bug
spec: push electron/spec into the spec runner args before the linux dbus wrapper
build: auto generate electron.d.ts in the spec runner if it is missing
spec: initial spike of main-process based tests
feat: promisify executeJavaScript (#17312)
feat: add safer nativeImage.createFromBitmap(), which does not decode PNG/JPEG (#17337)
feat: promisify session.getBlobData() (#17303)
docs: clarification of requestSingleInstanceLock() docs (#17304)
chore: clean up promise resoution with helpers (#17268)
feat: promisify In-App Purchase (#17355)
refactor: add ipcMainUtils.invokeInWebContents / ipcRendererUtils.handle helpers (#17313)
fix: don't crash when nativeImage.createFromBuffer() called with invalid buffer (#17344)
chore: add description to accelerator.patch (#17346)
spec: robustify some webview tests (#17301)
fix: improve focused menu bar item visibility (#17291)
chore: fix default_app showMessageBox (#17357)
feat: promisify dialog.showMessageBox()  (#17298)
test: add test for second-instance event parameter (#16798)
fix: remove non-existent gpu-crashed event on <webview> (#17317)
chore: node_includes header no longer needs to be at the end of the list (#17090)
feat: Add content script world isolation (#17032)
feat: add global renderer-process-crashed event (#17315)
chore: increase security of default_app (#17318)
spec: robustify sendInputEvent beforeEach hook (#17300)
fix: remove label/image from segment if they are mutated to undefined/null (#17323)
Bump v6.0.0-nightly.20190311
Bump v6.0.0-nightly.20190308
Revert "Bump v6.0.0-nightly.20190308"
Bump v6.0.0-nightly.20190308
build: remove strip_debug_info gn arg declaration as it is android only and causing release build failures on windows (#17306)
feat: promisify session.clearAuthCache() (#17259)
Revert "Bump v6.0.0-nightly.20190308"
Bump v6.0.0-nightly.20190308
test: skip failing win32 devtools keyboard spec
feat: add support for content scripts 'all_frames' option (#17258)
docs: Add information on packaging a build (#17086)
chore: fix linting issues in atom_api_cookies.cc
temporarily disable verify-mksnapshot on arm
fix: build on arm
device/fido/mac: add more specific check for TouchID availability
AttachToOuterWebContentsFrame => AttachInnerWebContents
fix: compile error in frame_subscriber.h
chore: roll 74.0.3724.8
appveyor workaround for appveyor/ci#2420
use patched robotjs to fix compile failure
force abstract-socket version to fix compile error
update nan in spec deps
fix extra-semi warnings
build: only download gn binary for lint step
Disable network service
Change base::JSONReader::ReadToValue() to return Optional.
Change net::CookieStore::SetCookiesCallback to return CookieInclusionStatus
Take scheme in CookieStore::SetCanonicalCookieAsync, not just whether it's secure.
Remove obsolete WebVector::IsEmpty().
Use IPEndPoint instead of HostPortPair
Remove const interfaces from content::ResourceRequestInfo.
Add RenderFrameHost as parameter to WebContentsDelegate::HandleContextMenu
fix extra-semi warning in frame_host_manager.patch
update chromium patches
update v8 patches
chore: roll to 74.0.3718.2
Move buildtools into src
chore: update is-valid-window
chore: roll 74.0.3711.0
fix: initialize field trial list
FIXME: disable field-trial descriptor DCHECK
[OnionSoup] Replace content::RendererPreferences with the mojom one.
[mojo] include mojo header
Expand GpuInfo to include image decode acceleration support.
IWYU: add missing headers
[Mac] Remove GC calls from Chromium.
Change signature of GetCookieListCallback to include list of excluded cookies
CookieStore::DeleteCookieAsync appears unused (outside a few tests), so remove it
Remove deprecated override of RegisterDictionaryPref
Remove channel_id_path from NetworkContextParams (and other related places)
Copy base::JSONReader::Read() to ReadDeprecated().
[DevTools] Stop passing base::Value to DevToolsManagerDelegate
[v8] Advance deprecation for Value::BooleanValue
WebSQL: Don't pass name/metadata around, use content::StorageUsageInfo
Use base::BindOnce in notifications code
Revert "Disable precompiled headers"
Convert remaining JSON service manifests
chore: update patches/common/chromium
chore: update patches/common/v8
chore: update patches/common/boringssl
chore: roll 74.0.3710.0
feat: promisify session cache methods (#17185)
feat: enable setuid sandbox on linux (#17269)
build: use shx instead of raw cp to support windows (#17299)
feat: promisify session proxy methods (#17222)
fix: crash in ECDH.setPrivateKey (#17219)
refactor: load electron builtin modules with process._linkedBinding (#17247)
feat: promisify ses.clearHostResolverCache() (#17229)
fix: remove usage of private APIs in the MAS build (#17224)
feat: promisify session.clearStorageData() (#17249)
refactor: make ELECTRON_BROWSER_SANDBOX_LOAD handler async (#17107)
build: turn gpg signing off for bootstrap (#17282)
chore: add static promise resolution helpers (#17223)
build: fix new TS linting errors (#17279)
test: fix incorrect reference to skip (#17278)
feat: support chrome extensions in sandboxed renderer (#16218)
build: minor fixes to git-export-patches (#17276)
chore: update package-lock.json with npm@latest (#17146)
refactor: use ipcRendererUtils.invoke / ipcMainUtils.handle for desktopCapturer.getSources() (#16619)
feat: add 'disableHtmlFullscreenWindowResize' option to webPreferences (#17203)
refactor: Port renderer/web-view to TypeScript (#17250)
chore: bump chromium in DEPS to 73.0.3683.68 (#17262)
fix: gn check errors in release build (#17274)
fix: run subframe preload bundles in isolated context (#17165)
build: Update TypeScript, use @typescript-eslint (#17251)
Bump v6.0.0-nightly.20190307
Revert "Bump v6.0.0-nightly.20190307"
Bump v6.0.0-nightly.20190307
fix: make StreamSubscriber ref counted (#17221)
fix: bad assertion in crypto functions that use BN_bn2bin_padded (#17220)
fix: backport upstream fixes for color chooser dialogs (#17227)
refactor: make ELECTRON_INSPECTOR_SELECT_FILE handler async (#17235)
feat: promisify dialog.showSaveDialog() (#17054)
chore: bump chromium in DEPS to 73.0.3683.65 (#17234)
docs: add troubleshooting note about pywin32 (#17216)
feat: promisify dialog.showOpenDialog() (#16973)
build: enable gn check for //electron:electron_lib (#17100)
fix: check for pane focus before removing it. (#17164)
refactor: remove chromium/net_url_request_job.patch (#17174)
chore: bump chromium to 73.0.3683.61 (master) (#17191)
refactor: use invoke/invokeSync helpers for <webview> implementation (#16784)
refactor: prevent node macros from overriding base (#17178)
refactor: Port api/web-frame to TypeScript (#17053)
spec: add missing checks to "validates process APIs access in sandboxed renderer" (#17129)
docs: remove dead link to chromiumdev slack (#17161)
feat: allow MenuItems to work optionally when hidden (#16853)
refactor: make CHROME_GET_MESSAGES handler async (#17148)
feat: Add new powerMonitor synchronous API (#17144)
chore: update CODEOWNERS to reflect governance (#17143)
Update debugging-main-process-vscode.md (#16363)
chore:Remove transparency hack (#17128)
chore: replace usage of deprecated beginSheetModalForWindow API (#16994)
docs: Improved security doc, particularly around isolation and tool (#16703)
Bump v6.0.0-nightly.20190227
chore: bump chromium in DEPS to 73.0.3683.58 (#17156)
refactor: make shell.ShowItemInFolder asynchronous (#17121)
fix: set cancelId to 1 when defaultId == 0 and no 'cancel' button (#17123)
fix: access of out-of-scope reference in ShowOpenDialog and ShowSaveDialog (#17126)
refactor: merge ipcMainUtils.handle / handleSync (#17062)
Revert "Bump v6.0.0-nightly.20190226"
Bump v6.0.0-nightly.20190226
chore: roll chromium 73.0.3683.54 (#17124)
chore: clean up issue templates (#17085)
chore: augment promisifyMultiArg deprecation (#17066)
build: upgrade to asar@^1.0.0 (#17061)
docs: allow webRequest listener to passing null (#17006)
docs: add sample code for contents.insertCSS() (#16959)
 refactor: Port inspector to TypeScript (#16943)
fix: use frame tree api to remove <webview> frame (#16501)
fix: respect the user's active app focus (#16400)
chore: finalize dropping support for OS X Mavericks (version 10.9) (#17102)
docs: fix MenuItem `windowMenu` role description (#17065)
chore: bump chromium in DEPS to 73.0.3683.49 (#17095)
test: fix race condition in debugger spec (#17091)
chore: bump chromium in DEPS to 73.0.3683.48 (#17083)
chore: make util::Promise a move-only type (#17071)
chore: remove unused catch bindings (#16121)
chore: bump chromium in DEPS to 73.0.3683.47 (#17068)
feat: show user gesture type in click event (#16954)
chore: properly template the Then promise helper (#17050)
chore: bump chromium in DEPS to 73.0.3683.45 (#17048)
refactor: Port renderer/init to TypeScript (#17027)
refactor: Port chrome-api to TypeScript (#17014)
feat: promisify netLog.stopLogging (#16862)
refactor: Split 'Event' docs/types into more specific Event types (#17038)
chore: add Then helper for native promises (#16978)
feat: add process.getSystemVersion() (#16599)
refactor: Port content-scripts-injector to TypeScript (#17012)
build: make torque patch more specific for native arm builds (#16992)
refactor: Port web-frame-init to TypeScript (#16934)
refactor: Port security warnings to TypeScript (#16937)
docs: update chromium version in 5.0.0 release schedule (#17001)
chore: auto add filenames.auto.gni when md files are changed (#16995)
docs: document the Event interface (#16966)
chore: bump chromium in DEPS to 73.0.3683.41 (#16981)
docs: Remove redundant 'Instance Events' Headline (#16865)
chore: re-enable devtools renderer sandbox (#16864)
refactor: Port renderer-internal to TypeScript (#16939)
chore: refactor browser IPC into TS and app API into TS (#16921)
build: add a pre-flight check to all NPM steps in GN to ensure that we have the right NPM deps installed (#16974)
docs: update dialog documentation for "undefined" ret vals (#16970)
Run electron tests first
chore: roll 73.0.3683.27
Disable swiftshader for arm32
FIXME: disable OSR
fix compilation error for windows testing builds
Disable precompiled headers
REVIEW: fix possible -Wdeprecated-declarations warnings
chore: fix linking errors on Windows
chore: use c++ manifests instead of json
chore: make OSR compile on Windows
Remove "layouttest" or "layout test" in //content
REVIEW: ui::Compositor: Simplify how ExternalBeginFrameClient is used.
REVIEW: Have MouseWheelPhaseHandler agree on whether to route its wheel event
ui/base: move clipboard to own folder.
Delete tab pulsing feature.
Rename BlendTowardOppositeLuma() to BlendTowardContrastingEndpoint().
gfx::Path -> SkPath
chore: roll 73.0.3683.10
Print Preview: Add validity check for kSettingPagesPerSheet.
Enable DCHECK for renderer-initiated navigations requiring initiator.
chore: roll node
Convert ProxyResolutionServiceProvider to use Network Service.
[OnionSoup] replace network::DataElement::Type with DataElementType
Autoplay: remove cross-origin autoplay policy from //chrome and //content.
chore: roll 73.0.3679.0
chore: rm fix_test_compilation_error.patch
Move client hints to content
DevToolsFrontendHost::Create to return unique_ptr instead of raw pointer
Change DevToolsEmbedderMessageDispatcher to use unique_ptr instead of raw pointers.
Replace SiteInstance::IsSameWebSite() with a new non-static method.
Remove const interfaces from content::RenderProcessHost.
Increase scope of URLLoader::FollowRedirect() API implementation.
Make //ui/base/idle API synchronous
split out color chooser browser dialog header
[Printing] Stop using GetUserAgent from non-browser process
More migration of ServiceContext to ServiceBinding
Blink: Plumb correct security origin for isolated world CSPs.
v8: Remove obsolete V8 extras flag
Move BackgroundColor from widgets and child frames to the WebView.
Downloads : Adding metered network info and retry count to download item
Move GetUserAgent from ContentClient to ContentBrowserClient
Use base::size rather than arraysize
[SM] Use C++ Manifests for SM embedders
Change the source origin parameter type for CanCreateWindow from GURL to url::Origin.
Move MediaStream Mojo and public interfaces to Blink.
fix: update deprecated v8 api usage
Refactors TtsPlatform and most platform implementations to content.
chore: update patches/common/ffmpeg
chore: update patches/common/v8
chore: update patches/common/chromium
chore: roll 73.0.3673.0
fix: disable Chromium v2 sandbox in MAS builds (#16920)
feat: promisify webContents.savePage() (#16742)
chore: restore WTF::StringImpl dchecks (#15635)
fix: send `chrome.runtime/tabs.sendMessage` result to correct sender (#16945)
fix: potential flake/race in webview specs (#16950)
refactor: Port getRemote to TypeScript (#16938)
refactor: Port window-setup to TS (#16894)
refactor: promisify prototype methods (#16935)
 refactor: Port renderer-internal-utils to TypeScript  (#16942)
feat: add Touch ID authentication support for macOS (#16707)
fix: pass result to chrome.tabs.executeScript callback (#16941)
chore: move ts-smoke tests to core (#16930)
Bump v6.0.0-nightly.20190213
feat: promisify contentTracing.getTraceBufferUsage() (#16600)
feat: disable fetching thumbnails if thumbnailSize is 0 (#14906)
chore: Add new webFrame IsolatedWorldInfo API and deprecate (#16801)
feat: promisify debugger.sendCommand() (#16861)
chore: bump chromium in DEPS to 72.0.3626.110 (#16924)
 feat: add chrome.runtime.getManifest (#16891)
feat: add file preview for GTK file picker (#16447)
chore: suppress output of npm_action unless it fails (#16888)
chore: bump chromium in DEPS to 72.0.3626.108 (#16899)
chore: remove obsolete v8 patches (#16910)
chore: 'breaking change' in PR body overrides commit type in relnotes (#16911)
feat: promisify app.dock.show() (#16904)
build: ensure that the uploaded symbol path is correct for our symbol (#16908)
fix: backport patch to sync exposed crypto (#16822)
chore: fix lint errors (#16906)
Bump v6.0.0-nightly.20190212
feat: add new components to Display structure (#16870)
docs: migration guide for register{StandardSchemes => SchemesAsPrivileged} (#16762)
refactor: convert more files to typescript (#16820)
fix: release-notes plays more nicely with clerk (#16887)
ci: fix binaries for chromedriver build on macOS (#16893)
chore: bump chromium in DEPS to 72.0.3626.107 (#16869)
Bump v6.0.0-nightly.20190211
Revert "Bump v6.0.0-nightly.20190211"
ci: Refactor mksnapshot test so that it doesn't stall. (#16875)
docs: remove removed autosize attribute (#16884)
Bump v6.0.0-nightly.20190211
Revert "Bump v6.0.0-nightly.20190211"
Bump v6.0.0-nightly.20190211
chore: revert "Bump v6.0.0-nightly.20190208"
chore: disable the remote module in devtools / chrome extension background scripts (#16866)
docs: change of previously wrong added Polish emoji into proper one (#16700)
docs: reference the webviewTag option in the webview docs (#16879)
fix: enable autofill popups on mac (#16308)
feat: promisify webContents.printToPDF() (#16795)
feat: add support for scroll lock accelerator (#16873)
chore: bump spec dependencies (#16872)
docs: document how setAsDefaultProtocolClient works in Windows Store (#16874)
chore: fix "creates offscreen window with correct size" spec on Mac with Retina display (#16867)
refactor: implement Chrome Extension APIs without the remote module (#16686)
fix: enable property having no effect on submenus (#16835)
fix: remove memory leak when using webFrame and spell checker (#16770)
chore: add menu-will-close comment explaining setTimeout (#16794)
Bump v6.0.0-nightly.20190208
docs: reorder crashReporter notes to make more sense (#16825)
Revert "Bump v6.0.0-nightly.20190207"
chore: make crash-reporter specs not use URL module (#16840)
fix: display empty menu item for non-visible submenus (#16832)
fix: don't construct submenu if it's invisible (#16834)
chore: add helper to wait for a window to load in a remote-safe way (#16837)
refactor: implement chrome.i18n.getMessage() without the remote module (#16739)
chore: bump chromium in DEPS to 72.0.3626.102 (#16830)
ci: set MAS_BUILD=true on mas builds (#16824)
chore: add standalone function deprecation helper (#16782)
Bump v6.0.0-nightly.20190207
feat: implement BrowserWindow.moveTop on X11 (#16629)
fix: restore accidentally removed chrome-extension require (#16819)
chore: re-export chromium patches (#16818)
chore: improve existing error preservation in promisify (#16815)
chore: dont log 100000000 chars of URL (#16800)
Revert "Bump v6.0.0-nightly.20190206"
Bump v6.0.0-nightly.20190206
Revert "build: hack around GitHub upload API failure / flake (#16663)" (#16802)
Revert "Bump v6.0.0-nightly.20190206"
chore: fix ts config to not complain about extraneous files (#16790)
Bump v6.0.0-nightly.20190206
chore: bump chromium in DEPS to 72.0.3626.99 (#16779)
Bump v6.0.0-nightly.20190206
build: remove non-arm vstsJobs (#16793)
ci: make macOS CI faster (#16766)
ci: run lint on CircleCI (#16791)
chore: depend on mojo audio and video in BUILD.gn (#16785)
docs: fix security doc url check (#16775)
docs: added webContents.getType() method (#16767)
build: use typescript for internal Electron JS code (#16441)
feat: allow Menu.buildFromTemplate() to accept MenuItems (#16697)
refactor: use ipcRendererUtils.invokeSync / ipcMainUtils.handleSync (#16759)
docs: add some troubleshooting info related to win_delay_load_hook (#16764)
fix: do not increase ref-counting in wrong thread (#16738)
fix: make getUserMedia APIs work again on C72+ (#16763)
docs: improve `app.commandLine` documentation (#16757)
chore: fix dependency vulnerabilities (#16756)
chore: remove release notes semantic PR map (#16758)
chore: auto-format GN and python files in our precommit (#16722)
refactor: crashReporterInit (#16729)
chore: bump chromium in DEPS to 72.0.3626.94 (#16745)
refactor: remove js2asar.py and port logic to JS in more readable / GN-style way (#16718)
build: ensure index.json is actually valid JSON before uploading (#16518)
chore: update issue template, comment out instructions (#16721)
docs: we shouldn't promisify net apis (#16736)
refactor: remove ServiceWorker APIs from WebContents (#16717)
chore: bump chromium in DEPS to 72.0.3626.90 (#16710)
fix: crash when calling setProgressBar on macOS (#16374)
feat: support capslock  and numlock as accelerators (#16719)
chore: remove unused variable in removeWindow (#16715)
chore: fix falsy comments edge case in release notes (#16720)
refactor: enforce naming of ipcMainInternal (#16689)
Add missing let (#15746)
docs: Recommend use of callback with dialog.showSaveDialog (#16649)
ci: move mac release tests to nightly cron job (#16685)
refactor: implement inspector APIs without the remote module (#16607)
Add devtools API to inspect shared worker. (#16615)
fix: show proper clerk notes in release notes script (#16659)
Update menu.md (#16670)
docs: fix referrer typedef in OnCompletedDetails (#16661)
fix: shutdown after message loop is ready (#16671)
build: hack around GitHub upload API failure / flake (#16663)
feat: add window removeMenu() method (#16570)
ci: build mac on CircleCI (#16552)
ci: Run Windows Electron tests first to show those failures first (#16610)
chore: fix 'browserView' typo (#16621)
feat: promisify contentTracing recording APIs (#16584)
fix: improve the way frameless windows are handled on Windows (#16596)
feat: flexible autoresize for BrowserViews (#16184)
fix: use async save dialog for anchor download attribute (#16612)
fix: update docs for protocol API (#16601)
feat: promisify contentTracing.getCategories() (#16583)
fix: expose aes-cfb ciphers from boringssl (#16573)
fix: enable and update osr  (#16517)
docs: remove nonexistent contentTracing methods (#16597)
fix: don't forward IPC filtering events to app for dev-tools and extensions (#16565)
chore: add miniak to troppers (#16590)
feat: added process.electron to get the electron version in forked process (#16450)
fix: check the root window in MenuBar::SetPanelFocus (#16581)
feat: move webFrame scheme privilege methods to main process (#16416)
feat: add ELECTRON_DISABLE_SANDBOX env var (#16576)
fix: execute session preload scripts in sandboxed renderers (#16538)
fix: reject with error when url not loaded (#16571)
fix: expose ripemd160 hash from boringssl (#16454)
feat: promisify webContents.hasServiceWorker() (#16535)
chore: fix promisify helper (#16544)
fix: registerStreamProtocol callback with large chunks (#16532)
feat: promisify cookies api (#16464)
docs: `cancel` is optional in `OnHeadersReceivedResponse` (#16506)
perf: and refactor: Code Scope + Minor Performance Improvement. (#16467)
Electron timelines (#16496)
chore: remove deprecated modules internally using remote.require in sandboxed renderer context (#15957)
fix: check process.isMainFrame in sandboxed_renderer/init.js (#16500)
fix: correctly destroy spellcheck client (#16448)
Troubleshooting for Windows Driver Kit (#16405)
Bump v6.0.0-nightly.20190123
build: fix individual asset downloading in release script (#16493)
ci: re-enable logging on CI (#16257)
refactor: pass internal flag via IPC message struct for consistency (#16490)
build: fail a build if some hooks don't succeed (#16369)
test: untangle a chromium-spec test (#16456)
ci: Update build timeouts (#16492)
Revert "feat: upgrade to Chromium 72.0.3626.52 (#16334)"
feat: preloads and nodeIntegration in iframes (#16425)
feat: enable mixed-sandbox mode by default (#15894)
feat: upgrade to Chromium 72.0.3626.52 (#16334)
fix: dont run window-setup on chrome:// protocol, introduced in b965e54efc1db8117fe5e9131ce071d1ddc47ed9 (#16489)
Try longer timeout on electron build
backport patch to fix arm64 build of swiftshader
backport patch to fix compilation error in test
robustify async webview test
feat: allow setting autoplayPolicy in webPreferences (#16396)
fix: add patch to disable dcheck in inter_process_time_ticks_converter.cc
fix: remove pretarget handler before window destruction
backport v8 patch for linker issue in windows testing builds
Implicitly bypass localhost when proxying requests.
fix: detach webview instead of destroying it
fix HandleKeyboardEvent merge failure
add missing include for l10n_util.h on win
wait for window to be focused in openDevTools test
roll node
add missing //components/feature_engagement dep needed for color_chooser_aura
set autoplay policy to no-user-gesture-required by default
update dom storage quota patch
include glib.h in atom_main_delegate
disable visibilitychange tests as the functionality is broken upstream
Move the base/sys_info* files to base/system/
Update GetAccessibleName() in view::ImageView and view::Button
Remove menu_marker from MenuButton.
Move ViewsDelegate::NotifyAccessibilityEvent to an observer pattern
Remove CR_DEFINE_STATIC_LOCAL
fixup! Use strong ownership for attached inner WebContents
Add interface and Mac implementation for responsiveness::NativeEventObserver.
fix: Initialize resource bundle for the browser process earlier
chore: fix gn format error
resource_coordinator_parts stub in BrowserProcessImpl
tts was migrated to content
Make webkitRelativePath interoperable
Remove ResourceContext::GetRequestContext since it's no longer used.
CORS -> Cors
move pdf_compositor off ServiceContext/ServiceTest
remove name parameter from AllowIndexedDB
StoragePartition::ClearData no longer takes an OriginMatcher
NativeWidgetMac::CreateNSWindow params changed
ChildProcessData.{GetHandle() => GetProcess().GetHandle()}
CurrentProcessInfo::CreationTime -> Process::Current().CreationTime()
remove ipc/struct_destructor_macros.h
REVIEW: Use strong ownership for attached inner WebContents
replace base::AssertBlockingAllowed with base::ScopedBlockingCall
CopyNSImage was removed
ContentRulesetService -> RulesetService
gfx::NativeView is no longer NSView on mac
extra parameters to BrowserClient::HandleExternalProtocol
GetCachePath replaced with GetGeneratedCodeCacheSettings
base/sys_info.h -> base/system/sys_info.h
blink::WebReferrerPolicy -> network::mojom::ReferrerPolicy
less const in WebContents
ScopedNestableTaskAllower in MessageLoopCurrent
HandleKeyboardEvent returns bool
remove OnAreExperimentalCookieFeaturesEnabled
OnCanEnablePrivacyMode -> OnForcePrivacyMode
migrate to non-deprecated v8 functions
update boringssl patches
update v8 patches
roll Chrome to 72.0.3626.52 and update patches
Bump v5.0.0-nightly.20190122
build: fix release asset download for now (#16486)
feat: make `ipc-message` and `ipc-message-sync` events public (#16468)
docs: fix web-request.md listener signatures in electron.d.ts (#16485)
fix: takeHeapSnapshot() using public IPC channel for internal implementation (#16480)
refactor: delete atom_api_renderer_ipc.h (#16481)
fix: <webview> not working with contextIsolation + sandbox (#16469)
Bump v5.0.0-nightly.20190121
build: temporarily disable arm to unblock nightlies (#16479)
fix: prevent double-destroy of window (#16472)
build: auto-fix linting issues on commit (#16466)
feat: make zoomLevel/zoomFactor sync (#16410)
Revert "Bump v5.0.0-nightly.20190119"
Bump v5.0.0-nightly.20190119
feat: promisify desktopCapturer.getSources (#16427)
Revert "Bump v5.0.0-nightly.20190118"
Bump v5.0.0-nightly.20190118
Revert "Bump v5.0.0-nightly.20190118"
Bump v5.0.0-nightly.20190118
chore: always try to nuke tags (#16451)
Revert "Bump v5.0.0-nightly.20190118"
Bump v5.0.0-nightly.20190118
Revert "Bump v5.0.0-nightly.20190118"
Bump v5.0.0-nightly.20190118
feat: add `preload-error` event to `webContents` (#16411)
chore: remove unused osfhandle hack (#16305)
test: ensure legacy callback functions work (#16436)
fix: correctly handle IPC for promise-based methods (#16433)
docs: fix promisification.md formatting (#16434)
 feat: promisify protocol.isProtocolHandled() (#16423)
Revert "Bump v5.0.0-nightly.20190116"
Bump v5.0.0-nightly.20190116
docs: fix typo in build instructions for windows (#16414)
feat: use default-app behavior in packaged apps (#16310)
refactor: promise_util promise creation (#16401)
docs: show the code of adding devtools extension (#16186)
feat: split openExternal into sync and async (#16176)
fix: windowmenu did not show the window list on macOS (#16387)
chore: remove unused deps (#16373)
fix: emit IPC event in correct context if isolation and sandbox enabled (#16352)
Revert "Bump v5.0.0-nightly.20190111"
Bump v5.0.0-nightly.20190111
feat: Upgrade to Chromium 71.0.3578.98 (#15966)
Revert "Bump v5.0.0-nightly.20190111"
Bump v5.0.0-nightly.20190111
Revert "Bump v5.0.0-nightly.20190111"
Bump v5.0.0-nightly.20190111
Revert "Bump v5.0.0-nightly.20190111"
Bump v5.0.0-nightly.20190111
redo: size -> length (#16370)
build: fix the build with enable_run_as_node disabled (#15711)
test: allow retries for flaky mas loginitem specs (#16347)
fix: beep on Ubuntu (#16350)
chore: fix tag cleanup (#16353)
fix: improve release notes (#16343)
chore: add 'use strict' to default app sources (#16346)
Revert "chore: s/size/length (#16351)"
chore: s/size/length (#16351)
fix: return after handling Esc for fullscreen in WebContentsDelegate (#16342)
Bump v5.0.0-nightly.20190110
feat: add `fileMenu` / `viewMenu` / `appMenu` roles (#16328)
Bump v5.0.0-nightly.20190109
fix: properly determine if WebContents is offscreen in WebContentsDelegate (#16329)
chore: fix electron.d.ts file upload (#16335)
Revert "Bump v5.0.0-nightly.20190108"
Bump v5.0.0-nightly.20190108
chore: pass dryRun arg correctly (#16333)
Revert "Bump v5.0.0-nightly.20190108"
Bump v5.0.0-nightly.20190108
chore: github => octokit in release notes (#16332)
feat: add additional remote APIs filtering (#16293)
docs: fix app.setAppUserModelId link (#16322)
chore: refactor scripts for octokit update  (#16284)
test: add specs to version bump utils (#16315)
Add instructions to get Notifications working on Win 10 Update (#16320)
refactor: pass isWebViewTagEnabled via ELECTRON_BROWSER_SANDBOX_LOAD (#16238)
chore: fix json parsing for npm publish (#16318)
fix: register accelerator if role has no registerAccelerator (#16309)
chore: release notes should be an object (#16313)
Bump v5.0.0-nightly.20190107
chore: fix pre passing to atom.rc (#16311)
Revert "Bump v5.0.0-nightly.20190107"
Bump v5.0.0-nightly.20190107
chore: trim output of branch correctly (#16307)
Revert "ci: use config version 2.1 on CircleCI (#15665)" (#16304)
chore: make "nodeIntegration" and "webviewTag" default to false (#16235)
Revert "Bump v4.0.0-nightly.20190107"
Bump v4.0.0-nightly.20190107
feat: add app.commandLine.hasSwitch() / app.commandLine.getSwitchValue() (#16282)
build: extract external binaries config
fix: update license year (#16287)
security: improve IPC validation in guest-view-manager
chore: @electron/nightly => electron-nightly (#16273)
chore: add additional logging during asset upload (#16279)
chore: result => result.data (#16274)
Update browser-window.md with alpha hex formatting (#16269)
docs: Update reference to xcode 8.3.3 (#16267)
fix: correctly pass hidden-page argument to isolated renderers (#16258)
fix: error if a11y support changed before ready (#16261)
fix: don't register some shortcuts without accessibility  (#16125)
feat: add mac support to systemPrefs.getColor() (#16249)
feat: expose systemPreferences.getSystemColor() (#16248)
feat: add mac support to systemPrefs.getAccentColor() (#16251)
chore: add link to clerk readme to PR checklist (#16253)
refactor: use helpers for command-line parsing in renderer/init.js (#16239)
chore: update deprecated LSGetApplicationForURL (#16180)
chore: publish nightlies to electron-nightly (#15938)
fix: don't expose `isolatedWorld` to global (#16208)
feat: add multi BrowserView support to BrowserWindow (#16148)
chore: update @types/node dep (#16174)
fix: extend tracing startRecording API to take a full tracing config (#13914)
fix: add missing require in chromium-spec (#16153)
chore: make nugget quiet by default (#16147)
security: allow to block desktopCapturer.getSources() calls (#15964)
feat: add option to generate explicit URLs in the release notes (#16126)
docs: specify "role" types for "menu-item" (#16129)
fix: do not allow the window to grab focus when tabbing / shift+tabbing (#16042)
test: promisify a bunch of tests (#16051)
feat: Support response headers in File protocol handler (#16098)
docs: note that visual zoom is disabled by default (#16130)
chore: release.id => release.data.id (#16132)
feat: expose app accessibility status api (#16119)
fix: support async child process methods without callback in asar (#15927)
fix: fix Electron not starting in development from the CLI (#16116)
chore: remove chrome_process_finder.patch (#16113)
chore: update PR template to request better release notes (#16080)
chore: fix chrome_process_finder.patch description (#15577)
docs: move `require` related breaking changes to Electron 6.0 (#16109)
docs: Improve the doc about BrowserWindow title property (#16086)
chore: simplify code for modules internally using remote.require in sandbox (#16104)
docs: more natural language in Mac app store guide (#16095)
chore: correctly capitalize releaseID (#16079)
feat: allow immediate MacOS notifications (#16060)
chore: no need to expose Initialize of ipc module (#16066)
fix: register webview in main world when using contextIsolation (#16067)
chore: add BinaryMuse to troppers (#16062)
chore: simplify main world setup of contextIsolation (#16046)
docs: contextIsolation is no longer experimental (#16043)
ci: Cleanup build dirs on Azure Devops  (#16047)
fix: make 'setParentWindow' compatible under Windows (#15775)
chore: enable v2 sandbox on mac (#15647)
fix: fix an original-fs regression introduced in 4.0 betas (#16028)
chore: misc cleanup (#16037)
test: fix flaky before-input-event test (#16027)
build: make it possible to pass a "--directory" arg to "git am" (#16024)
fix: return pointer instead of pointer's content (#16014)
chore: add webui_resources to pak (#16009)
fix: restore ability to disable color correct rendering (#15898)
security: block chrome.tabs.executeScript() for non chrome-extension: URLs (#15929)
fix: allow 2 threads for CreateIoCompletionPort on single-core to prevent busy looping (#15975)
fix: do not print an error for an expected condition (#15991) (#15992)
fix: incorrect view ordering for customButtonsOnHover (#15564)
chore: disable bump-version on arm32 (#15994)
chore: simplify promisify helper  (#15952)
chore: make rpc-server reply to sender frame instead of the main frame (#15973)
chore: warn when people attempt to use the Electron module to do Electron things but from node (#15916)
chore: rename nativeRequire to potentiallyRemoteRequire (#15971)
feat: webContents.loadURL returns a promise (#15855)
chore: convert bump script to js (#15820)
feat: support mixed-sandbox mode on linux (#15870)
refactor: simplify isRemoteModuleEnabled handling in sandboxed renderers (#15961)
refactor: use helpers when using the remote module in sandboxed renderers (#15960)
feat: implement 'app-command' events for browser history navigation keys on Linux (#15441)
feat: promisify app.getFileIcon() (#15742)
docs: es6ify 'Breaking Changes' and 'File' API pages (#15507)
feat: deprecate modules internally using remote.require in sandboxed renderer context (#15145)
fix: use appropriate site instance for cross-site nav's (#15821)
chore: remove electabul (#15954)
docs: remove methods invoking the callback repeatedly from promisification.md (#15951)
chore: restore ppapi_host DCHECK (#15788)
feat: add media access APIs for macOS Mojave (#15624)
fix: security: don't allow arbitrary methods to be invoked on webContents via IPC (#15919)
chore: remove old patch for fixing ffmpeg on 32-bit linux (#15226)
fix: default prop of location should be empty str
fix: set setter of window.location
feat: introduce LocationProxy for BrowserWindowProxy
feat: add support for DesktopCapturerSource.appIcon
build: Enable arm embedded builtins (#15939)
chore: move getCurrentBranch to a util file (#15921)
fix: make windowMenu role correct on MacOS (#15930)
refactor: don't expose NavigationController as an internal module (#15920)
FIXME: disable v8 embedded builtins feature for arm flavor
chore: update libgtkui_export.patch
chore: backport_958b761_from_upstream_v8.patch is not needed for Ch70
chore: bit_hash_seed_commits.patch is not needed for Ch70
chore: pick_b0af309_from_upstream_v8.patch is not needed for Ch70
chore: fix_font_thickness.patch is not needed for Ch70
chore: ensure_cookie_store.patch is not needed for Ch70
chore: roll DEPS 70.0.3538.110
chore: move node specific build config out of //electron
chore: use base::JoinString to concatenate vector
chore: fix v8 deprecation warnings
chore: update fix_trackpad_scrolling.patch
chore: update frame_host_manager.patch
fix: remove explicitly enabled SharedArrayBuffer feature flag
chore: roll DEPS 70.0.3538.102
chore: update printing.patch
chore: update customizable_app_indicator_id_prefix.patch
chore: rm fix_zoom_display.patch
fix: reimplement FrameSubscriber with mojo, re-enable tests
fix: update and re-enable OSR
FIXME: disable some specs
spec: update inspector-binding.js
spec: force create network context for proxy tests
fix: use proxy lookup api of network context to resolve proxies
fix: disable kSpareRendererForSitePerProcess feature
chore: update CreateSkBitmapFromHICON usage for new API (no pointer)
build: disable microsoft include warning
build: explicitly depend on //dbus for the linux build
chore: replace ShowWithWindowState with Show inside native_window_views
chore: update GetLabelFrontList to be GetLabelStyle in menu model
fix: use url::AddCORSEnabledScheme
fixup! add missing newlines to patches
chore: fix linting
chore: check GetAgent as GetTracingController() crashes if no agent is set
chore: update asar injection for new node internal module loader
chore: SetTracingController becomes SetAgent and corresponing contructions updated
Introduce explicit configuration to CertVerifier
fix: update node inspector api usage
Use CompletionOnceCallback in URLFetcherResponseWriter.
Change Value::BlobStorage to std::vector<uint8_t>
Reorganize MediaStreamType enums
Make IsolateHolder aware of the isolate type.
Complete TaskPriority::BACKGROUND->BEST_EFFORT mass rename
Add notifications to UKM.xml.
Respond for handling protocol commands async
Create a CodeCache per each storage_partition to store generated code
FIXME: Remove SchemeRegistry::RegisterURLSchemeAsCORSEnabled
Move NetworkConnectionTracker getter to network_service_instance.h
ProxyConfigDictionary: Use base::Value
Move CRLSets to being part of CertVerifier::Config
Flatten ResourceRequestBody data
FIXME: word_start and medial_capital_as_word_start are removed from WebFindOptions
Change SubscribePermissionStatusChange to use a RFH to query permissions
fix: update to per context v8::Script::Compile api
Use CompletionOnceCallback in URLRequestSimpleJob.
fix: [UI] Resolve method conflict between MenuModel, SimpleMenuModel::Delegate
fix: Remove DEFINE_WEB_CONTENTS_USER_DATA_KEY in //electron.
chore: make BrowserObserver a CheckedObserver
fixme: C70 removed DidReceiveCompositorFrame
chore: fix ShouldFork impl, referrer stripping has been removed
chore: post_task and friends now live under base/task
chore: replace PreContentInitialization with PreCreateMainMessageLoop
chore: bump node
chore: update v8 patches for Chromium 70
chore: update package-lock.json
update DEPS
rebase chromium patches on M70
chore: remove unused module (#15917)
docs: update mojave-dark-mode-guide.md (#15888)
chore: allow bumping stable => beta (#15906)
chore: improve granular release cleanup (#15900)
ci: Renable ffmpeg and mksnapshot tests on Azure Devops (#15800)
chore: DCHECK that events are only emitted on the UI thread (#15873)
security: only handle related IPCs when <webview> tag is enabled (#15859)
fix: move NativeWindow tracking to OSR WCV (#15585)
fix: backport patch that ensures that cookie store is always created (#15836)
fix: ignore unused freopen result (#15884)
test: fix flaky takeHeapSnapshot test (#15853)
refactor: simplify logic for enabling stack dumping (#15872)
test: fix a bunch of flaky tests related to emittedOnce (#15871)
chore: remove browser_plugin_wheel.patch (#15787)
fix: form control rendering on 10.14 Mojave (#14865)
fix: prevent bluetooth device list from growing without bound (#15805)
fix: osr windows respect display scale factor (#15733)
refactor: eliminate duplicate code exposing process APIs (#15824)
docs: makes note of HTTP header CSP usage with file:// (#14768)
feat: Implement process.getProcessMemoryInfo to get the process memory usage (#14847)
docs: add new widevine requirements (#14024)
feat: promisify win.capturePage() (#15743)
chore: change return type of platform_util::SetLoginItemEnabled (#15854)
chore: expose release id for use in cleanup (#15845)
test: fix remote-debugging-port test calling done twice (#15857)
chore: fix V8 deprecation warnings (#15842)
fix: add missing shell_resources.pak to repack target (#15844)
fix: backport patch to fix scrolling problem (#15830)
feat: add activate option to webContents.openDevTools (#13852)
test: add test for window.open in BrowserView
fix: remove event monitor before destroying window
fix: move window.open handlers from BrowserWindow to WebContents
chore: remove scoped_clipboard_writer.patch (#15843)
chore: add promise api runtime flag (#15841)
fix: improved event flow management related to 'will-resize' event on Windows (#15695)
feat: add registerAccelerator flag to allow menu items to optionally skip accelerator registration (#15723)
chore: remove unused test.py (#15822)
chore: restore //url dchecks (#15637)
chore: remove browser_plugin_guest.patch (#15786)
build: fix native_mksnapshot build (#15770)
fix: bypass CORB when web security is disabled (#15737)
fix: schedule a paint after browserview's background is set (#15784)
fix: load the chrome.* API on chrome-extension pages in sandbox mode (#15563)
fix: remove duplicated status code (#15707)
view: add ResizeArea class (#15752)
chore: remove no_stack_dumping.patch (#15785)
chore: remove FileChooser AddExtensionForFilename (#15510)
chore: add spec for --inspect after a -- (#15237)
feat: Add app.getLocaleCountryCode() method for region detection (#15035)
revert: "fix: window.open site instance should belong to same browsing instance (#15216)" (#15757)
doc: Update Windows build instructions to include debugging tools (#15765)
docs: changed German link with English one for Windows SDK Archive (#15764)
Update webview-tag.md (#15741)
docs: add note about win_delay_load_hook (#15766)
build: make make_locale_dirs idempotent (#15768)
chore: don't explicitly destroy asar archives (#15734)
docs: add troubleshooting section for win toolchain prompt (#15761)
chore: allow for callback => promise deprecation (#15758)
fix: ensure that file descriptors 0/1/2 are opened at startup (#15555)
fix: On close trying to remove observer from an empty collection leads to an access violation (#15739)
fix: package swiftshader binaries (#15380)
ci: temporarily disable verify ffmpeg & mksnapshot tests on vsts (#15732)
fix: always disable setuid sandbox on linux (#15722)
fix: crash in sandbox on linux when getting execPath (#15701)
fix: restore missing .lproj directories (#15721)
build: use different directory for generated breakpad symbols (#15716)
feat: add numpad accelerator strings (#15689)
fix: return system shared url loader for content layer
fix: initialize system network context from IOThread
refactor: move IOThread and NetLog ownership to g_browser_process
fix: create system network context for global requests
feat: add about panel customization on linux (#15658)
chore: remove add_atomic_lib_to_dependencies_even_for_sysroot_builds.patch (#15692)
chore: fix window width in spec for win (#15693)
fix: window.open site instance should belong to same browsing instance (#15216)
feat: allow partial setting of window bounds (#15677)
ci: use config version 2.1 on CircleCI (#15665)
fix: bypass DOM storage quota (#15596)
docs: remove unsafe eval section of security tutorial (#15675)
feat: expose showAboutPanel for MacOS (#15674)
build: auto-gen libnotify_loader.cc (#15648)
refactor: no longer require submenu for services menuitem (#15656)
fix: NSWindow crash happening on macos 10.9 (#15660)
fix: Menu accelerators not working (#15094)
ci: add testing for mksnapshot (#15627)
chore: remove deprecated touch-bar API (#15650)
chore: re-enable DCHECK in node_debugger (#15649)
refactor: printing implementation (#15143)
chore: restore process_metrics_win.cc dcheck (#15631)
chore: restore node.cc IsPseudoElement dcheck (#15634)
chore: restore blink loader dchecks (#15638)
chore: restore webui-related bindings DCHECK (#15633)
chore: restore WeakReference dcheck (#15629)
fix: send NSView* as the response to getNativeWindowHandle() instead of a null handle (#15521)
fix: destroy WebContents synchronously on shutdown (#15541)
chore: remove the 'get-patch' script (#15586)
chore: restore viz dcheck (#15632)
fix: match Chrome's font fallback behavior (#15486)
feat: add methods to allow customization of save dialog during will-download event (#15497)
chore: restore kill_win.cc dcheck (#15630)
fix: make certain values on `process` read-only (#15628)
docs: add a mojave dark mode guide (#15267)
fix: correctly display zoom in accelerator on mac (#15502)
feat: allow registering multiple shortcuts (#15542)
chore: add explanation to resource_file_conflict.patch (#15612)
fix: correctly package Login Helper in mas builds (#15610)
fix: make feature strings more robust to whitespace (#15602)
build: add v8_context_snapshot_generator to mksnapshot zip (#15606)
better release notes (#15169)
chore: add simple set/unset loginitem spec (#15595)
refactor: don't use AppIndicatorIcon directly (#15536)
fix: update the "SSL_get_tlsext_status_type" patch (#15587)
fix: hiddenInset titleBar console spam (#15576)
refactor: remove 10.9 specific menu code (#15578)
docs: add more links to the devtools protocol docs (#15581)
chore: fix missing \n at end of exported patches (#15579)
chore: remove unused use_transparent_window.patch (#15534)
fix: use NSURL path for receipt url (#15355)
build: store the patches config in a json file (#15395)
build: make pyyaml an optional dependency (#15565)
refactor: more cleanup of chromium_src (#15424)
docs: fix the "second-instance" event handler signature in the docs (#15551)
style: no need for done call in sync tests (#15550)
chore: use chromes auto generated definition of CHROME_VERSION_STRING (#15275)
test: fix a possible race condition in sendInputEvent test (#15530)
fix: use sendToAll method correctly in chrome-api (#15518)
docs: add Size as an option for pageSize in docs for printToPDF (#15519)
chore: publish to the latest tag correctly when releasing old versions (#15274)
fix: explicitly set `windowsHide` to the old node default (#15469)
fix: honor properties.showHiddenFiles on Linux (#15503)
refactor: remove hardcoded google api key (#15478)
docs: add return type for subscribeNotification (#15490)
feat: detect high contrast color mode (#15493)
fix: don't append Shift modifier text twice to accelerators (#15400)
chore: re-enable protocol partition request spec (#15483)
chore: remove webui_in_subframes patch (#15475)
chore: re-enable failing netlog spec (#15484)
chore: re-enable execFileSync binary exec spec (#15476)
docs: http protocol handlers can access headers (#15431)
chore: update versioning doc for nightlies (#15468)
doc: clarify menu item properties not available top-level (#15458)
docs: fix protocol.isProtocolHandled documentation (#15430)
refactor: Improve accessibility of menus (#15302)
docs: add Azure Pipelines status (#15455)
chore: move spellcheck out of chromium_src (#15407)
fix: use gio as default linux trash impl (#15399)
doc: correct ipcRenderer sendTo windowId param (#15403)
chore: remove unused chrome_notification_types.h (#15409)
chore: avoid appending git version to the exported patches (#15389)
ci: run more Chromium unit tests (#15363)
fix: folder open not working in devtools (#15387)
chore: bump minimum supported macOS version to 10.10 (#15357)
fix: child window with nativeWindowOpen should disable node integration (#15213)
fix: set NSResizableWindowMask at init time (#15106)
ci: make sure brew installed node is available in path (#15377)
fix: allow stream protocols to return headers with multiple values (#14887)
chore: set env when invoking gn (#15354)
chore: deprecate apply-patches in favour of git-{import,export}-patches (#15300)
build: add conditions to check out Chromium and Node.js (#15319)
refactor: eliminate brightray (#15240)
refactor: use public WakeLock interface (#15351)
test: convert node spec to expect (#15345)
chore: electron alias should be defined with public_deps (#15349)
chore: remove disable_scroll_begin_dcheck.patch (#15233)
build: skip pyproto/ resources in zip.py (#15348)
fix: update fs methods for options param (#15323)
refactor: eliminate brightray::BrowserMainParts (#15336)
fix: honor dialog.showMessageBox()'s Icon argument on Linux (#15326)
feat: add MdTextButton to View APIs (#15328)
fix: Native window close crash (#15327)
refactor: eliminate brightray::MainDelegate (#15333)
refactor: eliminate brightray::BrowserClient (#15320)
docs: update Windows build instructions (#14797)
ci: run unittests on clean Chromium (#15125)
fix: correct reversed logic in NativeWindowMac::SetEnabled (#15257)
build: reenable -fwhole-program-vtables (#15228)
refactor: remove potential double free when managing WebContents (#15280)
refactor: eliminate brightray::ContentClient (#15303)
docs: we don't emit an event object for session-created (#15236)
build: document env vars expected to be set for the CI configs (#15129)
spec: increase MAS timeout for login items (#15291)
fix: ability to fetch separators by id (#15290)
refactor: move media/net from brightray to atom (#15288)
refactor: move devtools from brightray to atom (#15234)
fix: trim app name and productName (#15269)
chore: make macOS release builds higher priority to skip the queue (#15276)
refactor: remove WebContents::CreateFrom (#15241)
test: asyncawaitify one of sandbox related tests (#15252)
fix: make release-artifact-cleanup executable (#15225)
fix: convert wstring to string on windows in node_bindings (#15266)
feat: expose setBackgroundThrottling api (#15104)
fix: loading of devtools extensions on startup (#13844)
fix: Convert to lower case in upload symbols script (#15258)
chore: roll node (#15177)
fix: enable NODE_OPTIONS env var (#15158)
fix: correctly enable and disable windows on Windows and Linux (#15184)
chore: don't set allow_new_privs in new processes (#15229)
chore: add documentation for blink_file_path.patch (#15235)
feat: Spellchecker Async Implementation (#14032)
ci: make sure git directories don't have unneeded files in them (#15247)
feat: add remote.require() / remote.getGlobal() filtering (#15014)
chore: remove disabling of ANGLE dchecks (#15227)
chore: remove desktop_screen_win.patch (#15232)
chore: remove unnecessary build_toolchain_win_patch.patch (#15231)
chore: remove skia/dcheck.patch (#15223)
chore: remove webrtc patch to disable a warning (#15218)
fix: small refactoring regressions (#15206)
refactor: move notifications from brightray to atom (#15209)
fix: don't call ReadRawDataComplete if it's not necessary (#15185)
add width to webview iframe (#15195)
docs: change examples in docs to use for..of and async/await (#15196)
fix: do not enable node integration in child window if not enabled (#15076)
chore: add --fix option to lint:cpp (#14977)
chore: remove ColorChooser file that's no longer used (#15186)
build: add temporary debugging to generate_breakpad_symbols.py (#15176)
fix: allow renaming electron.exe (#15173)
fix: add microtask runner and fix promise test (#15071)
fix: preserve background color through reload (#15105)
fix: Memory > Profiles > Load in DevTools (#15151)
feat: add webPreferences.enableRemoteModule option (#13028)
fix: split out login item tests (#15135)
Revert "fix: export zlib symbols (#15103)" (#15138)
chore: update pr template for no-notes (#15137)
refactor: move printing out of chromium_src (#15023)
chore: mark browserview api as not-experimental (#15117)
fix: natively implement LoginItem functions (#15010)
build: add v8_embedder_string to build args (#15039)
fix: export zlib symbols (#15103)
chore: roll node (#15097)
docs: app.getLoginItemStatus -> app.getLoginItemSettings (#15093)
fix: Remove `statSyncNoException` for good (#15092)
refactor: move color_chooser out of chromium_src (#15091)
refactor: move text-to-speech out of chromium_src (#15024)
Revert "FIXME: disable isCurrentlyAudible test to unblock merge" (#15078)
fix: update and enable osr (#15046)
chore: make FILEVERSION 4th component 0 on nightly builds (#15074)
build: add "apply_patches" flag to gclient (#15079)
test: update notification_provenance.patch to fix unittests compilation (#15060)
refactor: remove global_shortcut_listener from chromium_src/ (#15070)
fix: update node for patch that allows native modules built on < node 10 (#15073)
ci: strip linux binaries for nightly release builds (#15063)
feat: add workingDirectory option to shell.openExternal() (#15065)
fix: close patch_file before deleting it (#15055)
Bump v4.0.0-nightly.20181010
chore: patch dump_syms to not hard fail on dylib resolve error (#15056)
Revert "Bump v4.0.0-nightly.20181010"
ci: set timeouts for all steps on VSTS (#15051)
revert: "fixme: allow huge Electron archives" (#15048)
Bump v4.0.0-nightly.20181010
Revert "Bump v4.0.0-nightly.20181010"
Bump v4.0.0-nightly.20181010
Revert "Bump v4.0.0-nightly.20181010"
Bump v4.0.0-nightly.20181010
Revert "Bump v4.0.0-nightly.20181009"
Bump v4.0.0-nightly.20181009
Revert "Bump v4.0.0-nightly.20181009"
Revert "FIXME: try enabling dcheck to see if that will get us more info on linux-release-testing"
Revert "FIXME: temporary debugging to maybe diagnose netlog issue on mac"
fix: simpleFullscreen window should be on top of other OS X menu bars. (#14881)
chore: dont run nightly jobs for everything
chore: add deprecation notice for webPrefences defaults (#15045)
docs: Add instructions on how to pull/push (#14903)
Bump v4.0.0-nightly.20181009
feat: add app.enableSandbox() (#14999)
fix: simplify SetBackgroundColor
fix: ensure that the window is focused when testing spellchecker
fixme: dont use --enable-logging on the ffmpeg verify phase
chore: remove --enable-logging, causing issues on CI
chore: add logging to zip-symbols.py to help debugging timeouts
fix: use valid markdown syntax in browser-window.md to fix docs linter
fix: Lifetime of auth_info_ in login handler (#15042)
FIXME: temporary debugging to maybe diagnose netlog issue on mac
fix: [mac] restore SetBackgroundColor functionality
docs: document BrowserWindow.setBackgroundColor
FIXME: try enabling dcheck to see if that will get us more info on linux-release-testing
FIXME: disable isCurrentlyAudible test to unblock merge
FIXME: disable getGPUInfo test to unblock merge
chore: update line reference in gpuinfo comment
fix: compile error on mas
fixme: allow huge Electron archives
fixme: always run "nightly-release-test" workflow
FIXME: disable document.visibilityState/hidden <webview> spec
FIXME: disable net log spec
spec: update media-started-playing tests based on the autoplay policy
ci: enable stack dumping in tests
fix: ensure webcontents is destroyed before its associated browser context.
fix: crash in webRequest due to unsafe static_cast
fix: remove conflicting header
FIXME! disable osr for now
fix: make lint run on Windows in PowerShell
fix: disable the V2 sandbox on macOS
test: make netLog test pass when app crash on exit
feat: getGPUInfo not longer supports 'complete' on macOS
fix notification permission handler
fix: only call NetworkService::SetUpHttpAuth once.
chore: roll node
chore: gn format
fix: Use the new isolate initialization api
fix: linking pepper flash on Linux
roll node to 10.11.0
FIXME: disable non-compiling LOGFONT IPC message
clang-format
Stop using ResourceContext::GetHostResolver()
Hook up HttpAuthHandlerFactory configuration to the network service
Refactor of ServiceManagerContext
update,,, sysroots? again????
update sysroot
chore: re-enable bundled font config, we should fix the sysroot
chore: update sysroot
chore: re-land GetBgColor libgtkui export patch
fixme: disable pepper flash
chore: dont use bundled fontconfig
migrate off QuitCurrent*Deprecated in browser.cc
fix default_app.js calling no-longer-existent API
native_desktop_media_list.h depends on //chrome/app:generated_resources
Creates TaskScheduler and MessageLoop on main thread early
fix: include algorithm in notification_presenter
fix: exe_and_shlib_deps does not exist anymore
chore: bump node
chore: update CHROME_VERSION_STRING
fix: intercept the isolate_holder's new isolate and register it with the node platform before initialization
Replace more loading methods in WebLocalFrame
Split WebWidgetClient and WebViewClient
Remove WebCanvas alias, use cc::PaintCanvas directly in blink
Rename WebFrameClient to WebLocalFrameClient
Remove PlatformAccelerator
Handle deleting cookies with session-only policy in network service
Move Net.HttpRequestCompletionErrorCodes to NetworkContext
Remove SupportsOCSPStapling from CertVerifier and CertVerifyProc
Remove WebContentsUserData::kLocatorKey
Switch NetworkDelegate to OnceCallbacks
Remove unused RunMicrotasksObserver
Remove content::SpeechRecognitionResult
Make content::PermissionManager a delegate of PermissionController
Port //services/device/geolocation to network::SimpleURLLoader
Collect NV12, YUY2, and BGRA overlay support information in GPUInfo
Refactor RWH::RestartHang...Timeout... into a generic base::Closure
Rename WebContentsDelegate methods
Rename content::PermissionManager into content::PermissionControllerDelegate
media: Refactor KeySystemSupport
Support add/overwrite redirect request headers in NavigationURLLoader
Use CompletionOnceCallback
FIXME: Delete RenderWidgetHostViewMac::AcceleratedWidgetGetNSView
FIXME: Move persistent notification id from notification database to profile
Unify notification-related permission checks in its PermissionContext
Change CreateWebUIControllerForURL() to return a unique_ptr
Rename base::Timer to base::TimerBase
ChildProcessSecurityPolicy: only use granted schemes for requests
Replace DupCryptoBuffer with bssl::UpRef
Migrate MediaResponseCallback to OnceCallback
stop using x-devtools-emulate-network-conditions-client-id header
roll node to tmp version (branch more-patches)
more gclient_gn_args
//tools/gn was removed
update chromium and v8 patches
roll Chromium to 69.0.3497.106
ci: run tests on VSTS in a separate job (#15027)
ci: strip linux binaries for release builds (#14991)
fix: Check minSize constraints before resizing (#14931)
fix: overly thin font rendering on mojave (#15007)
feat: convenience command to apply all formatter patches (#14994)
fix: power observer dbus crash (#15030)
ci: fix breakpad symbols generation on CircleCI for PRs from forks (#15026)
ci: fix the upload distribution step on VSTS (#15015)
chore(eslint): add extension to .eslintrc file (#15020)
refactor: use boolean for nodeIntegration / webviewTag (#15005)
ci: various fixes (#15004)
refactor: use separate ipc-renderer-internal / ipc-main-internal APIs for Electron internals (#13940)
Bump v4.0.0-nightly.20181006
Revert "Bump v4.0.0-nightly.20181006"
chore: temporarily use submodule and gn DEPS for requests/boto
Bump v4.0.0-nightly.20181006
chore: fix native_mksnapshot path on for arm releases
Revert "Bump v4.0.0-nightly.20181005"
Bump v4.0.0-nightly.20181005
ci: fix breakpad symbols generation (#14981)
ci: better Slack notifications for nightly jobs (#14985)
build: make external binaries download action more flexible (#14982)
refactor: enable weak ptr unwrap sequence dcheck (#14816)
ci: fix environment variables for fork prs (#14995)
build: remove //chrome/browser/icon_loader source copies (#14955)
fix: re-enable osr following m68 upgrade (#14973)
chore: run clang-format to clear linter for #14977 (#14990)
Save build artifacts for debug builds (#14992)
ci: cleanup Electron dirs before running tests (#14989)
ci: use ubuntu 18.04 for arm testing (#14988)
ci: temporary do no run "verify-ffmpeg.py" on Mac CI (#14986)
Revert "Bump v4.0.0-nightly.20181004"
chore: specify -j18 for electron ninja call
build: make boto and requests optional dependencies (#14970)
fix relaunch on linux (#14975)
Bump v4.0.0-nightly.20181004
chore: add extra logging to the upload script
Revert "Bump v4.0.0-nightly.20181004"
chore: remove duplicate code in spec/security-warnings-spec.js (#14967)
Bump v4.0.0-nightly.20181004
refactor: create request context from network context (#14656)
feat: add evt listeners for SetAlwaysOnTop (#14951)
fix: update accelerator patch to handle recent chromium fixes (#14966)
ci: Trigger an arm test on VSTS after CircleCI build (#14898)
ci: rearrange builds on CircleCI (#14969)
refactor: Clean up the implementation of the registerStreamProtocol (#11357)
chore: enable -pie for linux builds (#14962)
test: disable one test in base_unittests (#14968)
chore: checkout the arm resources during publish sync
Revert "Bump v4.0.0-nightly.20181003"
Bump v4.0.0-nightly.20181003
chore: fix GN linting issue in brightray
Revert "feat: upgrade to Chromium 68.0.3440.128 and Node 10.11.0 (#14677)" (#14963)
feat: upgrade to Chromium 68.0.3440.128 and Node 10.11.0 (#14677)
chore: bump node to fix tar.py line endings
chore: add GN linting (#14678)
chore: bump node to get header tar file
test: disable the "app.relaunch" test on Linux
fix: build torque with x64 toolchain
experiment with is_cfi = false
disable failing assert in beginFrameSubscription dirty-rectangle test
avoid duplicate files when building a zip
roll node to v10.11.0
test: make run-as-node --inspect test more robust on windows
test: make before-input-event test more robust
disable OSR for now
chore: update linux sysroots
chore: remove obsolete "install-sysroot.py" script
test: fix frame-subscriber test on Mac
fix: enable back a DCHECK in viz::ServerSharedBitmapManager
better crash diagnostics in ffmpeg test
test: fix :electron_tests compilation
chromium removed *_posix.cc from the source filters
test: minor improvements to the Node spec
kZygoteProcess moved into service_manager
ViewsDelegate::CreateWebContents went away
fix disable_scroll_begin_dcheck.patch
use new node options parser
DrainBackgroundTasks -> DrainTasks
add secure_origin_whitelist to chrome source list
certificate_transparency moved out of net/
SetFdLimit -> IncreaseFdLimitTo
MessageLoop::QuitWhenIdleClosure -> RunLoop::QuitCurrentWhenIdleClosureDeprecated
test: remove no longer existing Chromium test deps
DispatchNonPersistentCloseEvent takes a callback now
ExecuteScriptInIsolatedWorld is single-script only
SetTimeStamp takes a base::TimeTicks
expose URLRequestContextGetter::{Add,Remove}Observer
WasResized -> SynchronizeVisualProperties
MessageLoopCurrent
content::RESULT_CODE_NORMAL_EXIT -> service_manager::RESULT_CODE_NORMAL_EXIT
OnAudioStateChanged doesn't take a WebContents
blink::WebFullscreenOptions
std::unique_ptr<WebContents>
net::HttpAuthCache::ClearEntriesAddedWithin -> ClearAllEntries
ScopedNestableTaskAllower doesn't take an argument
GetHandle() -> GetProcess().Handle()
use content::ChildProcessTerminationInfo
net::X509Certificate::Equals -> net::X509Certificate::EqualsExcludingChain
PathService -> base::PathService
kNoSandbox moved into service_manager
pass encryption_modes_supported to CdmInfo
fix SSL_get_tlsext_status_type patch
update v8, ffmpeg, chromium, crashpad, boringssl, and webrtc patches
bump CHROME_VERSION_STRING
Update to Chromium 68.0.3440.128 and Node 10.10.0
feat: add security warnings to sandboxed renderers (#14869)
ci: combine linux-*-checkout into one step (#14937)
build: remove //chrome/common source copies (#14950)
 build: remove //extensions source copies (#14949)
fix: support ASAR in fs.copyFile (#14942)
build: remove duplicate cursor resource configs (#14929)
fix: default_app incorrect loading by url (#14940)
refactor: desktop capturer module (#14835)
chore: remove dead code in menu controller (#14939)
fix: use white background for non-OSR renderer by default (#14932)
ci: Use VSTS checkout of electron (#14926)
chore: remove duplicate and un-needed files from dist zips (#14882)
fix: check guest view's devtools window size (#14922)
Revert "fix: check guest view's devtools window size"
fix: check guest view's devtools window size
feat: remove needless mojave dark mode APIs and add instructions on how to use the macOS replacement (#14895)
ci: clean up the lint config for vsts (#14914)
refactor: add prefer-const to .eslintrc + fix errors (#14880)
chore: some async await stuff for the spec runner (#14897)
ci: add -j3 to mksnapshot/ffmpeg due to smaller machine size (#14907)
fix: Disable new fade animation for BrowserViews (#14911)
test: slightly rewrite getGPUInfo() tests (#14863)
ci: run more unittests (#14861)
ci: refactor the CircleCI config (#14891)
 build: define compile time features with buildflag header (#14840)
ci: fail a tests job is there are no test results (#14884)
chore: wrap new NSAppearance in correct check (#14873)
chore: skip the .bin from folder hashing due to npm not cleaning up symlinks (#14888)
test: disable getGPUInfo() tests on Linux (#14875)
refactor: implement <webview> methods via dedicated IPCs without the remote module (#14377)
refactor: simplify process object initialization for sandboxed renderers (#14878)
Bump v4.0.0-nightly.20180929
chore: fix mac vsts config
Revert "Bump v4.0.0-nightly.20180929"
Bump v4.0.0-nightly.20180929
chore: generate ffmpeg zip on macos release
Revert "Bump v4.0.0-nightly.20180929"
Revert "Bump v4.0.0-nightly.20180929"
Bump v4.0.0-nightly.20180929
Bump v4.0.0-nightly.20180929
chore: run create-typescript-definitions for darwin releases
Revert "Bump v4.0.0-nightly.20180929"
Bump v4.0.0-nightly.20180929
chore: run create-typescript-definitions for darwin releases
chore: set TARGET_ARCH correctly for arm and arm64 builds
Revert "Bump v4.0.0-nightly.20180928"
Bump v4.0.0-nightly.20180928
chore: generate ffmpeg zip on linux release
chore: get target arch from TARGET_ARCH env var
chore: bump node to get header tar file
Revert "Bump v4.0.0-nightly.20180928"
Bump v4.0.0-nightly.20180928
chore: actually publish from circleci and always build node headers on vsts
chore: fix ffmpeg upload path and always generate node headers
chore: fix upload.py for symbol.zip upload
refactor: replace var with const / let (#14866)
chore: push the symbol zip not a folder
Pass along verbose mode
test: guarantee the order of webview and devtools creation (#14849)
ci: fix windows symbol gen
chore: add python env to zip-symbols script
Revert "Bump v4.0.0-nightly.20180927"
fix: enable key accelerator flags for Windows and Linux (#14830)
Bump v4.0.0-nightly.20180927
chore: use get_electron_branding instead of electron_gyp in the symbol zip generator
Revert "Bump v4.0.0-nightly.20180927"
Bump v4.0.0-nightly.20180927
chore: dont tag libcc when it does not exist in GN build
chore: fix path to dump_syms in the windows breakpad tool
chore: make zip-symbols executable
Revert "Bump v4.0.0-nightly.20180927"
Bump v4.0.0-nightly.20180927
chore: ensure the bump-version script modified the version.h file correctly
Revert "Bump v4.0.0-nightly.20180927"
Bump v4.0.0-nightly.20180927
chore: fix relative links in docs and enforce we dont break them again (#14832)
chore: move the view APIs to their own directory (#14722)
chore: fix out_dir usage in upload-symbols.py
chore: fix test command in docs
Update mksnapshot uploads
updating directories and related functions
Add publish jobs for CircleCI releases
chore: fix appveyor deploy working dir
chore: remove serve-node-headers.py, unused in new testing setup and points at old out_dir
chore: ensure boto is initialized so that s3put works
chore: fix out_dir usage in upload-node-headers.py
chore: fix out_dir usage in upload-node-checksums.py
chore: fix out_dir usage in upload-index-json.py
chore: remove unused files to simply out_dir replacements
chore: initial work for running releases of GN build
chore: stop using electron.gyp for branding and version (#14559)
fix: handle shortcuts by default if no WebPreferences object exists (#14766)
feat: add APIs to support mojave dark modes (#14755)
ci: run unittests and browsertests separately (#14826)
feat: Implementation of getGPUInfo API. (#13486)
build: turn on OSR for GN builds (#14352)
chore: upload node.lib for v4 (#14829)
fix: send null in debugger callback when no error (#14814)
fix: update deprecated NSWindow masks (#14760)
correct key code reqs for accel doc (#14823)
build: Generate breakpad symbols for GN release builds (#14791)
chore: check in the changes to package-lock.json (#14815)
refactor: use error-utils for remote exception serialization / deserialization (#14788)
refactor: implement crashReporter.start() without the remote module (#14434)
fix: setMaximizable to be true if window is resizable & maximizable (#14648)
fix: get background color from GtkMenuBar#menubar (#14785)
ci: migrate libcc's Dockerfile to electron and update it (#14786)
chore: fix compilation with XCode 10 (#14800)
chore: force patches to be checked out with LF line endings (#14789)
ci: add a branch name to Slack notifications (#14793)
chore: update mksnapshot and ffmpeg for GN (#14738)
fix: inconsistent titleBarStyle on transparent fullscreen (#14765)
spec: add test for syncronous access to blink APIs (#14637)
ci: do not suppress stdout from Google Test binaries (#14782)
docs: update releasing info (#14675)
docs: clarify allowable background colors for BrowserWindow transparency (#14762)
fix: support macos 10.14 SDK (#14758)
ci: run native tests on CircleCI (#14774)
ci: fix pattern for the Chromium branches names for CircleCI (#14769)
chore: have 'use strict' consistently across our lib files (#14721)
No longer need to filter out resources dir
Make sure resources gets skipped
Revert to one job instead of two
chore: move crashpad patch to chromium dir (#14744)
Remove broken symlinks from buildtools before saving it to artifacts
Add buildtools to artifacts needed for testing
Make killall Electron more friendly
Split build and test into separate jobs
Add electron_chromedriver_zip target
Cleaned up/fixed skip_path with @nornagon's suggestion.
Add verify ffmpeg back to CircleCI builds
Add chromedriver to build Make sure certain paths/files don't make it into the dist zip Don't build the content shell test_runner Make sure libffmpeg.dylib gets put in the right place Run verify-ffmpeg on Mac builds Add ffmpeg build to VSTS
ci: run nightly builds for Chromium upgrade branches
ci: clean up the CircleCI config
refactor: clean up the default app implementation (#14719)
ci: build mksnapshot in a separate job (#14741)
test: inherit stdio when 'npm install'ing spec deps (#14740)
ci:Make sure that tests on VSTS get marked as failed if they fail (#14734)
chore: add ffmpeg dist zip (#14681)
fix: do not set layer explicitly for frameless window (#14730)
ci: build ffmpeg and verify it in a separate jobs
test: reenable app moduele > app.exit(exitCode) > closes all windows
docs: type the promises in our docs (#14715)
docs: add python-dbusmock to the linux requirements (#14727)
fix: change subprocess.Popen calls to work on Linux too (#14689)
chore: turn off clang-format for ATOM_PRE_RELEASE_VERSION (#14711)
chore: ignore spec/node_modules from linting (#14717)
[RFC] perf: use an internal module resolver to improve require performance (#14633)
ci: [circle] don't use map merge key (<<) where unneeded
test: runas is not an optional dependency (#14704)
docs: update "upgrading node" guide (#14649)
chore: fix await in cleanup script (#14670)
chore: remove vendored depot_tools (#14676)
chore: run clang-format
feat: use run-clang-format in cc --fix mode
refactor: use same diff args as run-clang-format
ci: do not run verify-ffmpeg on Mac on CircleCI
ci: refactor Mac builds on CircleCI
chore: AFP info for general public (#14650)
build: with enable_extensions=false (#14657)
feat: add process.takeHeapSnapshot() / webContents.takeHeapSnapshot() (#14456)
ci: use smaller size machines for some Linux CI jobs
chore: dont pass --stable through to bump-version.py (#14661)
ci: add a FYI job to build Chromium test binaries
refactor: use one script to launch all linters (#14622)
ci: use CircleCI workspaces
fix: quit properly in simpleFullScreen mode (#14620)
chore: fix python lint warnings (#14638)
chore: replace standard with eslint-config-standard and add custom rules (#14636)
feat: add will-redirect (#13866)
chore: remove --version from "create-api-json" (#14634)
build: update electron patches (#14623)
chore: copy script/patch.py from the libcc repo (#14627)
tests: fix compilation of blink_unittests (#14574)
ci: Move Mac builds to Azure Devops (VSTS) (#14588)
spec: fix crashReporter upload assertions
spec: fix final node and chromium specs after assert change
ci: fix CI runs after 9e85bdb0
spec: fix headers tests to match APIs
spec: fix broken remote specs
spec: handle null prototypes in specs
refactor: s/resolverGetters/resolveGetters
spec: update 'BrowserWindow.fromBrowserView(browserView) returns undefined if not attached - returns undefined if not attached' to match docs (null not undefined)
spec: add helper to resolve property getters
build: move libcc patches to electron repo (#14104)
chore: update to standard 12
docs: prefer out/Debug to out/Default in build docs
chore: update package.json scripts for gn build and automated releases (#14612)
chore: dont install spec deps on sync needlessly (#14614)
fix: re-enable high-dpi support on windows (#14596)
chore: update request dep to remove warning about cryptiles (#14610)
chore: make the 'npm run test' command work out of the box (#14602)
chore: fix linting error on master (#14609)
feat: automatically round numbers that are converted to points (#14604)
chore: generate API definitions in the project root (#14578)
chore: update package-lock.json when bumping package.json (#14599)
feat: add mediaTypes to media permission requests
fix: update node ref to fix patch handling unhandled rejections (#14603)
chore: add debugger specs for multiple sessions (#14598)
fix: fix gn cpplint warnings (#14583)
chore: remove unneeded ssize_t hack
refactor: remove unused, duplicated code in deprecate module (#14579)
fix: Windows Background color issue (#14561)
feat: run 'cpplint -c' as a precommit hook (#14586)
chore: remove unsupported DISABLE_NACL define
fix: Invalidate weak ptrs before window Javascript object is destroyed (#14532)
chore: remove ELECTRON_GN_BUILD define
fix: cpplint didn't work in GN (#14581)
feat: add screen reader support to Win32 toast notifications (#13834)
ci: rename appveyor{-gn,}.yml
build: remove duplicate devtools sources (#14522)
ci: do not use scripts and binaries from the libcc repo
chore: make large beta numbers work when publishing (#14571)
chore: remove only on deprecations api spec (#14564)
docs: simplify git cache instructions (#14562)
docs: update instructions for building win32 target (#14560)
ci: set up a lint job (#14536)
 build: [m67] enable widevine support (#14519)
tests: ignore nulls and undefined in the "util.promisify" test
FIXME: tests: disable a "unhandledrejection" test of the remote module
build: guard widevine related code behind flag
ci: update Visual Studio version for AppVeyor
fix: force SharedArrayBuffer feature to be enabled (#14498)
fix: initialize tracing controller before starting platform (#14499)
inspector: stop dragging platform pointer
build: //service/viz mojo interfaces for osr
chore: fix a chromium-style error
fix: fix osr compilation on Windows
build: use default value of the enable_widevine flag
Update test targets paths for Blink
printing compiles on windows, but is explosively wrong
//printing/features/features.gni moved to buildflags.gni
Need new #include for base::UTF8ToUTF16
REVIEW: Delete WidgetDelegate before widget is destroyed.
Simplify EnsureProcessTerminated() implementations.
Include the node header at the end to avoid collisions
Handle case where IO thread is not yet running, in C67 this results in a hard crash
Handle unknown symbols for media:: method
SetUserAgentOverride now takes a 2nd override_for_new_tabs argument
media: Stop registering CDM adapter as a pepper plugin
Replace ProxyConfigSource with ProxyConfigWithAnnotation.
Implement GetPermissionStatusForFrame in AtomPermissionManager
[GURL] (1 of 2) Prep for stripping "username:password" from internal schemes
Handle external protocols with the network service.
Remove the memory property from getAppMetrics
Remove the 'getProcessMemoryInfo' API
Plumb the RenderFrameHost through for CheckMediaAccessPermission
Rename buildflag_headers for consistency
No longer save the IO message loop in net::EnsureNSSHttpIOInit
Replace ProxyConfigSource with ProxyConfigWithAnnotation.
Improve ClearOnExit behavior of cookies using domain matching
Introduce additional Certificate Transparency preferences
The Great Blink mv for source files, part 2.
Migrate BrowserThread::IsMessageLoopValid to BrowserThread::IsThreadInitialized.
Rename net/proxy_resolution/proxy_service* files
Use libcc based on Chromium 67.0.3396.99 and Node 10.6.0
fix: use render client id to track deleted render process hosts (#14520)
chore: refactor deprecation apis (#14495)
ci: fix path to dist.zip on appveyor (#14535)
chore: fix pylint errors
refactor: cleanup web-frame-init.js (#14516)
chore: address TODO for WebContents.prototype.setSize / reportRemovedAttribute removal (#14517)
chore: rename circleci builds to remove -gn and -fyi (#14531)
feat: add options to webContents.loadFile (#14515)
chore: fix cpplint.js when LINTER_PATH doesn't exist (#14537)
docs: add note about origin URLs to GN build docs (#14530)
docs: specify BrowserWindow features passable to window.open
chore: clean up asar stuff (#14505)
fix: read ignoreMenuShortcuts per WebContents
chore: remove app.makeSingleInstance / releaseSingleInstance (#14518)
docs: Update menu-item with new position props (#14465)
ci: pass GN_EXTRA_ARGS to the ffmpeg build
refactor: do not use electron.gyp contents in the verify-ffmpeg script
build: add a helper script to retreive data from a GN project
build: remove gyp build files (#14097)
Revert "fix: re-enable power monitor test (#14458)" (#14506)
refactor: clean up asar functionality (#14046)
chore: bump libcc (master) (#14492)
fix: re-enable power monitor test (#14458)
docs: expand on TODOs in BUILD.gn
fix: notify focus change right away rather not on next tick (#14453)
test: refactor the "util.promisify" test (#14491)
fix: manually manage WebContents of webview when it is detached
fix: add shell = True to make clang-format work on Windows (#14121)
fix: macOS Window Title And Accessibility Focus (#14472)
chore: bump libcc (master) (#14473)
fix: don't use deprecated fstatNoException API (#14463)
chore: enable debugger api specs (#14475)
chore: add removeFunction to deprecate module (#14468)
refactor: port the cpplint runner to javascript (#14440)
chore: bump libcc (master) (#14466)
build: [gn] widevine cdm support behind flag (#14423)
chore: refactor webContents module isCurrentlyAudible api spec (#14410)
Bump v4.0.0-nightly.20180905
fix: Windows Store Notifications (#13258)
Update first-app.md (#14455)
chore: bump libcc (master) (#14442)
feat: allow some features during beta (#14215)
chore: pass tag correctly for bump commit reversion (#14444)
refactor: use loadFile when appropriate in tests (#14422)
feat: Remove legacy helpers (Electron Helper EH/NP) (#14436)
docs: add missing documentation for <webview> methods (#14413)
fix: webview.focus() should move page focus to webview (#14427)
refactor: replace base::Value::DeepCopy and CreateDeepCopy with Clone (#14420)
docs: Add Electron Fiddle to the readme (#14396)
feat: add event.senderId property to IPCs sent via ipcRenderer.sendTo (#14395)
feat: allow window above full screen windows on mac (#14122)
chore: bump libcc (master) (#14406)
fix: use flexbox to style webview (#14400)
test: update power/notification specs to expect (#13497)
docs: add notes on OOPIF webview's behaviors (#14401)
chore: refactor context isolation spec (#14394)
refactor: don't expose CallbacksRegistry as an internal module (#14389)
build: [gn] explicitly override rtc_use_h264 (#14378)
Revert "Bump v4.0.0-nightly.20180830"
Bump v4.0.0-nightly.20180830
fix: allow Tray with title only (without icon) on Mac (#13851)
Revert "sec: deprecate some webPreference defaults to be secure-by-default (#14284)" (#14380)
sec: deprecate some webPreference defaults to be secure-by-default (#14284)
chore: add release-artifact-cleanup script (#14250)
feat: Add electron version to framework (#14296)
fix: doc recipe for debug build (#14355)
build: add enable_pepper_flash flag to GN build (#14349)
docs: keyboard listeners no longer work on webview (#14369)
 fix: emit focus/blur events for webview (#14344)
fix: use OS process handle to clear object registry (#14324)
build: add missing enable_view_api flag (#14351)
fix: crash when tray is destroyed (#14347)
chore: bump libcc (master) (#14353)
feat: add session.setPermissionCheckHandler (#13925)
feat: 'will-move' event for windows.  (#14283)
refactor: move common logic to handleRemoteCommand
fix: don't expose desktopCapturer in sandboxed renderers if the feature is disabled (#14310)
fix: dont parse arguments after a -- in the inspector (#14297)
chore: bump libcc (master) (#14317)
fix: don't crash on tray.setContextMenu(null) (#14322)
build: windows gn linker fix (#14281)
tests: disable "app moduele > app.exit(exitCode) > closes all windows"
fix: don't expose view APIs when not enabled (#14312)
tests: refactor "app module" tests
docs: explain "worldId" in the web frame docs (#14309)
refactor: use std::string instead of base::string16 for IPC channel names (ipcRenderer.sendTo) (#14302)
feat: BrowserWindow.getNormalBounds() (#13290)
docs: Developer instructions for native Node addons (#13121)
refactor: properly report on skipped native modules tests (#13894)
fix: Brought win speechSynthesis up-to-speed (#14070)
refactor: implement ipcRenderer.sendTo in native code for better performance (#14285)
refactor: use std::string instead of base::string16 for IPC channel names (#14286)
ci:Split out appveyor gn builds into separate jobs (#14282)
Bump v4.0.0-nightly.20180823
fix: opt into location services once device service has been started (#14253)
fix: add method and referrer properties to app login event (#14231)
fix: do not bubble up resize event from webview (#14271)
chore: print error when removed webview attribute is used (#14230)
chore: bump libcc (master) (#14263)
build: [gn] fix node header generation target in appveyor (#14218)
fix: inheritance of webPreferences sub properties
build: build ffmpeg and native_mksnapshot for GN release builds (#14240)
chore: ask for specific info in bug templates (#14229)
Bump v4.0.0-nightly.20180821
chore: retry for the meta dumper a few times (#14241)
Revert "Bump v4.0.0-nightly.20180821"
build: use electron-frameworks sccache (#14171)
Bump v4.0.0-nightly.20180821
Revert "Bump v4.0.0-nightly.20180821"
ci: add better logging around request failures for releasing (#14239)
Bump v4.0.0-nightly.20180821
feat: expose missing process APIs in sandboxed renderers (#13505)
build: [gn] add distributable zip target (#14093)
refactor: move SpecialStoragePolicy from brightray to atom (#13944)
build: [gn mac] copy ffmpeg lib to framework bundle (#14225)
chore: remove autorelease check logic (#14220)
fix: enable osr (#14074)
chore: bump libcc (master) (#14214)
chore: add option to return next version from prepare-release (#14212)
fix: create persistent channel ID store when cookie store is persistent
chore: match the bump commit exactly, reverts should not count (#14207)
fix: Dialog does not close on ESCAPE if defaultId is set (#14196)
chore: update libcc ref to include osr patch (#14201)
docs: chrome-command-line-switches.md: update proxy-server support (#14198)
fix: electron path for postinstall (#14177)
Bump v4.0.0-nightly.20180819
chore: only prepare release if last commit not a bump (#14192)
chore: always target master for nightly releases (#14190)
fix: add dist tags for release branches (#14186)
Bump v4.0.0-nightly.20180817
Revert "Bump v4.0.0-nightly.20180817"
chore: dont check version when publishing (#14183)
Bump v4.0.0-nightly.20180817
Revert "Bump v4.0.0-nightly.20180817"
chore: remove v from script :sigh: (#14181)
build: add Chromium tests targets (#14172)
correctly get pre (#14179)
Bump v4.0.0-nightly.20180817
fix: update_electron_gyp regex for nightlies
Revert "Bump v4.0.0-nightly.20180817"
fix: Stricter Testing For Menu Items (#13992)
Bump v4.0.0-nightly.20180817
chore: make beta bumps work (#14174)
chore: use --bump for all releases
chore: allow nightlies from release branches (#14157)
chore: update serve version 6.5.3 -> 6.5.8 (#14159)
build: use GIT_CACHE_PATH (#14165)
chore: use metadumper service to create index.json file (#14158)
chore: fix npm nightly dist-tag (#14155)
chore: support otp (#14154)
 build: gn: commit patches after they have been applied (#14147)
build: add config to build Electron for tests (#14101)
don't update index.json in release (#14151)
fix: use OOPIF for webview tag (#13869)
chore: update node revision
chore: remove duplicate setting
chore: promote 'is_jumbo_build=true' to all.gn
chore: add flag to skip version check (#14145)
fix: remove arm build validation from release script (#14143)
chore: alphabetize config list
chore: enable jumbo builds in GN release configuration
Bump v4.0.0-nightly.20180816
chore: 0.0.0-dev
docs: fix electron.d.ts typings (#14125)
chore: fix linting (#14135)
Bump v4.0.0-nightly.20180816
build: replace nightly and dev versions in the release script (#14134)
build: nightly is nightly, beta is beta (#14133)
docs: crashReporter companyName is not optional
Bump v4.0.0-nightly.20180816
build: use targetRepo in prepare-release (#14131)
Bump v4.0.0-nightly.20180816
chore: introduce concept of nightly builds to release scripts (#14130)
Add arm/arm64 gn builds
chore: add FIXME for remote deref (#14116)
chore: update PR template for new notes bot (#14103)
fix: add a hidden option to disable remote dereferencing (#14102)
ci: [vsts] build the PR branch
fix: notify request context shutdown on IO before cleanup (#14058)
ci: [win] simplify call to electron.exe in appveyor
Update DEPS
Use VS2017 15.4.5 for Chromium 66
chore: bump libcc (#14071)
Revert "[WIP] refactor: (Part I) make the ownership of URLRequestContextGetter more clear  (#13956)"
[WIP] refactor: (Part I) make the ownership of URLRequestContextGetter more clear  (#13956)
fix: lint js and docs alongside clang-format (#14044)
feat: On macOS, Closing Notifications Triggers the 'close' Event (#13306)
fix: re-enable mixed-sandbox tests
refactor: add 'npm run bootstrap', 'npm run build' (#14034)
fix: override fs.realpathSync.native and fs.realpath.native (#14031)
fix: make asarStatsToFsStats nherit from fs.stats (#14030)
ci: [gn] build 32-bit node modules on 32-bit linux (#14021)
docs: update GN developer docs (#14018)
ci: build x86 builds on GN in appveyor (#14019)
Don't pass preloadPath via ELECTRON_BROWSER_SANDBOX_LOAD for security reasons (#13031)
[wip] build: try building node with GN
feat: Add creationTime function to process (#13542)
docs: cancelId works on windows (#13882)
chore: add a Mac App Store Private API Rejection template (#14009)
core: add security report issue template (#14010)
spec: re-enable app.getAppMetric API (#13962)
refactor: make methods const, cleanup (#13937)
fix: ipcRemote.sendSync regression after moving away from JSON for return values (#13941)
fix: make menu.popup options optional (#13977)
chore: roll libcc
feat: add location url to "Node.js Integration with Remote Content" warning (#13973)
chore: disable flaky isCurrentlyAudible test (#13970)
docs: min windows server version for building is 2012 (#13935)
docs: recommend windows 10 as the minimum build OS
refactor: remove instances of createDeepCopy (#13703)
chore: roll libcc and node DEPS (#13931)
fix: add missing "simple" property in several APIs to prevent proxying of return values (#13905)
docs: [gn] update build instructions
ci: [gn] add builders for 32-bit linux
fix: dipToScreenRect / screenToDipRect - window can be null (#13903)
chore: roll libcc DEPS (#13917)
fix: Improve --enable-features/--disable-features handling (#13920)
docs: update node upgrade doc (#13891)
test: make nativeImage relative path test robust to different cwd
Try setting npm_config_msvs_version
Add env var to skip native module tests
ci: start the dbus mock server in GN CI
refactor: use env var to skip native module tests on win32/debug (#13890)
spec: add more assertions to help smoke out the close all window failures (#13868)
fix: some APIs modified for ASAR support cannot be util.promisify'ed (#13845)
test out build matrix for debug/release
ci: [gn] add ci build for gn on windows
fix: handle SIGINT and SIGTERM from the Electron CLI helper (#13867)
:memo: Update security docs: will-navigate, new-window (#13884)
ci: gn linux release builds (#13809)
chore: [gn] run 'gn format' over BUILD.gn
chore: [gn] run 'gn format' over build/node/BUILD.gn
ci: more lenient check for is_ci in lib.util.download
build: [gn] fix rpath when building with component ffmpeg (#13874)
build: [gn] add //ui/strings:app_locale_settings to locale pak
build: [gn] build release with is_cfi = false
feat: allow setting window shape (#13789)
[wip] ci: add Mac support to VSTS build
build: commit changes to the package-lock.json file (#13864)
docs: warning unicity of webRequest event listener (#13482)
fix: window.setVibrancy parameter passing (#13627)
chore(tests): allow usage of deprecated APIs in tests (#13659)
:memo: First draft: Here be dragons (#13835)
fix: util.promisify(setTimeout) (#13840)
docs: fix electron.d.ts typings (#13841)
build: [gn win] fix path names in js2asar
build: [gn] pack ui_strings in locales (#13827)
build: [gn] fix resource path conflict on mac (#13824)
feat: add getUploadProgress API to the net API (#13783)
feat: Add will-resize event to TopLevelWindow (#13649)
chore: remove unused process_type variable (#13823)
build: [gn] fix linking against base_static (#13810)
build: Bump libcc to latest (#13821)
Grammar fix in application-architecture.md (#13798)
fix: pass scrollBounce by command line flag (#13812)
fix: check string encoding before creating value (#13815)
build: [gn] win and linux depend on :packed_resources
build: [gn] centralize GN args under build/args/*.gn
build: [gn win] fix webrtc link error in component build
build: [gn] include node_modules in default_app asar
build: [gn] roll node DEPS
pr: Update docs
feat: Add BrowserWindow.setWindowButtonVisibility()
fix: Use --enable-features and --disable-features
build: Bump libcc to latest
docs: update an estimate of how much we are behind Chromium
build: [gn] link dwmapi in component build (#13773)
docs: clarify default auto-updater installation behavior (#12783)
build: [gn] simplify resource pak build
chore: [tests] update some BrowserWindow tests
fix: use webContentsId with contextId together (#13749)
build: [gn win] fix dllimport usage in node's usage of icu
refactor: remove private webContents.getId() API (#13674)
spec: suppress mixed-sandbox test in Windows CI (#13769)
fix: create WebContents for webview on request (#13713)
build: stop defining is_mas_build (#13742)
Update DEPS
build: [gn win] fix webrtc link error
Use actual binary instead of python wrapper
Add sccache
build: [ci] add GN linux CI build
docs: Improved documentation (#13403)
build: [gn] working on 32bit windows
build: [gn] reorganize :electron_lib target
build: stop defining is_mas_build
build: make nightly filenames more guessable with YMD format
build: do not load dotenv on CI
build: enable v8 checks in debug mode
fix: use context counter as contextId
fix: update for node 10
build: [gn] add target for building node headers
build: disable `found-in-page event` test
Update docs on semantic requirements for #13359 (#13365)
build: [gn] move native_mate build config to native_mate dir (#13706)
chore: [gn] roll libcc DEPS
add semantic prefixes from docs
clean up release notes script
new release notes generator
feat: support chrome:// URLs in default_app (#13575)
build: handle win32 path separator in js2asar (#13694)
fix: create a window capturer correctly (#13689)
fix: remove race condition for executeJavaScript (#13691)
build: [gn] use libnotify from custom sysroot
refactor: clean up the default app, add CSP (#13437)
Make sure artifacts are properly saved for nightly release builds
refactor: remove experimentalCanvasFeatures property (#13684)
chore: Don't show download stats of libchromiumcontent for CI. (#13681)
chore: roll libcc DEPS
docs: update second-instance event docs (#13656)
spec: openDevTools should not crash for frameless window
fix: use InspectableWebContentsView as content view
docs: remove known issues from mac app store submission guide
build: [gn win] link comctl32.lib to fix component build
Update Windows VS2017 requirement (#13663)
Add post-publish 'npm dist-tag ls electron' step
document ELECTRON_S3_ tokens
add note about multiple calls to validateRelease
fix VSTS token generation URL
docs: using chrome://flash to get the flash path
fix: don't invoke callback after FrameSubscriber is destroyed (#13657)
fix: add native function to create preload script (#13032)
refactor: SHOpenFolderAndSelectItems does not have to be dynamically resolved
refactor: DwmGetColorizationColor does not have to be dynamically resolved
chore: Updates for release process (#13632)
feat: Add isCurrentlyAudible() to WebContents (#13614)
Using current master of libcc to include recent patches
fix double-freeing remote references
add API to return an unique ID for page
build: [gn linux] link static libs for node release build
build: [gn] define WIN32_LEAN_AND_MEAN in the node build
build: [gn] build node with clang-cl
remove asserts that were obviated by dotenv
clarify purpose of .env.example
build: [gn] link child as well as browser in electron_lib
update tokens portion of releasing docs
load .env in various release scripts
add .env.example
build: [gn] fix include_dirs ordering error
build: [gn mac] only link libnode.dylib in component build
build: [gn] fix dllimport warnings
build: [gn] node as a static lib
chore: roll libcc DEPS
fix: enable spell checking, which broke in upgrade to ch66
chore: [gn] support MAS build
fix: remember the render_process_id when permission requests occur on the IO thread (#13621)
address feedback
build: [gn] depend on /gtk instead of /gtk3
build: [gn] move crashpad to mac-only
build: [gn] use clang and custom stdlib when building node on linux
build: [gn] use platform-appropriate shlib_suffix when building node
build: [gn] use consistent node configuration between gyp and build
chore: replace _ASSERT with DCHECK in toast.cc (#13598)
Move github release checking to node.js
Update to run new AppVeyor jobs
test: Better path compare than just strings (#13548)
fix: fallback to FullSizeContentView for frameless window on mac (#13599)
chore: breakpad #include compatibility between GN and GYP
Update to latest libchromiumcontent (#13594)
feat: ability to apply patch to clang-format errors (#13576)
chore: [gn] fix CSP warning in debugger API test (#13541)
Add/update slack notifications
spec: disable the i18nString test
spec: enable back devtools tests
fix: update devtools url
add stubs for new devtools messages
implement devtools showItemInFolder message
run test.py with --rebuild_native_modules (#13570)
Actually try building on Windows.
Ensure DirectX capturer is supported.
fix: update libcc to fix private APIs in mas build (#13529)
Enable webview in sandbox renderer (#13435)
spec: convert menu specs to expect (#13485)
fix: tray setContextMenu crash (#13513)
chore: fix chromium-style errors in native_mate
chore: [gn] use merged-in native_mate
chore: [gn] roll libcc & node deps (#13508)
chore: [gn] remove now-meaningless skia-related #defines (#13496)
Removed WTL include folder
fix the crash when loading site with jquery (#13475)
spec: convert smaller specs to expect
chore: [gn] add electron_app target for windows (#13491)
chore: [gn] link against debug node when in debug mode (#13490)
chore: use full path for ui_unscaled_resources.h (#13492)
chore: [gn] copy node.dll in addition to node.dll.lib (#13489)
chore: [gn] fix link errors relating to static members (#13488)
chore: fix more chromium-style errors in windows code (#13487)
refactor: remove deprecated GetAs methods (#13425)
test: temporarily disable failing specs (#13470)
docs: add link to Chromium windows debugging docs
refactor: add promise helper and change whenReady to be native impl (#13115)
fix: inline vector allocation (#13449)
Link gdi from gyp
Using win32 file open dialogs instead of WTL
docs: add native_mate to source code directory structure doc (#13451)
fix: deprecate properties in app.getAppMetrics() (#13446)
refactor: rpc-server.js cleanup (#13420)
fix: do not expose Node's external strings (#13438)
refactor: remove deprecated CreateWithCopiedBuffer (#13436)
chore: [gn] changes to BUILD.gn for windows (#13434)
chore: [gn] fix WTL include paths and namespace include (#13433)
chore: [gn] correct library paths for node on windows (#13429)
spec: rewrite and enable a webview's disableguestresize attr test (#13428)
chore: [gn] remove vendor/ from windows include paths (#13432)
chore: [gn] only define WIN32_LEAN_AND_MEAN if not already defined (#13430)
chore: fix some more warnings in windows build (#13431)
chore: fix various chromium-style errors in windows (#13394)
fix: repair fs.statSyncNoException throwing exceptions (#13390)
fix linting
rename back to expected values
move native_mate script to the electron scripts dir
update paths for native_mate
remove native_mate submodule
prepare for merging to electron
chore: fix chromium-style errors in windows code
chore: [gn] fix DEPS to work on windows
Update build-instructions-windows.md
chore: update GN build for chrome 66
update libcc ref
chore: [gn] remove gclient hook for node config.gypi (#13354)
spec: refactor helper closeWindow() function (#13337)
spec: enable a disabled test (#13346)
build: move pepper flash behind feature flag
chore: Annotate fallthrough switch paths with FALLTHROUGH
chore: fix chromium-style errors in frame_subscriber
chore: Roll DEPS for chrome 66 in GN build
Revert "Drop support of Mac OS 10.9" (#13348)
Revert "fix: Drop support for OS X Mavericks (version 10.9)" (#13333)
fix: link with crashpad_client for MAS build
test: Upgrade spec dependencies (#13310)
fix linting in the tls script'
fix: tls check shouldnt rely on an external service
set mac protocol to none (#13302)
Disable node options in node config (#13311)
src: base::Value::HasKey(key) => base::Value::FindKey(key) (#13312)
doc: add CSP examples (#13167)
revert: frame subscriber deprecation and re-enable tests
spec: fix asar spec due to change in node.js
fix: can't load module error when app is packaged
Update vendor/libchromiumcontent ref
fix: Drop support for OS X Mavericks (version 10.9)
refactor: [gn] compile node with boringssl (#13285)
fix: pass down the bool value of enableAutoSize to setSize (#13282)
Add Sentry.io to 3rd party hosted solution list for crash reports (#13281)
refactor: fix chromium-style in url_request_asar_job (#13284)
chore: [gn] add desktop capturer sources to GN build (#13286)
docs: add note about how to remove a previously set aspect ratio (#13293)
spec: convert deprecations to expect (#13268)
spec: convert ipc specs to expect (#13273)
Mark browser window affinity as experimental
spec: slightly rewrite webview tests
spec: add helper functions for async/await tests
use std::make_unique<T>
Link to the desktop_capture libs
Bump libcc for desktop capturer fix
Update libcc
Remove removed variable popup_bounds_in_view_
Add missing network:: for net log switches
Remove stray .only
re-enable desktop capturer
mark worker thread taskrunner as WithBaseSyncPrimitives
post all desktop capturer apis to worker threads
Update vendor/libchromiumcontent ref
Disable a test
Disable a test
Rewrite and enable one of the webview tests
Enable a test
Enable Desktop Capturer tests
Enable a few tests
FIXME: getAppMetrics fails on windows CI
powerMontor crashes linux ia32, re-disable
Re-enable cookie specs and add custom cookie name/url validation
Enable power monitor test for linux
Enable process resource test
Enable childprocess.fork asar specs, fixed during run_as_node fixes
re-enable native module tests
Bump node to fix native module rebuilding
Default LoadV8Snapshot changed in C66
Re-enable node fork specs
FIXME: Disable powerMonitor tests
Bump node vendor to remove openssl compile warning
FIXME: Disable Desktop Capturer
FIXME: Disable some of the focus related tests
Skip one of the "chromium feature" tests
Skip crashReported tests on linux
Drop support of Mac OS 10.9
Update vendor/libchromiumcontent ref
Use Node.js 10 for CI builds
Update vendor/libchromiumcontent ref
Disable all failing tests
Update vendor/libchromiumcontent ref
Update vendor/node ref
Add gfx:PointF support to mate::Converter
Check embedder_message_dispatcher_ before sending a message
Update vendor/libchromiumcontent ref
Update vendor/node ref
FIXME: Disable "node feature child_process.fork" tests
FIXME: Disable "node feature inspector" tests
FIXME: Disable "ses.cookies calls back with an error when setting a cookie with missing required fields" test
FIXME: Disable a couple of "debugger module debugger.sendCommand" tests
FIXME: Disable "BrowserWindow module extensions and dev tools extensions works when used with partitions" test
FIXME: Disable "BrowserWindow module beginFrameSubscription method" tests
Update the vendor/libchromiumcontent ref
Use /guard:cf during both compile and link parts of the build on Windows
Use Chromium 66.0.3359.181 and Node.js 10.2.0
Update OSR code
FIXME: comment out ppapi code that blocks compilation
Re-add dirtyOnly to FrameSubscriber and document API change
Update FrameSubscriber implementation
FIXME: Disable one of the <webview> tag tests.
Enable a few tests
Rename LocalSurfaceIdAllocator
Update vendor/libchromiumcontent ref
Update link lib in brightray
Use vs2017 only vm for CI
Update vendor/node ref
FIXME: Disable some of <webview> tag tests
FIXME: Disable a couple of webContents module tests
FIXME: Disable "asar package child_process.fork" tests
FIXME: Disable desktopCapturer tests
Use libpdfium_skia_shared.a
Update vendor/libchromiumcontent ref
Update vendor/node ref
Set llvm_version to "7.0"
Update vendor/libchromiumcontent ref
Use Node 10.0.0
Correct windows header order
chrome style plugin: remove check-auto-raw-pointer option
Update libcc and replace snapshot_blob.bin by v8_context_snapshot.bin
Link against device_service and viz_service libs
Update vendor/libchromiumcontent ref
Add ForceFeedback to the frameworks list on Mac
Set CHROME_VERSION_STRING to 66.0.3359.117
Update vendor/libchromiumcontent ref
More pdf printing fixes for Windows
Proper dpi parameter type for PdfRenderSettings
Add missing header
Rename ScopedWindowsThreadEnvironment::succeeded() to Succeeded()
Include missing "windows.h" and fix headers ordering
Use an int for wm::ShadowElevation. Pick semantic constants.
Remove deprecated View::SetLayoutManager
Remove ScopedComPtr and scoped_comptr.h
Wrap X11 headers in ui/gfx/x/x11.h
Update vendor/libchromiumcontent ref
Update vendor/node ref
Reimplement FrameSubscriber with mojo VideoCapture APIs
Add "-fno-exceptions" to "cflags_cc" on linux
Update chrome_version.h
Update libcc ref
Remove deps on libcommon.a and libjavascript.a
PepperFlashRendererHost to use SkFontStyle.
Move HTTPBad flags into SSLStatus user data
Convert base::UInt64ToString to base::NumberToString
Printing: Remove PrintedPage on non-Windows
Update vendor/node ref
Use native-mate from the Ch66 branch
Update libcc ref
Permissions: Remove CONTENT_SETTINGS_TYPE_PUSH_MESSAGING
Define gfx::AcceleratedWidget to be uint64_t instead of NSView*
Create network_converter for services/network/* types
Remove OSCertHandle typedefs, use smart pointers for CRYPTO_BUFFER ownership.
Check for key system support using new mojo service KeySystemSupport
REVIEW: Don't use removed and deprecated Value::To* APIs
Remove obsolete ShouldHandleSystemCommands function.
v8: set fatal error handler per isolate
REVIEW: Use RenderWidgetHost api for event routing
Remove unused elements from RWHV::CopyFromSurface() API and dead code.
Surface synchronization: Implement auto-resize for OOPIF/BrowserPlugin
gin: Make gin/ remember external reference table
Change calls to GeolocationProvider::UserDidOptIntoLocationServices() to occur via Mojo.
Remove invalid include headers
NetworkService: Implement URLLoader::OnAuthRequired
NetworkService: Implement URLLoader::OnCertificateRequested
Simplify ShouldInterceptResourceAsStream to remove unneeded code path.
Make reading blobs work through Blob mojo interface.
Give the JS dialog manager the alerting frame.
Make Origin(const GURL&) constructor private.
Move DownloadUrlParameters from content/public to components/download
Include missing header
Remove did-get-response-details and did-get-redirect-request events
Bump libcc to get builds
Add MediaStoppedReason to WCO
OOPIF-ize hung renderers
Convert ax_enums.idl to mojom.
Revert "Revert "Add support for OOPIF printing in renderer""
Feature Policy Onion Soup (1)
DevTools: remove the 'forced' attribute from the AgentHostClosed in DevToolsAgentHost.
Rename buildflag_header targets in base for consistency
Move resource_response.h to //services/network/public/cpp.
ui::Display cleanup: some enums --> enum classes
Add missing header
FIXME: Disable OSR
Update AtomBrowserClient::RenderProcessWillLaunch api
Remove SetCookieWithDetailsAsync API in favor of SetCanonicalCookieAsync.
Remove old cookie enum values
Remove base::Value::GetType()
Remove redundant device::PowerSaveBlocker enums.
Move ResourceRequestBody to services/network in preparation of moving content/network.
Remove AtomAccessTokenStore
update native-mate ref
[desktop capture] remove dependencies on webrtc/desktop_capture from /chrome
Remove content/linux_sandbox dependence on content_switches.h
move DownloadInterruptReasons from content/ to components/download
move some files from content/public/browser to components/download/public/core
Move download_item.h from content/public to components/download
Remove base::Value::IsType
Update the vendor/node reference
Use latest libcc with Ch66
Move away from BrowserThread::FILE
Clean up net::HttpAuthPreferences.
Remove base::SizeTToString
Implement SpecialStoragePolicy::ShouldDeleteCookieOnExit
[DevTools] Make Inspect Element work for OOPIF
REVIEW: Remove the notification close-closure in favour of an explicit method
Update NetworkDelegate
Cookie Store: Extract change notifications to separate classes.
Move content/network to services/network.
Move throttling to network service
Remove CancelRequest for PermissionManager
Remove Permission manager from brightray
Convert ColorChooser from ipc to mojo.
DevTools: remove the 'forced' attribute from the AgentHostClosed in DevToolsAgentHost.
Devtools: Remove session_id in browser
Update devtools_file_system_indexer
Use latest libcc with Ch66
Rename ProxyService class to ProxyResolutionService
Adds ability for BrowserMainParts::PreEarlyInitialization() to fail
Update Chrome version
Use latest libcc with Ch66
DevTools: move remote debugging hosted URL to single location.
Use the same GOOGLE_PROTOBUF_* defines for "brightray" as for Electron
ResourceBundle → ui::ResourceBundle
Move net/proxy to net/proxy_resolution
Add ".../third_party/protobuf/src" to the include_dirs list
Use latest libcc with Ch66
Update crashpad ref
Update Clang revision for Chromium 66
Set CHROME_VERSION_STRING to 66.0.3359.66
Use latest libcc with Chromium 66.0.3359.66
Use the same Crashpad as Chromium 66.0.3359.66
Change node ref
Bump chromium version
Bump libcc
feat: netLog API for dynamic logging control (#13068)
docs: update pr template with checklist (#13270)
spec: convert IAP and GC specs to expect (#13272)
address review feedback
feedback from review
spec: convert dialog spec to expect (#13271)
load all pak files on macOS
feat: add SetText for TextField
feat: add LabelButton API
feat: add Button API
feat: add TextField API
exit HTML fullscreen when window leaves fullscreen (#13090)
refactoring: use std::make_unique<T> (#13245)
spec: convert desktop capturer to expect
spec: update browser-view spec to expect (#13238)
remove assert require
spec: update browser-window-affinity spec to expect (#13239)
spec: convert debugger spec to expect
spec: update callback registry spec to expect (#13263)
spec: convert clipboard spec to use expect (#13266)
spec: update auto-updater spec to expect (#13237)
fix: tray title not inverting when highlighted (#13085)
docs: update remote.md (#13229)
docs: fix broken link to commit message guidelines (#13233)
:memo: Make appUserModelId requirement clearer (#13259)
Add FILE_DIALOG_TREAT_PACKAGE_APP_AS_DIRECTORY to web open file dialog (#13220)
change c++ std from gnu++14 to c++14 (#13248)
spec: update app spec to assert (#13155)
Add slack notifications
Run tests on release builds
spec: better texts for the Crash Reporter tests (#13227)
Add "enable_desktop_capturer" build flag (#13133)
perf: don't use JSON to send the result of `ipcRenderer.sendSync`. (#8953)
Doc: Delete unnecessary require and update flag name
chore: add space in log
Add process.getHeapStatistics() (#13183)
Doc: Update bluetooth example
fix: tray icon bounds didn't allow negative macOS (#13162)
clarify docs
Slightly rewrite <webview> tag tests (#13122)
Build node by calling ./configure
Update copy_vcruntime_binaries for VS2017
Roll libchromiumcontent (#13105)
remove deprecated signature tests
update signature for setCertificateVerifyProc in session spec
fix: remove unused variable
feat: warn if deprecated property is already set
test: add tests for deprecate.property()
feat: re-add deprecate.property()
docs: copyediting of breaking-changes.md
Modify 2.0 section's phrasing to use past tense
Re-add missing section
docs: re-document the 2.0 breaking API changes
Reorder the version sections newest-to-oldest
Make FIXME and API Contract their own H1 sections
docs: tweak phrasing
docs: add breaking-changes to README
docs: move breaking-changes to api
docs: fix a typo in remote.md (#13084)
fix tls script path in documentation (#13089)
chore: move more constants to options_switches.h/cc (#13093)
updated path to widevine libraries on windows (#13063)
docs: Simplify loading of html in example (#13013)
fix options switch for kBlinkFeatures
fix missing instance of kBlinkFeatures => kEnableBlinkFeatures
remove atom_api_screen_mac from filenames.gypi
docs: deprecate UploadFileSystem (#13064)
update electron-typescript-definitions to 1.3.5
Do not capture cookies and credentials (#13065)
docs: fix wrapping of welcome comment
fix: Update broken dock link in app doc
docs: dev instructions for GN build
add proper support for typed arrays in remote (#13055)
Put View APIs under a build flag
Add View.addChildView API
Add LayoutManager/BoxLayout APIs
Update upload symbols script for posix
address changes from review
rename blinkFeatures to enableBlinkFeatures
rename exposed session method to setCertificateVerifyProc
remove ses.setCertificateVerifyProc() deprecation
remove nativeImage.createFromBuffer() deprecation
remove webFrame.registerURLSchemeAsSecure() deprecation
remove webContents.openDevTools() deprecation
remove appcommand media-play_pause option deprecation
remove tray.setHighlightMode() deprecation
remove screen.getMenuBarHeight() deprecation
remove crashReporter deprecation
remove clipboard deprecations
Updated CI configs for nightly builds Add timestamp to s3 uploads
Remove command line argument black-list (#13039)
Refactoring: use C++11 class member variable initialization
Add a tag to libchromiumcontent when a release is created. (#12977)
Refactor sandbox preload initialization. (#12877)
WebContents may be managed by multiple owners
add tests for View and WebContentsView
clear pointer when WebContents is closed
prevent double-adding a WebContents to view
destruct objects in stack order
destroy WebContents when view is destroyed
Correct app-command name of APPCOMMAND_MEDIA_PLAY_PAUSE (#12408)
update mac symbol dump (#12982)
replace isEventEmitter with instanceof EventEmitter (rpc-server) (#12998)
Only expand maximum size constraint if there was a constraint originally (#13003)
fix: Menu.setApplicationMenu(null) crash on Linux (#12983)
Bump vendor/native_mate
docs: Document missing quit events during shutdown (#12986)
feat: upgrade electron-download to 4.x
Don't upload aliased arm builds anymore
detect EventEmitter in removeRemoteListenersAndLogWarning (#12975)
fix release build on arm
don't use native_mate/compat.h macros (#12984)
Remove native_mate/compat.h
update locale documentation (#12967)
fix docs formatting for ts defs (#12968)
docs: Document Python TLS requirements (#12276)
refactor: GN builds on linux (#12957)
refactor: chromium-style warnings in linux code (#12949)
feat: DIP <-> screen coordinate conversions (#12879)
refactor: remove unnecessary std::moves in linux code (#12951)
fix: unused variable warnings in linux code (#12950)
refactor: breakpad #includes to work with GN and GYP (#12953)
fix: wrong list index type in file_dialog_gtk.cc (#12952)
[gn] Include node/common.gypi when building node
Remove unnecessary heap allocations of atom::V8ValueConverter instances (#12924)
give window a default content view
check content view in SetMenuBarVisibility
feat: add TopLevelWindow.setContentView API
refactor: do not pass WebContents to NativeWindow
attach native view after widget is created
feat: add WebContentsView API
feat: add View API
Refactor <webview> tag tests (#12886)
Release updates in prep for 3-0-x releases (#12916)
Add package-lock.json
Update some tests (#12917)
Update vendor/libchromiumcontent ref
Update installation instructions
fix: more scalable code by factorizing appindicator support
#else instead of #elif
Only include windows headers on windows
Format code with clang-format
Match chromium's workaround when setting size of unresizable windows
fix: update docs for the ts parser (#12902)
remove accidentally-commited changes
Reinstate docs for app.makeSingleInstance()
Make Referrer.policy types parseable by e-t-d
Consistent docs for LoadURLOptions.httpReferrer
add fs-extra devDependency to spec
Remove chai-as-promised from the top-level package.json
build: don't ship pdf_viewer_resources.pak when feature flag is disabled
clang-format atom_api_web_contents.cc
Require !OS_MACOSX as well as TOOLKIT_VIEWS for views code
Add GN build
Don't declare IsDesktopEnvironmentUnity on non-Linux
Remove references to no longer used https://mac-ci.electronjs.org
add app.isPackaged (#12656)
Remove more words (#12852)
fix: listeners out of limit warning (#12841)
Update issue templates (#12848)
remove some beginner-unfriendly terms from docs
feat: new makeSingleInstance API (#12782)
Support multiple inherited ubuntu session for indicators
Add menu item order control (#12362)
Send document-start/end to the right context when contextIsolation=true (#12738)
Revert "Update issue templates (#12833)"
Update issue templates (#12833)
Expose events (EventEmitter) to sandboxed renderer (#12828)
don't filter out invisible menu separators (#12825)
chromium-style fixes (#12826)
viewDidMoveToSuperview may not be implemented
report correct content size in AtomNSWindow
remove usage of FullSizeContentView
display WebContents as views::View on macOS
refactor: setup contentView on initialization
update docs for getIgnoreDoubleClickEvents method
add getter for ignoreDoubleClickEvents field
clean up ignore double click event implementation
fixed typo found in code review
updated Tray API docs to include new setIgnoreDoubleClickEvents method
updated Tray API to ignore double click events on macOS (#8952)
docs: fix the type information in in-app-purchase
Better OSR tests (#12817)
fix: lint is a devDependency, not a dependency (#12818)
update command-line backlist switches
summarize semantic commit requirements (#12665)
explain platform differences in code signing
more code signing docs
add code signing tutorial (#12767)
Remove text about ia32 emulator
Tweak ARM support with suggestion from jkleinsc
Clarify the text on Windows for ARM support
Add placeholder for supported-platforms.md
Use correct Slack channel name
make security-warnings tests more robust (#12757)
add did-frame-navigate event to WebContents (#12723)
refactor: NativeWindowViews should not be a View (#12750)
fix flaky security-warnings test (#12749)
Finish consolidating the finding-support section
Copyedit the 'finding support' section
Link issues.md back to support.md
add 'finding support' section
copyediting
add end-of-support policy
Screen Lock / Unlock events (#12714)
Add sccache option to bootstrap (#12582)
Add missing chai-as-promised dep (#12746)
remove unnecessary defines
remove unnecessary static_cast
refactor: manage widget_ in NativeWindow
refactor: Use widget() instead of window_
refactor: Make NativeWindow inherit WidgetDelegate
fix patch output filename (#12742)
document update.electronjs.org in updates tutorial
Add clang-format script and precommit hook (#12651)
Turn off visual zoom by default (#12679)
Disable navigating on drag/drop (#12655)
expose WebFrame#routingId (#12614)
remove unnecessary overrides
Don't copy things on Dictionary::Set
be aware of views::Widget's layer
fix failed BrowserWindow tests
refactor: use views::Widget on macOS
revert to more graceful template structure check (#12699)
handle remote exception (#12694)
Deprecate did-get-response-details and did-get-redirect-request (#12615)
Not required. (#12682)
[docs] app.isDefaultProtocolClient is available on Linux now (#12674)
clang-format objc files (#12673)
Create automated-testing-with-a-custom-driver.md (#12446)
Part I: Move from base::Bind to base::BindOnce and remove unneeded base::Passed (#12661)
Move AtomNSWindow to a new file
Move QLPreviewPanelDataSource to AtomNSWindowDelegate
Move NSTouchBarDelegate to AtomNSWindowDelegate
Manage AtomTouchBar in NativeWindow instead of AtomNSWindow
Move AtomNSWindowDelegate to a new file
mac: Override NativeWidgetMac
mac: Provide ViewsDelegate
Add "app.whenReady()" (#12652)
Add last known working electron version
[chromium-style] Complex class/struct needs an explicit out-of-line copy constructor.
enable chromium style checker plugin for electron and brightray targets
Build mac code with -Wunguarded-availability -Wobjc-missing-property-sythesis
Bring mac code into conformance with -Wobjc-missing-property-synthesis
Bring mac code into conformance with -Wunguarded-availability
[chromium-style] move methods out of headers
[chromium-style] out-of-line default constructors and destructors
[chromium-style] destructors of ref-counted objects should be private
[chromium-style] override / virtual warnings
[chromium-style] auto variable type must not deduce to a raw pointer type
Stop overwriting prevent_default if default wasn't prevented
Make Menu API accept TopLevelWindow
Do not return TopLevelWindow in BrowserWindow.getAllWindows
Make BrowserWindow inheirt TopLevelWindow in JS
Expose TopLevelWindow to JavaScript
Make sure we append parent->child_windows after InitWith
force windows above other includes
format previously missed chromium_src .cc files
clang-format chromium_src
Only include UIAutomationCoreApi.h where necessary
fix include definition errors
remove unused macro
remove include ordering filter
also format missing .cc files
clang-format atom files
format previously misses .cc files
clang-format brightray
add converters for base::BindOnce and base::BindRepeating
Update trop whitelist (#12642)
run clang-format
fix copy_to conditional
Address breaking API
Correct the default of allowRunningInsecureContent as per docs (#12556)
Remove mate::TryCatch (#26)
switch to simplified version of copy_to
Update appveyor settings
Update travis settings
clarify usage around before-quit-for-update event
Add mate::Promise
Corrected the name of Capitalization Styles
Revert "Address breaking API"
Add missing event parameter to console-message (#12617)
add new event to auto-updater
remove accidental file change
pull up definition and remove include
.deepCopyTo() => sk_tool_utils::copy_to()
Refactor NativeWindow (Part 6): Move NativeWindow bindings to api::TopLevelWindow (#12596)
doc: rename 'blink-feature-string' as 'runtime-enabled-features'
Address @jkleinsc's 2018-03-21 comments
Add logic to bundle native mksnapshot for arm/arm64
Clear cache storage data (#12546)
tools: pass custom template for js2c (#12593)
remove unnecessary ptr_util.h include
replace base::MakeUnique with std::make_unique
Enable WebFrame method forwarding in sandboxed renderers (#12538)
fix broken url for 'blink-feature-string'
InstallView is no longer needed
kVibrancyType should be read in InitFromOptions
mac: Correctly unload previous content view
Add NativeWindow::SetContentView
web_view_ => content_view_
Remove web_contents from NativeWindow's constructor
Address breaking API
Use CircleCI for Mac builds (#12572)
Mouse forward on macOS (#12281)
Show file filter name for accessory view of file dialog
feat(performspellcheck): queue spell check request asynchronously (#12112)
chore(build): support generating compilation db (#12104)
Add a display_id parameter to the desktopCapturer API. (#12417)
asar: remove patch to support graceful-fs (#12562)
Check for devtools in BrowserWindow.getFocusedWindow() (#12526)
remove defines from build-libchromiumcontent (#11927)
Enable plznavigate aka browser side navigation (#12535)
Simplify views/menu_bar focus management (#12536)
Use ui:view's Activate() on Linux (#12539)
Propagate referrer to new windows (#12397)
Use Visual Studio's vswhere to find Visual Studio, and use proper version numbers to locate (#12537)
Disable chromium's redraw locking on Windows when DWM is disabled (#12501)
Improve in-app purchase for MacOS (#12464)
Focus webview directly in offscreen mode (#12507)
vendor: Update native mate to fix v8 DCHECK crash (#12534)
Move AutofillPopup from NativeWindow to WebContents (#12514)
Expose IsOffScreen method always to JS. (#12530)
add moveTop API to move window z-oder to top for win32, mac (#12485)
add IDL and Mojo to glossary (#12504)
Refactor NativeWindow (Part 3):  Remove is_offscreen_dummy from NativeWindow (#12503)
Handle in-app-purchase less fatally on non-Darwin (#12511)
WebFrame.setVisualZoomLevelLimits sets user-agent scale constraints (#12488)
Support for navigator.languages (#12419)
Remove usage of MarkIndependent api
Cleanup destruction of URLRequestContextGetter (#12305)
Use latest libcc (#12476)
re-enable null check against menu item accelerators (#12449)
update doc for setProgressBar (#12428)
s/now/not/ in allowRunningInsecureContent documentation (#12452)
Provide an easy way to use a local build of Electron (#12426)
Add support for FreeBSD
Update testing docs to reflect --grep syntax (#12400)
Increase timeout for inAppPurchase test (#12403)
Do not block main process for async dialog (#12404)
 Workspace notifications support on macOS (#12093)
Cleanup the static methods of WebContentsPreferences
Hide WebContentPreferences::GetWebContentsFromProcessID from public
Remove the static getter methods from WebContentsPreferences
Add WebContentsPreferences::From that checks parameter
web_prefrences() => dict()
now we call ourselves electrocats
don't check darkmode for drawStatusBarBackgroundInRect (#12395)
Use the appname as the tray icon's default tooltip (#12388)
fix broken fragment link in ipc-main.md (#12389)
Update 3 (of Visual Studio 2017) is leftover from 2015 (#12372)
add docs/development/README.md (#12373)
Ignore warning LNK4199
Isolate the code using content::WebContentsImpl
fixes class name
fixes offscreen rendering issues
Avoid including web_contents_impl.h
FIXME: disable pdf viewer feature
add features module to detect availability of build time features at runtime
move pdf viewer behind feature flag
Remove custom appveyor config
Update to the latest libcc with Ch63
Emit document-start for the correct env
re-use request context from IOThread
Update chrome_version.h
Use 60 as module version for V8 6.3
AccessTokenStore is only needed to initialize network location service
REVIEW: ContentBrowserClient now provides geolocation api key and request context
Enable node crypto spec
spec: Do not assume en-US locale to be the current
debug build issues
Drop clone folder
Add whole appveyor config
Use visual studio 17 image
Tab Capture in VIZ: CopyOutputRequest/Result API changes.
Simplify transparent backgrounds
Avoid using deprecated skia size methods
Build with Visual Studio 2017
update node ref to fix --typed_array_max_size_in_heap error
update libcc ref to disable ScriptForbuddenScope check
v8-platform header is not required explicitly
fix stale rebase
Chromium 63 - upgrade to Node v9.7.0 (#12219)
Linker behaves differently on arm
Use lld for linking on both Debug/Release builds
CertificateList => ScopedCERTCertificateList
Unity detection now works in all OSes - returns false.
rtc_base_approved renamed to generic
Update Chrome version
FIXME: Disable node crypto spec
FIXME: re-enable guest webcontents based on OOPIF feature
REVIEW: remove device emulation ipc dependecny on rvh
REVIEW: move ipc use from rvh to rfh
add taskpriority when creating sequences task runners
re-use title information from NavigationEntry
Use XDG_CURRENT_DESKTOP to determine if the desktop environment is Unity
Update crashpad to match Chromium 63.0.3239.108
FIXME: Disbale browser side navigation aka PlzNavigate
REVIEW: Re-use devtools network throttling from content layer https://chromium-review.googlesource.com/c/chromium/src/+/664356
FIXME: Disable some tests to avoid crashes
Temporarily disable OnCursorChange
Update chrome version
Pickle write methods now return void and use GE_CHECK instead
Disable tautological check for chromium code
FIXME: Disable OSR by default
Move DrawQuads to components/viz/
Move ReleaseCallbacks and CopyOutputRequests out of quads/
Move CompositorFrame{Metadata} to viz/common/quads.
Move SoftwareOutputDevice to the viz service display compositor.
Update Node.js submodule to fix a compilation error
IPC fixes for WebContents
Add new includes for leveldb and webrtc
Update libcc
WebExceptionCode has been removed
Add support for size 64 skbitmap operations
Convert optional webpoint
GetRenderProcessHost() has been removed for OOPI support, should use #include GetMainFrame()->GetProcess()
PrintedPageSource has been removed
tracked_objects::Location --> base::Location
experimental_webgl_enabled is not supported, now use webgl1/2_enabled
Implement GetBackgroundFetchDelegate in brightray::BrowserContext
GetBlockingPool has been removed
Calling non-const callbacks requires some tricks
DialogClosedCallback are not const references anymore
Move proxy constructor to ProxyService namespace
WebContents are no longer IPC Sender's
v8 proxy service has been removed
BlockingPool has been removed
make_scoped_refptr --> WrapRefCounted
WebContentsObserver no longer provides explicit_set, we can calculate it
AllowCertificateError no longer sends overridable
TracingController -> Coordinator -- content tracing now uses 'endpoints' instead of 'sinks'
HandleCommand now takes session_id and returns success boolean.  It is assumed a nullptr from the handler means failure
trackable_object has moved to base namespace
Update Chrome version to 63.0.3239.84
Update clang revision to match Chromium 63.0.3239.70
Use libcc with Chromium 63
Remove the race condition between new process creation and context release (#12342)
Update draggable regions when changing BrowserView
Make BrowserView DragRegionViews children of the WebContents view
Use NSView convertRect:toView: for BrowserView DragRegionView positioning
Rename system_drag_exclude_areas => drag_exclude_rects
Store InspectableWebContents instead of InspectableWebContentsView in NativeBrowserView
Update CI to use Node 8
Better GTK+ Menu color support (#12300)
Check menu.popup options are an object (#12325)
Use same delay-load settings in both debug and release
net: change mime type deduction in Change URLRequestAsarJob (#12319)
Delete .node-version (#12304)
Update example code (#12315)
Document BrowserView.{destroy,isDestroyed} (#12274)
Set appropriate defaults for webview options (#12271)
Change Contact Emails (#12278)
fix remote setInterval flake (#12263)
feat(powerMonitor): expose interface to query system idle state (#11807)
add missing report.length > 1 assertion (#12257)
Enable easy rebuild of native modules for unreleased electron (#12217)
Exposing process.env status (#12166)
fix crash when using getWebPreferences api with devtools webContents (#12254)
:wrench: Linter's gotta lint
:construction_worker: Tests, how do they work
:construction_worker: Fancy test
:hocho: Cut typo
:wrench: Actually test the method
:wrench: Sort crashes
spec: isolate sw file scheme spec storage with temp partition
Apply further ES6 bikeshedding
Add config for trop (backporting bot) (#12238)
Use idiomatic ES6 when merging options
Remove unnecessary work when merging options
Add tests
fix: Incorrect warnings in webviews (#12234)
Parent's visibility trumps inherited 'show' option
Linux named notifications (#12192)
Make link to related guide/tutorial more obvious (#12204)
Add heading for README
remove process preference lock from AtomBrowserClient (#12194)
add NOLINT rule for include order in renderer_client_base
move ipc use from rvh to rfh
Make the linter happy
Enter context scope before InternalCallbackScope
When a render process is crashed, it might be reused
Use InternalCallbackScope for ticking event loop
update node ref fixing crash with buffer allocation
clean node ref and remove short circuit
build node target for <(node_lib_target_name)
update node::Environment::TickInfo calls
node => node_lib and V8_BASE => v8_base
OPENSSL_PRODUCT => openssl_product
update node ref to electron-node-v9.7.0
Skip client-certificate test for Linux (#12189)
Ensure that a document has been created before sending IPC messages
Newer CI images (#12188)
Enable more debug info for electron-linux-ia32
Print detailed error for serviceWorker test (#12186)
Use content origin in screen coordinates for calculating popup menu position (#12180)
Use bundled freetype from Chromium
Allow CI building on arm64 hardware
Added session-created event documentation (#12123)
More vibrancy fixes (#12157)
Preload doesn't load in sandboxed render if preload path contains special chars (#12037)
fix dev tools window interfering with mouse forward (#12132)
Update to master.
Deprecations come >=1 major release before removal
clean planned breaking changes for 3.0 (#12145)
Exit gracefully on linux (#12139)
Repect old logic in windowWillUseStandardFrame
Don't store WebContents in NativeWindow
views: Explicitly set initially focused view
views: Show menu on window's content view
NativeWindow is no longer WebContentsObserver
views: Focus webContents in BrowserWindow
No need to get BrowserContext from NativeWindow
Remove NativeWindow::FromWebContents
Remove NativeWindow's webview APIs
mac: Pass the view to install
mac: UninstallView is not used
Save browser_view_ in the NativeWindow
mac: Move draggable region code to BrowserWindow
mac: Call setMouseDownCanMoveWindow in BrowserWindow
mac: Call SetBackgroundOpaque in BrowserWindow
mac: AcceleratedWidget should be window's content view
Only mac needs to call SetActive
mac: Window's native view should be its content view
Set WebContents background color in BrowserWindow
web_contents can't be null
Move StoreFocus/RestoreFocus to BrowserWindow
mac: Remove access to webContents in windowWillUseStandardFrame
Native confirm/alert throws differently
Make OnMessageBoxCallback a method since it is accessing members
Code style fixes
docs: Default message is not localized
docs: Defaults of safeDialogs
Use USER_WANTS_NO_MORE_DIALOGS constant for -1 magic number
fix cpplint errors
fix cpplint error
Implement dialog (alert/confirm) blocking as a user switch after the first dialog
remove screen.getMenuBarHeight spec
deprecate screen.getMenuBarHeight
Add XCode debugging doc
Add optional verbose switch '-v' to build script. (#12118)
Better error logging in api-app-spec.js. (#12122)
Use version 0.0.0-dev everywhere
update references to renamed i18n repo
switch links to regular syntax
Update inAppPurchase API doc (#12072)
Include backtrace i/o as a crash reporter backend option
fix styling and add spec
move native-mate back into the api layer
fix typo in inAppPurchase API doc
appease the linter
Don't cast manually for NativeWindow*
Pass arguments instance through the chain in order to throw error
add warning when addTabbedWindow is called on self
Coding style fixes
restore old cb
Quick typo (#12040)
improve Menu and MenuItem testing (#12015)
Update libcc to latest chrome62
Update libcc revision
Disable stack dumping for 32bit ARM
node.so should link with libc++.so
Make sure --sysroot is appended at last
Link with libcc's libc++ on Linux
update update submodule ref for updated node 9.3.0 (#11708)
Upgrade to node v9.3.0 (#11507)
Update libcc reference
update libcc for loading service worker under file scheme
Update sysroot images to fix linking error
Improve process launch handle sharing API.
Update sysroot to Debian Stretch
Add init_webrtc lib to the list of static libraries
Fail "navigator.serviceWorker" tests if WebContents crashes
remove invalid cookie_details.h filename from brightray
FIX: add chrome-devtools:// to list of WebUI schemes
Disable the "ffi" module test
REVIEW: let browser context manage cookie change sub list
REVIEW: Implements core logic for Pixel Canvas
fxedit is removed and pdfwindow renamed to pwl
Replace somemore uses of SetStringWithoutPathExpansion
Remove chrome_utility_messages.h, it's unused
FIXME: PDF component IPC should be converted to Mojo.
gfx::Image::SwapRepresentations is removed in favor of std::move
base::LaunchOptions fds_to_remap is no longer a pointer
REVIEW: Subscribe to cookie store for changes in place of CookieMonsterDelegate
Removed QuitWhenIdle
Rename CompositionUnderline to ImeTextSpan
chromium_src print_job updated to match current chromium implementation in Quit method
Remove WebCString from Blink
Refactor Skia document type into an enum class
Move IDMap to base namespace.
Remove was_ignored_by_handler from frame_messages.h
viz: Move BeginFrame(Args|Ack) to components/viz/common/frame_sinks
Move CompositorFrameSink and FrameSinkManager mojom from cc to viz
viz: Move BeginFrameSource to components/viz/common/frame_sinks
viz: Move CopyOutput(Request|Result)=> components/viz/common/quads
updates to build flags and comp errors
media: Replace ENABLE_PEPPER_CDMS buildflag with ENABLE_LIBRARY_CDMS
Update submodule ref for node
Add path to skia gpu
fix some more compilation errors
Add path to khrplatform.h file
REVIEW: Disable warning 4275 on Windows
Use generic base::Value::SetKey
Removing some function parameters
Update submodule ref for crashpad
Use c++14
Set minimum Mac SDK version to 10.12
Update chrome_version.h
Update clang revision to match Chromium 62.0.3202.89
Use libcc revision based on Chromium 62
Better clarity and fix typo
Update font settings in api::WebContents
Handle transparent WebContents in api::BrowserWindow
Move InputEventObserver to api::BrowserWindow
Move closing logic to api::BrowserWindow
Add NativeWindowObserver::OnCloseButtonClicked
Add ExtendedWebContentsObserver
Use observer to provide OnRendererUnresponsive
Remove OnMessageReceived from NativeWindow
The UpdateDraggableRegions does not share implementations
Check weak ptr before using it
UpdateDraggableRegionViews is redundant
Move RenderViewCreated logic to api::BrowserWindow
Move ready-to-show to api::BrowserWindow
Turn api::Window into a WebContentsObserver
Rename api::Window to api::BrowserWindow
Remove needless quotes around electron key
frame navigation API
:heart: One more feedback item
:heart: Feedback
bump electron-typescript-defs to 1.3.2
tutorial: Surround the snap version in quotes
Explicitly disable executable stack in all Linux binaries
Use `--icf=all` on architectures where it's supported
Add deprecation warnings fot html/rtf methods (#11995)
Remove outdated comments
deprecate autoSubmit in favor of uploadToServer (#11992)
deprecate boolean highlightMode param (#11993)
 deprecation for webContents.openDevTools (#11986)
Use more idiomatic JS in WebContents' init()
remove app.getAppMemoryInfo (#11985)
Throw an error if menu.popup() has no window
document menu.popup() option's window argument
update a few menu.popup() calls to use the new API
fix menu.popup() sample code
remove support for hidden-inset (#11975)
remove atom-shell process name (#11979)
positionItem => positioningItem
update docs for single param popup
options all the things
remove support for crashReporter autoSubmit (#11976)
:heart: First round of feedback
Remove nativeImage deprecated methods (#11978)
no longer support bool param for setHighlightMode
remove setZoomLevelLimits
Cache libnotify server caps (#11965)
remove html/rtf methods marked for 2.0
remove unused deprecate module from crashreporter
remove setExtraParameter for 2.0
forgot to remove old method
add new and changed specs
add restructured window.popup
GetWrapper should be const
:memo: Add missing links
:memo: Native drag & drop documentation
:memo: Cleanup this hot mess
:memo: TIE IT ALL TOGETHER
:memo: Document debugging
:memo: Installation
:memo: Document asar
:memo: Offscreen Rendering
add typing cat to first PR comment (#11964)
:memo: A11y documentation
:memo: Some consistency
:memo: Documenting updates
:memo: Document the progress bar
:memo: Document the app architecture (main/renderer)
:memo: Document the first app
:memo: Ensure that quick-start.md still exists
:memo: Document Unity Launcher
:memo: Windows Taskbar documentation
:memo: Recent documents documentation
:memo: macOS Dock documentation
:memo: Add cli and boilerplate documentation
security.md: Update security recommendation checklist
:memo: Document development environment
add spec for menu.popup(window, callback)
add conditional for menu.popup(window, callback)
use SK_ColorTRANSPARENT as the default color to fix issue with transparent window devtools detach
fix floating reference glib warning (#11948)
capitalize 'Node.js'
make the table a real table
minor copyediting
update native_mate ref
Add download from custom protocol test (#11931)
Use New Versioning Strategy
fix windows tests
requestHeaders --> headers
Update deps for new squirrel
run clang-format on changed sources
don't build libgtkui files on non-GTK+ platforms
replace gtk2 with gtk3 in cibuild script
replace gtk2 with gtk3 in docs
replace gtk2 with gtk3 in dockerfiles
remove GTK+ 2 specific code
Update to use Squirrel.Mac that supports CDN releases
change to return emit
emit console-message in OSR mode
update libcc ref (#11916)
fix typo in electron-versioning.md
Remove unnecessary methods on WebContentsPreferences
docs: More explaination to affinity option
Add an "affinity" option to webPreferences
Propose fix some typos (#11905)
fix: Update touch bar type documentation (#11563)
Handle empty handles (#11598)
Change release process for 2.0
Mark securityScopedBookmarks as optional and a boolean (#11901)
Implement App-Scoped Security scoped bookmarks (#11711)
Add ability to set arbitrary arguments in a renderer process (#11850)
add links to new contrib docs
enhance documentation around contributing to electron (#11887)
add pr template (#11888)
Address review comments
change weak ptr ref to strong
Tweak wording
Mention change of default value scenario in doc
Update NotificationAction doc
Overload method for naming consistency
Use std::string::empty to check
Simplify formatting
NSUserNotification should respond
Accept additional notification actions
Add Notification tests
Organize code
Update Notification API doc
Make it able to set close button text
add formula to setZoomLevel doc
implement selectFormat selector
Add ability to log atom ipc messages
make the linter happier
make the linter happy
fix gtk3 deprecation warnings setting menubar colors
remove icons from messageboxes on gtk
fix 'GTK_STOCK_*' deprecation warnings
Add brightray to src code structure (#11878)
fix 'GTK_STOCK_*' deprecation warnings
add accessory view for format picker
Enable official build (#11847)
remove .only
fix child process import
move spec to chromium_spec
move locale doc to command line switches
add app.setLocale() (#11469)
Delete `upgradeing-chrome.md`
feat(worditerator): bump up worditerator into latest
revert TOOLKIT_VIEWS check change
Update snapcraft.md
remove extraneous variable
updates to mac enable method
typo fix
add documentation
migrate to virtual void and start mac impl
Replace custom function with Object.values()
first pass at api method to enable window
Remove extra menu separators (#11827)
Improvements to release process
Coding style fixes
Coding style fixes
Add missing header import
The tryToTerminateApp is not really needed
Implement shutdown event for macOS
Remove the AllocateSystemIOPorts call
Do not use virtual function to request shutdown
Simplify the public PowerObserver interface
fixup! Implement powerMonitor 'shutdown' event for Linux.
Add doc for powerMonitor shutdown event
fixup! Implement powerMonitor 'shutdown' event for Linux
fixup! Implement powerMonitor 'shutdown' event for Linux
Add some tests for powerMonitor "shutdown" event
Implement powerMonitor 'shutdown' event for Linux.
Updated for arm and armv7l documentation (#11825)
feature: Hot security tips (#11810)
:memo: Some more words
:memo: A word on strict
:memo: Some more words
fix oops
don't inherit isBrowserView for spawned child windows
:memo: Even more words
:memo: Some more words
:memo: Callout forge/builder as easiest
:memo: Link to the guide
fix oops
use std::binary_search to search switch blacklist
Make a copy-paste recipe for rebuilding the blacklist
Use case-insensitive switch comparisons
createShadowRoot => attachShadow
 :memo: Add snapcraft documentation
Allow multiple releases to run at once
:construction_worker: Put ESLint's mind at ease
:heart: Even more feedback
:heart: More feedback
:construction_worker: Linter errors
:heart: Implement @zeke’s feedback
:memo: General cleanup
:memo: Context Isolation
:memo: allowpopups
:wrench: WebSecurity
:memo: Blink Features
:memo: Experimental Features
:memo: allowRunningInsecureContent
:memo: eval()
:memo: Content Security Policy
:memo: Context Isolation
:memo: Verify WebView creation
:memo: Disable Node Integration
:memo: Secure content
:memo: Link to security tutorial
change doc to show working on all platforms
update menu docs description string
forgot to remove .only from spec
fix event callback placement in spec
add documentation for new menu events
add first pass at menu event specs
turn class into observer
first pass at menu event emission
CrashReport structure does not match API output
docs(webframe): reword api instructions
test(webframe): add basic test case
docs(webframe): add interface instruction
Remove web_contents_impl() helper to clarify code and remove unnecessary guard
feat(webframe): export set cache capacity interface
Move OSR api to OsrWCV to allow api calls to take effect sooner
Call SetAuthoritativeVsyncInterval on the Compositor directly
Raise maximum OSR framerate to 240
Don't generate a frame with GPU OSR if IsPainting is false
Don't generate a paint when StartPainting is called inside paint cb
Use null accelerated widget to avoid showing GPU accelerated OSR surface
Make use of sorted order to speed up searching
Make run-as-node mode optional (#11701)
update submodule ref for updated node (#11706)
add license file to npm publish (#11705)
Remove WS_EX_COMPOSITED style from window
Allow IO while constructing an absolute path (prevents DCHECK failure) (#11697)
Disallow launching unknown apps via browser client.
fix code fence lint failure
docs: Document custom installation (#11640)
Update CONTRIBUTING.md with link to development docs (#11529)
don't dereference tooltip_controller if it's null
update calls to use new namespaces
add todo comment
lint fix
explicitly hide tooltip on window deactivation
fix lint
use same settings for screen thumbnails as chrome does webrtc capturing
Set DISPLAY variable for xvfb
properly check checkbox state on callback (#11658)
Replace arrow function
Change macos app termination process
Update gyp: Add Visual Studio 2017 support
Removing core dump check (#11621)
Throw when inAppPurchase is used on unsupported platforms
Remove observer on cleanup
Add inAppPurchase to docs index
Pass multiple transactions at the same time
Payment should be part of Transaction
No need for SKPaymentTransactionState prefix for states
Turn addTransactionListener into transaction-updated event
Turn InAppPurchase into an EventEmitter
mac: SKProductsRequest should be freed on end
spec: Simple tests for inAppPurchase module
Reorgnize the platform-specific files
Update code style
Update filenames.gypi
Adapt code style
Put in-app purchase files under macOS check
Add in-app purchase for MacOS
Replaces tracking removal with proper mem management
removed unnecessary braces
Removed tracking area when removing icon to prevent mouse exit race condition crash
Move the IconLoader to use the task scheduler.
Make gfx::Image instance a local variable.
Force uv loop cleanup (#11465)
Update libcc to latest
Revert changes made to test case
Add window.loadFile and webContents.loadFile helper methods
Closing asar file should be syncronous
Remove unnecessary scope
Do not create DIR_USER_DATA on IO thread
Singleton must be created on request
docs: specify string values for DownloadItem
Use cached application locale as default for generating accept-lang header
update libcc to fix DCHECK errors in ui::clipboard on windows
update libcc for macOS render widget dcheck crash fix
update libcc for using custom platform with gin
REVIEW: register BrowserChildProcessObserver once main message loop is ready
Don't delay node module initialization
FIXME: allow IO access on main thread for crash reporter
REVIEW: setup request context for NSS OCSP only once
REVIEW: fix base::File helper usage on incorrect task sequence
Note about incorrect usage of blink::SchemeRegistry methods
update libcc
Some blink::WebSecurityPolicy methods should be invoked before other render threads are created
address review comments
opt into location service on main thread
REVIEW: obtain mime type from file path only on IO allowed sequence
FIXME: dbus ObjectProxy methods should only be invoked on IO allowed sequence
REVIEW: access GetApplicationLocale on sequence that allows IO
reenable some specs
REVIEW: add render process lifecycle observer only once
REVIEW: create AtomNetworkDelegate on the IO thread
Initialize isolate holder in standalone node mode
REVIEW: destroy process singleton on sequence where IO is allowed
FIXME: disable some specs
FIXME: refactor and remove usage of ScopedAllowIO where possible
dont use UI methods on IO thread
derefence weak ptr only on the same sequence runner it was created in
handle NaN conversion from V8
pref store needs to be loaded on a thread that allows IO
fix dcheck failure with invalid UTF8 string conversion for base::Value
create user data dir on thread that allows IO
fix: draggable region ipc should be frame based
The RenderWidgetHostView might not be available when showing menu
Copy the callback instead of reference
Remove the closed event of Menu
Make callback work for old-style Menu.popup call
spec: callback for Menu.popup
mac: Call callback when menu is programmely closed
docs: callback of Menu.popup
Add callback parameter to Menu.popup
mac: Correctly close popup menu
Update license year
Doc Update: New path for web-contents.md
feat: Allow testing of single spec modules (#11409)
MenuItem roles camelCase-compatible
spec: Add test for crypto operation
Update browser-window.md
Do not create duplicate V8Platform in NodeDebugger
Use Node's V8Platform instead of gin's
Add Support for Pop!_OS GNOME Session
mac: Handle the case when closing all menu runners
win: Correctly close popup menu
Update libcc for latency_histogram_macros.patch
Add testing for arm, arm64 and ia32 linux builds
Coding style fixes
fix: manually set spellchecker for sub frames
remove async:true from menu tests
update tests for menu closed event and call cancel on closePopup
add test for menu closed event
document menu closed event and fix styling issue
fix flash menu being unresponsive to commands
Revert "dont change window background after devtools is closed"
dont change window background after devtools is closed
fix osr devtools crash introduced during merge
Reviewed getBlobData source, not return value (void)
Reduce the number of helpers
Better field names for details object
Appease the linter
Give user access to the URL that is attempting to be openExternal'ed
change getBlobData return type from Blob to Buffer, fixes doc and typescript def
make IGNORE_FILES more readable
add atom/node/osfhandle.cc to the do-not-lint list
Revert "fix previously-hidden cppcheck warnings in osfcheck.cc"
fix inconsistent indentation
fix previously-hidden cppcheck warnings in osfcheck.cc
flake8 --ignore=E111,E121 script/cpplint.py
walk all files in atom/ and brightray/
give find_files() a filename tester function arg
make file list function names clearer
remove unnecessary ignore variable
remove unnecessary changed_files variable
only call cppcheck once
(copyediting) renumber steps
The missing :
Clearer wording
Updated auto-updater.md
Add webFrame.setIsolatedWorldSecurityOrigin
Add webFrame.setIsolatedWorldHumanReadableName
Add webFrame.setIsolatedWorldContentSecurityPolicy
Add webframe. executeJavaScriptInIsolatedWorld
Clarify Hazel's purpose
add changed-only mode to cpplint
virtual members need a virtual destructor
refs #11353: pylint
Adds --chromium_dir argument to script/create-dist.py
test for relative links adheres to npm run lint
:wrench: Linter's gotta lint
:wrench: Allow notifications debugging (Windows)
:wrench: Use LOG instead of NSLOG
Add executable test to package.json
Upgrade Node to v8.9.3 (#11422)
Remove WrappableBase::GetWrapper() DCHECK
remove key and value bullts
add loop to catch null values
:wrench: More detailed macOS notification logging
update a few steps in upgrading-node.md
:white_check_mark: Add test to check for relative links in docs directory
:wrench: Allow notifications debugging (macOS)
:construction_worker: Close popup in aftereach
:wrench: Last round of feedback
:wrench: Feedback
:construction_worker: Properly test x vs y
:construction_worker: Hence, better testing
:wrench: Menu returns its properties now
:construction_worker: Add a spec
:wrench: Cleanup
:wrench: Allow for `menu.popup({})`
:wrench: Always find a window (or error)
:wrench: Oh wow, that looks wrong
remove failing badDefault
fixing error in registerDefaults
Revert "Add systemPreferences.registerDefaults()"
fixes from review
:wrench: Last round of feedback
:wrench: Feedback
Make 'https' explicit in the link to electronpl.github.io
:construction_worker: Properly test x vs y
:construction_worker: Hence, better testing
:wrench: Menu returns its properties now
Update README.md
update value type to Any
improve error handling
update docs and spec
fixes from code review
fix doc parsing error
update systemPreferences docs
add fail spec and only run mac ci
add test for registerDefaults
add method binding and error guards
fix capitalization and clean logic
first pass at adding infra for registerDefaults
:construction_worker: Add a spec
:wrench: Cleanup
:wrench: Allow for `menu.popup({})`
:wrench: Always find a window (or error)
:wrench: Oh wow, that looks wrong
fix formatting in upgrading node doc
fix formatting in upgrading chromium doc
Security Improvement: Enable Control Flow Guard on Windows - https://docs.microsoft.com/en-us/cpp/build/reference/guard-enable-control-flow-guard
Replace default_app icon
Replace app icons
remove deprecated method call
re-add warning removed in https://github.com/electron/electron/pull/11013
Force MediaCaptureDevicesDispatcher to be created on UI thread
BrowserClient::CanCreateWindow is no longer called on the IO thread https://codereview.chromium.org/2821473002
fix more relative links
update links to versioning doc
revert to old name of versioning doc
Update README.md
Remove appveyor.yml
docs: README make versioning link relative
update highlights
update intro
update semantic commits section
update ignore comment
docs: use relative links
:construction_worker: Ugh, whitespace
:construction_worker: Cleanup on Windows only
docs: fix images
docs: we _do_ follow semver
Enable testing with python-dbusmock
docs: changes based on review
use non-relative image paths to interop with website deploy
docs: add tl;dr to version doc
docs: explain versioning policy 1.x, 2.x, and beyond
:construction_worker: Linter fascism
:construction_worker: Cleanup after the test
:construction_worker: Test registry interaction
:package: Install winreg
note that 'publish-to-npm' needs node 6
add a tip for testing version number with 'bump-version.py --dry-run'
note that 'npm run release -- --validateRelease' must be run in release branch
Add linux powerMonitor tests using python-dbusmock
Implement powerMonitor "suspend"/"resume" events for Linux.
Revert some unnecessary changes
Add a SessionPreferences to manage session related data
fix tyop
Coding style changes
Remove .only
Standard JS
Don't know why we suddenly need this, but hey :/
Appease the almighty linter
s/global/session in constants
s/global/session
Move global preload implementation to be session based
Use const references
Add ability to set global preload scripts
explain using the Electron S3 Bucket environment variables
in the npm upload step, explain the needed npm credentials
fix invocation of validateRelease pass
:wrench: Linter fascism
:wrench: Make it actually work
Add 1 hour timeout
add a troubleshooting note about branch checkout
add section on environment variables
Ignore all npmrc and package-lock
trim whitespace
fix numbering of 'Edit the release draft' steps
wrap lines at 80 characters
docs: responsiblity of destroying devtoolsWebContents
Make the asar-video test run faster
Updated libchromiumcontent submodule
:hocho: Delete classes key if empty
:wrench: Sprinkle some ES6 across the file
:wrench: Hide subprocess window
Update cookies.md
docs: use full image URL
remove extraneous variables
remove onlys
split ipc tests into three files
fix typos in structures
Ignore/remove package-lock files
Reset `embedder_zoom_controller_` before assigning new one
Don't call `ui::SetAtomArrayProperty` with an empty vector (fails DCHECK)
Disabled DCHECKs that fail when running tests
Don't leak the taskbar object, reuse it instead
fix dcheck comparison between unsigned long vs int
fix: update pdf viewer ui for chrome 61.0.3163.100
Two grammar tweaks.
docs: Remove unnecessary shows
Allow using docked devtools for webview
spec: setDevToolsWebContents
docs: Open detached devtools in example
docs: contents.setDevToolsWebContents
Create webContents for webview even when src is not set
Enable using external WebContents as devtools
Remove Travis references
Explicitly set alpha type of bitmaps with JPEG data to opaque
Light refactoring of the nativeImage module tests
Inscrease timeout for crashReporter tests
add some markdown links
remove all double spaces not needed
fix(docs): fix all missing dots and add some links
Update submenu's title
feat(docs): fix 'optional' wording
Do not change logic on highlighing
Remove unused methods
Cache the attributed string
Remove unused code in NSColor+Hex.h
Add license for the vendored files
Lint
Update header file
Update doc
Add isHighlighted method
Clean
Add logic
Use NSString+ANSI on the Menu title
Add NSString+ANSI class
fix conflicts
update electron-docs-linter and electron-typescript-definitions to latest
Don't access unique pointer after it was moved from
Use base::scoped_nsobject
Format code
Declare with static
Do not autorelease global variables
Update API docs
Rename roles
No need to make visible
Small optimization
Remove redundant menu item
Redesign recent documents role API
Rollback duplicated feature
Specify "Clear Menu" through label option
Document `openrecent` menu item
Hide "Open Recent" in xib
Introduce openrecent role
Use `else if`
Add "Open Recent" submenu to default
only mark handle as independent when it's a high memory user
copyediting
fix styleguide errors
sync with master
fix: focus the webview as a temp workaround
Remove "async" flag from the `menu.popup()` options
Enable "<webview> tag found-in-page event emits when a request is made"
Enable nativeImage module addRepresentation() tests
Use latest libcc with Chromium 61
fix remark code flag error
partial doc update from my sprint notes
oops, the upgrading-chrome.md changes belonged in a separate PR
prefer `sh` to `bash` in the docs
finalize node upgrade doc
prefer `sh` to `bash` in the docs
make some things more explicit and style conformity
chrome -> chromium and updates to crashpad doc
add section for updating submodule references
add rough draft of node, crashpad update notes
Use 2xlarge for ARM jobs
Use latest libcc
Disable a couple of crashReporter tests
Disable "<webview> tag > found-in-page event > emits when a request is made" test
Disable "nativeImage module > addRepresentation()" tests
add basic inspector module test
Adding node headers to native modules for tests so they will compile and run on Mac
Use node::NodePlatform instead of v8::platform in atom::NodeDebugger
Use Node.js v8.7.0
Made `NotificationDelegateImpl` final
simplify URLRequestContextGetter for HttpNetworkSession::Context
Stop file observer of NetLog to finish writing to disk
Sanitized notification delegate implementation
Added `libfreetype` dependency to ARM64 build
Added build dependency information for `arm64`
Update stack string parsing in the CallbacksRegistry
Use an existing host name so that it resolves quickly and tests don't time out.
REVIEW: Inject devtools extensions API via browser
Create a `TaskScheduler` when initializing run-as-node mode.
Enable client certificate tests
adds extra param for ui compositor creation
upgrades offscreen rendering to latest chromium
It fixes crash in tests on Windows
Setting raw pointer to nullptr as default so it can be detected as noninitialized
Do not specify exception handling mode on Windows
Use gtk_toggle_button_get_active()
Use GTK3 instead of GTK2
Remove dead header file for notification delegate
Result of RunMenuAt is now void, no need to ignore it
Do not use `SkBitmap.deepCopyTo()`, it was removed
allocator: rename use_experimental_allocator_shim to use_allocator_shim
Update link_settings/libraries list in the brightray.gyp
Remove "async" option from `menu.popup()`
Cleanup MenuRunner API
Give CustomButton a focus painter.
Clean up views::Background.
Changed top/bottom & left/right border parameters on BoxLayout to take single gfx::Insets parameter.
make base::SharedMemoryHandle a class on POSIX.
Include objbase.h only for Windows
Remove usage of X11AtomCache
Rename set_background to SetBackground
Rename GetPrefferedSize to CalculatePrefferedSize
Migrate from ScopedComPtr::CreateInstance() to CoCreateInstance in chrome/...
Rename ScopedComPtr::Receive to ScopedComPtr::GetAddressOf
Rename ScopedComPtr::get() to ScopedComPtr::Get()
Move handling of DraggableRegionsChanged notification from "view" to "frame".
Move "atom/common/node_includes.h" to the end of the includes list
Update crashpad revision
Update brightray link_settings on Mac
Add protobuf defines and include_dirs
Move IconURLs method from WebFrame to WebLocalFrame
Remove obsolete Blink popup blocker.
Convert SpellCheckPanel SpellCheckPanelHost IPC to mojo
Don't specify URLRequestContext when starting logging
Include header for net::URLRequestContext
Use blink::WebLocalFrame instead of blink::WebFrame in printing
[c++11 library] Remove ScopedVector
Replace deprecated base::NonThreadSafe in chrome in favor of SequenceChecker.
Remove unused includes
Ban raw pointers to ref-counted types on base::Bind
Reporting: Wire ReportingDelegate into ChromeNetworkDelegate
Implement GetBrowsingDataRemoverDelegate() for BrowserContext subclasses
Make BlobReader create its own file TaskRunner.
Move some of IOThread's command line logic to network_session_configurator.
DevTools: do not set visible size while emulating in case of device mode.
Remove the dependence on BrowserThread::FILE for
Consolidate PowerSaveBlocker and WakeLock inside Device Service.
printing: Remove BlockingPool use
Use "blink::WebLocalFrame" for "GetMarginsForPdf()"
Move Get/SetScrollOffset methods from WebFrame to WebLocalFrame.
Move printing-related methods from WebFrame to WebLocalFrame.
Use blink::WebLocalFrame instead of blink::WebFrame
Move GetDocument method from WebFrame to WebLocalFrame.
Network Traffic Annotation added to DownloadURLParams.
Partial revert of Provide WebContents::CreateParams to tab helpers.
Speech recognition: Use BindOnce / OnceCallback / OnceClosure where applicable
Refactor client cert private key handling.
chromeos: Check both original and absolute paths for file: scheme
VR: Check focus state browser-side before sending input to renderer.
Propagate opener to BackgroundsContents.
FIXME: DesktopNotificationDelegate has been removed
Add WebRTC related defines to the build config
Remove base::ListValue::Set(size_t, base::Value*)
Remove raw base::DictionaryValue::Set
Rename WriteToFileNetLogObserver to FileNetLogObserver
Remove unused RenderViewObserver methods.
PlzNavigate: make NavigationResourceHandler a LayeredResourceHandler
Convert iOS to use X509CertificateBytes.
SkBitmap and SkPixelRef no longer need lock/unlock
Add Keyboard Latency UMA Metrics.
Add blink::WebInputEvent::IsPinchGestureEventType().
Renamed LoadCommittedDetails.is_in_page to is_same_document.
Add missing IWYU message_loop.h includes.
Remove rendundant WebLocalFrame parameter in various plugin code.
Introduce TaskRunner::RunsTasksInCurrentSequence()
Provide WebContents::CreateParams to tab helpers.
Replicate feature policy container policies.
Switch to using scoped_ptr with UserData
Get rid of SharedMemory::GiveToProcess.
Service CreateNewWindow on the UI thread with a new mojo interface
REVIEW: Move MediaDeviceIDSalt from ProfileIOData to ProfileImpl.
Remove client_certs from SSLCertRequestInfo.
Replace uses of hash_map in //base
Remove base::Value::GetAsBinary
[blink] Unique pointers in Platform.h
Make base::DictionaryValue::Set* return pointers
Remove base::SharedMemory::ShareToProcess
Remove base::Value::Get{Buffer,Size}
Move components/display_compositor to components/viz/display_compositor
Set clang revision to 307486
Update chrome_version.h
Use latest libcc with Chromium 61
Disable mips64el CI job
:wrench: Spec: Don’t use deprecated `new Buffer()`
:wrench: Disable standard/no-callback-literal where necessary
:wrench: Script: Reject with error
:wrench: Remove redundant `await` statements
:wrench: Don’t use deprecated `new Buffer()`
:package: Upgrade to StandardJS 10
run the new test only on windows
update tests to reflect new behaviour
Use SizeConstraints instead of window events
remove incorrect checks
dont resize on taskbar resize if resizable is false
fix doc in download-item
:bug: #10470 - prevent to load preload in each iframe context
Update libcc to include patch on mips64el v8 pagesize
:bug: Ooops, fix that
:construction_worker: Add specs
:memo: Document `BrowserView.fromWebContents()`
:memo: Document `BrowserView.getAllViews()`
:wrench: BrowserView.fromWebContents()
:wrench: BrowserView.getAllViews()
Do not upload symbols for mips64el
:wrench: Return null if not found
:memo: Docs!
:construction_worker: Let’s test the undefined case, too
:construction_worker: Add a spec
:wrench: Add BrowserWindow.fromBrowserView()
Update README.md URLs to HTTPS
fix continuous-integration build error
Update libcc to fix error caused by libdrm
Add libpulse to dependencies of mips64el
fix docs-translation/README.md
Update README.md
Run electron-linux-mips64el CI job
Add CI job for mips64el
Update libcc to latest with mips64el support
fix word CODE_OF_CONDUCT.md
fix word docs-translation/README.md
Add mobx-devtools to the Supported section
document chromium_src directory
Making it prettier.
Some compiler flags are clang only
Use mips64el toolchain
Download mips64el toolchain
Add mips64el to arch list
fixed wrong words & urls in README.md
make verbose execute and non verbose execute do the same things
Copyediting
initial updates from meeting today
:package: Update electron-typescript-definitions
:wrench: Util is no longer used here
:wrench: Bonus ;
:wrench: util._extend is deprecated, too
:wrench: Don’t use deprecated util.is* methods
:package: Bump electron-docs-linter
:wrench: fs.readFile: options are optional
:memo: Document Nucleus
comment out unused methods
Explicitly skip tests that should be skipped
fix linting for fenced codeblocks only (see electron/electronjs.org#868)
add remark lint to ensure fenced codeblocks are formatted properly.
Update to latest libcc
Do not open devtools in tests
lint
Avoid race condition where login handler webcontents becomes null
Capitalizing Electron
Updated Headers now consistent with styleguide
Update electron.atom.io -> electronjs.org
Standardize README.md headers
Update icns
:wrench: Eh, let's do it for all the types
:wrench: setTitlebarAppearsTransparent=YES
:wrench: Alex has good ideas
:wrench: Appease the linter
:construction_worker: This calls for tests
:thinking_face: What if we made it an Error again?
:thinking_face: What if you could return an Error?
Update branch determination
Update for API invoked release builds
fix typo in styleguide
Run release builds from API
fix: add nation flags and link translations to one address
📝 Use separate entitlements for login helper
Implement login helper to manage login item in Mac App Store build
Enable verbose mode
Add AppVeyor and Jenkins
Expose desktopCapturer in sandbox mode.
remove only
linter plz
Clean up empty logic
changes from review
edit empty function for platform consistency
fix includes
linting is important
add callbacks registry spec
Revert "Implement login helper to manage login item in Mac App Store build"
Rewrite "nativeImage module" tests assertions with chai.expect()
Add Chai library for tests
Appease the linter
Add comments and use ToLocal instead of ToLocalChecked
:wrench: Clean it up
rename  and fix assoc. test
a few more updates to tests
first pass at deprecation spec updates
Update libchromiumcontent to commit fe6086f
:wrench: Actually fix the test
Add documentation for {intercept,register}StreamProtocol.
Add tests for URLRequestStreamJob
Implement {register,intecept}StreamProtocol
Implement EventSubscriber<T> class.
Make BindFunctionWith function visible to other modules.
Implement GetLoadTimingInfo in JsAsker class.
Stop allowing `electron.net` requests to be intercepted.
Implement V8 -> C++ conversion of net::HttpResponseHeaders.
Modify FillRequestDetails to pass headers dictionary.
Add fallbacks
:wrench: Rename the label
No need to add new methods to WebContentsPreferences
Do not accidentally change the behavior of did-change-theme-color
Code style fixes
pass on web_contents to properly handle devtools
fix devtools again
use smart pointer for paint_canvas
lint fix
fix datalist element popup position when menu is hidden
restructure code to use web_preferences if possible
lint fix
don't show the dummy window for the rest of the dialogs too on mac
set devtools window to visible to avoid a visual glitch on mac with osr window's devtools
don't show osr dummy window when dialog is shown on mac
lint fix
don't automatically show window when devtools is opened on mac
fix a bug that caused a crash when using an offscreen window with detached devtools, related to autofill popups
fix a bug where datalist elements wouldn't actually set the value of the input associated with them
:wrench: Update the script, too
:wrench: Use full version string
Link to the new docs translations
fix formatting in linux build instructions doc
fix link to crowdin
:wrench: Bring back —abi
:memo: Document setPermissionRequestHandler(null)
Update README.md
Add Korean Community
clean up remaining references to docs-translations content
updates from master
Decrease title size.
Add documentation to web-contents.md.
Update chromium-spec.js
Handle the possibility of unexpected logs.
Add console-message test.
Generate API and typescript file as artifact on CircleCI to make verifying changes easier
Forward declare the scrubber layout
:wrench: One commit per character is now hot
:wrench: Make this easier to read
Allow BrowserWindows to emit `console-message` events.
Add Jenkinsfile to enable rebuilds
:construction_worker: Let’s add a spec!
:wrench: Check `menu` for being falsy
Add Jenkinsfile to use Jenkins pipeline
fix(documentation): link in browserwindows.md
remove deprecated docs translations
add docs-translations deprecation README
Make ScrubberItem width dynamic
v1.8.2-beta.2
Remove unused `deprecate` var to make linter happy
Disable deprecation warning of `crashReported.setExtraParameter()`
a few changes as per code review comments ✨
empty commit for CI
:memo: Oh look, another typo
:memo: Add link to App User Model Id
:memo: One-character typo change
revert electron-download dependency to ^3.0.1
fix null value check
Upgrade electron-typescript-definitions to latest for electron/electron-typescript-definitions#80
make target branch name mandatory and specific ci job optional add it as an npm script `npm run mock-release -- TARGET_BRANCH`
fix circle config
add API flags to all other circle jobs
fix object serialization test issue
add some structural changes
skip headers and pdbs for fake release builds
kick ci
Deleted Korean Community
remove function invocation from crash test
derp.. why did I make a separate parse_args()
fix linting errors
modify upload script to allow uploading release assets to s3
make script to hit circle ci api point to build for release
switch from set to add in paramater test
remove deprecated tests
singletons that are retroactively turned into EventEmitters should call the EventEmitter ctor
wrap deprecation warning
remove setExtraParam from docs
docs typo fix
update deprecation warning
add new method and mark setExtraParameter for deprecation
update docs to reflect parameter method change
retriggerci
Light refactoring of the nativeImage module tests
Temporary disable "document.visibilityState/hidden" tests
:wrench: Add fixme
another try at fixing travis test
linting is important
convert app and browser spec to ES6
clean fixture and fix failing travis test
remove const from non-member function
add const and other small edits
remove pesky 'only'
complete GetParameters method & all tests passing
fixes and updates to GetParameters
:wrench: Lowercase
first attempt to add new GetParameters method to CrashReporter
:memo: Typo!
add crashReporter parameter tests
test build script super rough draft
fix two failing tests
extrapolate removeExtraParameter into new method
add new tests
:wrench: I can't believe this helps
:wrench: Don't call idleWakeupsPerSecond on Windows
[WIP] Upgrade more specs (#10945)
:memo: Add a line to the docs
:memo: Correct types
:memo: Document it
:construction_worker: Add a spec
Update to latest from libcc master
Update native-mate to pick up related changes
Cleanup per review comment
Make linter happy
Upstream good ideas from Muon
Notifications should emit close on close, not eventual GC
Definitely didn't forget to push the header file
Close the previous notification on multiple calls to show
Ensure the click event is only dispatched on ContentsClicked activation type
fix comment typo
stop leaving onlys there
fix shortcut spec error
update touch bar spec
upgrade system pref spec
upgrade screen spec
small tweak to process spec
small tweaks to global shortcut spec
update desktop capturer spec
update deprecations spec
update debugger spec
update crash reporter spec
update clipboard spec
remove stray only
migrate api-browser-view-spec to ES6
match earlier tests to ES6 later ones
Removed incorrect optional labels from tray.displayBalloon(options) docs
Update electron-download to version 4.1.0
base::UTF8ToWide --> base::FromUTF8Unsafe
remove unnecessary boolean
move away from wstring
changes from review
revert ipc lookup table
remove common sense comments
appropriately cast pointers to strings
combine homepath and homedrive into single line
use _wgetenv to get windows env variables
remove quotes and const replaces
fix standard issues
clean up remote
remove .only from spec
add a few more tests to api_menu_spec
:penguin: Don't wait for xdg-open to exit
remove  from spec
upgrade menu spec to ES6
:wrench: Ensure that -r isn’t considered interactive
update reviewed items
clean falsy statements
Apply escape analysis patch
convert to map and remove shift param
clean main process desktop_capturer
trying out parameterized builds in circle
appease linter gods
update desktop capturer and remove unnessary vars
Upstream Muon changes to avoid crashing
Add a little translation for zh-CN
clean up excess code from generateGroupId
don't reassign parameters in Menu.prototype.popup
abstract out switch case from Menu.prototype.insert
appease the linter overlords
remove excess code in delegate
refactor menuWillShow
significant cleanup; all tests still passing
clean up delegate
update to ES6
fixe grammar
initial port of things into a Menu class
Automate release (#10827)
clean up popup
clean up menuWillShow
clean up indexToInsertByPosition
refactor indexOfItemById
Update OSR with more details
Electron crashes if user clicks Dev Tools & Zoom options #10697
📝 Use separate entitlements for login helper
Implement login helper to manage login item in Mac App Store build
Add tests for fix described in #10793
v1.8.2-beta.1
according to https://github.com/electron/electron/pull/10670, update app.md
Updated online-offline-events.md
Updated online-offline-events.md
Updated online-offline-events.md
Update ipc-renderer.md
update docs to show usage of ipcRenderer.sendTo
Use real shared library names for symbol files
add error code to session.setCertificateVerifyProc
cpplint skip to run if dependencies has not been bootstrapped
updated docs
Applying changes requested by @deepak1556 after the review:
Add support for pdf in sub frames (https://github.com/electron/electron/issues/9192#issuecomment-335543866)
[docs] [tr-TR] Update README.md
Update install.js
:wrench: Don't be quiet on default loglevel
Revert official build
Add notification-action.md file in Chinese
Add notification.md file in Chinese
Add systemPreferences.removeUserDefault()
:memo: Updated with link to VS 2015
Add notification.md file in Chinese
Add basic specs
Follow style guide
Appease the linting overlords
Enable hsl shifting of named images
Create v8-development.md
Delete v8-development.md
Create crash-report.md
Create upload-blob.md
Create size.md
Create point.md
Create v8-development.md
Create updates.md
Do not throw if the named image can not be found
Document new nativeImage.createFromNamedImage method
Add nativeImage.createFromNamedImage API
Ensure that the touchbar's esape item can be set before setting it
Update build-instructions-linux.md
:wrench: String comparison
remove dummy check
Add did-attach-webview event
remove potential deprecation and fix app close
remove unused xdg setting
remove chrome check and change protocol handler
Use NSUserNotification identifiers to uniquely find the correct notification from CocoaNotification
remove a space from a comment wow thanks linter
slight refactor and lin cleanup
remove newline and add deprecation warning
:wrench: Linters gotta lint
:wrench: Add security warning
Update the documentation on the release process to reflect the new versioning policy.
remove the condition where release draft has to have a `prerelease` flag
fixed: trying to fix the build
:apple: skip tabbing category if macOS < Sierra
Add success message
Add logic to retry github uploads
order change reasons major, minor, patch
Update libchromiumcontent with official_build turned on
syntax updates and pointer conversion
add mouse-move event and click event position for tray
add more details to versioning docs
New release schedule proposal
add sh to code block
add missing backtick
add section on dist-tags
tweak versioning doc
document how we define stable
remove section on semver, as electron does not fit its mold
document prereleases
Update atom-shell-vs-node-webkit.md
Make sure test closes window
:memo: Translation of environment-variables.md to pt-br [ci skip]
:memo: Make a note in the docs
:wrench: Don't call GetIdleWakeupsPerSecond on Win
add xdg helper method
No need of example for such simple API
feat(NativeWindowMac): addTabbedWindow
add a null-pointer check before processing base::SupportsUserData::GetUserData
Add BrowserWindow.getOpacity for consistency
first pass at adding linux setAsDefaultProtocolClient
Update browser-window.md
add issue maintenance and closure information
Update CI information (#10644)
add utm source to outbound links
fix link behavior
improve command prompt styles
fix octicon alignment
make nav link text clickable
remove unused styles
make styles more consistent with website
make it roomy
:wrench: Allow dragging window to screen above menubar (for real)
chrome -> chromium
use relative path to electron
updates to probot config
add initial file for stale bot
convert to wstring for windows
consolidate code and rename for clarity
Add window opacity support
move overrides into the appropriate namespace
Bump to use large machine for arm64 build
remove unresolved external symbol
add function signature declaration
fix incorrect std namespacing
fix typo in comment
fix header and line length lint errors
update docs for new getPath() path
fix escape backslashes
fix string concat errors
add dir creation if none exists
add windows override path and cleanup linux
fix override path
appeasing the linter
add first go at linux log path override
add ability to access logs in getPath()
Bump v1.8.1
CircleCI updates (#10647)
dear god never run beautifier again
redesign and add versions/links
:wrench: Allow dragging over menubar
remove drag functions
first pass at reorganizing default usage
Simplify checking for NSFullScreenWindowMask
change wording
clarify bootstrapping command arg
make the @hubbers team own the .github directory
fix docs typo
Define V8_PROMISE_INTERNAL_FIELD_COUNT=1
add docs update for new api call
Update libchromiumcontent to fix crash in Node
change default to null
add unit test for getMenuItemById
:wrench: Don't drag fullscreen window
remove check on items instance
fix typos in releasing doc
stray semicolon fml
rewrite method with only id parameter
conform to linter standard
add first pass at getMenuItemById
Add --overwrite to the upload script
docs: How to re-upload binaries manually
Use same -ing form and remove trailing whitespaces
Add `string` to notification doc
:wrench: Ensure correct path
Stop sending resize event for minimized windows on Windows
Make BrowserView auto-resize relative to window size on Windows/Linux
spec: It is not certain which process starts first
spec: Do not assume which process exits first in singleton test
do not use globs
add CODEOWNERS file
Revert "PrinterInfo options object causes TypeScript error"
Change GitHub upload to use JS GitHub lib
:checkered_flag: Set duration for Windows 7 notifications based on Control Panel
add-clarification-about-main-process
spec: Add test case for app.makeSingleInstance
Create watcher when message loop is ready
Appease the linting gods
Refactor as per @zcbenz comments
Woops, how did that happen ;)
Move OnBrowserReady call to PreMainMessageLoopRun to account for timing issues on macOS
update shell.OpenItem to use NSWorkspace
zh-CN doc had a typo.
Remove non-existent attributes
set iconPosition as optional
fix lint
code improvement
use textContent instead innerHTML to remediateDOM based XSS vulnerbilities
Put npx as last option
Forget a #
Add npx command for node version 8.2.0 and later
Set secure schemes in native code
Bump node version number
Add support for css in content_scripts
Suppress the destroy() spec on all platforms
Style fixes
Updates documentation for Handoff related API.
Avoids deadlock in case NSUserActivityDelegate method start being called from main thread.
Adds synchronization logic to allow NSUserActivityDelegate to wait Javascript updating the NSUserActiity UserInfo if requested.
Requests updated user info data before each Handoff operation.
Exposes more Handoff related APIs to Electron.
Add options object
spec: The parent option should not affect show option
Styling fixes
using standard javascript
Update api-browser-window-spec.js
add the fix for showinactive
make sure setparentwindow only shows the window if already visible
fix for mac child windows so they honor show option
add new internal set parent window method
:art: Rename ambiguous simple_fullscreen_ variable to always_simple_fullscreen_
Rerun builds
docs: update web-request.md
Add CircleCI for Linux builds (#10344)
merge master into fix-fullscreen-with-resizable-flag.
:art: Track/restore original stylemask, rather than individual states.
style: fix the word incompatible in docs
add back the missing 'resourceType' property
fix lint-cpp
get webContentsId instead
 style: add uppercase
style: add link to when missing
fix lint-cpp
remove package-lock.json
first attempt to track the origin requesters of webRequest events
Update libcc to latest
:memo: make clear what simple fullscreen mode is
style: fix directory word in docs
Use Squirrel.Windows --checkForUpdate
:memo: Redirect dead link [ci skip]
Update coding-style.md
Make crashesDirectory optional
Mark filters as optional inside webRequest
add crashesDirectory to crash reporter options
more docs edit
Update release documentation to reflect new usage of `bump-version` script.
Add examples to make usage description clearer.
Bump v1.8.0
Bump v1.8.0
Implement moveToApplicationsFolder (#10142)
Removed obsolete `io.h` wrappers, included `atlbase.h` in `atom_main.cc`
fix mac ime crack
fix lint errors
change `process.versions.electron` to reflect suffixes in version name.
add dry run option
Update `bump-version.py` to handle prerelease versions
move issue template to .github directory
spec: Compare id instead of the object
Update ipc-renderer.md
spec: Do not test window positions
Revert "Revert "spec: Suppress the select-client-certificate test""
Revert "Revert "spec: Suppress the app.importCertificate test""
Revert "Revert "spec: Suppress the test that destroys WebContents in event listener""
Re-enabled debug mode
Add clarifications to the documentation
add sh to code fences
Close window in order from newer one on macOS
Change the parameter name for consistency
Update Chromium Upgrade docs
Update Chromium Upgrade docs
fix lint error
update browser-window.md
Add support for indicators in Ubuntu Gnome Session
fix compile error
Add accessibility setter to the app
:wrench: Respect the header
:wrench: Extend interface
use spaces instead of hard tabs for indentation and add the supported modules as a sub-list
add webFrame to sandboxed renderer
fix contextIsolation issue while webPreference sandbox is on
update web-content.md based on review
update docs
change backport branch creation steps
use nullptr instead of nullptr_t()
:hocho: Bonus colon
bump @types/node to 8
Add documentation for macOS accessibility
docs: add note about electron-updater
Pass dpiVertical and dpiHorizontal to print settings
:apple: Add macOS native tab methods to window API
Revert "Disable a failing test"
Verify arm64 builds in prerelease
Update breakpad for ia32/arm fix
Add arm64 task in travis ci
Add arm64 build support
Use 57 as node module version
:wrench: Linter fascism
link to updates guide from docs readme
tweak the updates guide
📝 Little cleanup.
Review CommentZ.
Add WebContents.getNativeView API
Revert "Disable a failing test"
return null when theme color is not found
Special attribute for macOS accessibility #7206
fix typo
Bump external binaries to 1.2.2
Rename soundName → sound.
Plumb in the macOS soundName property for notifications.
Removing try/catch
fix signature of <webview>.executeJavaScript
Update config.yml
Create config.yml
Use the latest libcc version with Chromium 59
Add example of using mouse forwarding.
Cleanup potential mouse forwarding resources when window is destroyed.
:wrench: Implement feedback
Made dialog message clear
lint
add newline
use an arrow function
implement a dialog in the download handler
Improved error logging
Add a converter for `nullptr_t`
fix some optional args docs
:apple: Add roles for macOS native tab menu items
Disable a failing test
Disable a failing test
Disable warnings in node.cc and string_bytes.cc
Upgrade node for windows build fixes
Upgrade to node 8.2.1
Downgrade to node 8.1.4 since 8.2.0 will be against v8 6.0
Upgrade node for version module change
Update text expectation for new --inspect-brk message
Upgrade to node 8.2.0
Lock pixels before calling `SkBitmap::getPixels` and copy bitmap row-wise in case (stride != width)
Try fix to boto on Trusty
Require sudo
Explicity use Precise for Travis CI
intialize WebTextCheckClient https://codereview.chromium.org/2791753003
Remove unneeded volumes and env
Only start xvfb when tests will be run
Simplify xvfb init script
Remove default
Add xvfb-init.sh to docker context
Use xvfb from container on CI
 Try always using DISPLAY=unix:99:0 on Linux CI
Use DISPLAY=:99.0 on Linux CI
Remove command logging
Extend libcc Dockerfile for Electron Linux build
Configure spec UI to run in docker container
Remove unneeded nodenv setup
Initial docker-based linux builds
Build with jessie sysroot on ARM
net: remove CryptoModule class
Use Jessie sysroot for building on amd64 and i386
re-enables OSR
removes unused autoresizelock from osrrwhv
Revert "Enable OSR"
Do not run `navigator.getUserMedia` related test on CI build machines
fixes bitmap to canvas conversion
adds compositor resize lock client implementation
Enable OSR
fixes offscreen rendering on macos
FIXME: enable_osr=0
Use kPointsPerInch instead of desired_dpi
Don't destroy menu delegate until OnMenuClosed fires
Register default layout provider
Grant the devtools access to the extension origins
Make download item drags look like bookmark
:shirt: Remove linter errors
Update CHROME_VERSION_STRING
The Blink Rename
The Blink Rename
Rename methods in autofill
Extend blink::WebTextCheckClient in atom::api::SpellCheckClient
Require explicit selection of traits for LazyInstance
Remove URLRequestJobFactory::IsHandledURL.
Replace x/y in WebMouseEvent with proper getters/setters
Don't call deprecated copyPixelsTo
Migrate base::TaskRunner from Closure to OnceClosure
Migrate base::TaskRunner from Closure to OnceClosure
Adds a basic offline check to InstallableManager.
Adds the ability for WebContentsDelegate to decide if event should be updated
WebMouseEvent coordinates are now fractional & private
Add EME support for new VP9 codec string in WebM.
Move PrefRegistrySimple to use unique_ptr<Value>
Add display::GetDisplayNearestView
Downloads: Added transient flag to download item and download database
Added last_access_time to DownloadItem and History DB
[downloads] Allow download target determination to indicate an error.
Make GetDisplayedNotifications asynchronous.
Moving LatencyInfo into a separate component.
Remove base::BinaryValue
Add X509CertificateBytes which uses CRYPTO_BUFFER instead of macOS-native certificate types.
Remove base::Value::CreateNullValue
Allow content embedder to set a cursor for RenderWidgetHost
Separate ContentSettingsClient out from LocalFrameClient
Remove base::StringValue
Remove desired DPI
The Blink Rename
Update clang revision to match Chromium 59.0.3071.104
Examples for events
Better wording about Now deployment
Full Windows section is back
Brought back Windows section
Improve development workflow with built libchromiumcontent
Add a callback option to `webContents.print`
update the updates doc
Revert "remove no-op preinstall script"
Make mouse forward option of setIgnoreMouseMessages and update documentation.
Set up legacy window subclass and mouse hook during setForwardMouseMessages. As opposed to when a legacy window is created/destroyed. This enables forwarding on a per-window basis.
:memo: Document simple fullscreen functionality [ci skip]
Add support for simple (pre-Lion) fullscreen on Mac OS
Mention that the app needs to check for updates
Indicate that Nuts supports private repositories
Cut down platform notices a little
Be clear about the usage example
Linked guide about implementing updates
Added guide for updates
remove no-op preinstall script
edit release on github after promoting to latest
:wrench: Spaces for the Spacelord
add more releasing tips
:wrench: Handle offset BrowserView
:wrench: Properly derive
:wrench: Make work with complex shapes
:wrench: Support older versions of macOS
:wrench: Draggable (using the window’s regions)
:wrench: Properly derive
:wrench: Make work with complex shapes
update prerelease to check for files on s3
Bump v1.7.6
:wrench: Support older versions of macOS
standardize
add a prerelease check
recommend fixing permissions over using sudo
:wrench: Draggable (using the window’s regions)
add more installation tips
restore links to translated READMEs
remove prebuilt readme in favor of top-level readme
update the readme
add an installation guide
use root README instead of the one for prebuilt
remove duplicate list of translations from readme
added comment to mention sk_tools_utils::copy_to
Revert "Do not use deprecated deepCopyTo"
End response and set status code for unexpected URLs
Revert "spec: Suppress the select-client-certificate test"
Revert "spec: Suppress the app.importCertificate test"
Revert "spec: Suppress the test that destroys WebContents in event listener"
Rollback debug mode changes
Ensure DesktopCapturers are destroyed when no longer needed.
document npm promotion
improve the releasing guide
:memo: Documentation for setForwardMouseMessages.
:checkered_flag: Add API to forward mouse messages. As opposed to the existing setIgnoreMouseEvents this call makes Chromium aware of mouse movements, allowing the user to stop forwarding according to movements in the webpage.
Parse --grep and --invert for mocha
spec: Suppress the select-client-certificate test
spec: Disable crashReporter tests for some CI machines
spec: Suppress the app.importCertificate test
spec: Enable passing -g to test.py
Notify net error asyncronously
spec: Suppress the test that destroys WebContents in event listener
Ignore all node_modules/ dirs
minor changes as per code review comments
remove package-lock from `/npm`
remove github authentication since it's not needed to access published release assets on gh
work with published release instead of draft release add beta/latest tag with `npm publish`
remove unnecessary tests & dependencies from `/npm`
update glossary entries for brightray, libcc, V8
fix lint errors
fix linting error
add final "integration test" before running npm publish on the prebuilt
spec: Always run crash-reporter at last
Terminate tests when renderer process crashed
Remove unneeded heap allocation
fixes 10128
Remove unneeded check but document why it is not there now
Create keyboard-shortcuts
Update with better instructions for building libchromiumcontent
improve linux build instructions
Removed mention of SegmentedControl in description
Indenting stuff
revert accidental overbeautification
appease the linter
Add header declarations in auto_updater
add onError with three params and move to atom-auto-updater
prefix autoupdater error with statuscode and domain
fix heading levels for class docs
fix previous merge conflict resolution for .gitignore
ignore node-inspect's npmrc
gitignore .env and .npmrc
sort gitignore alphabetically
nothing
Mark certain Notification options as optional
updates to the docs
Leak the Node environment when context is released
#10039 add BrowserView.fromId
Suppress assert dialog boxes when running CI tests
Enabled true debug mode
fix type in windows store guide
fix content scripts matches
Correct mkdir
Update the external binaries version
Make the status string shorter
Only update dbus menu when it has been changed
translate keyboard shortcuts doc to japanese
add installation advice to FAQ
add tests for npm install
Remove s
Mark treatPackageAsDirectory as mac only
:apple: Add treatPackageasDirectory as an option
Bump v1.7.5
Mark nativeWindowOpen as experimental
fix typo in macOS debugging doc
Always register closed listeners
Set preload script on opened windows
Only reset preferences when conversion succeeds
Add spec for reloading opened window cross-origin
Remove debug logging
Add specs for nativeWindowOpen inheritance and new-window support
Inherit enabled-sandbox in opened windows
Add spec for configuring web preferences from sandboxed new-window event
Map pending process id to webContents for frame host initiating navigation
Update web preferences when creating with existing webContents
Inherit nativeWindowOpen from parent window
Only assign opener when not using nativeWindowOpen
Use constants from content_switches.h
Revert "Suppress assert dialog boxes when running CI tests"
Revert "Enabled true debug mode"
Suppress assert dialog boxes when running CI tests
Enabled true debug mode
Update readme.md
Minor changes to match style, init variables
Do not use deprecated deepCopyTo
add a new spec for https://github.com/electron/electron/pull/10008
fix lint
add some minor fixes
Minor formatting changes to shell.openItem issue
:art:
always_show_title_text_in_full_screen -> fullscreen_window_title
Add filter descriptions for common accept types
Initialize level_ in initWithShell
fix a pdf-viewer's parsing logic, and this should resolve the related issue at https://github.com/electron/electron/issues/10007
Correct words in PT-BR
Add app.disableDomainBlockingFor3DAPIs()
script to publish electron to npm directly
Surface require errors so spec does not hang
check for secrets before git push and npm pack
Allow TypeScript definitions work with strictNullChecks
:art:
this code is not care a bubbling event
Recursively mkdir the parent directories
Change storage implementation to async
:shirt:
Use es6 string templating
Upgrade to electron/libchromiumcontent@8cfd08f84e4
One more correction
404 Error
add OSR to glossary
content_scripts[].matches use the URL without hash part
Per-extension storage
Use a file as Chrome Storage rather than localStorage
remove files no longer needed in /npm
Import electron-prebuilt history into npm folder
Add known issue to MAS submission guide
:white_check_mark: Forgot a describe.only
:white_check_mark: Remove already tested part
Oops
:white_check_mark: add tests for `BrowserWindow.addExtension`
:memo:
:memo: mixed devtools behavior with mixed sandbox
Introduce extensions management APIs indépendant of Dev Tools Extensions
:art: Make Notification getters const methods
:apple: Add subtitle to Notification properties
Remove OSR disabling
Don't run it statements when OSR is disabled
Update to Electron v1.7.4
Upgrade .d.ts file to 1.7.4
Bump v1.7.4
Mark mixed sandbox as macOS/Windows only
:shirt: Remove lint
Assert loaded state
Use pdf-loaded event in specs
Autorelease tracking area
:art:
Add location and keyboard modifiers to tray mouse events
Rename to mouse-leave for consistency with drag-leave
Upgrade to electron/pdf-viewer@beb36874a6b
FIXME: enable_osr=0
Skip "offscreen rendering" tests if OSR is not available
Add explicit expected value
Mark contents.setIgnoreMenuShortcuts as experimental
Add enable_osr build flag
Add finish helper to ensure connection
Send messages between app via socket connection
Put enableMixedSandbox before deprecation TODO
Mark app.enableMixedSandbox() as experimental
Remove unused require
Add spec for app.enableMixedSandbox()
Update notification PR as per feedback
document the return value of ipcRenderer.sendSync
fix crash reporter typo
Updated `libchromiumcontent` submodule
fixing build error
Remove increased timeout
Remove unused require
Adding enableMixedSandbox api
Verify --enable-sandbox/--no-sandbox command line
Add webContents.setIgnoreMenuShortcuts()
rename alwaysShowTitleTextInFullscreen to fullscreenWindowTitle
Expose argv to preload process object
add IME to glossary
isNotFirstInstance -> isSecondInstance
Mark silent/printBackground as optional
Tweak character limit description
Remove grunt-build-atom-shell
Recommend electron-forge in auto-updater, fix some Windows stuffs
recommend before-input-event in keyboard shortcuts tutorial
Refactor notification options
s/label/text
Document the reply / button compatibility state
Add support for notification actions on macOS
Updated `libchromiumcontent` submodule
Updated referenced command line flag.
Add process properties in lieu of command line options.
Remove `bash` from windows commands to prevent syntax highlighting errors (#1)
Adding docs
atom@github.com -> electron@github.com
fix typo in linux build instructions
:art:
Completing UTs
add alwaysShowTitleTextInFullscreen flag
Add link to German translation
Add German translation for README and Contributor Covenant
WIP: Adding UT
Use the isdigit helper
Change NSIS topic level from 2 to 3
not just a microsoft thing
Extra properties must be less than 63 characters
add CRT to glossary
:bug: store current level fix
Add titleBarStyle: 'hidden-inset' to planned breaking changes
mention ARM and FIXME in breaking changes doc
Add braces to if statement
Document webContents.focus()
Include VC runtime and UCRT in the Windows distribution
Use dynamic CRT in the release build
add mouse-enter and mouse-exit events for tray
Add FIXME link to #6828
Send cached visibility state when guest DOM is ready
Add spec for webview visibility change on show
:memo: Update zh-CN/windows-store-guide.md
:memo: Update ko-KR/windows-store-guide.md
:memo: Update id/windows-store-guide.md
:memo: Update windows-store-guide.md
Create app.md
Adding no-sandbox to non sandbox webcontents
:shirt: fix lint warning
:art: Use leave-full-screen event instead of setTimeout()
:art: Reuse existing function
remove unused includes
use lowercase for optional annotation
add integer note to each parameter
Make clearStorageData options object's property optional
Add 'All Files (*.*)' filter for <input> file dialog
Don't mutate the accelerator character wuth the shift key if it's a number
Add initial spec for ELECTRON_RUN_AS_NODE with --inspect-brk
app: add support for inspect/inspect-brk in forked node process
Upgrade crashpad for http status fix
Use Buffer.from instead of deprecated new Buffer
Add "New Tab" button for Native macOS Tabs
use latest standard-markdown
remove blank lines
use new Buffer.from
fix typo in jp docs
use `includes` instead of `indexOf`
Update rectangle.md (issue #9552)
add tray icon workaround for newer Ubuntu releases (fixes #9046)
lint error
Lint error
Indentation
enable-mixed-sandbox option
Update to Electron v1.7.3
Add electron.d.ts@1.7.3
Bump v1.7.3
link to cookie structure
add peak working set size comment
Upgrade to electron/libchromiumcontent@3d692b2280
:art: lint fix
add zoom behaviour code from chromium and make pdf viewer use manual zoom behaviour to match chromium
pass ref part of url to allow #page= for pdf viewer
:art:
Simplify custom window button positioning
Guard against null window like before
Disable minimize spec on Linux CI
Add visibilitystate test for showInactive
Add separate specs for hide/show/minimize visibilitychange events
Mention document.hidden in spec description
Remove unnecessary if check
Remove unused constant
Rename SemaphoreView to CustomWindowButtonView
Let Chromium manage `document.visibilityState` and `document.hidden`
Rebuild test modules when configuration starts with R
Load URL after registering listener
Move pushState spec chromium-spec with other history specs
Autorelease semaphore view
Mention customButtonsOnHover is for frameless windows
Doc customButtonsOnHover in frameless window guide
Add back hidden-inset as a deprecated option
Update docs to use hiddenInset
Add TODO for hidden-inset deprecation
Remove unused customWindowButtons switch
Autorelease tracking area
Switch to titleBarStyle for custom window buttons on hover
:art:
Document customWindowButtons option
Declare mouse inside variable in interface
Make custom window buttons an option
:art: Minor formatting tweaks
Removed commented code
Area near the top border in frameless window is clickable
:art:
Minor updates to focus note
:art:
change request version
Docs: Add requirement for `webContents.sendInputEvent()` to work.
:art: Add documentation
:art:code structure fix
Update menu.md
Update README.md
fix lint error
Enable sandbox on webview
bump ts linter with fixes for numeric keys
add typescript to the linting mix
Add return type to systemPreferences.isAeroGlassEnabled()
Use assert.fail for unexpected values
Run getGPUFeatureStatus spec on all platforms
Bump Node.JS version in .node-version
Remove test code
Coding style fixes
Remove unused generated_resources.h file
:art: code structure fix
:art: :white_check_mark: code comments and test for getMenuBarHeight function
Use base::DictionaryValue converter
Add initial getGPUFeatureStatus spec
Add app.getGPUFeatureStatus
Remove unused function
DRY up logic to check if native modules should be loaded
Add separate run script just to rebuild test modules
Add missing update_node_modules import
Add missing safe_mkdir import
Rebuild native modules used in specs on each CI run
Only rebuild test modules on non-Windows or release builds
Add option to rebuild test modules before running
Rebuild modules after installing
Allow headers directory to be specified on cli
Move npm helpers to lib/util
Don't build helpers or rebuild modules during bootstrap
Parse args in test.py
Remove runas and code no longer using it
Update implementation as per feedback
Docs : Add requirement for 'webContents.sendInputEvent()` to work.
Docs: Add `BrowserWindow` needs to be focused for `webContents.sendInputEvent()` to work.
Emit a close event
Remove OS specific implementations
Use NotificationPresenter - macOS
remove electron prefix
Add Electron prefixes.
Type definitions for getCPUUsage / getIOCounters
Add backticks to Object
Add backticks around return types
Update to Electron v1.7.2
Bump v1.7.2
Remove options to appease typescript definitions
Mark deviceName as optional
Upgrade typescript file to 1.7.2
Only assert GPU process on macOS
Add cross-origin frame webview spec
Add spec for cross-origin blockage
web-preferences -> webPreferences
Add spec for native window.open from iframe
Add webview example to nativeWindowOpen docs
Add comment about CreateNewGuestWindow origins
Add comment about disablePopups setting
Return null from native window.open when allowpopups is unset
Add failing spec for native window.open returning null without allowpopups
:art:
Add tests for more nativeWindowOpen events
Set allowpopups attribute in nativeWindow open specs
Co-locate nativeWindowOpen specs
Only forward events when nativeWindowOpen is set
Add new-window <webview> spec with nativeWindowOpen
Add same domain webview nativeWindowOpen spec
Implement BrowserPluginGuestDelegate::CreateNewGuestWindow for nativeWindowOpen
Add failing <webview> with nativeWindowOpen spec
Revert "protocol: use streaming interface between fetcher and requestjob"
:art:
Don't assert GPU process on Linux
Create prereleases by default
Store process type as int
:art:
Remove crashed render processes from metrics
:art: Minor formatting/doc changes
Upgrade to libchromiumcontent@94c5817
move popup related code to nativewindow
Enable crash reporter specs on Linux CI
Enable LIMIT_OUTPUT_IGNORE_SEGFAULTS on Linux CI
Use last selected directory when using default file name in dialog.showSaveDialog()
Update to Electron v1.6.11
Update webview-tag.md
Using process handle from RenderProcessHost
Remove .only
Adding deprecations
revert mistaken added brightray
Adding CPU & Memory metrics for App
Docs: Remove optional parameter for removeAllListeners.
Add -lcups on mac
Add mac_os tag to documentation
Add API to get top bar height on macOS
Remove page url check in `history.pushState`
Add test for #9468
switched to the more standard approach in this file
added force option in electron-download.
Upgrade to electron/libchromiumcontent@93c2e1877e2
various fixes for macos
Link with correct targets in toolchain.gypi
Revert "Don't run tests on Janky CI"
Only build against Jessie for arm64 arch
Delete mock.pdf after download completes
Extract common code into IsPreferenceEnabled method
Move preferences check to OnPdfResourceIntercepted
Add new test and enable plugins for existing tests
Suppress pdf plugin dispatch if plugins are disabled
Remove buffers setting in write spec
Throw error when non-Buffer specified instead of crashing
Remove buffers option since only a single is supported
Include map
Remove console.log
Tweak doc text
Rename buffer -> buffers
Add experimental
Add docs
Add buffer support in clipboard.write()
Add clipboard.writeBuffer
Upgrade libcc to electron/libchromiumcontent@a3cff0522
Obtain SHA-1 of libcc commit from submodule
Remove sample notification code
Update for the brightray move
Mark notification API as experimental
Add Notification API docs
Remove shell link validation, users should do this themselves
Basic linux impl
Code cleanup
Get image notifications working on Win7 + Win10
Support Windows 7 notifications from brightray
Initial semi-working windows implementation
macOS implementation of notifications in the main process
Upgrade libcc to electron/libchromiumcontent@a3cff0522
Add BrowserView to docs index
Don't run tests on Janky CI
Build with jessie sysroot image
Download debian jessie sysroot images
ci build fix
minor fixes and enable datalist elements in OSR
add ability to open popup on second click
:art: lint fix
add datalist element view
Tweak webviewTag option description
Add full prefix to main_delegate.h include
Remove extra newlines
Remove unneeded brightray folder from include dirs
Add missing brightray prefix
Remove lint from inspectable_web_contents_view_views.h/cc
Add memory include for std::unique_ptr
:art: Group includes
Add brightray prefix to include paths from within brightray
Remove exclusion of runtime/references rule
Remove unused includes
Remove 10.8 foundation_util workaround
Remove unused BRYApplication class
Use kIgnoreCertificateErrors from content_switches.h
Make isDefault a bool
Add printer info structure file
Add parameter name
:art:
Tweak print docs
printerList() -> getPrinters()
Use v8::ArrayBuffer::Allocator inside Node
Support `gio` as trash implementation
Assert pid after load finishes
atom-shell -> electron in node_release_urlbase
Default webviewTag to false
Remote stray ©
Mention preloadURL is in webPreferences
Add will-attach-webview advice to security.md
Add explicit spec for removing preload from webview
Inherit webviewTag setting from parent window
Add failing spec for webviewTag inheritance
Rename option to webviewTag and default to nodeIntegration value
Upgrade to electron/libchromiumcontent@ecc5298428a
Upgrade node for protocol from libcc
Set _debugWaitConnect on --inspect-brk
Remove unused test server
Bump node for inspector Windows fixes
Only define ICU constants in release builds
Convert arg string to utf8 on Windows
Update debug CLI flags
Make chrome instructions a list item
Update docs for new --inspect support
Start node inspector agent when --inspect is present
Build v8 inspector through ndoe
Upgrade node enable inspector target
Update to Electron v1.7.1
Update to electron.d.ts@1.7.1
Bump v1.7.1
Update to Electron v1.6.10
Update to electron.d.ts@1.6.10
Add test for #9387
Update README.md
:memo: fix typo docs-translations/id/tutorial/using-widevine-cdm-plugin.md and docs/tutorial/using-widevine-cdm-plugin.md from previous commit [ci skip]
:memo: translate to Indonesian using-widevine-cdm-plugin.md and windows-store-guide.md [ci skip]
:fire: ;
Assert PID is 0 with no URL
Return base::ProcessId
:shirt:
Update electron-typescript-definitions to latest version
:memo:Update documentation desktopCapturer to javascript[ci skip]
:memo:Update constraints for audio sharing[ci skip]
:memo:Update use of deprecated getUserMedia[ci skip]
:memo: document getOSProcessId()
Disable crashReporter specs on Linux CI
:white_check_mark: Add simple spec for getOSProcessId()
Doc --disk-cache-size
Remove unneeded HasSwitch check
fix line is > 80 characters long
support --disk-cache-size flag #290
Make docs for webview.findInPage and webContents.findInPage consistent
update osr specs
fixes not expected scale factor change
Clang-Format extension for Visual Studio Code
Use status code constant
protocol: provide default response code for custom request jobs
Remove unsupported debugger in node processes
fix osr window initial sizing
Remove non-functional node debugger usage
protocol: use streaming interface between fetcher and requestjob
Minor updates to example
Add 'will-prevent-unload' event.
fix NativeImage size hint crashing when image is created from path
add Indonesian translation of README.md – more to be translated on a later date
add @types/node
add npm scripts for convenience
bump electron-typescript-definitions version
Remove vendor\brightray prefix
Use correct .target_arch path
Remove unused bootstrap method
Add types
: -> -
Correct property name to pid
Update brightray references in doc translations
Update libcc paths to be in root vendor
:art: lint fix
cpplint brightray/ files
Update docs for new brightray location
Consolidate ignores
Move brightray tools into mains tools folder
Wire up build for new brightray location
Move brightray submodules to root vendor
Remove unused files
Remove brightray submodule
minor fix for macos
use computeSize64 instead of getSize
remove GetSizeForNewRenderView
don't store isolate_ in NativeImage and tune size hints
update native_mate and use the MarkHighMemoryUsage API to speed up garbage collection
resolve errors introduced during rebase
use outer webcontents for popups
use white gutter color and paint damage rects over when paint starts in software osr
lint fix :memo:
use bounds instead of bounds_in_pixel
add size hints to NativeImages to make node GC aware of the high amount of memory used by the instances
fix leaking of NativeImage instances
port CEF pr that speeds up and simplifies GPU rendering
fix black bars around popups and scaled images when using gpu rendering
adds offscreen renderer ipc message to disable external popups
adds ipc send to disable external popups on macos
call InvalidateBounds when popup updates
moves createviewfordwidget method to osrrwhv
fix mouse wheel event sending typo
add popup window bounds to damage_rect
lint fix
Add support for child and popup windows in OSR
Initial brightray import
Update to Electron v1.7.0
Update to electron.d.ts@1.7.0
Bump v1.7.0
Update NotifyObserversCertDBChanged call to take no arguments
Update to Electron v1.6.9
Update electron.d.ts for 1.6.9
Bump v1.6.9
create folders for translation work
Upgrade to Chrome 58.0.3029.110
let the typescript module do its own linting
use will-create-webview event
Use Node's memory allocator for ArrayBuffer
Add a test for `webcontents.printerList`.
Changing command line option name
coffee -> js
:art:
:memo: clarify dialog buttons blocking side effect
:memo: minor docs copy edit - add two words
fixing spec
Remove .only on spec
Add option to override webview security
PR 44648: Enabling creation on webview with node-integration disabled and raising events
Add Math.ceil to pageSize.height and pageSize.width to printToPDF() options to prevent error on display.
fix the tslint.json path
update electron.d.ts
use tsconfig file when linting electron.d.ts
update electron.d.ts
update electron.d.ts to 0.0.8
add electron.d.ts file and reference in package.json
Add Russian Telegram community
Is Google Chrome an open source browser?
CPU Usage requires process metrics to be preserved
Exposing cpu & io counters function similar to mem methods
convert var to const
Removing extra bool
GetIOCounters is not implemented on mac
Adding CPU and I/O metrics to process module
:art:
Assert memory info for all returned processes
Make pid an integer
Link to MemoryInfo structure
:art: Use snake case
:art:
Upgrade to Chrome 58.0.3029.96
Upgrade to 58.0.3029.96
Add docs and add isSelected arg
tslint electron.d.ts
Use nodedir option to specify local headers
Rebuild native modules during bootstrap
Build spec modules against locally generated node headers tarball
Add missing word
Change translation of `license` to `授權條款`
handle untrusted root as well as self-signed
:art:
preserve 46823f9
Update to Electron v1.6.8
Bump v1.6.8
Use actual Chromium l10n_util list in locales.md
Remove unused include/require statement
Use v8 to parse message as JSON
Add failing spec for invalid debugger message
Add more non-matching target origins
Use isSameOrigin helper when posting message
Add failing spec for targetOrigin handling
Add test to verify memory is released after sandboxed popup is closed
update turkish community link
add auto-invite for turkish community(en-readme)
Expose more atom_bindings.cc functions to sandbox
destroy browserView webContents asynchronously
destroy new window webContents asynchronously
remove page-title-updated workaround for #3380
add spec
invoke WebContentsDestroyed manually when destruction path is async
browser: make destruction of webContents async
Pass nativeWindowOpen flag to isolated init.js
Add test for nativeWindowOpen + contextIsolation
Split test HTML file into separate ones
tidy up docs
it's 2017 get with the times
underscore case all the things
Add mode prop to segmented touch bar control
Return mate::Dictionary instead of v8::value
Minor edits to example guide
Removing describe.only
fixing mac ut failure
Adding docs, specs and fixing object returned
API to get memory of all processes of the app
Update touch-bar.md
Update to Chrome 58.0.3029.81
Update to Chrome 58.0.3029.81
Update to Node v7.9.0
Automatically register secure schemes in renderer
There are a few more new values for ChangeCause
Don't use gzip when uploading crash reports
Update printing code
Update Singleton code
Use blink::SchemeRegistry over WebSecurityPolicy
Add gen/third_party/WebKit to include dirs
IsolateHolder API has been changed
ResourceHandler API has been changed
Update libcc to fix missing gen/cc headers
Upgrade to Chrome 58.0.3029.40
rework docs
focus on the self-signed certificate flow here
tighten up indenting
actually validate the chain before adding
Coerce offset to number in renderer process
Add spec for invalid window.history.go offset
Don't allow webPreferences to be overrideden in features string
Add spec for webPreferences in features string
Store frame to guests in map
Add specs for window.open frameName argument
 Convert targetOrigin to string in render process
Convert frameName/features to strings in render process
Add spec for window.open toString errors
Disable node integration in chrome-devtools: URLs
Add spec for chrome-devtools URL with no node integration
Document other inherited web preferences
Disable JavaScript on child when disabled on parent
Add failing spec for inheriting Javascript web preference
Enable setting javascript and contextIsolation via window.open
Extract script tags to renderer.js file
Removing #ifdef on endsession api
Removing #ifdef windows for endsession methods
change endsession event name to session-end
Don't run error event on Linux
Emit autoUpdater error directly as Error object
Add spec for remote autoUpdater error event
Log all crashes during specs
Convert message/title to strings in render process
Add spec for alert/confirm toString errors
Don't use document.write in default app
Minor wording tweaks
Wrap header names in backticks
Updated documentation on desktop notifications on Windows 7
clean up the code a bit
reload the current cert database if the certificate was added
Update faq.md
Rephrase note for resume method
Remove wm_state change
End session event on browser window
Bold note for emphasis
Stream test output on Windows CI
Mention downloading debugging tools for windows
Clarify requirements for resumable downloads
add some docs for Windows usage
and this is how we invoke the callback
and the order here matters apparently
coding style fixes
Update to Electron v1.3.15
Add root describe to be able to run whole file
Make note about sync webview calls in docs
Wait for close event instead of exit so stdout done
Group sheet event methods with other macOS methods
a first pass at the script to import the certificate for Windows
and use the same signature for Windows
stub the windows source file
Use app name in crash dir path on linux/macos
:art:
Restart crash service in each spec
Still call done when stop server function is null
Close server and connections after each spec
Increase timeout to 2 minutes
Remove extra space in description
Wait for full screen event before leaving kiosk mode
Disable media device specs on CI where they may not be available
Call done callback with Error
Consolidate window closing
Update to Electron v1.6.7
Bump v1.6.7
Add initial spec for cookies.flushStore
fixup! fixup! Adding cookie flush store api
fixup! Adding cookie flush store api
Adding cookie flush store api
Add button with icon to touch bar spec
Only read iconPosition when icon is present
Make iconPosition non-breaking by defaulting to overlay
add iconPosition property to touch bar buttons
Skip native addon test in Windows
:shirt: alphabetical order
Add OS process id to web-contents
Update libcc for electron/libchromiumcontent#285
Link with VideoToolbox.framework
Actually hide menubar area when menu is autohidden
:memo: Add docs tip about testing Touch Bar usage
A quick fix for crashing when closing devtools
Detach from devtools before destroying
Fill missing NetworkDelegate method
Add gen/third_party/WebKit to include dirs
base::WrapUnique has changed its API
ScopedPtrHashMap has been removed
Remove the ENABLE_WEBRTC define
Update libchromiumcontent to Chrome 58
Update Brightray for electron/brightray#289
Initialize wm::WMState on Windows as well
Add events to manage sheets of macOS BrowserWindow
update link to turkish quick-start
add turkish quick start file
Update protocol.md
Use const
Add SubSystem setting
Use MinimumRequiredVersion instead of argument
Add comment to subsystem linker option
Use Chrome default client inset handling
Update shell.md
Use base::FilePath
Avoid insecure nodeIntegration in example
Destroy BrowserViews after each test
Add support for BrowserView autoresizing
Remove MenuLayout in favor of NativeWindowViews::Layout
Implement initial, experimental BrowserView API
Upgrade brightray for Windows 7 notifications
add ability to set high memory usage, skipping the second round of GC callbacks
Add IsEmpty helper and remove GetInstance public usage
Add GetWindows helper that returns a vector
Use CloseAllWindows helper
Add DestroyAllWindows helper that uses vector copy
Add failing spec for app.exit with >2 windows
Always set NSScrollViewRubberbanding scroll bounce pref
Enable per-monitor DPI
add electron slack channel for turkish community
Tweak GitHub spelling
#9128: Removed unused dll from distribution.
Add information about dragging not working with Dev tools open
Define filter argument type for WebRequest methods
add turkish translation link to readme
add turkish readme file
fix link to electron faq
add translation files for application-distrubution and supported platforms
Link properties to class docs
Move AtomRenderFrameObserver creation to RendererClientBase.
Change AtomRenderFrameObserver.renderer_client_ type to RendererClientBase.
Make SetupMainWorldOverrides/isolated_world pure virtual.
Make DidCreateScriptContext/WillReleaseScriptContext pure virtual.
Move DidClearWindowObject into RendererClientBase.
Move AtomRenderFrameObserver into a separate module.
Wait until server closes in afterEach
Update to Electron v1.6.6
Bump v1.6.6
Create upload-raw-data.md
Create upload-file.md
Create upload-file-system.md
Create upload-data.md
Create upload-blob.md
Create thumbar-button.md
Create task.md
Create size.md
Create shortcut-details.md
Create segmented-control-segment.md
Create scrubber-item.md
Create remove-password.md
Create remove-client-certificate.md
Create rectangle.md
Create point.md
Create mime-typed-buffer.md
Create memory-usage-details.md
Create jump-list-item.md
Create jump-list-category.md
Create file-filter.md
Create display.md
Create desktop-capturer-source.md
Create crash-report.md
Create cookie.md
Create certificate.md
Create certificate-principal.md
Create bluetooth-device.md
Update README.md
:art:
Upgrade node for fork --eval cherry pick fix
Add failing spec for fork --eval message bug
Update accelerator.md
Update menu-item.md
Update menu.md
Track child web contents
Don't show BrowserWindow in test
Add test for native addon after reload
Improve RootWebContentsTracker
Update to Electron v1.4.16
Addressed review feedback
Changed local variable and parameter names to snake case style
Address cpplint issue ""public:" should be preceded by a blank line  [whitespace/blank_line] [3]"
Address cpplint issue "Constructors callable with one argument should be marked explicit.  [runtime/explicit] [5]"
Address cpplint issue "At least two spaces is best between code and comments  [whitespace/comments] [2]"
Address cpplint issue "DISALLOW_COPY_AND_ASSIGN should be the last thing in the class  [readability/constructors] [3]"
Address cpplint issue "public: should be indented +1 space inside class NotificationPresenterWin7  [whitespace/indent] [3]"
Address cpplint issue "Namespace should be terminated with "// namespace brightray"  [readability/namespace] [5]"
Address cpplint issue "An else should appear on the same line as the preceding }  [whitespace/newline] [4]"
Address cpplint issue "Using C-style cast.  Use reinterpret_cast<BYTE*>(...) instead  [readability/casting] [4]"
Address cpplint issue "Missing space before ( in if(  [whitespace/parens] [5]"
Address cpplint issue "{ should almost always be at the end of the previous line  [whitespace/braces] [4]"
Address cpplint issue "Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]"
Address cpplint issue "Found C++ system header after other header. Should be: toast.h, c system, c++ system, other.  [build/include_order] [4]"
Address cpplint issue "Include the directory when naming .h files  [build/include] [4]"
Address cpplint issue "Lines should be <= 80 characters long  [whitespace/line_length] [2]"
Changed member variable naming style to snake case
Use `NotificationPresenterWin7` on Windows 7
Added desktop notifications implementation for Windows 7 (and earlier)
Make `Notification` factory function a member of `NotificationPresenter` so that we can create different types of notifications based on runtime conditions.
Add better comments to ShouldCreateNewSiteInstance
Always create new SiteInstance on root WebContents
Pass RenderFrameHost to ShouldCreateNewSiteInstance
Append printed page to job
Restore delivering IPC messages to utility handlers
Guard against missing popover identifier
Use const references for params
Update as per feedback
Allow items to be assigned to multiple popovers
Store parent popover in popover touch bar items
Add spec for interaction event with escape item
Check that escape item is non-null before checking id
Support passing escape item to TouchBar constructor
Make escape item a property instead of setter
Handle change and interaction events on escape items
Update window via listener when escape item changes
Clear escape item
replaceEscapeItem -> setEscapeItem
Take const reference
:art:
Add escapeKeyReplacementItemIdentifier forward declaration
Make everything pointer like
Add smoke test for escape replacement
Add a method to set the escape identifier on the touch bar
Match args style of other IPC handlers
Add tests for setting remote property null/undefined
Wrap remote value being set as an arg
Add spec for remote setter with remote object
Add specs for showCertificateTrustDialog option errors
Make browser window optional
As you wish linter
Don't pass the result through
Put CertFromData in an anon namespace
Always create new site instance
Add test for opeing HTML file
Use point / size / rectangle structures consistently in API docs
:memo: Document that setApplicationMenu(null) has no effect on macOS
Revert "Reuse site instance only on window.open"
Appease our linty overlords
Use an options object for most of the params
Remove the intermediate function
No extra linebreak
Pass app path as command line argument
Use beforeEach/afterEach
Get rid of `intermediates` and rehydrate from `issuerCert`
Linebreak to keep the linter happy
Remove stale includes
Flesh out some docs
Use better iteration
Const ref that message
Conditionalize
Expose through the actual JS API too
 Parse setting response to surface thrown errors
Remove old unnecssary change on `app`
Move it into `dialog`
Handle the callback and cleanup properly
Do the callback & release dance
Add spec for remote setter not surfacing error
Upgrade brightray to latest
Do not add search paths in devtools
Search for module under the app directory
Add test for `require` to search under app dir
Remove extra spaces.
Update web-contents.md
Move title_ to InspectableWebContentsViewVies to get rid of cast.
Remove extra blank.
Don't use anonymous namespace in header file.
generate electron.d.ts during dist creation, not during build
add a convenience script for manually generating API JSON
generate and upload electron.d.ts with each release
Rename to make VS happy
Notify that the cert changed
Decode all the intermediates
Encode all the intermediates
Add missing finalUpdate prop
Move normalizeAccessKeys docs to right method
Update to Electron v1.6.5
Remove an extra blank line.
Slightly better conversion
Bump v1.6.5
Only define NSWindowTabbingModeDisallowed on pre-10.12
Maybe this is a valid conversion?
Lines should be <= 80 characters.
Errrrybody's a scoped_refptr now
Dummy out the certificate FromV8 converter
:art:
Add tests for `uploadToServer` option.
Pass `uploadToServer` to windows crash reporter
:memo: Document passing null to Menu.setApplicationMenu
Time out after 5 minutes
Upgrade libcc to latest master
Use correct dll name
Tweak logged messages
Add comment to codecs app script
Add script to verify ffmpeg without proprietary codecs
builds -> Support
Add test page to check for proprietary codecs
Upgrade libcc for ffmpeg linking fix
Link against the Security frameworks
Compile these lovely files
Expose the certificate trust panel as part of app
Show a certificate trust panel
Should override the virtual destructor.
Replace C-style casts with static_cast.
Check name directly instead of arguments length
Use prefix increment in for loops.
Correct type cast.
Move tabbingIdentifier out of webPreferences list
Make tabbing identifier var local
Add initial tabbingIdentifier spec
Remove 10.12 check handled by respondsToSelector
Use base::mac::NSToCast.
Remove redundant calls to smart pointer's get method.
NULL => nullptr
Replace "size()" with "empty()".
Avoid copy in for range loop.
Replace size() method with empty() when possible.
Remove unused using namespace declaration.
Add descriptions for each segmentStyle
Remove spaces around brackets
link to roles list from Menu doc
tighten up formatting of menu example
create a linkable heading for MenuItem roles
Clarification of the chromium sandbox support
Avoid unnecessary copy of parameters.
:art:
Enable native tabs on macOS
Revert "Disable Show Tab Bar menu item on macOS Sierrra"
Revert "Add forward declaration of NSWindow.allowsAutomaticWindowTabbing"
Empty objects within default menu replaced by nulls
Use GetDesktopEnvironment to determien desktop env
Updated MoveItemToTrash in platform_util_linux.cc
address review comments
[skip ci] add docs
net: allow controlling redirects
Use GetBoolean directly
Add comment why defaultPrevented = false
Change webContents -> options.webContents
Simplify example code
Update dialog.md
Make AtomSandboxedRendererClient a RendererClientBase subclass.
Extract base class from AtomRendererClient
Upgrade libcc for webview dnd fix
Expect count to be 0
Remove old sandbox option in list and mark as experimental
Disable flaky post navigation spec on AppVeyor
add getFileIcon method
Update web-contents.md
Add missing return type on executeJavaScript
Add missing property types on the process docs
Generic doc fixes
V8 dev resources (#9008)
fix docs for thumbnailSize
Initialize submodules in appveyor build
Added specs
Use ===
Add initial documentation for `sandbox` option.
Format line length to 80 instead of 100
:memo: Improve notification docs
Remove cpplint errors
:memo: Add note regarding dynamic addition/removal of menu items.
net: catch source stream creation failure for content encoding
Run cpplint on CI build
Ignore more Objective-C headers
Add .clang-format file
Move cpplint config to CPPLINT.cfg file
Use cpplint from depot_tools
Better preventDefault for ELECTRON_GUEST_WINDOW_MANAGER_INTERNAL_WINDOW_OPEN
Run the crash reporter specs with sandbox option.
Expose `crashReporter` to sandbox
Prevent browserify from leaking the require function
Make sandbox APIs more compatible with normal renderers
document resources for tracking chromium development
mention tilde
Update to Electron v1.6.4
Bump v1.6.4
#8881 - Display '&'  in MenuItem label
CommonWebContentsDelegate::DestroyWebContents => ResetManagedWebContents
Reuse existing event
Default async to false when object is specified
Reuse site instance only on window.open
node::Environment should be destroyed before AtomBindings
test: Node integration in web workers
docs: Multithreading
Add nodeIntegrationInWorker option
Make Archive thread safe
AtomBindings should not use default uv loop
WebWorkerObserver should be destroyed on exit
Create new uv loop in each worker
Converter for base::Callback is not thread safe
Correctly initialize Node environment in worker
Add a new type of NodeBindings
Update native_mate: Make Wrappable thread safe
Wrap ContextCreated with context scope
Insert node integrations into WebWorker
Add option to clean.py to only remove dist and out dirs
Use rendered language in both ready-to-show docs
Improve docs on window.open
Add docs for useNativeWindowOpen
Add spec for useNativeWindowOpen
Allow window.open on native-window-open enabled
Use native window.open implementation
Add AtomBrowserClient::IsRendererUsesNativeWindowOpen
Add WebContentsPreferences::IsNativeWindowOpenEnabled
destroy guest webcontents before embedder
Update README.md
Revert "Revert "close devtools web contents when available to trigger cleanup""
Create separate request context for geolocation service.   * Geolocation service cannot hold reference to browser context,     since it is destroyed at the end of everything and this will     confuse the shutdown path of browser context.   * Geolocation service run on its own thread.
:bug: #8919 - fix typo
:bug: #8919 - add new command to the docs
Mark touch bar apis with _Experimental_
Remove unused args param
Check toString after loading remote properties
Add spec for remote function with toString property
:art:
Change data -> format in clipboard docs
Add clipboard.readBuffer
Add initial spec for clipboard.readBuffer
Upgrade to libcc 44448acf
Revert "close devtools web contents when available to trigger cleanup"
Enable takeHeapSnapshot spec
Upgrade libcc for heap snapshot patch
Upgrade libcc to latest
:bug: Add toString support to remote functions
Use remote/fs to read preload script during sandboxed setup
Expose lib/renderer/api/remote.js to sandboxed renderer
Handle Buffer deserialization in sandboxed renderers
:bug: #8919 - add new command that cleans only out & dist dirs
:art:
highlightedStyle -> overlayStyle
Use NSZeroRect for scrubber frame
Use icon for consistency with other touch bar APIs
Add more non-default options to scrubber spec
Document more constructor options
Drop on prefix from property names
Remove unneeded long cast
Add more forward declarations for scrubber APIs
Update to Electron v1.3.14
fix linting
Update AppVeyor badge URL
Update AppVeyor badge URL
close devtools web contents when available to trigger cleanup
Add more options
make main process example shorter
update with a tree
Wrap at 80
Clarify remote require of relative modules
address review comments
spec: check if pdf has loaded
update submodules
update spec with new asset
Dont intercept pdf request for subframes     Will not work without OOPIF support
propagate zoom changes to pdf plugin
update spec
update libcc commit
code cleanup
build pdf resource in vendor/pdf_viewer
Remove grit submodule
StreamManager class is no longer required.   Stream lifetime is managed by webui
request for pdf resource from the webui
Convert "\" to "/" in file:// url
Do not store resource_path as FilePath
Print error when path is not found
handle reload api call from pdf ui
remove unused header
update submodules to latest
check if target stream is intercepted for correct request
update pdf_viewer to chrome 56.0.2924.87
update api changes
update libcc commit
update submodule
disable node integration for chrome scheme
add basic spec
view_id=>stream_id and add some code comments.
move constants to atom_constants.h
address review comments
use existing ipc message generator
update submodule
BINDINGS_POLICY_WEB_UI is not required
Get us compiling on macOS
Get us compiling on Win32
fix build config
fix failing download spec
enable pdf plugin by default
fix crash when pdf viewer is reloaded
code cleanup
setup strings for ui
listen to ipc messages from plugin to perform SaveAs op
move pdfviewer ui data source to separate file
update pdf_viewer submodule to use stream url
manage the lifetime of streams created
replace redundant mimetype helper with net utility
fix cpplint error
build pdf resources from submodule
add pdf webui as submodule
update pdf ui to work with webui
handle more messages from webui
create webui message handler
initialize webui with message handlers
remove grit
import pdf ui
browser: implement pdf renderer as webui
Guard against only specifying select or highlight handler
Add initial TouchBarScrubber spec
Remove unneeded include
Implement NSScrubberDataSource in AtomTouchBar
Add protocol methods
:art:
Take const references
Sort filenames
Add NSScrubber forward declarations
Add docs for TouchBarScrubbber
Initial NSScrubber implementation
updating README
renderer: reset plugin cache when render frame is created
Add translated CODE_OF_CONDUCT.md and README.md for spanish language.
Dynamically generate dependencies of browserify build actions
Set automatic via else block
Verify selectedIndex to prevent NSRangeException
Add initial TouchBarSegmentedControl spec
Add forward declaration for 10.12 API
fix markdown link
update versioning doc
Add docs for segmented control touch bar item
Add segmented control implementation
Remove lib/renderer/api/ipc-renderer-setup.js
Refactor sandboxed renderer init scripts
Make sandboxed ipcRenderer API compatible with non-sandboxed version
Expose builtin v8 modules to AtomSandboxedRendererClient
Refactor electron exports to keep module list in separate files
Pass `uploadToServer` parameter to linux crash reporter
Add more default values
Add spec for adding representation to existing image
Document nativeImage.addRepresentation(options)
Assert emptiness and size of built up images
Support adding representation from data URL
Add addRepresentation buffer support
Add initial NativeImage.addRepresentation specs
Remove unneeded done call
added default menu items for 'Edit' and 'Window' #2814
Updated docs.
Update browser-window.md
Link more touch bar params
Removed webrtcippolicy attribute from webview
Add WebRTCIPPolicy setting to webContents and webview
add spec
track host zoom levels with HostZoomMap
Use gin to manage FunctionTemplate
Make Wrappable thread safe
Add more scale factor specs
Add GetScaleFactorFromOptions helper
Document scale factor option
Support scale factor to buffer APIs
Remove hasRepresentation and just use 1x png result
Support toPNG on image without 1x representation
Add failing spec for toPNG with scale factor
Remove unused include
Add more hasRepresentation asserts
Support toDataURL without 1x representation
Add spec for 1x1 PNG data URL
Add failing toDataURL spec
Assign Promise.resolve to constant
Update to Electron v1.6.3
Bump v1.6.3
Mark TouchBar as experimental
Capitalize type
Update `ses.resolveProxy` return type
Mention userGesture default
Default hasUserGesture to false when null
Add failing spec for no callback
Ensure the callback is a function when executing JS
Incorporate feedback
Correcting typo
simply spec
listen for browser initiated pending nav entries too
update spec
webContents: defer url load when there is a pending navigation entry
fix TouchBarSpacer class name in doc
Add more explicit types to docs for TouchBar
identList -> identifiers
Always set properties in update calls
Add support for setting TouchBarLabel text color
Remove unused include
Drop nullable for consistency
Mention it only effects 10.12.1 with touch bar
Add clover to possible values
Check that window responds to touchBar selector for pre-10.12.1 compat
Add initial touch bar specs
Add initial touch bar docs
Make exported properties match class names
Make config optional
Add live popover icon property
Support icon property to match MenuItem
:art:
Match Popover casing in macOS APIs
Expose TouchBar on remote module
Use NSTouchBar itemForIdentifier to lookup existing item
Register item after validating
Use device NS colors consistently
Use array to create empty NSMutableArray
Only export TouchBar to start
Check that atom_touch_bar_ is set
Store ordered settings in AtomTouchBar
Add move live updating properties
Add support for spacer items
Support setting the initial/available colors
Add static helper to bind touch bar to window
Use SetTouchBar withe empty vector instead of DestroyTouchBar
Add window helpers to TouchBar class
Remove unused clear method
Rename instance variable maps
Use scoped_nsobject to match Chrome implementation
Remove unneeded includes
Use vector of dictionaries instead of mate::Arguments
Initial support for dynamic properties
Store event listeners in each TouchBar class
Update renamed variable
touch_bar_helper_ -> atom_touch_bar_
Rename to touch_bar_helper_ to differentiate from touchBar property
Reset helper when makeTouchBar is called
Use reference
touchBarFromMutatableArray -> touchBarFromItemIdentifiers
Use std::string ctor
Use base::SysUTF8ToNSString helper
hasTBDict -> hasItemWithID
Ignore objective-c header lint
Extract helper class to encapsulate touch bar items
Few memory and scope tweaks
Use skia color helpers
Return early when touchBar is null
Make touchBar readwrite/nullable
Ignore lint warnings in Objective-C header
Remove linter warnings
Revert default_app changes
Get compiling against 10.10 SDK
Use new NativeWindowObserver helper
Add updateConfig ability to other items
initial work on updating touch bar item config without rerender
Some docs for touch bar
Export the TouchBar items as their own props on the electron main export
Remove unused ident
Implement group item
Implement popOver item type (woo hoo it worked)
Change demo touchbar values
Add Slider item type and add options to the button type
Make label and colorpicker types work
Make dynamic buttons work along with click events
Initial TouchBar Magic
use updated docs linter with webview support
move platform labels to end of description for consistency
document arguments for webview methods
fix indentation of app.setLoginItemSettings arguments
denote webview process so linter will recognize it as an API
Moving data url test outside post navigation block. Trailing separator comment in the docs.
Changes based on review.
No more extra whitespace.
Set isolated world security origin
Add failing spec for fetch from isolated world
Avoid touch an Environemnt after it gets destroyed
Destroy node environment when a JS context in renderer is destroyed
async handles should be closed on exit
Clean up node environment on exit in main process
Reverting formatting changes made by clang format.
Update to Electron v1.6.2
Bump v1.6.2
use https URLs for images
link to default docs URL from default app nav
use https for all Electron website URLs
Issue #8735:Support base URL option to loadURL for data URLs
Mention variable name to update
Add initial spec for remote modules
Don't require browser process module from renderer
link to keyboard shortcuts from docs README
rename shortcuts to keyboard-shortcuts for clarity
Emit event after listener is registered
Forward webview visibility change events from browser process
Use const instead of var
Register visibility change listener when attached
lint
remove electron-localshortcut recommendation
:memo: Update link to Blink features.
describe local shortcuts before global
add section for browser window events
add a guide to keyboard shortcuts
Clarify docs for dialog.showMessageBox cancelId
Verify global.Buffer is undefined
Upgrade node for Buffer wrapper fix
Add failing spec for Buffer from preload required module
Support explicit cancelId on macOS
Popup pepper menu in owner browser window
Default to focused window whenever param is null/undefined
Check that window is non-null before accessing constructor prop
Remove unneeded AddRef/Release calls handled by base::Bind
Check render frame host before getting context
Remove unused include
 Extend RefCounted and add private destructor
Use callback dialog methods in RunFileChooser
remove the call to download_item_->Remove() on cancel
Update parameter prefix
update startDrag(item) doc
dont link libfxcrt.a on linux   It causes multiple definition error
address review comments
Link libfx_freetype.a on Mac OS.
link pdf libraries on linux with whole-archive option
link necessary pdf libraries
load pdf resource pak file
clarify actions that cause app.activate event to be emitted
Invoke close callback after itemSelected runs
Check that x is non-null
Make variables private instead of protected
:art:
Document menu.closePopup
Implement ClosePopupAt on Windows/Linux
Implement Menu.closePopup on Windows/Linux
Add spec for async Menu.popup
Add Menu.closePopup API on macOS
Move MenuItem spec into root describe
Add new menu.popup signature to planned breaking changes
Update menu.popup docs to take options object
Map async option to MenuRunner::ASYNC flag
Add async option to menu.popup
Add async menu.popup on Windows/Linux
Add async menu.popup on macOS
Add space after if
update setCertificateVerifyProc example
:memo: Add glossary.md to dutch translations part1
Update to Electron v1.6.1
Bump v1.6.1
add translations files for zh-CN
fixes os version check of vibrancy
add zoom specs based on standard protocols
set zoom changes for in page navigaitons
add basic webview zoom specs
address review comments
add temporary zoom api spec
use sync zoom api with guest view manager webpreferences
add zoom spec
fix signature of zoom getter apis
Upgrade native_mate
Use std functions instead of template_util
Support 5 argument member function
Add CI build through Electron
add translations files for zh-CN
Destroy icon manager after file thread is destroyed
Update icon loading API implementation
Smaller regex now that it's case insensitive
Case insensitive filepath
add translations files for zh-CN
Allow favicon.png to be on the root of any drive letter
Mark constructor as explicit
Use internal IsVisible method
Implement Activate instead of CanFocus
Just use visible state in CanFocus delegate
Update blur parent window spec
Add webContents.focus() spec
Include CanFocus on Windows and map to state
Use electron version in Chromedriver asset name
add zh-CN translations for offscreen-rendering.md
add zh-CN translations for electron-versioning.md
Optimize zh-CN language logic and grammar
Rename variable for compiler error
Update docs for non-offscreen invalidate
Remove unused variable
Use underscore variable name for consistency
:art: Minor formatting tweaks
:art:
Tweak setExtraParameter description
Add spec for updated extra parameters
autoSubmit -> uploadToServer
Run crash reporter specs on all platforms
Support removing extra parameters
Document setExtraParameter
Clear crash keys in InitBreakpad
Add setExtraParameter support on macOS
Correct , -> . typo
Remove _ prefix on binding methods
Call OnWindowScrollTouchEnd instead of Edge
Add Buffer typeof assertion
Upgrade node for require wrapper Buffer change
Remove Buffer global on load
Remove global Buffer mention now handled as require wrapper
Add declared const Buffer spec
Add spec for Buffer global
Upgrade brigthray for context crash fix
Disable the ActiveVerifier
only emit `download-item done` event once.
Add Invalidate method to NativeWindow and add Mac implementation
Cleanly shutdown browser context
Call content::WebContentsObserver first
Use dialog setter for consistency with other properties
Document the noResolveAliases property
Add support for a noResolveAliases property
Update brightray for electron/brightray#275.
Update libchromiumcontent: fix usage of private API in MAS build
webContents to zh-CN
Class: Tray to zh-CN
systemPreferences to zh-CN
session to zh-CN
protocol to -zh-CN
powerSaveBlocker to zh-CN
powerMonitor to zh-CN
Update session.md
Update web-contents.md
code cleanup
simply handling temporary zoom levels of webview
map webframe zoom api to use HostZoomMap
Add ZoomController to manager zoom changes for webcontents
use zoom factor webpreference option when required. * When setzoomlevel is not called for the host. * When there is no zoom preference for the host.
webContents: set zoom levels with HostZoomMap
Remove doc linter warnings
Remove untranslated files
:memo: Thai: translated accessibility.md
:memo: Thai: fix small line breaking, word warpping in glossary.md
:memo: Thai: translated glossary.md
:memo: Thai: translated styleguide.md
📝 Thai: translate the header ++
Update about.md
:memo: Thai: add English placeholders for files to be translated
:memo: Thai: add link from README.md to the translated version
:memo: Thai: added electron-faq.md
:memo: Thai: fully translated README.md
:memo: Thai: add prelude translation to README.md
Persist zoom levels per partition
create-dist: Adding argument to supress api docs generation.
[ci skip] Improve docs for `new-window` event
Improve docs for `will-attach-webview` event
Remove only call
:art: Use embedder var for clarity
Remove guest from will-attach-webview event
Adjust src from will-attach-webview
Emit attach params as well in event
Document will-attach-webview
new-webview -> will-attach-webview
Add new-webview event that can be prevented
Add new-webview specs
:art:
Document new settings
Add DialogSettings helper struct
Use CHROMEGTK_CALLBACK_0 and ignore gpointer data
Add support for checkbox with dialog.showMessageBox
Change qualifier of ShowSaveDialog() parameter
Add tests to check errors in parameters
Use process.env.electron_config_cache to get prepared zip file.
Change the default value of showsTagField to true
:memo: Update docs for new attributes in showOpenDialog()
:apple: Add additional options for Mac's open dialog
:memo: Update docs for new attributes in showSaveDialog()
:apple: Add additional options for Mac's save dialog
Class: MenuItem to zh-CN
Class: Menu to zh-CN
ipcMain to zh-CN
globalShortcut to zh-CN
dialog to zh-CN
contentTracing to zh-CN
BrowserWindow to zh-CN
Update libchromiumcontent to include debug symbols
autoUpdater to zh-CN
window.open Function to zh-cn
Allow multiple verification results
Add spec for rejecting using old signature
Use unique_ptr for passing VerifyRequestParams
Use object for verification request
Only document deprecation for now
Assert certificate error
Add spec for remote callback length
Use NetLogWithSource since BoundNetLog no longer exists
modify CertVerifier Class
hardcode module path in error message
Assert test.coffee outside of doesNotThrow
Add coffee-script dependency to specs
Upgrade node for require wrapper `this` fix
Add spec for registering/requiring Coffeescript
Convert indentation to spaces
Implement invalidate for non-offscreen mode
complete download-item translation docs
Disable getFileIcon specs on Linux CI
Large is only 48x48 on Linux
Tweak optional syntax
Document sizes
Tweak spec descriptions
Call done instead of skip
Update IconManager for Chrome 56 upgrade
Use isolate() method to get isolate
Properly skip large size test on macOS
Lint tests
Add tests
Put locker and handle scope to the top of the function. Remove unneeded header
Update docs
Normalize path
Image from icon node-style callback (#2)
Add docs
Use object for options
Make size optional
define icon loader for liunx as separate target
create iconmanager as singleton class and cleanup code (#1)
Add icon manager to browser process
Include proper header
Get it compiling, linking till fails though
Try my own class
Add icon fetching sources
Add callback converters
WIP
Use at least OS version checks
Make int converter helper an instance method
Use base::StringToInt() instead of std::stringstream
Bootstrap: change working directory when doing submodule updates.
Simplify the trick used for referencing symbols
Print enhancement: add webContents.printerList And a print option to select printer
Update to Electron v1.6.0
Bump v1.6.0
Update ISSUE_TEMPLATE.md
Upgrade node for modules version bump
Update libcc to e0da1e9
Update to Chrome 56.0.2924.87
Allow filter to use any scheme
Update Windows printing code to latest
There were new defaultPrintingSetting fields added
Update printing code to latest
Update libchromiumcontent to fix duplicate main functions
Link with xcb on Linux
icu's namespace has become icu_58
Work around the compilation error of v8_value_converter.cc
libgtk2ui => libgtkui
There is a new INSERTED type of ChangeCause
WebInspector has been split up
ScopedTempDir::path is replaced with GetPath
Update URLPattern to its latest version
PrintWebViewHelper is attached to RenderFrame
base::Bind now prevents the case with no arguments
Clear is replaced with ClearEntriesAddedWithin
Interface of crashpad_client.StartHandler has changed
WindowOpenDisposition has become enum class
insertText is deprecated
purgedSize and purgeableSize are removed by Chrome
web/WebInputEvent.h is moved to platform/WebInputEvent.h
Update URLRequestFetchJob
Update OffScreenRenderWidgetHostView
allowDisplayingInsecureContent is removed by Chrome
Update ResponsePiper
net::FtpProtocolHandler has changed its constructor
Update widevine_cdm_messages.h
--cipher-suite-blacklist is also removed
--ssl-version-fallback-min is removed by Chrome
Update AtomCertVerifier
SetupFilter is replaced with SetUpSourceStream
Update OffScreenOutputDevice
Update OffScreenWebContentsView
Update atom::Browser
FOR_EACH_OBSERVER is removed
Update AtomJavaScriptDialogManager
Update AtomResourceDispatcherHostDelegate
Deperecate AtomSecurityStateModelClient with SecurityStateTabHelper
Mac's version checking function has changed
Update api::WebContents
Namespace of ChangeCause has changed
WindowCapturer and ScreenCapturer are merged to DesktopCapturer
SimpleMenuModel::MenuClosed renamed to MenuWillClose
Signature of OnCreateWindow has changed
contentTracing.setWatchEvent/cancelWatchEvent is removed
Node also defines LIKELY
A few new V8 defines
enable_pepper_cdms is now a feature flag
Update crashpad to 556c4e4
Update to Chrome 56
Update to Electron v1.5.1
Bump v1.5.1
Use return value of GetProcessExecPath
Ensure backwards compatibility with getLoginItemSettings.
Clear Update.exe login item settings in afterEach
Update example to use new option keys
Add path and args to LoginItemSettings struct
Oh, browser_linux is a thing too.
Don't append "%1" in the Run registry key.
I will never appreciate standard.
Make sure the spec takes arguments into account.
Add a spec for this behavior on Windows.
Line Lengths!
Provide guidance in the docs.
This is rubbish let's pull the escape hatch.
Close to a working Squirrel shortcut.
First pass at auto-launch supporting Squirrel.
Print enhancement: add webContents.printerList And a print option to select printer
Add Converter<std::map<std::string, T>>::ToV8
Update to Chrome 56.0.2924.87
Add initial upgrading chrome checklist
Use content tracing after app ready
Add forcereload to MenuItem doc
Add forcereload menu item role
Use querySelector to make examples more portable
Change wording from on to present
Initialize color listener after app is ready
corrected typo
corrected typo
corrected typo
Add protocol constant
Add procotol client specs on Windows
Add support for FOS_CREATEPROMPT option
fix linting error
'before-input-event' is missing the code property #8471
Wrap params at 80 characters
Indent relativeLevel docs
use consistent headings
Add SECURITY.md
Use strictEqual for global variable asserts
Redeclare process/global as strings
Remove throws and assert object directly
Update the Node submodule to use the new module wrapper
Link with xcb on Linux
Link with fontsub.lib
Link with ncrypt.lib on Windows
use kCGMinimumWindowLevelKey to get the minimum level
Schedule function after executeJavaScript completes
Mention image cannot be empty on macOS
Require a non-empty drag image to prevent crash
Add specs for missing startDrag options
Upgrade node for new 7.4 patches and changes
Add spec for unhandledRejection event in main process
Add failing spec for uncaught main process errors
Remove linter warning
Clear interval before setting new one
Guard against destroyed window or web contents
Use helper function to show last dev tools panel
fix signature for SetAlwaysOnTop in native window views
fix js lint errors
libgtk2ui => libgtkui
spec to ensure an error is thrown when relativeLevel is set out of bounds
Only call getNativeHandle on macOS
Return empty buffers when image is empty
Add failing spec for empty image crashes
Check that sender is a WebContents instance
Move console.warn inside the helper method.
Assert that listener count decreases after a remove event.
Write a warning instead of crashing.
Argh.
Use EventEmitter public methods instead of _events.
Assert remote event names
Add a spec for the "renderer window closed" error.
Simplify.
Review CommentZ
L I N T I N G   P T   I I
L I N T I N G
Display more information about remote event crashes.
Run crash reporter server specs on CI
fix spec
throw an error for out of bounds window levels
WebInspector has been split up
Use template strings
Use crashesDirectory in example
Mention how to test
Capitalize Electron, fence as JS
:art:
Add StartInstance helper on CrashReporter
Add spec for crashing node process
Clean up testing code written for crash for children
Support crash reporting from child process in Windows
Getting rid of linting errors
Use mate::Dictionary::CreateEmpty
Group includes
Take options object in process.crashReporter.start
Add crashReporter property to process
Expose crash reporter start for child node processes
Finish spec when full screen is left
Wait for window to transition before leaving full screen
Upgrade to ffi@2.2.0
Update build doc to Xcode 8.2.1
Update to Electron v1.5.0
Bump v1.5.0
Upgrade libcc to b4dd78df
Link with CoreWLAN.framework
devtools_discovery and devtools_http_handler are part of content module now
Export boringssl's include dir to dependents
update documentation
implement relative window levels, closes #8153
Upgrade multiparty for os.tmpdir fix
add spec
Update PlatformNotificationService
URLRequestContenxtGetter now accepts task runner
Update InspectableWebContentsImpl
Update DevToolsNetworkUploadDataStream
There is no content::MEDIA_ENUMERATE_DEVICES anymore
Add a new include dir from boringssl
Update DevToolsNetworkTransaction
DevToolsDelegate is no longer needed
Signature of StartDataRequest has changed
devtools_discovery and devtools_http_handler are gone
Update libchromiumcontent to Chrome 56
Remove note in "did-fail-load" about redirect responses
<webview> Tag to zh-CN
File Object to zh-CN
Synopsis to zh-CN
Supported Chrome Command Line Switches to zh-CN
testing-on-headless-ci.md to zh-CN
emit did-fail-load event when the url char length exceeds limit
Link to Xcode 7.3.1 DMG
:memo: Add to security checklist about permission requests
Mention VS2015 Update 3 to match CI environment
Document use of Xcode 7.3.1 with 10.10 SDK for release builds
Upgrade to clang 278861
Update to Electron v1.4.15
Bump v1.4.15
Update node to pick up Windows compilation fix
Update .node-version to 7.4
Leak IsolateData since Environment is also leaked
Upgrade to node 7.4
Upgrade to latest libcc
Correct version in chrome_version.h
Update to latest libchromiumcontent
Update `brightray` and `crashpad`
Upgrade to Chrome 54.0.2840.101
Add basic inspectElement spec
:art:
Use SetNeedsBeginFrames from IPC handler
Implement GetScreenInfo
Implement SetNeedsBeginFrames
Only remove webview when non-null
Use === in specs
Call InspectElement directly on InspectableWebContents
Implement insertCSS on webFrame
Add failing spec for insertCSS
Add spec for denying perm requests when handler is cleared
Implement RequestPermissions using request handler
Add spec for midi without sysex permission
Update type to level in debugger message spec
Append form to body before submitting
Update to latest libchromiumcontent
Update libchromiumcontent for the rebase
Update files for Chrome 54 API changes
Update brightray and libchromiumcontent to Chrome 54
update atom_browser_client.h
WIP: chrome 54 update
Adjustments after migrating libchromiumcontent to GN
Upgrade libcc for webm muxer patch
do not call SetFullScreen in SetKiosk if it's already fullscreen mode
Restore thick frame full screen case
fix syntax and use relative path to electron-api.json target
set version arg when creating electron-api.json
Typo fixed
Updated docs for crash reporter to support child processes
Upgrade libcc to latest
Online/Offline Event Detection to zh-CN
Desktop Environment Integration to zh-CN
Quick Start to zh-CN
Update libchromiumcontent to latest
Adjustments after upgrading to Chromium 54
Adjust linked static libraries after migrating libchromiumcontent to GN
Use options constants for keys
Assert document visibility in main context
:art:
Include atom_natives after builtin includes
Only create isolated context in main frame
Access getter instead of variable
Mention accessing context in dev tools
:art:
Document implemented APIs at the top
Parse guestInstanceId and opener as ints
Remove use of now private guestId
Add back BrowserWindowProxy location property
Use internal open event name with fully parsed options
Use empty string for comparison
Remove unneeded this prefix
Move more functions to outer scope
Implement window overrides in main context
Enable context isolation on child windows
Set human readable context name
Assert context state after reload
Mention contextIsolation is experimental
Mention context isolation
Upgrade libcc for world context patch
Add spec for webview context isolation
Remove trailing comma
Document contextIsolation option
Set page variable using webFrame.executeJavaScript
Assert built-in prototype isolation
Rename option to contextIsolation
:art:
Use patch worldScriptContext to get isolated context
Upgrade libcc for worlds patch
:art: Use enum for world ids
Store context that API is running in to deliver IPC events
Add initial isolated world spec
Notify client each time main context is created
:art:
Support IPC messages in isolated context
Add world id constants
Setup isolated context from AtomRenderFrameObserver
Add isolated world web preference option
Add null guards
Match extension name to class name
Add initial support for loading into isolated world
Disable disableguestresize spec that times out on Travis
Add space after //
add tests to fullScreen and Kiosk
Save a fullScreen state for Kiosk mode
Add "context-menu" DOM event to <webview>
Upgrade brightray for dev tools fix
Properly handle borders for DPI > 100% on Windows
Reorder BrowserProcess constructor to avoid invalid memory
Switch to footer link syntax
use one line
Update std:move call to fix macOS compiler error
Add read-only version to planned 2.0 API
Add specs for process.versions.electron/chrome
Update native-mate to electron org
Support setting read-only property value
Add initial AppVeyor config
Build through Electron in cibuild and add Travis config
Remove linter errors
Remove unneeded nextTick and assert array
Destroy web contents when preventing default
Add failing spec for sandboxed window.open
Add Squirrel Release Server to the update server list.
create electron-api.json in dist, not as a side-effect of linting
Rename autoSubmit to uploadToServer in example
Update to Electron v1.4.14
Bump v1.4.14
Revert "Smooth corners for vibrancy view"
force attach devtools client when requested by inspectable webcontents
Upgrade brightray for network emulation fix
Add spec for resizable frameless window
Make start script executable
Add OK button to alert
Use correct param ordering in header file
Implement alert/confirm through dialog manager
printToPDF: `landscape` ignored if `@page` is used
indentation fix
interceptor should handle default values of download and upload throughput
Remove lint errors
Assert duplicate objects are supported
Track visited parents and null out cycles
Add failing spec for cycle in options
Use closeWindow helper
Access directly on options object
Document normalizeAccessKeys option
Add option to normalize dialog access keys
Using Widevine CDM Plugin to zh-CN
Using Pepper Flash Plugin to zh-CN
Using Selenium and WebDriver to zh-CN
adds autorelease to nsimage
adds mask image for smooth vibrant view corners
debugging-main-process-node-inspector to zh-CN
fix permissive C++ code (MSVC /permissive-)
Debugging the Main Process to zh-CN
Debugging the Main Process in node-inspector to zh-CN
Debugging the Main Process to zh-CN
Debugging the Main Process in VSCode to zh-CN
Debugging the Main Process to zh-CN
[ci skip] :memo: translate repl.md
[ci skip] :memo: copy repl.md source
Update README.md badge: Drop prebuilt
Update copyright year in LICENSE file
Using Native Node Modules to zh-CN
application-distribution to zh-CN
mac-app-store-submission-guide to zh-CN
mac-app-store-submission-guide to zh-CN
no actual change
. to 。
translated supported platforms to zh-CN
add glossary page link to readme
fix some expression
s/./。
docs-translations API process Translated into zh-CN
docs-translations API process Translated into zh-CN
Put optional label before dash
Link to offscreen rendering tutorial
fix some expression
Configure background throttling on RenderViewCreated callback
Support cursive/fantasy default font families
Add spec for closing from will-navigate listener
Don't load URL if web contents is destroyed
Remove semicolon
Add test for corrupt install error message
Get package name from folder path
Update index.js
[ci skip]update glossary.md translation  changes
Check that exit code was non-zero
err -> ignored
Inline platform variable
Add specs for error cases
Ignore npm-debug.log
Add getPath helper
Write path.txt after extraction
[ci skip]fixed glossary.md incorrect words
[ci skip]add glossary.md in Simplified Chinese docs
set webview spec timeout to three minutes
bump webview spec timeout to two minutes
remove unused webview fixture
more internal web-view reverting
revert renames of internal web-view stuff
replace all web-view code with webview
rename all web-view files to webview
Use localstorage in clearStorageData docs
Add override
Observe window and only use it when it is open
Move variables from development to production
[ci skip]fix chinese incorrect words
Change Quick Start link from absolute to relative
adds note to offscreen tutorial
use only one if statement
see also
link process annotations to glossary
add DMG and NSIS to glossary
lint to glossary from docs readme
:art:
fix heading level
define process and webview
WIP
[ci skip] fix link in screen docs
net: disallow cookies from the cookie store
add failing spec
creates offscreen window frameless
Use firstObject instead of objectAtIndex:0
Update to Electron v1.4.13
Bump v1.4.13
Add options to protocol.registerStandardSchemes docs
[ci skip]add net API Simplified Chinese translation
[ci skip]add systemPreferences API Simplified Chinese translation
Corrected some grammatical errors
fix relative link to CertificatePrincipal doc
Link to return class type
[ci skip]update electron-faq.md in  Simplified Chinese docs and fix a little words
do not recommend yarn
Create README.md
fix fullscreen, maximize, unmaximize
Commit...
Move details next to params
Add deprecated comment to scaleFactor parameter
Add createFromBuffer to planned breaking changes
Remove unused include
Move footer link to bottom
Add ToV8 converter for NativeWebKeyboardEvent
Use DCHECK instead of assert
Prevent input event from main process
Remove will-navigate spec
Upgrade brightray
Add before-input-event event for webContents (fixes #7586)
adds empty bitmap test for createFromBuffer
additional tests for createFromBuffer
moves bitmap parameters to options object
adds bitmap support to createFromBuffer
Remove trailing spaces
Create quick-start.md
Use != null to handle undefined
Test with some null/undefined windows
Use trace event with zero args
Make deviceIds const
Catch any close window errors
Upgrade brightray for media device salt fix
Remove linter errors
Remove unneeded empty checks
removed unused iostream include
remove unneeded deprecations couts
fix documentation for planned breaking changes
log deprecation notices for webframe
add deprecation notices to webframe
finish implementation of {secure:true} opt on protocol.registerStandardScehesm, and add working test
add {secure:} opt to protocol.registerStandardSchemes
:bug: Allow buttons to be optional in 'showMessageBox'
Add translations of broswer-window-proxy in korean docs
:memo: Add instructions for native modules using prebuild
Indent tree structure to fix Markdown list number rendering
Update to Electron v1.4.12
Update to Electron v1.4.12
Bump v1.4.12
Upgrade libcc for CT timebomb patch
Throw error when options object is invalid
fix spec
add docs
add spec
net: add api to set request flags for testing
session: api to clear auth cache
fix code style
add spec
add docs
session: add api to create interrupted downloads
:apple: Remove deprecated `dock` window level
:apple: Make sure no round corners for modal windows
Update to Electron v1.4.11
Bump v1.4.11
Record JavaScript calls in DevTools timeline on Node/ipc callback
create empty handle for null or undefined value
URLRequestFetchJob should report start error
protocol: support custom session with interceptHttpProtocol
fix code style
update docs
add spec
app: optionally pass cert with select-client-certificate event
add detail for the browserWindow argument in dialog docs
Add simple postData example
Update to Electron v1.3.13
Clarify modal windows being sheets on macOS
Don't show window
Guard against no devtools web contents
Add failing BrowserWindow.fromDevToolsWebContents spec
Add spec for BrowserWindow.fromWebContents
Upgrade libcc for Chrome 56 Linux key event fix
Clear interval before assert
Add missing r in variable name
Clear interval before destroying window
add spec
persist media device id salt across sessions
session: reset media device id salt when cookies are cleared
:art: Assign binding as const
Remove unused variable
Tweak cancelId docs
Coerce features to string
Implement window.alert/confirm/close in main process
Pass args array instead of arguments object
Add spec for render-view-deleted issue
Co-locate with other private methods
Don't clear until render view is deleted for process id
Don't write back to passed in options object
Remove unused method
Use spread syntax instead of apply
Add spec for error on removing all IPC listeners
Use spread syntax instead of function apply
buttonLabel -> Button label for consistency
Add initial dialog specs
fix typos
Adding French translations for the documentation (#8097)
Log build type
Add initial arm specific cibuild script
Remove unneeded timeout call
Add missing call to done
isCi -> isCI
Use 1 or 2 minute timeout for long specs
Default timeout to 30 seconds on CI and 10 seconds locally
Remove unneeded return
Run more crashReporter specs on CI
Add override to SetAutoHideCursor signature
Inline buttons and cancelId values
closeWindow in an afterEach block
Close window in an afterEach
Reuse window variable and only close from root afterEach
Assert single window from closeWindow helper
Don't use this.skip() since after hooks won't be run
Assert windows are not leaking across tests
Add systemPreferences.setUserDefault for macOS
Add BrowserWindow.setAutoHideCursor for macOS
Minor updates to crash reporter notes
Always link dom_keycode_converter
Remove include now included in parent header
Value should be true on non-macOS platforms
Add autoSubmit crashReporter option
used -> called
Mention setUploadToServer only has effect after start
Add spec for get/setUploadToServer
Remove deprecation warning for autoSubmit
shouldUpload --> uploadToServer
Update crash_reporter.cc
Use GetUploadsEnabled to return GetShouldUpload
shouldUpload API's are macOS only
Add docs for getShouldUpload
Rename autoUpload to shouldUpload
Use skip for setAppDetails spec
Add initial previewFile/closeFilePreview test
Tweak setAppDetails docs
Initialize app icon index to 0
:gift: Add 'win.closeFilePreview()'
Update to Electron v1.4.10
Bump v1.4.10
Update to Electron v1.3.12
Remove unintended returns
Access URL through webContents directly
Add more origin comparison specs
window.opener location should be webview src URL
override window.confirm in devtools
:memo: Clarify where Electron's resources directory can be found
Update web-frame docs
Update cookies docs
Update app docs
Update docs for dts again
Update to Electron v1.4.9
Clarifying crash reporter behviour in Mac
Bump v1.4.9
Remove unnecessary escape characters
Update to Electron v1.3.11
Always use guest contents for canAccessWindow check
Add failing specs window.opener from <webview> opened window
Sort by codes
fixes typo within readme
use new docs linter, remove cross-conf-env dep
Docs update
zh_TW translation of some tutorial document  (#8054)
Update to Electron v1.4.8
Bump v1.4.8
Move restore/unmaximize specs near state ones
Assert bounds when restoring
Try specs without setTimeout calls
Check runner.hasOnly for focused spec check
Remove .only call
Update to Electron v1.3.10
Add initial spec for zoom level limits
Add setZoomLevelLimits to planned breaking changes
Add 2.0 comment about setZoomLevelLimits
Expose setVisualZoomLevelLimits on webContents and <web-view>
Document webFrame.setVisualZoomLevelLimits as public
Export a setVisualZoomLevelLimits method
Add backticks around Info.plist
Throw an error when users attempt to remove all listeners from the IPC modules
Add spec for maximize restore positioning
Revert "incorrect position when restored from maximize-on-top-drag under Windows #7630"
Add failing spec for window size after restore
Update open-url docs to mention NSPrincipalClass
crash-reporter -> crashReporter
:memo:
Lint
Add new method to set layout-based zoom level limit
Add failing spec for unknown user defaults
Mention preferred size
:art:
intrinsicWidth -> pageWidth
Add spec for zoomToPageWidth
Remove unneeded proportion calculation
zoomToContentSize -> zoomToPageWidth
Document zoomToContentSize
Add support for zooming to content size
:memo: zh_TW of tutorial/accessibility.md
:memo: zh_TW translation of tutorial/about.md
I modified missed parameter in example.
use updated docs linter with required param parsing
Added documentation for BrowserWindow.setAppDetails
Added tests for BrowserWindow.setAppDetails
Include shell.h only for Windows
Added BrowserWindow.setAppDetails to set user model id, icon and relaunch command
Update formatting to prevent '[] ()' sequences (e.g. String[] (optional)), which breaks MD rendering on GitHub and hides the array indication
Update dialog.md
Add rpc error for ELECTRON_BROWSER_MEMBER_GET
Document reload and toggledevtools roles
Add toggledevtools menu item role
Add reload menu item role
Negate code as per node docs
Set errno on RPC error
Throw custom error when remote object is missing from registry
Update dialog.md
Remove semicolon
Also fix the Windows and Linux side of async openExternal
platform_util code should not involve V8 code
Simplify getting callback
Update docs
More general string for OSStatus
More readable
Callback uses (platform specific) error, with message
Linting
Include callback header
Remove redundant comment
Update shell openExternal docs (from review)
Remove redundant method
Shell openExternal can take optional callback (macOS)
Update to Electron v1.3.9
Update to Electron v1.4.7
reference node's process object
process object is available in renderer processes too
use unreleased linter
move menu constructor docs to top of file
fix some class headings
add description and process for BrowserWindow class
DownloadItem only needs one heading
fix UploadBlob heading
returns an instance, not the module
fix structure headings
move each API doc into its own file
Bump v1.4.7
Make scheme const
Use sender.id instead of sender.webContents.id
Don't log blocked messages when guestWindow is null
Always call done callback in before block
Print error messages
Do permission check when calling guest window methods
spec: Should check origin before accessing window.opener
Guard against missing members in setObjectMembers
Convert about credits to NSAttributedString
Memoize ELECTRON_NO_ASAR env var check
Pin electron-docs-linter to 1.14.1
Clarify docs on a `before-quit` behavior edge case
Assert certs further up the chain
Remove select-client-certificate issueCert assert
:art: Remove buildup asserts and just use assert.equal
Remove unnecessary ConvertToV8 calls.
Add assertions for new fields in existing specs.
Expose extra certificate information: full breakdown of issuer and subject principals, as well as full structure of intermediate issuer certificates.
Expose whole certificate chain to verify proc and certificate-error event.
Minor doc updates to setSize/disableguestresize
Assert expected height
[ci skip] Correct Linux limitation example
Allow webview guests to be resized manually
update app.md Chinese translation to latest version (#7973)
Update devtools extension spec for chrome.storage
Implement chrome.runtime.onMessage response callback
fix linting error
fix linting error
Use values directly since constants are 10.11+
link to more relevant yarn doc
make npm install instructions more prominent
Update electron-squirrel-startup link
disable accelerator when menu item is disabled
Add Redux DevTools Extension to support list
fix lint error
Mark postData as optional
Add specs for content type on POST forms
:art:
specify content type depending on post data
Remove quotes around key
uploadData => uploadRawData
fix build error
update docs
set default values in converter
update docs
add spec
add docs
fix js lint error
webContents: handle POST navigation for new windows
Move footer links to bottom
Add support remove / clear for chrome.storage
add process to contentTracing doc
update docs linter
Update menu.md
remote require could resolve to strings/numbers not just objects
Move crash-report object to it's own struct
More docs updates
First few docs made optional
:art:
autorelease NSVisualEffectView
adds test, adds view to AtomNSWindow and minor fixes
remove method transferred to set with null
doc fixes
little fix in docs
adds vibrancy effect for macos
fix linting error
log level is missing http
Docit
Update to version 1.2.0 of external frameworks.
Modify the error terms
Modify some translation errors
fix some translation problems
Update to Electron v1.4.6
Bump v1.4.6
Upgrade to Chrome 53.0.2785.143
add link for powerSaveBlocker | pt-br
Update translation
修改翻译不完善部分
add about: protocol handler
add failing spec
power-save-blocker.md file translation
Upgrade to Chrome 53.0.2785.143
fix review comments
Add copyright range of 2013-2016 to LICENSE
More license section clarification
Guard against attachedCallback firing while handling detachedCallback
Add failing spec for deleted guestinstance when moving webview
Only set size and load URL on first attach
Add failing spec for hide/show reload issue
Only remove guest from embedder when view id changes
Add failing spec for hide/show webview issue
Add logo clarification and standardized licensing language
Update symbols server URL
:art:
Only return when guestInstance is non-null
Use window close helper instead of destroying for coverage
Add resize event spec
Use spread operator
Do truthy check in if block
Return webContents directly
Use for/of and remove loop variables
Use ES6 style class for WebViewImpl
Destructure requires
Use template strings
Use let/const instead of var
Remove unneeded returns
Run browserify with --silent
Only call browserify when one of sandbox sources change
Update the korean docs up to 'ef9d8fe' commit.
Update more download URLs from atom-shell to electron
Add atom-shell URL to planned breaking changes
Update dist url to be electron instead of atom-shell
:art:
add a preamble
line up process annotations consistently
ask for more info in the issue template
document processes for APIs nested in parent docs
document process(es) for all APIs
:art: Remove extra returns
Use ES6 template strings, fix docs and remove _ERROR_ IPC event
Make executeJavaScript return a Promise so that caught errors can be sent to the caller
Add sync executeJavaScript test
Allow web frame methods to return async promises
toggle thick_frame_ along with resizable change
Add net document on README.md
Formatting JavaScript sample code.
document the process(es) in which APIs are available
use docs linter with lots of stuff npmignored
Update to Electron v1.4.5
Bump v1.4.5
Add missing `net` document entry.
Consolidate log files
Update the korean docs up to '379c347' commit. Swap two debugging tutorials with each other.
Trim: docs/api/net.md
use new docs linter with support for the new net APIs
merge changes from master
fix formatting of new net API doc
Add initial ready-to-show spec
Format URL passed to BrowserWindow.loadURL
Match example to node inspector doc
ZH_TW docs update  (#7797)
ZH_TW docs api/structures/cookie add (#7793)
Upgrade brigthray for notification crash fix
fixed a couple of typos
Call callback asynchronously to match original issue
Upgrade brightray for notification crash fix
Use equal/deepEqual for channel/args asserts
Add failing spec for notification permission crash
Quick fix up of net docs
[docs-translations/fr-FR]Correct some typos (double space deletion and 'de' to 'ne') in supported-platforms.md
address review comments
[docs-translations\fr-FR]Add of the tutorial folder and create supported-platforms.md in French
fix link to Mac debug instructions
Add dismiss notification guard on Linux
Add more guards around null notification
Added example usage for the default port
[ko] Update the korean docs up to '2006d64' commit.
Remove excess newlines
Add newlines and backticks
incorrect position when restored from maximize-on-top-drag under Windows #7630
fix for Window hidden behind taskbar after maximize #7672
Adding documentation about hidden-inset
Clean unnecessary sentences on web-contents.md
Update the korean docs up to '02a7094' commit.
Link Accelerator docs to globalShortcut module
update docs linter to add support for inline ENUM values
add zh-tw docs
Follow docs style guide for string ENUMS
Further clean up
Move `webPreferences` and `titleBarStyle` to the correct place in the docs
Minor formatting tweaks
filename -> displayName
Convention naming
last linter commit
more linter
linter
Changing names and memory leak fix
Linter
Using UTF8 String for filepath and filename
filename as Optional argument
Specifying macOS only method
Validation with linter
Removing extra line break
Removing unused header dependencies
Adding documentation
Using string from the std
Adding easy way to preview files
default template for PreviewFile
:memo: Update docs-translations/pt-BR/api/window-open.md [ci skip]
Update web-frame.md
Update the korean docs depend on the '1c7d5df' commit.
set notification close callback before requesting user permission
Document read/writeFindText
Add spec for read/write find text
Read/write find pasteboard text via IPC in renderer process
Add find text support to clipboard
Clarify the setMenuBarVisibility api
Add newlines before lists
Minor tweaks to webpreferences docs
Remove lint warnings
Use forEach and destructuring for parsing features
Add parse-features-strings.js
factor out parse-features-string.js
update docs linter to support parsing of function parameter types
Apply the changes till the 'a2a4462' commit.
Remove RegisterURLSchemeAsPrivileged lint error
Add tests for ses.setCertificateVerifyProc
Upgrade brighray for RequireCTDelegate
Apply the changes till the 'b2559d7' commit.
Focus window on menu bar click
[ci skip] Update docs/README.md to point to the right location of styleguide.md (#7697)
update the zh-CN docs README.md and find a error in en docs README.md (#7676)
Minor tweaks to flash frame section
Add flashframe link
net module: documenting the session property.
Documenting net module: fixing linter issues.
Documenting net module: various fixes.
print progress for proper loglevels
Formatting net documentation.
Documenting ClientRequest constructor options.
Documenting the login event.
Translate releasing
Update to Electron v1.3.8
Push after bumping
❌ 💲
Add note about Python HTTPS warning
Update to Electron v1.4.4
Document S3 creds
Add note about setting $ELECTRON_GITHUB_TOKEN
Bump v1.4.4
Documenting net module: various fixes.
Documenting net module: various fixes.
Documenting net module: formatting.
Documenting net module: various fixes.
Documenting net.IncomingMessage.
Documenting net.ClientRequest
📝 Small tweaks
bump-release -> bump-version
update webFrame.registerURLSchemeAsPrivileged docs to be more specific
	📝Remove ambiguous default value of nodeintegration
add options to webFrame.registerURLSchemeAsPrivileged
Adding net documentation skeleton.
update releasing
document the electron release process
Fire a11y event on touch screens using screen readers
:memo: Add flashFrame to desktop env integration
Adding gc tests: fixing a memory leak with C++ URLRequest objects.
session: exclude hosts from CT verification if they are handled by custom cert verifiers
allow embedder to provide RequireCTDelegate
Making test code run directly in main browser context to avoid rpc persistent handles.
Adding a stability test: non referenced, unused requests are collected without crash.
:memo: Link to README.md pt-br [ci skip]
fixes and tests for webview 'webpreferences' attr
add the 'webpreferences' attribute to webviews
browser: fix race in creation of default browser context by AtomAccessTokenStore
Code Cleanup
making the net module usable only after the ready event.
Add a note on Flash permissions to Troubleshooting
Formatting C++ code using ClangFormat.
Formatting C++ code using ClangFormat.
fixing space formatting issues.
Apply the changes till the '9367c76' commit.
Source -> DesktopCapturerSource
Rename dcs object
Add backticks around true/false values
Switch from node man to node --help
Update url (#7598)
Check harder before enabling Accessibility support
Word addition and revision for Readme,md
Update
Made relevant changes
Update online-offline-events.md
Changed link to Node docs in MD reference format
Added note about sending flags to Node.js, additional debug flags
Specifiy function param types in docs
Cleanup docs and standardize structs
Update standard to v8 to be inline with standard-markdown
Apply the changes on early Oct 13, 2016
Apply the changes about #7379 to ko_KR
Apply the changes
Apply the changes on Oct 12, 2016
Moving atom_bindings include to Windows block
Add basic test of spawned ELECTRON_RUN_AS_NODE process
Only expose process.log on Windows
Upgrade node for process logging fix patch
Reuse Log method
Expose process.log when running as node
Update devDependency Status URL
Use lower-case about panel option keys
Mention spawning with ELECTRON_RUN_AS_NODE
Only support ELECTRON_NO_ASAR in non browser/renderer processes
Add specs for ELECTRON_NO_ASAR env var
introduce ELECTRON_NO_ASAR
update docs linter with Rectangle structure fixes
Commenting some test code.
fixing linter issues.
Adding request/response piping tests.
Adding abort, webRequest interception and creation tests.
Adding HTTP request headers manipulation tests.
Adding chunked uploading test.
Adding basic http tests, fixing issues in ClientRequest constructor.
Temporary fix for the post data test.
Making the HTTP response a full-fledged Readable stream.
Adding net module spec file skeleton.
Adding systematic checks on the atom_request_ pointer as it may be reset to null.
Request/Response state simplification. Removing redundant state flags.
Caching response headers so that AtomURLRequest can be freed after the close event.
Implementing error, close, finish, abort events management.
Adding some implementation comments. Enforcing Chromium coding conventions.
Implementing abort workflow, emitting error events.
Adding support for upload chunked encoding.
Refactoring net module, adding a ClientRequest and IncomingMessage classes.
Some code cleaning.
Adding support for POST requests.
Implementing authentication callback.
Implementing URLRequest API, getting response body.
Adding URLResponse to emit response events, implementing status code.
Implement URLRequest::Delegate, handle thread sync.
Adding net module and URLRequest class.
update standard-markdown
use newer function syntax
standardize docs-translations by hand
standardize docs
lint docs-translations with standard-markdown
auto-standardize javascript in docs-translations
update to new standard-markdown with `--fix` feature
:memo: Improve grammar
:memo: Improve grammar
:memo: Adjust line wrap to `80`
:memo: Update Korean docs as upstream
remove badge count after each setBadgeCount test
clarify mocha test exclusion
fix links to testing docs
mention building before testing
unify testing docs for all platforms
remove badge after setBadgeCount test finishes
update test dependencies
add tips for testing
Remove const since SkColor is an int
Emit color-changed event on Windows
Doc systemPreferences.getColor
Remove duplicate colors
Add systemPreferences.getColor specs
Add systemPreferences.getColor on Windows
Add ToRGBHex color helper
Instead of gating the path shortening to MAS_BUILD, figure it out at runtime
Add a method to determine whether we're in the Apple sandbox
:memo: Translation of security.md to pt-BR [ci skip]
Update mac-app-store-submission-guide.md
Upgrade brightray for devtools dock state preference fix
Small fix to grammar in Build instructions (macOS)
Adds link to PyObjC installation instructions
Apply the changes on Oct 11, 2016
Apply changes about crash-reporter
use dock state from peferences when not set by embedder
fix Menu example
remove unused var
test that overrideProperty is not overwritten
inherit user-specific MenuItem properties more safely
Doc app.setAboutPanelOptions
Support setting about panel options
remove duplicated prop copying
Implement SysColorChangeListener directly on Windows
:art:
Doc inverted-color-scheme-changed event
Add inverted-color-scheme-changed event
Doc systemPreferences.isInvertedColorScheme
Add systemPreferences.isInvertedColorScheme API
:memo: clarify ignoring object files with electron-packager
Send initial keyDown before char event
Add char/keypress event tests
Assert key and code in keyup input event spec
Update expected key and code values
Set key and code on keyboard events
Add keydown sendInputEvent specs
update
Update brightray for #7503
Translate clang-format.md
:memo: Translation of faq.md to pt-BR [ci skip]
fix NativeImage link path
Rename bounds -> rectangle
Minor edits to clang-format guide
Add linux guard for SetGlobalAppName call
media: set the application name for audio streams shown in external apps
Add REPL doc in ko-KR and apply other changes
Add spec for window.open with webPreferences set to null
Default webPreferences to empty object always
sanitize MenuItem options
standardize
update docs-linter
Update docs for parsing
Update docs to follow the 'link first instance' standard
Move reused object structures to a standard structures folder
Update Node.js docs link and Windows note
Add newline before list
Pass crashes directory instead of product name and temp dir
Guard against app.getPath throwing with OS fallback
Add getPath specs
Sort includes
Wait for crash report to become available
Only call UTF8ToUTF16 on Windows
Use FilePath for crash reporter temp directory
temp_path -> temp_dir
Pass crashes directory to crash service process
Remove directory assert
Support calling getUploadedReports on unstarted crash reporter
Use valid Linux report id
Add missing temp_dir arg to override
Use app.getPath directly for temp path
Set productName in main process on Linux
Remove unused rimraf spec dependency
Mention crash report locations
DRY up temp directory logging
Add tests for crash reports in custom temp directory
:art: Use ES6 class, destructuring, and let/const
Use PathService for temp dir path for crashes
Update ko docs
Update ko docs
Modify docs to refelect the latest
set dock state using devtools dockController
Update to Electron v1.4.3
Add missing documentation
Add link to dutch translation in CONTRIBUTING.md
Bump v1.4.3
Lock the version of electron-docs-linter
Update brightray for #7332
remove unneeded new keyword
:memo: clang-format on Electron C++ code.
preserve custom properties passed to MenuItem constructor
Mark width/height as optional
Add spec for getAspectRatio
Resize images with preserve aspect ratio
bounds -> rect
Add tests of resizing/cropping an empty image
Document crop and resize
Add tests for cropping native images
Add initial crop method
Add specs for other create image helpers
:art: Use deepEqual asserts
Add native image resize tests
Add resize method to native image
Add /LARGEADDRESSAWARE to linker options (Windows)
Add newline before list
Update BrowserWindow's test to check additional features upon window.open() call
Translate CONTRIBUTING.md
Sets correct openerId in mergeBrowserWindowOptions() to give correct options to 'new-window' event handler
Rebase with recent changes
Updated the related documentation
'new-window' event handlers can return their window when default behavior is prevented
Add english version to start from
Create CONTRIBUTING.md
Update libchromiumcontent for #7334
Add clang-format config file.
Docs: Move buffer link to end of file
Docs: Correct image.getSize() type signature
:memo: Translation of build-instructions-osx.md to pt-br [ci skip]
add note about windows
:memo: Translation of synopsis.md to pt-br [ci skip]
Update the ko-KR docs related to the .
Format the docs according to style guide
Documented JavasScript API changes related to the fix for additional features processing
Updated required code to handle missing additional features for popup windows
Update libchromiumcontent for #7291
Link to electron instead of brightray_example
repl-docs: move file to tutorials
Remove unused ButtonListener
Focus submenu buttons when clicked
Update accessibility.md
Prevent undefined behavior when some Node Buffer objects are destroyed
add link to repl documentation
s/provides/provides a/
keep up with en version
add REPL documentation
:memo: Translation of accessibility.md to pt-BR [ci skip]
:memo: Translation of README.md to pt-BR [ci_skip]
:memo: Translation of CONTRIBUTING.md to pt-BR[ci skip]
Translation of CODE OF CONDUCT.md to pt-BR [ci skip]
:memo: Translation of file-object.md to pt-br [ci skip]
:memo: Translation of CONTRIBUTING.md to pt-br [ci skip]
Update year in LICENSE file
Update license in README file
Ignore already closed windows
Only begin sheet when no sheet parent
Ensure webviews get reset after spec finishes
openedWindow -> popupWindow
Explicitly close popup window
:art:
Update ko-KR/api/session.md
Update to Electron v1.4.2
Bump v1.4.2
Update CODE_OF_CONDUCT.md
Remove BOM to korean docs
Always drop SEM_NOGPFAULTERRORBOX flag from error mode (enables WER if crashReporter is not started)
Add forward declaration of NSWindow.allowsAutomaticWindowTabbing
Possible fix for issues seen on frameless window (Windows) when at 200%
browser: allow filesystem access for devtools scheme
Disable Show Tab Bar menu item on macOS Sierrra
Upgrade brightray for merged cookie delegate support
Remove unneeded locker and handle scope
Use separate session for cookies change event test
Document cookie changed event
Add specs for cookie changed event
Use scoped_refptr for cookie delegate
Add initial cookie changed event support
Upgrade brigthray for cookie monster delegate
Configure ink drops on menu bar buttons (#7397)
Update korean docs, according to most recent changes and other missing. (#7400)
:art:
Support configuring a cookie delegate
Upgrade brightray for CT crash fix
Use net::URLRequestContextBuilder::SetHttpNetworkSessionComponents helper
Remove unused instance variables
Set certificate transparency objects on URLRequestContextStorage
app.md - fix relaunch arg concat syntax
Add spec for BrowserWindow.setAlwaysOnTop
Link to window level macOS docs
Update docs to contain more specific return values
update electron-docs-linter
:art: Remove extra semicolon
Use default install script
Remove unneeded silent option
Upgrade to electron-download@3.0.1
Update quick-start.md
:penguin: :bug: Move the workaround to `lib/browser/init.js`
Update to Electron v1.3.7
Add some tests for "sandbox" option
Use the routing id on api::WebContents::GetID
Improve AtomSandboxedRendererClient to support preload scripts.
Embed setup bundle for preload scripts in sandboxed renderers.
Add browser side support for reading files from renderer.
Move code that defines ipcRenderer methods into another file.
Refactor the atom_js2c target to include javascript from multiple dirs.
Move EmitIPCEvent into AtomRenderViewObserver.
Expose atom_api_renderer_ipc module API
Add atom::AtomSandboxedRendererClient class
Add support for native chromium popups on sandboxed renderers.
Allow api::WebContents to fully wrap an existing content::WebContents.
Decouple api::Window initialization from api::WebContents construction.
Expose `--enable-sandbox` command-line switch.
Add "sandboxed" option to "webPreferences".
fix typo
tweak wording about complex objects
Change a word
Change some sentences after review
document lack of MAS support for login item APIs
Update changes to ko-KR/api
Update changes to ko-KR/api/app.md
Update changes to ko-KR/api/power-monitor.md
Update changes to ko-KR/api/screen.md
Update changes to ko-KR/api/web-contents.md
Remove some changes
Remove some changes
Update changes to ko-KR/api/web-contents.md
Update change to ko-KR/README.md
Update changes to web-view-tag.md
Update changes to browser-window.md
Update /ko-KR/api/system-preferences.md
Update changes to browser-window and correct a word
Update /ko-KR/styleguide.md
Update /ko-KR/styleguide.md
Update /ko-KR/api/system-preferences.md
Document the return values of all methods in the docs
Change some sentences more smoothly
Change some smoothly
Translate CODE_OF_CONDUCT and change a word as other docs, in korean
Update accessibility.md
Translate accessibility.md in korean
Change more smoothly
Replace changes as link of original docs
fixes software rendering on macos and small resizing addition
:penguin: :bug: Workaround for electron/electron#5050
Remove notice on top
Translate debug-instructinos-macos.md in korean
Translate additonally
Apply debugging-main-process changes in korean
add html doctype
add type to webview style tag
:memo: Update translation for faq.md
:memo: Add styleguide.md
:memo: Add faq.md
:memo: Add README.md
Compare against NSNormalWindowLevel in IsAlwaysOnTop
Ignore level when calling SetAlwaysOnTop on Widget
Add npm_config_target_arch to native module doc
Apply docs changes to korean docs
Update to Electron v1.4.1
Bump v1.4.1
Do not copy api.json on Windows
Split up debugging-main-process.md, add electron-inspector guide
electron-api.json is under out/ instead of out/R/
custom window level as string
custom window level docs
update docs
add spec
Upgrade Brigthray for CT log verifier fix
Mention cleaning on all three platforms
Add more failure asserts for nativeImage.createFromPath
Mention createFromPath failure cases
Mention mutating remote arrays and buffers
Allow custom window level when sending window to top
Mention using fallback text when writing bookmarks on Windows
Call AddLogs through unique pointer
Add verifiers for known logs
renderer: add content settings class for managing storage
Add missing sample codes
Remove incorrect letters
Translate remains in about.md
Translate some in about.md
Translate some in about.md
Translate some in about.md
Translate some in about.md
Translate some in about.md
Translate Core Philosophy in about.md
Translate LTS in about.md
Translate Update dependencies and Versioning in about.md
Translate some in aboud.md
Translate Releases in about.md
Modify some in about.md
Translate Core Team and Contributors in about.md
Translate Core Team and Contributors in about.md
Translate about/about electron in Korean
Update windows-store-guide.md in ko-KR docs
Update windows-store-guide.md in ko-KR docs
Update windows-store-guide.md in ko-KR docs
:art: standard
Add missing s in progress
Set parameter type to Object
add link to chromium API keys doc
document the GOOGLE_API_KEY env var
Store api_key_ on TokenLoadingJob
allow GOOGLE_API_KEY to be set in environment
modify some
modify some
Translate offscreen rendering in Korean
Add instruction for debugging main process in VSCode
link to the documentation styleguide
break up run-on sentence
website doesn't display docs for old versions any more
Update browser-window.md
Install silently on Travis
Remove trailing comma
Set quiet to true when loglevel is silent
Add AppVeyor badge
Only build master branch on Travis
npm ignore more meta files and tests
Add initial AppVeyor config
Build on node 0.10/0.12
:arrow_up: electron-download@3.0.0
Remove semicolons from spec
Add basic spec for getAccentColor
Alphabetical method ordering
Update docs
Add a systemPreferences API method to fetch the system ColorizationColor
binding -> bindings
:wrench: Ensure correct types for commandLine
:wrench: Ensure correct types for commandLine
spec: Suppress the download.pdf test on AppVeyor
Unsubscribe observer when OffScreenRenderWidgetHostView is destroyed
Revert electron/brightray#246
Revert "initialize crypto delegate in CookieStoreConfig"
:checkered_flag: Use Ctrl+Y as the accelerator of redo on Windows
Add killed argument for webContents.on("crashed") and app.on("gpu-process-crashed") events
Emit scroll-touch-edge event instead of changing the behavior of scroll-touch-begin/end
:memo: Update Windows Store Language
:white_check_mark: Test that replacement history entries don't break forward navigation.
Mark atom-shell version as deprecated
moves setsize call to osr renderwidgethostview
removes extra header
cleanup and adds docs
calling setsize only on osr windows
adds invalidate method and proper resizing
Only drop the SEM_NOGPFAULTERRORBOX flag when calling SetErrorMode (ELECTRON_DEFAULT_ERROR_MODE)
Link against crypt32.lib
initialize -> require
Update clang to r274142.
Mention not requiring module until app is ready
:art:
Rethrow binding errors
power-monitor -> powerMonitor
Update brightray for #7073
add save-to-disk disposition for new-window event
provide a default file name for downloads
add failing spec
reverts subscriber api
docs: Update Korean docs as upstream (#7211)
Update to Electron v1.4.0
Bump v1.4.0
Update to Chrome 53.0.2785.113
Update to Chrome 53.0.2785.113
Update to Electron v1.3.6
Don't load remote properties until they are accessed
Allow spec to be run multiple times in same runner
Only set members when members exist
Add failing spec for missing remote properties
Node module version should be 50
fix crash when using geolocation api with enableHighAccuracy option
Only emit finalUpdate found-in-page events
module search paths have changed
Update to Node 6.5.0
finalUpdate can be false
Upgrade to Chrome 53
Update to Electron v1.3.6
Bump v1.3.6
Update nodejs requirement for building on linux
Upload ARM assets without v7l suffix
initialization -> initializing
Mark app.isReady() as public
Add missing return value
Document shell.moveItemToTrash return value
Return boolean from shell.openItem
Return boolean from shell.showItemInFolder
fix indentation
:penguin: Add support for different trash implementations Make the trash implemantation in MoveItemToTrash selectable via an environment variable
Travis: test against Node >= 4 on Linux & OSX
Upgrade electron-download for checksum support
lint fix
updates tests
update docs
adds scale factor check and simplifies frame subscription
Document com.apple.security.network entitlements
added clarification for common Windows pitfalls
Add a guestinstance attribute to webviews reflecting their current guest instance ID and allowing moving a guest instance to a new webview.
wrap line to stay under 80 chars
fix indentation and rename function
generate electron-api.json and upload with release
use new electron-docs-linter with node 4 support
move linting work to electron-docs-linter's new CLI
move electron.json to docs/api.json
add electron.json (compiled to target 1.2.7 release)
add lint-docs script
SSL issue in links
Verify resolving URL via console-message event
=== -> !==
Use === for string comparison
Place resolve specs in correct outer block
Add specs for resolving attribute URLs
Don't resolve empty src/preload attribute values
Add failing specs for empty preload/src attribute
Use delta when scale factor is above 2 and odd
Use smart pointers in a couple places.
Use bounds helper in failing specs
Put actual value first
Use single assert bounds helper
Add scale factor assert helpers
Open about:blank when window.open is called with no URL
Add missing {}
Update productName default in docs
Set crashReporter productName in specs
Assert isTTY is undefined on Windows
Add section about Buffer global
Add spec for deleting Buffer global in preload
Remove unneeded return
Require Buffer explicitly instead of relying on global
Update Travis config to build on node 4.5.0
Add variables to options example
Add headings for each module
Move breaking changes doc to /docs
Add planned 2.0 API breakage
Mark detach option for 2.0 removal
simplify logic
fix a minor bug in navigation-controller where a string is used as an object
Target OS X 10.9
increase spec timeout
protocol: respect range header when reading from asar
update
add failing spec
Run pylint as part of main lint task
End sheet in parent when closing modal window
Assert read value instead of exception
Setup stdin in both processes on Windows
Add spec for accessing process.stdin
Allow LIBCHROMIUMCONTENT_COMMIT to be overridden from the environment
Add new network parameters needed by chrome53
change the option name to devTools
remove duplicate comment
Link to translations
Move translated project docs to docs-translations folder
Reset process.noAsar in finally block
Add failing spec for restoring noAsar value
Use const instead of var
Prevent missing Menu.buildFromTemplate function
Link with d3d11.lib
WebContents::InspectElement and WebContents::InspenctServiceWorker return immediately if DevTools is disabled
update browser-window.md to add disableDevTools option
Update libchromiumcontent to Chrome 53
remove unneeded whitespace
initialize disable_devtools_
use webPreferences to disable devtools
add option to disable devtools
Update docs.
initialize crypto delegate in CookieStoreConfig
Add support for titleBarStyle: 'hidden-inset' on OS X 10.9
Update to Electron v1.3.5
Create translate docs.
Bump v1.3.5
:memo: Make arch references more consistent
:memo: Add missing words
Update brightray submodule
Update libchromiumcontent
Update libchromiumcontent for #5665
create helper class to read blob data
Extend the custom Jump List API
Linter fascism.
Send notification userInfo to app.ready, on macOS.
fix ambiguous constructor call
fix docs and update specs
update api to work on public url and uuid
add docs
session: api to retrieve blob data from uuid
provide blob uuid from upload data
documents webContents.fromId
Test external value as send argument
Move IsExternal check to FromV8ValueImpl
Revert "exit tab fullscreen on destroy"
Default app exit code to 0
Add guide for force new page in print / printToPDF
Explicitly mention external objects
:art:
Add explicit test for IPC cycle detection
Add test for sending webContents instance over IPC
Re-enable DOM object over IPC asserts
Ignore external values when serializing
Add empty request error handler
Add regression spec for HTTP request over IPC
Convert specs to expect empty objects
Don't convert values with internal fields
Japanese font rendering in flash.
fix optional param spacing
Include windows.h first
exit tab fullscreen on destroy
Sort includes alphabetically
Enable alphabetical include order lint filter
Add separate platform examples for running electron
Only set _debugWaitConnect in main process
Remove v8debug flag no longer supported by node
Set process._debugWaitConnect with --debug-brk is specified
Add support for titleBarStyle hidden on macOS 10.9
Remove unused imports
Add v7l suffix to ARM build assets
Add helper for generating zip file names
capitalize
use the right bullet
add a description for BrowserWindowProxy
Document <webview>.setZoomFactor/Level as public
document some missing parameters
fix method heading level
Use path to non-existent file
Check download item save path before prompting
Add failing spec for unwanted save dialog
Correct misspelling of destroy in method name
document missing method parameters
Improve cycle detection in V8ValueConverter
Add failing spec for duplicate references over IPC
:art: Use const
Add spec for Int16Array remote parameter
Add missing space after comma
Don't serialize ArrayBuffer as Array
Add more remote Buffer specs
Add test of sending Buffer
Install node 4 on GitHub CI (#6948)
Only change window state when fullscreen is true
Minor doc edits and link to MDN page
use schemes from global instead of commandline
add spec and docs
register custom schemes to access files through filesystem api
Don't open dev tools if already initialized
Use correct GetToplevelWindow signature
Add spec for detached window crash
Access window through native view
Update to Electron v1.3.4
Bump v1.3.4
improve wording about class instantiation
Add tests for setting remote function properties
Support remote function keys and property descriptors
Use Proxy for accessing properties of remote function
Add helper for including function properties
Only register methods with members
Remove lint from fixtures
Support remote function properties
Add failing spec for remote static members
Add failing spec for remote function with properties
Add accessibility doc
:art: Go back to single line declaration
add missing require to win.loadURL doc
Document enableNetworkEmulation defaults
Default network values to 0.0
add a blockquote for every class
fix linting errors in docs
wrap MenuItem constructor in backticks
missing space in doc
Use scoped policy for micro tasks
spec: Add test case for fetch
fix windows command prompt error
Cleanup the usages of std::wstring
Do not add extra space when args is empty
Update devtools-extension.md
recommend url.format for file URLs
improve doc for loadURL
fixed grammar for 32bit
The checksum file needs to indicate that the files should be opened in binary mode
Use base::string16 and base::JoinString instead of custom methods
Return boolean instead of empty string when error occurs.  Update docs
docs: Correctly fomart titleBarStyle line
Show window when not on CI
Certificate data is now a string
source files DO have newlines at the end
Only call setCanSelectHiddenExtension for save dialogs
Assert first and last web contents types
Update docs re: electron module update
js → javascript
restore js label to orphan code blocks
bump standard-markdown for orphan array support
update standard-markdown to 1.2.0
Add test for header with . characters
Apply resolveURL when set a location of a window opened by window.open()
Pass args through correctly
Clarify defaults
Document the optional params
Allow client to specify EXE file and args to set as default handler
clear the storage for the webContentsId when the render view is deleted
don't convert header names to nested values fixes #6855
Add About Electron documentation
Ensure hidden windows don't have focused webContents
Add failing webContents.isFocused spec
Disable resize during any stylemask change
Add support for titleBarStyle: 'hidden' on OS X 10.9 (hidden-inset falls back to hidden)
Add failing spec for state changes resizing frameless window
Added `title` to `page-title-updated` return args
:memo: Rename `electron-prebuilt` to `electron` when install [ci skip]
don't convert a string to an array buffer
use MSG_ROUTING_NONE to initialize routing_id_ rather than 0
Remove an extra space in front of #.
:shirt: fix lint line length error in remote_object_freer
cache routing_id so we can look up the render_view in RunDestructor with no v8 calls
Save the thumbar buttons when setting them
Add README
Update brightray for #6755
webContents: fix value of contextMenu hasImageContents property
Move project-specific flags to common.gypi.
Don't show -Wvarargs warning in libuv.
Pass compilation on mac.
Upgrade clang to r269902.
Disable -Wundefined-var-template.
webFrame: enable privileged schemes to send CORS requests
Support build variable setting during bootstrap
Send isMainFrame as argument to did-navigate-in-page event
Update native_mate
Add clean npm run script
Clean libchromiumcontent/src
Add gperf and bison to package install commands
Add back empty handle string
Use ToDetailString for processing error message
:wrench: Use enum to declare ProgressState
Gitignore Visual Studio Files Adds Visual Studio and Visual Studio Code configuration files (auto-generated) to .gitignore.
Disable globalShortcut spec on Windows CI
Update to Electron v1.3.3
Bump v1.3.3
Add asserts for crash report APIs
Add spec for invalid capture options
Add initial global shortcut spec
Add initial power save blocker spec
Use gfx::Rect::ToRECT
Convert dip to screen rect for thumbnail clip
Style fixes for SetProgressBar
:wrench: Enable mode indication for setProgressBar
Add spec for quitAndInstall with no update on Windows
Use const instead of var
Keep update available flag set until restart
Add zoom items to menu template
:art: function -> =>
Add zoom menu item roles
Add spec for executeJavaScript DOM class prototype
Remove HasRealNamedCallbackProperty check
Add spec for sending document.location over IPC
Update brightray and libchromiumcontent to latest for #6769
Update libchromiumcontent to latest
Code cleanup for native_window_mac
Add BrowserWindow.prototype.setThumbnailToolTip
Document boolean return value of app.setAsDefaultProtocolClient + app.removeAsDefaultProtocolClient
Report app.setUserTasks success/failure
Add macOS specific speaking roles for MenuItem
Cleanup README
:apple: Send events as native macOS notifications
removes recycling of compositors on mac
Remove ignore files that are lint free
Use ATOM_COMMON_ATOM_VERSION_H_ as ifdef guar
:memo: Japanese: add build-instructions-linux.md [ci skip]
Add recovery suggestion to failure string
reverts AcceleratedWidgetMacNSView into offscreen class
added checks for painting_ when setting the outputdevice to active state and removed show/hide from start/stoppainting since during testing they caused transparent frames to appear when a window was set to paint again after stopping
moves AcceleratedWidgetMacNSView to NativeWindowMac
Use getBitmap in docs
Cleanup the code of getBitmap
update docs
add getBitmap to NativeImage
docs: Show how to use bitmap data directly
Emit NativeImage objects in paint event
Remove AtomBrowserContext::SetCookieableSchemes
Update brightray for #6708
Put definetion of GetCookieableSchemes in .cc to match other methods
Non-resizable windows should only maximizable on Mac
Always reset maximizable state
Add failing spec
Adjust y position if menu bar is visible
Use same position as setPosition test
Assert new content bounds after resize event
Add spec for BrowserWindow.setContentBounds
Doc BrowserWindow.setContentBounds
Set max size on window constraints
Use empty origin when only adjusting size
Add initial setContentBounds method
Use current content position when adjusting content size
Use bounds for converting window/content sizes
Use View::GetBoundsInScreen to compute content bounds
Set bounds size to content size
Document BrowserWindow.getContentBounds()
Assert after size through getContentBounds() API
Add BrowserWindow.getClientBounds API
omits setMouseDownCanMoveWindow call for OffScreenView
Also show the text on Windows and Linux
Show label for offscreen webview
allow delegate to provide cookieable schemes
register cookieable schemes with browser context
Show dummy view under offscreen mode
protocol: custom standard schemes should support cookies
Pass SkBitmap directly
Pass OnPaint callback in constructor
removed bpp (it can be calculated) fixed buffer size calculation (we actually send the whole image, not just the dirty part) removed the unnecessary resets and const now we use Copy instead of New
Upgrade to electabul@0.0.4
Upgrade to electabul@0.0.3
Remove unused spec modules
Use electabul to instrument and report coverage
Use once when calling done callback
Close windows instead of destroying them
Only prevent unload the first time it is attempted
Use once instead of on
Send coverage from chrome extension iframe
Save dev tools coverage when available
Save type in coverage filename
Use web contents id when pid is unavailable
Ignore windows with no URLs
Save coverage on beforeunload event
Save coverage data when browser windows are destroyed
Delete output lib folder before instrumenting
Add ability to run tests with coverage report
Add run script to generate instrumented code coverage .asar
Add helper to instrument electron.asar
Add initial code coverage reporting
browser: register extension scheme as web safe scheme
Mark isDestroyed as public on BrowserWindow/WebContents
renames to bytesPerPixel and use nullptr
docs: fix cwd description for shell.writeShortcutLink
:memo: delete no need text in japanese readme.md [ci skip]
:memo: build-instructions-osx.md [ci skip]
adds resets to destructor
Remove unnecessary comment + respondsToSelector for isSwipeTrackingFromScrollEventsEnabled implementation
Remove unneeded flag check
Remove unneeded libuv callback
fixes buffer size and adds pixel size to paint event
allow additional schemes that should support cookies
Revert Node's call of SetAutorunMicrotasks(false)
:memo: japanese: add atom-shell-vs-node-webkit.md [ci skip]
Remove the view-painted event
Cleanup atom_api_system_preferences_mac.mm
docs: Do not repeat processes for multiple times in menu.md
Add Offscreen Rendering to guides
Put constants in annoymouse namespace
Refactor osr_render_widget_host_view
Refactor osr_output_device
Refactor the code in atom_api_web_contents
Move osr related files to atom/browser/osr
Add IsSwipeTrackingFromScrollEventsEnabled in system prefs
Update menu.md
Revert unnecessary changes
Only enable kEnableBeginFrameScheduling for offscreen
docs: Use app.disableHardwareAcceleration() instead of --disable-gpu
spec: Remove duplicate code in tests
Revert the change on default_app
Update libchromiumcontent for offscreen patches
Use electron/brightray
Update to Electron v1.3.2
Bump v1.3.2
fixed typo in simplified chinese doc translation
:memo: Japanese: add coding-style.md [ci skip]
fixes linendings
Move Toggle Fullscreen to the bottom of the View menu
Add zooming commands to menu (default app)
fixes linting
restoring default app
Update libchromiumcontent: close #6668
Make WebContents inherit NavigationController
Set JavaScript APIs on prototype of WebContents
Set prototype of constructor directly
remove unneeded windows specific things
small fixes
Every native class now gets a name
Do not set constructor name in SetConstructor
Pass FunctionTemplate in BuildPrototype
Save the prototype of EventEmitter
Pass FunctionTemplate in BuildPrototype
Cleanup init.js
GetConstructor now returns FunctionTemplate
GetConstructor should init default constructor
All native objects have prototype now
Get rid of Constructor class
Remove the Constructor class
NewOperatorFactory is not used
Create objects from InstanceTemplate
Turn Wrappable into using FunctionTemplate
AttachAsUserData now can assume the existence of wrapper
Make InitWith virtual
Do not rely on Constructor to call Init
Call the user call Init in Constructor
docs: the callbacks
Swipe back/forward should respect system preferences
Document the async versions of getZoomFactor and getZoomLevel
Implement asynchronous versions of getZoomFactor and GetZoomLevel on the webContents object
Document the zoom methods that are mapped to the webContents object
Add isVisible() to app.dock
:memo: Japanese: add system-preferences.md [ci skip]
Must pass unicode to StringIO
Use spaces between checksum and filename
Do not put the upload logic in make_zip
adds transparency
Remove usages of linked_ptr
brightray commit update
docs: Improve ICO size list
Move the code to native
Do not garbage collect sessions
a possible fix for dragging
Use S3 as an intermediary store & merge shasum files before uploading to GitHub
Generate and upload checksums for released ZIPs to GitHub
add documentation for changes
fix UTF character sending as suggested by @zcbenz
fix toBUFFER naming issue and cursor-changed parameter order
add documentation for changes
fix UTF character sending as suggested by @zcbenz
fix toBUFFER naming issue and cursor-changed parameter order
paint toggling fix cleanup
fixes paint toggling, for real tho hopefully
filtering out offscreen webcontents in getAllWebcontents call
fixes paint toggling
Hide when not painting + cursor event fix
adds tests for osr
fix maximize restore issue caused by restore window size change
does linting
Typo fix
:memo: Japanese: add testing-on-headless-ci.md [ci skip]
Send some more data with the cursor-changed event
Adds option to get raw data from NativeImage
remove fpscounter, can be enabled from node
Send some more data with the cursor-changed event
Adds option to get raw data from NativeImage
adds tutorial
adds docs for osr
head part updates
handles destroyed renderer process
webcontentsview cleanup
api impl + cleanups + stability improvements
adds destructors + more code cleanup
revert framesubscription
update issue template to help avoid misfiled issues
update repo url in contributing.md
:memo: Add debugging instructions for macOS
cleaning up osr pt1
docs: fix argument types
Load 200 DPI resources on Linux
Load 200 DPI resources on Linux
Update ico to include sizes for 125% DPI
update brightray commit
add gl2chromium headers too direct dependent settings so we don't have to copy anymore : )
Return early when render widget host view is null
Tweak unknown platform error message
brightray url update
add a note about the name change
update links in readme intro
electron moved to the `electron` org
update docs to use new `electron` package name
clean up package.json
change npm package name to electron
Check that window is an EventDispatchingWindow
:memo: Add recommended sizes for Windows ICO icons
removed some junk and added offscreen webcontents type
update Prerequisites
Assert save path of download item
Make downloadItem.getSavePath() public
Use selected dialog path as item save path
fix for offscreen and added khronos
added khronos and fix for offscreen
api base
docs: Add click handler to tray window example
docs: Explain how to use highlightMode with BrowserWindow
docs: mention app ready event for DevTools Extension tutorial
cleans up class names
apply fixes
fixes software output device rendering
added onpaint to software path
software bump
adds tracing calls and osx fix
use electron nativewindow
docs: icon and iconIndex have to be set together
spec: shell.writeShortcutLink/readShortcutLink
docs: shell.writeShortcutLink/readShortcutLink
Throw exception when ReadShortcutLink failed
All fields are always returned
Initialize COM before using the API
Add shell.writeShortcutLink/readShortcutLink
Update to Electron v1.3.1
Bump v1.3.1
Update brightray for #6613
Use better regex to match spaces
Add TODO to deprecate boolean param
Correct typo in variable name
Update tray.setHighlightMode docs
Add option to always highlight the tray icon
Document webContents.copyImageAt(x,y)
Add webContents.copyImageAt
Change registered flag from InitBreakpad
Add spec for starting crash reporter twice
Only register code range once
standardize electron-capturer doc snippets
update standard-markdown to use linux-friendly local require statements
update to standard-markdown with node 0.10 support
update `npm run lint` to include docs
standardize all javascript blocks in English docs
add npm script to lint all javascript blocks in the docs using standard
updates impl to newer version of chromium
browser: initialize pref registry in brightray
bring back fix from #152
No more need to overwrite env when running update.py
Ignore CC and CXX in env
docs: Mention the --msvs
docs: x64 is the default build
Add --msvs parameter to bootstrap.py
Normalize string quotes in desktopCapturer docs
c++11 styling
Set page's font settings with system settings
Improve the desktopCapturer docs
Remove all spaces from potential appUserModelID as it isn't allowed by the spec
Move auto-updater-win to ES6
MenuItem: Use 'Close Window' for 'close' role label
resolves
Add spec for accessing normal files
Support paths as Buffers
Add asar-supported fs.accessSync implementation
removes logs and adds webcontentsview init
adds beginframe scheduling
Add asar-supported fs.access implementation
removes commented includes
breaks down osr api to separate files
using damage_rect
gpu acclereted osr added
speed(up) bump
speedup base
Use let/const instead of var
issue 6574 - Window position doesn't restore correctly
removes logs and adds webcontentsview init
Clarify the default arguments for popup
Use deepEqual for comparing type arrays
Use Buffer.from instead of deprecated new Buffer
Use ArrayBuffer.isView to detect Buffer and ArrayBuffer
spec: TypeArray should work in remote
Update brightray for #6156
Update to Electron v1.3.0
Bump v1.3.0
Copy a few more files to out dir
Load a few more pak files
Load a few more pak files
Update libchromiumcontent: fix linking error on Linux
Do not export symbols of OpenSSL on Windows
Do not throw exception when channel name is "error"
Add isTypedArray to Electron exports
use an instance-variable-style name for BrowserWindowProxy
fix wording in asar doc
use standard-style javascript in nativeImage doc
fix capitalization and headings for NativeImage class
:bug: Add support for TypedArrays in IPC.
allow delegate to handle file and color chooser
display.h needs to be used together with screen.h
adds beginframe scheduling
Replace OSX to macOS and Update references
documentation error pointed out in issue #6541
Bump node module version
Update to Chrome 52.0.2743.82
Avoid using CHECK in files using node headesr
CHECK is not needed
Use node::FreeEnvironment
There is no node_extern.h anymore
Update .node-version
Update to Electron v1.2.8
Add a few new node defines
Make use of some new Node config flags
Update node headers including
Update to Node 6.3.0
Bump v1.2.8
session: add proxyBypassRules option to setProxy api
Translate the comments
docs: Update nodeintegration of web-view-tag.md
removes commented includes
breaks down osr api to separate files
Update file-object.md
using damage_rect
Using base::HexEncode()
serial number in hex string
Redirect relaunch process's stdout to /dev/null
gpu acclereted osr added
add "view-painted" event to WebContent.
error link
Mention how to reset thumbnail to entire window
Upgrade brightray for undocked devtools focus fix
make Session::ClearStorageData's callback optional
added or to handle undefined
change platform path to match downloaded one
webContents is now a public module
Add require example for webContents
Update headings/sections to follow docs styleguide
Remove implicit references to Vista
denote return type on process memory info methods methods
Use common style to denote OS-specific arguments
Add properties as sub-list
Document setThumbnailClip
win: Add setThumbnailClip window API
Add autoUpdater getFeedURL specs
link to boilerplates
fix typo
mention electron-devtools-installer as an automated alternative
Add support for dropped text in osx
Sort contents by id for consistent ordering
Use let and const
Use getCurrentWebContents()
Add spec for webContents.getFocusedWebContents()
Add initial webContents spec
Document static webContents methods
Expose getAllWebContents() API
Remove unnecessary method
Add docs for getFeedURL
Add the getFeedURL API for macOS and Windows
Use CalculateFingerprint256()
webcontents: replace deprecated navigation observers
:art:
Doc webContents.isFocused
Sort filenames
Call role method on focused web contents
Add webContents.getFocusedWebContents()
Add webContents.isFocused()
fix a typo.
speed(up) bump
Add more detail attributes for certificate-error
Run background pages in separate partition
Add electron-id.slack.com for Indonesia
Update to Electron v1.2.7
clarify rules for documenting classes
fix heading levels on BrowserWindowProxy
:art:
fix heading levels in Menu doc
use h3/h4 for instance headings and children
:lipstick:
use consistent wording for instances
use h3/h4 for static method headings and methods
distinguish static methods from module methods
use h3/h4 for instance events headings and events
events -> instance events
:memo: minor style changes and typos
Move chromeExtensionHandler out of ready handler
spec: Test lifetime of sessions returned by session.fromPartition
spec: Name of tests should match docs
spec: session.defaultSession test case
docs: options of session.fromPartition
Add cache option for session
Add options to session.fromPartition
Move the ability to create BrowserContext to embedder
Hide in_memory parameter in native interface
Move check of isReady to native code
Move session-created event to app
Do not access default session before app is ready
Use Proxy to provide protocol APIs
Move the warning of registerStandardSchemes to native code
Bump v1.2.7
Remove lock in AtomCertVerifier
Create AtomCertVerifier on IO thread
Add spec for min/max window size
Initialize to constraints to current constraints
Return focus state of window web view when available
Execute command on devtools web contents when focused
Add standard edit items to text context menus
Use const instead of var
:memo: Update Korean docs as upstream
:memo: Update Korean docs as upstream
Add Browser namespace
Add Windows label to login items settings API
Enable login item spec on Windows
Enable LoginItemSettings converter on all platforms
Add initial windows login item implementation
Add get/setLoginItemSettings on all platforms
Move the ability to create BrowserContext to embedder
Remove some unneeded hacks for old OS X versions
Destroy the native tray in next tick
fix broken link
Add missing typeof
Remove linter warnings
IsAccessibilitySupportEnabled -> isAccessibilitySupportEnabled
Document accessibility support API
Add spec to verify app.isAccessibilitySupportEnabled return type
Update API to isAccessibilitySupportEnabled
Implement accessiblity change events on Windows
Implement accessiblity change events on mac
Add API for accessibility state and changes
Add more cycle tests
Only check arrays and objects for cycles
Remove linter errors
Maintain visted objects as a stack for cycle detection
Add more failing circular reference specs
Call includes directly on visited array
Return empty array for circular references
Add spec for circular array/object references
Remove unnecessary >= Windows Vista check
docs: electron-userland package tools links
Remove unneeded include
mac: Do not change window size when in fullscreen
The fullscreen button should always be hidden for frameless window
Suppress unresponsive event when showing menu
Replace DialogScope with UnresponsiveSuppressor
Update brightray for #2565
Allow devtools window to show on other screens
docs: showHiddenFiles
win: Use FOS_FORCESHOWHIDDEN for showHiddenFiles
gtk: Set show-hidden property for showHiddenFiles
mac: Add showHiddenFiles property for showOpenDialog
Auto-hide menubar when in fullscreen
win: Add toolbar type for BrowserWindow
Update brightray for #6423
Some manual change to for-ranged loop.
Don't use auto to static variables.
Don't change chromium_src files.
Modernize to C++11: Use for-range loop.
Modernize C++11: Use override.
Modernize to C++11: use override.
Modernize to C++11 : use auto.
Modernize to C++11: Use `auto` key to improve code readability and maintainability.
Modernize to C++11 : NULL => nullptr
Modernize to C++11: NULL => nullptr.
Remove unused using decls.
Remove unused using decls.
Remember bounds instead of size
Correctly handle unmaximize
Use setBounds to implement maximize for window without thickFrame
docs: thickFrame option
Add thickFrame option
Redirect relaunch process's stdout to /dev/null
Clear protocol handlers on exit
Improve text and link contrast ratio
Add lang attribute to html element
Rename file
Update README-ko.md
More concise wording
One alphabetical reordering in the docs/README.md
New title and one-liner
Remove API that is no longer available
:art:
Update login item API docs
Add was prefix to current launch settings
Update API to get/setLoginItemSettings
Add back getCurrentActivityType
:art:
Remove unneeded atom:: prefix
Update spec to request defualt accelerator from item
Only use default accelerator in Windows/Linux app menu
mac: Pass useDefaultAccelerator to getAcceleratorForCommandId
Move and rename FAQ
Use CommandOrControl+Q for quit role on Linux
Add quit menu item on Linux
Cleanup the code of SetBounds
Highlight the whole eval() override
Move size bounding logic to SetBounds
docs: Some dlls are not there anymore
Add parens about constructor
Use require to load package json
Mention open as hidden is manually configurable
Doc login item APIs
Combine launch and current status login item APIs
Add specs for login item APIs
Add API to add/remove app as login item
Add app.getLoginItemStatus API
Add anonymous class to exports and assert it
Use empty string constructor name when missing
Shrink icon using pngcrush
Add getLoginItemLaunchStatus API
Set default app window icon on Linux
Give menu a chance to handle key event before window
:art:
 Make OnCapturePageDone static
Defer to webContents docs
Update capturePage documentation for new location
Remove unused callback
Move capturePage to WebContents
Pass through empty constructor names
Add spec for constructor-less param
Update remote.js
Bound the target width and height of window when calling SetSize
Update to Electron v1.2.6
Update to Electron v1.2.6
Bump v1.2.6
modern.ie is no longer in use
Use require to load package.json instead of fs/JSON
speedup base
Force linking with MeasureFormat of icu
For hidden window focus() should do nothing
Initialize MaterialDesignController
Initialize MaterialDesignController
directWrite option is removed
spec: Ignore cache when testing protocol module
Do not use home cooked SkUserConfig.h
Update to API changes of Chrome 52
Upgrade to Chrome 52
Add BrowserContext::GetRequestContext
Update to API changes of V8 5.2
Make it possible to include SkUserConfig.h
Disable compiler warning caused by blink
Update to API changes of Chrome 52
Upgrade to Chrome 52
Reduce the scope of ScopedNestableTaskAllower
docs: Use <a> as example
docs: Dragging files out of the window
docs: webContents.startDrag(item)
win: Use drag_utils::CreateDragImageForFile
views: Implement webContents.startDrag
Support dragging multiple files
mac: Implement webContents.startDrag
docs: Add trailing period
Update docs to match style guide
Document possible getLocale returns values.  Closes #5363
Avoid calling GetWebContentsFromProcessID for twice
Avoid adding WebContentsAudioMuted method
Set window icon before showing window
Update to Chrome 51.0.2704.106
Update to Chrome Update to Chrome 51.0.2704.106
Update for reviews
Patch OnWebNotificationAllowed to mark notifications as silent in muted WebContents
Implement WebContenstAudioMuted in AtomBrowserClient
Tweak launcher note text
Use background page path instead of generated path
Don't use MatchesExtension for matching filters
spec: Suppress the session.protocol test
app.setBadgeCount should return boolean
Override the Notification API constructor to create silent notifications when the webContents is muted
docs: app.setBadgeCount
mac: Implement app.setBadgeCount
conjunctions don't have to be capitalized
Use `*` instead of `-` for lists
Update atom-shell-vs-node-webkit.md
Support background.page in extension manifest
:memo: Update Korean docs as upstream
Use nullptr comparisons
Use set context menu when param is not specified
add specs for app.launcher api
Update renamed nativeImage APIs
Add additional method isUnityRunning, fix multiple typos in docs
Add ifdef for property, which should only be availabe on Linux
Rename the unityLauncher api to launcher and make it available on linux in general. + Document it only works on ubuntu
:memo: docs for unity launcher badge api
Implement libunity launcher badge counter to be set via electron, fixes #4193
:memo: Update Korean docs as upstream
Update buffer length asserts
:art:
Remove standard linter warnings
Add WebInspector as global
Set browser env in specs
change into spec directory before running standard
Upgrade to standard 7.1.2+
Tweak cookie set failure message and add spec
Update key to be httpOnly instead of session
Publish Windows PDBs to allow debugging without Symbol server
word correction
:memo: Update Korean docs as upstream
Invoke callback instead of returning
Add failing spec for no specified storage keys
Add spec for valid .ico file
Add assert for non-existent .ico
word correction
link to the translation
link correction
Add chrome.storage.local
Translated: power-monitor.md
broken link (404)
Portuguese error
Update docs-translations/zh-CN/api/shell.md
spec: Make beginFrameSubscription test more reliable
Cleanup code of beginFrameSubscription
damaged -> dirty rename, fixed misc issues, changed signature, updated docs and added tests
Execute click handlers for top level menu items
read/writeBookmark is not implemented on Linux
minor wording changes and tweaks
Tweak return value description
Add assertions for no available bookmark
Mention empty strings
Remove unsupported type
Document clipboard bookmark support
Add missing rtf key
Add bookmark key to clipboard.write
Add read/writeBookmark spec
Support reading/writing bookmarks to clipboard
Add link to Boolean
Use more lists
Minor formatting and wording tweaks
Update quick-start.md
Handle v8::MicrotasksScope in the main process
Setup v8::MicrotasksScope for callbacks
Remove callbackId when callback is removed from registry
Add details to docs/styleguide.md
Reuse root path variable
Include trailing separator in comparisons
Add failing spec for trailing separator bug
Filter existing search paths instead reimplementing
Add specs for Module._nodeModulesPath
Minor formatting updates
Make update number message a note
Use upstream node-pre-gyp
remove parens from type
fix list indentation
Do not emit did-fail-load for canceled requests
Update to Electron v1.2.5
Bump v1.2.5
spec: Set mimeType for protocol's handler
spec: Split the session.protocol test into multiple tests
spec: Put protocol registration in beforeEach
mac: Avoid calling setTitleVisibility for OS X 10.9
Update brightray for #6178
Revert "Replace --whole-archive with --start-group"
Eagerly require protocol
Ctrl -> Control for consistency
toPng/toJpeg -> toPNG/toJPEG
Update expected accelerator
Incorporate review feedback
Export app before requiring modules
Remove label/accelerators with role defaults
Add assert for role with app name in label
:art:
Remove lint errors
Doc role defaults
Add spec for default role label/accelerator
Specify focused window to execute call
Add app require
Add execute helper to roles file
:art: Sort roles alphabetically
Add more role defaults
Add default help/window labels
Use default labels and accelerators
Add default label/accelerator to role menu items
Add menu item role defaults
Make commandId a read only property
Add failing spec for writeable command id
Update external frameworks version
Add back event param
Move click variable near this.click
:art: Destructure requires
Add spec for submenu type with no submenu
Add spec for invalid menu item type
Remove CoffeeScript class wrapper
Add BrowserWindow.prototype.setContentProtection(enable)
Update README.md
docs: Separate Cookies and WebRequest classes in  session.md
Update README.md
docs: ses.setUserAgent(userAgent[, acceptLanguages])
Add ses.getUserAgent()/setUserAgent(...) APIs
Call on GetUserAgent on UI thread
Cache the BrowserContext::GetUserAgent
Do not force creating default session in C++
Get rid of default BrowserContext
OS X → macOS
use consistent verb style
prepositions are hard
wether → whether
restore headings in translated session docs
document drop-files event type
undo heading changes to special-case session
fix debugger event headings
document platform-specific arguments
use unformatted raw code examples in styleguide
:memo: use h3 headings for events and methods, per the styleguide
docs: Reformat the menu-item.md
Update to Electron v1.2.4
Add "event" parameter for "click" handler of MenuItem
Add EventEmitter::CreateEventFromFlags
Bump v1.2.4
Add comment about map key/values
Map roles by command id
Add delete accelerator to delete menu
Make NSDeleteFunctionKey to NSDeleteCharacter
Access function in methodInBrowserWindow
Doc togglefullscreen menu item role
:art:
Use togglefullscreen role
Add togglefullscreen role selector
Add togglefullscreen role
Document quit role
Remove CoffeeScript ref variables
Use const/let instead of var
Add File > Exit menu on Windows
Use quit role
Map quit role to terminate selector
Add quit role
Updated docs for beginFrameSubscription
Update menubar color when theme changes
linux: Disable parent window when showing modal dialogs (#6160)
docs: Make tray.md follow docs style guide
docs: Tray.getBounds()
win: Use DIP rect for tray icon's bounds
win: Implement tray.getBounds() API
mac: Add tray.getBounds() API
Update brightray for electron/brightray#228
Add default error handler to remote promises (#6151)
Add systemPreferences.subscribeLocalNotification. (#6150)
Frame subscriber bugfix + added only_damaged option
mac: Convert path to absolute path in ShowItemInFolder
Use fixed ID for app indicators
Avoid calling Environment::GetCurrent for unjected contexts
docs: modal window is greatly simplified
Only define enable/disable API for views
macOS: Use sheet window as modal window
Move disable counter to NativeWindow from api::Window
docs: Parent and child windows
linux: Make modal dialog show more smoothly
linux: Implement win.disable/enable/isEnabled() API
Do not emit "unresponsive" when there is modal dialog
linux: Implement win.setParentWindow(parent)
win: Implement win.disable/enable/isEnabled() API
spec: Avoid calling setParentWindow for unrelated tests
Add "parent" option for BrowserWindow
views: Initial implementation of win.setParentWindow(parent)
mac: Add win.beginSheet(sheet)/endSheet(sheet) API
spec: Test cases for win.setModal(modal)
Handle multiple modal windows correctly
Add win.setModal(modal) API
mac: Add win.disable/enable/isEnabled() API
spec: Test cases for parent window
Add win.getChildWindows() API
Add win.getParentWindow() API
mac: Close all child windows before closing current window
mac: Add win.setParentWindow(parent) API
spec: Suppress isCI test on CI
:memo: Update Korean docs as upstream
:memo: Update Korean docs as upstream
Add copy/pasta example for system preferences.
Replace --whole-archive with --start-group
Update to Chrome 51.0.2704.103
Update to Chrome 51.0.2704.103
Pyhton => Python, close #6126
Use class extension to avoid type conversion
🐛 Don't load 'repl' unless needed
fixes transformed webview size
Improved wording
Replace OS X and Mac OS with macOS
Add back window check
Mark which APIs are unavailable before app ready
Call loadExtension from addDevToolsExtension
Upgrade brightray
Remove unused import
:art:
Remove isKindOfClass check
Use EventDispatchingWindow from brightray
Break out EventDispatchingWindow into separate class
Handle redispatch in devtools undocked windows
Redispatch key events to handle native shortcuts
Remove unneeded method declaration
:art:
Use isKindOfClass
Remove unused property
Remove unused variable
Redispatch events to handle native shortcuts
Update electron-faq.md
Don't change the behavior of transparent window
Use the setTitleVisibility to control tittlebar's visibility
Setup protocol after ready has already fired
Fence block as yml
Correct typos in docs
Reset icon and clear progress bar
Add subview whenever content view is empty
Add failing spec for icon progress crash
set the title for hidden and hidden-inset windows so they show up in the window menu list fixes #6088
Make Menu.getApplicationMenu() public
Forward will/did navigate events to extensions
Drop unneeded .js extensions
Extract Event clas to own file
Add chrome.webNavigation stubs
Update the using-native-node-modules.md
Update to Electron v1.2.3
Bump v1.2.3
spec: Correctly cleanup the protocol test
Make api::Protocol thread safe
Avoid storing JobFactory in BrowserContext
Make sure BrowserContext is deleted after Protocol
Work around a compiler bug that crashes on Windows
fix spell error
fix spell error
Provide access to JobFactory in URLRequestContextGetter
Update online-offline-events.md
Improve the docs on loading flash plugin
unkown -> unknown
:art:
Tweak type check to consider windows and webviews
Add 2 spaces before comment
Only add extensions to windows and webviews
Add background page web contents type
Specify type instead of isGuest
Use web contents type enum and add converter
Remove unused includes
Use RenderProcessPreferences for non-remote web contents
Tweak documentation link
Drop the certain
Mention dialog entitlements
Include sys.executable in build libchromiumcontent args
Improving test exit
Wait for current app to quit before launching new app
Update brightray for #4261
Log error when repling on Windows
Add back options param
Add web-contents-created event spec
Doc web-contents-created
Emit web-contents-created on app
remove extraneous 'not'
:memo: Add missing changes
Use once for 'ready-to-show'
Only do the trick when window is hidden
docs: Showing window gracefully
Add ready-to-show event
docs: The side effect of focusable: false on Linux
On Windows focusable: false also means skipTaskbar: true
Add focusable option
Update mac-app-store-submission-guide.md
docs: Document the behavior of win.setIgnoreFocus on OS X
:memo: Update Korean docs as upstream
docs: Reword the requirement of setApplication Menu
Reset SQRLUpdater when setFeedURL is called
Do not add JS wrapper for setFeedURL
Move converter for std::map to native_mate
Add converter for std::map
:memo: Update Korean docs as upstream
:memo: Update Korean docs as upstream
Add BrowserWindow.prototype.setIgnoreFocus
:memo: Update Korean docs as upstream
:memo: Small fixes
Document 'zoom' role + add missing menu items (Delete / Paste and Match Style / Zoom)
Add optional requestHeaders argument to autoUpdater.setFeedURL + allow calling mulitple times
Add info about electron-builder to build windows installer
Document Menu.setApplicationMenu from main process
:arrow_up: node@6.1.0
Access remote from electron require in translated doc
Access remote from electron require
:fire: line
Doc getDevToolsExtensions
Add getDevToolsExtensions API
Doc BrowserWindow.isDevToolsExtensionInstalled
Add BrowserWindow.isDevToolsExtensionInstalled API
issue 2813 add app name after Quit
fixed errors in text
fixed errors in text
fixed errors in text
Tweak error message
:memo: Update Guide for Windows Store Apps
Log/exit when only called in specs on CI
Remove .only from spec
🚿  Lint
Handle the three get cases
Remove standard lint warnings
Add spec
Add storage file
Default locale to en
Add spec
Remove lint warnings
Cache extension metadata
Add fixme for sync ipc
Add initial support for placeholders and substitutions
:art:
Add initial chrome.i18n.getMessage API
:art:
Get webContents from guestId
Add guestId non-writeable assertions
Make BrowserWindowProxy guestId non-writeable
Update spec description
Add spec for window.open from <webview>
Use webContents id as guest id in opened windows
Use const/let and removes CoffeeScript ref vars
Tweak duplicate extension message
Throw errors reading/parsing manifest.json
Add specs for manifest.json read/parse error
fix typo
docs: Make the example cover all cases
Add isPaused and canResume
docs: Update DownloadItem for getState
Add DownloadItem.getState
fixed errors in text
updated translation for README.md
updated translation for supported-platforms.md
fix spec and docs
emit once for each session and add spec
register extension handler for every session created
add docs
move protocol to session properties for working with partitions
fill net::URLRequest details on IO thread
fix dereferencing null pointer
更新浏览器窗口变量名称
Update Build System Overview doc
:memo: Update Korean doc to a latest version. [ci skip]
Default window title to app name
Set maximizable state after installing view
Allow obtaining system Pepper Flash path
Add default statement
hookWindowForTabEvents -> hookWebContentsForTabEvents
Only add extensions to non-remote webContents
Add devtools from web-contents-created event
:art:
Export loadDevToolsExtensions API to use in guest view manager
Load extensions for all web contents
Assert on tab id as well
Pluralize extension
:art:
Use destroyed event instead of closed event
Load dev tools extensions in webviews
Add failing spec for webview devtools extension
support --abi
Remove NOTIMPLEMENTED() call
Add showDefinitionForSelection webContents proxy method
Check for Mac in if block
Document webview.showDefinitionForSelection
:art:
Add deprecation TODO for BrowserWindow.showDefinitionForSelection
Document webContents.showDefinitionForSelection
Add showDefinitionForSelection to webContents/webview
Update to Electron v1.2.2
Bump v1.2.2
Don't rely on AddAdditionalSchemes for setting standard schemes
Mark standard scheme as safe scheme
Make sure standard schemes are also set in child process
spec: Custom protocol can have "fetch" working in it
Update to Chrome 51.0.2704.84
Update libchromiumcontent to 51.0.2704.84
bellow => below
Use lowercase param key
Add missing A in constant name
Remove trailing comma
Add TODO about blinkFeatures -> enableBlinkFeatures
Move example to the correct place
Mention enabling/disabling
Document disableblinkfeatures attribute
Document disableBlinkFeatures option
Link to RuntimeEnabledFeatures.in
Add webview support for disabled blink features
Add disableBlinkFeatures option
More let/const-ing
We -> we
:art: Use const and for/of loops
Don't collect unused results array
Update docs on win.setIgnoreMouseEvents
Implement SetIgnoreMouseEvents for Linux
Implement SetIgnoreMouseEvents for Windows
Update Korean documentation translation to a latest version
fix outside link
update Quick Start Page[zh-CN]
Add update-target-url event
docs: Update the code sample of screen module
docs: Move "Sign Native Modules" to MAS Guide
Set chrome.runtime.id
Add failing spec for chrome.runtime.id
Don't log extension id
Update using-native-node-modules.md
Add app.disableHardwareAcceleration() API
Update to Chrome 51.0.2704.79
Update libchromiumcontent to 51.0.2704.79
Update Chinese translation
Add 'delete' and 'pasteandmatchstyle' roles
:art: Log a warning if an extension's manifest cannot be parsed
:art: Log a warning if an extension has already been loaded
:memo: Update Korean docs as upstream
:memo: Update Korean docs as upstream
:memo: Update Korean docs as upstream
spec: Add test case for app.relaunch
args should always be checked
List all the possible folders for Linux.
javascript -> javascript
:memo: Update Korean docs as upstream
Correct wrong words
docs: app.relaunch
Provide a flexible API for app.relaunch
Correctly quotes the argv on Windows
Allow using current argv for relaunch
Uniform when to use args or argv
Make sure the new instance inherite cwd on mac
Implement Relaunch on Windows
Implement Relaunch on Linux
Separate LaunchProgram from mac implementation
Be consistent in spec organization.
All we really need to do is make getUserDefault support array / object types.
Expose the method to JS and write a simple test.
Write a new method that returns prefs under the NSGlobalDomain.
Expose the NSArrayToListValue converter.
Separate implementations of RelauncherMain and RelauncherSynchronizeWithParent
Rename atom-shell-frameworks repo name and org
Add nuts link to the docs
Use AtomCommandLine to process command line parameters
Get ready to make relauncher cross-platform
Implement app.relaunch on OS X
Update to Electron v1.2.1
Import chrome/browser/mac/relauncher.{cc,h}
Bump v1.2.1
Slightly improve docs of webContents.printToPDF
Cleanup the printToPDF code
fix docs
fix header paths and comments
move bluetooth_chooser to atom/browser/lib
add docs
browser: implement bluetooth chooser interface
Cleanup the CoffeeScript converted code
Explicitly initialize session before webContents
Update libchromiumcontent and brightray for #5781
Minor typo fixes
Throw error when session module is used before app is ready
Cleanup the JavaScript code of session
Add plist path variables
Add: custom pageSize for printToPDF
Keep copies of window icons
:memo: Update Korean docs as upstream
:memo: Update `README.md`
initialize bluetooth for linux
spec: child_process.fork shouble be able to pipe stdio
Correctly redirect output to console
Clear the buffers before notifying the other end of the pipe
Refactor the URLRequestFetchJob code
Initialize script context in DidClearWindowObject
spec: disablewebsecurity should not break preload and node integration
:memo: trivial change in web-view-tag.md
:memo: Japanese: add web-view-tag.md
docs: Move the "Packaging Tools" out of "Rebranding" chapter
Choose the correct icon size for Windows taskbar
Remove trailing whitespaces and cleanup the code logic
:memo: Update Korean docs as upstream
:white_check_mark: Add test for 'setAspectRatio(0)'
add spec
protocol: store response data when reader is not ready
Update the docs on using DevTools extension
Simplify the implementation of sendToAll
Use meaningful name for extensionId
Implement chrome.tab.onCreated/onRemoved APIs
Current handle sender.tab for background pages
Enable specifying custom command line switches
Set default mimeType for BufferJob
Pages in chrome extension should not have node integration
Pass sender for chrome.runtime.onMessage
Implement chrome.tabs.sendMessage
Implement chrome.runtime.sendMessage
Use ipcRenderer.sendTo to get rid of routers in main process
spec: ipcRenderer.sendTo sends message to WebContents
Add ipcRenderer.sendTo
Clean up the Chrome API implementation code
Implement chrome.tabs.executeScript
Implement port.sender
Inject chrome.* to content scripts
Handle port disconnecting
Background pages and content script should be loaded on startup
Make simple runtime.connect work
Add webContents.fromId
:memo: Indicate directories in the Structure of Source Code section
Remove APIs that are no longer present
we -> it
Add ELECTRON_REPO example
Put - at end of previous line
Add trailing slashes to directories
Tighten up section title
Tweak fork section
ATOM_SHELL -> ELECTRON in env vars
Move custom fork content to app distribution doc
Add notes on S3 directory structure
Create guide for how to create your own from-source Electron fork
Remove duplicate hidden-inset check
Call print on webContents
:fax: Add print() to BrowserWindowProxy
Add asserts for properties
Guard against object with no hasOwnProperty
Add failing spec for remote property with no prototype
Add webContents.sendToAll to send message to all frames
No need to hijack setInjectedScriptForOrigin
Enable node integration for pages in devtools extension
Run content scripts at correct phase
Implement a simple content script injector
Handle unloading devtools correctly
Read content_scripts to preferences
Make it possible to only set preferences for BrowserWindow
Add API to set render process preferences
:gift: Add 'app.releaseSingleInstance()'
The consts
Use correct TODO format
Update docs for new API names
Use new APIs
Upper case abbreviations
Update to Electron v1.2.0
Make sure chrome.devtools.inspectedWindow.tabId is set
Add simple support for background page
Store the original manifest file
Cleanup chrome-extension.js after the Coffe2ES transfer
getHostForPath => generateHostForPath
Bump v1.2.0
Update to Chrome 51.0.2704.63
Update to Chrome 51.0.2704.63
Initialize guest_instance_id
:art: Implement JS Standard Code Style 7
Use auto for embedder var
Restore original include location
Restore original comment position
parent -> embedder
Tweak comment
Remove redundant atom:: namespace use
:art:
Remove added switch/option
Get hidden state by using parent window directly
Tweak spec description
Remove logging in parent page
Support document visiblity state and events in webviews
Add failing spec for webview visiblity changes
:art: Support non-native promises
atom_gyp -> electron_gyp
Deprecate ATOM_SHELL_GITHUB_TOKEN
Deprecate old S3 env vars
Add fallback s3 config values
atom_shell -> electron
ATOM_SHELL_INTERNAL_CRASH_SERVICE -> ELECTRON_INTERNAL_CRASH_SERVICE
Link to other apps
Remove mention of Atom Shell
Update to Electron v1.1.3
Improve documentation of `ses.cookies.set()`
Truncate the strings passed to google_breakpad::CustomInfoEntry
Ignore invalid parameter error in Electron
Update node: remove ATOM_SHELL_INTERNAL_RUN_AS_NODE
:apple: Add fallback URL to handoff.
Upgrade node for ELECTRON_RUN_AS_NODE change
Remove ATOM_SHELL_INTERNAL_RUN_AS_NODE support
Remove . after path to prevent confusion
application -> app for consitency
Log stack when available
Remove custom MODULE_NOT_FOUND code check
Update copy
:art:
Tweak resolve filename error message
Lead with package.json path
Use dialog.showErrorBox
Move Module require to top
:memo: Update Windows Build Instructions
Update to Electron v1.1.2
Bump v1.1.2
Strip ffmpeg in zip file
Add comment about Module path
Move require spec to api-app-spec
Test that calling regular module succeeds
Remove lint warnings
Add spec for electron module require
:art:
Pre-resolve electron require path
.coffee -> .js
Pass both callback values to then
Add failing spec for rejected remote promise
Removes main error, fixes messaging for JSON parse
Add a Windows script to just invoke cibuild
Adds JSON parse, invalid and missing main field errors
:memo: Mention that x and y have to be used together when creating new window [ci skip]
Suppress ffi test on Windows
Update brightray: fix Windows linking problem
Add a few more media related libs
Update symbol names of icu
Link with necessary DLLs of Chrome 51
Update brightray: fix OS X linking problem
Link with AVFoundation and CoreMedia
Move the menu sightly higher when repositioning the menu
The unit of position is CGFloat
Update brightray: fix Linux linking problem
Link with xscrnsaver
Update brightray: Manage NetLog in BrowserClient
NetLog should be managed by BrowserClient
deprecate app.allowNTLMCredentialsForAllDomains
Make |button| default to left button
Adjust to the new behaviors of beforeunload handler
Init feature list in node process
Call BrowserContext::Initialize
Initialize FeatureList
Adapt to changes of Chrome 51 API changes (Part 2)
Adapt to changes of Chrome 51 API changes (Part 2)
disregard extraSize when initially setting the aspect ratio
Update to API changes of Chrome 51
Adapt to changes of Chrome 51 API changes
code styling
Update to Chrome 51.0.2704.54
Update to Chrome 51
call base SetAspectRatio in NativeWindowMac implementation
comments
Ignore invalid parameter error in crash service process
override SetAspectRatio for NativeWindowMac
🍎  let Cocoa handle keeping the aspect ratio whenever the edges are dragged
bring back app.allowNTLMCredentialsForAllDomains
Update breakpad to lastest master
Update crashpad to 35da3b6
flags to control iwa enabled server whitelist
browser: flags to control iwa enabled server whitelist
Japanese manual: modified template string
Japanese manual: Update tutorials and api
Update libchromiumcontent for #5618
renderer: generate net error strings when requested
Default to amd64 on Windows
Tweak example intros
Tweak intro sentence
Use active voice
Minor wording updates
Use ### for headings for consistency
Changed default button, updated link
Capitalize Object
Added Learn More button
No need to reference the icon in Tray
Add BrowserWindow.setIcon
docs: Recommend to use ICO icon
Correctly set window icon from ICO
Make it possible to get different size of icons from ICO
Use LoadIconMetric to load correct icon
Load HICON directly in NotifyIcon
Remove the JavaScript wrapper for setContextMenu
Convert to mate::Handle<NativeImage> instead of gfx::Image
Handle.ToV8 should return Object
update docs
extend setSheetOffset to accept an optional 2nd offset
Store ico image in HCION
Update to Electron v1.1.1
Bump v1.1.1
Remove returns from event listeners
Add test for webview zoomFactor inheritance
Add zoomFactor to guest params
:art:
Override `child_process.execFile` asar patch for `child_process.exec`
Update remote.md to mention enumerable property limitation
The "Error opening app" dialog, now with less attitude
docs : Russian
Cleanup the docs of process object
Ignore failures of OS X on Travis CI
Update brightray for #5578
:memo: Remove unused link
:memo: Adjust line length to `80`
:memo: Adjust line length to `80`
:memo: Small fixes
:memo: Update Korean docs as upstream
Only use the osfhandle hack on Windows
📝  update english docs to include setSheetOffsets
No need to download and ship vs runtime libraries
🍎  allow x-axis offset to be set for sheets
Link with Vs2015 runtime statically for Release build
Link with static runtime library for Release build
docs: Team ID is now required for signing
Add team ID to base Bundle ID
Update Clang only if needed
:art: Use the same stack trace for both cases
Make js2asar.py more robust
Create supported-platforms.md
:memo:
Move everything into atom_bindings
исправление ошибки в слове
:art: Improve error message
Japanese manual: add electron-versioning.
docs: Update MAS guide without using temporary-exception
Currently set base bundle ID
:memo: Update Korean docs as upstream
Use string description for unknown types
Do not convert NSDictionary to JSON
Ignore invalid JSON object when converting NSDictionary
Pass userInfo in subscribeNotification
Make non-public module accesible via remote
Handle keyboard events for WebContents that do not have owner window
Remove WebViewGuestDelegate::HandleKeyboardEvent
WebContents without owner window should always open detached devtools
Add webContents.id property
A normal WebContents can have no owner window
Make sure BrowserContext is always destroyed after WebContents
:memo: Update Korean docs as upstream
browser: flag to disable HTTP/2 and SPDY/3.1 protocols
flag to disable HTTP/2 and SPDY/3.1 protocols
Update brightray to fix linking problem on Linux
Remove unneeded lines when importing code
Remove semicolon
Update interval id variable name
Show last panel by id
with -> on
Tweak doc headings
Simplify sentence
Add spectron section
Recommend electron-chromedriver
Add comment about panel switching via input event
Use consistent function styles
Use control on non-mac platforms
DRY up specs
Add spec for undocked devtools
Come Correct with Wrapping
Add spec for devtools extension
:fire: old docs
Dox
Move process-stats methods to process
Add docs
Linting
Rename Metrics => MemoryInfo so it's consistent
Everything is in KB
Implement process and system memory statistics
Wire it up
Add the dumbest new builtin that works
:memo: Add Information about Versioning
:memo: Update Korean docs as upstream
Update brightray for #5348
Try linking with libnotify.so.5
Do not link with libnotify
docs: webview is only available with nodeIntegration on
No more need to check for nodeIntegration when creating guest view
spec: WebView is disabled when nodeIntegration is disabled
Disable webview when nodeIntegration is off
Implement titleBarStyle without using NSFullSizeContentViewWindowMask
:lipstick: Standarize requires in JavaScript API
:lipstick: Make the power-save-blocker a bit more concise
Update: Japanese version of MAS submission-guide
Don't default to "Open", "Save", just let OS decide
Add buttonLabel param to showOpen/showSave dialogs
:lipstick: Use spread operator instead of arguments object
💄 Use ES6; clean up CoffeeScript conversion
:lipstick: Destructure globalShortcut module
Link with libraries of Visual Studio 2015
Sync submodule recursively
Download redist files of VS2015
And increase timeout for the rest
Suppress the tests that need to call window.open on Travis CI
Require download_items inline
PT-BR link to devtools-extension tutorial on README.md
Translate tutorial/devtools-extension.md to Portuguese (pt-br).
Translate tutorial/security.md to Japanese.
Use anonymous function for wrapping native classes
wrong link destination
:lipstick: Add spaces to comply with Standard
💄 Add ES6; Clean up from CoffeeScript conversion
No need for explicit type conversion
Rename webFrame.purgeCaches to webFrame.clearCache
Update to Electron v1.1.0
It isn't entirely clear to me that 'window-all-closed' is used for this purpose. I originally looked for an event that would fire if all windows were closed and the reason was NOT due to the application quitting; however, this differs in that it is called regardless of whether the app was quitting.
Update application-distribution.md
Whitespace issues
Just return the type directly
Use doubles to represent memory size in bytes
Forgot scripts
Document resource methods
Add a way to drop all cached memory
Wire up a new method in web frame
Write native_mate converters for WebCache::ResourceTypeStat and friends
Bump v1.1.0
Allow using __weak keyword
Update gyp with support for CLANG_ENABLE_OBJC_WEAK
Update to Electron v1.0.2
Update clang revision to 261368
Update to Chrome 50.0.2661.102
Adapt to changes on hash functions of Chrome 50
Use VS2015 on appveyor
Change version number so native modules can build
Update libchromiumcontent: fix Release build on Windows
chromedriver's version is now v2.21
It is not allowed to run scripts in DidCreateDocumentElement
Suppress crashReporter test on x64 Windows for now
Do not call import_vs_env for non-win32
Import build env from VS 2015
Upgrade to Node v6
Update libchromiumcontent to fix renderer process crash
Update crashpad with AppKit patch
Do not remove the patch for Command key
Simplify the check for web_frame_widget
setBaseBackgroundColor moved to WebFrameWidget
Update Brightray and libchromiumcontent v50 ref (Electron maintainer use your refs)
Update libchromiumcontent to chrome50
Update SetScreenInstance call for linux
Iterator to use size_t
GetNativeScreen -> GetScreen
Update to new pref service location in components
Rename PERMISSION_STATUS enum value
Remove NetworkDelegate::OnResolveProxy
Refactor for NotificationResources bitmaps
Use HttpNetworkSession::Params::enable_http2
Remove user_gesture parameter from PermissionManager::RequestPermission
Update SharedMemory buf constructor
Update PlatformCanvas to SKCanvas
 Update x11 global shortcut listeners
Update linux menu overrides
Add SkUserConfig.h with blank SkDebugf macro
Minimum fixes needed for chromium_src
Remove wwebaudio from web_preferences
GetNativeScreen -> GetScreen
Update to brave crashpad dep (Electron maintainer rebase this to use your ref)
Remove user_gesture parameter from PermissionManager::RequestPermission
WebFindOptions in its own header
Iterator to use size_t
PermissionStatus constant update
AccessTokenSet -> AccessTokenMap
Update to new pref service location in components
LoadAccessTokensCallbackType -> LoadAccessTokensCallback
No more GetCookieMonster
Widevine AAC CDM no longer avail
Remove Vorbis from CDM support
Add referrer_schems to AddAdditionalSchemes
Bump v1.0.2
Update brightray for electron/brightray#219
:memo: Document 'Tab' as a supported accelerator.
Add to security checklist
notify devtools opened and closed once per lifetime
Update brightray for #5503
notify delegate when devtools is loaded
Update screen.md
Replace gtk_widget_hide_all with gtk_widget_hide
dialog: resize icon on linux before showing
Update to Electron v1.0.1
hash function for pair is already defined in VS
Add typename hint to fix compilation error on VS2015
Use DoubleIDWeakMap for |rendererFunctions|
Bump v1.0.1
Update to Electron v1.0.0
Use arrow function for this binding
Listen for devtools-opened on webContents
Move createIDWeakMap to v8Util
Turn api::IDWeakMap into api::KeyWeakMap<T>
:memo: Add Windows Store Guide
:memo: Document Dialog Buttons Behavior on Windows
Use create function instead of IDWeakMap constructor
Remove IDWeakMap
Make KeyWeakMap a template class
Add KeyWeakMap without Add method
Remove unused methods of IDWeakMap
Do not use require('app') in dump-version-info.js
Update to Electron v1.0.0
:memo: Update Korean docs as upstream
:memo: Update `README-ko.md`
:memo: Match object notation style
fixed code snippet in menu api documentation.
Add API: app.dock.downloadFinished(filePath)
:memo: Remove whitespace
:memo: Update Korean docs as upstream
:memo: Match variable names
:memo: Match variable names
:memo: Add missing semicolons
:memo: Cleanup codes
:memo: Remove whitespace after code block
:memo: Match destructuring style
Docs:fix a minor typo
:memo: Adjust line length to `80`
:memo: Small fixes
:memo: Update Korean docs as upstream
Update native_mate: close #5392
Leak Wrappable's template
:memo: Add `security.md`
spec: protocol.registerStandardSchemes does not throw
docs: When to use protocol.registerStandardSchemes
Turn the exception in protocol.registerStandardSchemes to warning
No need to keep the deprecated APIs
Bump v1.0.0
:memo: Update Korean docs as upstream
:memo: Small fixes
:memo: Update Korean docs as upstream
Add docs, avoid side effects when not currently default
delay protocol object creation
Suppress the window.open tests on travis CI's mac machine
Set expirationDate for persistent cookie
fix docs and spec
allow protocol module initialization before app ready.  * ensure registerStandardSchemes can only be called before app ready  * ensure other protocol methods can only be used after app ready
protocol: fix registerStandardSchemes api
Implement RemoveAsDefaultProtocolClient on OS X
:lipstick: Simplify conditional check for BrowserWindow
:lipstick: Use destructuring to shift arguments
:lipstick: Cache last argument in parseArgs
:lipstick: Update default_app to ES6 conventions
:memo: Add Security Tutorial
Update brightray for #5431
Add dpiAware to app manifest instead of calling SetProcessDpiAwareness / SetProcessDPIAware
Add disableWindowFiltering to app manifest to enable enumeration of modern app windows in node modules
port DevToolsFileSystemIndexer
allow delegate to handle file system indexing requests
devtools: handle file system indexing requests
Link to vendor folder on GitHub
Remove support for options now on webPreferences
Remove ELECTRON_HIDE_INTERNAL_MODULES in docs
Remove NativeImage.toDataUrl
Remove crashed event forwarding
Remove BrowserWindow events now on WebContents
Remove deprecated prototol APIs
move session wrapper to webcontents
Update read path to something that exists
Tweak spec description
Test no handler via call to deprecate.log
Add explicit call to deprecate.log
Initialize session explicitly
:art:
Remove linter errors
Keep exporting deprecate/deprecations
Remove empty _init
Remove deprecated BrowserWindow options specs
Remove support for translating hyphenated options
Update specs for internal module require
Remove .only call
Remove ipc.js files
Remove hideInternalModules API
Don't export deprecate API
Remove deprecated main process ipc module
Remove deprecated ipc module
Remove deprecated crashReporter.start options
Remove deprecated options check in BrowserWindow
Remove hyphenated options
Remove deprecated APIs
Update links to electron org
Link to electron-winstaller
Add a flag indicating app is started from default app
Add scrollBounce option and disable it by default
docs: Make it clear that size constraints only apply for users
Clarify how did-fail-load handles redirects.
ipcRenderer: fix crash with multiple listeners to sync message
:memo: Update to v1.4 of the Code of Conduct
Revert "Generalize this mate converter for reuse."
docs: We support arbitrary NSDictionary now
Move the job of creating userActivity to AtomApplication
Fully support converting NSDictionary to JS userInfo object
spec: Should not run app.setUserActivity test on non-OS X
Use scoped_nsobject to ensure our intermediate objects get cleaned up.
:memo: Update tutorials to ES6 [ci skip]
:memo: Update FAQ to ES6 [ci skip]
:memo: Rewrite docs on destructuring assignment [ci skip]
:memo: Update API documentation to ES6 [ci skip]
:memo: Update documentation style guide to ES6 [ci skip]
Follow object naming conventions for params in the 'context-menu' event
:memo: Update Korean docs as upstream
Remove some unnecessary css rules
Make the drag box fill the remaining height of window
Don't run this spec on platforms where the method is unavailable.
:memo: Update Korean docs as upstream
:memo: Match code syntax
Add an accessor for the current activity type and write the simplest possible test.
Save the activity on the application instance to ensure we hold a reference. Activities that enable search need to persist.
:memo: Document 'context-menu' event
Add 'context-menu' event to 'WebContents'
:memo: Small fixes
:memo: on using only strings.
Revert "Add some shady methods to get V8 objects or arrays from NSDictionary or NSArray."
Revert "Use a DictionaryValue everywhere instead of a string map."
Use select to query the uv kqueue
:memo: Small fixes
:memo: Improve grammar
Do not download clang on Windows
Ignore CC and CXX if user didn't change build configuration
docs: The building environment variables
Use a DictionaryValue everywhere instead of a string map.
Add some shady methods to get V8 objects or arrays from NSDictionary or NSArray.
:memo: Update Korean docs as upstream
Update link to AppVeyor build badge
docs: Introduce clang flags
Avoid overriding environment variables
Update libchromiumcontent for --defines parameter
Convert --clang_dir and --disable_clang to --defines
Pass --disable_clang and --clang_dir to libchromiumcontent
Update modules before calling build_libchromiumcontent
improve the `webContents.openDevTools` docs
docs: the --build_libchromiumcontent switch
docs: Cleanup unnecessary parts in build-instructions-linux.md
Add --build_libchromiumcontent option
Do not check existence of paths
Update libchromiumcontent for --build-libchromiumcontent
:memo: Update Korean docs as upstream
Translated application distribution and application packaging to ru_RU
:memo: about the plist changes.
Value first, key second.
:memo: Update Korean docs as upstream
:memo: Update Korean docs as upstream
:memo: Update Korean docs as upstream
:memo: Improve grammar
Revert "Don't upload PDB files in CI"
Revert "Run tests for branches on appveyor"
Run tests for branches on appveyor
Translated Quickstart to ru_RU
Remove the output file after testing
Make sure output is written when test fails
Also run tests on 32bit Windows
Do not write to stdout in Electron when running on win32 CI machine
Make win32 CI machine run tests
Add some documentation in app.md.
This is preventDefault by convention.
Make the Linter happy.
update all references to old atom-log bracket notation
Add the AppDelegate override for restoring from hand-off, and fire the app event.
Implement a "continue-activity" event on app for resuming from hand-off.
Implement app.setUserActivity(type, userInfo).
Generalize this mate converter for reuse.
describe electron-prebuilt and link to it
Update mac-app-store-submission-guide.md
update quick-start code to match quick-start repo
Update to Electron v0.37.8
Bump v0.37.8
Make sure the userData directory is created before ready event
:memo: Small fixes
added accelerator.md to api folders and translated (#5316)
Remove header link hover color
Add links to nav bar
Make drag&drop text wrap-able
Use default cursor on holder area
Tweak header text color
:art:
Tweak link style
Tweak font weight on holder div
Tweak font
Update header colors
Update desktop-environment-integration.md
renderer: fix desktop capture api not responding different subsequest calls
webContents: fix executejavascript when called before page load
:zap: Add API: IsDefaultProtocolClient
use DownloadItem to determine download initiator
Translate `testing-on-headless-ci.md` to Chinese
session: dont attach download dialog to deleted webContents window
Create user_data_dir before creating singleton lock
Do not run clean in cibuild
content-tracing -> contentTracing
web-frame -> webFrame
Simplify RemoteCallbackFreer
Remove duplicated converter for content::WebContents
Should also destory RemoteCallbackFreer when page is reloaded
Dereference remote objects with native code
Emit an error if `quitAndInstall` is called without an update being available
Revise the using-pepper-flash-plugin.md
Added Turkish Docs link to README-ko
Update README
Update using-pepper-flash-plugin.md
docs: platform-theme-changed is deprecated
docs: systemPreferences
Add systemPreferences.getUserDefault
Deprecate the platform-theme-changed event
Add systemPreferences.subscribeNotification
Move isAeroGlassEnabled and isDarkMode to systemPreferences
BuildPrototype should not be empty
Add systemPreferences module
Make VS happy
Remove unneeded cleanup code
Remove the isolate parameter of GetWrapper
Make Wrappable a template class
Make Wrappable a template class
Document process.crash method
more updates to api summaries based on feedback
update excerpts based on feedback
blockquote summaries
create a one-liner description for each API
:memo: Remove additional whitespaces
:memo: Remove additional whitespaces
:memo: Remove additional whitespaces
:memo: Add missing platform specified tag
:memo: Normalize code tags
:memo: Correct heading order
:memo: Remove unused link reference
:memo: Correct description style
:memo: Apply small fixes
:memo: Apply small fixes
:memo: Update `README-ko.md`
:memo: Update Korean docs as upstream
Update to Electron v0.37.7
Bump v0.37.7
:art: Windows Store Camels
Update desktop-capturer.md
Disable node integration on webview when disabled on window
Add failing spec
:memo: Update Korean docs as upstream
Add Windows Store Detection
Do not create the folder passed to app.setPath
Make the length of SingletonSocket's path as short as we can
:memo: Small fixes
Guard against unexist owner when removing ref to remote object
session: allow providing permission to handle external protocols
:memo: Update Korean docs as upstream
:memo: Add English docs for `webContents.isLoadingMainFrame()` [ci skip]
buffer, null, array etc. all belong to object
Cleanup the code determining value's type
Change `WebContents::IsLoadingMainFrame` to compare SiteInstances (per @deepak1556's recommendation)
Update brightray for #5208
rename importClientCertificate => importCertificate
Update screen.md
Update download-item.md
Update screen.md
Update screen.md
Add note for OS X about using `role` on MenuItem
remove the git
Correct transposition errors by changing xfvb to xvfb
pass the current dock state to devtools url when available
devtools: allow opening in specified dock state
Update the codesign code for latest Xcode
Update the MAS submission guide
expose api only on platforms using nss cert database
Keep function placement consistent
Move "setSheetOffset" to the BrowserWindow
client_id is accessed on different threads
Update frameless-window.md
Create download-item.md
:memo: keeping submodules up to date
Test for #5183 - webContents.executeJavaScript hangs on subframe load.
fix spec
remove --client-certificate flag
add spec
Update screen.md
set trust bits for CA certs
Create frameless-window.md
set client id on AtomNetworkDelegate instead of cmd line switch
Update link to setFeatureEnabledFromString
Initialize the embedder_ member data
app: api to import client certificate
set network emulation client id in request headers
Update brightray for electron/brightray#212
Create local variable to typecast `view`
Allow sheets to be attached at a custom offset #4679
Update to Electron v0.37.6
Correct misspellings
Bump v0.37.6
Update brightray for printing fix
Update libchromiumcontent for printing fix
Update brightray for #4973
Delay notification events to next tick
Store weak ref to Notification in ToastEventHandler
Do not use get_Setting to determine whether notification is enabled
Update sample code in online-offline-events.md
translation error in browser-window.md
Add new line
AutoUpdate Windows: Don't spawn if running
LibnotifyNotification: use "append" when supported
LibnotifyLoader: add notify_notification_set_hint_string
LibNotifyLoader: implement generic HasCapability
Update menu.md
webview: add CSS styling notes
:memo: Small fixes
:memo: Update Korean docs as upstream
Set the backgroundColor of RenderWidgetHostView
provide security style for devtools security panel
Only transparent window does not have background color
Do not link with ppapi_cpp.lib
Do no load PDF library from DLL
Update libchromiumcontent with necessary headers and libs
Link with other dependencies of pdf.lib
Link with pdf.dll
Update process.md
Avoid adding a new option to webPreferences
:memo: Add Debugging Instructions for Windows
Correctly set initial visibilityState
Reduces the IPC messages used for visibilityState
Update brightray for the linux notification improvements
Avoid external URLs
spec: loadUrl should not crash in did-fail-provisional-load handler
No more need to delay did-fail-load event
Use LowMemoryNotification for GC
LibnotifyNotification: add support for notification tag
Notification: pass tag to Show method
LibnotifyNotification: verify if the "actions" capability is supported before adding actions
LibnotifyLoader: add notify_get_server_caps support
views: Delay the focus/blur event to next tick
LibnotifyLoader: add notify_get_server_info support
Handle the Page.reload command coming from devtools
Hijack the Page.reload command
Make sure every page will get a script context created
spec: webview should work without script tag in page
spec: preload attribute should work without script tag in page
Delete the extra text
Update brightray for #4931
link libsecurity_state for providing security style
:memo: Update Korean docs as upstream
:memo: Add missing changes
:memo: Add missing changes
Update quick-start.md
Document `resourceType` arg for `did-get-response-details` event.
Add support/tests for `did-get-response-details` event on <WebView>
Rename ATOM_SHELL_ASAR to ELECTRON_ASAR
:arrow_up: node@5.10.0
provide option to override status line
Ensure process is cleaned up, to avoid leaks
wait_for_exit param should be const
register localized media strings
Disable throttling in tests
Add backgroundThrottling option to webPreferences
Update libchromiumcontent with disable_hidden.patch
session: webRequest.OnHeadersReceived should follow server redirect
:arrow_up: asar@0.11
Use single quotes
Use npm.cmd on Windows to print version
Log node and npm versions
Remove +=
Add more logging
Add missing .path
Log version to verify
Use node 0.10.21 on CI
wrap cases in backticks
use globalShortcut as a better mixedCase example
:memo: document API naming conventions
Rename ATOM_ ipc event prefix to ELECTRON_
Don't wait for xdg-open to exit when OpenExternal is called (Linux)
Mention codesigning is required on OS X
Update doc to reflect use of flexbox layout
Allow bootstrap to be invoked via python2
Support images larger than self.bounds
Update node: bring CI back to green
Update to Electron v0.37.5
Bump v0.37.5
atom => electron in upload script
Even though this call is probably fast, it can potentially happen a lot, make it _really_ fast
Revert "Remove custom WM_GETOBJECT"
spec: We should not use pre release of Node
Update node: rebase on v5.10.0 tag instead of master branch
spec: Add test case for #5028
Document `isMainFrame` argument for WebContents `did-fail-load` event.
Update urls for new GitHub org
Update links for new Electron org
Update readme and contributing guide for new org
Update source code for new org
Update docs for new org
Update submodules for new org
:memo: Update Korean docs as upstream
:memo: Update Korean docs as upstream
Update to Electron v0.37.4
Bump v0.37.4
Upgrade Node to v5.10.0
Update docs for backgroundColor
Set backgroundColor for the default app
browser: create cert verifier when browser context is created
Window with frame should have white background by default
mac: backgroundColor should not change titlebar color
Update libchromiumcontent: remove white background on OS X
Set the background color of RenderViewHost to transparent
Make the logic of ParseHexColor more easy to understand
Remove the hacks because of transparent background
Use BrowserWindow's backgroundColor as renderer view's background color
Pull app/session from remote
Remove duplicate require
Remove semicolons
Remove stray log
Remove lint warnings
Listen for browser-window-created event for asserts
Doc node integration inheritance
Disable guest node integration when embedder has it disabled
Add failing spec for webview nodeIntegration inheritance
Add missing title param
Check of nodeIntegration is strictly equal to false
Check nodeIntegration on embedder's webPreferences
Add clearer assertion of process being undefined
Use template strings
Remove stray log
Disable node on child when disabled on parent
Add failing spec for nodeIntegration inheritance
Rename atom.asar to electron.asar in specs
Rename atom.icns to electron.icns
atom.asar -> electron.asar
atom.gyp -> electron.gyp
use alt, not option
use cross-platform accelerator in globalShorcut documentation
use example accelerators that align with best practices
Fallback to using the last argument as the callback
Create issue_template.md
Remove logging
Store default_app in .asar archive
Add squirrel-updates-server link in the docs
Reference the remote object in its prototype chain's methods
spec: Remote object should be referenced by methods in its prototype chain
Remote object's members should reference itself
spec: Remote object should be referenced by its members
removed redundant delegation
Update libchromiumcontent
decide early on render initiated window creations
browser: fix disposition value for new-window event
:memo: Add "remote" note to dialog docs
Only check for nodeIntegration being true
Remove path for nodeIntgration value of 'disable'
docs: Add notes on app.getLocale
Improve app-command docs, list arguments and explain command string
:memo: Add missing docs
:memo: Normailze note markers
:memo: Update docs styles
:memo: Update Korean docs as upstream
Added information about the enabled, visible, and checked properties -- when they can be set and what they mean.
Update native-mate for #4892
give anonymous function a name
fix a minor style issue
derp
eradicate all per-file eslint globals
do not lint on windows CI
say we are linting
try to fix CI linting
use window.location instead of location
restrict mocha scope to /spec; break out link tasks
avoid using eslint comment exceptions
remove eslint from devDependencies
use standard.env.mocha instead of a list of globals
update CONTRIBUTING doc
replace eslint with standard
do not return and assign
replace snazzy with standard; autoformat package.json
finish standardizing!
replace __proto__ with Object.setPrototype
standardize by hand
standardize by hand
standardize by hand
remove useless constructors
throw error if it exists
dance around error checking with this one weird trick
standardize more
mostly more globals
do more manual cleanup and specify globals
tiptoe
standardize more
set standard.globals
reduce ignore list in favor of one-liner ignores
autoformat more files
standard-format has done its work; on to snazzy
tell standard to ignore /vendor directory
autoformat more files
ignore more files that are confusing standard-format
wrap conditional, because return can only be used in a function
autoformat more easy files
standardize asar.js by hand
autoformat more easy files
finish standardizing crash reporter
do not standardize rpc-server.js because reasons
tiptoeing along, keeping the suite passing
manual syntax fixes on rpc server
manually standardize this tricky file
first pass at standardizing; suite still passing!
mention standard in coding style doc
add standard-format to devDeps
Only open http/https links
Tweak error messages for dialog API
:memo: Update docs styles
:memo: Update Korean docs as upstream
Add "black background?" to FAQ
Make npm badge link to package page
:zap: Add API: RemoveAsDefaultProtocolHandler
Update desktop-environment-integration.md
Update power-monitor.md
protocol: return status of ReadRawData instead of relying on SetStatus
Export symbols of node::Environment
Get rid of the global_env
Avoid re-evaluating internal modules
Do not create dummy node environment
Use Environment::KickNextTick
Type of native array has changed
Upgrade to node v5.9.1
:memo: Update Korean docs as upstream
Update to Electron v0.37.3
Bump v0.37.3
Update to Electron v0.36.12
add curl package into Ubuntu section missing for the build
Update desktop-environment-integration.md
Don't quit on window-all-closed when in repl mode
Exit process when repl exits
Add repl run script
Document -i/--interactive option
Add repl CLI option
Put link on same line as name
Update source tree docs for new layout
fix translation
:zap: Add API: SetASDefaultProtocolHandler
use v8::private symbols as identifiers for object properties
common: use v8::private symbols as identifiers for object properties
Switch to a single OS X swipe event with a direction argument
modify 2016.3.23
Improve error reporting when using invalid argument types for dialog API methods
:memo: Update Korean readme as upstream
:memo: Update Korean docs as upstream
Added electron-release-server link to the docs
Destructure objects
Destructure params directly
Use direct params instead of rest params
Use destructuring assigment
:memo: Update Korean docs as upstream
Document `app.setName()`
Add minWidth and maxWidth to ints array
Run callback of setDestructor immediately when GC happens
Refix alert()
fix link
:memo: Update Korean docs as upstream
:memo: Correct link anchor
Remove unneeded slice call
Use rest parameters
Add .node-version pinned to 5.1.1
style nit
Set _setDeprecatedOptionsCheck on exports
Use deprecate.warn instead of deprecate.log
OSX: Capture 3-finger swipe events in NativeWindow
ignore set menu item fields
test for null accelerator too
add failing spec for undefined accelerator
Improve deprecated message on webPreferences options
Correct typos in comments
Add todo about removing hyphenated options
Add camel case versions to ints array
Set webPrereferences from features tring
node-integration -> nodeIntegration
Report deprecated BrowserWindow options
Add missing semicolons
persistented -> persisted
Add failing specs for deprecated options usage
web-preferences -> webPreferences
docs: List breakpad server implementations
Throw error with message of "Not implemented".
docs: Make it clear image.getNativeHandle is OS X only
Update brightray for #4681
s/troubles/problems/
link to gyp
add another link to ninja
link to the ninja website
improve wording in the FAQ
modify 2days ago update 2files
add last three files first
add build-instructions three first
add build-system-overview first
:checkered_flag: Notify only when enabled
More info for crash reporter form type and payload
Update brightray for atom/brightray#204
add last api files first
add three render process's files first
add tray first
Update the tests
Automatically set app user model ID
add web-contents first
Update the docs to match
AsNativeRepresentation => getNativeHandle
Remove type parameter
fix devtools filesystem api and allow delegate to request stored filesystem paths
devtools: fix filesyatem api usage and use prefs to track filesystem paths
modify default background for all render views
Update to Electron v0.37.2
webview: allow setting background color
Bump v0.37.2
Replace extension with the one in filter
add protocol && session first
Add extension to filename automatically for GTK+ save dialog
spec: Add test case for #4785
Leak the JavascriptEnvironment on exit
:fire: build warning on Win32
Add unit tests
Linting
Add documentation
First hack at being able to return NSImage pointers
Add a new method to get the representation of an image
Update brightray for atom/brightray#203
webcontents: provide position of match with found-in-page event
browser: fix retrieving webcontents from associated process id
update devtools network interceptor to throttle uploads
add power-save-blocker first
add powerMonitor first
Update to Electron v0.37.1
Update to Electron v0.37.1
Bump v0.37.1
Update brightray: dealy loading powrprof.dll
Dealy loading powrprof.dll
Added support for window.location on window.open windows
:memo: Update Korean docs as upstream
Update to Electron v0.37.0
Bump v0.37.0
spec: Skip webview.executeJavaScript in Travis on OS X
Use arrow functions for this binding
Add back return in getter
Remove lint errors due to rebase
Remove returns from event handlers
Use undefined instead of void 0
Use arrow functions to replace old CoffeeScript => this wrappers
Link to root build page
Add AppVeyor badge
Don't collect results from delegate.menuWillShow
Don't collect results from Menu::_callMenuWillShow
Don't collect results in Menu.setApplicationMenu
Don't collect results in exit event callback
Don't return attributes from from WebViewImpl::setupWebViewAttributes
Do not copy system libraries on Linux
Revert "Bump v0.37.0"
Bump v0.37.0
Update to Electron v0.36.11
Bump v0.36.11
:memo: Update Korean docs as upstream
add menu.md first
add ipc-main first
modify again and add dialog.md
Add blur method to window ref #4724
add content-tracing && update browser-window
spec: Increase timeout for executeJavaScript
Update to master branch of brightray and libchromiumcontent
Update to lastest master of libchromiumcontent
spec: Do not enter fullscreen in travis on OS X
Finalized browser-window show & hide events, added tests & fixed os x implementation
Added 'show' & 'hide' events to browser-window, fixed visibilitychange event in renderer
Cache browser visibility state & emit visibilitychange event on change
finish browser-window first
Move toolchain related configures into one place
update sysroot image revisions
set path for pkg-config when using sysroot
use sysroot by default on linux
linux: optionaly allow building x64 targets with sysroot
pdf.dll is not shipped any more
Create complete URLRequestContextGetter for URLRequestFetchJob
Update pdf_to_emf_converter
More boring fixups
Modifiers moved under UI
SetIsDraftMode no longer a thing, see https://groups.google.com/a/chromium.org/forum/m/#!topic/chromium-checkins/6qohfKmEYyg
More type fixups
Use assignment operator since both sides are scoped now
Update Get() => get(), Set() => reset()
We don't need Metro
Update printing code to latest
Pending renderer process no longer has render view attached
Final pieces of int16 and .Pass()
int32 => int32_t
basictypes.h => macros.h
startup helper is renamed
Goodbye pdf.dll
Update crashpad to lastest branch
Upgrade to Chrome 49
:memo: Adjust 80 chars per line
:memo: Update as upstream
Link with sandbox_helper_win.lib
Handle nullptr in RequestConextGetter
add window.open
allow setting pkg-config variable
:memo: Document 'app.focus()'
No more libyuv_neon
web-view-tag first finish
Update path to ipc.js
Update common api path
Run eslint over lib folder
Remove unneeded resolve calls
Update requires paths
Look for JS in lib dir
Move default_app to root of repo
Update paths for new JS location
Move JavaScript to root lib/ folder
complete command line switch && add enviroment variables
Pass() is deprecated for std::move
position modify
virutal should not be used together with override
add api doc begin 2.5
Everyone gets permission
Start to update UrlRequestContextGetter
Renamed enum in MediaStreamDeviceRequest
Update DevtoolsNetworkTransaction
Update headers for InspectableWebContentsImpl
Not quite sure how this ever worked
Update NetworkDelegate
basictypes.h => macros.h
basic_types.h => macros.h
menuItem add
No more basictypes.h
Update to Chrome 49
Add missing semicolon
path -> paths
absolute_path -> normalize_path
MakePathAbsolute -> NormalizePath
Add specs for more image path cases
Check ReferencesParent before calling MakeAbsoluteFilePath
Assert image size as well
Add api- prefix to spec
Use template string and arrow functions
Mention explicit using original path on failures
Use MakeAbsoluteFilePath when creating native image from path
Add failing spec for native image path normalization
:memo: :art: Hard wrap
:memo: Link to OS X Cocoa Event Handling guide on actions
Add mapping for performZoom
:art: [ci skip]
Map webContents.delete to role
Map selectors for delete and pasteAndMatchStyle to roles
Add missing done param
Add specs for realpath of unpacked asar path
Tweak lint sentence
Restore setting resizable property from ctor on Windows
Set resizable on Linux from InitWithOptions
:art:
Contrain size in ctor on non-resizable windows
Add Linux exclusion to describe
Mention npm run lint
Mention indent and semicolons
Remove CoffeeScript from styleguide
:apple: Rename 'isDarkModeEnabled' to 'isDarkMode'
docs: Add missing key codes
Remove duplicated keyboard code
0.36.10
Remove the duplicate logic on OS X
SetFullScreen should not work at all when not fullscreenable
docs: OS X also has progress bar
Bump v0.36.10
Add missing semicolon
Initially set resizable property on Linux
Enable resizable spec on Linux
getObjectMemebers -> getObjectMembers
Mention deleting
Allow remote member functions to be deleted
Make member functions writable
Add failing spec for reassigning remote function
Don't run mediaDevices spec on Linux CI
Always call done callback
Rename dark-mode-changed to platform-theme-changed
Use _cycleWindows selector to implement cmd-`
Simplify the isDarkModeEnabled check
upgrade to electron-download 2
Use flexbox layout for browserplugin
Add Pepper Flash doc and match doc style
Update as upstream
:bug: Add platform predicate for menu item action
:apple: Add 'dark-mode-changed' event to app api
:apple: Add 'isDarkModeEnabled' to app api
Cleanup docs
Update read me tranlation
Update read me tranlation
Add list
Making fullsceenable work on Linux
rename mafintosh -> electron-userland
update github urls
Removed duplicate isDevToolsFocused entry
resolve update conflicts
Reverted SetFullscreenable disabling maximize button on Windows and removed that from the docs.
Added special key identifiers for OSX and Windows
browser: allow enumeration of media device labels
Update to Electron v0.36.9
Bump v0.36.9
Update libchromiumcontent, use harfbuzz 1.06
:memo: Add Headless CI Tutorial
Removed an include no longer needed
run webframe methods for webview in its context
Removed size_ since it's not needed anymore
add spec
track async api requests
webContents: provide responses for executeJavscript method
use v8::Object::Get
Rename function `FilterAccecelator` to `FilterAccelerator` in `submenu_button.cc`.
use builtin method
webview: api to get webcontents and associated host webcontents
Revert "protocol: respect requests from partition"
Revert "add docs"
ipc: allow passing date instances
Notify the global menu bar when window is mapped
add docs
docs: update jp doc ipc-renderer.md
Allow download builds for MAS
docs: update zh-CN doc debugging-main-process.md
Revert will-enter-full-screen event, matching osx fullscreen: false behaviour on windows instead
Get rid of the ATOM_BROWSER_RELEASE_RENDER_VIEW event
Separate renderer functions by renderer process ID
Remove a few CoffeeScript generated junks
ObjectsRegistry no longer needs to send events
No longer need to count the references in webContents
No longer needs cache for methods of remote
v8Util.createObjectWithName is no longer used
spec: Tests for remote ES6 class
Keep the prototype chain in remote objects
Update as upstream
:memo: Update as upstream
Rename constant `PERSIST_PERFIX` to `PERSIST_PREFIX` in `session.js`.
Translate auto-updater.md in commit 45739ce434ec3c3eb190d35d3948b702b54706cd
Translate app.md in commit 45739ce434ec3c3eb190d35d3948b702b54706cd
Translate accelerator.md of 45739ce434ec3c3eb190d35d3948b702b54706cd
Translate electron-faq.md#45739ce434ec3c3eb190d35d3948b702b54706cd
Update README.md to 45739ce434ec3c3eb190d35d3948b702b54706cd
a new version of asar is out 0.10.0
protocol: respect requests from partition
Update to Electron v0.36.8
Bump v0.36.8
Create and upload free version of ffmpeg
Update libchromiumcontent with free version of ffmpeg
Translated
Changed session to app to reflect rest of document
Use background color as border color
under -> in
on -> to learn
Only change background on hover
Add docs sentence in new paragraph
Remove v before version
Update header style
Remove parens around version
Tweak holder styles
Use colors from Electron site
Remove all but prompts for version numbers
:memo: Update as upstream
docs: Add note on Chrome version when using widevine
remote: return webcontents instance from cache
Ship ffmpeg in dist, close #4536
mac: Simulate the behavior of cmd+~ when OS X didn't handle it
Link to Menu documentation
Update libchromiumcontent, fix #3666
:memo: Move Electron and OS versions above the description
Drastically simplify the template
:art: lint fix
Improved frame subscriber - now we only use framesubscription events as an event, and we copy from the backing store directly (instead of accessing it through a videoframe)
Initial ISSUE_TEMPLATE draft
Update var declarations
Remove unneeded returns
Remove unused results
Remove unneeded returns
Add newlines between describe/it blocks
Use const for requires
Handle argument parsing in C++
Call OpenExternal with new true default to activate arg
Add missing semicolon
Return value from bindings method
Use markdown list for new options param
without_activation -> activate
Allow openExternal to open URLs in the background #3224
Update libchromiumcontent to use shared ffmpeg
Link with ffmpeg
Link with ffmpeg
remove original English text
Skip eslint on our Windows build machine for now
tanslate file-object.md
Remove command line switches, add v8 flags
:memo: Update as upstream
:shirt: Add missing semicolons
Add API for custom handling of deprecations
fixed typo in the russian translation of README.md
add Japanese Electron Community
docs: Make variable names follow previous example
add a new platform definition for linux
spec: Give beginFrameSubscription test more time to run
:memo: Update as upstream
docs: Remove unnecessary "properties: " suffix
Optional => optional
docs: Improve the docs on sharing data
docs: Cleanup the IPC docs
:arrow_up: :shirt: updated to eslint 2.1.0
spec: Skip autoUpdater tests in MAS build
Use weak pointer instead of manual bookkeeping
spec: Bring back beginFrameSubscription test
docs: fix a minor typo
spelling fixes and americanisms
Clarify arguments sent via ipc
makeSingleInstance clarification
:memo: Update as upstream
Add styleguide in french
Add FAQ
Add french docs link on main README
Translate README in french
:memo::checkered_flag: Add icon overlays in taskbar to docs
Remove unnecessary line feeds
Don't fire callbacks after we end the subscription
browser: handle desktop capture devices in media permission request
emmitted -> emitted
Add missing semicolon
Use assert.throws
Expand error message
Use interpolated string
Add missing semicolon
Throw custom error when WebView API is unavailable
Add failing spec for custom error message
Format webview spec post CoffeeScript conversion
Improve error message
Match existing function style
Throw error when IPC channel is missing
Add failing spec
Clean up returns after CoffeeScript migration
:art:
Add ability to specify command line switches in package.json
browser: emit did-fail-load for invalid url
Sort scripts keys
Add build script
Add bootstrap script
Add initial auto updater specs
Use const for util require
Remove lint errors
Don't use ES6 class for AutoUpdater windows class
:memo: Adding documentation for will-enter-full-screen event
fixes osx request call
Introducing a will-enter-full-screen event that's cancellable
Set icon on NSAlert when specified
Docs: app: small process.argv clarification
Using node::Buffer::Copy() instead of node::Buffer::New() to copy the handle bytes to buffer make the buffer really contains the data.
Document different techniques to share objects
Add readRtf feature with appropriate spec test. Docs updated as well.
Remove ResEdit links from translations
Remove ResEdit
Tweak help message for new path options
Adding support to write RTF to clipboard.
loadPackagePath -> loadApplicationPackage
Support opening file: URLs directly
Add support for launching HTML files directly
Add support for launching http URL directly
Extract helper function to load specified app
Use const for fs/path requires
translate
translate
fix broken link
Clarify overlay description
Remove lint warnings
Don't return anything from will-quit handler
Delete extensions file when there are no loaded extensions
Add failing spec for dev tools extensions file
Correct typo in comment
fix typo
translation for pt_BR
Do process.emit('exit') in WillReleaseScriptContext
Ensure only main frame get notifications
Override WillReleaseScriptContext
Get rid of SavePathData
Destroy the item once item is downloaded
Gracefully destroy downloadItem
Clear internal field when Wrapper is destroyed
Calling cancel() should destroy the downloadItem
Rely on OnDownloadDestroyed to destroy downloadItem
fix lifetime of downloadItem class when defaultdownload canceled
Update app.md
Update Portuguse docs translation
:memo: Update as upstream
Update native-mate for #4307
Improve error message for type error
session: api to clear host resolver cache
fix crash when default download is canceled
No need of DefaultWebContentsDelegate
Remove DefaultWebContentsDelegate
No need to override RequestToLockMouse in CommonWebContentsDelegate
use mediastreamdevicescontroller from brightray to enumerate available devices
add fullscreen permission type
add pointerlock permission type
docs: fix minor typo
expose handler from session and remove permission-request event
Quick fix for the memory leak + docs
:memo: Update as upstream
remove unnecessary getter
Add link to BrowserWindow::setMenu
Renamed some cursor types to their CSS names and added a way to handle custom cursors properly.
:memo: Update as upstream
update the "janelas" to "windows"
Added documentation, restructured the files to fit better with electron's style and fixed a typo in keyboard_util's name.
:apple: Add Show to API for OS X
add spec for new permissions
Do not print warning for FILE_ERROR_NOT_FOUND
delegate to permission manager for other permissions
Update to Electron v0.36.7
Introduced the cursor-changed event with one parameter - the name of the cursor type
Bump v0.36.7
Check whether sender is destroyed before calling sender.send
win: Don't close the handle since we already closed the fd
Only add Hide if OS_X is defined
Bump minimum OSX version to 10.9 (documentation)
Bump minimum OSX version to 10.9
Added missing angle bracket to replace() method
fix bullets formatting in documentation
:apple: Add 'Hide' to App API for OS X only
add spec
webview: add permission-request event
Update to Electron v0.36.6
Bump v0.36.6
docs: cryptographic algorithms used by Electron
Revert "renderer: dont fork the process when there is server redirect"
:memo: Update as upstream
translate zh-TW tutorial using-pepper-flash-plugin.md
translate zh-TW tutorial devtools-extension.md
translate zh-TW tutorial using-selenium-and-webdriver.md
translate zh-TW tutorial debugging-main-process.md
win: Call _close before close file handle
translate zh-TW tutorial using-native-node-modules.md
translate zh-TW tutorial mac-app-store-submission-guide.md
Always fall back to OpenFolderViaShell when trying to reveal a file
docs: uploadData is optional
docs: Revise the webRequest and protocol docs
prepare for retaining "Guides" pages
finished translate application-packaging.md
WIP: docs-translations/zh-TW/tutorial/application-packaging.md
translate zh-TW tutorial application-distribution.md
:memo: Update as upstream
Update brightray to fix compilation error
common: export hideInternalModules
session: provide uploadData with webrequest api when available
Update brightray for #4223
Add Traditional Chinese Translation Page
:memo:Add Japanes translated docs.
Update application-distribution.md
remove unused variable
prevent assignment to constant variable (url)
spec: process.stdout.write
Update node
:memo:Add Japanes translated docs.
docs: Add more on the "electron.xxx" undefined question
:memo: Update as upstream
allow client to decide displaying web notifications
docs: Add "require('electron').xxx is undefined." to FAQ
Add Japanes translated docs.
No need to use scoped_nsobject for id
Add Japanes translated docs, improve a doc style.
spec: hasShadow state
spec: Improve the test for resizable
spec: Test the -able methods
Simplify the setStyleMask calls
Make hasShadow work on Windows/Linux
Reorgnize how attributes work
Fullscreenable => FullScreenable
:memo: Update as upstream
Add app.dock.setIcon to change icon of dock
Update name of paramter for consistency
Add Japanes translated docs.
wrap debugger for lazy initialization
doc fix
doc updated
added hasShadow option to BrowserWindow (osx)
Support alpha in backgroundColor
mac: SetResizable fix
maximizable, fullscreenable docs
maximizable and fullscreenable
Remove Menu::Popup
docs: Default value of positioningItem
docs: Default parameter for Menu.popup
No more need to override Menu::Popup
views: Remove PopupAtPoint
mac: Remove duplicate code of Popup
positioningItem => positioning_item
Update to Electron v0.36.5
add spec
fix api and docs
specify positioning item for popup menus
Add correct window check for wheel events. See description
Properly clean up NSEvent monitor
Rename up/down => begin/end
Using strict comparation
Bump v0.36.5
Use Alt in accelerator
Turn on logging via a command line env var
Log ASAR file access to build ordering hint file
:memo: Use correct shortcut for 'Hide Others' menu item example
:memo: Update as upstream
Expose loadURL for the webview tag.
Update brightray for #4169
Support backgroundColor for window on mac
browser: add webContents.debugger api
Extend NativeWindow to track touch-based scroll events on OS X
:checkered_flag: :apple: Add Silent Notification Support
Add WebView to globals
Enable no-undef eslint rule
Add missing fs require
Add missing semicolons
Add globals to eslint config
Run cpplint from lint npm script
e -> error
Clean up semicolon lint errors
Clean up no-unused-vars lint errors
Clean up no-empty lint errors
Clean up indent eslint errors
Clean up no-unreachable lint errors
Add npm run lint script
webview: add blinkfeatures attribute
browser: change location of default download dir
browser: add font related settings to webpreferences
docs: win.destroy() is safe
Remove trailing whitespace
Run cpplint on utility folder
Update coding-style.md
Add Korean community
Add Japanes translated docs.
browser: fix crash when switching to sibling menu from submenus
Tweak spec description
Remove unused errorMessage reference
Add failing spec
Use const and remove extra returns
fix for windows
IsMovable to return true on Linux
docs updated
added or/and improved closable, minimizable, movable, resizable features for windows on os x and windows
Add Japanes translated docs.
Update debugging-main-process.md
Add Japanes translated docs.
Update frameless-window.md
Add Japanes translated docs.
Add npm start script
Update Japanese translated docs.
modules.exports => module.exports
Add documentation
Add API for checking if AeroGlass/DWM is enabled
Update brightray, close #4124
Remove unneeded semicolon
Add missing {
Use ES6 style class
Disable linebreak-style rule
Lint entire atom folder
Combine duplicate eslint keys
Run eslint on CI
Rename eslintrc-src to eslintrc-base
Add back v8Util binding
Use ES6 style class
Use ES6 style class
Use ES6 style class
Lint spec js files
Add eslint dev dependency
Add initial eslint script
Add initial eslint config
update libchromiumcontent 47.0.2526.110
Use const instead of var
Remove unneeded .constructor segments
Use util.inherits instead of CoffeeScript's extend function
Declare vars one per line
Use [].inclues where appropriate
Remove unneeded [].indexOf fallback
Add missing semicolon
Use 2 space indent instead of 3
code style fix
arguments handing rewritten, doc updated
added a note that this option is only implemented on osx
Ensure we close FD on Windows
spelling: bellow -> below
Small ajustments on lifetime of webContents
spec: Group session.cookies tests
spec: Remove annoying outputs from savePage test
No need to call sender.callbacks.remove
Update to Electron v0.36.4
fix incorrect markdown tag
Bump v0.36.4
Animate window resizing on OS X
Added option to prevent a window from being moved on OS X
Clean up variable declarations
Expand spec description
:fire: stray `ref`
Add missing -spec suffix to desktop capturer spec
Inline `var`
Use `const`
Use `const`
Use `const`
Use `const`
Use `const`
Remove extra newlines around comments
Use // for multi-line comments
Use // for single line comments
Styled the removeListener & removeAllListeners
GetHttpCacheInIO => DoCacheActionInIO
session: api to get current cache size
:memo: Update as upstream
webview: respect properties provided during webview creation
docs - fix typo leading to bad link
Add  Japanese translated docs.
Detail ipc.removeListener & ipc.removeAllListeners
Unlisten the zoom-level-changed event when webview is detached
Change webview's zoom level on JavaScript side
docs: webFrame.executeJavaScript
Handle default parameter of executeJavaScript in C++
Handle executeJavaScript in JavaScript
Add insertText to WebContents
session: api to flush DOMStorage data
Add webFrame.insertText API
Add wrapper functions to mirror old CoffeeScript
:art:
Copy JS files to tempdir before packing asar
Remove coffee compile script
Remove CoffeeScript register in specs
Expect .js specs
Convert gyp targets to use JavaScript
Remove unused dependencies
Remove coffeelint usage
Convert all source files to JavaScript
Migrate to block comments
:memo: Add and update Japanese translated docs.
Use volume serial number as device id
Import PepperFlashDRMHost class
spec: Calling methods of destroyed webContents should not crash
Destroy the native class when webContents is destroyed
Upgrade to Chrome 47.0.2526.110
docs: Mention the session object
missing "var" in line 201 menu.md
:memo: Update some Japanese translated docs.
Cleanup docs and code of setProxy
docs: Update link of VS Community
Pass --touch-devices to chromium contents under X11
Return null for no focused window when calling BrowserWindow.getFocusedWindow()
maintain api compatibility
docs: Notification on Windows can use http:// icon now
Update to Electron v0.35.6
Update to Electron v0.35.6
docs: Make win.getNativeWindowHandle more clear
Specify enumerable property accessibility
Backport https://codereview.chromium.org/1500713003
:memo: Update as upstream
Add Japanese translation documentation for faq and tutorial
follow style guidelines
Change brightray's PATH_START to 11000
Change our PATH_START to 11000
Revert "fix chrome app and user path conflicts"
Update to Electron v0.36.3
Remove unneeded extra semicolons (;; -> ;)
:checkered_flag: support defaultId for dialog boxes on Windows
rename all references to default_button_index -> default_id to keep consistent with cancel_id
session: allow user to isolate pac script and proxy bypass rules
:memo: Update to follow the latest version.
Update supported-platforms.md
Update browser-window.md
:checkered_flag: update windows message_box function signatures to accept default_button_index....and do nothing with it
:memo: add defaultButtonIndex to dialog docs
:penguin: add default button index for linux/gtk
:apple: add default button index for osx
Correct misleading sentence on progress for transparent click through
Update to Electron v0.36.3
Bump v0.36.3
Copy locales in Cocoa format
Initialize resource bundle on browser process separately
Initialize resource bundle on browser process separately
Load cocoa locale before initializing resources
Update browser-window.md
Added getNativeWindowHandle
docs: Mention the limitation of globalShortcut
docs: Mention third party packing tools
docs: Document the display object
update faq link
docs: Orgnize the options of BrowserWindow
Add blinkFeatures option
Rely on content switches for implementing experimental features
Remove pageVisibility option
Remove overlayScrollbars and sharedWorker options
Remove custom WM_GETOBJECT
win: Don't change transparent window's style
Update debugging-main-process.md
Update debugging-main-process.md
Add info on how to debug from 0.30 onwards
Throw ENOTDIR when calling mkdir inside asar archive
:memo: Update as upstream
:apple::bug: make displaying alternate tray image depend on mouse down event instead of highlight state
Add FAQ
Do not write our own filter code
Show menu by clicking the menu button
Do not behave like bookmarkbar menu
Update brightray to fix menu not loading resources
Load content_shell.pak for current scale factor
Pass origin in capturePage
Revert "browser: dont lose coordinates in capturepage src rect"
Rename did-navigate-to-different-page to did-navigate
Update libchromiumcontent for #3958
Add isDevToolsFocused to webview
:memo: Update as upstream
:white_check_mark: add tests to insure window.location.hash changes & window.history.replaceState cause 'did-navigate-in-page' to fire
:white_check_mark: add tests for will-navigate, did-navigate-to-different-page, did-navigate-in-page events in webview
:memo: add 'did-navigate-in-page', 'did-navigate-to-different-page', 'will-navigate' to docs
add did-navigate-in-page event to webview & webcontents (triggers on hash/ref changes, anchor links...), pass url into events
add will-navigate, did-navigate-to-different-page events to webview
:memo: update webview docs to include devtools-* events
:white_check_mark: add tests for webview devtools-* events
:bug: add isDevToolsFocused to WebContents to fix #3928, add devtools-[focused|open|close] events to WebView to fix #3783.
Add comment on why checking empty set
Update to Electron v0.35.5
:apple: only add sub menus to Window when they actually have menu items. fixes #3873
:apple: fix #3864 where saving a file causes a crash if file extension array is empty
Update libchromiumcontent: component_updater is not needed
componenet_updater is not needed
docs: Using Widevine CDM Plugin
browser: provide localized string from resourcebundle
initialize resource bundle with application locale awareness
:memo: Update as upstream
Update brightray and libchromiumcontent with widevine support
Update libchromiumcontent with widevine support
osx: Implement clear recent documents
remote: support arguments of type Date
Do not ship widevine plugin
Update libchromiumcontent
webFrame: support fetch api for schemes that are privileged.
tray: Support file-drop from OS X Dock
Do not link with unnecessary libraries
Remove hacky build settings
Update libchromiumcontent to include widevine libraries
Add widevine third party
Leak FunctionTemplateHandle
Cache function templates created by CreateObjectWithName
Optimize the case when creating plain object
Variables are not shadowed in inline class
add zh-CN translation for devtools
Update to Electron v0.36.2
s/Phrase/Phase
Bump v0.36.2
:memo: Update as upstream
Upgrade brightray for atom/brightray#188
linux: Adapt to new Notification style
win: Fire NotificationFailed when failed to show notification
mac: Emit closed when notification is dismissed
win: Adapt to new Notification style
Decouple notification code from content module
renderer: dont fork the process when there is server redirect
Expose NotificationPresenter to public
Add an abstract Notification class
Refactor the notification code
Upgrade brightray for #3866
Do not use icon url when showing notification
Removed unnecessary backtick.
spec: Surppess did-change-theme-color test
spec: Increase timeout for window.open
spec: onBeforeSendHeaders should reset the whole headers
Reset whole headers when requestHeaders is set
Adding check for Windows version and alternate flags for Windows Vista/7
No longer need to ship with libnotify.so
Update brightray for #2294
Load libnotify dynamically
:arrow_up: asar
Remove visual artifacts of hidden-inset window
Add tests for did-change-theme-color event
Cancel callback in OnComplete event
Add did-change-theme-color event to webview
Cancel callback when URLRequest is destroyed
:memo: Update as upstream
Formatting app.md
Allow specifying StrictSSL in the NPM config file
fix cpplint warning
add test
browser: fix value of document.hidden
add api to webview
webContents: adding findInPage api
:memo: Update as upstream
Code cleanup of browser_mac.mm
Update brightray for #3831
spec: serviceWorker registration with file scheme
Desktop Environment Integration: rearranged sentence
Desktop Environment Integration: typo
Add media play events to webview
navigaton: handle history operations from renderer
devtools: exclude devtools related http header from serviceworker context
Update to Electron v0.36.1
Bump v0.36.1
Update node: Use phantom callback in CallbackInfo
docs: Standarize the "(**required**)"
docs: Use "(optional)" instead of "__optional__"
Revert "Upgrade node to fix crash in Buffer"
browser: check for rvh existence
DockShow workaround
:memo: Update as upstream
escape url string
Remove sync call in remote module
Pass opener ID in command line
Upgrade libchromiumcontent: enable sending sync message to UI thread
docs: |options| is not optional
Upgrade node to fix crash in Buffer
Don't pump message loop when sending sync msg
Update libchromiumcontent
Set process.throwDeprecation as early as possible
Improve spec description
:memo: Add missing period
:art: Remove parens
Add specs for companyName/submitURL being required
Use better signature match in deprecation message
Remove starting crash reporter from quick start
Make companyName and submitURL required options
Remove duplicate start calls
Mark companyName and submitURL as required
mention getUserMedia options in desktop-capturer docs
:bug: Support strict mode on Tutorial
:memo: Update as upstream
Upgrade node, fix #3786
Add A5 Page Size to printToPDF
Inline JSON message response
Mention source in spec description
Assert that source id matches opener
Remove unused ipc event handler
Remove unneeded custom postMessage on window.opener
Use id from source window when building proxy for event source
Add comment about window.opener tweaks
Make window.opener a BrowserWindowProxy
:memo: Update as upstream
:memo: Update as upstream
Addeda versionin package.json.
Upgrade brightray for atom/brightray#184
Update auto-updater.md
browser: dont lose coordinates in capturepage src rect
Revert ":memo: Update as upstream"
Indicate that Update 5 is required for VS2013
Add FreeBSD path to install.js
use value from shell_resources.h
Backport https://codereview.chromium.org/1406133003
:memo: Update as upstream
Passing '' to fromPartiion should return default partition
docs: Update webRequest API
docs: Improve the cookies docs
Cleanup the cookies code
spec: Suppress navigator.webkitGetUserMedia test
Use generic function to handle events
fix value of IDR_CONTENT_SHELL_DEVTOOLS_DISCOVERY_PAGE
Add generic version for FillDetailsObject
spec: Add test cases for webRequest
Add widevine third party
Make the webRequest listener asynchronous
EventType can not be OR'ed
Use lower case for getters
Parse filters in API code
Unify how listeners are handled
Simpily the code that fills |details|
EvenTypes => EventType
Allow passing null to webRequest
docs: Improve the webRequets docs
Update to Electron v0.36.0
:memo: Update as upstream
Bump v0.36.0
Update browser-window.md
removeWindow -> remove
Reuse BrowserWindowProxy instances
Expect event source and opened window to be equal
sequnce -> sequence
Use source origin in window.postMessage event
Add failing spec for event origin
Guard against null guest or embedder
Don't save __dirname into path.txt.
default session should be persistent
fix pointer usage
Add npm test script
Pass through mocha invert option from test CLI
Pass mocha grep command line option through to spec app
Parse spec arguments using yargs library
:memo: Update as upstream
win: Don't attach console for third party terms
Avoid duplicate building for PR
Also disable test phase
Do not automatically build everything
Remove unneeded things
Use default node 0.12.7
Run cibuild
:memo: Update as upstream
Bring back AppVeyor
Don't add the "Enter Full Screen" menu item automatically
Don't emit `will-quit` event when calling app.exit
Exit from a setImmediate callback
Just include exit code in spec output
:memo: Document quit event includes exit code
Revert comment tweak
Get exit code from within App::OnQuit
Remove grep value setting
Move event forwarding back to init
Include exit code with quit event
Add spec for exit code on event
Emit process exit event with app exit code
be standard
allow rebuilds. fixes #78
fix response headers modification
add documentation
support filtering event with url regex
session: add webrequest api
add test
provide option to set content for POST request with url_fetcher
protocol: provide upload data when available
Use HTTPS for libchromiumcontent's URL
Update as upstream
Update brightray for #3720
docs: win.setIgnoreMouseEvents
Ukrainian translation (uk-UA)
protocol: api to register schemes that can handle service worker
fix chrome app and user path conflicts
Link with libyuv_neon.a on ARM
Link with libyuv_neon.a on ARM
Install libxtst-dev on travis ci
Update brightray: Link a few more X libraries
Link a few more X libraries
Update brightray for various linking problems
Xcomposite is needed for ia32 build
webrtc requires IOKit
There is no libdesktop_capture_differ_sse2 no arm
add list of next_protos to use
Update libchromiumcontent and brightray
Link with libdesktop_capture_differ_sse2 on darwin
Update as upstream
Revert "Update as upstream"
Update as upstream
Update clang to the same version with Chrome 47
Simplify the desktopCapturer code
spec: Add a simple test case for desktopCapturer
:memo: fix grammatical error in desktop notification docs [ci skip]
docs: Improve docs of desktopCapturer
Remove deprecated API usages
Update brightray and libchromium for desktopCapturer
Add desktopCapturer to electron
Update brightray
Update libchromiumcontent
We are now on 0.36.0
No need to use CommandDispatcher
Upgrade to Node v5.1.1
Update the libspeechd_loader
Make it safe to use sendSync
Rig GlobalMenuBarRegistrarX11 for Atom
Update to Chrome47 version of tts_linux
Update to Chrome47 version of GlobalMenuBarRegistrarX11
Update to Chrome 47 version of tts_win
:art:
Directly assign submenu when constructor is Menu
Use ipc eval in spec
Move ipc handler to be near others
Mention conversion using Menu.buildFromTemplate
:art:
Convert submenu when non-Menu is passed into MenuItem ctor
Add failing spec for Menu.buildFromTemplate
Link with libsandbox
spec: Make the "remote listeners" test more reliable
V8 now checks strictly when callin Neuter()
Update to API changes of Chrome 47
Update to API changes of Chrome 47
Chrome 47.0.2526.73
support an api with SetIgnoreMouseEvents, and worked fine with osx
:memo: [ci skip] translation build instructions
add ZH-CN translation for using-selenium-and-webdriver
:memo: [ci skip] browser window translation
Update to Electron v0.35.4
Bump v0.35.4
Update native_mate: isDestroy => isDestroyed
isDestroy => isDestroyed
Update to Electron v0.35.3
Bump v0.35.3
add translation of using-native-node-modules for ZH-CN
spec: Suppress flaky tests on Travis
Update as upstream
Update as upstream
spec: Suppress execFileSync test
'key of' is better than Object.keys
Destroy the native window in next tick
Don't add too much listeners in BrowserWindowProxy
Add contributing guide
add placeholder CoC content to Korean README
link to CoC from README and CONTRIBUTING
add CODE_OF_CONDUCT.md
Update as upstream
Revert accidental change to this submodule.
Add newline before example code block
Weak map only needs to be deleted for once
Remove itself from the cleanup list when it is destroyed
It is fine to leak a V8 handle on exit
window.id is no longer available when window is closed
Use BuildPrototype to build prototype
Do not manually manage native resources
Do not manually destroy native resources
Make sure V8 Function passed to native code are destroyed on UI thread
This spec is a little unreliable; up the timeout.
Write a spec for downloading from the webview tag.
Make downloadURL available on the webview tag.
Document the new method.
Add a DownloadURL method on WebContents.
Ensure that `window.open` does not override the child options
Read window size properly in `window.open` test
Add electron-br
Update as upstream
win: Implement menu parameter
mac: Implement menu parameter
Add `menu` parameter for Tray.popUpContextMenu
Update debugging-main-process.md
Deprecating a property with method of same name causes trouble
Make sure temp file will be cleaned up when base::Move fails
Don't call Move if there is no need to move
:memo: [ci skip] fix more typos
:memo: [ci skip] fix typos
Change header
:memo: [ci skip] Update to match english docs, fix typos
:memo: [ci skip] Add translation to auto-updater, change links
:checkered_flag: Preserve file extension when extracting from asar
Deprecate the page-title-set event
Delay the page-title-set event to next tick
Emit event when title becomes empty
No need to override TitleWasSet in NativeWindow
Delay the did-fail-provisional-load event to next tick
Put common constants in atom_constants
docs: process.noAsar
spec: process.noAsar
Add process.noAsar to turn off asar support
Lint harder
:memo: [ci skip] Add translation to app.md
:memo: [ci skip] Update to match english docs.
add standard
Linting
Add tests to verify behavior
Add CORS header to file jobs
Enable all origins via CORS header for custom schemes
Delete BridgeTaskRunner when main message loop is ready
:art: add miss charactor
Update as upstream
docs: Mention submitting to MAC costs money
Update 'Estilo de código' link.
Remove 'Google Translator'-like translation
Wrap [ci skip] in backticks
Suggest [ci skip] in documentation-only commits
fix typo in "rotation" string
Small fixes
Update as upstream
add packaging translation for ZH-CN
init russian lang docs
Update to Electron v0.35.2
Bump v0.35.2
Add executable permission in CopyFileOut
spec: Test execFile and execFileSync
docs: Add notes on spawn and exec
Update as upstream
Update docs for webContents.addWorkSpace
Update docs for globalShortcut.register
Add ELECTRON_NO_ATTACH_CONSOLE env var
docs: Add example
docs: Add Environment Variables
Check ELECTRON_RUN_AS_NODE env var
Update brightray for #1369
Check ElectronMainProcess key in Info.plist
Change how we detect Helper process
:memo: open-file and open-url events are only available on OS X
Update to Electron v0.34.5
mac: Clears the delegate when window is going to be closed
Improve the deprecation notice for ipc module
Ensure calling webview.send will not block the renderer
Update as upstream
Update to Electron v0.34.4
s/loadUrl/loadURL/g in docs-translations/
docs: Mark code blocks
Update brightray for #3550
Update brightray for #3458
Use application name when app user model ID is not available
Only create NotificationPresenter when succeeded to initailize toast manager
Small fixes
Update as upstream
docs: Add indent for items in list
Add documentation for --proxy-bypass-list
Add support for --proxy-bypass-list
protocol: handle http responses with no content
Remove trailing colons from default menu roles
Add space, too
Expand the descriptions of options with defaults
Add test
Update docs
Make BrowserWindow options argument optional
Add missed translation
Rephrased the note
Add a note to readme about docs versioning
Added ctags cache files to .gitignore
Make links to docs, point to the correct version
Update as upstream
Update to Electron v0.35.1
Bump v0.35.1
Update brightray for #3493
Use AppUserModelID as app id
Small style fix
Make child_process.execFileSync support asar
Update as upstream
Cleanup docs
Address feedback
Cleanup docs, fix typos
Rename: READE.md -> README.md
Create README.md
Rename quick-start.md -> tutorial/quick-start.md
docs: Put webContents.session under Properties
spec: Use session.defaultSession in tests
Deprecate app.resolveProxy
docs: New session methods
docs: webContents.savePage is placed at wrong place
Add session.defaultSession and remove app.defaultSession
Add session module
Add isDestroyed method for classes with destroy method
Support the "desktop" window type on Mac OS X
Upload the dSYM symbols
Update libchromiumcontent
mac-app-store-submission-guide.md: typo correction
Cleanup docs, Improve grammar
Update ipc-renderer.md
Translate docs
Update browser-window.md
Standardize platform labels
Translate docs
web-view-tag.md: small typo correction ('the' position swap)
Small changes
Add translation, improve grammar
Update as upstream
Translate docs
Add missed translation
Small changes
docs: Update the certificate APIs
Add session.setCertificateVerifyProc
Translation docs
Add certificate-error event
Translate docs, small changes
Rename select-certificate to select-client-certificate
Add Delegate for AtomBrowserClient
use loadURL since loadUrl is deprecated
Improve exception messages from remote calls
Update as upstream
'app-command' event is only available in Windows
Translate docs
Small changes
Update as upstream
Improve grammar
Add BrowserWindow translation
Rename verify-certificate to untrusted-certificate
Emit verify-certificate only when default verifier fails
Create a new CertVerifierRequest for each request
Move AtomSSLConfigService to atom/browser/net
Move AtomCertVerifier to atom/browser/net
No need to use weak reference
Portuguese translation of coding-style.md
Add missing translations
Added korean translations for webContents
docs: Use absolute URLs
Update brightray: fix #3458
Improve grammar
Improve grammar
Small changes
Small changes
Change the translation encoding
Add Mac App Store guide translation
use delegate to notify verification requests
Update as upstream
Merging keyCode and keyIdentifier and adjusting the docs accordingly
Update to Electron v0.35.0
Bump v0.35.0
Update brightray: fix building on Windows
There is no more NotificationError
Update brightray
Add Simplified Chinese translation for source code structure
Small fixes
Add download-item.md translation
Added documentation for the changes in KeyboardEvent and added missing mouseMove event type
Added the option to `KeyboardEvent` to specify the sent character by it's name (if it can't be sent via the `keyCode` parameter)
Update as upstream
Update README.md
Small change
Moved scope creation before the allocation of the buffer in `FrameSubscriber`
add docs
browser: fix reloadignoringcache api
Call content::DesktopNotificationDelegate::NotificationError when toast notification fails on Windows
docs: Document the new style of remote module
Use the new style remote module in Electron
Send sync message to get list of modules
Simplify how remote.require('electron') is optimized
Make it easier to use remote
Rename the "clicked" event to "click" in Tray
Replace "Url" in API names with "URL"
Separate options from switches
Add paths from chrome_paths
Import the chrome_paths code
Cleanup and docs for the --js-flags
linux: Don't throw error when using autoUpdater
retrieve download directory using  on linux
emit verify-certificate event for handling verification
browser: check window liveness before setting title
tracing: fix docs and allow null values in file path conversion fromv8
session: api to allow handling certificate verification
spec: Disable old APIs in tests
docs: Add notes on old APIs
Add electron.hideInternalModules
Rename the env to ELECTRON_HIDE_INTERNAL_MODULES
docs: Update codes in docs to use require('electron')
Optimize remote.require('electron')
Use require('electron') in Electron's code
Add --js-flags support for main thread.
Add ELECTRON_DISABLE_OLD_STYLE_MODULES env
Add "electron" module
Update node for atom/node#13
Update as upstream
Update brightray
docs: Update BrowserWindow's options
docs: More notes on --proxy-server, close #3390
Windows Toasts: Don't call WFI statically
spec: Make the crash-reporter test more reliable
Use new styles of browserWindow options
Avoid storing unrelated things in WebContentsPreferences
Deep copy the options
Be compatible with old BrowserWindow options
Remove unneeded override code
Use minWidth style for options instead of min-width
Reorder switches
Delay Load WinRT Libraries
Update as upstream
Standardize the webContents object name
Call [NSUserNotification setContentImage] conditionally using respondsToSelector instead of hardcoded OS X version check
Suggest adding arguments when running webdriver
Add Dictionary::Delete
docs: Update tray docs with drop and drag-end events
Tray: Add drag-end and drop events
Tray: Rename events to drag-enter and drag-leave
Update brightray for atom/brightray#167
Simplify the management of objects
Make the toast type really work
Use smart pointer for everything
Code cleanup with Chromium's coding style
Update brightray for win7 crash of using notification
docs: Clean up the desktop-environment-integration.md
Implement event.sender for ipcRenderer
docs: Update with new IPC modules
spec: Use multiparty instead of formidable
Use ipcMain in Electron's code
Deprecate ipc module for ipcMain
Use ipcRenderer in Electron's code
Document Notifications
Deprecate ipc module for ipcRenderer
Ensure Notifications are Windows 8 and up only
Simplify ToastEventHandler using WRL::RuntimeClass, which implements the IUnknown interface
Update brightray for atom/brightray#161
Print warnings for deprecated APIs
Do not turn off deprecation notice by default
Add "deprecate" module
Windows Toasts: Hide(), Runtime Check, Header Cleanup
Windows Toasts: Icons, Events, Cleanup, Documentation
Windows Toasts: Enable Basic Notifications
Rely on "download" script for argument verification
Update libchromiumcontent for filenames.gypi fix
Update brightray for atom/electron#3310
Update libchromiumcontent for atom/electron#3310
Update as upstream
Add option to build local libchromiumcontent - Currently libchromiumcontent is downloaded by default. - Now developer can choose to provide local libchromiumcontent src, shared and static path
Add option to build local libchromiumcontent - Currently libchromiumcontent is downloaded by default. - Now developer can choose to provide local libchromiumcontent src, shared and static path
Update brightray for #3357
linux: Link Xi with pkg-config
Update to Electron v0.34.3
Bump v0.34.3
Make sure handles of callbacks are releases on exit
win: Add ELECTRON_DEFAULT_ERROR_MODE env
Make process.exit() quit gracefully
Update as upstream
Tray: Remove extra qualification in header
docs: Add Tray drag-entered and drag-exited events
Tray: Add drag-entered and drag-exited events
allow delegate to provide certificate verifier
win: Guard against failure of RtlAddFunctionTable
Re-enable accessibility in Electron on Windows
Update devtools-extension with a note about it not working
Make sure all native resources get freed on exit
Destroy JS env immediately after running destruction callbacks
mac: Destroy the app delegate before running destruction callbacks
Cleanup wrapper function when app has done quitting
Style fix
Update as upstream
:checkered_flag::bug: Buffer overflows in tooltips
remove kDisableLegacyIntermediateWindow switch set
Update nodejs url
win: Use electron.app.$1 as default user model id
docs: app.setAppUserModelId
docs: Add notes for working together with Squirrel
win: Set app user model ID in one place
win: Do not set app user model id by default
Update redirects
Translate menu template directly in C++
Ignore case for type of savePage
Update native-mate
Don't return v8::Maybe for std::vector
Code cleanup for remote module
Spanish translations of the documents
Update auto-updater.md to improve readability
Improve error handling from remote
Update dialog.md
browser: handle flash context menu
Add Windows version of running cmd
Clean up the code handling renderer callback
Translate "Diferencias Técnicas con NW.js"
Replace Mac with OS X
Update dialog.md
use webcontents id to identify callbacks
Update autoUpdater api docs
Allow v8 to optimize fs.readFileSync
Update to Electron v0.34.2
Bump v0.34.2
fix capital I -> i in isDocumentEdited
add line and column values to callback id
create binding to idweakmap
use idweakmap for holding callbacks in browser
remote: track listeners for browser side
Remove extra spaces
Update as upstream
Small code cleanup
Returns buffer instead of WPARAM and LPARAM
Use WPARAM as uint64_t and LPARAM as int64_t
Added .idea to .gitignore
Update from @jlord
Guard against multiple calls of auth
docs: login event
Also emit "login" on WebContents
Converted callback can only be called for once
Also pass "webContents" in "login" event
Pass auth_info and request in "login" event
Add login event for "app" module
Don't leak TranslaterHolder
Use the callback converter in JsAsker
spec: Return early on error
Don't leak FunctionTemplate when converting C++ callback
Add dummy LoginHandler
Use uint64_t instead of LPARAM
Add converter for LPARAM
Creating supported-platforms.md
Win: Remove adding '*.*' to file name in a save dialog.
Change windows messages api to hook instead of emitter
Revert "Win: Remove adding default file filter(*.*) in a save dialog."
Update libchromiumcontent: fix private API call
Remove original msg
Win: Remove adding default file filter(*.*) in a save dialog.
Translate README.md
Added browser-window event 'message'
Add extra headers option to webContents.loadUrl
Ship LICENSES.chromium.html in zip archive
:memo: Add source code directory structure spanish translation
nativemate: use maybe version of v8::Function::Call to avoid exceptions
:memo: Add coding style spanish translation
Remove english words in description
Update web-contents.md
Update tutorial/quick-start.md for zh-TW docs
Update as upstream
Update to Electron v0.34.1
Bump v0.34.1
docs: auto-updater on Windows
win: Make auto-updater really work
Updated docs
Updated docs
Keep compatibility with old API style
Simplify the auto-updater implementations
Move implementation of auto-updater on OS X to another file
Emit Date object in C++ directly
Pass real Error object in error event
docs: background-color on Windows
Add setBackgroundColor method
win: Set native window's background color
session: allow setproxy to use external pac script
docs: New behaviors of makeSingleInstance
Pass original argv in callback
debugger: expose v8debug
win: Pass original command line
posix: Pass original command line
Remove the need for ProcessSingletonStartupLock
Revert "app.makeSingleInstance is not available on OS X"
Correctly handle notification callback when shutting down
linux: Delay creating watcher until message loop is ready
linux: Delay listening to socket until message loop is ready
Don't discard tasks in BridgeTaskRunner
app.makeSingleInstance is not available on OS X
Simplify the usage of singleton
Make sure current task runner is available
docs: Make code more JS-style
docs: background-color is Linux-only for now
browser: option to set window background color
Update crash-reporter.md
:memo: for makeSingleInstance
Remove atom_process_singleton, just use the Chrome classes directly
cpplinting
Move all the browser.cc code over to atom_api_app.cc
quick fix removing excess character
Only cleanup if we are the main process
If a user calls makeSingleInstance more than once, just ignore it
Update as upstream
Need to free this early or get a SIGSEGV on Linux
Initialize things in the same sequence with main process
osx: Implement draggable region with mouseDownCanMoveWindow
Allow WM_COPYDATA from all processes
Since setting up process_singleton is now conditional, its cleanup / unlock must be too
grammatical corrections for spanish translations at api, styleguide and README
I don't think we need this
Infinite Linting
Update to use Chromium sources
Port our changes over
Copy back the original versions of Chromium files in
Move initialization of Single Instance into MakeSingleInstance call
Ditch double-callback, just use mate directly
Wire up the final callback to JS
I am not good at C++ at all
At Browser ctor time, DIR_USER_DATA is unset, wait
Typo
Wire everything up
Add a native mate converter for command lines
Set up Browser to create the process singleton
Bring in chrome_process_singleton but nuke the active dialog bits
Create a dummy method in app that we'll twerk
Get POSIX mostly compiling
Remove a bunch of stuff we don't need in process_singleton_win
Get process finder working
Come Correct with headers
Renames to avoid confusion, add file
Import process_finder verbatim
Start to remove / rearrange some header files
Add the files to filenames.gypi
Copy some relevant files over from Chromium
Update app.md
use webContents.openDevTools
PR feedback adressed
Add some missing words ("be" and "the")
Update as upstream
No more need to call setrlimit
docs: app.allowNTLMCredentialsForAllDomains
Code cleanup
Update brightray for #3120
docs: Mention the ELECTRON_ENABLE_LOGGING env
Add ELECTRON_ENABLE_STACK_DUMPING env
Add ELECTRON_ENABLE_LOGGING env
Nuke old declaration
Update brightray for atom/brightray#158
Match the electron-quick-start repo
Add links to electron-quick-start
browser: flag to diable specified cipher suites
Plumb the method back
Set up our browser context to use new delegate-based API
Remove our plumbed methods
Move the NTLM check to the URLRequestContextGetter delegate
Update to brightray.gyp : libresolv
Update README.md for zh-TW docs-translations
Replace Mac with OS X for zh-TW docs translation
Replace io.js with node.js for zh-TW docs translation
:bug: Honor fs.readFileSync contract for empty packed asar file
Add options check.
Small fix in README
Update as upstream
Update translation progress in README.md
Rollback submodule change
Linter fixes
Come Correct with cpplint
Wire it up
Create a new method on App to override URL Security Manager's decisions wrt NTLM
Fallback to default behavior if boolean is false
Create a new API to trump IE security settings if desired
Replace the default one with our own
Create a new URLSecurityManager that allows explicit settings
Additional updates to adhere to styleguide
[truly humble correction of a misspelling]
Update MAS tutorial to improve readability
replace Mac with OS X
Improve grammar for more readability
Improve grammar, some fixes
Clean up CallbackRegistry
spec: Load url after event listener is set up
docs: Small fix on mas guide
Update to Electron v0.34.0
Updating README.md
Translation of debugging-main-process to pt-br.
Bump v0.34.0
Update to Electron v0.33.9
Bump v0.33.9
Revert "Go back to using node's console.* and std*.write"
docs: Mac App Store Submission Guide
subpixel-font-scaling option is removed
Update libchromiumcontent to have mas build
Allow "released callback" errors to be traced to remote calls
Implement webContents.savePage API.
Translation of using-pepper-flash-plugin to pt-br.
Translation of using-native-node-modules to pt-br.
spec: Bring back crash-reporter spec on x64 Windows
win: Only install breakpad hook when crash-reporter is used
win: Hook up V8 to breakpad
win: Make the event in crash service signaled by default
win: Don't output newline except for main process
translate "/docs-translations/ko-KR/api/app.md"
translate the debugging-main-process.md
Update application-distribution.md
Update to Electron v0.33.8
Bump v0.33.8
mas: Do not link with QTKit for mas build
Update libchromiumcontent to latest master
mac: Set CFBundleExecutable for Electron Framework
mac: Don't specify CFBundleExecutable in framework
mac: Set LSApplicationCategoryType in Info.plist
mac: Set CFBundleShortVersionString in Info.plist
mas: Use mas as platform name in dist
spec: Disable crash reporter test for MAS build
mac: Set process.mas to true for MAS build
mac: Disable auto updater in MAS build
mac: Disable crash reporter for MAS build
Update brightray for atom/brightray#156
:lipstick:
translate the supported-platforms.md and update the README.md
provide request context for nss_oscp initialisation
Update as upstream
Update brightray for #2903
nativemate: handle binary types in v8 value conversion
Remove storage limitation of WebSQL.
Add missing paragraphs
Update as upstream, improve grammar
translate the application-distrubution.md
fixed devtools instructions
fix docs-translations/zh-CN/api ipc-main-process.md '' ->  bug
add new file:   ipc-main-process.md
Block all internal logs when running without `--enable-logging`
Go back to using node's console.* and std*.write
online-offline-events.md translated to pt-BR
online-offline-events.md translated to pt-BR
Update to Electron v0.33.7
Bump v0.33.7
Can not print string16 in wcout on POSIX
Update as upstream
Copying online-offline-events.md file
add translate of app.md in zh-CN
Some fixes
README.md updated
Translation to pt-BR of the desktop-environment-integration.md file
Revert vendor/ changes added by mistake.
Control linking of QTKit in electron
Update brightray for #3048
Update to mas branch of libchromiumcontent
set accept-language header from system locale
browser: get accept-language header from system locale
Removing "Rebranding", "Empaquetamiento" and other minor changes to es/tutorial/application-distribution.md
Breakdown a super long line inside styleguide.md
Adding /docs-translations/es/styleguide.md
Adding missing links to /docs-translations/es/README.md and improving some texts.
Enable accessibility tree only when VoiceOver enabled, fixes atom/atom#3288.
NSWorkspace selectFile:inFileViewerRootedAtPath: requires a non-null second argument.
remove the --app option from the default_app documentation
Update brightray and crashpad for XCode 7 fixes
webcontents: dont modify response header value
webcontents: notify guests of embedders' zoom level change
Move native modules to optionalDependencies
grammar and corrections
add --app parameter and update the example usage in the default_app #1877
grammar corrections
add quick-start guide pt-BR translation
:lipstick: Add preposition to globalShortcut.unregisterAll()
:lipstick: Add semicolon to global-shortcut code example
Improve grammar
Refine API design: desktopCapturer.getSources.
Translations of some of the Electron docs API in Spanish
Relay electron exit code
Use Xcode 7.
This now has to be non-nil.
++brightray
++crashpad
Don't reference the dylib directly.
Update brightray for #2855
Guard against undefined, fix #2995
Update brightray, fix #2315
Update as upstream
views: Make size constraints work immediately after set
linux: Restore size constraints when became sizable
spec: Increase timeout for window.open specs
spec: Make window.open specs more reliable
osx: Set resizable flag when creating window
Setting "x" and "y" should not change window size
Update as upstream
Replace io.js references with node.js references
Remove default definition of ContentSizeToWindowSize
Separate Windows specific code of NativeWindow to another file
Update native modules doc
mac: Force Xcode to use C++11.
mac: Don't define an SDKROOT.
Update screen.md
Update process.md
Update to Electron v0.33.6
views: Remove hack on setting min/max size for frameless window
Make min/max size respect use-content-size
osx: Call setContentMinSize in SetContentSizeConstraints
views: Use the quicker way of return content size
views: Implement NativeWindow::SetSizeConstraints
osx: Add NativeWindow::SetSizeConstraints
Bump v0.33.6
Define related marcos for webrtc on Windows and OS X.
Refine more about desktop capturer API.
Update to Electron v0.33.5
Bump v0.33.5
docs: "loaded" event of "process"
docs: Removed unneeded changes from PR
example code didn't run
Make it work only on Windows
Update brightray for #877
Refine: make desktop-capturer as a renderer module.
docs: Remove `cache` and `userCache` dir
Quit gracefully when Ctrl-C is pressed
Make Browser::Quit more robust
linux: No longer needs to manually read DPI settings
linux: Set device scaling factor
linux: Enable force showing menubar
Update brightray for atom/brightray#149
Ignore X Window System errors
Minor grammar correction
Remove Vista as possibly working
Prevent Node from adding paths outside this app to search paths
Clear node's global search paths
No need to add "app" to search paths
Update as upstream
docs: --enable-logging
Disable logging unless --enable-logging is specified
docs: No leading slash in --url-base
[Linux] Link libraries for desktop capture API.
docs: Add "Supported Platforms"
Make desktop capture API work on Windows.
[Windows] Link libraries for desktop capture API.
supported operating system list
Implement desktop capture API on OS X.
[OS X] Link dependent libraries for desktop capture API.
Update to Electron v0.33.4
Bump v0.33.4
Update as upstream
Override document.hidden
Revert #2879
Update brightray for atom/brightray#147
Code cleanup
Update brightray for #2851
docs: Move devtools methods to WebContents
Don't show open dialog as sheet in devtools
Inherit owner window in devtools
Do not enumerate windows in remote.getCurrentWindow
Add WebContents.getOwnerBrowserWindow
Move devtools API to WebContents
Add environment variable as escape hatch
Rewrite unity check to look for libunity SOs
Make Menu.popup accept no parameter
remove required width and height BrowserWindowOptions
provide remoteBase to load remote devtools modules
Exit the process when unable to find a valid app
Cache remote WebContents object of webview
Code cleanup
Improve grammar
protocol: allowing default clients to handle external unhandled protocols
Update quick-start.md
Update as upstream, small changes
Detalied documentation about frameBuffer's format.
Update node, fixes #2916
add examples
update brightray
Style fix for #2918
Style fix
Added documentation about the changes
Added text and unmodifiedtext setting when sending char type keyboard events, and made the type of the character read char16, so I can simulate char events from non-english origins.
Set default extension in Windows file dialog
enabling network emulation in devtools
session: api to emulate network conditions
Update example variable name prefix (atom to electron)
standardize package.json
Add ability to preload modules (--require, -r)
Update to Electron v0.33.3
Bump v0.33.3
Update to Electron v0.30.8
Update as upstream, fix small typo
Use 0.8.0.
Update to Electron v0.33.2
Adding option to specify the button of WebMouseEvent.
Bump v0.33.2
osx: Make draggable region work for window with hidden titlebar
Clean up code
:memo: fix a typo
Update node to fix building on Windows
Update node, fixes #2894
spec: Suppress the setTimeout test on Travis CI
Some cleanup.
Call WasShown when showing window
spec: Increase timeout for setTimeout test
Reimplement downloadItem.getFilename API.
docs: Set npm_config_runtime when using npm
Redefine 'will-download' design.
Update to Electron v0.30.7
spec: Run an example of ffi
Revert "spec: ffi is crashing on OS X"
Update libchromium to have the V8 patch
browser: hide webcontents when window not shown
spec: Remove the will-navigate test
spec: Reading asar file should not leak fd
Update as upstream, improve grammar
Remove GUID from Shell_NotifyIcon calls
Update brightray for #2861
:memo: Include UTF-8 charset in quick start example
spec: ffi is crashing on OS X
spec: Test whether ffi works
Update node to not rely on GC to free memory
docs: win.setMenu is not available on OS X
browser: switch to set minimum version for TLS fallback
Clean up target arch support based on pull request #55 comments.
Added target arch support
docs: The options parameter of new-window event
Pass options in "new-window" event
spec: Increase timeout for window.open specs
docs: Mention window.open inherits options
spec: window.open should inherit options of parent window
Inherit parent window's options in window.open
spec: Add test for allowpopups attribute
docs: allowpopups attribute
Add allowpopups attribute for webview
Don't print error when window.open failed
Update to Electron v0.33.1
Bump v0.33.1
spec: Suppress beginFrameSubscription for now
spec: Revert back to original behavior of setImmediate
No more need of manually setting process as local variable
Don't make setImmediate a local variable
webframe: api to register scheme as privileged
allowing delegates to provide their sslconfigservice
Add spec for download item.
Allow emitting 'done' event when user cancel the download saving dialog.
Add http_response_code, method, referrer, response_headers to did-get-redirect-request event.
Refractor in `completed` event in DownloadItem.
spec: Suppress beginFrameSubscription on CI
spec: Add timeout for beginFrameSubscription
spec: Prevent callback of beginFrameSubscription being called twice
Add Chromium's licenses to the dist
Add `donwloadItem.getContentDisposition()` API.
Keep compatibility with old APIs.
:memo: Add DownloadItem doc.
err undefined
Introduce DownloadItem for supporting more downloading features.
Implement session.setOpenDownloadDialog() API.
Update as upstream, change name the translation folder
spec: Make the will-navigate test run faster
spec: Add test for webContents.beginFrameSubscription
docs: <webview>.sendInputEvent
spec: Add test for sendInputEvent
Expose sendInputEvent in webview
docs: webContents.beginFrameSubscription
docs: webContents.sendInputEvent
Move BeginFrameSubscription to WebContents
Move SendInputEvent to WebContents
Do not manually convert Object to WebInputEvent
Sequence of definitions should follow the declarations
Add converters for WebInputEvent
Remove the offscreen-render option
Move the converters for blink structures to another file
Add device emulation API
Update to Electron v0.33.0
Bump v0.33.0
Change version to v0.32.4
Update to node v4.1.0
spec: vm.createContext should not crash
spec: setImmediate should work in forked scripts
Update brightray for #2808
Check whether devtools is opened when executing js code
No need to delete window in Destory
Release the native window after window gets closed
Update brightray to unsubscribe from NSNotificationCenter
Unsubscribe from NSNotificationCenter when WebContents is destroyed
Update brightray for #2790
Set MACOSX_DEPLOYMENT_TARGET to 10.8
Add docs for app.getLocale()
Add app.getLocale()
pt-BR README.md updated.
api/shell translated to pt-BR
api/process.md translated to pt-BR
protocol: respect provided mimetype in generated response headers
Returning to original native_mate.
script: Call Electron binary from Debug build
docs: Make description of fullscreen more precise
Removed duplicate keydown event sending.
Renamed setOffscreenRender to begin/endFrameSubscription because the name was a bit misleading, and replaced the ArrayBuffer creation with a node::Buffer::New call.
Update to Electron v0.32.3
Bump v0.32.3
Update node, fixes #2786
The crash-reporter test is not reliable on CI machine
spec: Delay timeout of window.opener test
spec: Check existence of webview before removing it
spec: Run tests on OS X CI machine
Make crash-reporter spec more reliable
Update brightray to use 10.10 SDK
Use the SDKROOT under 10.10
Use 10.10 SDK
docs: BrowserWindow.isDevToolsFocused
Add BrowserWindow.isDevToolsFocused
Update brightray for DevToolsFocused fix
Make DevToolsFocused in OS X
Update quick-start.md for zh-CN
Add IsDevToolsViewFocused method
More fixes after code review.
Deprecate 'activate-with-no-open-windows' event.
Implement 'activiate' event instead of 'activate-with-open-windows'.
Do not use did-finish-load to detect whether WebContents is ready
Make getUrl work for devToolsWebContents
devtools-opened should be emitted after devtools is opened
Expose native implementation of WebContent::GetURL
Update as upstream
Expose experiment APIs
Correctly set user agent for devtools
Implements #2734 “New API to configure BrowserWindow title bar on Mac”
spec: Increate timeout for webview tests
Mention 'activate-with-no-open-windows' on OS X only.
[OS X] Implement 'activate-with-open-windows' event for app.
Update brightray for atom/brightray#140
spec: browser-window-created event
docs: browser-window-created event
Emit browser-window-created when window is created
Make global.setImmediate work in browser process
Set global.setImmediate
spec: node symbols should always be available in preload script
No more need to override setImmediate
Update node to pass all globals through "require"
Update as upstream
Documentation api/accelerator translated to pt-BR
Add api\accelerator.md
Add session.md as translated, mark untranslated files in README.md
Update as upstream, fix typos
Update links to web-contents.md
:fire: extra line
Resolve conflicts
Add api\global-shortcut.md
Update to Electron v0.32.2
add api\shell.md
Bump v0.32.2
No need to set menu in spec window
Update native-mate to fix the behavior of Dictionary::Get
Check whether key exists in Dictionary::Get
spec: node-integration should work in web-preferences
osx: Don't warn about unkown warning option
Whoops, missed a line last time.
Resetting debug changes
Reset native-mate to the original repo
Changed StringArray options to regular js objects with boolean values for better readability from the js side
Standardize DevTools
Standardize **Note:**
:fire: extra lines
Create Instance Properties section
:fire: odd, stray +
Add section on documentation translations
Add section links
Update README.md
add ValidatedUrl to did-fail-load event
Update to Electron v0.32.1
Bump v0.32.1
Don't reference RequestContextGetter in JS objects
Run destruction callbacks before message loop gets destroyed
update broken link
spec: Set node-integration in window.open should work
Update brightray, fixes #2669
Update to Electron v0.32.0
add doc translation for synopsis
add doc translation for process
add doc translation for file object
Bump v0.32.0
remove unused code
Update README-ko.md
Update as upstream
create net log file after context is created
Revert "Remove chrome_version.h from git"
Revert "Add chrome_version.h to gitignore"
Suppress the isTTY spec, not reliable on some machines
Explicitly writes debug log to stderr
Update node to catch exception when accessing process.stdout
spec: process.stdout should have isTTY defined
spec: process.stdout should not throw exception
add doc translation for power-save-blocker.md
add doc translation for power-monitor.md
No longer needs to define node_includes.h at last
Don't use Node's internal APIs
No need to define WebContentsPreferences::From
Update libchromiumcontent to have WebArrayBuffer::createExternal API
Support externalized ArrayBuffer for node::Buffer
Update to io.js 3.3.0
Translated application-packaging.md to pt-BR.
fix typo
Remove dead code
docs: No more extra-plugin-dirs
Make sure BrowserContext is destroyed on exit
Parse partition in webContents.create
docs: preload, node-integration, zoom-factor have been moved
Manage the life of BrowserContext in Session
Move management of browser context to BrowserContext
Store BrowserContext in ref-counted ptr
Pass partition name instead of path to BrowserContext
spec: webview test should avoid affecting each other
Read guest view's info from WebContentsPreferences
Add undocumented "preload-url" option for web-preferences
Move a few options in NativeWindow to web-preferences
Move OverrideWebkitPrefs to WebContentsPreferences
Move AppendExtraCommandLineSwitches to WebContentsPreferences
NPAPI has been removed, remove related option
Use options['web-preferences'] to create WebContents
Add WebContentsPrefrences class
Change file names to follow styleguide
Only store weak ref to BrowserContext
Move management of browser context to BrowserContext
Store BrowserContext in ref-counted ptr
Pass partition name instead of path to BrowserContext
Grant ChildProcessSecurityPolicy for MIDI from PermissionManager
Update README-ko.md
Update README.md
Drop "-es" from file names
Add chrome_version.h to gitignore
Remove chrome_version.h from git
application-distribution.md translated to pt-BR
Use headers so titles are linkable
Title Case
Use "in" over "on"
Translated styleguide.
Added pt-BR translation in README.md
Translate README.md to pt-BR
Update web-view-tag.md
Add api/shell.md docs zh-TW translations
Add api docs translations
Improve grammar, update as upstream
zh-tw translation
store webviewinfo as web contents userdata
create partitionId with encodedURIcomponent
use embedders' browser context when partition is not specified
add spec and docs
use embedders' browser context to retrieve webviewmanager
webview: fix partition attribute
Add docs-translations for zh-CN - development/coding-style - development/atom-shell-vs-node-webkit
remove -jp suffix from quick-start-jp.md
add Traditional Chinese documents link in README to navigate
Update brightray to Chrome 45
Provide task runner for the node mode
Devtools no longer uses iframes
Update clang
Feed gin::PerIsolateData with a task runner
Upgrade to Chrome 45
Can only run tests on x64 machine
Suppress running tests on our OS X machine
Write output directly to stderr
fix jp/quick-start-jp.md
Added zh-TW documents
Update as upstream
Update browser-window.md
* add desktop-environment-integration.md and and online-offline-events.md for zh-CN
Clarify Selenium and WebDriver documentation
Use the new devtools URL
Define ENABLE_WEBRTC
Upgrade to Chrome 45
Update to Electron v0.31.2
Bump v0.31.2
Text edits
docs: The "role" attribute of MenuItem
Unify the menu of default app
Assign actions for roles on Windows and Linux
Add role property for MenuItem
Key event sending update.
Text edits
Text edits
Text edits on remote
`y` required if `x` exists
Linux Build Instructions: Add list of packages for fedora
docs: Small changes to will-download event
implement wrapSession
Source code structure as tree command
spec: window.opener.postMessage should set source and origin
Replace "Mac" with "OS X"
Add `$` notation
spec: Node integration should work after POST
Set source and origin correctly for window.opener.postMessage
"the"
Updates from inline comments
Standardize selenium and webdriver
Standardize pepper flash
Standardize native modules
Standardize quick-start
Standardize online-offline
Standardize devtools
Standardize desktop env integration
Standardize debug main process
Standardize app packaging
Standardize app dist
Update as upstream, improve grammar
Improve grammar
* add quick-start.md for zh-CN
Mouse event handling and keyboard event handling (not totally working yet)
use browser context from webcontents for registering datasource
Insert node integration for all main frames
Fork renderer process for webview
process: api to set file descriptor soft limit
app: add will-download event to defaultSession
Small changes
Update as upstream
Improve grammar, update as upstream
Standardize dir structure
Standardize symbol server
Standardize code style
Standardize overview
Standardize build win
Standardize build mac
Standardize build linux
Standardize atom vs nw
Minor text edits
Text edits
Update code example
Move cn to zh-CN for future traditional Chinese translations ref #2649
Translate styleguide.md
Add section about server implementations
Setting up docs translation in Chinese :+1:
Update web-frame.md phrasing
renderer: send referrer for all naviagtions
Standardize window-open
Standardize web-view-tag
Standardize web-frame
Standardize tray
Standardize synopsis
Standardize shell
Standardize screen
Standardize remote
Standardize protocol
Standardize process
Standardize power-save-blocker
Standardize power-monitor
Standardize native-image
Capital Ms
Edits and standardization
setOffscreenRender and api docs added
message → arg
Small edits
Update documentation to clarify bundled node/io.js version
:arrow_up: asar@0.8.x
contentTracing → tracing → content-tracing
Small edits
:arrow_down: list level
Consolidate note on experimental APIs
Update to Electron v0.31.1
Ignore native module tests on Windows debug build
message → arg, 80-col
improve advice on callbacks passed from renderer to main
Edits per inline comments
Opt into location services
Add webFrame.setZoomLevelLimits API
Remove extra output
Suppress the heap snapshot test
handle partition config in browser context
IDWeakMap is not used anly more in JS
Don't rely on IDWeakMap for bookkeeping remote objects
Offscreen render support base
Use V8's new SetWeak method
Do not create remote object for simple return values of APIs
Use the new SetWeak in Wrappable
Add SetHidden for Dictionary
Update node: Remove unneeded exports
Use libuv to wake up main thread
Use our debugger implementation in Node
Import the TCPListenSocket removed by Chromium
Revert "Remove our own debugger implementation"
win: Delay quitting until next tick of message loop
win: Add compatibility information in manifest
First run t ipc-r
arg → message
Standardize global-shortcut
First run at ipc-m-p edits
Update as upstream
Small edits and line wrap
Small edits
General text edits to content-tracing
Note about platform specific apis
Add platform labels
Edits, grammar, punctuation and merge conflicts
Add (optional) notation
Add platform label where applicable
Line wrap 80-col
Text edits per commit comments
Add new files to readme
Break out methods, standardize
nativemate: increase recursion depth
Update to Electron v0.30.6
Update to Electron v0.30.6
mac: make tray's behavior more official when getting clicked quickly multiple times.
mac: Do not set rounded corner by adding layer
Link with 10.9 SDK
Revert "Make bottom corner more round"
Update to Electron v0.31.0
Update build-instructions-windows
Replace platform notes with one general note
Mac → OS X
Update as upstream
Reset and remove unrelated files
Revert "Rename xx-ko.md to xx.md"
Revert "Revert "Rename xx-ko.md to xx.md""
Revert "Rename xx-ko.md to xx.md"
Standardize frameless-window
Update brightray and node
Rename xx-ko.md to xx.md
Standardize file-object
Standardize dialog
Update brightray
List punctuation in crash-reporter
Line wrap at 80-col
Standardize crash-reporter
Standardize content-tracing
minor wording fix, updated example
webContents: exit tabbed fullscreen when esc key is pressed
Remove comments about remote buffer
Remove remain sentences
Remove remain sentences
Add platform label where applicable
Add items to style guide list
Revert "Add links to docs translations"
Standardize clipboard
Support index.js module resolution at startup of Electron.
Add optional notation
Line wrap 80
Make sure guest view is destroyed immediately when embeder is closed
asar@0.7.x
Add documentation translation links
Add links to docs translations
Move files to ES translation docs
Move file to JP translation docs
Add file to KO translation docs
Create directory for KO translations
Spec out doc styleguide
update docs and readme
Made sure that lines are not longer than 80 characters
Update coding-style with info about Chromium's types
Update dialog.md with info about filter extensions
Update to Electron v0.31.0
docs: callback => completion in some places
Bump v0.31.0
Update using-selenium-and-webdriver.md
Warn about removed protocol APIs
No need to ship ffmpeg in dist
win: Update libchromium to fix .pdb missing errors
Update brightray to fix building on Linux
Update to io.js v3.1.0
Run build script on arm and ia32 Linux
Now working at 0.31.0
runas@3.x
Update to Electron v0.30.5
mac: make * extension filter works.
Linux: make * extension filter works.
Bump v0.30.5
win: Move the ICO reading code into a separate function
Translate more files, fix outdated remote.md section
Standardize auto-updater.md
Add 'returns' and change h2 descriptions
Standardize app.md
Update browser-window.md
Correct generation of GUID on Windows.
Clarify that MSVS 2015 will not work in Windows build docs.
docs: Rewrite docs for new protocol API
Create both Uint8Array and ArrayBuffer from blink
spec: Rewrite tests for new protocol API
Always set headers for response
Rename protocol.isHandledProtocol to protocol.isProtocolHandled
Implement protocol.uninterceptProtocol
Implement protocol.interceptProtocol
Implement protocol.isHandledProtocol
Implement protocol.unregisterProtocol
Update native_mate to fix VS compilation error
Don't pass callback as const reference
Completion callback is called on IO thread
Don't use C++11 to not crash VS
Try work around VS's bug
Make session parameter work with null value
Make the completion callback optional
Don't convert Function to Dictionary
GetNext should have no side effect when failed
Add Dictionary::CreateEmpty
Implement protocol.registerHttpProtocol
Implement protocol.registerBufferProtocol
Support converting Buffer to Value
Implement protocol.registerFileProtocol
Enable return error for arbitray request job
Guard against callback being called twice
Initial implementation of new protocol API
Open Code of Conduct -> Contributor Covenant
Store NetLog in BrowserClient
Use blink's allocator in Node's Buffer
Link with a few more static libraries on Linux and OS X
Link with a few more static libraries on Linux and OS X
Update chrome_version.h
Update to Chrome 44
Tell compiler we want to ignore result of SetPrototype
Include Foundation.h at right place
Disable -Wunneeded-internal-declaration warning
Define node_byteorder and node_release_urlbase
Update io.js to v3.0.0
Update to Chrome 44
Implement devtools preference interfaces.
[Win] Link http_server.lib.
[Win] Link devtools_discovery.lib and devtools_http_handler.lib in component builds.
ffmpegsumo.dll => ffmpeg.dll
DevToolsHttpHandler is moved from content to devtools_http_handler namespace.
DevToolsHttpHandler::GetFrontendResourceId is removed.
WebContentsFocused is removed.
Update PlatformNotificationServiceImpl Interfaces.
No NetLog anymore, use NetLogCaptureMode.
No need to specify ffmpeg library as it's a normal built library in libchromiumcontent.
net::URLFetcher::Create now returns object with scoped_ptr.
Now the value in ScopedPtrHashMap is required to be scoped_ptr.
LoadV8Snapshot has been moved from gin::IsolateHolder to gin::V8Initializer.
Update base::Value::CreateNullValue API changes.
No need `base/float_util.h` since VS2013 supports well enough.
No gfx::SingletonHwnd::Observer any more.
Update to Electron v0.30.4
Bump v0.30.4
Force request context to initialize beforing incepting protocol
Pass net::URLRequestContextGetter in scoped_refptr
BrowserContext::GetRequestContext can only be called on UI thread
popContextMenu => popUpContextMenu
win: Don't emit right-clicked event when there is menu attached
mac: Redraw icon when menu is closed
Add our own MenuModel class
mac: Don't emit "clicked" event if there is menu attached
Delay the call of element resize callback to next tick
Update checksums for new filenames
Upload headers with new filenames
Update as upstream, translate 2 files, fix some typos
Add a comment to build instructions about cpplint
Added support for reading .ico from asar
Made the tests ignore the line ending
Updated native-image.md
Converted tabs to spaces
Add support for using .ico icon files on Windows
Update to Electron v0.30.3
Bump v0.30.3
Run microtask before handling pending process.nextTick tasks
Use WebScopedRunV8Script in converted C++ functions
Reimplement callback.h with C++11
Move callback converter from native mate to electron
spec: Check the time when Promise's callback is called
Make every JS function call is wrapped with V8RecursionScope
Perform microtask checkpoint after diving into libuv
Style fix
Update libchromiumcontent to have WebScopedRunV8Script
Remove locker.h
implement for osx
Remove callback.h
allow updating devtools title in undocked mode
Check button size
Move SetOverlayIcon to TaskbarHost
Save the taskbar object
Move SetProgressBar to TaskbarHost
Refactor code in taskbarHost
Decouple TaskbarHost from NativeWindow
ThumbarHost => TaskbarHost
Move thumbar_host_ from TreeHost to NativeWindow
Add MessageHandlerDelegate
Expose NativeWindow.setThumbarButtons API to all platforms.
webview: adding load-commit event
override: intialise BrowserWindowProxy.closed
Polish thumbar code.
ImageSkiaRep doesn't release memory
spec: BrowserWindow.setResizable should not change window size
mac: Disable resizing window when changing style mask
Move atom_desktop_window_tree_host_win to atom/browser/ui/win directory.
:memo: say more about thumbnail toolbar.
:memo: BrowserWindow.setThumbarButton API.
win: Add BrowserWindow.setThumbarButtons API.
Remove a few unused headers
Move ShouldUseGlobalMenuBar to x_window_utils
Avoid exposing data members to subclass
Use ranged for loop
Remove duplicate UpdateDraggableRegions
tracing: fix api and docs
Update brightray for #2263
Show devtools window in the middle of display
Don't show devtools window in too small size or out of screen
win: Use app name as default title of message box
Only build pushes on Travis for master branch [ci skip]
Check context menu when calling popContextMenu API.
Use different name for window class name
Use different name for wait events for different apps
Close handle when waiting is end
Set AppUserModelID for all renderer processes
Update brightray for #2294
Guard agains empty notification
Guard against empty image
Only set window.opener for windows opened by window.open
spec: Test window.opener
spec: Don't set window to fullscreen unless under travis
docs: userGesture is optional
Use constructor name to check if Promise
add spec and fix docs
Change spec to test Promise in both side
Support remote Promise in browser
Add spec for remote Promise
Support remote Promise in renderer
webFrame: api to make scheme bypass CSP
render: executejavascript with option to simulate usergesture
 Add missing dependency for ubuntu build
Update to Electron v0.30.2
Bump v0.30.2
mac: Make the tray icon behave more like the official one
Coffeescript declares variable before assigning it
Update as upstream
Translate web-view-tag-tag-ko.md, improve grammer
update readme
Replaced 'browser' with 'main'
more accuracy around why to use ASAR
Check whether entry is null
Make 'allow-displaying-insecure-content' and 'allow-running-insecure-content' higher priority than `web-security`.
Update brightray for #2327
:memo: `allow-running-insecure-content` and `allow-displaying-insecure-content`.
Add `allow-running-insecure-content`, `allow-display-insecure-content` in BrowserWindow option.
Update brightray for #2324
Add metaKey
save devtools zoom level preference
docs: modifiers removed
Use DOM's way of telling modifiers
Enable using custom events when emitting
:memo: say more about setDownloadPath API.
No need for default_download_path_ member.
Use NSImageView to draw tray icon.
win: Pass modifers in 'clicked' events
win: Set GUID when getting icon's bounds
docs: Don't say things that are expected
do not overwrite `node-integration` option
win: Implement double-clicked event
fix devtools workspace api to accept file path
webContents: api to add/remove path from devtools workspace
Minor style fix for #2352
docs: Small style fix for #2337
Style fix for #2328
Update as upstream
Add keyboard modifiers payload to tray click events
Move event type functions to a common  event_util file
Add NativeImage docs for IsTemplateImage
Add NativeImage.IsTemplateImage method
custom dom texts
first docs
Correct the override comment.
:memo: :art: Grammar fix
:memo: Reorganize the Run Your App section
protocol: fix request headers in urlRequestFetchJob
:memo: session.setDownloadPath API.
Add `session.setDownloadPath` API.
prefs' key needs to be registered before using.
Copy pref_names files from Chromium.
Update tray double-click docs
:memo: pageSize option.
Send bounding Rect on tray double click events
Add pageSize option in printToPDF API.
Set NIF_GUID if we have a GUID
Update to Electron v0.30.1
Propagate User App Model ID to Tray Icon
Bump v0.30.1
spec: Don't reuse port in session spec
spec: Make dom-ready spec stronger
spec: Make the basic-auth spec stronger
Remove change to "mapped onto" in accelerator.md
Focus WebContents when we first load url in BrowserWindow
Add webContents.focus
Windows/Linux compatibility changes
Correct error in chrome-command-line-switches.md
Improve grammar and punctuation of crash-reporter.md
Improve grammar and punctuation of clipboard.md
Improve grammar and punctuation of `chrome-command-line-switches.md`
Improve grammar and punctuation of auto-updater.md
Improve grammar and punctuation of accelerator.md
Show all buttons as custom buttons when noLink is specified
Add noLink option for showMessageBox
Allow the C++ JS binding function to accept arbitrary long arguments
Use C++11 version of CreateFunctionTemplate
Add |options| for ShowMessageBox
Use node::MakeCallback to emit events in C++
Make the extraSize of BrowserWindow.setAspectRatio optional
Style fixes
get jsprotocolhandler in IO thread
read post-filtered data when filters are present
Update dialog.md
changes requested for pull request #2250 into electron master
protocol: copy headers from original request for custom request job
Implement getUserAgent API.
docs: Mention libappindicator1 is required, close #1347
mac: Always use GetSize for frameless window
mac: Always call SetSize for framless window
spec: Test setContentSize for frameless window
Implement 'drop-files' tray event on OS X.
Update brightray for #2238
Make bottom corner more round
session: api to set proxy
preparing README-es
Improve grammar and sentence structure of app.md
fix bug with computing the case where we should constrain via height
Translate little files into korean
docs: Mention null session of RequestHttpJob
use current session when not defined
wrap lines to meet Travis CI build requirements
shorten names
fix line length issue
Update to Electron v0.30.0
add function maintainAspectRatioOfInteriorContent to BrowserWindow in order to enforce an aspect ratio for an electron window
Bump v0.30.0
Don't upload PDB files in CI
use request context from session if provided
protocol: create separate request context for fetch job
Update brightray for #1852
docs: Say more about standard scheme
Make <input type="file"\> remember last used directory.
More code style fixing.
:memo: tray.popContextMenu API.
Add 'tray.popContextMenu()' Windows implementation.
Implement 'tray.popContextMenu' API on OS X.
Simplify code logic and fix object-c code style.
Improve grammar and comments
Use CTRL+SHIFT+I for toggling devtools, fix #2205
valid example json, fix https://github.com/atom/electron/issues/2228
fix typo in browser-window.md
:memo: 'right-clicked' doc.
Implement 'right-clicked' tray event on Windows.
Implement 'right-clicked' tray event on OS X.
Introduce Electron custom statusItem view.
Update as upstream
Prepare update forked repo
Update changes as upstream
Revert "Revert "Update APIs, check grammars""
Revert "Update APIs, check grammars"
Update APIs, check grammars
Forward the crashed event to BrowserWindow, fix #2201
create netlog for devtoolsnetlogobserver
Set default user agent for WebContents
Don't set two "Electron"s in user agent
Provide default user agent in BrowserContext
spec: Test user agent in websocket
Set user agent from the delegate
Enable override user agent in URLRequestContextGetter
spec: Check if window.global is set
Don't expose "global" when node integration is off
No need to actually create a page for cookie test
spec: Cookie test should not rely on cookie's count
Update global-shortcut.md
Update window-open.md
Avoiding creating static STL containers
win: Also map MESSAGE_BOX_TYPE_QUESTION to TD_INFORMATION_ICON
docs: Adds the dependencies of arm target
Update brightray, refs #1599
The options of clearStorageData should be optional
Call callback of ClearCache after cache is doomed
docs: Add WebContents.session
Cleanup code
Update README-ko.md
Enable 'accept' attribute in 'input' label.
webContents: set http useragent settings when overriding user agent
emit error object on process.on('uncaughtException') in renderer
doc: kProxyPacUrl support
adding support for kProxyPacUrl
app: api to clear data from different storage types
Always use top window's context for resolving url
Allow more insecure content when web-security is off
read/write protocol handler map in IO
clipboard: api to write multiple formats to same writer
Resolve relative urls in window.open, fix #2166
Event "close" => "closed", fix #2149
Linter fixes
Set the AppUserModelId on the renderer side
Append the app user model ID as a switch
Add a new renderer switch to pass down the app model ID
add compatibility will old api
protocol: cleanup
Update sample code in global-shortcut.md
Update global-shortcut.md
Add a test to verify the webview close event
Add code of conduct to README
Add code of conduct to contributing guidelines
Final cleanup
On Windows "Cancel" button is also forced to be canclId
Show custom buttons as links
Use stock buttons on Windows when possible
Show user's icon when specified
Show icon according to dialog's type
If "detail" is empty then don't make message hilighted
Handle when dialog is cancelled
Implement ShowMessageBox with TaskDialog
Set compilation requirements for using TaskDialogIndirect
Hard code the chromedriver's version
Upload PDBs to Windows symbol server
improve docs on toJpeg(quality)
docs: cancelId
On OS X the "Cancel" is always get selected when dialog is cancelled
Set default cancelId in JavaScript
Add cancelId option for showMessageBox
Update to Electron v0.29.2
Implment app.getAppPath API.
Bump v0.29.2
Make "title" work
Allow "detail" to be empty
Simplify the code
Reuse ShowMessageBox in ShowErrorBox
gtk: Map dialog type to message box type
gtk: Implement message box APIs
Use SetGtkTransientForAura from libgtk2ui
Seperate linux's implementation of message box
Install libnss3-dev on CI
Run clean after cibuild
linux: Link with nss
Link with nss
Update libchromiumcontent
explain the process.platform check
No need to send message to embedder after it is closed
Some methods can be accessed after object is destroyed
Allow specify methods that can be called after object is destroyed
Update using-native-node-modules.md
Check BrowserWindow's lifetime
Remove manual lifetime check for Tray
Check whether WebContents lives before using its methods
Update native_mate to have ability to check object's live
Add IsDestroyed method for Wrappable
Inherit current window's node-integration in window.open by default
win: Build with cursors from Chromium
Update libchromiumcontent to include cursors
Allow ia32 and arm builds to fail for now
Load cursor from current module
OpenSSL is still used on Windows and Mac
OpenSSL is still used on Windows and Mac
USE_NSS is used before Chrome 45
Don't use OpenSSL for networking
Use NSS instead of OpenSSL
:memo: Add mirror address description.
doc: linux troubleshooting libtinfo.so.5 not found
Update to Electron v0.29.1
Bump v0.29.1
Remove ~/.node-gyp in clean script
Checkout boto in our repo
Update node
Revert "Set openssl_fips in config.gypi"
Fist line of config.gypi should be empty
Revert "Get the pending version from the commit message"
Set openssl_fips in config.gypi
Get the pending version from the commit message
Update to Electron v0.29.0
Don't warn arch on Windows
Don't check valid upload when -p is specified
Don't check build version for arm target
Bump v0.29.0
Only creates Release build when ELECTRON_RELEASE is set
plugin: dont check for renderer flags for adding pepper browser host filters
Delete the original file before uploading in CI
Just ignore all OSError for rm_rf
WindowsError is undefined on POSIX
Use better tag and title
WindowsError is a subclass of OSError
One failing rm should not block others
No need to clean after cibuild
Don't check build version in CI
Build the python requests library
Ignore Windows errors in clean.py
Clean before and after cibuild
Don't force redownloading some assets
Upload dist to Releases
Allow downloading prebuilt libchromiumcontent binaries from LIBCHROMIUMCONENT_MIRROR.
Try doing release in CI
Set DISPLAY in CI machine
Avoid using the old gyp lib in system
Suppress window operations in CI
Do debug build on Windows CI for non-release
Don't call register_required_dll for now
No need to remove node_modules
Typo in function name for remote
Do not run tests in Windows CI
Create release dist when ELECTRON_RELEASE is set
Force using VS2013 for building
Only define mac_framework_dirs on Mac
Don't define source_root on Windows
Ignore npm install errors when running in CI
Use npm@2.12.1
Install npm before cleaning node_modules
Install latest npm in CI
docs: Cross compilation
Don't upload arm version of mksnapshot too
Don't upload arm version of chromedriver
Call correct strip for arm target
Build dump_syms for host arch
Use clang's integrated as
Libraries on host side is needed to make pkg-config work
Clean up the libraries to install
Only run tests for x64 target
Build ia32 target with sysroot
Install ia32 build dependencies
Install arm build dependencies
Add build matrix for arm and ia32
Use prebuild clang to build node modules
Don't install ubuntu test toolchain
Update libchromiumcontent to get arm build
Use our custom debian sysroot image
Never send email notifications
Set sysroot for arm build
Download debian arm sysroot image
Add function to get host_arch
Define chromeos
Only allow building on 64bit machine
Remove -std=gnu++11 flag
Support cross-compiling
Use downloaded clang for building
Do not force using clang
Download prebuilt clang
Translated API docs, added power-save-blocker API to README
Translate some apis
Update build-instructions-windows.md
Remove extra newline
Add slack back to README
window: use _NET_WM_STATE_FULLSCREEN before window is mapped
Don't override user's menu in default_app
Update to io.js v2.3.1
:bug: Solves issue #2047 [Windows fullscreen bug]
Remove window from window list before notifying closed event
Missing overrides
Missing overrides
electron-installer not atom-shell-installer
Small cleanups
Only convert command ID on Windows
Clean up ResolveProxyHelper
Don't hide methods of content::BrowserContext
Clean up code in AtomBrowserClient
spec: Remove grabage console.log
Rename event name to gpu-process-crashed
docs: gpu-crashed is moved to app
Move gpu-crashed event to app
I forget cpplint every time
Revert submodule change
:memo: consistency
Move app commands to strings
cpplint see me rollin', he hatin'
Invisible character tyranny
:memo: app commands
Add appcommand to files
Add enum for media keys on Win32
Emit the message as an event
In our widget delegate, signal our Observer
Create a method to signal our Observer method
Create a new method for NativeWindowObserver for AppCommands
app: event to pass client certificate data
session: using storageparttion to retrieve requestcontext
Remove NativeWindow::GetWebContents
Remove inspectable_web_contents_
Move BrowserPluginGuestDelegate to a separate class
Rename CloseWebContents to RequestToClosePage
Remove NativeWindow::ActivateContents
Allowing destroying a closed window
Add InspectableWebContentsViewDelegate
Add InspectableWebContentsViewDelegate
Set sender in EventEmitter.emit
Decouple WebContentsDelegate from NativeWindow
Don't create WebContents in NativeWindow
Pass isGuest when creating WebContents
Store NativeWindow in weak ptr
Discard is_guest_, use type_ instead
Store NativeWindow's weak ptr in WebContents
Add type for WebContents
Handle close cancel in BeforeUnloadDialogCancelled
Remove usages of NotificationObserver
Remove ActivateContents and DeactivateContents
Remove JS override of setMenu
Always initailize webContents in BrowserWindow
Remove usages of JS IDWeakMap in browser-window
Make each class only have one weak map
Add Values() method for IDWeakMap
Move "id" and "fromId" to C++
Check for null when converting Wrappable
Initialize defaultSession after app is ready
Make Session trackable
Make sure each C++ WebContents has only one JS WebContents
Enable storing TrackableObject in other C++ class
Add mate::TrackableObject
Don't make IDWeakMap public API
Make the JS IDWeakMap a thin wrapper of C++ IDWeakMap
Add C++ version of IDWeakMap
More updates: use string instead of integer to identify blocker type.
Keep compatibility with app.resolveProxy
Move resolveProxy From app to session
Add app.defaultSession
devtools: write to file in FILE thread
mac: Set NSHighResolutionCapable in Info.plist, close #2020
Clean up coffee files
Emit ATOM_BROWSER_RELEASE_RENDER_VIEW in C++
browser: creating download manager delegate to handle downloads
Remove all calls to node::MakeCallback
Add EmitEvent function to replace node::MakeCallback
Remove calls to v8::Isolate::GetCurrent
Make isolate() public
Remember isolate in Wrappable
Omit extra transfer of new-window event
Clean up SetAllowTransparency
Implement getId in C++
Don't include routing ID in WebContents's ID
Update to Electron v0.28.3
Bump v0.28.3
Update internalModuleReadFile to support unpacked asar files
make sure the query params are stripped from the updateUrl
limit the auto-updater-win api to very few methods
move squirrel bahaviour into proper place
First translation
Update PowerSaveBlocker APIs design.
:memo: Add powerSaveBlocker APIs doc.
Add PowerSaveBlocker APIs.
:memo: Add missing BrowserWindow.isDevToolsOpened method.
Add usage sample code of printToPDF API.
Update cookies spec.
Move headers to atom/common
Make process.argv work with zygote
Update libchromiumcontent to enable zygote process
Only append --register-standard-schemes when needed
Make cookie aligns to Chrome's.
Use webContents BrowserContext.
Move cookies APIs to webContents.session.cookies namespace.
Add cookies spec.
:memo: add cookies doc.
Move set status code into error.
Add cookies.set API.
Add cookies.remove API.
Implement cookies.get API.
override: set window.opener to null for webview
Remove AtomBrowserContext::Get
Use the BrowserContext from protocol
Replace a few calls to AtomBrowserMainParts::Get.
Make api::Protocol per-context
process: add hang method
Move BrowserProcess to BrowserMainParts
Don't rely on real focus/blur events in tests
app: adding browser-window-focus/blur events
Update to Electron v0.28.2
Bump v0.28.2
mac: Use NSFileManager::resultingItemURL for moving file to trash
Update how to rebrand from source, close #1999
Update brightray
Check if image is empty.
document proxy env vars. closes #21
Ensure we don't try to set contentImage on 10.7/10.8. That would be rude!
protocol: api to register custom schemes to standard schemes
Handle ".." in asar path, fix #1982
Update brightray, close #1025
docs: protocol.RequestHttpJob
Use |request|'s headers if possible
Allow setting referrer
Use |request|'s method if |method| is not specified
Clear pending_buffer_ at correct time
Allow setting method for RequestHttpJob
Don't need buffer for piping data
Make URLRequestFetchJob actually work
Note that setPressedImage only has an effect on OS X
Set contentImage based on the passed-in image
merge regex
auto updater win is an EventEmitter already
:memo: Add missing printToPDF API in webview.
Copy pdf data on IO thread to avoid causing main process hangs.
Also Expose printToPDF to BrowserWindow.
Expose Print API to webContents and webView.
Simplify the pdf-data handled code.
Don't use duprecated node buffer api, fix build error on OS X.
:memo: Update docs.
Make callback aligns node.js style.
Remove some unused IPC messages.
Return node::Buffer as a printToPDF callback result.
Add silent and savePath options.
Move PDF printing setting in JS part.
Move printToPDF API to WebContents.
Cleanup.
:memo: Add BrowserWindow.printToPDF API docs.
Add preview failed error.
Add callback function in printToPDF API.
Add options to custom print settings in printToPDF API.
Write PDF file in FILE thread.
Add printToPDF Implementation.
Add printToPDF API skeleton.
auto-updater extends event-emitter
switch statement coffee else instead of default
Don't leak URLFetcher
addresses suggestions from pull-request
docs: --ignore-connections-limit
remote: handle circular reference in wrapArgs
Update brightray for #1960
Add --ignore-connections-limit switch
Update brightray for #1941
s/liste/listen
initial idea
0.28.1
0.28.1
0.28.0
0.28.0
Add setAudioMuted to webContents
protocol: adding requestHttpJob method
Add minor grammar fixes
Updated to 0.28.1
Update app.md to document how open-file is emitted
Bump v0.28.1
Don't set browser_handles_all_top_level_requests
Use LSGetApplicationForURL to search for app
Tranlsate quick-start-jp.md: status first
define openssl_certs on linux
Bump v0.28.0
adds 'before using methods' example
return bool on shell.openExternal
Update node to fix crash caused by malloc
docs: Update formats
Update brightray
OpenSSL is actually used by all platforms
Update iojs to fix linking on Linux
Define V8_BASE
Update io.js to v2.2.1
Make asar work with internalModuleReadFile and internalModuleStat
Update to node.gyp's changes
Suppress some tests on CI
Don't rely on JS for setting optional argument
Transfer Buffer through "remote"
linux: Don't use clipboard module in renderer process
adds display:inline-block to style tag
Allow converting Array
Guarding webview attributes against polluted Object.prototypes
Convert std::string path to a FilePath to get compiling working on Windows
Make consistent with other example
Corrections to menu.md
intiailse platform clientcertstore
use version from package.json
0.27.3
Clean up Selenium webdriver code example
Replace shorthand if-statement notation in Pepper Flash docs
Replace shorthand if-statement notation in quick start docs
Add missing semicolons in devtools extension docs
Remove trailing commas in desktop environment docs
Add missing semicolon in webview tag documentation
Remove obsolete space in console log when using multiple arguments
Remove trailing comma in tray code example
Declare one variable per statement in protocol code example
Add missing commas in menu docs
Remove trailing commas in menu docs
Clean up code in global shortcut code example
Remove trailing commas from dialog filters code example
Try to clarify docs for window.onbeforeunload()
Make platform compatibility notes consistent
Use consistent naming convention for 'task bar' concept
bump to 0.27.3
doc on how to test with your application
Pass embedder when creating WebContents
Remove unused options for WebContents.create
default to first certificate from cert store
Support multiple-line headers in web-contents `did-get-response-details' event.
Upgrade brightray, fix #1901
view_ needs to be destroyed after web_contents_
Use httpReferrer and userAgent new names in webview.
Make devtools_web_contents_ is destroyed before everything
Rename httpreferrer to httpReferrer, useragent to userAgent.
:memo: Add missing `useragent` doc.
:memo: Add missing `httpreferer` option doc.
docs: Update formats of command line switches
Update brightray for --log-net-log
Clean up code
Initialized rect with zeros
Switched to `gfx::Rect` constructor that takes a RECT
browser: support client certificate
fix dereferencing null pointer
fix memory leak
create net log instance only when needed
Guarding against polluted Object.prototypes
mac: Build dump_syms
Bump v0.27.3
Edited virtual machines sections.
:memo: Improve devtools documentation
Add instructions to clean build products
Added note and link for poorly documented operation.
Added ending semicolon for consistency.
fix crash on quit
Edit linux build instructions based on feedback
doc: adding info about log-net-log flag
adding netconstants to log
adding support for kLogNetLog switch
:memo: Add getUploadedReports API doc.
Implement crash-reporter.getUploadedReports API.
Avoid destorying api::WebContents for twice
Put common code of OpenURLFromTab to CommonWebContentsDelegate
Implement HTML5 fullscreen in CommonWebContentsDelegate
Remove devtools APIs from NativeWindow
Add DevToolsOpened and DevToolsClosed  events
Enable calling WebContents::openDevTools for BrowserWindow's WebContents
Remove duplicate def of is_guest
Move more methods to CommonWebContentsDelegate
Manage webview with CommonWebContentsDelegate
Manage InspectableWebContents in CommonWebContentsDelegate
Add InspectableWebContents::GetDevToolsWebContents
Add CommonWebContentsDelegate
Use DefaultWebContentsDelegate in api::WebContents
Remove NativeWindow::CallDevToolsFunction
Update brightray
Clean up code
No more need to override DidFinishLoad
Update cpplint
Avoid calling JavaScript of devtools WebContents too early
Handle network requests from devtools
Update to new devtools messages
Update build instructions for Linux
devtools: supporting workspace usage
delegate filesystem request calls
docs: Say more about page-visibility option
Revert "Update libchromiumcontent, fix #1786"
renderer: option to override page visiblity state
mac: Do nothing if calling Menu.setApplicationMenu(null)
docs: Mention how to remove menu bar
Allow removing menu bar
Simplify and polish the code.
Remove Menu::AttachToWindow
Allow settting menu to null
Create a default menu for apps ran by default_app
Update brightray for #1809
Link with gmodule-2.0, fix atom/electron#1809
docs: python 2.7 is required, close #1830
Check for nullness when comparing webContents, close #1838
Clean up code
Clean up code
Don't rely on process_id to search for NativeWindow
Ow :poop:, where did that extra space come from?
Don't rely on guest_process_id for searching guest
Add missing crashpad submodule.
Remove AtomResourceDispatcherHostDelegate
Update brightray for updates on devtools_ui
Implement crash-reporter.getLastLastCrashReport API on OS X.
Updated tray api docs to reflect changes in ce8aa07
Make devtools work when web security is enabled
Added `bounds` payload to tray `clicked` event
Switch to use crashpad repo under atom org.
Update crashpad implementation after code review.
0.27.2
0.27.2
devtools: initialise devtoolsWebContents when opened with inspect* apis
Ship pdf.dll in release.
win: Load pdf.dll with abosolute path, fix #1826
Bump v0.27.2
Update libchromiumcontent, fix #1786
Print real error messages even if it looks like an invalid app
:memo: crash-reporter note on OS X.
Add script to setup crashpad repository.
Send all crash reports to collection server.
Enable crashpad test on OS X.
Use Crashpad instead of Breakpad on OS X.
Delete Node's symbols after Environment has been loaded
docs: Remove obsolete build instructions, close #1809
mac: Remove dead "Frameworks" link, close #1801
Update brightray to use correct Chrome version string
Update libchromiumcontent
Revert "Link with ui_zoom in component build"
Link with ui_zoom in component build
convert message to string for window.alert method
Update to latest libchromiumcontent
The ElementSizeChanged has been removed
Listen to ElementSizeChanged event
Enter context before calling callback
Pass element size when attaching
pendingGuestCreation is removed
Update to the new algorithm of setting webview size
0.27.1
0.27.1
0.27.0
0.27.0
Bump v0.27.1
Use gcc-4.8 on CI machine
Update libchromiumcontent for race condition fix
fix accessing headers from resourcerequestdetails
Replace cmd with bash
browserClient: dont restart render process for javascript: scheme
Bump v0.27.0
restore clipboard.has api and fix docs
clipboard: api to list supported types, reading and writing markup
Update node, fix #634
test: Add case for #634
Update brightray
Remove trailing space
docs: "move" and "moved" are platform-dependent
Update libchromiumcontent for optional pdf.dll
retrieve headers from response info
using mate::Dictionary instead of base::DictionaryValue
return headers as object
webContents: providing header details with response event
:memo: Add `pdf.dll` note doc.
Remove duplicated macro.
Remove the multiple rules generate pdf.dll warning in GYP during debug build.
Copy pdf.dll to build directory.
Rename PrintHandler to PrintHandlerWin since only used on Windows.
Load pdf component dynamically.
HandleMouseDown is deprecated
Link with d3d11.lib
Suppress compiler warning
Don't read Buffer in IO thread
Pass Handle to upper HandleScope when returning a V8 Handle
Use Local instead of Handle
Use Local instead of Handle
Start AtomRenderFrameObserver
Initialize V8 in browser process
Add AtomRenderFrameObserver
Upgrade to Chrome 43
Implement NetworkDelegate::OnFirstPartyOnlyCookieExperimentEnabled
ProxyResolverV8::EnsureIsolateCreated is removed
alias move and moved event on OS X
Remove parameter |by_user| in NotificationClosed
Implement PermissionManager
chnage move hook and add details to doc
avoid unnecessary api calls
window: adding resize and move events
0.26.1
- update electron shell to 0.26.1
Remove explicit nullptr and add clarifying comment.
Bump v0.26.1
gtk: Notify the click event
Remove trailing white space
screen: initialise displays_ vector with available displays
use generated constants
protocol: adding ftp scheme support
also emit html fullscreen notification on windows when its webview contents trigger it
check if window is html or forced fullscreen
adding events to notify fullscreen state
track html api triggered fullscreen separaely
check for renderviewhost availability before using
webContents: override fullscreen notification apis for webview
docs: Open devtools in the quick start example
Check PATH first
Revert #1604
remove usage global browser context
webContents: providing response headers in did-get-response-details event
doc: fix typo in pepper flash document
webContents: adding events to detect gpu and plugin process crashes
Update brightray for #1653
Turn off incremental linking for Release build
spec: original-fs is available in forked scripts
Remove the original-fs.js
Make "original-fs" available as built-in module
add test
Simplify how we find NativeWindow from WebContents
Upgrade brightray
Don't be so paranoid about empty opts
Add documentation
Add a test for the user agent
Pass user agent along like http referrer and set user agent in C++
Right before navigate, set the user agent
Set up a class for it in web-view-attributes
Define a new useragent attribute on WebView tag
Remove example
Use Electron repo search url
navigation: adding clearHistory method
doc: Add pepper flash tutorial link in README.
ppapi: Add pepper flash tutorial
Start a contributing doc
implement method on browser window
method to reset agent_host
devtools: api to inspect service worker for current webcontents
navigation: fix accessing url from history array for goToIndex
Add link to `awesome-electron`
Explicitly null the crash reporter before assigning it to allow the EH to unregister.
compile-coffee.py searches for node even on non-windows systems
Small spelling mistake
docs: fixed casing of "Note"
Update docs.
Add WebContents API for PasteAndMatchStyle.
No need to link pdf related libraries in component build.
Use the textured window for the frameless case too.
If the window's transparent it also needs to be textured.
0.26.0
0.26.0
updated scripts / .ignores
Correct link of debugging UI
allowing file:// URI to access other file:// URIs for filesytem api use
add test
browser: create quota permission context to allow quota request
Bump v0.26.0
Ship with vc++ redist files
Upgrade brightray to link with msvcrt dll
win: Link with msvcrt dll for Release build
Update libchromiumcontent for linking with msvcrt dll
Make history.go work
Handle when in-page entries are cleared
Send history operations as asynchronous messages
support https, ws, wss builtin schemes to be intercepted
protocol: wrapping httpjobfactory with a default protocol handler to intercept
Don't force restart renderer process for in-page navigation
Use Chrome's navigation controller for in-page navigations
Redirect history operations in renderer to browser
Add remote.getCurrentWebContents API
Determine wheter a navigation entry is in-page
provide default error message
protocol: adding error job to log error with custom protocols
Reuse archive's fd in Node asar API
Add Archive::GetFD
Keep archive's file opened in the archive's whole life time
docs: app.terminate is deprecated
0.25.3-2 - add missing devDeps for tests
0.25.3-1
refactor to use electron-download
mac: Make "standard-window" option default to true
mac: Don't use [NSScreen mainScreen]
Update China mirrors url
fix lint errors and add documentation
provide flag to set flash version
flash_drm_host not required
ppapi flash plugin support
Upgrade brightray for #1532
0.25.3
version 0.25.3
0.25.2-1
reset version for #18
Docs.
Use a new option to opt into the standard window.
v0.25.3
Bump v0.25.3
win: Download 64bit directx sdk when building for 64bit target
simplify cache paths
Upgrade brightray, fixes #1318
added cache
update
ignore path.txt
fs.existsSync() is depreciated in io.js
If it's frameless then use the textured background.
Come Correct with memory management
Upload mksnapshot to releases
Remove the textured background.
Add `Super` key support in global-shortcut API.
Some cleanup.
Update libchromiumcontent which includes pdf and ppapi libs
Suggest electron-rebuild for building native modules
win: Remove unused build setting
Explicitly create HttpAuthHandlerFactory
spec: add test for basic authentication
Link pdf related libraries for component build.
webContents: removing getFavicon api
Implement size and position APIs with bounds API
mac: Also use [NSScreen mainScreen] in other places
Pass bounds in clicked event of tray
win: Mouse position is not notify icon's position
docs: Pass bounds in clicked event of tray
revert changes of dist url
docs: fix typo
0.25.2
Enable NPAPI by default, trump Chromium's default
Log errors in preload script instead of rethrowing
update using-native-node-modules doc
removed move utility and replaced with setbounds
tray: send tray icon position as payload onclick OSX
window: adding setBounds and getBounds api
version 0.25.2
Bump v0.25.2
webContents: adding serviceworker helper utilities
Make beforeunload work in webview
spec: Test beforeunload handler in webview
0.25.1-1
Update node to fix #1472
Also upload iojs-*-.tar.gz
Also upload headers to iojs's locations
Make Print API work on Windows.
webContents: providing dom-ready event
Enable syntax highlighting in README
Chaning src of webview should always do a load
webContents: check for navigation entry before using
docs: disable-auto-hide-cursor option
Add 'disable-auto-hide-cursor' option
Update to the new patch for acceptsFirstMouse
Create an explicit API for setting the App User Model ID
Logo png -> svg
Tweak path docs
Add -h/--help usage message
Add help menu to electron site
Add default help menu
Make full screen menu a toggler
Allow calling goBack for multiple times
Don't use Chromium's history list
Implement our own NavigationController
Only append command line params for renderer process
Check if it is guest process before updating process ID
spec: Native modules should work after navigation in webview
Update guest process id when navigating
NULL => nullptr
Use our new way to restart renderer process
Upgrade libchromiumcontent
0.25.1
upgrade
0.25.0
upgrade
mac: Remove unused action handler
mac: Remove all unnecessary default menu items
include headers only in places used
asar: make fs async methods create errors asynchronously
removed will-navigate and did-navigate events
fix getFavcion api in webview to return dataUrl
added did-navigate event, getFavicon api and workaround webview spec
webview: will-navigate and page-favicon-set navigation events
Upgrade CoffeeScript to 1.9.2
Increase timeout for some tests
Style fix
:arrow_up: asar@0.5.0
Minor grammatical fixes
Mention new twitter account
fix minor text error
Add david-dm dependency status badge to Readme
:art:
Add Electron logo to Readme
replaced run.bat with cli.js closes #9
update electron version fixing windows issues
webview: add inspectElement method
window: supports HTML5 fullscreen api
Bump v0.25.1
Don't add tag in bump-version.py
Upgrade brightray for #1462
win: Delay load of BluetoothApis.dll, fixes atom/electron#1462
Also remove user-defined search paths in renderer
Simplify how we remove user-defined search paths
module: remove system paths from search
Update native_mate
Update quick-start.md
updated bash path to ./Electron.app/Contents/MacOS/Electron
Bump v0.25.0
win: Update referenced symbols on ia32
win: Update referenced symbols on x64
win: OpenItemViaShell is removed
Free some stuff
linux: Update brightray to fix crash
linux: Pass v8 snapshot's fd to child process
Update the commit of libchromiumcontent to download
mac: Update brightray to fix Release linking
mac: Link with IOBluetooth.framework
Update user agent
Upgrade to Chrome 42
Upgrade to Chrome 42
Include headers of mojo
Use DBus to detect indicator, not testing for files like an animal
Set icon for notification, and disable action on Ubuntu
Make PlatformNotificationService pass along the icon
Add a parameter to ShowNotification for the icon
Add mention of previous name
Update discuss category to electron
Align the " in #1426
Upgrade brightray for #1442
win: Delay load of MFReadWrite.dll
pm: throw when initialising module before ready event
Parse the debug args of Node
Remove our own debugger implementation
Set node::node_isolate to fix crash
Also enable the debugger
node: start debugger for node run during a forked process
Upgrade node for debugger flags
docs: Atom Shell => Electron in quick-start.md
Revert "Update submodules"
Update submodules
added std::set converter
nativemate: moved std::set converter
Add electron-prebuilt npm instructions to README
0.24.0
rename to electron-prebuilt
Bump v0.24.0
win: Update the rc file
Use electron in release title
Use product_name for generating zip archives
docs: Update the rebranding guide
Replace icons
docs: Build for 64bit target on Windows
docs: Atom Shell => Electron
docs: Update links in README
removes use of passive voice
fixes spelling typo
Update power-monitor.md
Updated documentation for power-monitor
edits quick-start "The renderer Process" segment
Forgot to set default version in crash reporter
mac: Remove "Atom"s from default menu
atom => electron in atom.gyp
Change the window class names
mac: Generate Info.plist from gyp variables
Change the names in specs
Rename hard-coded application names in code
Don't hard-code product name in crash-repoter
Set process.versions['electron']
mac: Avoid making frameworks_path for twice
PRODUCT_NAME => ATOM_PRODUCT_NAME
Don't hard code exec path in child_process.fork
mac: Allow modifying helper app's name
Lines should have <= 80 columns
webContents: workaround reloadIgnoringcache without breaking node integration
shell: fix regression for moveItemToTrash on mac
Remove the did-get-response-details spec
Remove the NativeImage::MakeTemplateImage method
Improves #1373
[mac] Dynamically enable accessibility based on VoiceOver status
Use atom.gyp to generate filenames in upload-windows-pdb.py
Update tmp dir prefix
Use atom.gyp to generate paths in test.py
Use atom.gyp to generate filenamse in create-dist.py
Rename some functions in bootstrap.py
Use "project_name" in atom.gyp as default target in build.py
docs: Don't mention apm
No need to store apm's version in index.json
v0.23.0
Add required defines under 32bit Linux
linux: Upgrade brightray to fix linking problem
linux: Define _LARGEFILE_SOURCE
win: vccorlib120.dll is not needed anymore
Add missing 'v' in some places
webContents: fix dereferencing null in getURL
Bump v0.23.0
Add clean script
Don't push when bumping version
Move version info to atom.gyp and discard apm dependency
s3_config should be in lib.config
Upload index.json when publishing release
win: Do not copy vc runtime dlls
Add win32-ia32 in index.json
Upload SHASUMS.txt when publishing release
win: Upload node.lib of x64 build
Upgrade breakpad and brightray
win: Optimize for size
win: Upload node.dll.pdb
spec: Suppress crash-reporter test on 64bit Windows
win: Suppress size loss warnings
win: Don't use _x64 targets
Explicit set default arch
Require target_arch parameter
win: Build with the arch chosen by user
Allow specifying the arch of libchromiumcontent to download
TARGET_PLATFORM => PLATFORM
Allow specifying the arch of libchromiumcontent to download
Set libchromiumcontent_component when bootstrapping
Upgrade brightray
Cleanup the brightray.gyp file
Remove some duplicated symbols
docs: Add "Build system overview" chapter
Debug_Base and Release_Base configs are abstract
docs: Output dir is changed
Don't link with shared_librayr of boringssl in Release mode
No longer link with shared library of boringssl
Hide symbols of openssl
win: Generate node.lib from node.dll
No more need to reference node's symbols
mac: Improve how we find .dSYM bundle
Build node as shared library
Separate V8 libraries from other libraries
Upgrade libchromiumcontent for win32 fix
win: Move common configs to gyp
win: Do not use link time code generation
win: Cleanup the compiler settings
win: No more chromiumcontent.dll.pdb
win: No need to set default linked libraries
win: Remove unused config variables
win: Register msdia80.dll in dump-symbols.py
linux: Move '-g' to brightray
linux: Work around linker OOM on 32bit target
mac: Move strip flags to brightray
mac: "xcode_settings" doesn't work under "configurations"
Move clang flag to brightray
Add flag to build with clang
mac: Improve configs for Release build
Remove appveyor.yml
Move filename_rules.gypi to brightray
Add "linux_system_libraries" variable
Move filenames to another file
Move filename rules to another file
Allow testing release build
linux: Move some building flags to brightray
linux: Improve building flags for Release build
linux: Strip binaries wen creating distribution
Atom Shell -> Electron
Begin Atom Shell -> Electron rename
Separate symbols generation from building
webContents: event to detect status of requested resource
Remove unused copy_chromedriver target
Ship with correct files in distribution
linux: Add some more building requirements
Remove linux_clang option
Remove linux_clang option
linux: Don't dynamically load libgio
nativeImage: adding setTemplateImage method
Don't verbose output in ci
Link with static_library version of libgtk2ui
linux: Link with libboringssl.so
Add 'error' event to auto-updater documentation
Only build static_library version of libchromiumcontent in CI
Don't call download twice
Add position attribute for menu items
Upgrade libchromiumcontent
win: Ignore duplicate symbols between BoringSSL and OpenSSL
Simplify how we build node.lib
Link boringssl as shared_library
Still link with shared_library of boringssl
No more need to ship vc runtime
win: Link with DLL version of vcrt in component build
Link boringssl and node together in one binary
nativeWindowMac: check for web_contents before clipping
win: Upgrade brightray for linking problem
win: Link with libraries from other places
win: Import system libraries in content_common.gypi
win: Link with boringssl.dll
win: Copy necessary shared libraries
win: Link with sandbox and base_static under component build
add `to` in sentence for grammar
win: Add configurations for x64 build
Upgrade libchromiumcontent to use the static_library build
Download static_library build of libchromiumcontent
Download static_library build of libchromiumcontent
webview: adding page-title-set event
atomMain: initialise uv_setup_args
Update build-instructions-windows.md
Move filenames to another gyp file
Do not download symbols
Strip generate binaries
Use "R" and "D" as short names for config
Use "D" and "R" as short names
Link with libboringssl.dylib
mac: Link with all necessary system libraries
Also build with static_library version of libchromiumcontent
Set libraries' path according to libchromiumcontent_component variable
Only do component build in Debug mode
browserWindow: adding devtools-focused event
Link with component build shared libraries
Link with component build shared libraries
Upgrade brightray for component build
Upgrade libchromiumcontent for component build
Update brightray for #1337
No more need to reference node's native bindings
Do not need to copy node.dll to PRODUCT_DIR
Ship node.dll
Build node as shared library
:arrow_up: iojs@1.6.3
detecting focus on devtools webcontents
Verify whether the file exists before including it in zip
fix link
0.22.3
0.22.3
0.22.2
0.22.2
modify param description
Bump v0.22.3
Upgrade brightray to enable content module's webui
Minor fixes of #1309
It is not safe to get exit code once the child is reaped
Cleanup command line handling code
Revert "Don't store args as std::string"
Don't store args as std::string
win: d3dcompiler_46.dll => d3dcompiler_47.dll
win: Ship d3dcompiler_47.dll
Enable webui in content layer.
docs: Say more about what is renderer process and main process
Update workspace visible APIs.
Simplified Mirrors section.
shell: return status for moveItemToTrash on all platforms
implemetation of AtomCommandline to preserve args
Update libchromiumcontent to disable zygote process
reverted incorrect changes
Improve #1317
Improve #1307
providing option to undock devtools from browser-window
docs: BrowserWindow.capturePage nows returns NativeImage
npapi: warn users loading npapi plugins on unsupported platform
Renamed browser-side to main process renamed a few occurances of "web page" to "renderer" renamed a few files that had "browser" in their name to "main-process" note that there are still many occurances of web page.
:memo: Add document for workspace visible APIs.
views: Restore window state when showing window
docs: Mention the debug symbols, closes #1201
linux: it is now safe to use clipboard in renderer process
spec: clipboard.readImage()
Add SetVisibleOnAllWorkspaces/IsVisibleOnAllWorkspaces API.
Add clipboard.writeImage API
docs: clipboard.readImage/.writeImage
Enable setting only one side of max/min size, fixes #1301
Unify how we throw exceptions
Improves #1295
add --save-dev instructions to readme
allow setting loglevel
throw when trying to create tray before app is ready
Print localizedFailureReason for autoUpdater errors
Catch the exception thrown from Squirrel
Use Release build of Squirrel
docs: "options" is a required parameter in dialog.showMessageBox
mac: Don't rely on autorelease to delete window delegate
[doc]: fix when to use protocol module
:art: Add "-ize" suffix
added acceptsFirstMouse for controlRegionView
Clean up WebView's ipc listeners when detached, fix #1185
Update brightray
Bump v0.22.2
Update libchromiumcontent
Update libchromiumcontent
Revert "The "subpixel-font-scaling" option is removed"
Update native_mate for #1112
Don't reset handle before Wrappable is destroyed
docs: The right way of "set", according to #1126
Cleanup #1275
Simplify #1261
docs: How to use asar archive with unpacked files
Allow reading empty file from asar archive
Remove unneeded log
Recognize asar archive with unpacked files
spec: Test asar archive with unpacked files
No need to override child_process.fork
Avoid extra copy of data in capturePage
add protocol.RequestBuffer api
docs: Add a "s"
0.22.1
0.22.1
0.22.0
0.22.0
Bump v0.22.1
Ship snapshot file, fixes #1260
libudev.so is now dynamically loaded from Chrome 41
Bump v0.22.0
Upgrade libchromiumcontent
linux: Upgrade libchromiumcontent to fix linking
js_stream is a new module of io.js
:arrow_up: apm@0.144.0
Upgrade brightray to fix invalid commit to libchromiumcontent
Initialize AtExitManager before calling MainApplicationBundlePath
Define our own Node entry
Use DevToolsAPI instead of InspectorFrontendAPI
Remove the "X-Frame-Options" from response headers for devtools
Upgrade to io.js v1.5.2
Ship with snapshot files
The "subpixel-font-scaling" option is removed
Upgrade native_mate for unsigned long conversion
CommandLine moved to base::CommandLine
Upgrade to Chrome 41
Upgrade libchromiumcontent
Update URLs for new atom org location
Update brightray repo url to be under atom org
docs: "Quick start" should also be a "tutorial"
docs: Separate guides and tutorials
Add argument that allows for non-interactive use
Add check for root in script/bootstrap.py
:memo: avoid breaking everyone's stuff
usigned long is uint64 on Linux
add DidFailProvisionalLoad method
Upgrade libchromiumcontent
Use DevToolsAPI instead of InspectorFrontendAPI
:memo: rename node-webkit to NW.js in development docs
define devToolsWebContents for use from remote module
:memo: add troubleshooting instructions for libudev.so.0 failure
Add converter for unsigned long
using Object.defineProperty instead of __defineMethods__
test for ignoreCertificateError
MEDIA_LOOPBACK_AUDIO_CAPTURE renamed to MEDIA_DESKTOP_AUDIO_CAPTURE
Remove RemoteDebuggingServer class
Implement PlatformNotificationService
avoid overriding type value of showMessageBox
Update README to replace node.js with io.js
Upgrade to Chrome 41
using WebContentsObserver::NavigationEntryCommitted to set virtualurl
read files from asar archives in custom protocol
:memo: Tweak Windows installer sentence
Refer grunt-atom-shell-installer to Windows users
0.21.3-1 (0.21.3 had a bug on our end, sorry)
fix typo
use standard js style
0.21.3
0.21.3
docs: Put window.open docs in its own chapter, regards #1137
Rename FakeWindow to BrowserWindowProxy
Improve #1137
Update using-selenium-and-webdriver.md
Update online-offline-events.md
Update application-packaging.md
Update quick-start.md
Bump v0.21.3
fix readme style
Change the link to use dashes.
Add FakeWindow documentation.
add npm installation instructions to README
Emit a new before-quit event at the start of Browser::Quit, which gives us a chance to cancel before any windows are closed.
Prevent overflow on webview with height: 100%
Broken link in docs, api/synopsis
Remove two semicolons.
Implement FakeWindow.postMessage, window.opener.postMessage and window.closed flag for popup windows.
Set process.resourcesPath in C++
Put compiled coffee sources into asar archive
Use __dirname when setting globalPaths
asar@0.2.2
docs: "icon" attribute
Enable setting icon of menu item
Simplify the code to call delegate method
Add AfterInit method for Wrappable
spec: native-image should read asar archive
Make NativeImage work with asar archive
Move GetAsarArchivePath to asar_util.h
Move GetsOrCreateAsarArchive to asar_util.h
docs: Update NativeImage
Add nativeImage.createFromBuffer()
Add NativeImage.toDataUrl()
Add nativeImage.createFromDataUrl()
Add nativeImage.createEmpty()
docs: Use NativeImage to replace Image
Return NativeImage in BrowserWindow.capturePage
Remove unneeded helper
mac: Use AsNSImage instead of ToNSImage
mac: Don't rely on NSImage to read file
Upgrade native_mate for security check
Use NativeImage when converting images from V8
Enable creating NativeImage from file path
Enable creating NativeImage with native-image module
Enable creating NativeImage from PNG and JPEG
Add NativeImage.ToJPEG
Add a few more methods for NativeImage
Convert gfx::Image to NativeImage instance
Add clipboard.readImage method
Enable converting gfx::Image to Buffer
Upgrade brightray for gyp
Upgrade to latest gyp
Check internal field before converting
docs: "type" option of BrowserWindow
Add "type" option to change window type
Style fixups
Suppress SSL verification, fixes #1115
docs: update wording in `application-packagaging`
icon_util is Windows-only
Documentation
Add missing trampoline method
We need a UTF-16 string here
Switch to gfx::Image
Come correct with line length and constness
Plumb code all the way up
First hack at setting the window icon overlay
0.21.2
0.21.1
Bump v0.21.2
Update atom.rc
Remove MFC lib dependency
A little clean up
Event name typo
Get the WebViewManager from embedder WebContents
Seperate the API implementation of WebViewManager
Clean up WebViewManager
Move web_view_manager to atom/browser
Avoid using global BrowserContext
Remove the WebViewRendererState class
Update WebViewRendererState immediately
Remove WebViewRendererState::IsGuest
Add lock for WebViewRendererState
spec: Script forked with child_process supports asar archives
Init asar support without external .js files
Compile asar.coffee to .c
generate_sources => compile_coffee
compile-coffee.py should be put under tools/
docs: forBrowser is now required for webdriver
Use 'atomScreen' for the variable name
Upgrade brightray
NotificationError is discarded
Use the new devtools API
scoped_ptr.PassAs is deprecated
Upgrade brightray
Upgrade libchromiumcontent to 40.0.2214.91
Bump v0.21.1
win: Delete temp file on reboot, fix #1084
Don't touch global fs object in graceful-fs
spec: graceful-fs should not touch global fs object
Redirect process.binding('natives').fs to global fs object
Enable wrap arbitrary fs object
spec: Test graceful-fs
Change Mac OS X to OS X.
add contributing
0.21.0
0.20.8
0.20.7
0.20.6
0.20.5
0.20.4
0.20.3
0.20.2
0.20.1
0.20.0
0.19.5
Cleanup usaages of asar: protocol
docs: Use file: instead of asar:
spec: Test loading script tag in html
Remove the asar: protocol
Make file: protocol compatible with asar: protocol
No more need of pathwatcher spec
Upgrade node modules in spec
Return null in window.open if failed to open new window, fixes #1067
Bump v0.21.0
Upgrade node to fix module initialization
Do not warn about deprecated APIs
Use upload-node-headers.py in upload.py
Move the code of uploading node headers to the new script
Move the code of creating tarball to a new script
:arrow_up: apm@0.126.0
win: gfx::EnableHighDPISupport is dropped
kDisableDirectWrite has been moved to ui/gfx
Upgrade libchromiumcontent to ship crypto headers
Upgrade to Chrome 40.0.2214.91
Upgrade to latest io.js
uv_run_mode can not be used as bitmask
Update to latest URLRequestJobFactory API
Update to new FilesSelectedInChooser API
base/file_util.h has been moved to base/files/file_util.h
scoped_ptr.PassAs is removed
OVERRIDE macro is now removed
Upgrade to Chrome 40.0.2214.72
Bump v0.20.8
No need to route via ATOM_INTERNAL_MESSAGE
Check for the existence of "ipc" object
Don't rely on the global process object for message dispatching
spec: The preload script should be able to receive ipc messages
Use libc++ on mac.
Correct spelling mistake.
Simplify atom_bindings
Use FILE_PATH_LITERAL instead of AppendASCII
Remove some unused virtual functions
Use node::CreateEnvironment to create environment
Get rid of AtomRenderFrameObserver
Remove AtomRendererBindings
Don't handle browser messages before document object is created
Add support for `Plus` as accelerator key, fixes #1050
Implement CheckMediaAccessPermission, fixes #1017
Implement CheckMediaAccessPermission
Use https://atom.io/download/atom-shell as headers download URL
Clean the init.coffee
spec: No node integration in iframe
Initialize node integration after window object is cleared
Don't insert node symbols in frames
Add DidClearWindowObject for renderer client
Add atom-shell bindings before loading environment
Separate LoadEnvironment from CreateEnvironment
docs: Make getCurrentWindow more clear, fixes #1035
Include node's version
Upload the index.json to S3
Include apm version in index.json
:arrow_up: apm@0.122.0
Download the index.json from server
Add script to dump information for atom-shell
Bump v0.20.7
No need to preheat original-fs module
Update asar specs
Guard against bad events in screen module
Evaluate the "fs.js" in original-fs
Don't popup error if the user has a custom uncaught exception handler
docs: The editing commands
Make editing commands available in <webview>
Add editing commands for WebContents
Add China download mirrors
Add a few more paths for app.getPath
docs: Say more about Linux's behavior
Add "cache" and "userCache" directories
docs: Mention when to override userData path
Throw error when PathService call failed
docs: Document app.getPath/app.setPath
Implement app.getHomeDir with app.getPath
Override default userData according to app's name
Add app.setPath and app.getPath APIs
Call app.getDataPath after app is ready
Add app.setDataPath API
Warning of app not ready in screen module
register DIR_CACHE and DIR_USER_CACHE in path service
linux: Override DIR_APP_DATA before loading .js
Make DIR_APP_DATA available on Linux
Override DIR_USER_DATA as data path
Override DIR_APP_DATA on Linux
linux,win: Initalize ICU for node mode
spec: Test localeCompare in child process
mac: Initialize ICU in Node mode
docs: Update docs and examples for screen module
Update the displays when there is metrics change
Pass the display in screen events
Make getAllDisplays return current displays.
Add events on display add/remove.
Make "screen" module a browser module
Add some more attributes for Display
Don't put gfx_converter's implementaion in header file
Add a few more API bindings
Don't hard-code API names
Upgrade brightray for #863
Add -stdlib=libc++ for linking
Use current exe's icon as default window icon.
mac: Upgrade libchromiumcontent to fix linking error
Also unpack arguments in ipc-message-host message
Unpack the arguments in ipc message
Update native_mate to fix linking error
Avoid unnecessary copy in ConvertToV8
Convert arguments to V8 directly in EventEmitter::Emmit
Use C++11 stdlib
Bump v0.20.6
docs: Transparent window
Don't set contentWindow property for <webview>
Use http in framework download url, fixes #998
remove
OVERRIDE => override
ensuring single instance for loading and unloading extension
Add webFrame.registerUrlSchemeAsSecure API
Don't show insecure content by default
Allow using blink's private headers
Add support for --ignore-certificate-errors
Bump v0.20.5
Don't allow duplicate object in a parsed array
Add support for --ignore-certificate-errors
Bump v0.20.4
docs: "icon" option of dialog.showMessageBox
File dialogs don't need icon
Add "icon" option for message box
Enable initializing an empty image
Add --disable-http-cache switch, fixes #891
Add a way to custom http cache backend
Avoid using app API in renderer process for #907
Upgrade brightray for #941
Don't call Screen functions until app is ready
Upgrade native_mate to fix throwing exception from constructor
docs: Document dialog.showErrorBox, fixes #909
docs: Template image
mac: Add support for template image
Use gfx::Image instead of gfx::ImageSkia in API
mac: Check for invalid image
mac: Initialize gfx::ImageSkia from gfx::Image
mac: Initialize gfx::Image from NSImage
Simplify the image_converter.cc
Add converters for gfx::Image
Upgrade brightray for #969
Implement GetDevToolsManagerDelegate, fixes atom/atom-shell#969
fix typo in atom.gyp
docs: Add troubleshooting for runnin on Git Bash, closed #711
Bump v0.20.3
docs: Mention the GYP_DEFINES way of rebranding
docs: Update Application Distribution
Make product_name and project_name configurable
Discard "framework_name"
Use PRODUCT_NAME as application name
Define PRODUCT_NAME
Revert #898
mac: BrowserWindow.show() should also focus on window
win: Make transparent window resizable
views: Make transparent window work
mac: Simplify frameless window dragging code
OVERRIDE => override in native_window_mac.h
Upgrade libchromiumcontent to make transparent window work on Mac
mac: Don't show title text in transparent window
mac: Use transparent window
Tell the render widget to use transparent background.
Add "transparent" option
Bump v0.20.2
win: Update version file with unix line ending
Upgrade libchromiumcontent to fix icu symbols
docs: webFrame.setSpellCheckProvider
Spell check pasted text
Add option to turn on/off auto correct word
Use Chrome's policy for auto correct word
Split the words before sending it to spellCheck
Small style fixes
Also expose requestCheckingOfText
Add BrowserWindow.showDefinitionForSelection()
Call JavaScript to get spell check results
Add webFrame.setSpellCheckClient API
Add an empty SpellCheckClient
Make file dialogs work in <webview>, fixes #930
Make getUserMedia work in <webview>, fixes #845
docs: "disablewebsecurity" attribute
Don't leak listeners in embedder when guest is destroyed
Suppress EventEmitter warnings
spec: "disablewebsecurity" attribute
Set web preferences for guest page
Add "disablewebsecurity" attribute for <webview>
Use "http" for download url, fixes #929
Bump v0.20.1
docs: "will-navigate" event
spec: "will-navigate" event
Redirect BrowserWindow's "will-navigate" event to WebContents
Add "will-navigate" event for WebContents
Add "will-navigate" event for BrowserWindow
Upgrade brightray to fix crash in #393
Remove DownloadManagerDelegate
Add sendToHost method
Remove uses of deprecated APIs in remote module
doc: ipc-message event
spec: ipc-message event
Redirect guest page's ipc message to embedder
Add that Menu.setApplication only works after 'ready' event.
Allow same object to appear in one list when parsing V8 array
Add maximum depth when converting V8 object to base::Value
win: Don't hang when failed to create thread
win: Run async save dialog in new thread
win: Run async open dialog in new thread
Upgrade cpplint
views: Implement CanMinimize, fixes #918
views: Make it possible to show a window in maximized state
win: Reserve border space for maximized frameless window
win: Don't allow maximzing a unresiazble frameless window
Check key via ContainsKey instead of null check
You're not my real Dad, cpplint
Bump v0.20.0
Only listen to its own events in <webview>, fixes #885
Upgrade libchromiumcontent to remove dom storage quota
mac: Use com.github.atom-shell as default CFBundleIdentifier
Upgrade brightray
Upgrade libchromiumcontent
1.2.1
Upgrade libchromiumcontent to fix generating node.lib
win: No longer support building with VS Express
win: Use d3dcompiler_46.dll
Upgrade node to fix failed call to LoadLibrary
Minor fixes on <webview>
Update tray.md
Move handling of "preload" to web-view-attributes
Upgrade brightray to fix running on Mac
Upgrade libchromiumcontent to 39.0.2171.65
Add DevToolsManagerDelegateA
DevToolsClientHost is discarded
Add os_bsd variable for breakpad
spec: Remove "restore" event test
linux: Upgrade breakpad to fix building
views: SizeConstraintsChanged has become required
linux: GTK+ status icon has come back
Bump Chrome version
linux: Disable warnings for g_settings_list_schemas
Upgrade node to bump node module version
Move "nodeintegration" and "plugins" to web-view-attributes
Use element instant id for GetGuestByInstanceID
Moved parseSrcAttribute() into the SrcAttribute object as parse()
Various webview cleanup
Renamed "WebView" -> "WebViewImpl" in web_view.js and other files that import it
Optimized the handling of webview attribute mutation
Bump submodule to merged version
Simplify web-view.coffee
Automated the definitions of webview attributes as properties on the webview node
Got rid of the internal copies of webview attributes
Webview attributes overhaul
Moved constants out of web-view.coffee and into a new file
bootstrap.py -v in mac
bootstrap.py -v
bootstrap.py also imports it
verbose_mode from config.py
verbose_mode getter/setter
Move webview code to atom/renderer/lib/web-view
Add some documentation about renaming Atom Shell
Bump brightray to pick up brightray/brightray#85
Delete OverrideChildProcessPath and OverrideFrameworkBundlePath altogether
Travis CI says: execute unused
Travis CI says long line detected
One more `verbose_mode`
Make use of execute_stdout
introduce execute_stdout
Upgrade node for new V8 API
Disable crash reporter spec on Yosemite
apm@0.112.0
Bootstrap indeed
Why not verbose?
Upgrade libchromiumcontent to 39.0.2171.65
Helps troubleshooting
Update printing code
Find the MainMenu nib correctly
Determine the Helper name from the App name
Upgrade node, fixes #843
Upgrade brightray
1.2.0
bump to 0.19.5 for #5
Same as https://github.com/atom/atom-shell/pull/867
Bump v0.19.5
docs: "balloon-show" and "balloon-closed" events
win: Add "balloon-show" and "balloon-closed" events
docs: Tray balloon
win: Remove XP code in Tray
win: Add "balloon-clicked" event for Tray
Add Tray.displayBallon API
win: Add NotifyIcon::DisplayBalloon
Remove tray_icon_win.h
OVERRIDE => override in notify_icon.h
Add Tray.destroy() API, fixes #871
OVERRIDE => override in atom_api_tray.h
win: Remove NotifyIconHostStateChanger
Some coding style fixes
fix build
Update documentation for Menu.popup()
Allow positioning the context menu
Paul suggests paths to be reversed
`subprocess.Popen` fails when Python is in "App Paths"
Preserve that empty line
Compose full list in one place
WINDOWS_NODE_PATHs are to stay
fix typo in variable name
Paul says `lookup PATH`
Travis says `line too long`
Verbose required paths
Upgrade brightray for #849
spec: Don't test window state events in CI on Linux
spec: Make timeout longer for window state tests
spec: Window state events
docs: Window state events
SetFullscreen => SetFullScreen
win: Implement window state events
mac: Implement window state events
Make WindowStateWatcher X11 only
x11: Implement window state events
views: Add WindowStateWatcher
Move Linux pkg-config dependencies from atom-shell to brightray.
Move Linux pkg-config dependencies from atom-shell to brightray.
linux: Set WM_CLASS for devtools window
linux: Add a way to set WM_CLASS for devtools window
linux: Use app's name for WM_CLASS
linux: Set WM_WINDOW_ROLE correctly
Upgrade node, fixes #843
Downcast variable to appease clang
1.1.8
add shebang. fixes #4
Bump v0.19.4
Do not use no_overwrite mode.
OVERRODE => override in atom_main_delegate.h
Remove debugging print, closes #841
Bump v0.19.3
docs: Represented file of window
docs: Progress bar in taskbar
docs: Some tunes on desktop-environment-integration.md
docs: Add notes on Unity launcher
docs: Add "Desktop environment integration"
docs: app.setUserTasks
AddUserTasks => setUserTasks
docs: Recent documents API
docs: app.dock.setMenu
Enable setting icon for addUserTasks
Only "title" and "program" are required for AddUserTasks
win: Add app.addUserTasks API
win: Add app.clearRecentDocuments API
win: Set app user model ID
win: Implement Browser::AddRecentDocument
mac: Add app.addRecentDocument API
mac: Release application delegate on exit
Add app.dock.setMenu API
OVERRIDE => override in atom_api_app.h
cocoa: Enable creating empty menu
cocoa: Enable modifying initialized menu
OVERRIDE => override in browser.h
OVERRIDE => override in atom/browser/ui/views
OVERRIDE => override in atom_api_menu.h
No . in commit message
1.1.7
separate path file
1.1.6
arg fwd should also work on windows
forward arguments
Bump v0.19.2.
apm@0.111.0
Add a paragraph about modern.ie
Come Correct with 80-char wrapping
Upgrade to Chrome 38.0.2125.122
Misc copy fixups
Point people towards VS2013 Community Edition
Remove Cygwin suggestion
Powershell'ify everything
linux: Install libgconf2-dev in CI
linux: Link necessary libraries
Revert "Upgrade node for #811"
Upgrade node for #811
Add <webview>.getId, fixes #818
Update Windows build instructions
docs: Menu bar APIs
views: Implement menubar APIs
Add JS menubar APIs
OVERRIDE => override in native_window_views.h
Add a bunch of menu bar related APIs
docs: "preload" option of BrowserWindow
spec: "preload" option of BrowserWindow
Add "preload" option for BrowserWindow
Tidy code in CreateNonClientFrameView
Force native window
docs: original-fs module
spec: original-fs module
Add original-fs module
spec: "httpreferrer" attribute of <webview>
docs: "httpreferrer" attribute of <webview>
Various fixes of #801
docs: crashRepoter.getLastCrashReport
Add crashRepoter.getLastCrashReport API
win: Writes uploads.log
linux: Put "uploads.log" under "/tmp/ProductName Crashes/"
linux: Put crash dumps under "/tmp/ProductName Crashes/"
linux: Writes crash report upload log
Ports are limited to 64k
docs: Update symbol server address
Use lowercase for symbol paths
Add execution bit
docs: Setting up symbol server in debugger
views: Make auto-hide-menu-bar work when NumLock is on, fixes #796
Making Http Referrer addition better!
Make sure frame is frameless
Upload PDBs to Windows symbol server when publishing
Don't overwrite files on S3
Upload symbols to S3
Add script to call symstore
views: Make auto-hide-menu-bar work when NumLock is on, fixes #796
Add support for setting http referrer
Upgrade node, fixes #634
Add spec for #634
Upgrade brightray for #646
linux: Use native window frame for devtools
No need to write "virtual" when we have "override"
Print error when "preload" script is not found
docs: "preload" attribute of <webview>
spec: "preload" attribute of <webview>
Load the "preload" script in <webview>
Pass "preload" attribute to GuestViewManager
docs: Mention the side effect of "fullscreen" option, fixes #792
Updates per PR feedback
Add tutorial on online/offline event detection
Forbid using dialog module before app is ready
linux: Use GTK+ for error reporting when GUI is ready
Don't print error to console in default_app
linux: Print error to console when GUI is not ready
mac: Implement dialog.showErrorBox
Use dialog.showErrorBox for showing errors
win: Implement dialog.showErrorBox
Add dialog.showErrorBox API
docs: "plugins" attribute of <webview>
Add "plugins" attribute for <webview>
Bump v0.19.1.
External links should have "foreground-tab" disposition
docs: Document the `disposition` parameter
Window opened by window.open should have "default" disposition
Translate |disposition| to string
Emit "new-window" event for dispositions other than CURRENT_TAB
Upgrade brightray, fixes #769
Make devtools window maximizable
Also add closeDevTools and isDevToolsOpened for webview
mac: Clean delegate before releasing window
mac: Close the devtools window before releasing it
Show devtools for guest page in undocked mode
mac: Clean delegate after closing window
Enable setting devtools to not able to dock
force devtools to show as undocked.
fix for cpplint
update and document openDevTools on web view.
:memo: a -> an
add open devtools api to webview tag
win: Add color chooser dialog
Use project_name for the lib file
Remove All Rights Reserved after GitHub copyright
aura: Add color chooser dialog
mac: Add color chooser dialog
Upgrade brightray to handle localized string
Handle localized string
Implement RunFileChooser
OVERRIDE => override in atom_browser_client.h
Implement EnumerateDirectory
Add WebDialogHelper
Update web-view-tag.md
Forbid using protocol module before app is ready, fixes #661
Upgrade native_mate, fixes #660
Guard against non-constructor call in Constructor::New
Throw error when BrowserWindow is created before app is ready
Don't throw error in Constructor
Bump v0.19.0.
Simplify the GuestWindowManager
Reuse the window of same frame name
spec: Only test net.connect on Mac
fix broken links
Don't throw exception on closed guest window
Make <a target="_blank"> open window by default
doc: "new-window" event of WebContents
Add eval() for FakeWindow
Add focus() and blur() for FakeWindow
spec: "new-window" event of BrowserWindow
Use GuestWindowManager to mange windows created by window.open
spec: "new-window" event of <webview>
Add "frameName" as paramter for "new-window" event
Route window.open to "new-window" event
Set "defaultPrevented" when "preventDefault()" is called
OVERRIDE => override in atom_api_window.h
Prevent creating popup window from inside WebContents
OVERRIDE => override in native_window.h
Upgrade brightray
No need for "virtual" when "override" is used
Make remote.getCurrentWindow() work in <webview>
Make <webview> work with plugins turned off
:memo: Minor grammar tweaks
:memo: codes -> code
Add specs for <webview>
Add BIND_DONE event for process object
Remove unneeded cleanup code
Add attribute to turn on node integration in <webview>
Node integration option is now only true/false
Remove iframe related security code
Upgrade libchromiumcontent to discard iframe security settings
Detect node integration in JavaScript
Make autoresize follow Chrome's behavior
Add docs on our custom web elements
Add 'new-window' event for <webview>
Allow passing V8 objects in EventEmitter
Remove the deprecated convertScreenToBase and convertBaseToScreen.
Add 'close' and 'console-message' for <webview>
Dispatch WebContents events to <webview>
Add more events for WebContents
Send unhandled key event to embedder
Add WebContents.insertCSS
Add WebContents.setUserAgent
Bind WebContents APIs to <webview>
Assign a new SiteInstance for guest
Add remote.getGuestWebContents
Don't expose <webview> in guest
Don't fork renderer process for guest
Rename web-view module to web-frame
Enable navigation from webview
Implement allowtransparency attribute
Destroy guest when the embedder is gone
Attach <webview> with guest WebContents
Add converters between gfx:: and v8
Mention clang 3.4 is required, refs #735
Register guest web view
Use old PLUGIN_METHOD_ATTACH for webview
Implement GuestViewInternal.createGuest and destroyGuest
api: Add webContent.create() to create detached WebContents
Make WebContents cache object template
OVERRIDE => override
Schemas should be registered early
Add code to register <webview> tag
Add API to register custom element
Bump v0.18.2.
linux: Don't append --force-device-scale-factor to process.argv
Make code cleaner
linux: Also check for schema before init
linux: Make scale factor default to 1
linux: Set scale factor to the value in gsettings
Update libgio_loader for some APIs
Add libgio loader
linux: Add libdbus-1-dev as requirement
Upgrade libchromiumcontent for dbus headers
1.1.5
set verbose mode
bump nugget
Link with dbus
add programmatic usage
1.1.4
add tests
make travis build
1.1.3
add travis
fix spaces in path issue
update readme
1.1.2
better windows support
1.1.1
bundle empty run.bat
1.1.0
better cross platform support
1.0.1
update readme
add missing fields
1.0.0
reset version
first commit
mac: Should restart renderer when reloading
spec: Don't test BrowserWindow.show() in CI
spec: BrowserWindow.showInactive()
Implement BrowserWindow::ShowInactive
docs: Add BrowserWindow.showInactive()
Bump v0.18.1.
Use menu bar features in default_app
Still requires unity for global app menubar
Do not create native Event object when not needed
Caching object templates for Event, fixes #705
Run idle GC in browser every 1m
Enable mnemonics in menu, fixes atom/atom#3844
--harmony_collections is not needed anymore
linux: GlobalMenu: UBUNTU_MENUPROXY with >1 char
Bump v0.18.0.
Make __filename normalized
Add spec for #694
[docs] Clean up some grammar around ASAR.
Just pass spec when mkdir failed
Upgrade libchromiumcontent to fix node.lib
Print error when mkdir failed
Upgrade libchromiumcontent to fix linking error
Upgrade to apm@0.102.0
Upgrade to libchromiumcontent 44c71d8
linux: GlobalMenu: only if UBUNTU_MENUPROXY is set
linux: Rename window's class to Atom
Upgrade brightray for Chrome 38
Update node for V8 changes
Upgrade to Chrome 38.0.2125.102
Upgrade to Chrome 38
Adapt to API changes of Chrome 38
Set google API key
Enable AVFoundation
Add AtomSpeechRecognitionManagerDelegate
Add linux tts implementation from Chrome
Upgrade libchromiuncontent to 3245ef8
Upgrade brightray
Upgrade libchromiumcontent to f0c3a45
Install tts dispatcher
Import Chrome's tts code
Bump v0.17.2.
Upgrade to Chrome af66653
Upgrade brightray
Don't warn about deprecated-register
Upgrade libchromiumcontent to 440833b, fixes #462
speling error.
Optimize fs.stat
Add process.versions['chrome'], fixes #675
Time Shim
Added Stat Time
Bump v0.17.1.
Break on first found app
Bump v0.17.0.
mac: Don't create button without title, fixes #631
Upgrade brightray
Clean the callback after executed
Add handling of user media requests
win: uv_poll_get_timeout is removed
Upgrade node to v0.11.4, fixes #669
Use NODE_VERSION_AT_LEAST to determine node version
Still use 14 for node_module_version
Increase node_module_version, fixes #533
win: asar: Support "\" as path separator
spec: asar: fs.realpath
spec: asar: fs.realpathSync
asar: Add support in fs.realpath
asar: Add support in fs.realpathSync
docs: Add usage on app packaging
docs: Add reference on app packaging
spec: asar: Testing getting file in web page
spec: asar: child_process.fork
spec: asar: fs.open
spec: asar: fs.open
spec: asar: fs.readdir
spec: asar: Test getting stats of root in fs.lstat
spec: asar: fs.readdirSync
spec: asar: fs.lstat
Make sure fs.stat and fs.lstat are async
Use "null" instead of "undefined" as no error
spec: asar: fs.lstatSync
spec: asar: fs.readFile
spec: asar: fs.readFileSync
Make some APIs work with archive.copyFileOut API.
Make docs follow 80 columns rule.
Make spliting paths faster.
Remove unneeded ArchiveFactory.
Make process.dlopen work for asar packages.
Clean cached asar archives when quitting.
Emit "exit" event for "process" when quitting.
Add "quit" event for app.
Cache asar archives on JavaScript side.
Just use plain pointer for weak reference.
Add a way to copy a file in archive into filesystem.
Also search for app.asar when starting app.
Make sure fs.readdir calls its callback asynchronously.
Fill the stats object as much as we can.
Make fs.readdir support asar package.
Make options of fs.readFile work.
Make fs.readFile support asar package
Make fs.stat support asar package
Add asar.stat method.
Add JavaScript bindings of asar::Archive.
Make throwing exception when parsing args easier
Separate the archive cache out to ArchiveFactory.
Caching the Archive object.
Send file content in asar://
Read the archive's header when there is a url request
Add asar:// protocol handler.
Bump v0.16.3.
Only include chromedriver in vX.X.0 releases.
Use app name as desktop name by default.
win: Add "direct-write" option for BrowserWindow.
docs: setProgressBar API.
linux: Implement SetProgressBar API.
Correct code style.
mac: Implement SetProgressBar API.
win: Implement SetProgressBar API.
docs: use => using
docs: Document how to use chromedriver.
Pretend to be Chrome by default.
Make our user agent string follow standard.
default_app: Don't quit when started as web driver.
Create dist for chromedriver and upload it.
Add action to copy chromedriver.
Correct parameter type of setHightlightMode()
Add Volume keys support in global-shortcut API, fix #630.
Bump v0.16.2.
No need to set "--harmony" in renderer process.
docs: Document the new Tray APIs.
mac: Add "double-clicked" event for Tray.
mac: Add Tray.setHighlightMode API, fixes #425.
mac: Add Tray.setTitle API, fixes #560.
Make default_app focus the main window on startup.
Upgrade brightray.
Set toolbar color for devtools.
mac: Send focus/blur event to devtools web contents.
views: Set devtools window's icon, fixes #429.
Add a method in InspectableWebContentDelegate to set icon for devtools window.
mac: Don't activate window when showing.
Use PersistentDictionary to store web perferences.
Add PersistentDictionary.
Remove unused constructor of Dictionary.
Make code more tidy.
docs: Add options for web runtime features.
Pass web runtime features by command line.
Add switches of web runtime flags.
Bump v0.16.1.
BrowserWindow.show() should not focus window, fixes #609.
docs: Now atom-shell's version should be used when building modules.
Bump v0.16.0.
Make dialog API's parameters more flexible.
linux: Don't set PR_SET_NO_NEW_PRIVS when creating process, fixes #623.
docs: Add notes on OS X application menu.
mac: Enable setting "Services" menu.
Send message to client in debugger thread.
Make --debug-brk work.
Send connect message if client is connected.
Pass debugger messages between V8 debugger.
Pass header sent from client.
Start a TCP server in the debugger thread.
Start a new debugger thread to listen for commands.
Upgrade to apm@0.93.0
Small typo fix in fatal JS error message
Use atom-shell's version for creating node headers tarball.
Upgrade node to fix child_process.fork.
linux: Dont' use native style border.
views: Use new devtools resizing strategy.
Upgrade brightray.
mac: Use new devtools resizing strategy.
Use new devtools resizing strategy from Chrome 37.
Initialize node after WebKit is initialized.
Initailize V8 with gin.
Upgrade libchromiumcontent for gin headers.
Comment out debugger agent.
Update printing code to Chrome 37.
Upgrade node for Chrome 37.
Upgrade brightray to Chrome 37.
Upgrade libchromiumcontent to Chrome 37.
Don't create empty url request job factory.
Add skia related defines.
Upgrade libchromiumcontent to chrome37.
docs: Add docs on how to use chrome devtools extension.
dev-tools => devtools.
Remember loaded extensions.
Add "dev-tools-opened" and "dev-tools-closed" events.
Add support for chrome.extension API in devtools extension.
Print console output of devtools.
Atom.exe should receive Squirrel events
win: Don't overwrite Chrome hight DPI setting.
Ignore requests to other hosts.
Don't use pure number as host name.
Make "chrome-extension" a standard scheme.
Add chrome-extension protocol for loading devtools extensions.
Upgrade libchromiumcontent to loose iframe sandbox.
Turn off web security for devtools.
Update brightray for devtools zooming.
Implement zoom messages for devtools.
linux: Make BrowserWindow.setSkipTaskbar work dynamically.
linux: Set WM_CLASS and WM_WINDOW_ROLE for window, fixes #605.
Don't use third party dependency in default_app.
docs: Correct debugging chapter.
Changing the Logical Or to Bitwise Or to change from Either to Either Or Both values
Adding the compulsory flag in the API documentation of BrowserWindow.flashFrame
Document the BrowserWindow.print().
Make print settings optional.
Revert "Move the code of getting printing settings to another class."
Add "silent" and "print_background" option for printing.
Move the code of getting printing settings to another class.
Simplify global-shortcut's code.
Remove more unused printing code.
Strip out print preview.
Setup PrintingMessageFilter for printing.
Add BrowserWindow.print() method.
Initailize PrintViewManagerBasic for browser window.
Upgrade libchromiumcontent to contain printing headers.
Allow script initialized window.print().
Initialize the fake BrowserProcess object.
Add printing related source codes from chrome.
No more need to flip rect for capturePage, fixes #589.
linux: Add "dark-theme" option for BrowserWindow, fixes #352.
make CI build faster
Cleanup URLRequestContextGetter.
Move creation of URLRequestJobFactoryImpl into default delegate.
Add Delegate for URLRequestContextGetter.
Add --proxy-server switch.
Add --no-proxy-server switch.
docs: Add chapter on debugging with node-inspector.
Add "Debugging browser process" chapter.
No need to enter isolate.
Add support for --debug switch.
Remove the unused process.getCurrentStackTrace().
Enable setting only one side of minimum size, fixes #461.
Add app.resolveProxy API, fixes #545.
Bump v0.15.9.
Upgrade brightray for new URLRequestContextGetter interface.
Avoid calling GetRequestContext() in UI thread, fixes #591.
Make process.activateUvLoop friendly to multi-context, fixes #587.
linux: Suppress test for "enable-larger-than-screen".
Add --proxy-server and --no-proxy-server switches.
Bump v0.15.8.
A little cleanup.
win: Underline's color tends to be a little lighter.
views: Always hide accelerator when submenu is activated.
views: Pressing "Alt+Key" should bring up the menu bar.
views: Show menubar's submenu when "Alt+Key" is pressed.
views: Show menubar's accelerator when "Alt" is pressed.
views: Draw underline in menu bar for accelerators.
linux: Use "fg" of GtkStyle as text color, fixes #555.
Upgrade libchromium for the accelerator fix.
Add "enable-larger-than-screen" option for BrowserWindow.
Little formating on app.getDataPath.
mac: Make "Text to Speech" work, fixes atom/atom#3288.
Upgrade to Chrome 36.0.1985.143.
Added the getDataPath function to the app api docs
reused converted and fixed indentation
Bump v0.15.7.
docs: Document the chrome command switches we support.
Implement --host-resolver-rules switch.
Implement --host-rules switch.
Initialize job factory as early as possible.
Enable the spec of testing crash of protocol module.
Removed whitespace and added vector import
Remove old symbols when generating symbols.
Bump v0.15.6.
Avoid creating our own URLRequestContextGetter.
Remove unneeded headers and declarations.
Pass parameter by pointers when creating job factory.
Pass ProtocolHandlerScopedVector by value.
Add url_request_context_getter getter for BrowserContext.
Clean handlers when custom job factory is used.
Give user a chance to create custom URLRequestJobFactory.
using content::BrowserThread
Add network provider for google geolocation api.
Add access token store.
Added getAppData function to the app api
win: Show minimize button for unresizable window, fixes #411.
Added a verbose mode to the bootstrap script
Upgrade libchromiumcontent.
Update brightray.
Don't be too strict on media requests.
linux: Enable tests on window size.
views: Set a default maximum window size.
Bump v0.15.5.
docs: Move security info from browser-window to web-security.
docs: Add document on overriding X-Frame-Options.
Filter out x-frame-options header on user's request.
Add custom ResourceDispatcherHostDelegate.
Update brightray for devtools experiments.
Enable devtools experiments.
mac: Override system's default on resizing window no larger than screen.
Add spec for resizing window larger than screen.
Store window icon as ImageSkia.
Restructure headers of native_window.
docs: Update prerequisities in Windows build instructions.
Update with new ScopedPersistent interface.
Make ScopedPersistent's interface consistent with V8.
Use the function converter from native_mate.
Add callback converter.
Use pump to generate source files.
linux: Start xvfb in CI.
linux: Don't set CXX to clang when building node modules.
linux: Do "apt-get update" in CI.
linux: Install all necessary deps on CI.
Make script quit when error happens in child processes.
linux: Install libgnome-keyring-dev on travis CI.
Set compiler to gcc.
Use travis-ci's multi-os feature.
Don't run tests.
Update brightray.
win: Don't call pylint in CI.
win: Use absolute path for ATL.
win: Build with downloaded ATL instead of the ATL shipped by WDK.
views: Only toggle menu bar when auto-hide-menu-bar is turned on.
win: Download ATL binaries.
Open output file in binary mode in download()
mac: Close devtools when web contents is destroyed.
Make node version switching faster.
Add lint scripts.
Upgrade to apm@0.89.0
Build only Debug version.
No need of project_id in appveyor.yml.
Bump v0.15.4.
Don't set interval too short.
menu_bar_show_ => menu_bar_visible_
views: Focus on web view when window is focused.
views: Toggle the menu bar only when a single Alt is released.
views: Show menu when "Alt" is up.
views: Add some asserts and comments.
Also fix setInterval for #481.
views: Hide menu bar when web view is clicked.
views: Switching to other window should hide the menubar.
views: Add support for auto-hide menubar.
Update brightray for devtools focus fix.
Focus on devtools when it is opened on Mac.
Force updating timeout when setTimeout is called, fixes #481.
Add spec for #481.
Bump v0.15.3.
linux: Only use global menu bar under Unity.
Create .version after all files have been downloaded.
win: Implement the filters option.
docs: Document the filters option.
gtk: Implement the filters option.
mac: Implement the filters option.
Add "filters" parameter for file dialogs.
Add support for multiple DPI images, fixes #541.
docs: Remove the outdated 32bit note in linux build instructions.
win: Make BrowserWindow.setResizable change window frame dynamically.
Add troubleshooting information for #500
win: Disable the LegacyRenderWidgetHostHWND, fixes #506.
linux: Draw menubar text and background with native theme, fixes #540.
docs: Sort modules in alphabet sequence.
Make Accelerator a standalone JS type.
Don't create junk file when posting crash report.
Bump v0.15.2.
Use the global_shortcut_listener_x11 from chrome36.
Run user's main script before everything is initialized, fixes #543.
Upgrade brightray, fix #498.
Destroy web contents when window is closed.
:memo: Update global-shortcut API document.
Restructure the update.py.
make pylint happy
fix indent
only default to 64 bit build on darwin and 64bit linux
Update GlobalShortcut API design.
Bump v0.15.1.
mac: No need to set wantsLayer, it is already done in brightray.
mac: Emit focus/blur events after page has actually focus/blur-ed.
Don't mess up with browser process's execArgv, fixes #492.
Add spec for #492.
Add docs on content-tracing module.
Add options defines.
Add content-tracing module.
Ship VS2012 redist DLLs.
linux: Only use global application menubar on unity.
fix node to build with target_arch=x64 on linux
mac: Guard against closed window, fixes #536.
:memo: Shortcut API document.
Emit failed message when fail to register shortcut.
linux: Implement global keyboard shortcut API.
win: Implement global keyboard shortcut API.
mac: Implement global keyboard shortcut API.
Update brightray, fixes #498.
Add remote debugging support.
Vendor Microsoft C/C++ dlls
Upgrade apm to 0.84.
Bump v0.15.0.
win: No more need to convert to DIP point for context menu.
views: No need to destroy Widget, CloseNow already closed native window.
Update brightray to fix webrtc warning.
Make sure window is closed before WebContents is destroyed.
Always enable harmony when node binding is on.
Make sure javascript environment is initialized after ProxyResolverV8.
Update to new Chromium APIs.
Upgrade to Chrome 36.
Implement BrowserClient::GetDefaultDownloadDirectory().
Initialize ProxyResolverV8 at very early phrase.
Ignore warning 4189 on Windows.
mac: Remove usages of WebContentsView.
Update libchromiumcontent to fix gfx::display link errors.
DispatchBeforeUnload is now a method of WebContents.
Update libchromiumcontent to include mojo headers.
web_contents_view.h has been hidden from user.
Implement GetGuestManagerDelegate.
Interface of ProxyResolverV8 has changed.
No more need to init aura::Env.
Refactor notification presenter for new desktop notification interface.
Prototype of WebContentsDestroyed has changed.
Upgrade libchromiumcontent to chrome36.
Bump v0.14.3.
views: Return restored bounds when window is minimized, fixes #473.
Add BrowserWindow.isMaximized API.
win: Don't crash on invalid parameter error.
:memo: Mention code signing is required for updates
Bump v0.14.2.
win: Use system's menu bar color.
win: Make menu bar height 20.
Skip the net.connect test on Windows.
views: Filter out the "&" in window menu.
Update node, fixes #511.
Add spec for #511.
mac: Make cmd+~ work for devtools window, fixes #508.
Pass node version when calling upload-checksums.
Bump v0.14.1.
linux: Use native frame for message box.
linux: Remove custom frame code.
linux: Implement min/max size of window.
linux: Use native window frame.
mac: Add BrowserWindow.isDoucumentEdited API, fixes #459.
mac: Add BrowserWindow.getRepresentedFilename API, fixes #460.
Bump v0.14.0.
win: Remove dead browser window code.
win: Implement SetSkipTaskbar.
:lipstick:
add missing comma
Ironed out some spelling and grammar issues.
views: Don't retain MenuRunner on heap.
views: Add menu should not change window size.
Add script to upload checksums of node headers, fixes #457.
Enable converting ScopedPersistent.
win: Remove dead menu code.
Update native_mate.
Reset handle in weak callback.
views: Implement the window menu bar.
views: Add an empty menu bar.
linux: Share code on frameless window with Windows.
Only ship high DPI paks on Window.
win: Min/max size uses scaled DPI size.
win: Implement frameless window.
Include high DPI resource paks.
Print stack traces when starting app failed in addition to a dialog
views: Use DesktopNativeWidgetAura for menu view.
Refactor the AddPakPaths to make it possible to set pak's scale factor.
win: Improve window frames.
win: Setup font.
Always shows window frame except for maximized window on Unity.
win: Use native frame for browser windows.
Note for OS X, regarding sheets.
Remove GetNativeView() when compiled with views toolkit.
linux: Remove dead code on accessing window tree host.
Warn about using GetNativeView() in views.
Remove duplicate library.
Separate the message parsing into a new function.
No need for custom dealloc.
Use shortcut way to create scoped_ptr.
win: Enable high dpi support.
win: Update libchromiumcontent to fix shared workers.
win: screen module is now browser only.
Upgrade libchromiumcontent to fix chromiumviews.
Time goes on
Upgrade apm to v0.76.x.
linux: Avoid using unsigned long directly.
linux: No need to remember root item in menubar.
linux: Add support for unity global menubar.
linux: Remove all the X and GTK+ related implementations.
linux: Implement context menu with views.
linux: screen module can not be used in renderer.
Upgrade libchromiumcontent to 4b4bcec11a02d1c7981562cf0b8a4670c338992b.
Only init WMState on Linux.
Ignore C4819 warning in VS.
Enable accelerated composition in frameless window.
Update libchromiumcontent to fix web workers.
Avoid duplicate code in main delegate.
Give user a chance to override child process and framework path.
Add specs for web workers.
Allow access FileSystem api in devtools.
Send message ack to devtools.
views: Follow WidgetDelegateView's convention on deleting self.
Upgrade libchromiumcontent to 2f1b641fca996546b9797c359ec05ac8aeade1ba.
Remove Windows's devtools implementation.
Add new devtools messages in Chrome 35.
views: Don't leak ViewsDelegate.
views: Remember bounds of devtools window.
views: Implement undocked devtools.
views: Initial docked devtools implementation.
views: Use chromium's custom frame view.
Initialize aura environment.
Allow override BrowserMainParts::InitProxyResolverV8.
Initialize screen for aura.
Add ViewsDelegate, required when using views::Widget on aura.
Ignore *_views files on mac.
Link with chromiumviews on Linux and Windows.
Initialize Linux UI.
Make BrowserMainParts's overrides available on all platforms.
Define TOOLKIT_VIEWS for Linux.
Remove devtools view on Linux.
Aura has replaced GTK+ in Linux.
No need to remember dock state.
mac: Make focus back to browser window when devtools is closed.
Place DevTools WebContents underneath inspected WebContents.
mac: Revert to simplest undocked-only devtools.
views: Implement focus and blur event.
More coding style fixes
Make sure our copy of gyp is used
Update DevToolsWindow to use views and aura
Really fix unused-variable warnings
Silence unused variable warning on Windows
Set up a native screen on Windows
Link against chromiumviews
Pull in generated headers from libchromiumcontent
Update libchromiumcontent for better Chrome 35 support
views: Use UnhandledKeyboardEventHandler to handle accelerators.
views: Make resizable frameless window work.
views: Implment skip-taskbar option.
views: Make frameless window work.
views: Use our own CustomFrameView implementation.
views: Be correct on widget's life time.
views: Make acceleratros work.
views: Currently set window's frames.
Use views to implement NativeWindow and MessageBox on Linux.
Upgrade libchromiumcontent to 93f4be4bc30f98a445e4db2a2759057f0f01de01.
Add rules for _views and _aura file names.
Initial work for Aura on Linux.
Use new devtools structure in brightray.
Upgrade runas and pathwatcher in specs.
Move item to trash without confirming on Windows
specify mode for windows
inital config setup for x86
Update browser-window.md
Update screen.md
Add notice for ##Run your app
Update node version to 0.13.0.
Make the node environment constrained in browser_main_parts.
icudlt.dat should be in framework's resources after previous fix.
The icudtl.dat is also needed by helper app.
Upgrade libchromiumcontent to e6aebd2156034b12e869d8905b22c088b2dc42ea.
Use new context aware module API in builtin modules.
Force all builtin modules to be referenced.
Move all chromium's code under chromium_src.
gtk: Import chromium's ActiveWindowWatcherX.
gtk: Use libgtk2ui from chrome.
Adapt to API changes of Chromium and node.
Some more APIs fixes.
Bring back ScopedPersistent.SetWeak.
There is no more node_isolate.
Rename string16 to base::string16.
Add APIs to match new V8 APIs.
Upgrade to new V8 APIs.
Update node to 0.11.13.
Upgrade brightray to chrome35 branch.
Add BrowserWindow::isMaximized.
Update for move of string conversion functions into base::
Ignore a couple more files on Windows
Update to use CR_* Windows message macros
Define USE_AURA for Windows
Use the MSBuild that comes with Visual Studio
Update for move of BuildUserAgentFromProduct in Chrome 35
Update cookie store code for Chrome 35
Update NetworkDelegate for Chrome 35
Update MediaStreamDevicesController for Chrome 35
Update MediaCaptureDevicesDispatcher for Chrome 35
Update for move of string symbols into base::
Update BrowserContext for Chrome 35
Add support for Chrome 35's "protocol interceptors"
Update prefs code for Chrome 35
Include Chrome's Skia config, not the default one
Update libchromiumcontent to Chrome 35
Update build instructions for VS2013.
Suppress new compiler warnings for VS2013.
gtk: Make AppIndicator.SetContextMenu async, fixes #430.
Remove native_window's dead code.
mac: Add app.dock.hide()/show() APIs, closes #422.
Bump v0.13.3.
:memo: Mention a new Windows build error.
Show chromium's version in user agent, fixes #428.
gtk: Make BrowserWindow::HasModalDialog work.
Markdown in website is rendered differently
:memo: Add the presentation link given on HuJS.
less removal of whitespace
brightray namespaced frameAutosaveName
- remember position and size of developer tools window
Wait for crash reporter spec longer.
:memo: Add docs on image support in atom-shell.
Support high dpi icon as window icon.
Dicard uses of base::Value in native_window.
Use mate::Dictionary instead of base::DictionaryValue for options.
Add .gitignore.
Strictly check for boolean type.
Mark Dictionary.Get as const.
Enable creating empty Dictionary directly.
Add converter for const char*.
Add object() accessor for Dictionary.
Recognize the "@2x" suffix of icon's filename.
mac: Convert from ImageSkia to NSImage to reserve DPI info.
The default_app should also set process.mainModule.
remote.require should use process.mainModule.require.
Set process.mainModule to user's app.
Add spec for checking process.mainModule.
Removed a typo
Bump v0.13.2.
Make escape to ui::VKEY_ESCAPE
Update example to wait for app.on('ready')
Update brightray to fix detached devtools.
Closing devtools window means it is not visible.
Do not disable detached devtools.
:memo: Document the 'zoom-factor' option.
Allow setting default zoom factor.
:memo: Document the web-view module.
Add zoom factor APIs alternative to zoom level.
Add web-view module.
:memo: Document the setSkipTaskbar API.
win: Implement setSkipTaskbar.
gtk: Add BrowserWindow.setSkipTaskbar API.
webContents.executeJavaScript should run code after page is loaded.
Do not assume trailing callback in dialog API, fixes #395.
Bump v0.13.1.
Support INSERT in accelerator, fixes #398.
Add document for browser-window's icon
mac: Make sure web view is the first responder of window, fixes #382.
win: Implement attached devtools, fixes #373.
:memo: Remove the dead link, fixes #390.
Add comments on the usage of attached devtools.
Enable undocked devtools.
Implement setting dock side.
Handle focus correctly.
Put devtools in split view.
ContainerView should manage itself.
Use views::View to represent web view.
Add 'third_party/skia/include/core' to include_dirs.
mac: Restore presentation options when leaving kiosk mode, fixes #272.
"did-finish-load" should only emit for main frame, fixes #385.
Bump v0.13.0.
Provide API to access selection clipboard, fixes #377.
Return unicode string in clipboard.readText(), fixes atom/atom#2145.
Contain arch in distribution name.
Upgrade libchromiumcontent to 765ec5dcf192845fed4aec0b117f1e53050911d6.
Upgrade to latest brightray.
Update to latest libchromiumcontent.
Upgrade libchromiumcontent to 64b6768f1d24318bd35b538658dacd429c544377.
win: Remove focus listener after window is closed, fixes #364.
Win: Implement context menu for tray icon.
win: Implement tray icon API.
Add StatusTrayStateChangerWindow from chrome.
:memo: Mention platform limitations on Linux.
gtk: Implement click event for status icon.
:memo: Document the tray module.
mac: Implement the "click" event of TrayIcon.
Add "click" event for TrayIcon.
gtk: Add app indicator support as tray icon.
gtk: Add TrayIcon implementation for GtkStatusIcon.
Bind TrayIcon to JS.
Add native_mate converters for ImageSkia.
mac: Simple implementation of tray icon.
Add dummy implementations for TrayIcon.
:memo: Menu.setApplicationMenu is not OS X only.
Add spec for application locale.
Generate .pak for each locale.
mac: Create .lproj files for each locale.
Initialize locale on mac.
Override application locale with system default locale.
Bump v0.12.7.
mac: Add APIs on setting icon in titlebar.
Do not init Menu lazily, otherwise empty menus would be invalid.
Move the ability of calling _init to native_mate.
Call object._init if we have one.
Bump v0.12.6.
:lipstick: Organize Menu and MenuItem's code.
win: Setting enabled/visiable should also update menu.
win: Update states when setting checked property.
win: Force menuWillShow to be called when setting window menu.
win: Update menu states when setting menu bar.
Quit when get uncaughtException in specs.
mac: Make sure menuWillShow is called when setting application menu.
Radio menu items should have at least one item checked.
Add specs for radio menu items.
Setting a radio menu item should flip other items in the group.
Generate menu group id automatically.
Make menu's checked property flipped automatically, fixes #349.
win: Implement focus and blur event.
Override app version and name when loading apps from default_app.
:memo: Add details on plugins support.
:memo: Mention atom-shell's changes to the process object.
:memo: Document the 'web-preferences' option.
Add 'extra-plugin-dirs' option.
Add 'web-preferences' options in BrowserWindow.
Add information about the crash-reporter payload
:memo: Add docs on BrowserWindow.id.
Add "id" property for BrowserWindow, fixes #218.
Make the default_app unresizable.
mac: Include more information in Info.plist, fixes #340.
Add a `focus` event to BrowserWindow
Rename process.__atom_type to process.type.
:memo: frameworks => external_binaries.
:memo: Remove unneeded install dependency on Ubuntu.
win: Make sure shell.showItemInFolder in called on browser side.
Make sure webContents is created when opening devtools.
Bump v0.12.5.
Skip the webgl spec on Linux.
Only build Debug target in cibuild.
Check for version when downloading external binaries.
Rename "frameworks" to "external_binaries".
Ship WebGL necessary files in distribution.
Update libchromiumcontent for libEGL.dll.
Download dirextx sdk dlls.
Add spec for checking webgl support.
:memo: Document content size related APIs.
win: Implement setContentSize API.
win: Setting menu shouldn't change client area size.
win: Convert content size to window size.
Update to latest brightray.
:memo: Add usage of VS console in troubleshooting, regarding #306.
Update to latest gyp.
Updated example of implementing a protocol.
10.8+, preexisting node required.
Upgrade to pathwatcher@1.3.1
Replaced restart with reload
Add spec on content size.
Add BrowserWindow::setContentSize.
gtk: Respect use-content-size when creating window.
Get BrowserWindow::getContentSize API.
Use content size in default_app.
mac: Respect use-content-size when creating window.
Add use-content-size switch.
:memo: VS2010 SP1 is required, fixes #306.
:memo: More instructions on installing under Ubuntu, closes #315.
add community docs
Add BrowserWindow.setMenu(menu)
Add BrowserWindow.restart()
Use system's setting for font renderering, fixes #301.
Only report "app invalid" error when app could not be loaded, fixes #294.
Upgrade node: Enable ArrayBufferAllocator, fix #308.
Add spec for #308.
The source_root was wrong computed
Add missing graphics switching attribute.
Ship with libnotify.so.
Do not copy system libraries with permission bits.
Only open url in browser for GET request, fixes #299.
Bump v0.12.4.
gtk: Show the menu after it has been added to window, fixes #292.
Doc: grammar/content fixes in the remote module
Doc: grammatical fixes in Windows build docs
Doc: Grammatical fixes to synopsys.md
linux: Ship system dynamic libraries, closes #278.
Bring the close timeout back to 5s.
Do not send "unresponsive" when window is closed.
Only cancel unresponsive event when window close is cancelled.
Do not override pending unresponsive counter.
Print the script running in cibuild.
Assume users are using Xcode 5.1.
Do not receive notifications after window is closed, fixes #265.
doc atom-shell-vs-node-webkit: typo
Do not rely on external server in spec.
Correct WebContents send example.
Update "app" to "your-app" to avoid module collision with require('app')
Make timeout longer for some could-be-slow specs.
bump apm to 0.50.x
Bump v0.12.3.
Capitilization, grammar, and punctuation changes
:memo: Say more on sending messages from browser to web page.
minor spelling fix and grammar
Make sure the job factory is created when initializing protocol module.
linux: Be quiet when uploading crash report.
Update README.md
Update atom-shell-vs-node-webkit.md
missing adjective =)
Quick-start.md: Emphasis on important concepts of atom-shell
Update quick-start.md: Minor wording changes
Enable WebGL
:lipstick: Remove redundant empty line.
:memo: Add technical differences to node-webkit, fixes #242.
Squirrel.Mac is open sourced.
:memo: Add missing space
Add Travis badge
Listen on 0 to get random port
Add initial Travis config
Update readme
Use tabs instead of spaces
Bump v0.12.2.
Better window height for default_app.
Also report when user provided strange files.
Disable elastic scrolling.
Linkify the docs in default_app.
Use dialog to report invalid app.
Enable dragging to open an app.
Add some styles.
Show a friendly guide when atom-shell is opened without app.
:memo: Add Synopsis chapter.
:memo: Simpilify the structure of API references.
:memo: Add Squirrel's server settings in auto-updater doc.
:memo: Mention 64/32 bit support on each platform.
Bump v0.12.1.
:memo: A simpler README.
Switch to use MIT license.
:memo: Update source code structure.
:memo: Separate the application distribution chapter out.
:memo: Update the quick start on writing the app.
:memo: Simpler introduction in quick start.
:memo: Say some more about native node modules.
Restructure the docs to put more tutorials.
Deprecate the BrowserWindow.restart.
Move "restart()" API to webContents.
Bump v0.12.0.
Discard usage of deprecated APIs.
Do not put modules used by specs on the root.
:memo: Add troubleshooting in windows build instructions.
Use 0.0.2 release.
Upgrade to apm@0.44.x
Use atom/atom-shell-frameworks until atom/atom-shell is public
Move framework downloads to github release
No need to install npm any more, the one in CI is new enough.
Install apm from npm, fixes #236.
Bump the close timeout to 10s.
:memo: Update docs of ipc module.
:memo: Add docs on WebContents.
Avoid using processId and routingId directly.
Separate the webContents code in a new file.
Handle IPC messages in webContents instead of BrowserWindow.
Make send and loadUrl also supported methods of BrowserWindow.
Add send for webContents.
Move navigator related APIs to webContents.
Move loading events to webContents.
Add destroyed event for webContents.
Move webContents events away from window.
Be safe on lifetime of webContents.
Get webContents on request.
Add getter for devToolsWebContents.
Add executeJavaScript method for webContents.
Move some APIs from Window to WebContents.
Initial empty api_web_contents.
mac: Avoid sending "blur" event when closing window.
spec: Should destroy window even when spec failed.
spec: Use random port when creating http server.
Enable passing null to dialog API.
Avoid passing closures to browser when showing dialog.
Only call getDevTools for windows that have devtools.
gtk: Free resources when closing window.
Update native_mate for fixing crash in GC.
No need to reset wrapper_ when we would run destructor.
Remove redundant call to NotifyWindowClosed.
Update brightray to fix crash from BRYInspectableWebContentsView.
Remove from notification center when web contents is destroyed.
Make sure window object is destryed.
Should send "closed" event when native window is closed.
Do not free memory used by native window immediately.
Remove window from observers when it's closed instead of deleted.
Use closed event instead of destroyed event.
Free memory when native window is closed.
Discard all our custom V8 helpers, use native-mate instead.
Do not wrap an object when it's already wrapped.
Add Arguments.Length method.
Simplify atom_browser_bindings.
Simplify atom_bindings.
Remove use of native_type_conversions.h when possible.
Simplify menu api.
Simplify protocol api.
Use BrowserV8Locker when possible.
Use the new function converter in dialog api.
Enable converting v8::Function to base::Callback.
Make ScopedPersistent do type conversion.
Simpilfy auto_updater api.
Use native_mate based Event in browser_ipc.
Simplify app api.
Simplify power_monitor api.
Add native_mate implemented Event and EventEmitter.
Simplify browser_ipc api.
Put converters under atom/common/native_mate_converters.
Use base::File::StringType.
Use Dictionary to set module.exports.
Add v8::Handle<v8::String> to converter.
Use native_mate to simplify dialog api.
Enable setting method in Dictionary.
Enable converting void*.
Support function with 7 parameters.
Remove helper typedefs.
Use native_mate to simplify renderer_ipc api.
Use the new Constructor API.
Simplify Wrappable API.
Constructor should wrap the this pointer.
Cleanup.
Use native_mate to simplify id_weak_map api.
Make the Constructor accept arbitrary callback.
Remove unneeded include.
Use native_mate to simplify screen api.
Use native_mate to simplify crash_reporter api.
Use native_mate to simplify clipboard api.
Use native_mate to simplify shell API.
Add initial Constructor type.
Enable modifying existing ObjectTemplate.
Add native_mate as dependency.
Do not rely on latest base/template_util.
Initial commit.
mac: Move OS X only files to atom/browser/mac.
Bump v0.11.10.
Do not use new clang flags.
mac: Always cancel application termination.
Bump v0.11.9.
mac: Avoid managing NSWindow by hand.
Remove unneeded accessor.
mac: InspectableWebContents should be destroyed before release NSWindow.
Bump v0.11.8.
Shutdown gracefully, fixes #227.
Deprecate app.terminate API.
Bump v0.11.7.
Detect unresponsive window when quitting.
:memo: Add docs for executeJavaScriptInDevTools.
Add API to execute javascript in devtools.
gtk: Connect to window-state-event, fixes #226.
Bump v0.11.6.
mac: Do not destroy window immediately.
:lipstick: Remove unsed constant.
Increase the closing time limit to 5s.
gtk: Handle accelerators after renderer handled them.
gtk: Do not access clipboard in renderer process.
Don't build symbols in CI.
Use dialog API to override file chooser dialog in web inspector.
Enable writing files in devtools.
Enable delegate to override SaveToFile and AppendToFile.
Correctly translate WebInspector menu to native menu.
Make remote.getCurrentWindow work for devtools.
Enable getting a window according to its attached devtools.
Allow sending ipc messages to devtools.
Synchronous event should be bound to WebContents.
Override web inspector's context menu.
Enable intercepting devtools window.
Bump v0.11.5.
Make sure tags are pushed.
Add /vendor/npm to gitignore.
gtk: Consider window frame in SetSize.
gtk: Do some guess of window border size according to window manager.
:lipstick:
Make bootstrap script silent.
Use lastes npm in CI.
Upgrade to apm@0.37.0
gtk: Force size allocation in window, fixes #219.
gtk: Detect rare conditions when resizing.
gtk: Should remove self from watcher list in destructor.
gtk: Do not count menubar in work area size on Unity.
Bump v0.11.4.
Free window object immediately in destory().
Increase unresponsive time to 2s when closing.
Bump v0.11.3.
Delay the unresponsive event shortly.
BrowserWindow.destroy() should not delete window immediately.
mac: Do not allow nested task when showing menu.
Bump v0.11.2.
gtk: Ask whether window is active from WM.
Close devtools completely instead of hiding it.
Provide a way to close devtools completely.
Update node: Build .dSYM for node modules, fixes #207.
Bump v0.11.1.
linux: Include content_shell.pak in distribution.
Bump v0.11.0.
Should set low version field to 0 in bump-version.
Order header files.
:lipstick: Update bootstrap script.
:memo: Update docs for new source code structure.
Add LICENSE in chrome/.
Bring back build/include_order cpplint.
Bring back build/header_guard cpplint.
Move atom/browser/ui/gtk to chrome/.
Move all sources under atom/.
Remove unneeded include dir.
:memo: Add 'accept-first-mouse' to docs.
Add 'accept-first-mouse' in window's option.
Upgrade libchromiumcontent: Add support for acceptsFirstMouse.
Remove hack for using foundation_util.h.
Separate common accelerator utils out.
gtk: Make menubar accelerator work.
gtk: Enabling setting menubar for window.
gtk: Enable creating menu bar.
gtk: Implement popup menu.
gtk: Add menu_gtk from Chromium.
gtk: Add event_utils from Chromium.
:memo: Revise the build instructions on Linux.
:memo: Revise the dialog API docs.
gtk: Implement synchronous open dialog.
gtk: Add file open dialog.
gtk: Enable create folder in dialog.
gtk: Filename returned by GTK+ should be freed.
gtk: Confirm file overwrite.
gtk: Implement synchronous save dialog.
gtk: Set default path.
gtk: File dialog should be modal window.
gtk: Initial implementation of save dialog.
gtk: Make synchronous message box work.
gtk: Be aware of "Cancel" button in message box.
gtk: Make the message box asynchronous.
gtk: Left align message box text.
gtk: Add gtk_util from Chromium.
gtk: Initial implementation of message box.
Bump v0.10.7.
linux: Generate symbols from the symbol file.
Remove vendor/apm/node_modules in cibuild.
Update libchromiumcontent for iframe sandbox.
:lipstick: Remove console output.
Update specs with new sandbox setting.
:memo: Mention that iframe is sandboxed by default.
Bump v0.10.6.
Disable acclerated composition in frameless window.
Append command line for renderer in NativeWindow.
Bring back accelerated composition.
Temporary fix for flashing devtools.
Enable delegate to change the dock side.
Add InspectableWebContentsDelegate.
Bump v0.10.5.
Do not rely on thread to implement modal dialog.
Add 'activate-with-no-open-windows' event for app.
Add spec for sanbox attribute of iframe.
:memo: Notice on `sandbox` attribute.
:memo: Mention the change of default security of node integration.
Enable web security.
Use except-iframe security by default.
Disable the detachment of devtools.
Correctly free devtools window.
Make devtools API aware of devtools window.
Store the devtools window in weak pointer.
Make DevToolsDelegate respond to messages.
Use InspectableWebContentsDelegate.
Take control if devtools is undocked.
Make the DebugDevTools API more generic.
Disable the undocked devtools.
Update to latest apm.
win: Disable pylint in cibuildbuild.
Update libchromiumcontent: Contain linux symbols.
Make sure we dump symbols before stripping binary.
Make sure symbol is dumped from unstripped binary.
linux: Add strip binary action.
Build with -g on Linux.
Move the generate_breakpad_symbols to tools/posix.
linux: Dump symbols in create-dist.py.
Bump v0.10.4.
Update libchromiumcontent: Suppress CFAllocator warning.
Explicitly disable prompt().
Implement the confirm().
Use the dialog API to implement alert().
Separate overrides from init script.
Make the default alert() do nothing.
Rename no-publish-release to publish-release.
Do not publish release by default.
Remove unused -s option of bootstrap.
Bump v0.10.3.
Bump v0.10.2.
Do not dectect unresponsive eagerly when quitting.
Only print when got error for some commands.
Do not use "/" explicitly in cpplint.
linux: Remove global variables in crash reporter.
linux: No need of |ptype| parameter.
Only start crash service on Windows.
linux: Set upload parameters of crash reporter.
:lipstick: Remove dead code.
linux: Implement crash reporter.
linux: Suppress compiler warnings of breakpad.
linux: Add the missing lss dependency.
linux: Link with breakpad_client.
Bump v0.10.1.
Disable in process stack dumping on Windows.
Do not define _DEBUG.
Update libchromiumcontent to 1df8e7cdac8aa74c91c19ae0691ce512d560ab3e.
Bump v0.10.0.
The DevTools window should manage lifetime itself.
Add the debugDevTools JS API.
Separate devtools code out.
Disable stack dumping on MAC.
Setup devtools frontend.
Setup devtools client for the correct contents.
Add DebugDevTools API.
Disable node integration in devtools.
linux: Make native modules work.
Update apm: fix node arch on Linux.
gtk: Should init gdk when using screen module.
gtk: Window.focus should not change visibility.
linux: Implement libuv message loop polling.
Only append arguments for browser process.
:memo: List libraries required for Linux.
:memo: Update docs on using native modules.
:memo: Add docs on building for Linux.
Update libchromiumcontent to use the thin version.
Update runas to 0.5.*
Menu::attachToWindow is available on Linux.
BrowserWindow::setMenu is available on Linux.
Build with symbols on debug build.
Enable convient stack printing.
linux: Make test.py work.
linux: Make binary search for libraries under current directory.
linux: Add dummy implementation of node bindings.
gtk: Add dummy implementation of dialog.
gtk: Add utils imported from chrome.
gtk: Add dummy implementation of Menu.
Bump v0.9.3.
Override default window.close, fixes #70.
Do not print download progress in CI.
:lipstick:
Enable the quitAndInstall to be cancelled by beforeunload handler.
Close all windows before installing update.
Bump v0.9.2.
win: Use util.format to format arguments in console.log.
Use keydown event for accelerator.
The translate-crash-log-addresses script is abandonded.
Bump v0.9.1.
Parse the 4th argument into a date.
Increase the open file limit on OS X to 1024
Bump v0.9.0.
:memo: Add docs on new auto updater API.
Handle all download events from AutoUpdater::CheckForUpdates
Remove version string from feed url
Handle all download events in completed block.
Emit 'update-available' and 'checking-for-update' events.
Include the version with the update request
Still subscribe to "updates" for update notifications.
Subscribe to checkForUpdatesCommand's return value.
No need to add "static" for functions in anonymouse namespace.
Move resources file under resources/
Add Info.plist for Atom Framework, fixes #171.
Add docs on the node-integration setting.
Put common constants into one file.
Specify the commit of libchromiumcontent to download.
Do not use plain string iterals.
Rename iframe-security to node-integration.
Add iframe-security support.
Destroy ResourceContext on the IO thread
Enable passing --commit to download script.
Update libchromiumcontent for --commit argument of download script.
Append --iframe-security to renderer process.
Don't pollute process.argv of browser process.
Don't append duplicate arguments to renderer process.
Sort devDependencies.
Make bump-version accept major/minor/patch/build.
Bump v0.8.7.
Wrap callbacks with v8::Locker.
Remove unneeded HandleScopes.
Use node_isolate instead of Isolate::GetCurrent().
Should decode when setting __filename from location.
It's safe to send message to nil.
Add error and update-not-available events for auto updater.
Implement auto_updater with Squirrel.
I don't think `fix_framework_link_command` is needed anymore.
Link Sparkle frameworks
Download Squirrel frameworks instead of Sparkle
Remove references to Sparkle
:lipstick:
Activate uv loop when uv loop's watcher queue changes, fixes #159.
Update to latest apm.
:memo: Update docs on source code structure.
move atom_menu_controller_mac to browser/ui/cocoa.
Move atom_event_processing_window to browser/ui/cocoa.
Move nsalert_synchronous_sheet_mac to browser/ui/cocoa.
gtk: Support frameless window.
:memo: Add docs on window events.
Implement "blur" window event.
gtk: Set WebKit's style from current theme.
gtk: Implement basic native window methods.
Add dummy implementation of crash reporter.
Bump v0.8.6.
Crash when there is fatal error in V8.
Bump v0.8.5.
:lipstip: Remove unneed output.
Restart renderer process for all navigations and reloads, fixes #157.
Bump v0.8.4.
Update node-pathwatcher to v0.14.0.
Also use uv loop fixes in browser process.
Activate uv loop when calling childProcess.fork.
Update apm: update node version to v0.11.10.
Bump node version to v0.11.10.
Update node to v0.11.10.
Make sure nextTick is called when activating uv loop.
:lipstick: get_uv_env() => uv_env().
Add spec for q.
Leak the node environment when unloading.
Monitor file events in pathwatcher spec.
Store all created environments in renderer.
Wrap uv loop with web page context in renderer.
Add spec for using setTimeout in pure uv callback.
Add process.scheduleCallback.
Add spec for pathwatcher module.
Bump v0.8.3.
:memo: Add docs on screen module.
Support converting v8 value to arbitrary vector or map.
Add screen.getPrimaryDisplay() API.
Add support to convert gfx::Rect and gfx::Size to v8 value.
Add initial screen module.
Add support to convert gfx::Point to v8 value.
:lipstick:
api::EventEmitter could also be used by renderer.
Update apm.
Bump v0.8.2.
Set module's filename to path of html.
Still support 'atom-delegate' API for old apps.
mac: Should set default size when creating window.
linux: Implemnt browser methods.
linux: Add empty implementation of auto updater.
gtk: Implement accelerator_util.
Update brightray.
'-std=gnu++11' is also needed by g++.
linux: Implement platform_util.
linux: Implement brightray's stub functions.
Disable compilation errors in node under Linux.
Build with clang under Linux.
Update brightray for linux_clang flag.
Add flag to disable clang under Linux.
Update apm.
Compile coffee script on Linux.
Flip the y axis in CapturePage API, fixes #148.
Add notes about remote buffer in capturePage API's docs.
Add notes on remote buffer.
Revise the docs of remote module.
Bump v0.8.1.
We are now on v0.8.0 release.
Add spec for window.open.
Add basic support for window.open's features.
Implement a simple window.open with pure js.
Do not implement window.open.
Build for x64 architecture on OS X, fixes #132.
Bump v0.8.0.
Rename 'finish-launching' event to 'ready',
Get rid of the ugly ATOM_BROWSER_INTERNAL_NEW message.
Use the gyp vendored by brightray.
Use our fork of V8ValueConverter for all cases.
Free the node environment when releasing context.
Move node integration from RenderViewObserver to RendererClient.
Print pid when logging.
Update node: Removed two unused patches.
Enable high DPI support.
brevity and style
undo some ugly line wrapping
allow 100-character lines
keep cpplint happy, mostly about line length
Update to latest libchromiumcontent
authorship
comments and cleanup
call PostClose when notification closed by click
free notifications properly
use libnotify to pop up notifications on Linux
Remove the unzip spec completely.
Discard the require('atom-delegate') API.
Continue fixing compilation erros on Windows.
Make all the windows code compile for Chrome 31.
Also search C:/Program Files (x86) for node binary.
Use node-runas for testing native modules.
Add deps/npm and deps/mdb_v8 in node headers.
Update brightray: Remove webkit hacks.
Clean out node_modules in cibuild.
Bump node version to v0.11.9.
Include Environment declarations in node_common.h.
Update apm for node version and architecture change.
Use singular form of spec names.
Remove the on_watcher_queue_updated hack.
Make setImmediate have the same side effect with upstream node.
Supress the unzip module spec.
Disable use of deprecated functions in specs.
Redirect window.onerror to uncaughtException.
Add setImmediate function in renderer.
Suppress the EventEmitter's warning for ObjectsRegistry.
Set __filename to the html file in renderer.
Set the proxy service a bit earlier to avoid crash.
Use node's Environment feature to add "require" in renderer.
Disable accelerated compositing to fix everything.
Remove the unused dividerHidden property of GraySplitView.
Update node for renderer node integration fixes.
Do not depend on node to set include_dirs.
Update brightray, which contains all our patches in master.
We are now at v0.8.0-pre.
The 'ARCHS' key should be an array.
Huge commit to use new V8 and Content APIs.
Rename IsDevToolsOpened to IsDevToolsViewShowing.
:lipstick: There should be no space between & and type name.
node::ObjectWrap how had a handle() method.
base/string16.h was moved to base/strings/string16.h.
Update to node v0.11.9.
Update libchromiumcontent and brightray to use Chrome31.
Implement IsDevToolsOpened for Linux.
Add API to get whether the devtools is opened.
Bump v0.7.6.
Remove the RestartHangMonitorTimeout API, which is useless now.
Flatten spec files, make them seem cleaner.
Update node: Add fs.lstatSyncNoException, closes #138.
Report the right render view that is deleted.
Use random number as id in CallbacksRegistry.
:lipstick: Restore old settings in app specs.
Release render view's remote objects when it's deleted.
Get rid of manually converting to base::Value when possible.
Fail quietly when getting null renderer view.
Enable getting scoped_ptr type from v8 value.
Simplify V8 operations in renderer ipc code.
Use "ProxyResolverV8" instead of "SystemProxyResolver" as proxy service.
Update libchromiumcontent for net_with_v8.
Bump v0.7.5.
Add simple specs for app.getName() and app.getVersion().
:memo: Add usage of productName of package.json.
Choose a better name for the default_app.
Set application's name and version from the package.json.
Override the user agent to contain application and atom-shell's version.
:memo: Update documentation on changes of "app" module.
Use bundle's name as application name when we have one.
Simplify V8 operations.
Add API to get and override application name.
Add API to override browser version.
Enable overriding UA strings.
Add conversions between V8 Value and GURL.
:memo: Update repo link to atom/atom
Bump v0.7.4.
Make sure browserWindow.destroy() doesn't leave zombie processes.
win: Implement NativeWindowWin::HasModalDialog().
Do not send "unresponsive" message if window is showing a modal dialog.
Do not use flags to mark whether the window is unresponsive.
mac: Add API to return whether the window has attached sheet.
Create a BrowserClient by default
Update to 64-bit libchromiumcontent
Update for ui -> gfx moves in Chrome 31
Stop setting helper process names on OS X
Update for changes to content::CreatePersistentCookieStore in Chrome 31
Update for changes to net::FileProtocolHandler in Chrome 31
Update for changes to devtools in Chrome 31
Update libchromiumcontent to Chrome 31
Add "Cmd" and "Control" alias for "Command" and "Ctrl".
Bump v0.7.3.
Add "Edit" menu in specs window.
Use CommandOrControl to replace Command in specs windows.
Add "CommandOrControl" to represent "Command" on OS X and "Ctrl" on other platforms.
Prompt unresponsive state in spec window.
Send the "unresponsive" event if window is not closed in 500ms when closing it.
Bump v0.7.2.
win: Do not generate symbols for static libraries and strip .pdb in symbol name.
No need to ship atom.exe.pdb any more.
:lipstick: Wrong IP for default crash reporter server.
make BrowserContext::Initialize virtual
include library dependencies explicitly
Stop the devtools from turning black when the window gets big enough
Bump v0.7.1.
Also search libchromiumcontent download dir for dSYMs.
Bump v0.7.0.
win: Register msdia80.dll automatically when dumping symbols.
:lipstick: Add missing ""s.
win: Implement the atom_dump_symbols target.
Add script to generate symbols from pdbs on Windows.
Mention that pyobjc is needed for homebrew python.
Also clean up libchromiumcontent in cibuild.
Also upload product name, company name and version in crash report.
Remove the build directory beforing rebuilding in cibuild.
mac: Dump symbols from .dSYM when possible.
Also download libchromiumcontent symbols on Mac.
Download libchromiumcontent symbols when creating symbols.
mac: Use "Atom Framework.framework" instead of "Atom.framework".
mac: Store crash dumps under /tmp/ProductName Crashes/.
Use "Atom-Shell" instead of "atom-shell" for product names.
win: Set uploading parameters in crash reporter.
win: Make out-of-process crash dump work.
Start the crash service process on non-Mac.
:lipstick: Remove ununsed "display_name".
win: Setup crash service according to command line parameters.
win: Print crash service's log to file.
win: Start as crash service when ATOM_SHELL_INTERNAL_CRASH_SERVICE is set.
Add crash_service on Windows.
Bump v0.6.12.
Add spec for BrowserWindow.capturePage.
doc: Explain BrowserWindow.capturePage.
Enable ignoring |rect| when calling BrowserWindow.capturePage.
Add BrowserWindow.capturePage API.
Enable converting V8 value to gfx::Rect.
Return screenshot's data buffer instead of directly saving to file.
Add API to capture a page into file.
Bump v0.6.11.
doc: Mention that Command would not be meaningful on Windows.
Don't map command to ctrl
win: Initialize exception handler.
Cause a real crash instead of debugger break in process.crash().
win: Make console output work on cygwin.
Always use atom-shell as product name.
Update default crash report submission URL.
Do not append "Renderer" in product name when uploading.
Add spec for custom uploading parameters.
Enable customing upload parameters for sending crash report.
Enable converting v8 object to dict type.
Always use atom-shell's verion when uploading crash report.
Also upload symbols to GitHub Release.
back to reinterpret_cast
safer casts, clearer if-else chain
Create symbols zip file when creating distribution.
Make ignoring files work on Windows
Silence warnings about ui::WindowImpl's BOOL& parameters
Ignore cpplint errors in bry_inspectable_web_contents_view_private.h
Ignore .mm files for cpplint
Turn off build/include_what_you_use
Build before running cpplint
Don't require all files to have a copyright/license header
Run cpplint as part of our CI build
current libchromiumcontent
current libchromiumcontent
current libchromiumcontent
give member variables trailing _
don't force all applications to link libencryptor.a
implement dev tools
mac: Add target to dump breakpad symbols.
Enable starting crash-reporter without parameters.
Check the upload parameters in crash-reporter spec.
Add spec for crash-reporter
Add extra uploading parameters for crash reporter.
current libchromiumcontent
current libchromiumcontent
win: Add stubs for crash reporter.
doc: Update new crash-reporter API.
Refactor crash reporter to be more cross-platform friendly.
current libchromiumcontent
current libchromiumcontent
No more downloading QuincyKit.
Add API to set product name for crash reporter.
Add "Renderer" suffix in name when crashing in renderer process.
Mention in doc that crash-reporter is available for renderer.
Make the crash reporter available for both browser and renderer.
mac: Tune parameters of breakpad.
Setup breakpad in crash reporter.
mac: Copy necessary breakpad binaries to package.
No more use of QuincyKit.
use linux branch of libchromiumcontent
link libencryptor
don't build Linux sources on other platforms
use merged master of libchromiumcontent
move gtk dependency to brightray
Update to latest gyp and depot_tools.
mac: Get rid of all the third party warnings.
Add breakpad as build dependency.
Add breakpad.
pick up chrome_sandbox changes
use linux branch of libchromiumcontent
Bump v0.6.10.
win: Enable setting window icon in creation options.
move -fno-rtti into brightray.gypi target_defaults
Update brightray for fixing the 'ARCHS' issue.
Do not set sdk_root, it's already set by brightray.
implement GetNativeView
fix typo
WIP: builds (but displys nothing) on Linux
Bump v0.6.9.
:lipstick: fix typo.
Add x permission for bump-version.py.
Add tag and commit after version is bumped.
Update Info.plist when bumping version.
Also update atom_version.h and atom.rc in bump-version.py.
Conver atom.rc from unicode file to ASCII file.
Add tool to help bump version.
win: Use exe's icon as window icon, fixed #123.
win: Add an icon.
Write correct version in .rc file.
Bump v0.6.8.
Add a corresponding .h file for atom_main.cc.
Get the status of devtools from brightray, fixed #27.
Make cpplint pass headers test without setting "NOLINT".
This method seems to work, :shipit:
First hack at fixing console IO
Bump v0.6.7.
Mention required options of WDK and Win7 SDK, fixed #114.
Bump v0.6.6.
Expose libuv's symbols.
Make atom-shell compile-able with VS 2010 Express.
Add more details on building with VS 2010 Express.
Bump v0.6.5.
win: Ship the pdb file, fixes #112.
Do "compress" the archive when creating zip.
Update to latest apm.
Bump v0.6.4.
Allow single-character accelerators.
Bump v0.6.3.
Should not touch process.argv when starting the default_app.
Do not use sscanf.
Allow "Space" in accelerator.
Allow "F1" - "F24" in accelerator.
Get rid of the NormalizeShortcutSuggestion function.
Allow more special keys in the accelerator.
Slightly optimize accelerator token comparing.
Be case-insensible of accelerators.
Map all single symbols in the keyboard to accelerators.
Bump v0.6.2.
mac: Enable to set the 'Help' menu, fixes #109.
Specify the version instead of using "*" for dependencies in package.json.
Use stream-uploading to upload the asset to GitHub.
Bump v0.6.1.
Unescape the script path before passing it to cefode.js, fixed #108.
Cleanup unused headers, data members and functions.
Setup devtools in the correct phase.
Use the "chrome-devtools://" scheme to open devtools.
Work around http://crbug.com/279472 for devtools views
Do not multipart-encode the uploaded file.
Check the build version of Release build in upload script.
Bump v0.6.0.
Enable more common ASCII tokens to be used in accelerator, fixes #107.
Add 'Quit' to spec window's menu.
Update libchromiumcontent to use Xcode's clang
Update to latest libchromiumcontent
Make MediaStreamDevicesController::Accept/Deny public again
Update ICU header include path
Update ResourceContext for Chrome 30
URLRequestContextStorage::set_http_server_properties takes a scoped_ptr in Chrome 30
Update browser/media/* for Chrome 30
Add DevToolsFrontendHostDelegate indexing methods from Chrome 30
BrowserContext::RequestMIDISysExPermission was added in Chrome 30
BrowserContext::GetSpeechRecognitionPreferences is gone in Chrome 30
content::BrowserContext::GetPath is a const member function in Chrome 30
Update for move of scoped_nsobject header and namespace
Update #includes for moves of string-related headers
Update to Chrome 30
win: Newly created window should also be aware of application menu.
Do not dereference remote callback if its renderer view is released.
Make objects registry code more structured.
Set application menu would set menu for all windows on Windows.
Make app.setApplicationMenu an alias to Menu.setApplicationMenu.
Add app.getBrowserWindows() API.
:lipstick: fix typo in doc.
Make sure application menu always get referenced.
Don't wait for request in http spec.
win: Make web view focused initialy.
win: Make window menu's accelerators work.
Convert "Command" to "Ctrl" in accelerators on non-Mac.
:lipstick: NativeWindowClientView no longer needs a extra content view.
win: Make native window a views::View.
win: Respond to events of window menu.
Make sure binary version is dumped before uploading.
Add --version flag to print atom-shell's version.
Dump v0.5.4.
BrowserWindow.focus() should not make window become visible, fixed #106.
Add BrowserWindow.isVisible() API.
Show a simple menu in default_app on Windows.
win: Show popup menu at right place.
win: Add BrowserWindow.setMenu API.
Update to latest apm.
Dump v0.5.3.
Set proxy service at the right place.
Add spec for sending http request.
Do not require uploading a tag before publish release.
Dump v0.5.2.
Still upload distribution file to S3 since Atom hasn't used Releases API yet.
Switch to use the ProxyResolverV8, fixes atom/atom#894.
Do not publish release when body of release note is empty.
Free the native window's memory after the event were sent for all observers.
:lipstick: Adding trailing comma in package.json.
Do not warn about 80 columns in coffeelint, it's not required.
Add wrapper script for coffeelint.
Add coffeelint to dependencies.
Skip the check for lib.github.
Run pylint in cibuild.
Add wrapper script for pylint.
Get the body of release with current $EDITOR.
Publish the release after the uploading is end.
Upload both atom-shell and node's headers.
Silence the output of upload script.
Upload the asset after release note is created.
Handle the assets uploading in the GitHub API library.
:lipstick: Find the release even when commit isn't tagged.
Create new release note or get the existing one when uploading.
Correctly deal with API errors.
Accept still-preview apis.
Add a simple wrapper of GitHub API.
Add process.getCurrentStackTrace(), returning V8::getCurrentStackTrace().
Dumpv 0.5.1.
Destroy the event object immediately after the reply is sent, fixes #102.
Add spec for destroying synchronous event.
Dump v0.5.0.
Move atom_event_processing_window to browser/ui.
cocoa: Don't use Chrome's UnderlayOpenGLHostingWindow.
:lipstick: Same indent.
Remove the CustomFrameView, it's no longer needed.
Calling asynchronous functions in renderer now doesn't block browser.
win: Implement asynchronous ShowMessageBox.
win: Add dummy implementation for asynchronous open/save dialog.
Default template parameter is not supported on Windows.
win: Accept parent window in ShowOpenDialog.
Use the convient V8 wrapper in all files.
Use same name convention in string16_conversions.
Use FromV8Arguments in atom_api_dialog.cc.
Add convient function for converting args from V8 Arguments.
Put FromV8Value and ToV8Value to a new header.
Simplify conversions between native types and v8 types.
Make dialog.showSaveDialog accept a callback.
mac: Add asynchronous ShowSaveDialog.
Make dialog.showSaveDialog accept no parent window.
:lipstick: Pick duplicate code together.
mac: make ShowSaveDialog accept no parent window.
Make dialog.showOpenDialog accept callback.
mac: Add asynchronous ShowOpenDialog.
:lipstick: cpplint.
:lipstick: CoffeeScript is cute.
Enable taking window as parameter in dialog.showOpenDialog.
mac: Make ShowOpenDialog able to be shown as sheet.
Make dialog.showMessageBox asynchronous.
mac: Implement async ShowMessageBox.
Add header for asynchronous version of ShowMessageBox.
Add spec for ipc.sendSync.
Do not reply sync messages when window is closed.
Do not store the event.returnValue.
Send reply for sync messages when event.returnValue is set.
Use string16 instead of std::string when sending IPC messages.
Pass synchronous messages by JSON string.
Make sure all sync messages get a return value.
Use event.returnValue instead of event.result in atom-shell's code.
Prefer event.returnValue to event.result for sync messages.
Dump v0.4.9.
Guard against using protocol module too early.
doc: Mention when protocol module is safe to use.
Dump v0.4.8.
Use custom url request getter to setup request job factory.
win: Implement ShowOpenDialog.
win: Open dialog and save dialog can have different options.
win: Append extension to save dialog's result according to the selected filter.
win: Make common part of ShowSaveDialog a independet class.
win: Rewrite ShowSaveDialog with IFileSaveDialog.
Remove dialog hack for Windows XP.
Need PathService on Win32
Dump v0.4.7.
Skip the whole AtomFramelessWindow.
mac: Force using "Atom" as application name in framework bundle path.
mac: Makes sure MainMenu.nib is alwasys loaded from Atom.framework.
Dump v0.4.6.
Remove code which are used for borderless window.
Just round the top also and use a standard window.
Get radius working with frameless window.
WIP: rounded corner of frameless window.
mac: Import chromium's CustomFrameView code.
doc: Metion the frameless-window-demo.
Dump v0.4.5.
doc: Separate pages into sub directories.
doc: Add titles for all pages.
:lipstick: Remove a mistyped character.
doc: Add titles for browser-window and frameless-window.
doc: Document frameless window.
win: Add NativeWindowFramelessView as non-client view.
win: Save draggable region.
Quit when all windows are closed if running an app by passing it in command line.
Print stack when got error on startup.
Make sure child scripts are quit after specs are done.
Update apm: set both HOME and USERPROFILE in environment under Windows.
Make sure the cursor doesn't drift away when dragging window.
Don't use setMouseDownCanMoveWindow to implement draggable area.
Implement frameless window on OS X.
Add has_frame_ attribute for NativeWindow.
Send and receive the AtomViewHostMsg_UpdateDraggableRegions message.
Add IPC messages and structs for passing draggable regions.
:lipstick: fix the protocol module spec on OS X.
Update apm for node v0.10.18.
Dump version to v0.4.4.
Update node to v0.10.18.
Pass PATH environment in the child_process.fork spec.
:lipstick: fix spec failure caused by win32 path delimiter.
Use base::Environment to replace getenv.
Also fix nested child_process.fork on Windows.
Make child_process.fork work when options.env is set.
Use environment variable to detect whether to run as node.
Add test case for #83.
Add documentation for protocol module.
Emit erros when getting errors in IO thread.
Add protocol interceptor API.
:lipstick: fix reversed flag for updating latest version.
Dump v0.4.3.
Update specs to match the documents.
:lipstick: fix the window specs.
Use setTimeout instead of setImmediate in fixtures.
Revert ":lipstick: for the beforeunload handler."
Add specs for the beforeunload handler.
Dump v0.4.2.
Upload a fake empty x64 node.lib.
Only generate node.lib when we need to upload node headers.
Generate node.lib from atom.lib and chromiumcontent.dll.lib.
Don't use the cmd paramter passed by WinMain.
:lipstick: for node version and upload node.lib.
Use dummy stdin stream on Windows.
Also ship ffmpegsumo.dll in the distribution.
Use node's version for the node headers tarball.
Add flag for upload script to skip updating version.
Don't require multipart for uploading to S3.
The distribution name should contain version and platform.
Create zip distribution for binaries on Windows.
Ship correct binaries on Windows.
Use Chromium V8's headers in the node headers tarball.
Add InterceptProtocol AtomURLRequestJobFactory.
Make ReadRawData a public member, so there is no need to detect types.
:lipstick: fix cpplint warning.
Separate logics between low level URLRequestJob and js calls.
Separate URLRequestStringJob from atom_api_protocol.
Move atom_url_request_job_factory to browser/net.
Allow passing a fallback protocol handler for request jobs.
Don't pollute console with error stack.
Disable overriding built-in protocols with protocol.registerProtocol.
Custom the implementation of url request job factory.
Skelecton for interceptor APIs.
Indent all the files to 78-characters so that doc diffs are usable
Wrap passed 'url' and 'referrer' in an 'request' object.
:lipstick:
Add spec for protocol.isHandledProtocol.
Add 'registered' and 'unregistered' events for protocol module.
Make protocol module an EventEmitter.
Add protocol.isHandledProtocol API.
Disable spec for window.close() since it would not be fixed for a while.
:lipstick: Avoid duplicate temporary file names.
:lipstick: for the beforeunload handler.
Add 'loading-state-changed' event for BrowserWindow.
Add spec for #70.
Update apm.
Add OnLoadingStateChanged for NativeWindowObserver.
Dump v0.4.1.
Force pushery?
Version bump atom/apm to fix script/bootstrap.py on Win32
Update node: fix #66.
Add spec for heap snapshot crash (#66).
Make sure referrer is sent to the protocol handler.
Only redirect output to browser when running in CI.
Make sure protocol module's specs do not pollute main.js.
Enable creating object from remote object's member.
Add remote.createFunctionWithReturnValue API.
:lipstick:
Use jQuery instead of zepto.
Allow returning file for custom protocol.
Enable customing mime type and charset when returning reqeust string job.
Allow returning string in custom protocols.
Pass weak pointers when posting tasks to other threads.
:lipstick:
Call the JS handler to get the type of job.
Use zepto in the specs.
The request should go through UI thread.
Return AdapterRequestJob when creating job.
Actually set and remove protocol handlers in IO thread..
Remember registered schemes.
Skelecton for the protocol module.
Update to latest libchromiumcontent
Update utf_string_conversions.h path in another place
Update for webkit header moves
Update for move of MessageLoop into base namespace
Update for utf_string_conversions.h move in Chrome 29
Update libchromiumcontent to Chrome 29
Include gyp as a submodule
Upgrade apm for more logging on errors
Make sure cibuild calls all necessary scripts.
:lipstick: for cpplint.
Abort when there is a error in cpplint.
:lipstick:
Also upload node's headers to S3.
Create the tarball containing node's headers.
Generate the distribution file under 'dist' directory.
Also copy gyp files when copying headers.
Hide window when running in CI.
Add script to run specs in CI, fixes #61.
No need to open video when testing webkitGetUserMedia.
Upgrade apm for output fixes
Update link to docs
Update apm URL to new location in atom org.
Update libchromiumcontent: Add "path" attribute for "File" class.
[Win] Remove the extra MenuWrapper class.
[Win] Add flag to build window menu.
[Win] Use the modified Menu2 class.
[Win] Ship with Chromium's menu library.
:lipstick: for cpplint.
Add spec for child_process.fork.
Add AtomWindow.isWebViewFocused() API, fixes #57.
Should inherit brightray's default web contents delegate, fixes #31.
The camera could start very slow.
Add spec for #31.
Make overriding BrowserContext::RegisterPrefs actually work
:lipstick:
Dump v0.3.4.
Don't overwrite existing fields when build menu from template.
Normalize document names
Convert wiki links to relative markdown links
Move wiki content to docs dir
[Mac] Clean up the menu controller.
[Mac] Ship the MenuController implementation from Chromium.
Make sure all MenuItem's options have a default value.
Enable passing objects and arrays when calling remote function.
Use Menu.buildFromTemplate instead of raw menu APIs.
:lipstick:
Revert "Use named property handler for createObjectWithName."
Mention that Clang 3.0 is needed on Linux
Don't use base::DIR_APP_DATA on Linux
Compile as C++11 on Linux
Force building with Clang on Linux to get C++11 support
Add spec for changing remote object's properties.
Use named property handler for createObjectWithName.
When calling menu item's click callback, pass the item object.
Add spec for MenuItem.click.
Add spec for Menu.insert.
Add spec for attaching extra fields to menu items.
The Menu object should store items by its index.
Enable to attach extra fields to menu items.
:lipstick: for cpplint.
Move accelerator_util to browser/ui.
Move nsalert_synchronous_sheet to browser/ui.
Move file_dialog and message_box to browser/ui.
Update brightray: Disable Chromium's DataExtension.
Upload to S3 with readable version.
Collect header files from vendor/node.
:lipstick:
Add test for d3 module.
Use result of `git describe` as version.
Add process.versions["atom-shell"].
Add version file.
Only zip specified files.
Update node: enable running like upstream node.
Discard the extra node binary.
When passing --atom-child_process-fork, run like upstream node.
Update README.
Define USE_X11 on Linux
Build using make on Linux
Start teaching script/build about Linux
Update libchromiumcontent to get better Linux support
Spew less when script/cibuild fails
Spew less when script/bootstrap fails
[Win] Implement context menu.
Only set application menu on OS X.
:lipstick: on string comparison.
Update apm: Add support for Windows.
[Win] Should filters in the save as dialog.
[Mac] Add app.dock.getBadge() API.
[Mac] Add API for dock, fixes #46.
Use apm to install third party node modules.
Update node before running npm.
Add power-monitor module, fixes #45.
Add test for native modules.
[Win] Implement dialog.showSaveDialog.
Revert "Enable getUserMedia(). Part of fixes for #31."
Update libchromiumcontent to get basic Linux support
Enable navigator.webkitGetUserMedia()
Update brightray.
Update node: fix child_process.fork on Windows.
Update node: fix process.stdio.
Show devtools on right click in specs window.
Enable idle GC for both browser and renderer.
Discard the idle gc module.
Guard against double erasing an object, fixes #44.
Expose gc() in specs.
Remove the useless remote.getObject API.
Add script translate addresses in crash report into symbols.
Update node to v0.10.5.
Update to latest libchromiumcontent and node.
Don't make use of the 'id' property when sending objects.
Add test for id property of remote object.
Put ICU headers on the include path for embedders
Update libchromiumcontent to get ICU headers
[Win] Add key bindings for message box.
[Win] Override node's console and output stream with chromium's logging.
[Win] Show title and message's detail.
[Win] Message box now returns the right result.
[Win] Layout the buttons of message box manually.
[Win] Layout the buttons.
[Win] Use system's window background for message box.
[Win] Show buttons in message box.
Avoid a crash when starting a download by disallowing downloads
[Win] Make message box modal.
[Win] Show an empty window for ShowMessageBox.
[Win] Ignore 4049 link warning.
[Win] Update node: fix console and process.stdout.
Do not end the process when other exception occurs.
[Win] Poll events with GetQueuedCompletionStatus, fixes #41.
Should force the embed thread to quit when terminating.
[Win] Write log to file in Debug build.
Delay the unresponsive message for a second, fixes #42.
Move the watcher queue hack to NodeBindingsMac.
remote.require should return the same object for the same module.
[Win] Simply poll events for every 50ms.
Use walkdir instead of findit, which supports Windows.
Don't separate node bindings into renderer and browser part.
Ship the filename_rules.gypi which is modified from chromium.
Cleanup the node bindings code.
Remove redundant calls to wake up main thread.
Move common message integration code to NodeBindings' base class.
Don't use gcd to post tasks to main thread.
Improve spec window's default behavior.
[Win] Pass relative path in the test script.
Add BrowserWindow.inspectElement(x, y) API.
Add test for the unzip module.
Rename the Helper process to Renderer/Plug-In Host/Utility as appropriate
Allow clients to supply their own NetworkDelegate implementation
Add two tests regarding crashes in context switching.
Install spec's third party modules in the source root.
Add test for setImmediate and process.nextTick.
Add script to run test.
Should install node modules for default_app and spec when bootstrap.
Add empty spec skeleton.
Start the specified app if there is one in command line parameters.
Make sure atom-shell is build before creating distribution.
cefode-node is renamed to node.
Update node: fix process.nextTick.
Restart renderer when reloading in the default app.
Update node: use node's implementation of setImmediate.
Enable the UI thread in browser to receive synchronous messages.
Remove the :evil: loop.
Update gyp and depot_tools.
Update brightray.
Add process.activateUvLoop() API.
Update to latest libchromiumcontent
[Win] views_chromiumcontent.lib is renamed to chromiumviews.lib.
Link to the views module as static library.
Always build 32-bit in Xcode
[Win] Add custom frame view implementation for native window.
[Win] No need to manually to control the visibility of maximize button.
[Win] Force using native frame.
[Win] Provide ClientView implementation.
Update node: fix cefode.js on Windows.
[Win] Print log to stderr instead of debug.log.
[Win] Implement simple delegate methods of Widget.
Also ship content_shell.pak on Windows.
cpplint :lipstick:
Use depot_tools to provide ninja binary and cpplint.
Use process.resourcePath to locate js files.
Update brightray: fix linking errors of libchromiumcontent.
Compile out a working exe!
Implement basic methods of NativeWindowWin.
Some headers are including SkMtrix.h, fix compilation errors for them.
Add dummy implemenation of accelerator_util for Windows.
Add dummy implementation of file dialog for Windows.
Add dummy implementation of message box for Windows.
Add dummny menu implementation for Windows.
Add dummy implementaions of node integration in Windows.
Implement browser related functions in Windows.
Mark OS X only implementations in BrowserMainParts.
Separate the creation function of NodeBindings for renderer and browser.
:lipstick:
Seperate implementation of crash reporter to standalone class.
Add empty auto updater implementation for Windows.
Implement simple Beep() on Windows.
Implement MoveItemToTrash on Windows.
Use the platform_util_win implementation from Chromium.
Update to latest brightray.
Make sure the fake config.gypi can be parsed by node.js.
Should write a meaningful config.gypi for node.
Update libchromiumcontent to be based on Chrome 28
Use the platform_util_win implementation from Chromium.
Update node: fix link error in uv.
Update brightray: fix building with ninja.
Rename source_root to atom_source_root to avoid conflicts.
Don't throw exception when gyp fails.
Only create config.gypi if it doesn't exist.
Update node: removed a few more unused patches.
Include node's config.gypi in atom-shell.
Define 'python' variable in atom-shell.
Implement main function on Windows.
Don't rely on "iosfwd" for forward including std::string.
Ranged for is not supported by VS 2010.
snprintf is not supported by VS.
Implement converting string vector to char pointer array on Windows.
Implement process.crash() on Windows.
Should enable C++ exceptions for all targets on Windows.
Compile atom_lib with C++ exception enabled.
Make node static library build.
Add switch to skip operations require networking.
We don't need to force updating to latest npm.
Use win32 python to call gyp when running under cygwin.
Ignore vendor/python_26 in git.
Pull in precompiled python under cygwin.
Ship gyp.
Do not ignore vendor/.
Only download frameworks on OS X.
Update npm after node is downloaded.
Also ship version and LICENSE file with dist.
Make sure dist is created for the HEAD before uploading.
Make Objective-C's categories work.
typeof null can also be 'object'.
Update to latest brightray.
Emit WindowCloseCancelled message when close is cancelled by user code.
Use applicationShouldTerminate to control whether application should quit.
Make video and audio tag work, fixes #31.
Clean unused bash script.
Modify upload script to obey chromium's style.
Remove the download script.
Update create-dist script for changes of building system.
Rewrite cpplint script in python.
Rewrite compile-coffee script in python.
Don't throw exception when ninja quit unnormally.
Rewrite build script in python.
Rewrite update script in python.
Enable getUserMedia(). Part of fixes for #31.
Update node to v0.10.12.
Use unzip command on Mac to keep symbol links in zip file work.
Rewrite update-frameworks script in python.
Simplify download function.
Use .py suffix for python scripts, we're following chromium.
Move helper functions into a common module.
Rewrite update-node script in python.
Update brightray: fix linking with libchromiumcontent.
Build atom-shell with ninja.
Add script to find existing Mac SDK (taken from chromium).
Rewrite bootstrap script in python.
Add app.getHomeDir() API.
Add platform method to return executable(bundle)'s version.
Set base url in bootstrap script by default.
Update libchromiumcontent, fixed #22.
Since we support inheritance of native objects, use js to send messages.
Add API for renderer's crashes.
Make window aware of renderer crashes.
Use a different icon for atom-shell to make it distinguishable from atom.
Update to latest brightray and libchromiumcontent.
Add BrowserWindow.restartHangMonitorTimeout() API.
Allow showing message dialog as sheet.
Return button's index for [NSAlert runModalSheetForWindow].
Add runModalSheetForWindow method for NSAlert.
Update to latest libchromiumcontent
Give BrowserContext subclasses access to GetPath()
Add responsive and unresponsive events for window.
Implement undocked dev tools on Windows
Discard fullscreen support on OS X 10.6.
Add 'ready-for-update-on-quit' event for auto-updater.
Pass continueUpdate callback in the 'will-install-update' event.
willInstallUpdateOnQuit has been discarded in latest Sparkle.
Don't download frameworks if they exist.
Add auto-updater module.
Don't ship frameworks in repository, instead we download them.
Add 'will-finish-launching' event for app.
Add a few more methods for AutoUpdater.
Wrap Sparkle's minimum interface with C++.
Build with Sparkle.framework.
URL => Url in javascript.
Show uncaught exception in message dialog.
Update node binary to v0.10.9.
Update to latest chromium and brightray.
Set file and data protocol handler.
Add process.crash() for both browser and renderer.
Add crash reporter module (based on Quincy).
Build with Quincy.
Rollback node to v0.10.5, there is ABI changes in V8.
Update node to v0.10.9.
Don't crash when HTML notifications are used on Windows
Don't emit 'open-file' event for files passed in command line.
Update to Chromium r202921
Add app.focus API.
Emit 'finish-launching' event when the application has finished launching.
Emit 'open-file' event when OS X is trying to open file with the app.
Improve default page.
Pull in libchromiumcontent's Windows test support
Use the user-visible version number in our user agent string
Set the user agent string correctly on Windows
Automatically exclude platform-specific files for all targets
Set up linker defaults for Windows
Make our Windows build settings actually take effect
Add BrowserWindow.restart() to restart renderer process.
Focusing on window should also focus on application.
Enable '+', ',', '-', '.' in accelerators.
Emit 'blur' event at right time.
Add app.exit() API to exit with specified exit status.
Add 'blur' window event.
Add BrowserWindow.focusOnWebView and blurWebView.
Use the new way of reporting exception in node context.
Get libchromiumcontent back on master
Stub out InspectableWebContentsViewWin
Only compile HandleKeyboardEvent on Mac
Update libchromiumcontent to get icudt.dll
Set up the resource bundle on Windows
Exclude platform-specific files from other platforms
Link against the DLL version of the CRT
Link client apps against base_static.lib
Add a stub application_info_win.cc
ifdef out a bunch of Mac-specific code
Link against sandbox_static.lib
Give clients access to libchromiumcontent's src directory
Use __declspec(dllimport) for functions from chromiumcontent.dll
Link against chromiumcontent.dll
Add some more default build settings for Windows
Make sure dependents can #include "brightray/foo.h"
Beef up .gitignore
Update links after move to brightray org
Rewrite dialog API with our simpler blocking dialog implementations.
Erase window from weak map immediately after it's destroyed.
dialog.showMessageBox doesn't require window as parameter any more.
Use string instead of integer to represent dialog's types.
Add Edit menu.
Send message to window directly when passing BrowserWindow for ipc.send.
Add BrowserWindow.fromProcessIdAndRoutingId API.
Update node: remove Atom.app/Contents/Resources/app from node paths.
Simulate the toggleDevTools API.
Add the App.commandLine API to control Chromium's command line.
Add BrowserWindow.getFocusedWindow() API.
Add BrowserWindow.isFocused() API.
Add Menu.buildFromTemplate API to greatly simplify building menu.
Make MenuItem's type default to 'submenu' if it has submenu property.
Ignore files created by Visual Studio
Don't use range-based for loops
Use FILE_PATH_LITERAL to fix build errors
MSVC doesn't allow `override` on destructors
Add some build defaults for Windows
Make sure sk_stdint.h is in the include path
Use MSBuild to build on Windows
Ignore .sln/.vcxproj files created by gyp
Make script/build actually run gyp on Windows
Ensure consistent line endings in all files
Add prerequisites to the README
Update libchromiumcontent for Windows support
Add 'selector' property for MenuItem, which automatically calls first reponder's selector.
Automatically convert menu with tile of 'Window' to Window menu in application menu.
setApplicationMenu and sendActionToFirstResponder are Mac only.
Build application menu with the new menu API in default app.
Read menu item's properties in menu's delegate.
Build node-webkit style Menu API arounding the delegate-style Menu API.
Add API to SendActionToFirstResponder.
Calling delegate methods should pass command id of menu item.
Convert generic accelerator to platform accelerator.
Add Menu.setApplicationMenu API to set main menu of NSApp.
Implement some common web contents overrides.
Add script/cibuild
Prevent submenu from getting destroyed bebore the container menu.
Add a context menu for the initial default app.
Set accelerator for menu item by string in delegate.
Update for libchromiumcontent repo transfer
Add StringToAccelerator to parse a string as an accelerator.
Emit 'execute' event when menu item is clicked.
Improve error reporting in RPC by printing stack trace.
Expose Menu's delegate methods in javascript.
Expose Menu API in javascript.
Add popup method for Menu.
Use Atom's icon.
Rewrite script/build in Python
Rewrite script/boostrap in Python
Update libchromiumcontent to get its Python scripts
Update node: add Atom.app/Contents/Resources/app to module paths.
It seems that shutil.make_archive doesn't support symbol links, invoke the zip command instead.
When copying bundle the symbol links should be kept.
Save the latest version when uploading distribution.
Update node: cleanup unused hacks.
Add script to download atom-shell.
Add script to make distribution and upload.
Ship the custom node binary build with atom-shell.
Expose dialog.showMessageBox API.
:lipstick:
Modify Window API to be more consistent.
Rename atom module to atom_delegate to avoid conflicts with Atom.
Make sure the 'closed' event is emitted before 'window-all-closed'.
Update to lastest brightray.
Expose MenuModel's methods in js.
Add Menu API. (WIP)
Pass the native window object directly in native dialog API.
Make the CallbacksRegistry a separate module, though rather small.
Use cross-platform callbacks in the dialog API.
Don't send ATOM_BROWSER_DEREFERENCE message if context is already gone.
The unwrapArgs relies on the valueToMeta function.
Check whether id is valid when adding to weak map.
Clear listeners on process object when unloading.
Modify funtion's names to make RPC code more easy to understand.
Resupport cross-process callback.
Pass remote objects from renderer to browser by ID.
Cache remote.getCurrentWindow.
Add the generialized showMessageBox API.
Add dialog API.
URL => Url, ID => Id in coffee script.
Add 'quit' and 'window-all-closed' events for app module.
Add the 'app' built-in module.
Add Browser class to controll when the application should quit.
Add _mac suffix for obj-c files.
Add WindowList class to manage all windows.
Quiting the application is now equivalent to close all windows.
Make sure WindowClosed message is sent when window is destroyed.
Add 'closed' and 'destroyed' event for Window.
Correctly handle window's lifetime when it's closed.
frontend_host_ should be destructed after devtools_web_contents_.
Add window closing related methods for window observer.
Simply the closing model.
Closing a window requires closing web contents now.
Release resources in browser when renderer view is gonna unloaded.
Implement beforeunload event.
Drop support for cross-process callbacks.
Enable getting window from routing id and process id.
Update to newest brightray.
Add API to get any global variable from browser.
Add Clipboard API.
Add shell.beep() API.
Add Shell API.
Add platform_util from Chrome.
:lipstick:
Add vendor/ to .gitignore, so ag won't search it.
Avoid using destoryed native objects in js API.
Uniform message names.
Support passing callbacks from renderer to browser.
Use camelCase not under_score, I forgot it's coffee script.
Add remote.getCurrentWindow() API in renderer.
Add API to return all keys of weak map.
Turn off C++ exceptions
Make the RPC stuff code more understandable.
Allow renderer to get object in browser for arbitrary times.
Allow embedders to specify extra .pak files
Keep an id for each object added to global weak map.
Add remote.getObject API to get object in browser by it's ID.
Should wrap WeakCallback with handle scope.
Separate stored objects by the render view.
Add WeakMap built-in module.
Notify creation and destruction of native objects.
Enable idle GC in browser.
Tell browser to release remote object when the object is GCed.
Add v8_util.setDestructor.
Cheat on the remote object's constructor name.
Add built-in v8_util module for internal use.
Better support of array type in RPC.
Module names starting with atom_common_ can be loaded by both sides.
Return object instead of function for remote object type.
Add renference links.
No more C++ RecordedObject and ObjectsRegistry code.
Allow embedders to provide their own ContentClient subclass
Update to latest libchromiumcontent
Initial RPC API implementation.
Let embedders add their own protocol handlers
Pull in latest libchromiumcontent to get gtest
No more plan for ipc.sendSync in browser.
Add ipc.sendSync in renderer.
small tune of IPC interface.
Add getRoutingID and getProcessID for window API.
Use require('ipc').send to communicate between browser and renderer.
Messages from renderer will be emitted to the process object in browser.
Renderer can now use process.send to send messages to browser.
:lipstick:
Separate AtomBindings for renderer.
Remove RemoteObject, C++ layer should only have basic bridges.
Simpler way of inheriting EventEmitter.
Add the RemoteObject API in renderer. (not implemented yet)
Remove recorded object from registry in desturctor.
Ignore api_messages.{cc,h} for cpplint.
Share same native bindings code on both renderer and browser.
Add API messages for IPC.
Record all objects created by API in browser.
:lipstick: for cpplint.
Implement window.open.
Enable creating window with existing web contents.
InspectableWebContents should be able to accept existing WebContents.
Remembers all opened web frames.
Disable renderer sandbox.
Inject node bindings to renderer's DOM.
Improve the way to integrate libuv.
Update to latest brightray.
Add Window.url API.
Emit 'page-title-updated' as javascript event for window.
Emulate DOM's Event class.
Add observers list for NativeWindow.
Add convenient accessors for Window API.
Complete a few APIs for getters.
Add partial APIs for WebContents and NavigationController.
Add GetTitle for window API.
Update to latest libchromiumcontent
Expose interface of NativeWindow in javascript.
Use JavaScript to open the main window.
Size dev tools correctly when starting out docked to the right
Initial empty window javascript binding.
Internal built-in module code should be wrapped under api namespace.
Initial javascript startup code.
Copy the default_app to bundle.
Write js codes in coffee script.
Add script to check coding styles.
:lipstick: for cpplint.
Add our own built-in native module system.
Don't quit browser when get fatal js error.
Use node's error reporting system in browser.
Integrate libuv with browser's message loop.
Load atom.js on startup.
Initialize node in browser process.
:lipstick:
Give URL of my libchromiumcontent build.
Build with node.
Pass brightray.gypi via parameters.
Set our WebKit preferences.
Handle keyboard events with AtomEventProcessingWindow.
AtomBrowserMainParts is platform-independent now.
use AtomEventProcessingWindow as native window.
Steal ChromeEventProcessingWindow from chrome.
Implement generic native window class.
Initial empty browser.
Add submodules.
Send focus/blur events when an InspectableWebContents's window gains/loses focus
Remember where the dev tools were docked between launches
Add preferences support for embedding applications
Strip whitespace from the application name in the user agent
Include the application's version number in the user agent string
Allow embedders to provide their own BrowserContext implementation
Implement Notification.close()
Make NotificationID more useful
Fire a `click` event when a notification is clicked
Don't fire the `show` event until the notification is actually shown
Add CreateUserNotification helper function
Show notifications even when the app is focused
Turn NotificationPresenter into an abstract base class
Move notification-related code into a new NotificationPresenter class
Fire a `show` event when a notification is shown
Add bare-bones HTML notifications support
Bump the base SDK and deployment target to 10.8
Allow embedders to customize the deployment target and base SDK
Allow overriding MainDelegate::BasicStartupComplete
Support undocking the devtools view into its own window
Support docking the devtools on the right side of the window
Make the devtools close button work
Persist cookies to disk
Update libchromiumcontent
Update libchromiumcontent to pull in more headers
Update libchromiumcontent to pull in more headers
Allow overwriting vendor/download/libchromiumcontent when its version changes
Update to latest libchromiumcontent
Stop disabling the sandbox
Make keyboard shortcuts work when the dev tools are focused
Make keyboard shortcuts work on Mac
Enforce better header hygiene
Get the linen background painting during elastic scrolling
Add InspectableWebContents
Store the disk cache in an app-specific location
Use Google-style header guards everywhere
Initial commit
