Include roundtrip latency and seq nr in heartbeat debug log (#31726)
=str code clean up in `Sliding`. (#31714)
=doc Update java code sample of StatefulMap. (#31696)
avoid integer value retention event version overflow. (#31718)
Add color to LogCapturing #31689 (#31719)
ci: artifact filename quoting (#31732)
chore: renovate GH workflows (#31730)
Expiry of CRDT entries, #27683 (#31721)
Prepare for Akka 2.8 (#31723)
!str Logging error instead of failing the `keepAlive` operator. (#31712)
chore: replace apidoc links; bump link validator (#31699)
Increase timeout in OutboundIdleShutdownSpec, #30984 (#31706)
Harden ReliableDeliveryShardingSpec, #31263 (#31707)
Harden RememberEntitiesAndStartEntitySpec, #31221 (#31708)
Harden RemoteFailureSpec, #31250 (#31709)
=str Avoid subMaterialization when the provided recover source is empty. (#31669)
Update release issue template (#31701)
Use cos_containerd image in multi-node tests, #31698 (#31702)
Remove superflous ) in generated pids in tests (#31704)
Update license change date for Akka 2.7.0 (#31700)
MiMa for 2.7.0 and JDK9 classes (#31693)
Compile persistence-testkit with Scala 2.12 (#31691)
=str Optimize concat for `javadsl.Source.empty`. (#31675)
Add support for asking the BehaviorTestKit (#31673)
[clean]: Remove the Dotty compiler plugin (#31056)
chore(docs): fix some broken links (#31688)
fix: Unpersistent order of event application (#31686)
Document add-opens flags for Java 17, #31087 (#31685)
fix: Unpersistent now compiling on 2.12 (#31684)
Add ability to create unpersistent versions of persistent behaviors (#31464)
fix: Record timestamp should not be reused (#31683)
fix: emitting DeletedDurableState for deleted objects in PersistenceTestKitDurableStateStore (#31678)
Implement effectful ask in typed BehaviorTestKit (#30050)
Jackson 2.13.4.2 (#31668)
Revert "!str filter out elements without demands for Flow#collect operator. (#31617)" (#31667)
Move fossa validation to separate workflow (#31665)
=str Make use of OptionVal in Recover operator. (#31643)
=str Make use of `applyOrElse` in MapError operator. (#31642)
Remove link to Akka Cloud Platform (#31662)
=str Add dedicated stream timeout exceptions for timeout related operators. (#31640)
=sbt Just use `-release 8` for build as starting Scala 2.12.17 always emit Java 8 bytecode. (#31652)
chore: Bump jackson databind 2.13.4.1 (#31661)
fix: Don't double close on cancel in statefulMap (#31630)
!str filter out elements without demands for Flow#collect operator. (#31617)
=str Make SingleConsumerMultiProducer the default mailbox for stream. #31463 (#31620)
=sbt Bump Scala version to 2.12.17 & 2.13.10, sbt to 1.7.2 (#31648)
Change doc wording of oss (#31651)
fix: Replaying a replicated event sourced actor from snapshot caused bug (#31645)
Slight optimization of SupervisedGraphStage  (#31633)
chore: Silence some serializer warnings (#31632)
Correction of docs for pruning-marker-time-to-live (#31635)
fix: Compare required RC and M versions if present (#31631)
=sbt Bump reactive-stream-version to 1.0.4 (#31424)
Update asn-one to 0.6.0 (#30763)
!str Mark SubFlow and SubSource final. (#31605)
=str Use java.util.function.* in mapWithResource instead. (#31611)
add missing .withAllocationStrategy(ExternalShardAllocationStrategy) example for Java (#31592)
main branch is now for akka 2.7 dev (#31618)
typed javadsl: introduce AbstractOnMessageBehavior (#31603)
Custom stash capacity per entity (EventSourced and Durable) (#31479)
Change default persistence plugin-dispatcher, #31058 (#31598)
=str Fold InHandler and OutHandler in RecoverWith operator. (#31532)
=str Fold InHandler and OutHandler for operator WireTap. (#31533)
=str Refactory UnfoldResource a little. (#31572)
=str Fold InHandler and OutHandler for UniqueBidiKillSwitchStage. (#31534)
+str Add combine seq method to Source and Sink (#31345)
fix: mima filter for 29557-GraphStage-changes (#31607)
stream: use ConcurrentHashMap to track in-progress async callbacks (#29636)
=act Make akka compiles on scala 3.1.3 & 3.2.0 (#31578)
Update metrics-core, metrics-jvm to 4.2.12 (#31564)
Update aeron-client, aeron-driver to 1.39.0 (#31482)
Update Jackson to 2.13.4, #31097 (#31595)
=str Add IterableSource. (#31372)
=str Fold InHandler and OutHandler for operator Scan. (#31535)
=str Fold InHandler and OutHandler for operator ActorRefSource. (#31544)
=str Reduce one field in MapAsyncUnordered. (#31574)
Try to fix fossa error (#31599)
Migration guide 2.7 (#31597)
Deprecate old api in streams testkit, #29850 (#31596)
Add FOSSA policy check to nightly (#31594)
=str Update MapWithResourceSpec to request 1 to fix #31585. (#31591)
Enables Fortify SCA scans in support of SOC 2 compliance efforts (#31421)
MiMa settings for 2.7 (#31570)
doc: Note null being ignored in mapAsync/mapAsyncUnordered (#31581)
+str Add mapWithResource (#31361)
Minor build preparation for 2.7.0-M1 (#31568)
more CLA fixes (#31566)
Change license (#31561)
fix CLA links (#31562)
Latest for mima 2.6.20 (#31560)
Add Throwable "cause" variants to warning log API
=str Make Source.range simpler. (#31551)
Use apidoc directive in paradox/persistence-query.md (#22904) (#31554)
!str Drop the IODispatcher attribute of OutputStreamSourceStage. (#31549)
=str Rename method parameter name from `request` to `segmentSize` for interleaveMat. (#31527)
enabling shard coordinator to honor the provided role in the  configu… (#31487)
!str Drop the IODispatcher attribute of InputStreamSinkStage. (#31548)
=str Fold InHandler and OutHandler for operator ActorRefBackpressureSource. (#31545)
=str Rename method parameter `priority` to `preferred` for method mergePreferred. (#31528)
Delete effect in durable state, #30446 (#31529)
Revert "Delete effect in durable state, #30446 (#31529)"
Delete effect in durable state, #30446 (#31529)
=str Remove unused import. (#31526)
+str Add mergeAll stream operator. (#31298)
+str Add concatAllLazy stream operator (#31299)
+str Add interleaveAll stream operator. (#31300)
Change pattern for cause in onDownstreamFinish from SubscriptionWithCancelException to SubscriptionWithCancelException.NonFailureCancellation  because there is no any Throwable which implements SubscriptionWithCancelException (#31438) (#31524)
Allow `Restart{Source,Flow,Sink}` to fail on certain errors (#31492)
Inline classic section for configuration-reference (#31491)
docs: Use apidoc directive in typed/persistence.md - the last part (#22904) (#31495)
docs: Use apidoc directive in classic cluster-usage.md (#22904) (#31521)
Replace the specific version on current in links for remoting and remoting-artery (#31523)
Use apidoc directive in typed/guide/tutorial_5.md (#22904) (#31520)
Replace deprecated Resolver.sonatypeRepo on Resolver.sonatypeOssRepos for sbt 1.7.+ (#31518)
Use apidoc directive in typed/guide/tutorial_4.md (#22904) (#31519)
=act Add @FunctionInterface annotation to japi. (#31504)
Re-use command and event handler instances in Java EventSourcedBehavior #31505 (#31507)
Removing unnecessary @SuppressWarnings("unchecked") (#31511)
fixed typos (#31515)
=sbt Update sort-imports to 0.6.1 (#31513)
change recommend to recommended (#31514)
Use apidoc directive in stream/stream-flows-and-basics.md (#22904) (#31489)
=str Remove unused TimerKeys (#31500)
fix: using createUnhandledMessageProbe to avoid message delivered before subscription (#31498)
Replace broadcast with unzip for unsafeDataVia (#31440)
Update sbt to 1.7.1 (#31484)
Add Circuit Breakers panel concept (like in Lagom) (#30241)
Update gson to 2.9.1 (#31481)
adding ActorContext.delegate (#31474)
+str Add statefulMap to Flow and Source (#31330)
Use apidoc directive in typed/persistence.md - second part (#22904) (#31494)
Exposing the shard allocation strategy for the sharded daemon process  #31320
docs: fix ConsumerController java doc (#31472)
=str fix Scala 3 signature for Tcp() / AkkaSSLConfig() (#31384)
Use apidoc directive in stream/stream-customeze.md (#22904) (#31447)
Use apidoc directive in typed/interaction-patterns.md (#22904) (#31426)
Use apidoc directive in typed/guide/tutorial_2.md (#22904) (#31427)
Use apidoc directive in typed/persistence.md (#22904) (#31451)
docs: Use apidoc directive in message-delivery-reliability.md (#22904) (#31468)
docs: Use apidoc directive in stream/stream-testkit.md (#22904) (#31416)
Use apidoc directive in typed/distributed-pub-sub.md (#22904) (#31467)
Use apidoc directive in distributed-pub-sub.md (#22904) (#31465)
Avoid ClassCastException for nested restartWithBackoff, #31461 (#31462)
Update metrics-core, metrics-jvm to 4.2.10 (#31456)
Update scala-library to 2.12.16 (#31458)
docs: Use apidoc directive in typed/coexisting.md (#22904) (#31450)
Use apidoc directive in persistence-schema-evolution.md (#22904) (#31449)
doc: No longer suggest Kryo serialization (#31448)
doc: API doc link for EventSourcedProducerQueue (#31452)
null mdcForMessage always fail in runtime (#31444)
re-introduce removed parameter (#31436)
Use apidoc directive in typed/cluster-sharding.md (#22904) (#31430)
Log stacktrace on deserialization error (#31432)
chore: Unsafe.java source in scala source tree #31422 (#31425)
Fallback to algorithm zero on JVMs without String.value (#31405)
+str Add Sink.collect to javadsl. (#31371)
Rename method typed.javadsl.FishingOutcomes.continue to typed.javadsl.FishingOutcomes.continueAndCollect. Method continue() cannot be used in Java code due to reserved word (#29951) (#31420)
Use apidoc directive in typed/guide/tutorial_1.md (#22904) (#31408)
Use apidoc directive in remoting-artery.md (#22904) (#31412)
fix java docs for Source.actorRef (#31418)
Update akka-paradox to 0.44 (#31410)
Use apidoc directive in dispatchers.md (#22904) (#31407)
Use apidoc directive in stream/stream-dynamic.md (#22904) (#31397)
stream: optimize JsonFraming (#31380)
Update remoting-artery.md (#31390)
Implicit not found message for Materializer (#31404)
Use apidoc directive in typed/actor-discovery.md (#22904) (#31402)
Update aeron-client, aeron-driver to 1.38.1 (#31387)
Add missed apidoc links in stream/stream-quickstart.md (#22904) (#31391)
Minor spelling fix (#31392)
Don't use Scala 2.x options in Scala 3.y (where y > 0) (#31388)
Revert #30195 - Source.fromPublisher does not pick up attributes fix  (#31129)
Use apidoc directive in actors.md (#22904) (#31385)
Update sbt-header to 5.7.0 (#31386)
Add missed apidoc link in routing.md (#22904) (#31377)
Added support for context propagation to ActorFlow #31308 (#31314)
add eager completion option for zipLatest (#29054)
Log some more for Cluster log-info-verbose (#31376)
=str Set EmptySource name to emptySource (#31373)
Harden ReliableDeliveryShardingSpec, #31263 (#31370)
=act Add detailed root cause messages to ActorInitializationException (#31349)
Unstash commands after handling GetState in EventSourcedBehavior (#31369)
=act Optimize BehaviorBuilder and ReceiveBuilder's BuiltBehavior into array based. (#31325)
=str Optimize UnfoldAsync and UnfoldResourceAsync when future is already complete (#31344)
Add null check to wrapped message types. (#31343)
docs: Add imports guide for contributors (#31353)
Avoid BoxesRuntime indirection in LruBoundedCache key comparison (#31356)
=sbt Apply the build sbt messages but disable on sub projects. (#31352)
=doc Make the zipWithIndexExample start with 0 (#31354)
docs: Use apidoc directive in logging.md (#22904) (#31346)
=build Add useful task tips to sbt welcome message. (#31335)
+str Add Flow/Source#alsotoAll (#31292)
+str Add Flow#flattenOptional (#31285)
+str Add javadsl to Attributes.CancellationStrategy (#31261)
=sbt Update to scala 3.1.2 (#31351)
=doc Update `Using timers` section with new methods. (#31324)
=str Add specialized version of unfoldAsync for Java. (#31283)
Use apidoc directive in routing.md (#22904) (#31339)
add async to sinks in broadcast async doc (#28589)
Use apidoc directive in common/io-layer.md (#22904) (#31341)
stream: try to guard against unlimited looping in TlsActor.doUnwrap (#31321)
Change scalafmtSbtAll to scalafmtSbt (#31342)
some minor wording updates (#31326)
=doc Add welcome to contributions (#31327)
Use apidoc directive in stream/stream-substream.md (#22904) (#31315)
drop `assertAllStagesStopped` (#31294)
=str Make ConcurrentAsyncCallback extends AtomicReference directly. (#31257)
Upgrade jackson 2.13 version due to CVE (#31281)
Update sbt-api-mappings to 3.0.2 (#31318)
Update sbt-assembly to 1.2.0 (#31316)
Update paradox-theme-akka, ... to 0.43 (#31317)
Update metrics-core, metrics-jvm to 4.2.9 (#31319)
chore: adapt link validator for Scala 2.13.8 (#31310)
Use apidoc directive in stream/stream-parallelism.md (#22904) (#31301)
stream: don't wrap exceptions in ByteStringParser (#31311)
Use apidoc directive in persistence.md (#22904) (#31296)
=str Reduce some Inhandler and Outhandler allocation. (#31278)
=str Change Detacher to an object. (#31287)
[Docs] consistent lombok annotation (#31290)
+str Add Sink.never (#31289)
+str Add Flow#preMaterialize. (#31190)
using thenCombine instead of join to merge to CompletableFuture (#31304)
Remove usage of Java assert in tests (#31280)
=doc Add description about operator consistency (#31293)
=str Reduce allocation of throttle. (#31276)
Update sbt to 1.6.2 (#31113)
add `hasNoReply` method on `CommandResult` (#31277)
Add `getAttributes` on `Graph` (#31264)
Use ssl-config 0.6.1 on Scala 3 (#31273)
Harden LargeMessagesStreamSpec, #30985 (#31274)
Use apidoc directive in stream/stream-quickstart.md (#22904) (#31244)
docs: remove references to -RC Scala3 versions (#31272)
Use apidoc directive in stream/stream-error.md (#22904) (#31220)
update latestPatchOf26 to 2.6.19 (#31267)
Additional fix stack overflow for dead letters message adapter, #31241 (#31265)
Revert: Update ssl-config-core 0.6.0 (was 0.4.3) (#31252)
fix the build on main (#31251)
EventSourcedBehaviorTestKit initial state setup (#31193)
+str Add isEnqueued method to QueueOfferResult. (#31242)
ssl-config: 0.6.0 -> 0.6.1 (#31248)
Add clarifying details about new wildcard support (#31247)
use jackson-scala-module 2.13.2 for akka-jackson-serialization_3 (#31238)
+str Add Source#mergePrioritizedN. (#31189)
exclude tests using DisposableSys from aeron run (#31240)
Explicit dependency for pr validation diff, #27937 (#31239)
Restart of outbound stream if upstream completed (unexpectedly), #31081 (#31232)
exclude tests using DisposableSys from aeron run (#31230)
mark CircuitBreaker tests as time sensitive (#31235)
Harden ReliableDeliveryShardingSpec (#31234)
=str Clean up Source#combine instance method code. (#31188)
=fmt Preserve line endings when format. (#31192)
RecipeSplitter formatting (#31233)
actor: ignore anything in `unregistering` state of TcpConnection (#31231)
#1732: Moved splitter and aggregator from Alpakka Docs to Cookbook and … (#31203)
Failed: hub spec #31028
Improve default typed supervision backoff reset (#31222)
configure AutoDowning to accelarate node removal in tests (#31223)
re-enable tests using DisposableSys (#30838)
Enable some Aeron tests in nightly-builds, #31010 (#31218)
harden CrossDcHeartbeatSenderSpec - wait until active (#31219)
harden AtLeastOnceDeliveryCrashSpec (#31216)
Increase timeout in OutboundIdleShutdownSpec, #30984 (#31214)
Only run multi-node tests with Aeron, #31010 (#31217)
harden ReplicatorPruningSpec (#31215)
fix: race condition in downing provider spec (#31213) #31194
Update gson to 2.9.0 (#31209)
Enable StreamRefsSpec 'cancel before emit' test with debug logging (#31183)
harden RestartSpec - remove race condition (#31182)
Update logback-classic to 1.2.11 (#31207)
Delay run-time dependency from persistence-query to remote (#31199)
Update sbt-assembly to 1.1.1 (#31208)
Update sbt-header to 5.6.5 (#31210)
Update jul-to-slf4j, log4j-over-slf4j, ... to 1.7.36 (#31211)
Use apidoc directive in stream/stream-io.md (#22904) (#31202)
Use scala3 version of scala-java8-compat #31200 (#31201)
Use apidoc directive in serialization.md (#22904) (#31082)
docs: Use apidoc directive in typed/actors.md (#22904) (#31187)
actor: try to avoid ChannelReadable dead letter in TcpConnection (#31198)
Add unsafeViaData to FlowWithContext and SourceWithContext (#31123)
harden ClusterShardingQueries with awaitAssert (#31157)
Enable JoinConfigCompatCheckerSpec again, #30843 (#31176)
ReliableDeliveryShardingSpec: double unconfirmed redelivery diagnosis (#31171)
Remove some tests in ClusterClientSpec, #30292 (#31181)
Skip multi-jvm tests in timing tests job (#31180)
Mark stream RestartSpec as timing sensitive, #30540 (#31179)
Revert "CircuitBreakerMTSpec simplificaitons (#31153)" (#31177)
Increase timeout in ConfiguredLocalRoutingSpec, #29689 (#31178)
Harden PersistentStartEntitySpec, #30393 (#31175)
Allow manual triggering of all cron CI-jobs (#31174)
Clear CurrentClusterState in ReadView when self removed, #31164 (#31173)
Try running Aeron tests again (#31172)
Make sure replicated persist is concurrent in LwwSpec #31167 (#31169)
Reenable JoinConfigCompatCheckerRollingUpdateSpec #30939 (#31168)
Email on failure (#31170)
Handle the long way round for DurableShardingSpec (#31162)
Harden ClusterSingletonManagerPreparingForShutdownSpec, #30307 (#31160)
=str Add java doc of Hub (#31140)
typo: resendFirsUnconfirmedIdleTimeout -> resendFirstUnconfirmedIdleTimeout (#31159)
CircuitBreakerMTSpec simplificaitons (#31153)
Skip test failures from DnsDiscoveryDocTest, #29562 (#31155)
Harden ClusterShardingStatsSpec, #30841 (#31152)
Make sure final member status is Removed, #31030 (#31144)
Run timing sensitive tests in separate job, #30716 (#31149)
use a new CircuitBreaker instance per tests (#31147)
Harden StageActorRefSpec (#31148)
build: archive test result for later analysis (#31146)
=str Add scaladoc to Graph (#31141)
Harden EventSourcedBehaviorLoggingSpec, #31143 (#31145)
Handle publish to topic before receptionist listing arrived (#31138)
Don't test publishLocal with JDK 17 - fix syntax error, #31132 (#31136)
Don't test publishLocal with JDK 17, #31132 (#31135)
Improve timestamp order for eventsBySlices in Persistence TestKit, #31029 (#31133)
chore: Use random port in cluster metrics tests, #31103 (#31134)
Update scala-library to 2.13.8 (#31111)
remove failing PersistentFSMTest, #30820 (#31128)
fix link in comment (#31063)
ForkJoinPoolStarvationSpec pending on JDK 17, #31117 (#31125)
Add advanced passivation strategies (#31124)
Support ReplicationId in PersistenceId extract utilities (#31122)
Byte buffer serialization of sharding envelopes and wrapped payloads (#31096)
Update paradox-theme-akka, ... to 0.42 (#31109)
Open up topic stats for public inspection #31035 (#31048)
Correct outdated external reference to erlang.org (#31107)
Update headers for cross-compiled sources (#31121)
Add log capturing for typed stream tests (to pin down pubsub stream failures) (#31118)
docs: no Durable State for Cassandra (#31115)
add copyright headers (#31116)
update copyright year to 2022 (#31057)
Update typesafe config to 1.4.2 (#31104)
Use apidoc directive in typed/cluster.md (#22904) (#31066)
Add CI check for wrong mima filter directories (#31088)
Update config to 1.4.1 (#31101)
JDK 17 CI nightly job (#31085)
Handle ShardsUpdated when waiting for remember entities  (#31092)
Add frequency sketch for passivation strategies (#31078)
chore: scheduled link validation (#31086)
Optimize recipient serialization cache (#31084)
scala3: fix some doc samples that didn't compile (#31016)
Optimize apply for fragmented ByteStrings (#31070) (#31075)
Bump shaded protobuf version to 3.16.1 for DoS fix (#31072)
docs: Use apidoc directive in serialization-jackson.md (#31001)
Updated the java reference docs with cancelReceiveTimeout (#31067)
=act Reset receiveTimeoutData to emptyReceiveTimeoutData when cancel (#31059)
Use apidoc directive in distributed-data.md (#22904) (#31017)
Use apidoc directive in general/stream/stream-design.md (#22904) (#30983)
Update distributed-data.md (#31051)
Convenience stream operators for publishing and subscribing to typed pub sub #31037
Use apidoc directive in typed/logging.md (#22904) (#31049)
New stream operator aggregateWithBoundary #30797
Update ReplicatorMessageAdapter#subscribe (#31050)
build: update to sbt 1.5.8 (#31052)
Add UID to Slf4j MDC (#31039)
Update ssl-config-core 0.6.0 (was 0.4.3) (#31046)
Replace FoldSink with sink in the documentation (#31036)
Update scala3-library to 3.1.1-RC2 (#31044)
Update logback-classic to 1.2.10 (#31042)
Update metrics-core, metrics-jvm to 4.2.7 (#31043)
jackson: don't fail serializing empty beans (#31033)
fix the java example code for custom mailbox in akka-docs (#31034)
fix reliable delivery doc example #31026 (#31027)
Use apidoc directive in multi-node-testing.md (#22904) (#31022)
Update upper version bound for scala-java8-compat in OSGi (#31024) (#31025)
migrate-SBT-Dependencies (#31014)
scala3: show scala3-compatible code in most of akka-docs (#30974)
Remove unused import in PersistenceTestKitDurableStateStoreSpec (#31012)
Disable multi-node with Aeron, #31010 (#31011)
docs: update persistence plugin listings (#31009)
Add @deprecated to akka.stream.OverflowStrategy#dropNew (#30977) (#30993)
Latest for mima 2.6.18 (#31008)
Update to logback 1.2.9, and Paradox 0.41 (#31006)
Replace FoldSink with sink (#31003)
Add adjustable active entity limit per shard region (#31004)
Add slice queries to Persistence TestKit (#30995)
fix check that nightly tests ran (#30998)
Use apidoc directive in typed/cluster-concepts.md (#22904) (#30982)
lastSequenceNumber in DurableStateBehavior, #30833 (#30834)
Mark the new passivation strategies as may change (#30999)
dilate ask timeout in ActorRefResolveCacheQuarantineSpec, #30996 (#30997)
Add more entity passivation strategy traces and simulations (#30994)
Update to logback 1.2.8 (#30991)
Use apidoc directive in typed/cluster-singleton.md (#22904) (#30946)
Change number of slices to 1024 (#30990)
Optional akka-remote dependency from akka-persistence-query, #30980 (#30987)
Use sub-directory for embedded Aeron media driver (#30986)
Cleanup cross building (#30981)
Update to sbt 1.5.6 (#30988)
update minimal protoc version (#30971)
Serializer for EventEnvelope and Offset (#30970)
Introduce new default entity passivation strategy (#30968)
A bit less noise from updates going to shards that has already shut down when stopping (#30969)
Add variations to entity passivation strategies (#30951)
Update aeron-client, aeron-driver to 1.37.0 (#30966)
Simplify entity activity tracking for passivation strategies (#30960)
Update sbt-java-formatter to 0.7.0 (#30965)
Update paradox-theme-akka, ... to 0.40 (#30964)
Update sbt-scalafix to 0.9.33 (#30962)
Update logback-classic to 1.2.7 (#30963)
Use apidoc directive in scheduler.md (#22904) (#30947)
Use apidoc directive in mailboxes.md (#22904) (#30959)
Use apidoc directive in typed/mailboxes.md (#22904) (#30913)
Use apidoc directive in event-bus.md (#22904) (#30958)
Hardening of JoinConfigCompatCheckerSpec, #30843 (#30955)
fix doc release instructions (#30956)
Quick-push all allocated shards to region/proxy when registering #27168
Remove optional traits in EventsBySliceQuery (#30953)
Retry ActorSelection resolve in LargeMessagesStreamSpec, #24143 (#30954)
A few tutorial improvements from (#30949)
info instead of debug log when JVM triggers coordinated shutdown (#30944)
Use apidoc directive in typed/actor-lifecycle.md (#22904) (#30945)
warnings instead of errors for artery failures during shutdown  (#30943)
Waits with sending complete message until last message has been acknowledged #21015 (#30938)
Use GhExcludeTest in CI again (#30941)
Hardening of JoinConfigCompatCheckerRollingUpdateSpec, #30769 (#30936)
Update ambiguous comment with maximum-large-frame-size (#30907)
Improve unstash / unstashAll scaladoc (#30815)
Hardening of ReplicatedEventSourcingSpec, #30842 (#30937)
Support idle entity timeouts in limit-based passivation strategies (#30933)
scala3/docs: remove umbrella ticket reference (#30912)
Update incorrect reactive streams spec rule number #30908 (#30909)
scala3: build/test akka-persistence-tck and akka-persistence-typed-tests (#30911)
scala3: test akka-stream-typed (#30910)
scala3: remove runtime trait ordering check (#30904)
Use apidoc directive in common/binary-compatibility-rules.md (#22904) (#30899)
Remove ls.implicit.ly metadata (#30902)
Add least frequently used entity passivation strategy (#30898)
fix: JavaSerializationException on akka.persistence.journal.Tagged with inmem (#30900)
Scala 3: enable akka-cluster tests (#30890)
Add most recently used entity passivation strategy (#30897)
Use apidoc directive in extending-akka.md (#22904) (#30796)
NoSuchElementException in LoadEventQuery (#30895)
Make node app version field public API (#30876)
Propagate aeron system properties to forked jvm, #30601 (#30894)
Use apidoc directive in common/may-change.md (#22904) (#30775)
Add access pattern simulator for testing entity passivation strategies (#30884)
Add support for wildcard suffix in WildcardIndex #30413 (#30750)
Scala3: enable akka-cluster-sharding-typed tests (#30892)
Add extract utilities to PersistenceId (#30881)
New Persistence Query interfaces for bySlices queries (#30882)
Scala 3: enable akka-cluster-metrics tests (#30891)
Allow 'currentPersistenceIds' for ReadJournal (#30878)
Miminal mention about state store config and example plugin #30857 (#30863)
Add slice utilities to Persistence (#30879)
Try with less cpu requests and anti-affinity, #30874 (#30883)
updated scala versions (#30870)
Reduce multi-node tests to 10 pods, #30874 (#30875)
Harden DistributedPubSubRestartSpec, #30699 (#30872)
adjust cpu requests for failing ClusterSingletonManagerSpec, #30253 (#30873)
Use apidoc directive in additional/osgi.md (#22904) (#30816)
Use apidoc directive in io.md (#22904) (#30813)
Update gson to 2.8.9 (#30867)
Update sbt-ci-release to 1.5.10 (#30866)
Update sbt-unidoc to 0.5.0 (#30865)
[Docs] Update usage of lazySource in stream cookbook to match snippet (#30780)
Document experimental Scala 3 support (#30849)
Create unique media driver dir for Aeron stream tests, #30845 (#30862)
Mark flaky BalancingSpec as pending, #30860 (#30861)
Return revision in PersistenceTestKitDurableStateStore getObject (#30858)
Add entity passivation strategies (#30852)
Document slf4j log switch for akka classic when typed on classpath (#30856)
aeron.dir also for normal multi-node tests, #30601 (#30839)
fix(persistence-testkit): added fallback to snapshotplugin config. (#30837)
fix a few deprecation warnings when starting up sbt (#30829)
Aeron media driver volume for multi-node CI, #30601 (#30835)
Clarify docs around cluster shutdown (#30825)
Skip mima check for Scala 3 for now (#30830)
Link to mTLS with rotating certs blog post (#30828)
Improve doc language (#30786)
Allow initial state to be null while using EventSourcedBehaviorTestKit (#30823)
Remove fixme part about guards and pattern matching from StyleGuide (#30787)
Added durable state current persistence ids query (#30811)
Make StreamConverters.asOutputStream ignore empty arrays (#30818)
Harden BalancingSpec, #30821 (#30822)
use Scala `3.1.1-RC1` instead of `NIGHTLY` version (#30817)
Include Scala 3 in cross-build (#30392)
Remove OptionVal workaround (#30789)
akka_30782__fmp_postSop_nvm: flatMapPrefix: postStop: check promise completion before instantiating the abrupt termination exception (#30798)
Update latestPatchOf26 to 2.6.17 (#30810)
Update aeron-client, aeron-driver to 1.35.1 (#30652)
Use apidoc directive in general/actor-systems.md (#22904) (#30767)
Harden BalancingSpec, #30686 (#30785)
move aeron tests in multi-node (#30706)
Do not try to resolve localhost with search domains  (#30779)
Don't throw when cancelling an already cancelled subsink #30322 (#30695)
Harden another race condition in ReplicatedEventSourcingSpec, #30783 (#30784)
improve cluster restart documentation (#30799)
Improve performance of JoinConfigCompatChecker (#30801)
Change ShardCoordinator update failure logging #30608
Update sbt-ci-release to 1.5.9 (#30762)
Harden LocalPubSubSpec, #30749 (#30759)
Update verifyCodeStyle and applyCodeStyle to be what we really require (#30777)
Harden FlowThrottleSpec, #26325 (#30781)
Relax termination order check in ClusterShardingGracefulShutdownOldestSpec, #30744 (#30768)
Build akka persistence typed with scala3 (#30772)
Update scala-library to 2.12.15 (#30766)
remove debug logging for cancel timer (#30773)
Update metrics-core, metrics-jvm to 4.2.4 (#30764)
Harden ClusterShardingSpec, #30667 (#30770)
Handle null for StatusReply (#30728)
Update sbt-scalafix to 0.9.31 (#30760)
Remove a test with race condition in ClusterSpec, #30743 (#30758)
ReplicatedEventSourcingSpec race fix #30661 (#30735)
Add more logging to figure out BalancingSpec fail  (#30745)
fix: Race condition in sharding SupervisionSpec #30633 (#30751)
fix: AsyncDnsResolverIntegrationSpec failing with timeout from config (#30756)
Use apidoc directive in general/configuration.md (#22904) (#30718)
Include vesion.conf transformer (#30754)
Value not def for underlying state store (#30748)
Remove ApiMayChange from Durable State (#30733)
Use apidoc directive in general/addressing.md (#22904) (#30680)
Some of the circuit breaker spec timeouts were not dilated  (#30734)
Compile akka-cluster-sharding-typed with scala3 (#30738)
Documentation fixes (#30740)
Remove final modifier from private methods (#30737)
review patience config (#30709)
Murmur2 hashes of byte strings with a length that is a factor of 4 #30696
dilate TestKit shutdownActorSystem (#30685)
Changed akka.actor.typed.scaladsl.ActorContext#system method to implicit method #30724 (#30727)
more hardening of MessageAdapterSpec, #30698 (#30713)
Only compile with Scala 3 in PR validation (#30731)
Use apidoc directive in common/circuitbreaker.md (#22904) (#30679)
Access to config through behavior testkit (#30637)
increase patience in AsyncDnsResolverIntegrationSpec, #30700 (#30710)
Honor timeout parameter when stopping actors #30715 (#30717)
pr validation against 'main' rather than 'master' (#30719)
Build akka-cluster-sharding with scala3 (#30712)
'master' to 'main' (#30714)
adjust gc log and mem args in nightly builds (#30687)
build akka-cluster-typed on scala 3 (#30703)
fix ActorSource links (#30708)
Harden MessageAdapterSpec, #30698 (#30702)
Add log capturing to get details about SupervisionSpec failing #30633 (#30705)
Ignore leaking log entires from other tests LoggingReceiveSpec #30691 (#30694)
ignore reachability records for invalid nodes (#30425)
Stabilize group router spec (#30678)
Compile akka-cluster-metrics on scala3 (#30690)
Build akka-bench-jmh with scala3 (#30682)
pending DurableShardingSpec, #30489 (#30684)
build akka-cluster-tools on scala3 (#30683)
Parse service names with special characters in them #30672
GHExcludeTest in EventStreamSpec, #30675 (#30688)
Race conditions around subscribing and unsubscribing in EventStreamSpec fixed #30675 (#30676)
Remove ApiMayChange from Sharded Daemon Process (#30647)
Update sbt-scalafix to 0.9.30 (#30648)
ActorLeakSpec fail fix  (#30645)
Update sbt-assembly to 1.1.0 (#30649)
Update sbt-java-formatter to 0.6.1 (#30651)
Stabilize BalancingSpec (#30673)
Expose diagostic logging in ReplicatedShardingSpec (#30677)
Build akka-distributed-data on scala3 (#30666)
Build akka-persistence-query on scala3 (#30663)
Update gson to 2.8.8 (#30650)
Use @apidoc directive in supervision.md (#22904) (#30635)
Update sbt-reproducible-builds to 0.30 (#30654)
Update metrics-core, metrics-jvm to 4.2.3 (#30653)
Use apidoc directive in typed/fault-tolerance.md (#22904) (#30636)
Test customizing the Jackson object mapper (#30670)
DeathWatchNotification: more prominent logging on timeout (#30674)
Create JFR target directory if needed (#30669)
Better test failure logging (#30658)
akka-persistence compiling on Scala3 (#30406)
Harden ConsumerControllerSpec, #30430 (#30655)
Run gh-exclude tests in some nightlies (#30656)
Remove unecessary short timeouts in EventStreamSpec, #30528 (#30657)
timefactor=2 also for Typed testkit (#30643)
Increase timeout for quitAndRestart in JoinConfigCompatCheckerRollingUpdateSpec, #30544 (#30646)
Use scaladoc and javadoc directives in stash.md #22904
flatMapPrefix stuck on cancellations (#30616)
Ignore excess messages in LocalPubSubSpec, #30547 (#30642)
Harden EventSourcedBehaviorStashSpec, #30543 (#30644)
FlowThrottleSpec: Track time in stream, verify intervals after  (#30634)
extractShardId should include StartEntity (#30632)
avoid race condition by wait for lease lost message first (#30640)
graphviz in nightly JDK 1.8.0 / Scala 2.12 (#30638)
Make HubSpec draining support tests more robust w.r.t. CI environments #30581 (#30624)
Make bounded mailbox test less racy (#30630)
Harden PersistentActorBoundedStashingSpec, #30619 (#30629)
Missing barrier in StressSpec, #30620 (#30628)
Don't check for jdk9 tests when running on jdk8 (#30626)
Avoid fail-fast in nightly builds (#30625)
Harden ReplicatedEventSourcingSpec, 30548 (#30613)
Harden EventSourcedBehaviorSpec, #30583 (#30611)
Harden NullEmptyStateSpec (#30610)
No need for pr labels, #30459 (#30615)
Temporary disable Aeron jobs in nightly, #30601
Make RestartSpec a little bit less flaky
Harden BoundedBlockingQueueSpec, #30479
Run Scala3 build as nightly
Update contributing guide to remove Jenkins and add Github Actions (#30595)
Remove publishLocal from pr validation, #30584
Only multi-jvm in nightly-builds.yml
-Xmx512M for multi-node
Add new nightly job to run Artery Aeron UDP remote tests (#30573)
GH Actions: Add nightly job to run Classic cluster tests (#30572)
GH Actions: Add nightly job to run Artery cluster tests (#30571)
Replace broken links on RFC standarts (#30588)
Run multi-node tests on fresh GKE clusters (#30570)
Tagged as GHExcludeTest in ReplicatedEventSourcing
Tagged some tests as GHExclude - both documented as failing
Exclude more tests from PR validation (#30580)
Run scheduled jobs only on main repo
Use ubuntu-20.04 for all jobs
Consistent use of timefactor when running tests
Remove properties that are unnecessary for the given sbt tasks
Configure gh-exclude as it was done for other tags
Clearer error message when the test fails
use internalLogger instead of context.log for recovery logging (#30563)
Use a timefactor=2 when validating pull requests
Some minor syntax enhancements
Increase paradox parsing timeout from 2 to 5 seconds
Also dilate the initial delay when testing timeouts in akka-stream-testkit
Remove pull_request trigger and add the cron schedule
Update jul-to-slf4j, log4j-over-slf4j, ... to 1.7.32 (#30508)
Replace try/catch on assertThrows in FlowTest.java (#30560)
Use generic type inference and method references in FlowDocTest.java (#30478)
Update sbt to 1.5.5 (#30507)
Update logback-classic to 1.2.5 (#30504)
GH Actions: Run validatePullRequest and MiMa (#30557)
Using a timefactor=2
Use a single workflow to configure all nightly jobs
MiMa latest patch 2.6.16
Some minor build clean ups
AST for DurableStateChange to support deletes (#30549)
Log settings for restart stream stages, #30445 (#30529)
Exclude exiting members in Read/Write MajorityPlus, #30327 (#30328)
Backoff supervision with critical log level, #30445 (#30523)
fix: Race condition in LazySourceSpec #28689
Quieter logging for ShardCoordinator initialization (#30488)
Avoid ActorsLeakSpec failure (#30539)
Remove WhiteSource plugin (#30545)
Improve InmemPersistentActorSpec stability
Mark ContextPropagation with InternalStableApi
Run akka-stream-tests on Scala 3 (#30451)
Update commons-io to 2.11.0 (#30505)
Improvements to documentation on Stream-Actor interop (#30503)
Correction of adopt java version (#30526)
Remove unused sample references from FlowDoc{Test|Spec} (#20450)
Make ContextPropagation public to be used from custom akka stream stage implementations outside of the akka codebase
Update metrics-core, metrics-jvm to 4.1.25 (#30506)
Don't enable full pr validation yet
Combine some tests projects in Scala3 build (#30520)
Add GH Actions JDKx nightly jobs
Migrate PRValidation to GHActions
Minor doc adjustment for Durable State
Clean up
Move 2.6.11 mima filters to a proper folder
Add mima-filters for ContextPropagation enhancements.
ContextPropagation enhancement
Stabilise InmemPersistentActorSpec (#30499)
Abort scala3 jobs when pushing new commits on the PR (#30500)
Exclude ConsumerControllerSpec on GH Actions (#30497)
LazySourceSpec: improve 'no demand' test stability
Avoid lazySource cancellation race in test (#30491)
Auto-publish backported docs (#30422)
Use latezt Ubuntu and JDK latest LTS (#30485)
Comment on .travis different scalaVersion (#30456)
Exclude failing test on GH Action (#30484)
smaller diff
sepaarte folder for durable-state docs as per PR review feedback
unused imports
Exclude BoundedBlockingQueueSpec on GH Actions (#30480)
Enable logging for flaky EventStreamSpec (#30436)
awaitAssert instead of delay
Exclude CircuitBreakerMTSpec from GH Action tests (#30477)
No longer exclude
Diagnose FlowFlatMapPrefixSpec (#30470)
Parallelize GH Action for Scala 3 (#30472)
fix EventStreamSpec instability
typo
Add link to issues
Exclude failing tests only on GHA
Build Test Akka Cluster Metrics with sigar library. (#30453)
Log the sender of the expected messages
Don't run multi-jvm tests on GHA for Scala 3 (#30461)
Diagnose BalancingSpec failure (#30438)
Misc changes as suggested in the PR review
scala3: akka-cluster (#30417)
LocalPubSubSpec: allow multiple debug messages (#30434)
Remove dev-durable-state from travis safelist (#30443)
Minor fixes in tests and documentation (#30440)
Add more docs on durable state (#30403)
Run akka-remote tests on Scala 3 (#30415)
fix: addItem method in EventSourcedBehavior docs (#30419)
use GH Actions to compile and tests with Scala 3 (#30427)
enable all tests that are passing with scala 3 (#30423)
Run tests for actors and typed actors on Scala 3 (#30283)
akka-paradox: update to 0.39 (#30420)
io: probe TCP socket when reading before registering interest (#30354)
Akka Remote compiling on Scala 3.0 (#30361)
Test Akka Discovery with Scala 3 (#30410)
Run akka-testkit tests on Scala 3 (#30407)
Compile akka-serialization-jackson with Scala 3 (#30408)
sharding: actively signal 'region stopped' to the coordinator (#30402)
Test akka-coordination on Scala 3 (#30409)
Update genjavadoc (#30411)
Update scala-library to 2.13.6 (#30302)
compile akka-coordination with scala3 (#30386)
Compile akka-discovery with Scala 3 (#30396)
Compile akka-actor-testkit with scala 3 (#30395)
fix: Defer coordinator stop until region graceful stop has completed … (#30338)
fix: Actually set halfClosed in half closed sample (#30404)
Update lz4-java to 1.8.0 (#30381)
First draft of reference docs on durable state (#30387)
Remove the extra bracket from testing documentation (#30397)
Hide private members in documentation (#30370)
Akka Stream TCK tests on Scala 3.0 (#30360)
Update metrics-core, metrics-jvm to 4.1.24 (#30379)
Update sbt-scalafix to 0.9.29 (#30294)
Update sbt-assembly to 1.0.0 (#30295)
Share source directory between Scala 2.13 and Scala 3 (#30384)
Compile some more subprojects with scala3 on travis (#30385)
Akka 30374 flat map prefix  attributes propagation (#30388)
Update jul-to-slf4j, log4j-over-slf4j, ... to 1.7.31 (#30383)
Update commons-io to 2.10.0 (#30377)
missing line (#30390)
benchmark: ByteString append and builder (#30313)
Update scala-java8-compat to `1.0.0` (#30375)
Update sbt-reproducible-builds to 0.28 (#30380)
Update sbt to 1.5.4 (#30382)
allow minor versions after Scala 3.0 (#30331)
sprinkle ApiMayChange over durable state
Reading until last global offset at time of calling currentChanges, a… (#30372)
Moved inmem temporarily to query because of DurableStateStoreQuery.
stream: fix client-side mutual TLS bug (#29534)
doc: make it clear inputBuffer has no effect in sample #30332 (#30337)
Update gson to 2.8.7 (#30296)
akka-stream compiling on Scala 3 (#30324)
Update cluster.md (#30352)
A few ByteString.size switched to ByteString.length #30342
Revert "Hide private members in documentation (#20185) (#30356)" (#30357)
Hide private members in documentation (#20185) (#30356)
stream: actually read coalesce-writes setting from config (#30353)
stream: smart batching of writes in TcpStages (#30334)
Clarify sharding stop message being local
Remove ApiMayChange for Replicated Event Sourcing, #30346 (#30347)
Changed seqNr to revision for all durable state APIs and implementations (#30344)
Move more release instructions to the template (#30340)
add missing thenUnstashAll call (#30305)
Amend release script to update milestones (#30314)
Update sbt-jmh to 0.4.3 (#30304)
set sonatype profile name for publishing (#30306)
Update scala-library to 2.12.14 (#30301)
Install graphviz for publishing (#30293)
Use whitesource credential when publishing from GH Actions (#30291)
Handles handover done message in state oldest #29215 (#29216)
Update jctools-core to 3.3.0 (#30100)
Publish from GitHub Actions (#30288)
fix default DurableStateStore pluginId and config, #30277
More tests on DurableStateBehavior (#30285)
Update sbt-pgp to 2.1.2 (#30097)
support ipv6 in artery (#30190)
Resolve snapshot check skipped for some events (#30225) (#30226)
Initial implementation of DurableStateStore and one test
First implementation of DurableStateBehavior, #30277
Remove unchecked cast from SourceTest and FlowTest
Byte array allocation/copy hunt (#30266)
Move typed persistence tests away from LevelDB (#30224)
Compile typed actors with Scala 3 (#30258)
Don't put temporary actor refs in the heavy hitters table  (#30214)
Deprecate LevelDB (#30213)
Inner stages of lazy/future stages should inherit attributes (#30161)
Small clarification of recovery strategy in config (#30167)
ByteString.toArrayUnsafe method for zero copy transformation of bytestrings (#30262)
Artery test transport blackhole only let HandshakeReq pass (#30219)
Update metrics-core, metrics-jvm to 4.1.21 (#30232)
Introduce onDeadLetterMailboxEnqueue hook for telemetry (#30279)
Remove unused imports in tests (#30265)
Source.fromPublisher does not pick up attributes fix #30076 (#30195)
Wip optimize allocations optionval #30264
Possibility to make snapshot load failures non-fatal, #30234 (#30238)
Unnecessary boxing was removed from tests (#30250)
Extends supervision strategy to define custom log levels #30267 (#30268)
Lazy and fast concat and prepend (#30252)
Call BoundaryEvent cancellation hook for telemetry when ActorGraphInterpreter stops (#30259)
Change tests to use new Source.queue api, #29801 (#30070)
Change parameter order in assertEquals (#30247)
Add more explicit docs of top level coexistence (#29921)
use old school Set construction
Update Scala to 3.0.0 final, sbt to 1.5.2 (#30248)
Add BoundaryEvent cancellation hook for telemetry (#30246)
Remove SourceModule/SinkModule newInstance (#30244)
lease settings support for typed cluster singleton (#30209)
stream: reuse `maxBytesPerChunk` buffer for inflate / gunzip (#30239)
Add Sink.asPublisher example and update doc (#30105)
Use StandardCharsets.UTF-8 in SerializationDocTest
Remove usage of Java assert in tests (#30220) (#30227)
fixed typo (#30218)
Use assertThrows in classes ActorCreationTest and OutputStreamSinkTest (#30165)
Resolve missing internal state update in EventSourcedRememberEntities… (#30217)
Delete CI-sensitive LevelDB perf spec
Update sbt-bill-of-materials to 1.0.2 (#30183)
Update sbt-scalafix to 0.9.27 (#30181)
Refactor GraphDslTest and TcpTest (#30160)
avoiding fixed persistenceId on example (#30203)
Update sbt-dotty to 0.5.4 (#30180)
Documentation:  Adding section for Projections to the Modules summary… (#30175)
avoiding the superposing of the buttons and the code (#30210)
build: more reliable reference to protobuf jar
add example to the doc of combine operator (#30194)
Add settings to use context.log for internal ESB logging (#30202)
#30191 - Actualization of docs for "Resumable projections" (#30197)
Change jdk version for javadoc generation in CONTRIBUTING.md (#30196)
Removes unnecessary postStop #30071 (#30187)
Clarify documentation for persisting multiple events in the context o… (#30169)
Unwatch before watch in typed Supervision (#30172)
Pin jackson-databind to 2.11 (#30185)
Accidentally snuck in wrong patch version excludes for SBR internal change (#30178)
Incorrect API:doc on RestartSource.onFailuresWithBackoff #30176
Simplified reverse in lease majority (#30155)
Extra catch-ignore for source attributes in case not possible #30138
MiMa latest patch update to 2.6.14 (#30173)
Document persist failure supervision for ESBs #30062
Avoid TaskQueue allocations in Scheduler #30093
Remove async boundary note in Source.actorRef docs (#30162)
Preserve attributes of inner stages when using {Source,Flow,Sink}.fromMaterializer (#30142)
Typed consistent hashing example (#30036)
Change Effects() to Effect() (#30157)
Remove unnecessary modifiers from FI.java (#30119)
ActorSinkWithAckExample Ack message (#30127)
Update junit to 4.13.2 (#30099)
Upgrade to Scala 2.13.5 (#30072)
Refactor SourceTest.java: use diamong operator, use assertThrows (#30152)
Implement isTimerActive for BehaviorTestKit #30140 (#30144)
Use type inference for collections in FlowTest.java (#30110)
Renamed single letter parameter (#30150)
Remove recursive call to Java withBroadcastPredicate (#30078)
Add link to SBR lease documentation; fix minor syntax mistakes
Unwrap tagged replicated events before publishing to other replicas (#30136)
remove default-dispatcher from heartbeat delay message (#30109)
Upgrade jackson to 2.11.4 #30126 (#30130)
Update sbt-dotty to 0.5.3 (#30095)
Added size() to BoundedSourceQueue #30124 (#30125)
Crosslink and extra sentence about top level spawn in from-classic #30089
minor corrections of remoting docs (#30107)
Replace Charset.forName("UTF-8") on StandartCharsets.UTF_8 (#30113)
Commit api/japi docs when releasing (#30128)
genjavadoc: update 0.16 -> 0.17 (#30121)
Allow custom mailbox for user guardian  (#30116)
Bump Scala 3 to RC1 (#30117)
Clarify API-docs - desugaring of IncomingConnection.handleWith (#30025)
Update ActorHierarchyExperiments.java (#30075)
Inherit attributes from Restart{Source,Flow,Sink}  #24810
Change parameters order for assertEquals in tests: JavaFutureTests and LeaseProviderTest (#30094)
Link to Akka Cloud Platform (#30112)
Extend GroupedWeightedWithin to accept maxWeight and maxNumber simultaneously #30020
Refactor exception handling in StatusReplyTest (#30081)
configuration for SBR lease release #30090 (#30092)
typo (#30083)
stream: add assertion against JDK bug to avoid spin loop in TlsActor (#30043)
Adds initial delay to Timers #30065 (#30066)
Add batchable sources also for Scala 3 (#30069)
Use scala.concurrent.Batchable for Scala 2.13 #29980
Update sbt-scalafix to 0.9.25 (#30012)
Bump mima latest patch (#30061)
Doubly dilated timeouts in typed test probe #30021 (#30033)
Update manifestInfo docs (#30056)
Eliminate BidiFlow.identity in atop when possible #29901
Source location in a few more stages (#30039)
Makes the SBR lease name configurable (#30049)
Nicer ManifestInfo check (#30046)
Make the ChatRoom companion object visible in chatroom protocol (#30029)
Update to sbt-paradox-akka 0.38 with copy-snippet support for the docs #30045
Fail fix in ClusterShardingPreparingForShutdownSpec (#30041)
Unmoored doc comment fixed (#30038)
Update aeron-client, aeron-driver to 1.32.0 (#30013)
Adds scala/java tabs #30019 (#30035)
Allow introspection on typed EntityRefs to support serialization #29955
Adds internal logger for EventSourcedBehavior (#30007)
Update ActorHierarchyExperiments.java (#30032)
Don't add MemberExited as unreachable in SBR, #2995 (#29988)
Compile akka-actor and akka-actor-tests with Scala 3 in PR validation (#29992)
Full cluster shutdown (#29838)
Don't use GraphStage toString when materializing Source.fromPublisher, #30022
Adds explicit ! method (#30004)
Update sbt to 1.4.7 (#30015)
Update sbt-dotty to 0.5.2 (#30011)
Removes obsolete authors.pl (#30010)
Update metrics-core, metrics-jvm to 4.1.17
Remove support for PoisonPill in ActorRefSource #26622
Align BoundedSourceQueue test expectations with reality #29859
docs: put 'recover' and 'mapError' under 'error handling' (#29999)
Scala 3 cross compatible akka-actor / akka-testkit / akka-actor-tests (#29956)
MiMa for 2.6.12 take 2 (#29987)
SBR downing when a node is quarantined from the other side (#29737)
Add a note about shard actor factory being local (#29970)
Race condition in prefixAndTail around double materialization fixed #29965 (#29976)
Update to paradox theme with new cookie banner (#29978)
Add GroupedWeighted FlowOp and Make Grouped use GroupedWeighted #29066
Update event-bus.md (#29979)
SubSinkInlet/SubSourceOutlet memory leak fix (#29967)
Update replicated ES support for JDBC (#29968)
broken link (#29974)
Update asn-one to 0.5.0 (#29943)
Update sbt-pgp to 2.1.1 (#29944)
Ensure little endian ordering when copying envelope buffer #29911
Typo (#29954)
Add more comments about formatting. (#29001)
update latestPatchOf26 to 2.6.11 (#29952)
more headers (#29953)
Adapted message failure supervision bugfix (#29847)
Incorrect test expectations i FlowFutureFlowSpec fixed (#29899)
Add example for mapError (#29913)
Add example for foldAsync (#29912)
Add askWithStatus Streams operator, #29504 (#29727)
Improved operator string represenation #29935
Akka29924 router pool  bcast (#29927)
Make typed TestProbe a RecipientRef (#29928)
typo (#29941)
Update metrics-core, metrics-jvm to 4.1.16
Update copyright to 2021
use java Predicate in Java API
tcp: clearer debug message when connection is closed successfully (#29931)
Make sure static mdc from withMdc set during actor startup  (#29894)
Disable snapshot serialization by default, log warning if serialization enabled #29904
ScalaFutures timeout is too short MultiDcClusterSharding test  (#29917)
No empty state serialization check when not enabled (#29905)
Missing boundary for expectation to always hold #29777 (#29896)
Change wording on a sentence (#29918)
Adds variant accepting any ack message (#29586) (#29910)
Akka 29900  stubbed timer (#29903)
Race condition in DeprecatedSupervisionSpec fixed #29735
Akka 29891  testkit msg adaptors (#29898)
CI: run license checks from Travis (#29906)
Operators: Add example for watchTermination (#29888)
Update paradox-theme-akka, ... to 0.36 (#29883)
Update sbt-scalafix to 0.9.24 (#29880)
Update sbt-pgp to 2.0.2 (#29882)
Update sbt-bill-of-materials to 1.0.1 (#29884)
Update spray-json to 1.3.6 (#29885)
Adds 'exists' and 'contains' method to StashBuffer (#29870)
Separately version jackson-databind
Update jctools-core to 3.2.0
Update jackson-databind to 2.10.5.1
Include name attribute in GraphStageLogic toString (#29877)
Operators: Add example for groupBy (#29875)
Better logging when no seed nodes found (#29866)
Use scalafix to update scala 2.13.3, silencer 1.7.0 (#29367)
Add how to compose Partial Behaviors #29832 (#29853)
More reasonable DNS timeout avoiding resolution fail in test #29858
Refactor example to make it easier to copy-paste #29578 (#29860)
docs: Link project info to snapshots (#29862)
Normalize Event Sourcing wording #29577 (#29856)
docs: show BOM include in all dependency listings
Don't cache temp actors in ActorRefResolveCache, #29828 (#29834)
Ignore gossip desrialization failures (#29848)
Stream Testkit: new-API-friendly (#29831)
links to platform guide (#29846)
Produce a BOM for Akka libraries (#29839)
Add examples for asInputStream and asOutputStream (#29830)
Update persistence.md (#29844)
fixed typo: wort -> worth [ci skip] (#29840)
Operator docs: examples for asSource/FlowWithContext (#29822)
Exhaustive comparison for cache policies
Automatic closing of graph stage sub inlets/outlets  #29790
fix logging: expectTerminated instead (#29827)
Revert "Stream Testkit: new-API-friendly" (#29826)
Move to travis-ci.com (#29824)
move identify to /MultiNodeTypedClusterSpec (#29821)
Update sbt-scalafix to 0.9.23 (#29804)
Update metrics-core, metrics-jvm to 4.1.14 (#29807)
Update scalacheck to 1.15.1 (#29809)
Update sort-imports to 0.5.5 (#29805)
Include entries DData Gossip message dynamically based on size, #28421 (#29751)
Update aeron-client, aeron-driver to 1.31.1 (#29806)
Stream Testkit: new-API-friendly (#29815)
Docs: use RestartSettings (#29788)
not isEmpty => nonEmpty
Stream Testkit: use assertAllStagesStopped with system in the Java DSL
Configure visibility (#29797)
Reset index if it gets out of sync with the snapshot storage (#29769)
tests: shorten probabilitic test in BoundedSourceQueueSpec
cleanup associations when handshake didn't complete, #29615 (#29763)
Docs: link to videos (#29799)
Harden lease majority spec (#29793)
Add type annotation for public method (#29798)
Akka 29784  stateful map concat relax f ret type (#29792)
Review writeup for RES direct deplication in docs (#29796)
BoundedSourceQueue API #29574
BoundedQueueSource API
save snapshot after replaying events if retention criteria indicates missing snapshot  #29631
stream: a fast dropping queue implementation
Increase timeout to make room for leveldb disk access being really slow on Jenkins #29787
Add limitation about supervision in sync Testkit #29767 (#29778)
Update metrics-core, metrics-jvm to 4.1.13 (#29725)
simplify the stopping example, #28144 (#29760)
Isolate shard init logic to own method (#29759)
Update sbt-scalafmt to 2.4.2 (#29701)
Update mima to 0.8.1 (#29764)
cleanup test comment
stream: register newshells with no active interpreters (#29731)
Dont rely on DNS for a doc spec (#29762)
Improving docs- removing redundant phrases (#29744)
Adding example of cancelled operator (#29749)
DEBUG logging for BasicClusterManualSpec
show package name in getting started examples, #28432 (#29757)
More debug logging for Artery transport shutdown
Unstash GetShardHome requests one-by-one, #29742 (#29748)
Update cluster.md
Link FAQ to community and support pages (#29752)
Update mima to check against 2.5.32 (#29754)
improve logging of shard region shutdown timeout, #29711 (#29747)
Log distributed data size, #29736 (#29740)
Explain why Mailbox#cleanup uses recursion [ci skip]
Update junit to 4.13.1 (#29728)
Adding example for collection operator (#29716)
Simplify code: replace exists with contains (#29729)
Adding example of headOption operator (#29717)
exit-jvm config in docs (#29722)
Grammar fix (#29723)
Add Metals output to .gitignore (#29724)
Typo / grammatical fixes (#29715)
mima latestPatchOf 2.6.10 (#29721)
ShardRegion ignores HostShard when shutting down (#29707)
Handle when there are no known regions yet #29709
Update sbt-osgi to 0.9.6 (#29699)
Update scalatest to 3.1.4 and within 3.1 (#29503)
log-frame-size-exceeding for Artery, #29683
consistently prefix sharding log messages with typeName (#29682)
disseminate downing decisions faster, #29612 (#29640)
shutdown it down -> shut it down (#29686)
Support throwing exception in Java TestProbe.awaitAssert #29677
Restart(Source|Flow|Sink): Configurable stream restart deadline (#29591)
Making docs better (#29623)
upgrade ScalaTest, scalatestplus-junit, scalatestplus-mockito (#29688)
Make Rejected extend OperationResult (#29678)
Documentation for Sharding rolling update (#29666)
Config for when to move to WeaklyUp (#29665)
Add completion timeout example (#29673)
Make a distinction between hand-offs for rebalance and region shutdown (#29579)
Proper threadsafe collection of stream snapshots, ignoring stopping streams. #28960
Watching an actor ref on a member triggers termination message #29628
Filter out messages from other replicated entities #29649
Disable death watch flush for remoting and fix race in rebalance worker
Flush messages before DeathWatchNotification, #28695 (#28940)
Cluster sharding health check (#29638)
swap args when initializing *MajorityPlus classes (#29664)
adjust default minimum for down-all-when-unstable (#29661)
Remove weird char NBSP (#29620)
Update commons-codec to 1.15 (#29653)
Update aeron-client, aeron-driver to 1.30.0 (#29655)
harden ReliableDeliverySpec, #29340 (#29643)
Update commons-io to 2.8.0 (#29654)
Update jctools-core to 3.1.0 (#29656)
Update sbt-jmh to 0.4.0 (#29657)
Docs: Reduce operator (#29641)
use PersistenceTestKitReadJournal in EventSourcedBehaviorTestKit
Include quarantine reason when ignored because unknown UID (#29645)
log transport flush timeout (#29644)
Docs for which versions support RES (#29642)
Adding example of fold for sink #25468
another merge test for GCounter, #29616 (#29624)
support async reply and noReply in EventSourcedBehaviorTestKit, #29602 #29581
simplify the SBR instability check (#29625)
clearAll when creating new EventSourcedBehaviorTestKit, #29609 (#29634)
Cluster aware shard allocation and rolling updates (#29548)
Remove redundant brackets
Remove unreferenced private method
Replace to with toSet
Tiny style fix
Handle SubSource already timed out on failure or completion #29095 (#29605)
Terminates actor systems in parallel (#29606)
Adds mapAsync(Unordered) operator samples (#29600)
remove redundant final in object private def
testkit: more resilient check for available loopback addresses in SocketUtil on MacOS (#29607)
Increase stable-after in StressSpec, #29512 (#29603)
reduce too verbose logging sharding, #27276 (#29590)
Adding missing word to Split Brain Resolver documentation (#29582)
Holistic shard allocation strategy, #29543 (#29555)
move mima filter to right version
Link to Replicated Event Sourcing video
Add app-version to the Member information, #27300 (#29546)
Update latest patch version (#29580)
Enable fatal errors for docs (#29570)
Publish releases as 'github release' as well (#29572)
Reduce sharding warnings when there are no buffered messages (#29525)
minor doc updates for replicated event sourcing (#29561)
testkit: do not try to use 127.x.y.255 as a test localhost address (#29566)
Add links to how to deal with blocking APIs #29544 (#29547)
Chunked messages in reliable delivery, #24276 (#28915)
Allocate rebalanced shards immediately, #29543
fix compilation errors
Improve Shard#entityCreated API performance #29520
Document workaround for jackson serialiaztion of scala case objects (#29531)
Sharding request-to-start but already started logging (#29545)
Add "akka" prefix to TCK code sample (#29529)
Start ShardedDaemon pinging once member is up (#29526)
Use the correct name for Akka HTTP (#29527)
Prefer "update" over "upgrade" when rolling (#29523)
Event migration improvements (#29514)
Final review feedback
Update sbt-reproducible-builds to 0.25 (#29305)
Feedback from creating replicated entity sample (#29510)
docs: render depenency on Futures page correctly (#29513)
Update jctools-core to 3.0.1 (#29519)
Pin jackson to 2.10. (#29521)
Update metrics-core, metrics-jvm to 4.1.12.1 (#29518)
Update silencer-lib, silencer-plugin to 1.7.1 (#29516)
Update sbt-java-formatter to 0.6.0
increase timeout in MultiDcJoin2Spec, #29505
doc: rolling update from 2.5.x to 2.6.2 (#29501)
full convergence also for joining nodes for first multi-dc join, #29486 (#29499)
Forward terminated from ShardCoordinator to RebalanceWorker (#29463)
Make akka-protobuf-v3_2.12-2.6.7 reproducible again
Reduce scope of cluster.StressSpec, #23511 (#29472)
convenience for ShardedDaemonProcess role, #29490
debug logging of ArteryUpdSendConsistencyWithThreeLanesSpec, #29465
reduce combinations in RandomizedBrainResolverIntegrationSpec, #29185
2.13 compilation
Ignore java warnins in persistence typed and mima
Test coverage and fixes for direct replication (#29491)
Make ShardingDirectReplication private (#29492)
Turn on direct replication by default (#29493)
Replicated Sharding improvements (#29483)
Counter example, shopping cart
ORSet example, MovieWatchList
LwwTime example
Polish Auction example
Add entity type name for replicated entity (#29462)
a few more things when reviewing replicated event sourcing (#29461)
Rename replicated settings (#29460)
Embed akka serialization inside jackson serialization (#29455)
DRY ReplicatedEventSourcedBehavior.apply (#29454)
Minor adjustments to replicated es docs (#29450)
Tagging for replicated event sourcing (#29442)
Java auction example (#29443)
Restart replication stream from correct seen seqNr (#29436)
Document hot standby for replicated event sourcing (#29439)
Test case for three replicated event sourced entities added (#29438)
Rename active active to replicated event sourcing (#29435)
PersistentRepr serializer support for metadata (#29434)
Active active journal support changes (#29421)
Detect illegal access to context (#29431)
Active active docs mention plugin support (#29418)
ActiveActiveSharding make it possible to use with custom envelope (#29417)
Don't log user event toString in active active #29393 (#29416)
EventPublishing API for Java (#29413)
Incorrect assumption about event ordering in test fixed (#29411)
Make sure to gracefully stop replication streams when aa actor stops #29406
Active active sharding (#29364)
Docs and example for triggers (#29396)
Active active java apis #29266
Port CRDTs from multi dc (#29372)
Metadata for snapshots for active active (#29362)
Initial docs for active active (#29386)
Active active per replica journal selection (#29350)
Introduce version vectors for replicated events (#29332)
Test coverage for active active published events after replay (#29335)
Support persistAll for active active (#29337)
message adapter in ActiveActiveShardingDirectReplication (#29328)
better timestamp format for active-active (#29329)
Speculative replication - step 1 (#29289)
Alternative approach for storing metadata (#29309)
ActiveActive: Events with metadata and events by persistence id for  (#29287)
Initial prototype of active active event sourcing (#29265)
Add random factor for CircuitBreaker (#29478)
Correctly check Java test has ran
Handle dispatcher aliases for stash config (#29485)
Remove val from case class (#29488)
actor: sync allModules with current set of published modules (#29487)
Remove doclint from javac for docs (#29476)
harden ClusterSingletonManagerLeaseSpec, #29423
Harden BackoffSupervisorSpec, #29467
Update scala to 2.13.3 and silencer to 1.7.0 (#28991)
fix write consistency timeout in Sharding, #29344
add akka-docs to nonFatalJavaWarningsFor (#29470)
Harden multi-dc joining, #29280 (#29346)
docs: redirect to deploying from old URL
javacOptions in Compile configuration (not compile task) (#29459)
docs: add newish modules in listing (#29446)
Bump jackson to 2.10.5 (#29405)
Avoid non-tail recursion when stashed no-effect messages are processed (#29437)
Make warnings in Java code fatal (#28402)
fix StreamRefs IllegalStateException  (#29432)
Update ssl-config-core 0.4.2 (#29365)
Update to paradox akka theme 0.35 to get new LB.com links
Clarify pool router routees are always local (#29419)
Avoid warning for NoState to RememberingStart when not remembering entities #29400 (#29404)
doc(RetryFlow): explain with more details (#29229)
Update metrics-core, metrics-jvm to 4.1.11
Update sbt-dynver to 4.1.1
Add verifyCodeStyle #29377 (#29378)
fix typo (#29412)
Allow using hypen in actorSystem name and do not replace it with underscore #28994 (#29399)
typo (#29403)
Avoid stuck rebalances during coordinator leaving (#29385)
addActorTerminationTask fix (#29379)
2.6.8 post release changes (#29390)
remove not needed curly braces (#29392)
Update actor-lifecycle.md (#29391)
Allow entities to stop by terminating without remember entities (#29384)
Add mergePreferred, mergePrioritized docs (#25468)
Replace reference to deprecated API (#29381)
Durable pruning fail fix #29270
Post 2.6.7 updates (#29370)
javafmt
actor: remove stack trace from AskTimeoutException (#29376)
typo (#29375)
PR comments
No dry run in release instructions #29199 (#29369)
Update sbt 1.3.13 (#29366)
Allow 2.5 snapshot requirement in version check (#29363)
Ok/error protocol and failable ask #29186 (#29190)
Use the target actor name in the temporary ask actor name (#29245)
Sharding EntityRef for testing, #29267 (#29336)
Revert "Flush messages before DeathWatchNotification, #28695 (#28940)" (#29357)
ByteString performance improvements (#29358)
actor: improve ByteStringBuilder.++= / addAll
actor: implement ByteString.isEmpty in as simple terms as possible
use datagram channel creator for udp sender (#29009)
BehaviourTestKit: Add receptionist inbox (#29294)
Reduce assert time and increase poll freq PersistentTestKit (#29296)
Prefer monitoring from a separate stream (without blocking calls)
Update commons-io to 2.7 (#29303)
Update sort-imports to 0.5.4 (#29302)
Reproduce and fix ByteString initialization issue (#29244)
Show less code. More informative comments (still hides blocking calls
Headers and formats
Simplify code: instanceof, hide sleeps,...
clear captured logs after successful tests #29339
Clarify that receptionist supports clustering (#29352)
Adds sample code for the monitor operator
Change JsonFraming to fail stage if completing within an object #29228
Flush messages before DeathWatchNotification, #28695 (#28940)
Docs: re-add akka.patterns page (#29024)
Partial revert of #29268 to preserve source compatibility (#29341)
Docs: Actor sink stream operators (#29171)
update the log message in docs for mixed versions
Update sbt-assembly to 0.15.0 (#29301)
and fix the double $
ClusterShardingSpec: Enable log capturing
wrong serializer config in ActorSystemSpec
minor comment fix in ClusterSingletonManager.scala, removed extra word
Docs: link to object API docs (#29195)
Update sbt to 1.3.12 (#29307)
docs: show Akka version as symbol
actor: simplify empty ByteString instances (#29268)
Docs: Document reference.conf appending on gradle+kotlin (#29274)
dotty phase 3: Some required syntax changes (#29139)
Annotate Shard instrumented methods with InternalStableApi (#29255)
Allowing arbitrary random number generators (#29246)
Validate leveldb write plugin is enabled for leveldb read plugin (#29288)
Avoid 'dead code after this construct' warnings in jackson-databind example (#29278)
stream: ensure async boundaries propagate cancellation causes (#29213)
Improve RotatingKeysSSLEngineProviderSpec (#29222)
Removing, deprecating and replacing usage of black/whitelist (#29254)
Remove or replace master/slave terminology from tests and API docs (#29252)
Missing wildcard port for netty in some sharding tests #29251
formatting
javadsl uses java.util.function.IntFunction instead
mima exclusions
User Interger in javadsl function
MiMa filter for the Sharding and Remember Entities rework
Harden PersistentShardingMigrationSpec (#29240)
Split up large writes in the EventSourcedRememberEntitiesShardStore (#29233)
Use watchWith for entity terminated (#29230)
Clear out list of shards in DData coordinator store when no longer needed (#29232)
Avoid triggering IntelliJ's dead code detection (#29242)
Docs: Actor source stream operators (#29178)
Protobuf v3 osgi (#29172)
Never use durable store for the cluster receptionist replicator #29231 (#29237)
stream: Unencoded attribute name (#28955)
s/crashing/restarting
Avoid loop when not flightrecording
Require set of remembered entities to start to be nonEmpty
Debug log for stashing while awaiting lease
Language fix and don't showcase leveldb
Majority plus in docs
Deprecation version updated
Tune test logs back to info
Move MiMa excludes to correct version
More private and @InternalApi sprinkling on top
Avoid allocation on entity lookup
RememberingStartNoAck -> RememberingStart.empty
Union and diff for sets are more performant
Re-use logic for allocating shard home for remembered entities
Some clarifying comments
Add imports to discovery scala snippets (#29220)
Remove 'dry run' feature (#29225)
Allow update from Lightbend SBR in ClusterReceptionistConfigCompatChecker (#29209)
doc: add link to SBR video (#29211)
Adds skeleton pages for gunzip and inflate. (#29214)
Docs: Discovery via DNS (#29153)
No commit without a formatting follwup
Split example to ease into the details. PR Comments
Updates to releasing steps (#29201)
LocalPubSubSpec: Stop log being captured from creation
Let's test with stronger cipher suites
x-ref to queue.md
Cleanup comments. Prefer stronger suite (reorder)
minor typo in akka-remote reference.conf
Adds throttle example
minor docs fixes
latestPatchOf 2.6.6 (#29200)
Implement throttle for Source(Flow)WithContext (#29107)
The persistence testkit incorrectly assumed a response was available immediately (#29193)
k8s-friendly SSLEngine provider (simplified) (#29152)
Link to new Kubernetes deployment guide (#29187)
Docs: WithContext (#29088)
Add type annotation for public method (#29184)
All I want to do, is make MiMa happy 🎶
Provide an init for Sharded Daemon Process without settings but with stop message #29081
DEBUG logging for cluster sahrding leaving spec (#29180)
Handle some corner case states when receiving StartEntity (#29176)
Remember entities starting separation of concerns (#29174)
Restore termination behavior for non-remember entities  (#29175)
Tests for EventSourced remember entities shard store (#29177)
Remove mention of materializer from streams quickstart (#29169)
Move coordinator state and remembered entities next to each other (#29173)
Start entity ack not needed in shard (#29164)
Turn verbose logging into a config flag (#29168)
DData shard store improvements (#29166)
Small fix in Buffer's doc (#29157)
Accumulate and ack all requests to start entity (#29165)
Problems with StartEntityAck, StartEntity and the persistent test running with ddata remember entities (#29161)
Publish Dropped message when sharding drops buffered messages (#29163)
Link to akka cluster video
I gotta remove these empty files
Scalafmt wants an empty line after header
Missing headers
Some changes on top of changes from master
Batch remember entity stops (#29149)
stream: cosmetic improvements to FutureFlow (#29068)
Extend backoff supervision with custom message handling #29082 (#29083)
Latency benchmarks for rememered entities + JFR events (#29103)
Telemetry SPI hooks for SBR decision, #29085
handle thrown exceptions in Retry pattern in same way as failed Future (#29119)
Improve remember entities docs (#29136)
stream: avoid getting stuck when doUnwrap returns NEED_WRAP with outstanding data
stream: fix half-closed TLS connection spin-loop
stream: run TlsSpec for TLSv1.3 on jdk >= 11
Log markers for SBR, #29085
Don't allocate to terminated regions, #29131
fix wrong lastSequenceNumber, #28976 (#29128)
Stash the custom termination message for watchWith #29101
Detect duplicate serializer identifiers, #29100
doc: add routers to Higher level Cluster tools (#29117)
Publish Dropped to eventstream when serialized payload too large #29077 (#29079)
Don not crash coordinator on old remember entities store responses (#29129)
InternalStableApi on JavaDurationConverters (#29118)
Multiple remember entities fixes (#29124)
Scala Steward once per once
change email in pom.xml (#29116)
remove reply type parameter from Command in Account example
Add Lightbend's SBR to Akka Cluster, #29085 (#29099)
Update metrics-core, metrics-jvm to 4.1.9
Detect illegal access to ActorContext from the outside (#27112)
Don't stall coordinator init on slow remember shard store #28925
more useful JavaDoc for javadsl Flow (#28577)
Ignore possible state change in start (#29069)
add lz4 compression for jackson (#29012)
actor: need to keep signature of `clearActorFields` for now (#29098)
Harden ShardCoordinator state replication, #28856 (#28895) (#29094)
Allow ShardCoordinator to watch old region ActorRef that is not in cluster, #29034
stream: make keepAlive IdleInject more reliable against flukes
Docs: revise Coordinated Shutdown with new actors APIs (#29057)
Don't set fields of actor / actorcell using reflection (#27614)
Use new TLS algorithm defaults in remoting tests (#29074)
Reafactor shard to have a state for each entity (#29071)
Adds support to read PEM keys (#29039)
Docs for lazy stream operators (#28897)
Batch entitiy start updates for remembered entities (#29064)
Typed testkit: log capture logger initalisation
Replace LazyFlow with FutureFlow (#28729)
Migration from persistent shard coordinator to ddata with eventsource… (#29058)
Allow taking a stream snapshot of a stream that uses TLS (#29047)
Additional testing of duplicated extensions (#29013)
Reviews tests asserting default values
Coordinator ddata state store with persistent remember entities (#29043)
cancellable var -> private val (#29041)
Review defaults for TLS algorithms defaults
Cleanup reference to TLS1.3 (#29048)
Clarification about receptionist subscription (#29046)
fix race condition in MessageAdapterSpec, #29044
Improve grammar (#29040)
remove commented out (irrelevant) test case
Possibility to disable Artery ActorRef and manifest compression, #28967 (#29020)
Step two of the CBOR serialization issue, #28927 (#28928)
clarify ClusterSingletonProxy role docs (#29015)
free memory when FunctionRef is stopped, #28959 (#29026)
Extra details around consistent hashing. (#29019)
Removes signature directive support
Improve grammar (#29007)
Docs: sort out links (#29027)
Final signature to apidoc review (#29021)
Docs: Scala binary verison in Maven and gradle dependencies (#29025)
update protobuf 3.11.4
add Source.never (#29008)
Update link-to-classic paragraph #29022
Bulk update of external shard allocation (#28699)
Add necessary telemetry interceptors for Akka 2.6 AskPattern (#28580)
added LogCapturing
add coverage for invalid and foreing path
Added dedicated logger for deserialization failures
Comment improvements on SSLConfigProvider reference.conf (#29004)
A stash that should have been buffer #28957 (#28987)
Minor fix: replaced "terminated" to "constructed" (#29011)
update latestPatchOf26 to 2.6.5 (#28997)
Update metrics-core, metrics-jvm to 4.1.7
Update jackson-databind to 2.10.4
fix publishRsync in release script (#29003)
Docs: Javadoc links in project info (#28998)
Complete GetClusterShardingStats query, #24466
A few more apidoc directives (#28995)
Synchronous TestKit for EventSourcedBehavior, #23712 (#28952)
Handling of onSpinWait and its absence in AffinityPool (#28946)
check that ActorIdentity is from the expected ActorPath
Examples for extrapolate (#28797)
Dynamically adjust the ConsumerController's resend interval for Request, #28720
Support GetClusterShardingStats query in Typed #24466
The automatic replacement produces Markdown that caused the paradox task in sbt to timeout or event fail. So this commit removes some operators with outpu too complex:
Some cleanup to prepare...
Docs: sort all operators by method name in left-hand menu (#28900)
Log demand and nr of messages sent in delivery throughput sharding test
Use sbt-publish-rsync rather than our own (#28868)
Add Source.fromJavaStream as convenient method alias (#28881)
Improved utilities/logging documentation
Shard coordinator remember entities refactor (#28909)
Update sbt-paradox-akka to 0.33 (#28983)
Allow changing the recovery strategy in a typed persistence actor #25216 (#28932)
Update sbt-header to 5.6.0 (#28944)
actor: use simple comparison in LightArrayRevolverScheduler (#28981)
Docs: mergeLatest (#28586)
Minor typo in documentation. (#28687)
Docs: flatMapConcat (#28584)
Docs: API docs for asSourceWithContext (#28950)
Check mima against 2.5.31 (#28857)
Don't generate JavaDoc noise, #28732
+build Add sort imports support. (#28780)
dotty phase 2: scalafix ExplicitNonNullaryApply (#28949)
Docs: list persistence plugins
remove visible protobuf-java dependency from akka-protobuf-v3, #28939
Harden ShardCoordinator state replication, #28856 (#28895)
Update sbt-java-formatter to 0.5.1, disable javafmt on compile if discipline is disabled (#28962)
fix wrong ActorSystem name when using MultiNodeClusterShardingSpec #28953 (#28954)
#28908 - rename returnDefaultPolicy to resetPolicy (#28941)
JacksonCborSerializer should use CBOR ofc, #28918
scalafix Any2StringAdd
scalafix Any2StringAdd prepare
ExplicitResultTypes manually for implicit local val / def
scalafix ExplicitResultTypes - for implicit members
scalafix FinalObject - for scalafix ignored files
scalafix FinalObject
scalafix ConstructorProcedureSyntax
simplify Dependencies / sslConfigCore sbt setting
AkkaDisciplinePlugin don't need to depend on Scalafix
update sbt-scalafix 0.9.14
sbt: fix an implicitConversions warning
Update the schema evolution doc to also mention Jackson, #28916
Doc orrection of ClusterMessageSerializer manifests change (#28929)
Remove microkernel leftovers in ActorSystem (#28933)
Doc statement no longer true with new Actor APIs (#28924)
Update sbt to 1.3.10 (#28921)
Update sbt-header to 5.5.0
Update metrics-core, metrics-jvm to 4.1.6
OSGi: register ActorSystem under ActorFactoryRef interface (#28758)
=clu Not allow `null` messages to be sent to Shard
Make sure subscription completed before testing (#28887)
multi-node throughput test for reliable delivery, #28725
JMH bench for work pulling, 28725
avoid touching MDC for context.log.trace in reliable delivery
mima filter
Silence another close error in multi-jvm tests
build: remove scala-2.13+ / scala-2.13- directories for now (#28894)
minor logging improvement (#28893)
Don't rely on logs in pubsub spec #28885
Clarify 'inconsistent classpath' error #28329 (#28891)
possibility to select dispatcher for delivery actors (#28799)
clarify the implicit parameters of AskPattern, #28836 (#28873)
#28869 - example for setting policies in docs (persistence testkit)
actor: streamline cross source directory usage
Update aeron-client, aeron-driver to 1.27.0 (#28866)
Refactor remember entitites in shards (#28776)
mima filter for ProducerController.Settings constructor, #28747
Typed: Configurable resend interval for ProducerController (#28779)
The parasitic marked internal stable and further docs on the annotation (#28717)
Step two in the cluster message manifest change #13654
avoid filling ConsumerController stash with resent messages
Unstash one instead of all in ConsumerController, #28718 (#28775)
improvements of the PersistenceTestKit doc samples
Notify Receptionist subscribers when node added and removed, #28792 (#28795)
Update interaction-patterns.md
Move StashBuffer.capacity to 2.6.4 excludes
Document how to publish updated documentation (#28860)
Expose capacity property on StashBuffer (#28739)
Rebased and regenerated index.
Change to assert text
Regenerate index.md
javafmtAll
Avoid unused val
Docs: sync and refresh ask stream operators
Update sbt-reproducible-builds to 0.24 (#28845)
Update sbt-paradox-akka to 0.32 (#28854)
Update sbt to 1.3.9 (#28855)
Improvements to reliable delivery docs (#28738)
Make ClassicActorSystemProvider.classicSystem public API
SubscriptionTimeout schedule leak in FanoutProcessor #28810
java format
Operator docs: list watch as Actor interop (#28826)
Publish paradox/japi/api (snapshot) docs via sbt (#28828)
move to testkit, and docs
add import clause to graphDSL example code to compile (#28830)
Don't advertise temporary references in the compression table #28822
fix DispatcherSameAsParent when using ClusterActorRefProvider, #28842
=act Add @inline Annotation.
change %mdc examples, and tests
clear StashBuffer, #28786
Unstash to correct Beahviors.same when unstash in progress, #28831
Updated incorrect comment (#28825)
Create the git tag before releasing rather than during (#28820)
mima: check against 2.6.4, and missing filters
Publish snapshots to gustav with 'publish' (#28815)
Docs: TestKit leaking into Java getting started guide (#28793)
Docs: examples for io streams with StreamConverters (#28746)
Remove last crossPaths occurrence (#28817)
Update remoting.md (#28811)
Doc example of Streams watch operator, #25468 (#28752)
allow Source.queue concurrent pushing (#28273)
=act Validate Actor class in Props.
Persistence initialization utility #28808
remove test config of old flight recorder (#28800)
Cross-references to/from ref-docs vs operator docs (#28788)
Update to genjavadoc 0.16 (#28791)
JMH bench and flight recorder for reliable delivery, #28725 (#28741)
=str Don't create closure
+act Add retry with new delay calculation support #25999
Remove FIXME and link to docs for typed pub sub (#28767)
Doc example for Sink.head (#28782)
Stream: Sugar for Sink.ignore #27789, #24986
Persistence testkit implementation #15571 (#26825)
Allow a read of length 0 in InputStreamAdapter #28751 (#28759)
Use Scalal 2.12.11 (#28754)
fix premature reset of the 'writeInProgress' flag in case of persistence failure #28629
doc: Vector instead of List in daemon processes example (#28763)
ShardedDaemonSet creates one too many (#28766)
Test jackson support for scala enumerations (#28726)
Docs: Example on the as/fromJavaStream operators (#28745)
Doc example of Sink.ignore, #25468 (#28753)
Silencing multi-jvm shutdown error (#28692)
Don't include event in PersistentRepr.toString
Mark journalFor and OptionVal InternalStableApi (#28716)
fix format of RELEASING.md
Update metrics-core, metrics-jvm to 4.1.5 (#28706)
Don't set -Yrangepos by default #26900
fix unmoored doc comment in SequencedMessage (#28730)
Tightly coupled test not updated with the previous revert (#28728) (#28731)
Update Source.actorRef sample to not use deprecated method #28679
Always use the internal same thread execution context impl on Scala 2.12
add missing full stop
Reliable delivery in Typed, #20984
Adds ActorRef.ignore (#28630)
Cover adaptation failures with supervision #28592
Add docs and examples for RS fromPublisher  #25468
Docs: use https links (#28713)
doc: add link to video in CQRS page (#28714)
Sharded Daemon Process #28710
Clean up same thread execution contexts #26690
Distributed pubsub for typed (#28625)
Operator examples for statefulMapConcat #25468
Docs: Sink.foreach (#28693)
Update jackson-databind to 2.10.3 (#28678)
Add CQRS page to docs (#28705)
Improving the performance of ByteString.decodeString, and adding base64
Update aeron-client, aeron-driver to 1.26.0 (#28690)
Add LogWithMarker to Akka Stream #28450
External sharding client handle empty DData key (#28668)
Allow closing StreamConverter InputStream twice #28664
Issue with the documentation for Partition (#28682)
stream: don't create AbruptTerminationException in happy case (#28686)
MapAsync wouldn't complete when upstream does in all scenarios  #28657
Avoid SL4J noise by triggering logger init from single thread #28673
Update to scalatest 3.1.1 (#28662)
Eliminate logging race condition in ActorSystemSpec #28648
Incorrect assumption in test #28620 (#28643)
Doc onFailureWithBackoff (#28356)
Add some nesting samples and clarifications to the docs #28659
Race condition in typed AskSpec #28640 (#28672)
reserve UPD or TPC ports according to artery config
A missing rememberEntities in one test re-added (#28671)
Clarify 'bug' gh tag is for potential prod issues (#28633)
Update mima to 0.7.0
Update scalacheck-1-14 to 3.1.0.1 (#28498)
Log warning when typed message adapters return null (#28590)
Update metrics-core, metrics-jvm to 4.1.4
Multi node test hardening for Sharding #27749 (#28631)
Adds example to Source.completionStageSource (#28639)
Productionize CurrentShardRegionState #27406 (#28645)
Adds gzip and deflate to the operator list (#28644)
Update sbt-paradox-akka to 0.31 (#28623)
Update silencer-lib, silencer-plugin to 1.6.0 (#28635)
Introduce the onReceiveTimeout hook for SeedNodeProcess (#28646)
Update sbt-mima-plugin to 0.6.4 (#28581)
Clarify 'failed' tag meaning more (#28628)
UdpConnectedIntegrationSpec dns fail fix (#28558)
stream: provide mapMaterializedValue for Graph (#28610)
stream: Improve half-closing of outgoing TCP connections (#28624)
Docs: Source.repeat (and friends) (#28615)
Update silencer-lib, silencer-plugin to 1.5.0 (#28619)
Docs: sink seq operator examples (#28616)
Docs: add code examples for drop and dropWhile Operators (#28613)
Allow opt out of code discipline (#28588)
Recommend config checker when migrating to 2.6 (#28607)
Push that TlsSpec timeout a bit up  (#28591)
Remove not needed ReplicatedDataSerializer
note about rolling update when changing transport
Remove not needed ReplicatedDataSerializer
Don't start journal when accessing event adapters, #28597
Example for Source.fromIterator #25468 (#28582)
remove obsolete PersistenceSettings.view
Host name verification off is not necessarily bad #28437
Add comment
Avoid 'dead code' errors when compiling in IntelliJ (#28525)
Issue#26072:Added lombok usage documentation (#28539)
doc: minor typo fix (#28579)
Some improvements to Java tutorial after JFokus workshop (#28585)
Make the ScalaFiddle example copy-pastable, and runnable (#28530)
Do not cache PromiseActorRef since that is a one off #28521
doc: header level of Polymorphic types in Jackson docs (#28569)
Improve error message when coordinator not found
one more
Change link from google groups to discuss (#28573)
doc: links to latest videos
stream: add flatMapPrefix operator (#28380)
Reduce the magic
Tests with children
test Jackson serialization of UUID
Don't initialize Lmdb when rememberEntities not used, #28567
update MiMa latestPatch (#28534)
Update sbt to 1.3.8 (#28561)
Getting started referred to a package name not present in quickstart (#28549)
Formatting
stream: remove extra printStackTrace
stream: fail eagerly during SubSink/SubSource materialization (#28492)
Execute post stop for guardian behaviors
Unwrap tagged events on addition (#28552)
Add paramater documentation for event sourced entities (#28540)
Autolabeler configuration [skip ci]
Improved error message when loading ServiceDiscovery impl
Artery hostname for client side of TCP connection, #28546
Explicit SystemMaterializer.materializer return value
Shield unsafe journal plugins from corner case, #28541
Update sbt-unidoc to 0.4.3
Improve akka logging docs. (#28531)
clarify ExecutionContext for whenTerminated operations (#28537)
doc: Mention dispatcher shutdown timeouts (#28527)
add GPG_TTY instruction
First step of rolling update cluster serlializer no classmanifests (#28514)
Examples for zipN, zipWithN and zipAll  (#28510)
Use unique name for typed and untyped testprobes
allow Sink.queue concurrent pulling (#27352)
Cut the sample using stashing in an EventSourcedBehavior for now #23853 (#28512)
Update aeron-client, aeron-driver to 1.25.1 and Agrona to 1.3.0 (#28516)
Add kafka to sharding example project (#28518)
docs: fix leader action transition descriptions (#28306)
Add distributed workers to examples (#28506)
stream: filter out elements without demand
Don't warn about discarded return values (#28403)
External shard allocation strategy (#28211)
Rename RecoveryPermitter.pending for telemetry (#28503)
Update sbt to 1.3.7 (#28495)
Support cancellation propagation in StreamRefs #28317
Failed: JoinConfigCompatCheckerClusterShardingSpec #28477
Update 'managing blocking' examples
Update after merge
Remove ScalaTestJUnit from provided dependencies.
Missing Java getters for optional fields on akka.actor.Address (#28493)
Remove deprecated actorRefWithAck from 'pending' lists (#28337)
Add source.completionStage example #25468 (#28338)
Operator doc for flatmap merge (#28488)
Update multi-jmv tests for ScalaTest 3.1.0
Increase logger startup timeout in cluster metric tests #27955
Add MiMa filter for ScalaTest 3.1.0
Examples for the sliding operator #25468
Incorrect assumptions in LazyAndFutureSourcesTest (#28479)
Check headers on travis (#28466)
Update aeron-client, aeron-driver to 1.25.0 (#28475)
Update sbt-pgp to 2.0.1 (#28396)
Update jul-to-slf4j, log4j-over-slf4j, ... to 1.7.30 (#28398)
Update metrics-core, metrics-jvm to 4.1.2 (#28375)
Update scalacheck to 1.14.3 (#28378)
Logging of UnhandledMessage, #28260 (#28414)
Update sbt-reproducible-builds to 0.23 (#28485)
Deprecate EventEnvelope ctor without timestamp (#28454)
doc: example for splitWhen and splitAfter, #25468 (#28480)
doc: links to videos (#28481)
Minor doc and scaladoc cleanup. (#28484)
Rename Start message in HelloWorld (#28469)
Add missing word Map to tutorial_4.md (#28472)
Publish operations from InmemJournal (#28332)
Update to ScalaTest 3.1.0, fix #28289.
Typed receptionist deregistration (#28406)
Shard region registration to more potential oldest, #28416
Document update strategy for sattelite projects (#28457)
docs: fix typo; 'mailboxes' to 'dispatchers' (#28461)
Update sbt-header to 5.4.0 (#28458)
Limit and LimitWeighted operator docs #25468
Re enable stress spec artery #28344
Use MessageBuffer in RecoveryPermitter, #28417 (#28418)
ByteString performance regression toArray on 2.13 (#28419)
Link to replicator case object (#28439)
doc: change link text to Event Sourcing
Keeps live stream open for empty persistence ids #28428 (#28429)
Timestamp in EventEnvelope, #28331 (#28383)
Update commons-codec to 1.14 (#28445)
Update jctools-core to 3.0.0 (#28446)
Update sbt-paradox-akka to 0.29 (#28442)
Report UDP connection error for negatively-cached hostnames (#28444)
doc: fix ScalaFiddle integration for Akka 2.6 #27510
Clean up akka.build.version #26675 (#28415)
Update jackson-databind to 2.10.2 (#28447)
Add stream name to buffer overflow log message (#28159)
Update junit to 4.13 (#28435)
Update sbt to 1.3.6 (#28433)
Update all copyright headers to 2020 after new year's #27881 (#28434)
Serializer for tck JournalPerfSpec.Cmd, #28291 (#28333)
mention 2.6.0 in rolling update change log (#28413)
[doc] improve serialization (#28404)
only check config relation image-liveness-timeout if aeron-upd transport (#28412)
Document how to report security issues (#28410)
Remove the default reschedule=true arg to internal checkReceiveTimeout (#28399)
Update sbt-java-formatter to 0.5.0
Ignore mockito updates (#28408)
fix wrong logging of REACHABLE, #28393
Better short titles for deprecated operators (#28336)
dead scaladoc links to log markers (#28339)
Added correct ordering for TimeBasedUUID offset (#28387)
ReceiveTimeout in preStart lost on restart #28266 (#28385)
Update mockito-core to 3.2.4
Update HdrHistogram to 2.1.12 (#28376)
Add .withRouteeProps(props) to pool router builder API (akka typed) #28370
[doc] unhandled vs empty vs ignore #27443
EventSourcedBehavior not failing with DeathPactException for unhandled Terminated() signals  (#28358)
Timout await extension initialization, #28301 (#28340)
Enable 'adapted args' warnings globally (#28391)
Refactor First and Join seed node processes to shared logic for dry and logic hardening (#28379)
Docs on fromSinkAndSource #25468 (#28349)
use sbt-dynver (#27042)
[doc] document TypeKey in persistence (#28369)
Remove use of getClass in secondary constructors (#28355)
JFR-based remoting flight recorder #26282
#28373 Include akka-testkit into version match (#28374)
Update sbt to 1.3.5 (#28377)
Minor scaladoc fix and cleanup. (#28368)
Perform MiMa checks against 2.6.1 (#28324)
Add checkTestsHaveRun task to check tests have run (#28350)
stream operator docs: example above RS semantics (#28357)
fix concurrent access to CompressionTable Object2IntHashMap (#28363)
[doc] `an` for a better flow (#28359)
[doc] adjust link text to next section
Adding a clarification to the Akka Classic stash documentation about what happens when an actor is restarted.
Log non-completed rebalance at warning level (#28335)
Example for intersperse (#28343)
Remove allocation of Some from CompressionTable (#28330)
remove logging of full config in ConfigDocSpec (#28314)
Clarify typed timeout is not for akka typed (#28354)
Remove wrong import from hello world doc sample, #28169 (#28345)
Supress ActorSelectionMessage with DeadLetterSuppression, #28226 (#28341)
Partition must not pull from closed in, #27189
typo in reference.conf comment
Add Java DSL Flow#mapError version without PartialFunction (#24992) (#26310)
Source.unfold examples (#28081)
[doc] add `to` for a better flow (#28325)
attempt to fix v1.class does not exist (#28309)
[doc] improve blog post actor text (#28320)
[doc] add `a` for a better flow (#28322)
[doc] add `the` for a better flow (#28319)
Document JavaFlowSupport  (#28315)
add whiteliest in serialization rolling update instruction (#28313)
Document asSubscriber stage (#28128)
actor: allow seamless access to untyped extensions given typed ActorSystem (#28294)
mima filter for ClusterLogger, #28207
Manifest-less Jackson serializers, #28113 (#28299)
use %mdc logback config to output all MDC entries
Structured log events, #28207 (#28209)
Downgrade sbt-osgi (#28302)
build: fix mima checking for Akka 2.6.0 (#28300)
Update sbt-paradox-akka to 0.28
New cluster node state diagram and other small improvements  #24848
[doc] do not repeat `it` for a better flow (#28295)
[doc] rephrase don't model failure in protocol (#28296)
add local affinity support for group router #28174
Update link to akka vavr sample project (#28284)
Docs: add some API links to stream operator docs (#28180)
Update sbt-scalafix to 0.9.11 (#28285)
Docs: use ref-links to pages (#28288)
Update mockito-core to 3.2.0 (#28283)
[doc] add `an` for a better flow (#28286)
[doc] typo, add missing `response` (#28287)
+sbt Add rewriteTokens (#28282)
[doc] rephrase ask system to SpawnProtocol.spawn (#28277)
[doc] typo add `an` for a better flow (#28275)
[doc] precise that guardian refers to user guardian (#28276)
[doc] remove superfluous `from` (#28278)
Delay operator emit early fix #28269
Revert "Remove scalac javabootclasspath hack (#28156)" (#28268)
Scala 2.13.0 -> Scala 2.13.1 (#28140)
Better deadLetter logging of wrapped messages, #28109 (#28253)
Update aeron-client, aeron-driver to 1.24.0 (#28247)
Avoid dead letter for rebalance timeout msg
Include host and port in mdc if clustered or remote  #28073
[doc] rephrase actor handles msgs of common super type (#28265)
Use CrossVersion.patch for Silencer plugin
Update sbt-header to 5.3.1 (#28259)
[doc] typo, add missing `a` (#28257)
[doc] typo, add missing `are` (#28263)
Docs: link pages with TLS (#28258)
Flow.delayWith allows custom delay for each element. (#25000)
Use timer key for tests that require it
adding address typed actorsystem #28206
Revert to old extension load failure handling logic
Include host and port in BindException message (#27785) (#27984)
Example for mapConcat (#28243)
Re-enable multicast tests  (#28252)
Example for unfoldResourceAsync (#28080)
doc: filter and filterNot streams operator, #25468
Add convenience method to start timer without key (#27875)
doc: Partition Streams operator, #25468 (#28090)
Example for Source.unfoldAsync (#28111)
more efficient and correct clear in Slf4jLogger (#28094)
Remove scalac javabootclasspath hack (#28156)
Split akka-streams interop pages (#28219)
Missing creation of second actor (#28251)
Document scanAsync (#28239)
Don't loadExtensions at startup if already terminated, #27840 (#28248)
Use dedicated message for PersistentShardCoodinator termination #28093 (#28244)
Make akka-protobuf-v3.jar reproducible (#28108)
Add scanAsync examples to akka-docs (#25468) (#27990)
Add recover example to akka-docs (#25468) (#28004)
[doc] typo `actor` instead of `cator` (#28246)
[doc] typo remove superfluous `a` (#28245)
fix race condition in WriteAggregatorSpec, #25581 (#28242)
clarify async appender (#28241)
Use embedded media driver for StressSpec (#27037)
Don't include protobuf settings for all projects #28227
Update only jackson-core-databind from scala-steward (#28217)
Operator docs for Source.tick (#28225)
Update sbt to 1.3.4 (#28230)
Use stop supervision for PropsAdapter, #28035 (#28182)
[doc] typo actors `need` instead of `needs` (#28224)
=doc: take and takeWhile (#28078)
Small interpreter metadata fixes (#28218)
fix listing, add newline beforehand (#28221)
[doc] typo, add missing ` (#28234)
Change uninitialized throw of IllegalArgumentException from ClusterSharding.shardRegionProxy to IllegalStateException #28198 (#28205)
Operator docs for Source.combine (#28195)
Document and fix getAsyncCallback thread safety issues #27999
Add omitted `logPrefixSkipList` in getting logger class in `EventSourcedBehavior` (#28168)
add Java API for DistributedPubSubMediator.Count, #27728
[doc] typo add missing you (#28222)
[doc] typo remove superfluous `the` (#28223)
Remove scoverage since we don't really use it (#28220)
Add docs for stream operator Sink.collection  (#28210)
Don't update scalafmt from scala-steward (#28216)
move mima filter to 2.6.0 (#28214)
27729 consistent hashing routing (#28141)
Dump name server logs if resolve fails (#28192)
Reconsider cluster.role.<role-name>.min-nr-of-members fallback #28177 (#28203)
Add interceptors for interpretUnstashedMessage and onReplayingSnapshot.
doc: Broadcast Stream operator, #25468 (#28091)
Don't log AskTimeout strack trace for dns resolve timeout (#28120)
Use specific exception for discovery timeout (#28152)
Mention no implicit sender in coexistence.md #28074 (#28173)
Docs: Remove extra type params in RetryFlow signature (#28097)
preserve order of ask replies, #28196 (#28197)
Replace 'intercept' with 'expect' (#28202)
Update metrics-core, metrics-jvm to 4.1.1 (#28043)
Update gson to 2.8.6 (#27903)
rename scaladsl.LoggingTestKit.intercept to expect, #28194 (#28199)
Keep custom logger name in EventSourcedBehavior #28161
Remove native packager plugin (#28189)
Update sbt-pgp to 2.0.0 (#27713)
Update silencer to 1.4.4, to support scala 2.13.1 (#28190)
Update jackson-annotations, jackson-core, ... to 2.10.1 (#28163)
doc: reword routing link to new API (#28185)
Update ssl-config to 0.4.1 (#28183)
fixed the bug that messageAdapter can not work for primitive types (#28188)
doc: Flow.fold (#27850)
Remove classgraph dependency from sbt plugin scope (#28118)
fix links to samples (#28145)
Disable JavaUdpMulticastTest until we figure out why it fails
Only deliver buffered RestartShard to the local ShardRegion #27782 (#28047)
Modified the existing Effect directive in sample code of docs (#28157)
Update sbt-whitesource to 0.1.18 (#28028)
doc: improve doc example of javadsl Extension (#28100)
sbt option to explicitly specify the jdk8 jdk to use (#28107)
doc: fix the word spell error in actor-lifecycle (#28151)
Update sbt-header to 5.3.0 (#28150)
Remove trailing div from fold.md (#28139)
Update sbt-scalafix to 0.9.8 (#28101)
update mima latestPatch 2.6.0 (#28135)
Avoid falling back to IterableOnceOps.copyToArray #28114
Improved docs for some queries (#28033)
Exclude agrona from scala-steward (#28110)
Drop sbt-updates altogether versus  update to 0.4.3 (#27904)
Run whitesource for tags
Docs: set 2.6 release date in project info (#28129)
move Coordinated Shutdown down in ToC (#28132)
Link to Tour of Akka Typed (#28131)
Update links to samples, #28106 (#28121)
Docs polish for 2.6.0 (#28125)
add dependency to akka-slf4j from akka-actor-typed
Need akka-slf4j on classpath for internal logging
doc: update faq.md (#28122)
Apply suggestions from code review
Use PersistenceId.ofUnique instead of the private constructor (#28087)
doc: fix link to persistence style guide (#28088)
Update jul-to-slf4j, log4j-over-slf4j, ... to 1.7.29
Rename Father -> Parent
Watch in the wrong place
doc: clarify exception from modify function in ddata (#28079)
Handle Replicator.Unsubscribe in Typed scaladsl, #28061
Minor entityId sample code clarification in docs.
Use sender at all places in EventSourceBehavior ExternalInteractions, #28059 (#28060)
Clarify snapshop every n events
Avoid deadlock on concurrent extension with materializer init  (#28046)
Failed: Could not create directory, file exists and is not a directory #27661 (#28055)
Adding bullet point in doc.
Remoting docs config snippet should have provider = remote (#28042)
Discovered that RC comparison was problematic in Akka HTTP
Docs: fix typo on Persistence instead of Persitence (#28026)
Add a page for Typed Distributed PubSub (#28012)
latestPatchOf 2.5.26 (#28031)
Add grouped example to akka-docs (#25468) (#28013)
Removed unnecessary comment in test. (#28023)
Add external predicate to matchEquals and matchAny in ReceiverBuilder (#25822)
Revert "Add external predicate to matchEquals and matchAny in ReceiverBuilder (#25822)"
Add external predicate to matchEquals and matchAny in ReceiverBuilder (#25822)
Cluster doc cleanup.
doc: Show how to fail future of external ask (#28017)
Add names for input and output boundaries
StreamRefs spec fail (#28018)
Align lazy and future operators #26446
doc: adjustments of migration guide
Expose new DNS protocol via the DNS extension (#28009)
RetryFlow: retries of individual stream elements with backouff (#27742)
stream: add CancellationStrategy attribute to configure default stage cancellation behaviors
doc: minor clarification of ActorRef.toTyped (#28005)
use max seqNr in RecoverySuccess (#28002)
cleanup OSGi build properties
remove FIXME for Quickstart link
stream testkit: add support for triggering and asserting cancellation with cause
stream: refactoring: only one implementation for completeStage / cancelStage / failStage
Provide cancellation for CoordinatedShutdown tasks #27335
Document using an EventSourcedBehavior as a PersistentFSM (#27931)
Add API for multi-dc Sharding/Singleton in Typed, #27705 (#27974)
This -5 pads out the max level of a logger, remove when using [] (#27982)
inmem journal must not reset highestSequenceNr after journal cleanup, #27994 (#27995)
add missing apply for consistency types, #27997 (#27998)
Handle ActorInitializationException from Classic child in Typed parent, #27970
Tags from actor props goes into MDC, #27791  (#27856)
More structured logger names, #27922 (#27934)
Provide Scheduler implicitly from implicit typed actorsystem (#27986)
lastSequenceNr should reflect the snapshot sequence and not start with 0 when journal is empty (#27496)
doc: improvements to Distributed Data docs (#27971)
Upgrade to Config 1.4.0 (#27985)
Update aeron-client, aeron-driver to 1.22.1 (#27979)
Update sbt to 1.3.3
protoc version 3.10.0
Remove ActorSubscriber #26187
small simplification since Scala 2.11 isn't supported
Two new test cases missed the PersistenceId.ofUniqueId
Last sequence number fix (#27964)
fix TlsSpec on JDK 11, #27956 (#27961)
Rename LoggingEventFilter to LoggingTestKit (#27888)
doc: minor changes to sharding docs (#27967)
Document typed extensions (#27946)
Fail startup if mixed versions are used, #27965 (#27966)
Avoid using mockito in akka-cluster-sharding (#27845)
missing barrier in RemoteFeaturesSpec, #27838 (#27963)
Scaladoc improvements (#27929)
Update agrona to 1.0.8 (#27905)
rename PersistenceId.apply to PersistenceId.ofUniqueId, #27924 (#27953)
doc: minor improvements to cluster-singleton.md
Typed docs: some spelling and language fixes (#27919)
Deprecate JavaLogger (java.utl.logging)
Go back to taking a Behavior to typed pool routers, #27807 (#27942)
Update aeron-client, aeron-driver to 1.22.0
API compile coverage for Java DSL runWith #27944
Akka Paradox theme 0.25 (with transitive Paradox, apidoc, project-info)
doc: clarify EventSourcedBehavior effects, #25953
harden access to outboundControlIngress, #27732 (#27834)
use CBOR in some tests instead of custom serializers (#27882)
Ignore length field value when provided computeFrameSize (#27884) (#27938)
Make SingleConsumerMultiProducer the default mail box for typed (#27857)
doc: small improvements of core cluster pages (#27939)
doc: fix Persistence ToC
Revert "Harden DowningProviderSpec, and detect terminated before initialized, #27840"
doc: Add pipeToSelf in interaction-patterns.md, #27877 (#27912)
doc: minor cleanup of mailboxes.md (#27915)
make getContext and createReceive protocted in javadsl.AbstractBehavior (#27917)
Justify why pool/group routers have different defaults (#27879)
doc: Diagrams for intro and interaction examples (#27907)
doc: clarify side effect in event handler, #25720 (#27926)
Travis: cache coursier library directory (#27930)
doc: ReceiveBuilder is optional, #25755 (#27927)
Update protobuf-java to 3.10.0
Update scalacheck to 1.14.2 (#27827)
Update sbt-scalafmt to 2.0.6 (#27828)
Harden DowningProviderSpec, and detect terminated before initialized, #27840 (#27911)
Streams TLS and Tcp with SSLEngine, #21753 (#27766)
Prepare for other compression algorithms in JacksonSerializer, #27066 (#27889)
don't crossPaths for akka-protobuf-v3, #27921
Standardized log level highlighting
crossPaths back to default  (#27893)
Added mapError to SourceWithContext and FlowWithContext. (#27900)
Update sbt-paradox-apidoc to 0.3 (#27691)
doc: Add page for testing of EventSourcedBehavior, #27899 (#27902)
doc: Watching Actors, #27897 (#27898)
Note sharding persistent mode deprecation in migration guide (#27871)
doc: format attributes table in migration-guide, #27858
doc: move Coordinated Shutdown to a separate page
Some tweaks to the Cluster Client to gRPC migration notes
adjust dependencies to akka-protobuf-v3, #27661
Update sbt-paradox-project-info to 1.1.3 (#27885)
Add a sample for Source.unfoldResource #25468
Migrate streams doc under typed to operators (#27901)
Remove deprecated secure cookie (#27809)
Update mockito-core to 3.1.0 (#27841)
Add missing '## Reactive Streams semantics' headings (#27847)
Add system creation with config and props (#27878)
doc: separate page for reference.conf listing, #27798 (#27867)
typo, user guardian instead of guardian (#27894)
doc: some more docs for PreRestart signal
Add Intro section to actor-lifecycle.md
Actor discovery: Don't start a page with referencing and describing h… (#27880)
Spell BehaviorTestKit correctly
doc: more links to ide tips (#27876)
Document how to run typed sharding with roles (#27869)
Updates external serialization documentation #27886
Incorporate some classic actor docs in Actors Typed where applicable (#27866)
doc: describe number-of-shards config, #26920
doc: improve receptionist docs, #25895 (#27870)
Docs: add project info boxes (#27873)
doc: Source.maybe, #25468 (#27832)
Remove auto-downing, #27788 (#27855)
doc: java Duration in supervision example
changing wording in docs. From 'migrating' to 'upgrade'
supervision in AdapterClusterImpl (#27862)
move AdapterExtension to internal package (#27865)
Add default mailbox back to classic + define default mailbox for typed in reference
Don't duplicate CrossJava logic (#27842)
Jackson 2.10.0 (#27814)
adapter for Scheduler
Make SingleConsumerMultiProducer the default mail box for typed
Make SingleConsumerMultiProducer the default mail box for typed
doc: improve docs of Cluster joining (#27821)
Only allow deserialization for know classes in ProtobufSerializer, #27730 (#27731)
doc: use ref links
doc: minor fix of remoting-artery.md
Clarify ORMap docs on replacing entries
Convert 2.5.x MiMa excludes to subdirectory style
A few more removals of use of typed, where makes sense, #24717  (#27819)
Update sbt to 1.3.2 (#26935)
Update scalafmt-core to 2.1.0 (#27831)
Same logic for onRecoveryFailure in ReplayingSnapshot as ReplayingEvents, #27526 (#27530)
EventsourcedBehaviorRetentionSpec race fix (#27532)
Make scm section consistent with previous releases
Define ScmInfo (#27817)
Remove unnecessary dependency
Try to get root cause of timeout in ReplciatorPruningSpec #26957
Update to Scala 2.12.10 (#27734)
Docs: Akka Discovery links to Akka Management (#27824)
Add HTML meta page descriptions for the most important landing pages (#27818)
Make running mima in PrValidation optional (default enabled) (#27812)
doc: duplicate singleton lease section
more cross-links to Classic docs, #24717
typo
Remove LogMarker leftover
Deprecate akka.Main
ActorContext as constructor parameter in AbstractBehavior, #27689 (#27806)
General concepts docs ported to typed (#27765)
Cluster Singleton - General Typed docs cleanup after all API changes #24717 (#27801)
Config to exclude class prefix from serialize-messages, #24273 (#27517)
System materializer guardian (#27723)
Cleanup persistence docs, #24717 (#27779)
Distributed Data: General Typed docs cleanup after all API changes (#27783)
Adding select scala steward ignores to not receive auto-PR updates on a few dependencies (#27787)
BlockingIODispatcher actually not needed #27632
 LogCapture in more tests (#27660)
Cross link also from Typed doc pages to Classic (#27784)
update to Jackson 2.9.10 (#27796)
Typed actorsystem clarifications (#27771)
Some follow up on the japi lambda changes
Remove EventSourcedEntity, #27724
Use japi lambdas where it makes sense (#27790)
Update protobuf-java to 3.9.2 (#27778)
Remove ExpectingReply (#27781)
Update sbt-whitesource to 0.1.17 (#27676)
Cluster Sharding: General Typed docs cleanup after all API changes (#27764)
doc: Cleanup serialization.md, #24717
New base cluster sharding multi-node/jvm test to cleanup and tighten testing (#27740)
Remove deprecated actorRefWithAck in akka-stream-typed (#27672)
Migration guide entries (#27759)
doc: stylish fsm.md, #24717 (#27746)
doc: stylish dispatchers.md, #24717 (#27748)
Add PreRestart to typed docs #26899
Use git from the path instead of jgit/sbt-git (#27756)
doc: stylish testing.md, #24717 (#27750)
Upgrade scalafix plugin (#27755)
Consolidated passivation check on settings used in region and shard (#27738)
Final removal of ActorPublisher and ActorSubscriber, #26187
Examples of response aggregator and latency tail chopping (#27214)
Extra caveat around state in Java EventSourcedBehavior  (#27706)
Minimal docs for rolling migration from classic sharding to typed  (#27704)
Code example for collect and collectType (#27744)
WIP cluster usage - Swap content from Classic pages to Typed #24717 (#27708)
Split async and sync testing into separate pages, #24717
doc: stylish persistence.md and persistence-snapshot.md, #24717
Reference docs for SL4J logging in Typed, #27648 (#27696)
Align passivation method names (#27722)
Update sbt-scalafmt to 2.0.5 (#27721)
Eliminate race in multi node StreamRefSpec #26392
withinTimeRange in BackoffOnRestart fixed #27590
Use ActorSystem's ThreadFactory for the Aeron threads, #27603 (#27665)
Cluster sharding with remember entities (persistence) must setup shared journal (#27692)
doc: stylish distributed-data.md, #24717
Upgrade to akka-paradox 0.24 with search box transparency fix (#27686)
Added ttl configs for AsynchDnsResolve #27694 (#27695)
wait for async excess events when occurrences 0
fix JsonFraming to accept multiple top-level arrays (#26098) (#26099)
Adding back jcenter repo accidentally removed in consolidation #27657 (#27698)
Update to MiMa 0.6.0 (#27558)
Update to paradox 0.6.5 (#27664)
Update scalafmt-core to 2.0.1
API changes related to DataDeleted, #27371
remove todo in Behavior.start (#27674)
Akka Stream log operator documentation fix (#27654)
Deprecates status message based api #27503 (#27519)
Update to paradox 0.6.5
Avoid publication of duplicate UnreachableDataCenter, #24955
Failed: MultiDcClusterSharding #27663 (#27666)
Improve tiny readability in mailboxes doc
Multi-jvm assembly: deduplicate: META-INF default file #27667 (#27668)
 don't allow wrong system in ActorRefResolver, #27373 (#27391)
Bump up dependencies. (#27586)
Consolidate Paradox settings, add includes workaround #27656 (#27657)
Remove left over mention of using materializer for settings (#27646)
Complete logging with SLF4J in Typed, #26537
First step of changing to SL4J in Typed logging, #26537
unmoored doc comment in PhasedFusingActorMaterializer (#27641)
watchTermination now fails the future on downstream failure #27640
rename the new Materializer.create to createMaterializer, #27642
StreamRefs cancellation behavior #27639
Propagate downstream cancellation failures (#27547)
fix deprecation warning for protobuf enum
Deprecate actor materializer (#27538)
Remove the Artery flight recorder (#27591)
doc: stylish fault-tolerance.md, #24717
Change "Untyped" to "Classic" (#27627)
Try out Config lib 1.3.5-RC1 (#27626)
Deprecate Cluster Client #27242
Scaladoc: Change untyped to classic - General Typed docs cleanup after all API changes #24717 (#27622)
Materializer settings as attributes (#27499)
doc: stylish stash.md, #24717
Learning Akka Typed from Classic, #25624 (#27537)
doc: stylish routers.md, #24717
Remove mentions of Typed - replaces @@@note of classic/typed with an includes (#27617)
doc: stylish actor-discovery.md, #24717
doc: stylish cluster-singleton.md, #24717
 doc: stylish getting started tutuorial, #24717 (#27596)
doc: stylish cluster-sharding.md, #24717
doc: stylish cluster.md, #24717
Use one param list for first two arguments of ActorContext.ask
Remove Future from typed.ActorSystem.systemActorOf, #27437
Use dilated timeout in enterBarrier (#27386)
doc: stylish interaction-patterns.md, #24717
[Only] Deprecate Persistent mode of Cluster Sharding  (#27585)
rename type parameter for join and joinMat
Update to Lightbend Community Code of Conduct
restore getting started guide images
Remove CallingThreadDispatcher from main dispatchers doc, #27223 (#27593)
Move generic mailbox docs from classic to main mailboxes doc (#27493)
Improve Java perspective dispatcher docs (#27521)
Java TestKit expect msg all of broken (#27563)
Clarify that akka-protobuf-v3 is not for applications, #26181 (#27520)
Don't run scheduled tasks on shutdown, #16495
Docs: Slight clarification of what is durable in sharding. (#27582)
Create a new flightrecorder instance per connection (#27577)
fix JavaDoc of ReceiveBuilder, #27536 (#27559)
Don't rely on OS DNS lookup failure in spec #27031 (#27571)
Circuitbreaker spec cleanup (#27560)
remove unused sample for classic getting started guide
fix config in ArteryUpdSendConsistencySpec (#27575)
Handle rethrows in `recover` more gracefully (#27506)
[2.6 Docs Cleanup] Move things to new Package/Deploy/Run section (#27550)
doc: stylish actor-lifecycle.md, #24717 (#27543)
harden MultiDcSplitBrainSpec, #24955
harden ClusterSingletonManagerLeave2Spec, #27555 (#27565)
Upgrade to reactive streams tck 1.0.3 (#27553)
Scaladoc: link to source and canonical (#27546)
Race condition in BackoffSupervisorSpec fixed #27556 (#27564)
Add monitoring section (#27486)
Check MiMa for 2.13 artifacts, too
Update sbt-reproducible-builds (#27545)
Remove explicit scala-xml test dependency (#27561)
System wide materializer (#27491)
Clean up of utilities docs
Add akka-protobuf-v3 to version check
fix signal handler
doc: stylish coexisting.md, #24717
doc: stylish actors.md, #24717
doc: Rewrite general actors page, #24717
streams: move `lastCancellationCause` helper variable to GraphStageLogic (#27531)
update latestPatchOf25 (master) (#27535)
Give the large source test some more time #27497 (#27524)
Update some SBT plugins (#27502)
Upgrade sbt-paradox-akka 0.18 -> 0.23 (#27473)
Convert 'Blocking needs Careful Management' from classic (#27498)
Add configuration for all Jackson Features (#27409)
update to reactive-streams-tck 1.0.3-RC1 (#27513)
Propagate stream cancellation causes (#27266)
Remove 'How To' section of the docs (#27223)
Update to jackson-databind 2.9.9.3
Use protobuf3 for internal serialization (#27366)
RebalanceWorker should watch shard regions (#27261)
Deprecate PersistentFSM
follow up on style guide changes for private vs public (#27495)
Move generic dispatcher docs from Classic (#27223)
Update to 2.12.9 for travis as well (#27476)
Collapse 'project information' and 'additional information' #27223
Update links to the Lightbend Platform docs (#27477)
2.5.24 (#27479)
Upgraded plugin to 2.0.3, nightly to RC8 (bug fixes) (#27468)
Upgraded silencer plugin. (#27470)
Upgraded upgrade-sbt-updates. (#27469)
Update to Scala 2.12.9 (#27384)
Update sbt-jmh plugin (#27467)
Hook in akka-persistence-typed (#27464)
Typo alowing -> allowing (#27458)
Update paradox (#27457)
Clean up of persistence and cluster docs (#27451)
Remove extensions to protobuf config checker messages (#27400)
Log changes to the ShardCoordinator ddata state (#27444)
actor: ignore more messages while TcpConnection is shutting do… (#27439)
actor: ignore more messages while TcpConnection is shutting down
Added GPG and release script prerequisite setup steps explicitly to release doc (#27417)
Review suggestions tested and added, stepped on the merge gas with two approvals but suggestions lingering #27424 (#27433)
Cleaned up ShardsQueryResult and added region shards query timeout for failure context in logging. (#27427)
Remove catchall silents from prod code (#27432)
Add 'core' and 'dumps' to gitignore (#27423)
Reword the "private messages" typed style docs (#27392)
Update example documentation of retry. (#27403)
Migration guide for Persistent FSM to typed persistence (#27336)
Productionize: GetShardRegionStats returns empty shard set on ask timeout (#27395)
Provide more helpful message when synchronous testing ActorRef is used for asking (#27414)
OutputStreamGraphStage follow-up fixes (#27412)
Deemphasize CallingThreadDispatcher in the docs (#27401)
Add clarification to doc on cluster cross boundary use of DeathWatch (#27385)
Re-write output stream subscriber as graph stage (#26827)
Remove source/sink fromPublisher/fromSubscriber (#27288)
Expand on rolling update recommendations, best practices (#27382)
Change the onWriteRejected and onWriteFailed signature to pass PersistentRepr for context propagation. (#27408)
update mima url (#27407)
Reword the "Where to define messages" style docs (#27393)
Use min of numberOfMessages and buffer size when unstash. (#27398)
Instructions for generating protobuf (#27402)
Loosen expectation of TlsTcpWithHostnameVerificationSpec (#27394) (#27396)
Include version error in the docs (#27365)
Persistence typed context (#27404)
streams: clarify how to complete a Source.actorRef in Scaladocs and docs (#27325)
User serializer for protobuf3 (#27362)
Use a dedicated mismatching indicator instead of null for WidenInterceptor. (#27292)
Deemphasize CallingThreadDispatcher in the docs (#27387)
Reword the "ask versus ?" typed style docs (#27390)
fix typo in stream doc (#27379)
Serialization support for wrapped stream refs  (#27353)
Don't use pattern matching to generate less bytecode. (#27293)
Test hostname verification (#27355)
reduce message sizes for Gossip and DeltaPropagation in ddata, #27175 (#27176)
Select mailbox in Akka typed actors #27124
Align SpawnProtocol with style guide #27318
Added actor termination coordinated shutdown task #27089
Add fluent API for 2-stream merging (#27020)
Replace link to scalariform with link to scalafmt (#27239)
Cluster aware routers for typed #26355
Allow java serialization for TypedActorRemoteDeploySpec (#27354)
Hostname verification should be done by the client only (#26906)
Style Guide: Additional sections, #22805
Move event stream messages to EventStream.*, #27211
fix FIXMEs in Jackson serializer and docs (#27316)
Style Guide: Passing around too many parameters, #22805
Use application-test.conf for typed testkit, #25708
fix serialization failure in ClusterShardingSpec (#27344)
Remove infinite redirect from docs (#27341)
Doc trait+object (enum) serialization for Jackson (#27244)
adjust Cluster in docs ToC (#27323)
Snapshot adapter for typed persistence (#27319)
Disable Java serialization by default, #22333 (#27285)
Update to Jackson databind 2.9.9.1 to fix CVE-2019-12384 and CVE-2019-12814
Deprecate classic remoting classes (#27237)
One more deprecation for IOResult(n, ex) (#27314)
Rename widen to transformMessages, #27253
Update paradox-apidoc (#27270)
Make the router doc test actually verify that it works #27184
Style Guide: Functional vs object-oriented style, #22805 (#27271)
Serialization for more Cluster Sharding query messages (#27306)
Small fix and test coverage for unfoldResourceAsync  #25862
In Java 9 `java.lang.Class.newInstance` was deprecated in favour of `java.lang.reflect.Constructor.newInstance`. In order to be able to at least compile Akka on Java 9+ provided changes are currently sufficient.
Remove warnings in persistence-tck (#27286)
Make shard homes retry request warning message less spammy (#27260)
Use SPDX short identifier for license (#27277)
Minor spelling fix in doc (#27297)
Harden copyUSAciiBytesToStr, so that it works on Raspberry Pi, #27301
Cluster Sharding: make askAllShards not a hard coded timeout #27273 (#27274)
cluster.joinSeedNodes(...) does not throw warnings when seed hostname contains underscores #25287 (#27222)
Re-write file sink as a graph stage (#27247)
Don't WARN when the user explicitly enabled unsafe features (#27289)
Akka 27103/streams zip all #27103
Rewrite actor ref sink as a graph stage (#27267)
Deprecation removal hunt (#27250)
Remove additional-serialization-bindings, #26684
Serialization of case object with Jackson, #27283
Akka Persistence instrumentation improvements (#26946) (#27280)
Pattern for responding to a sharded actor (#27077)
Typed Stash: Create via factory method on Behaviors (#27200)
EventSeq in Typed EventAdapter (#27130)
use Scala 2.13 for last step in release script
fix two log messages related to use-unsafe-remote-features-without-cluster (#27241)
Style: Update HelloWorld sample to OO style for Java, #22805
First step in restructuring the docs for 2.6 #26487
Subscription timeouts not working #19980
Replace ActorPublishers in leveldb with stages #26187
Cluster heartbeat timings (#26757)
Log Dropped from DeadLetterListener, #26432 (#27160)
Add sender to the exception message when the message sent is null.
Add expectNoMessage to subscriber probe
FlowDelay with EmitEarly caused a NPE (#27170)
Remove ApiMayChange from typed testkit (#27096)
Support same dispatcher as parent in Typed, #27123 (#27127)
Allow widen to be used with EventSourcedBehavior, #25887 (#27251)
Remove Behavior.orElse, #26867 (#27252)
ClassTag in BehaviorInterceptor, #25887 (#27148)
Move a couple of Akka Streams examples to their own files (#26703)
Re-write InputStreamSource as GraphStage (#26811)
move synchronous behavior testing docs
update modules list for akka enhancements (#27229)
ActorHierarchyExperiments: Send a `start` message to the first actor (#27204)
Reduce boilerplate for interaction with Typed Replicator #27116 (#27118)
ActorHierarchyExperiments: Send a `start` message to the first actor (#27204)
Clarify remembered entities limit is for active entities (#27221)
Upgrade sbt-scoverage, sbt-scalafix and sbt-header (#27225)
Rolling update when adding akka-cluster-typed dependency, #27191 (#27210)
Use short configurable timeout for expectNoMessage #27212 (#27213)
mapMaterializedValue implementation for withContext Flow/Source (#27201)
better logger class for typed.ActorSystem
Update deploy.md to avoid Maven generating erroneous tags (#27199)
Initial release drafter template
Adding WatchedWith effect in akka actor typed testkit #27190 (#27195)
Docs: make rolling restarts/upgrades/updates more prominent, easier to find #27039 (#27186)
Akka Typed Add example of how to java `getSelf` for persistence typed #27061 (#27196)
Disable remote watch and remote deployment outside Cluster (#27126)
Don't passivate idle for remembering entities (#27177)
Mention Artery port 25520 in migration guide
increase monitored-by-nr-of-members config, #27172
Handle InitJoin messages correctly, #27169
Revert to 0.4.* of ssl config for 2.13 (#27152)
Simplify the definition of ActorRef#narrow (#27080)
Make EntityRef & EntityTypeKey contravariant
Doc improvements (#27166)
Log rebalance progress at INFO per rebalance info
Allow specifying a log level when logging exceptions being seen the SupervisorStrategy (#27147)
Some old netty config paths in tests fixed (#27159)
Revise modules listing (#27146)
Option to target system JDK instead of JDK8 (#27083)
Add a create method with context and namePrefix to ActorMaterializer's Java API.
changing logging error as previous wasn't proper english (#27138)
Consolidate 'fat jar' docs (#24248)
Make Artery connect failure logging less verbose, #26865 (#27073)
Make Behaviors.intercept a factory () => BehaviorInterceptor, #26728 (#27102)
Type inference for EntityRef.ask, #26709
cross release again (#27140)
Use Duration in javadsl.EntityRef.ask (#27098)
remove Jackson afterburner, since no visible improvement #24155 (#27064)
Upgrade to Aeron 1.19.1 (#27043)
Remove Jackson Smile format, #24155 (#27105)
Enable Jackson for 2.13 (#27136)
Remove ActorContext parameter from javadsl.ReceiveBuilder, #27120 (#27121)
Widen and timers can be used together, #25318 (#27128)
Remove warnings from akka-stream-tests (#27114)
Remove typed from api may change
Trying this out as the other PR isn't running in travis (#27129)
Remove request parameter in Typed Replicator messages, #27115
Remove Behavior.same/empty/etc, #26730 (#27119)
being explicit about how to disable artery
Jackson whitelist for deserialization of unbound class, #26910
use ISO-8601 date/time format in Jackson serializer, #24155
try Jackson compression impact, #24155
refactoring, cleanup, and count non-logged, #24874
=act re-enable dead letter logging after specified duration
Support separate conf per JacksonSerializer binding, #24155
Doc Jackson annotation gotchas, #24155 (#27091)
Remove duplicate copyright (#27101)
Remove removed modules from AkkaDiscipline plugin (#27099)
Clarify what to do instead of sending a PoisonPill for ActorRef source (#27090)
Remove API may change for flow with context
Decrease waiting-for-state-timeout to 2s (#27025)
Netty is not optional for multi jvm test kit (#27072)
optional instead of provided dependency to akka-actor-typed
Minor jackson doc tweaks
support akka.build.version=file
Note about lease timeout and JVM pauses
Adding improved warning when jdk8 is not found #26222 (#26789)
Add common/io-layer to the ToC (#27018)
Removed overly-enthusiastic-about-scala-sample exclamation point in doc (#27055)
Remove too verbose debug logging for timers, #26932
Optimize Document Content (#27050)
Improve logging in DistributedData extension (#27051)
Set useful description in sbt setting (#27059)
typo
fix typeo
Update links of moved modules to doc.akka.io (#27058)
Update links of moved modules to doc.akka.io [skip ci]
Internal stable markers
Include fan-out operators in the operator index (#27028)
Update reference.conf (#27048)
FJP starvation spec #26973
serializer for akka.actor.typed.ActorRef
Harden RemotingSpec: Retry if address is taken (#26795)
Better indicator of ActorRefProvider implementation selection (#27012)
Don't log internal messages as an event (#27014)
Remove JavaTestkit (#27022)
Remove ApiMayChange from coordination module (#27026)
Remove API may change from akka typed (#27027)
No printlns on my guard (#27046)
Upgrade scalafmt
Make netty and aeron dependencies optional (#27017)
Use travis stages (#27032)
Complete ZipLatest when upstream completes without emitting #26711
Delegate stop method on TestKitJunitResource  #27007
Remove various features deprecated since 2.5.0 (#27023)
Various internal stable markers (#27004)
act: TcpConnection: ignore late signals from SelectionHandler while shutting down (#26996)
workaround in release script for missing Jackson dependency for Scala 2.13.0-RC2
Specific minimal scheduler API for typed #26971
remove upload of whitesource report from release script, #26866
Jackson serializer as replacement for Java serialization, #24155
Use function instead of scala partial function for java api #26970 (#26972)
Scala 2.13.0 rc2 (#26967)
Add reason for deprecating TypedActor, #25516 (#26993)
Routers.pool now takes a factory (#26987)
ClusterReceptionist using own ddata Replicator #26936 (#26994)
Don't branch while releasing (#26966)
Hooks for Akka Persistence Typed lifecycle (#26999)
Stash before getting first listing in group router #26951
fix a race condition in ClusterReadView #24710 (#26922)
Typed testing docs: imports and scalatest dependency (#26890)
specify travis safelist for branches
update latestPatchOf25 to 2.5.23
More specific test timing expectations (#26918)
Use Def.settings (#26945)
add InternalStableApi annotation (#26949)
* Deprecate akka.actor.TypedActor #25516
Remove extra cherrypick step from contributing (#26939)
Update cluster-metrics.md (#26937)
Unicode arrows (#26965)
Clarify what versions migration applies to
Deprecate Serialization.deserialize that takes  parameter #25945
Snapshot when stages stopped incorrect and can cause crash #26902
Wrap the system event stream with a typed ActorRef (#26810)
Implements actorRef source variant with backpressure #17610 (#26633)
fix ByteStringSpec for Scala 2.13, #26956
akka.build.version property, #26958 (#26959)
Rewrite some code for Scala 2.13 (#26944)
Deliver buffered messages after passivation, #26957
Gracefully handle exception throw in SnapshotOffer, #26699 (#26700)
Adds EventSourcedEntity with EnforcingReplies (#26692)
Add setup operator #26192
add missing unapply for response types in DData Typed, #26942
Add ByteString.emptyByteString to Java API (#26931)
Move incorrect deprecated annoation in BackoffSupervisor (#26914)
Improve performance of DDataShard stashing, #26877
Some more internal-dispatcher usages, #26915
more classic remoting leftovers
Java interop via for FlowWithContext #26896
Test for WatchWith had a race #25955 (#26925)
New ReceiveTimeout not applied if it was set while handling a  messag… (#26892)
Reduce DDataShardCoordinator memory usage during unreachability (#25444)
persistentId -> persistenceId
Determine temporary ports with SocketUtils #23337
Restart hooks ordered list format fix (#26898)
Disable LargeMessageClusterSpec for classic remoting, #26889
Include includes in 'behavior' snippets (#26891)
Typed receptionist clashes with the clusterclient receptionist #26848
Clarify docs for Flow.ask generic parameter (#26701)
Adds parentheses to method that has side-effect (#26864)
act: remove shaded fork join pool implementation
fix broken link for typed snapshots (#26882)
Update CONTRIBUTING.md to current release branches (#26885)
Promote ApiMayChange features #26532 (#26838)
act: avoid ReceiveTimeout handling in hot path if no receive timeout is set (#26420)
Update typesafe config to 1.3.4 (#26875)
Use java.lang.StringBuilder to format timestamp (#26868)
fix changed idle-cpu-level property in LatencySpec (#26872)
ResetSystemMessageSeqNrSpec should not run with classic remoting, #26849 (#26856)
Simplify the boolean expression (#26855)
internal-dispatcher in akka.cluster.StartupWithOneThreadSpec (#26862)
Be more explicit that a node is shutting down as it was marked as DOWN (#26861)
remove duplicate build with Scala 2.12 in release
Remove docs for ActorPub/Sub and write persistence query docs as stages (#26844)
cleanup migration guide
Run CoordinatedShutdown from ActorSystem.terminate #25213 (#26830)
Internal dispatcher to protect against starvation (#26816)
Remove remainings of actorFor, #26190
Remove Timing operator  (#26845)
Clean up paradox output (#26759)
Removes the redundant val/final modifier in akka.dispatch/routing (#26822)
remove Future from StreamRefs mat val, #24372 (#26847)
Increase timeout to fix PersistentActorJavaDslTest (#26799)
Remove akka-contrib (#26769)
Remove unicode arrow
Make artery the default remoting (#26772)
Add backport steps to CONTRIBUTING.md #26837 (#26839)
Enable passivate-idle-entity-after by default #25782 (#26819)
Wrong link in doc, also directs to bad URL #26823 (#26824)
Handle CoordinatedShutdown exiting-completed when not joined, #26832
harden ClusterShardingPersistenceTest (#26833)
Show how to run plugin tck from java (#26829)
Move 'Remoting' under 'Clustering' in the docs (#26774)
Update r-b plugin (#26820)
Remove akka-agent (#26776)
Remove from allModules
Add to migration guide
Remove 'agents' page from documentation
Remove akka-agent #26184
cleanup migration guides toc (#26805)
[#24220] Supports Supervision in Partition stage
Remove akka-camel (#26768)
Remove actor dsl (#26784)
Setup previousVersions for akka-coordination (#26767)
Harden TestProbeSpec: increase short timeouts (#26791)
NoSerializationVerification for local discovery messages (#26790)
Speed up of framing spec #26679
update other modules page
Attempt to fix multi-jvm failure when untyped system is adapted from typed system (#26780)
Discards HandOverToMe in state End to avoid unhandled message warning #26793
Drop MiMa filters for 2.4.x (#26781)
Add Travis build status badge and fix Scaladex latest version badge #26782
Update MiMa: drop 2.4, add 2.5 (#26765)
Remove Scala 2.11 for Akka 2.6 (#26760)
Update to sbt-scalafmt 2.0.0 (#26777)
Allow TCP unbind to be invoked multiple times (#26771)
Remove warnings in akka-cluster (#26739)
Remove warnings in persistence typed module (#26748)
Remove warnings in akka-cluster-sharding-typed (#26747)
Remove warnings in akka stream testkit module (#26751)
ClusterSharding: increasing retry interval for registration call, #25191
Remove warnings in persistence query module (#26749)
fix SupervisorHierarchySpec failure (changed in warnings cleanup), #26734
Clean up Java version related build properties #26662
Remove future from discipline settings (#26725)
Support for null in mapAsync and fromCompletionStage #25475
replace unicode arrows again (#26732)
Support disable of join compat config check, #26719
Long is not an Int, #26733
fix wrong BackoffOpts in ClusterSharding, #26724
Enable fatal warnings by default (with excludes) #26088 (#26726)
=str #25045 adding Java/Scala interop to SourceQueue and SinkQueue
Compiler warnings for actor-tests and remote-tests (#26685)
Clarify scaladoc for restarting an infinite number of times
Compiler warnings for actor-testkit #26708 (#26716)
Update Shape.scala (#26472)
Document the issue away... (and fix bug in supervision) #26706
revert Shard constructor signature changes
Replace deprecated expectNoMsg with expectNoMessage (#26695)
Enable fatal warnings for cluster metrics and slf4j (#26678)
akka-cluster-sharding compiler warnings as fatal errors (#26648)
akka-persistence compiler warnings as fatal errors (#26654)
akka-stream compiler warnings as fatal errors (#26673)
Replace WrappingBehavior with directly access of InterceptorImpl
Review follow ups for PR #26653 (#26668)
Use BenchTestSource in streams JMH benchmarks #26563
Use ExecutionContext.parasitic for Scala 2.13, #26655"
remove obsolete Java serialization compat tests, #26677 (#26686)
update instructions for how to use Scalafmt in IntelliJ (#26682)
Internal marker for error messages
akka-cluster-tools compiler warnings as fatal errors  (#26647)
Correctly parse stream signatures (#26659) (#26669)
Make compilation options for akka typed modules strict (#26565)
addition about rolling update in Artery migration guide (#26670)
Guide for using artery udp inside a container
update latestPatchOf25 to 2.5.22
Allow build to run on JDK 8 (#26642)
Use sbt-paradox-apidoc plugin (#26660)
[not for merge] Warnings as errors in akka-actor (#26634)
Review follow ups for PR #26653
Untyped/Typed supervision (#26653)
Always intercept TimerMsg, also when restarted, #26556 (#26650)
Declare Artery TCP ready for production, #26664
Make RetentionCritera evolvable, #26545
Typed Persistence: snapshotEvery vs RetentionCriteria #26544
Remove Scala 2.11 from crossScalaVersions (#26656)
Declare Akka Typed ready for production, #26640
Use logger in typed intro docs examples (#26406)
unstashAll as terminal Effect, #26489
include state in EventSourcedBehavior.receiveSignal, #26574 (#26643)
fix rolling update for ddata change, #26284
remove State >: Null constraint in javadsl (#26645)
Add title and version to Scaladoc pages (#26632)
Change typed whenTerminated signature to Future[Done], #25647
Add "-no-link-warnings" for 2.11 scaladoc (#26639)
log typeName in ShardRegion logs (#26611)
Move Lease usage settings inside akka-coordination (#26637)
revert rename gotoOldest
Typo in Akka Typed Persistence Docs (#26635)
Represent closed in either end as closed in ADT #26493 (#26554)
=str enable TLS test scenarios that were not referenced anywhere (by accident?)
=str defer calling SSLEngine.closeOutbound until after handshake, fixes #26104
cleanup Receptionist example
cleanup logging in persistence tests, #24687
Lease API + use in cluster singleton and sharding, #26480 (#26629)
 contribution guidelines about wire compatibility (#26619)
Remove ancient streams migration guide
Minor ClusterSharding scaladoc suggestions. (#26623)
Typed perf improvements, #25986
Avoid false removals in ClusterReceptionist, #26284
add EventSourcedBehaviorRecoveryTimeoutSpec, #24687 (#26525)
add more tests for receiving PoisonPill in various states, #24687
Javadoc caveat
test PoisonPill and stash of EventSourcedBehavior, #24687
GrapheStage implementation for actorRef source (#25324) (#26054)
Disable genjavadoc during scaladoc compilation #26617
Link to SO answer on scaladoc link disambiguation
FanoutPublisherSink leaking actors on upstream failure #25634
Enable strict scalac options for akka-protobuf (#26582)
fix typed ActorSystemSpec #26614
Remove 'dead' code, bringing the class back in line with upstream
Enable strict scalac options for akka-protobuf
fix compilation error in LoggerSourceTest.java
Typed unstash improvements (#26599)
Try harder to get a good log source class in EventSourcedBehavior (#26567)
Extends collection of shutdown Reasons (e.g. ClusterJoinUnsuccessfulReason) (#26570)
Introduce warning silencer plugin (#26588)
Docs: latest Akka Paradox template
Typed docs: include the import in the code snippet where it is used
Typed guardian startup and actor adapter simplification (#26590)
Add DeleteEventsCompleted in signal handler for logging consistency #26606
Typed Persistence: docs / sample for deleting snapshots and events (#26603)
Accept TTL values of 0 in CachePolicy #26427
Make typed persistence side effect internal (#26520)
remove ??? in SnapshotMutableStateSpec, #26581
add tests for missing journal and snapshot plugin config, #24687
fix race condition in Running.storingSnapshot, #26601
Replace SnapshotSelectionCriteria and SnapshotMetadata, #26536 (#26596)
fix snapshot deletion algorithm, #26584
Test update on params per issue suggestion, and a few minor untyped test deprecation/warning fixes.
Small typos (#26575)
test when event handler throws during replay, #24687
Typed version of the ForkJoinActorBenchmark #25986
fix NPE in SnapshotStore, #26580
Update Akka Management version to 1.0.0
Strict compiler settings for discovery (#26552)
Clarified the failure conditions for Read/WriteLocal
Update genjavadoc
enable serializer for ShardRegionStats, #25348
Make sure actor started timer before we change time #25799
Update scalatest
Explicitly require jdk9+ for javadoc generation (#26515)
Notice too long quarantine-after-silence config value #26512
akka-distributed-data compiler warnings #26088
give cached value back in ddata sample(#26476)
Typed Persistence: Rename internal.JournalInteractions for clarity #26551 (#26553)
Include 'reproducible builds' sbt plugin (#26546)
Race condition in lazy sink on immediate failure  (#25413)
Typed Persistence: deleting snapshots / events #24698
Wrong filename for some 2.5.20 mima excludes (#26547)
Expected behavior on Terminated with orElse signal handling #26518
add EventSourcedBehaviorTimersSpec, #24687
add missing API in javadsl.EventSourcedBehavior, #26273
a few more persistence tests from PersistentActorSpec, #24687
format source with scalafmt, #26511
scalafmt align.openParen false, #26511
Deprecated the after pattern supporting methods which accept a value of Future or CompletionStage. (#25817)
Correctly throw when akka.discovery.SimpleServiceDiscovery is found
Issue references to FIXMEs in Typed (#26513)
Paradox: latest 0.5.3, latest theme 0.16, more https (#26522)
Intercept poststop (#26331)
Remove Lightbend Enterprise Suite from deploy.md
actor: Potential systemQueuePut improvement
clarify backoff's "restart" #23406
Expect java11 for releasing
Signals instead of callbacks for eventsourced behavior #25428
Validate compile in multi-jvm (#26400)
Cleaned up LogMessageSpec output #26486
fix wrong headers
format source with scalafmt
manual adjustments before scalafmt * fix formatting error
replace unicode arrows
Switch to Scalafmt in build
Check all recipients and msgs are done rather than specific order #26495
Harden InactiveEntityPassivationSpec
Wrap exception from unstash, #26148 (#26396)
Use configuration property for timeout for assertAllStagesStopped #26410
Typed persistence stash improvements (#26347)
Typed actor routers #25612
Document publishing branch snapshots #26437
Adds docs for actorRef stream integration #24595
Use only https links to doc.akka.io by now
Better logging on artery start when bind address used
Simplify backoff supervision API #26156
Delete .java-version
output UID only once for bind and local addresses
Moves implementation to internal package #26156
formatting
Updates deprecations and documentation #26156
single log statement
spelling
spelling
log both listening and binding addresses if they are different
Small fixes/improvements #26156
Removes stopping strategy from failure options #26156
Adapts and improves documentation #26156
Updates backoff supervision documentation #26156
Adds new extended backoff API and moves old deprecated API to separate file #26156
Adding internal api markers and other small corrections #26156
Improving documentation and code style #26156
Hide backoff on stop supervisor implementation #26156
Simplify backoff supervision api #26156
fix login the bind address when remoting starts
Remove outdated comment from build.properties (#26475)
!str remove {Source,Flow}WithContext.statefulMapConcat, fixes #26330
Access latestSeqNr in typed persistence  (#26261)
keep original logging filter everywhere it's needed
reformat code
Create a separate trait for filter with marker
Use AsyncDnsCache directly in DnsServiceDiscovery, #25948
act Avoid deadletter access if not needed (#26422)
Consolidate duplicate persistence sharding function #26451 (#26452)
Adds fromPairs to SourceWithContent object
add runWith to SourceWithContext
Adds to and toMap to SourceWithContext
Sets correct return type for withAttributes on Source/FlowWithContext
Add marker support in logging filters for akka-typed too
Adds Flow.asFlowWithContext #26372
Rename start/endContextPropagation functions to asFlow/Source.. (#26353)
Doc changes on supervising example on Tutorial guide # 26429
Document snapshot releases (#26437)
Use AsyncDnsCache directly in DnsServiceDiscovery, #25948
Add marker support in logging filters #26544
(Prefer) non symbolic typed ask 26306
Don't apply 'discipline' flags to compilation run for documentation #26119
Use cross build prefix for every command
More tweaking the build to make it work
Format ApiMayChange
Make it compile on 2.13-M5
Add html reports for Scoverage (#26444)
Cleanup various warnings in akka-stream #26395
Filter out binary incompatibility problem for akka.annotation.ApiMayChange.issue
Add issue reference field to ApiMayChange annotation (#26409)
Add more code discipline to the build #26376
No cross-scala-versions for root
Doc changes (#26430)
Support mutable state by stashing commands while storing snapshot, #25740
Warn if serializers for Akka internal messages are replaced, #26373
Increase timeout for AsyncDnsResovlerSpec + dont use ImplicitSender (#26414)
Adds Flow.asFlowWithContext
Harden PrimitiveStateSpec: Expect termination before starting next actor #25958
Make the OO example use classes for all the behaviors (#26407)
release flag 11 instead of 9, #26381
Harden RateTransformationDocSpec: Use test patience rather than hadcode #26262
Typed only on Scala 2.12
Small tweaks to all command aliases (#26403)
Reorder Source/FlowWithContext type parameters #26345
Update test and sample usages of ActorRef.? to .ask
Non symbolic ask
harden ClusterShardingPersistenceSpec by using onPostStop, #26230
Set jabba to 0.11.2
Use latest java 8 and automatically upgrade in future
add onPostStop and onPreRestart hooks to EventSourcedBehavior, #26404
remove ccompat import in CollectionSinkSpec, #26305
move ccompat mima filter to right excludes file, #26350
fix more with reply types in persistence-typed examples
Adds log operator to Source/FlowWithContext (#26386)
Command handler builder for EventSourcedBehaviorWithEnforcedReplies, #25482 (#26272)
Redefine the Factory type alias in ccompat (#26350)
upgrade to latest ScalaTest (#26387)
second fix 2.13 compilation error, SortedSet, #26382
Create one SBT general task to run locally before pushing a PR #26157 (#26388)
add Scala 2.13.0-M5 to travis build
fix 2.13 compilation error, SortedSet, #26382
Kill/Stop container if still running from previous
Update mima version to 2.5.21
Trivial typo fix in Streams docs (#26359)
Remote remoting deployment from artery docs (#26342)
Make the AbstractBehavior builder mutable  (#26309)
Stop singleton and shards when self MemberDowned, #26336 (#26339)
reduce scope of synchronized in FunctionRef, #26326
Test to ensure a coordinated shutdown is successful when a stream involving StreamRefs is running
Clean up old docker containers at start of a docker test
fix typo: excpetion -> exception (#26352)
fix wrong log level of cluster debug logging (#26351)
Logger class for typed actors #25677
fix format of verbose logging of cluster events (#26363)
Extract the layouts of the running streams as an AST (#25831)
Cover the unsafe string access optimizations with direct tests (#26343)
Add asJava/asScala to RunnableGraph #26245
Subtypes of state in typed persistence runThen Java API  #25737
build: detect adoptopenjdk java homes (#26337)
Upgrade Aeron to 1.15.1 (#26268)
Make cluster logging even more standard
Log ActorRef rather than just path for watch/unwatch
Align the names of the typed persistence builders  (#26314)
unsaved actor_top_tree.svg
Typo in futures.md (#26316)
Clarify Javadoc now needs jdk9+
Add and improve javadsl Persistence Typed samples (#26287)
Create stateful function only once in FlowWithContextOps.statefulMapConcat() #26308
Review feedback addressed
Updated the latest patch for mima
Stab
=act #26300 try not to get stopped by death pact before Unregistration is complete
Use one naming convention for ShardCoordinator in doc and logging for search efficiency.
No journal failure for command failure stashed while replaying (#26258)
move "#start-stop"'s start line
Make discovery and dns APIs stable
increase heap size in .sbtopts (#26295)
Update to sbt 1.2.8 (adding --ignore-source-errors for javadoc) (#26233)
Cleanup javadsl Blog Post sample in Persistence Typed
Adds memory settings to build Akka #26265
Behaviors.logMessages implementation #26226
StreamConverters.asInputStream sometimes swallows Source failures and reports them as timeouts  (#26253)
support nested restart and backoff supervision strategies
Stashing in persistent behavior, #25717
Cleanup, improvements, simplicification, scaladoc and javadoc of SourceWithContext and FlowWithContext
Initial SourceWithContext, FlowWithContext, FlowWithContextOps.
Improve builders in Java Persistentce Typed, #26109
Cluster client caveats #26257
Terminate StreamRef on node failure, #25960
Support stop or keep of child actors when parent is restarted, #25556
Corrected documentation (#26159)
build: make sure ignore files are searched for in base directory
Don't log when DNS resolver uses defaults #26167
Increase patience for ReceptionistExampleSpec
Expose nowrap parameter in Compression.inflate, #26227
optimize AtLeastOnceDelivery by not scheduling ticks when not needed, #26216
Update headers for jdk9 related code. (#26236)
Silence the sbt-scalafix and sbt-java-formatter's file ignoring #26243
Include manifest or class in missing serializer failure if possible #26217
use receiveOne instead of receiveMessageType, #25914
Switched to new sbt pr validator plugin (#25264)
Reachability.allObservers wrong after filterRecords, #25950
Suppress no seed-nodes configured logging when Bootstrap is used, #25680
cleanup Cluster logging
Support rolling update for new JoinConfigCompatChecker #26194 (#26229)
Always retry sendGracefulShutdownToCoordinator, #26214
adds service name parser (copied from akka-management) (#26132)
clarify watchCompletion only watches the stage, not the stream (#26224)
Formatting java codes with sbt-java-formatter.
Add sbt-java-formatter for java code formatting.
Various scala-2.13.0-M5 fixes
avoid clashing imports under new M5 rules
Various scala-2.13.0-M5 fixes
Various fixes for scala-2.13.0-M5
isFinite has zero parameter lists now
Separate ByteIterator implementations for 2.11, 2.12 and 2.13+
Split ByteString for 2.13 and 2.12
akka-actor scalafix changes
Cleanup Typed TestProbe implementation
Intercept subset of messages #25727
More Java getters for akka.actor.AbstractActor.ActorContext #26161
Add how to check binary compatibility. (#26219)
Remove some unused import in akka-stream's boilerplate templates. (#26221)
Remove duplicate code in Cluster Sharding Typed HashCode*MessageExtractor [#26197] (#26204)
Artery tests: use config to determine TCP/UDP free port + use the correct host (#26211)
Make it clearer that StreamRefs should be used with Akka Cluster (closes (#26213)
Updates header for `akka.compat.Future` (#26210)
Towards stable APIs of akka-discovery (#26172)
rename timeout to delay in startSingleTimer (#26154)
Missing Java API: Source.empty
remove unused Command type param in EffectFactories (#26152)
Import `akka.actor` as `untyped` but not `a`. (#26079)
Run ask/pipe on the actor's thread, in Java
stashing and pipeToSelf, #25824
Add JoinConfigCompatChecker for  in Typed #25667 (#26174)
add examples for scan operator #25468
Add pipeToSelf to typed ActorContext #26199
added examples for Stream # actorRef operator. As part of #25468 (#26162)
Don't be too clever with the copyright year (#26169)
25468: added examples for `Stream # cycle` operator. (#26163)
Document how to observe mocked behavior with typed ActorTestKit #26116
Use Adopt JDK 8 in Travis
Two typo fixed in the typed persistence docs (#26168)
Update headers from 2018 to 2019 once for all. (#26165)
don't show receiveSignal from ExtensibleBehavior in Receive
Improve default shard rebalancing algorithm, #26012 (#26101)
clarify docs of ActorTestKit.stop, #24165
unidoc genjavadoc doesn't work with sbt 1.2.7 yet (#26150)
Akka-typed-testkit: Provides a way of stopping actors #24165
Rename akka.actor.typed.ActorContext #25734 (#26146)
Cross run MiMa when releasing
Deprecate resolveOneCS which accept FiniteDuration. (#26067)
Slf4jLogger expects also null as a marker to support Warning4 events (#26055)
swap config and DNS in aggregate example (#26131)
improved message in case all DNS resolvers fail #26097
removes warning about shadowed java.io.File (#26134)
Add dedicated exception when try to stop self with ActorContext#stop in Akka typed. (#26081)
Refactor PersistentActorJavaDslTest (#25728)
Remove CallerSensitive (#26112)
Update the typed cluster sharding documentation to use new terminology #26120
Async DNS search domain support (#25987)
Scalafix followup:different fix alias on different sub projects with packages ignore support. (#26084)
more api may change warnings in Typed docs (#26124)
Add `reload` to `fixall` and `fix` command alias.
Run scalafix to remove unused imports again.
Setup different fix alias on different sub projects and add support to ignore dedicated packages when do scalafix.
Optimize compact during framing (#25902)
Typed Distributed Data requires untyped Cluster #25746 (#26074)
Clarify migration from old akka management discovery (#26102)
Add forgotten `expectNoMessage` method in StreamTestKit (#26070)
Introduce Behavior#unsafeCast (asInstanceOf alt) (#26093)
updated scaladoc for loadServiceDiscovery
Cleanup validNodeForGossip (#25965)
fixed deprecated method in getting started guide (#26083)
Remove typed.ActorRef#sorry/sorryForNothing (#26090)
Use OptionVal over null in typed TimerSchedulerImpl/TimerInterceptor
Give BackoffSupervisor an "O" outer msg type param
Reuse scala.reflect.classTag & ClassTag.Nothing
update mima latet version for 2.5.19
Add description about default method parameters.
Dont run DnsDiscoverySpec if docker not available (#26071)
another remove redundant yet, from PR #26049
Make exception in `Terminated` explicit it is just for child termination (#25992)
Allign typed singleton with typed sharding (#26013)
doc and test follow up of PatternCS, #26000
Translate Getting Started Guide to Typed, #25998
fix type bounds of expectMessageClass in javadsl in Typed
fix javadsl awaitAssert in Typed, #25903
Save EntityStarted when StartEntity requested via remembered entities (for validation) (#26061)
support stop of TestProbe
revert to sbt 1.2.6, because unidoc issue
only unidoc for Scala 2.12, #25985
add akka-discovery to version check
Support ClusterSharding passivation in BackoffSupervisor (#25933)
Change InternalMessage to be private[akka].
Adding loglevel for overflow strategy #25949 (#25976)
Dns discovery custom resolver (#25937)
remove redundant yet
Harden AsyncDnsResolverIntegrationSpec (#25908)
Rename PersistentBehavior (#25721)
fix akka-cluster-sharding-typed/test:compile (#26046)
=typ Remove the AskResponse message. (#25971)
Behavior.orElse start the other behavior (#25977)
Make use of scalafix to remove unused import. (#26019)
Warn if handOffStopMessage not handled (#25648)
Harden NettyTransportSpec (#25500)
Typed sharding: Allow queying of local shard region (#25409)
Upgrade Scala version to 2.12.8. (#26039)
Don't throw away error causes in TcpStreamLogic (#25617)
Runtime check that Netty version is 3.10.6, #25967
Simple JDK 11 fixes (#26038)
Small wording improvements. (#26032)
Clarify routee paths do not support full path under cluster #25935 (#25957)
Add additional java api for updated for ORMap  (#25926)
Widen timeout to fix ClusterShardingPersistenceSpec #25936
=act #25733 close channels from SelectionHandler and force flushing from selector
Typed Persistence: onRecoveryFailure callback (#25993)
Parse akka.remote.log-frame-size-exceeding as bytes
Add additional constructors for CapturedLogEvent (#26016)
Add missing import to the Inbox example (#26026)
Remove Deprecated CounterSecureRNG, #25978 (#25979)
Remove akka-ssl-config (#26034)
Replaces DNS TTL primitive types with Duration (#25850)
Full compile on travis (#26029)
update sbt and sbt plugins (#26017)
Update verbiage on module documentation page (#26018)
Log a warning if 'akka.remote.log-frame-size-exceeding' contains a bad value (#25284)
update aeron.dir in test (#26031)
Tweak the introduction to akka persistence
Mark Behavior as @ApiMayChange & not @InternalApi (#26014)
[ttk] Add access to logged events in BehaviorTestKit #25905
Change ask timeout from Timeout to Duration in typed javadsl. (#25975)
!typ Rename ActorContext#upcast to ActorContext#unsafeUpcast. (#25973)
Don't be specific about the kind of remoting in StreamRefsSpec (#25991)
Add receiveOne to TestProbe in Typed #25914 (#25994)
Upgrade to Aeron 1.12 (#25984)
Cleanup TimerSchedulerImpl & TimerInterceptor (#25891)
Cleanups in typed TestProbe fishForMessage impl (#25863)
Adding links to wireTap and alsoTo docs (#25808)
Add Graal recommendation to contributing guide
Specify 'jvm8' target when building on jvm8
Don't set bootclasspath when already on jdk8
Correct minor mistake in StreamRefs.sinkRef scaladoc
Add missing for Custom Stream Processing docs #25940 (#25941)
Remove typed DeadLetter class (#25944)
Include configuration name in log when cluster not actor provider
Cluster sharding start overlods to avoid passing in settings
Uncomment ConstantRateEntityRecoveryStrategySpec
Cluster event listener that logs all events #25832 (#25918)
Document docker resource limits (#25925)
Improve Getting Started Guide Part 3 for writing a first Actor test #25193
Cleanup BackoffSupervisor (#25898)
Update issue templates (#25912)
fix non-@ref tag in serialization (#25900) (#25901)
Change untyped EventStream's Event type to Any (#25897)
Adding OSGi settings for akka-actor-typed and persistence-typed.
Allow more time for docker bind startup (#25855)
Avoid memory being retained for groupBy #24758
+act add getEventStream to ActorSystem #25870
Handle lost typed receptionist removals #24887
AuctionEntity example in Java, #25485
Improvements of singleton leaving scenario, #25639 (#25710)
update latestPatchOf25 (#25892)
 Replace scalactic deprecations (#25886)
Add warning about nsswitch to dns docs (#25889)
Make OpenAccount#applyEvent match exhaustive (#25890)
Clarify CrossJava will be on-par in sbt 1.3.0 (#25876)
Update to the latest Akka Paradox that adds icons to goto source links (#25881)
rename ClusterSharding start to init, #25711 (#25867)
Make the stop message in sharding optional, #25642
Automatic passivation for typed sharding, #25512
align Effect API between scaladsl and javadsl, #25706
Rename ActorContext#schedule with scheduleOnce (#25869)
Allow OptionVal to hold boxed primitives
Consistently bind ActorContext to 'context' in the docs (#25852)
Widen timeout waiting for sharding to initialize (#25752) (#25856)
Mini cleanup to stream.ActorMaterializer (#25866)
Introduce 'MemberDowned' member event (#25854)
Favour Behaviors.receiveMessage in the docs (#25853)
Dilation cleanups (#25861)
Read port/weight/priority as unsigned shorts for SRVRecords (#25842)
@DoNotInherit typed.ActorRef (#25851)
Warn about async-dns lack of support for search domains
Ignore vendor when selecting JVMs  #25835
update headers to regular comment (#25807)
example for some sink operators #25468
Add examples for Fan-in operators #25468
Zip/Unzip support up to 22 ports (#25742)
fix cluster routing docs (#25810)
Create typed ActorMaterializer from ActorContext, ##25536
PersistentEntity to glue together Sharding and PersistentBehavior better
null as empty state, in javadsl, #25768
AccountExample in Scala in a few flavors, #25485
remove verbose from classgraph (#25806)
thenReply Effect, #25482
PersistenceId type to differentiate between persistenceId and entityId, #25703 (#25704)
Hardening of typed./ClusterShardingSpec, #25794
Add receiveN to typed TestProbe
update to sbt 1.2.6
Rename MutableBehavior to AbstractBehavior, #25750
=plugin migrate FastClasspathScanner to ClassGraph (#25797)
Async DNS over TCP (#25690)
make java sample code independent of Scala (#25800)
grammar nit (#25791)
Use Props factory methods in getting started tutorial (#25713)
Document 'withBackoff' srouce/flow/sink (#25770)
Avoid incorrect OSGi dep on sslconfig.akka (#25580)
Don't return `Iterable(null)` when Probe.fishForMessage times out (#25629)
fixed typo in DNS extension documentation (#25789)
Java API checklist (#25762)
Modified iff statements from JavaDSL/Flow.scala (#25785)
Docs for typed distributed data (#25747)
Max number of restarts for typed supervision backoff #25584 (#25772)
Bumps ssl-config 0.3.6
Cleanup typed test output (#25669)
update to sbt 1.2.4 (#25759)
rename PersistentBehaviors.receive to PersistentBehavior.apply
Upgrade to ssl-config 0.3.5, from 0.3.4
example for reduce operator #25468
Clarify supervision of singleton actors (#25681)
Upgrade ssl-config from 0.2.4 to 0.3.4 (#25707)
Don't warn about old DNS protocol use
Upgrade to Aeron 1.11
Documentation fixes (#25725)
Treat MemberStatus.Removed as terminal state in ClusterReadView (#25499)
fix similar race in another test
support up to 22 inputs as per spec and fix race in test
add additional coverage for possible case
change semantics of ZipLatest slightly to account for pending first tuple with subsequent completion
Add examples for zipWithIndex #25468 (#25661)
Specify the artery port '0' to avoid address already in use
Remove duplicated section in doc
Removing deprecation mark for method without maximum restart attempts #25714
Document MutableBehavior  (#25685)
Support IPv6 in async-dns (#25687)
Mima latest version to 2.5.17
Upgrade to scala 2.12.7
Revert "Avoid ask to sharding guardian if region already cached", #25683
Improve AskTimeoutException message, #25644
Update Akka Bootstrap Url
Update Akka Cluster Bootstrap url
Provide minSequenceNr for snapshot deletion (#25590)
Only treat nameservers as a StringList in config if getting as String… (#25636)
+str #24812 fix signature of monitor()
Add and reuse example for FileIO stream operator. (#25660)
Don't automatically down quarantined node, #25632
AccountExample in javadsl, #25485 (#25505)
Deduplicate is specific to interception so belongs where it is #25599 (#25665)
Disallow nested mixed widen usages, #25604
Warning for truncated DNS messages (#25666)
Introduce RecipientRef interface for ActorRef and EntityRef, #24463
Protobuf serializers for ShardRegionStats #25348 #23250 #24465
Some usages of the removed signatures
add zipLatest and zipLatestWith operators and graphstages
Add troubleshooting hint to logging
Review: Don't double log exception
Review feedback
Remove CommandHandler.byState #25655
Docs sample of accessing context from persistent behavior
Command context no longer needed
ActorContext removed from more signatures #25620
Private all the things
Remove the ActorContext parameter from the scaladsl command handler #25620
Dropped messages when backing off
BehaviorTestKit: get child inbox by anonymous ActorRef
Remove old restarters
Simplify signature of ClusterSharding.spawn, #25480
Passivate for Typed Sharding, #24478
Reset timeout for fixed restarts
wip
add usage examples for conflate / conflate with seed (#25498)
=doc #24283 include rationale for Sink Source not extending RS (#24286)
add TODOs to encourage contributing operator examples (#25478)
Clarify that there should normally be only one ActorSystem (#25641)
Use supervision in all places of Source.fromIterator, #25574 (#25601)
Add deprecation documentation to bin-compat docs (#25400)
Some more BehaviorIntercept tests
Utility to check that same version of all modules is used
page about rolling updates, and change log
Docs: don't use $code$ for now in doc snippets
Add more description about ClusterEvent.InitialStateAsSnapshot (Closes #25172)
make scalatest suite type agnostic
ActorTestKit overhaul, #24598
update to sbt 1.2.3 (#25626)
Document async and inetaddress DNS (#25414)
Add method foreachAsync to Sink object
cleanup some systemActor stuff (#25606)
fix fiddle snippet path (#25621)
Allow restarting a named child in StubbedActorContext
Adding maximum restart attempts to BackoffSupervisor #24769
Logging docs: show akka-slf4j dependency (#25588)
Use absolute snippet paths (#25607)
Add BehaviorInterceptor and a more general way to traverse the behavior stack, #25504
Upgrade to akka-paradox 0.12
Revert Support for rolling upgrade of ORSet[ActorRef], #25336
hardening of CoordinatedShutdown init, #25592
=doc Explain cgroup memory limit flags for docker (#25591)
Mima latest version 2.5.16
Docs: use the latest name to refer to Alpakka Kafka Connector (#25589)
=str #25469 stream refs hardened termination via awaiting completion signal (#25561)
Build with 2.12 as default (#25515)
Remove Scheduler param in EntityRef.ask, #25481
Balance - downstream waits for a response indefinitely #25387
Undeprecate the config, add a note in cluster singleton
+doc Adding a fiddle example for Akka Typed
Don't require journal to have predictable highestSeq.Nr.  #25329
QueueSource now drops after completion (#25349) (#25552)
Adding the CVE ID to RNG advisory (#25555)
Deprecation and documentation for the AESCounterBuiltinRNG issue
add missing mima filters, current version was not updated
Mima filters
Allow BigInt/BigInteger increments/decrements for PNCounter #25543
Link to sample projects
fix negative math.abs in Sharding Typed, #25034
typo: actuall -> actual (#25513)
Add missing imports for Custom stream processing docs #25525
Correct timeout
fix initial state of output port transitions, #25502
increase outbound-control-queue-size
Add grpc samples to RELEASING.md
Support joining 2.5.9 or earlier, compat InitJoinAck, #25491
Typed default blocking dispatcher + docs (#25359)
Formatting, and use java.time.Duration
improved scalafiddle integration
add java.time.Duration support for javadsl #24646
Add inclusive to deletion api docs (#25390)
Split up persistence documentation (#25396)
Additional records support for async dns (#25492)
=str Avoid boxing Attributes in java Optional (#25456)
Correct parameter order in FSM transition-syntax example (#25439)
Various documentation fixes of "Basics and working with Flows" (#25494)
Harden BindCanonicalAddressSpec (#25404)
Docs: IDE tip wrt to javadsl / scaladsl #25312 (#25464)
Add some javadsl Flow methods to Source as well (#25476)
Enforce valid seqnr for deletes, #25487 (#25488)
It's Duration.Inf, not inf (uppercase). (#25495)
explicit return type in ThrottlerTransportAdapter Java API (#25474)
https://github.com/akka/akka/issues/25429: add direction & throttler instances accessors to ThrottlerTransportAdapter module. add java compile only tests. (#25465)
Minor documentation fixes (#25462)
Delist 'Start Building RESTful Microservices using Akka HTTP with Scala' (#25446)
=dns amend message for failing in wrong protocol use in dns
=dns #25454 must adapt new dns protocol to old when replying to old req
=dns #25451 resolve raw IP addresses in async-dns
Discover JDK in $JAVA_HOME (#25457)
Support discovering jdk-11 (#25445)
Log more details for TCP connection errors (#25450)
Add ClusterSingleton supervision documentation (#25419)
change to sbt 1.2.1 (#25447)
Remove "Future is a monad" title (#25437)
Log exception for association failure (#25438)
Separate out Effects and ChainedEffects in typed persistence (#25357)
include mima exclude
make all Take impls use the same implementation (Sink)
Impl Sink.takeLast operator
Docs depend on camel test deps to pick up removed camel deps (#25430)
image centering
Add jaxb to camel test classpath (#25417)
Upgrade to SBT 1.2.0 (#25415)
Remove various compiler warnings
Stack trace changes depending on how throwable is constructed in JDK9+ (#25408)
Add WindowsDiscoverConfig to find JDK (#25368) (#25398)
Avoid ask to sharding guardian if region already cached (#25407)
Added missing lineefeed
Turns out "-release 8" isn't enough with Scala 2.11.6 #25330
Break up cluster sharding docs into sections
Add the pipe pattern section (#23948)
use correct Source import
Remove procedure syntax (#25362)
Remove use of deprecated methods in java docs
added `getScheduler` and `getDispatcher` methods to `ActorSystem` #24900
Switch order of javadsl EventHandler type params (#25354)
Update dependencies and plugins (#25376)
addressing review comments #24933
improve Source.range docs #24933
Add localized message from cause if message equals null (#25367)
Add examples in Scala documentation for Source.fromFuture #24933 (#25374)
Add code sample for operator Source.single (#25375)
Improved logging when node joins itself #25279
Added code example for the stream operator map (#25373)
remove unreferenced akka-docs/src/test/*/tutorial_6 (#25363) (#25364)
Add docs and example for akka-stream operator from (#24933) (#25372)
=typ #24725 disallow deferred behaviors as postStop hooks (#25123)
Adding combine operator scala example #24933 (#25371)
Adding documentation to Source.range method #24933
Remove duplicate 'for' in code comments (#25366)
fix broken link in akka-stream docs on ask #25358 (#25360)
Harden StreamTestKitSpec
Added exclude rules for binary compatibility check
Harden ReplicatorDeltaSpec, #25342
Allow named pipes / FIFOs when using `FileIO` #25328
Optimize flatMapConcat for single element source, #25241 (#25242)
Improve performance of DData delta updates, #25310
Reintroduce CallerSensitive (#25326)
Use multiple ddata keys for the typed receptionist service registry #23704
Optimized recovery #25072
Ensure NPE is always through when VirtualProcessor.onError(null) is invoked (#25311)
Support for rolling upgrade, #23703
Optimized serializer for ORSet[ActorRef], #23703
Remove spurious println
Check remembered entities before remembering entity (#25271)
Behavior for spawning actors, #25223 (#25273)
Typed deathpact supervision (#25303)
Typed supervision did not handle stopped behaviors correctly #25156
Source.actorRef not completing on Success (#25285)
 the highestSequenceNr is predictable (https://github.com/akka/akka/issues/25321)
Typed persistence: Throw on persist failures, #24479
Composable javadsl CommandHandlerBuilder, #25226 (#25227)
Changed log-level of ShutDownAssociation from Error to Warning
Align Java sample DeviceGroupQueryTest with the Scala one #25278
=clu Accept Welcome message from previous joinSeedNodeProcess #25295 (#25297)
Discover Linux java versions with full versions (#25302)
fix formatting spaces in Java samples for akka typed (#25292)
fix dependency blocks in documentation (#25240) (#25294)
Harden PersistentBehaviorSpec (#25301)
Concurrency fix for BoundedBlockingQueueSpec #24991
Add dep from multi-jvm cluster to multi-jvm cluster-typed (#25299)
Race condition in ManualTimerExampleSpec fixed #24957
Compile with jdk9, targeting jdk8 (#24711)
Don't trigger graceful leave #24728
populate Creating Actors section in the akka typed documentation (#25218) (#25236)
Cluster sharding: Set waiting for state timeout for tests
example for Streams log operator (#25283)
Documentation fix (#25282)
Complete async DNS that uses the name servers top to botom
Async DNS largely inspired by https://github.com/ilya-epifanov/akka-dns
Expose assertAllStagesStopped
Ignore possible state change while waiting for removal #25274
log address having heartbeat problems in PhiAccrualFailureDetector (#24701) (#25237)
Include compiling multi-jvm tests in PR validation (#25245)
reword the Multi-DC Persistence reference
Optimize JsonObjectParser.isWhitespace by replacing Set.contains with match using table switch (#25260)
increase threshold to publish heartbeat interval warnings in PhiAccrualFailureDetector (#25253) (#25259)
Java time duration support for javadsl #24646
Return of the old docs banner (#25254)
Optimize mapAsync(1) (#25185)
doc Replace the word graph by operator in stream doc (#25219)
Typed FSM docs page (#25266)
Typed: Un-nest supervision that overlaps #25128
Bump config to 1.3.3
add missing signature for `ActorFlow#ask` in docs. (#25249)
Widen operation docs clear about unhandled effect (#25252)
The cluster singleton manager must be started early #25247 (#25248)
Note in the docs that the zero value for fold and friends must be immutable #24971
Add reference to GDPR for Akka Persistence
Missing Mima filter added (#25243)
update latestPatchOf25 to 2.5.13 (#25231)
no need to rename to operators in internal API
fix akka-cluster-tools compile error
Harden MultiDcClusterShardingSpec (#25201)
Require taskname to be non empty (#25215)
move Cluster Aware routers to separate doc page
When and where to use Akka Cluster (#25182)
remove andThen overload, #25133
fix multiple spelling error to multiply (#25222)
Replace graph with operator in Scaladoc/Javadoc
Link from github issue template to discuss.akka.io
Configure exit code and Coordinated Shutdown per-reason overrides (#25186)
Correct a word 'degredation' (#25207)
Documentation updates for Akka Persistence Typed (#25194)
Add common multi node cluster config to all cluster sharding tests (#25202)
Expose Effect classes for BehaviorTestKit Java DSL, #25070, #24781
add EventHandler type alias, #24856
Log receiving of heartbeats when verbose heartbeat logging is on (#25183)
Harden typed MultiDcClusterSharding
Update sbt-whitesource to 0.1.12 (#25180)
Upgrade to SBT 1.1.6
Added log messages when leadership is gained or lost (#25053)
Suggest ClusterSharding hasn't been started in log message (#25177)
Add static import convenience methods to Done and NotUsed (#25174)
Clarify typed supervision when returning a new behavior (#25163)
eliminate extraneous takeWhile method
Hopefully fixed a race in the shutdown test (#25155)
Optimize ByteString.grouped(size) (#25153)
Update stream-integrations.md
ScanAsync handling fully complete stream while future is resolved #25112
Make copyUSAsciiStrToBytes more robust w.r.t. JDK
ClusterDeathWatchSpec: assert cluster status bewtween tests (#25126)
Remove unnecesary drop() from ByteString1.writeToBuffer(ByteBuffer) (#25151)
log discarded messages in read-only endpoint #25127
java.time.Duration APIs in javadsl.TestKit #24646
Add return type for FlowMonitorState.finished #24885
doc Replace the word stage by operator in stream doc (#25138)
limit negative acknowledgement logging, #25143
Decrease the uninitialized connection counter as late as possible #25148
Persistence: replace initialState with emptyState (#25129)
Typed persistent event adapters/wrappers (#25050)
=doc wording improvement in stream-graphs.md subjunctive (#25145)
using unidoc for graph stage logging docs
Update scala-java8-compat (#25142)
fix graph stage logging docs
add missing have for past tense
= actor add clarify message to dead letter listener
doc Replace graph stage and processing stage by operator in .md files for stream (#25117)
Reflect review comments
EventFilter.error filters all errors regardless of the cause, #25057 (#25125)
Quarantine and cleanup idle associations, #24972
more docs for Sink.queue and actorRefWithAck (#25063)
message adapter catching too much (#25110)
define interfaces for all Typed extensions, #24776
Make sure Serialization.currentTransportInformation is always set, #25067
Add example for Java typed serialization (#25007)
Clarify mailbox configuration entry location in documentation (#25071)
move Typed ActorMaterializer to scaladsl/javadsl, #24868
Better warning message on cluster sharding registration  (#24906)
Rename Typed TestKit, #25084
Typed testkit: Adding proper NoEffects assertions (#25062)
Less typed stop misbehavior (#25097)
Replace processing stage with operator
Replace graph stage with operator
=str #25043 using materializer.executionContext in UnfoldResourceSourceAsync (#25114)
Do not tear down connections on IllegalArgumentException from serializer #24910
Bump sbt and sbt-jmh version (#25103)
change "but, " to ", but" in modules.md (#25107)
add Behavior.orElse, #18785
Add ref directive to GraphStage in .md files (#24995) (#25102)
consistent wording; operator instead of combinator, in remaining places (#25101)
Add library dependency section to documentation (#25010)
Fail FileSubscriber's Promise if it can't open the file #24889
Remove words such as simply and obviously from docs (#25095)
Java API for AsyncSerializer, #25078
=str #25091 javadsl ZipWithIndex to return java.lang.Long
Reducing log level of restarting to WARN #25019 (#25023)
+act add java.time.Duration support Actor javadsl (#24993)
Add convenient version of recover, recoverWith and recoverWithRetries for javadsl.Flow (#25036)
Update akka-paradox (#25077)
Add unit tests and polish Javadocs with lambdas for PatternsCS. #24881 (#24998)
consistent wording; stream ops are "operators" (#25064)
groupBy does not invoke decider
Make KillSwitch documentation more accurate (#25066)
Remove test reliance on application.conf (#25027)
UnfoldResourceSource closing twice on failure, #24924
Introduced new awaitAssert methods accepting java.time.Duration parameters
Akka Typed ask() for Akka Streams (#24892)
Update paradox theme version (#25056)
Add gradle to all dependency doc sections (#25031)
Removed not used UntypedPropsBehavior (#25054)
Handle a negative value returned by Math.abs() #25034
Define ! and ? in EntityRef. ticket #24922
Issue 24687: Transfer of PerformanceSpec
Additional tests for async boundaries and GroupBy #24676
Note what happens if a node sees its self as Down
Allow `groupBy` to recreate already closed substreams #24758
Documentation of wrapping PersistentBehavior in typed actor persistence #24679 (#24942)
First JCTools mailbox benchmark, #25044
prove that it is possible to integrate JCTools for mailboxes
Add scaladex badge with the latest version (#25032)
Disable TlsTcpWithActorSystemSetupSpec when not running tcp-tls tests
Revert "Look for perf-java-flames on path in MultiJVM perf support" (#25022)
Upgrade Aeron and make use of channelStatus on subscription
=doc missing ACK reply in doc example (#24997)
Look for perf-java-flames on path in MultiJVM perf support (#25003)
=doc Note that Aeron is only supported on Linux, Windows and Mac
Remove application.conf from typed test projects (#25015)
=doc fix the dead link for Failure Detector (#25002)
Configurable SSLEngineProvider in classic remoting, #23732
Sample code for joinSeedNodes programatically #24041
Remove erroneous in distributed data doc (#24999)
Upgrade to Scala 2.12.6 (#25001)
add BehaviorTestKit.runOne and .ref (#25013)
Use 'same thread' execution context in UnfoldResourceSourceAsync (#24911)
Clarify in Scaladoc that failed sinks are removed (#21693) (#24890)
RestartWithBackOff delay cancel to wait for failure (#24795)
=str clarify invocation semantics of wireTap, make test less flaky #24979
Allow reuse of journal loading logic (#24990)
=doc fix using PatternsCS.retry in java docs
Async serializer marker trait (#24981)
=str javadoc rewording on new wireTap method
 =str #24934 sub timeout must be cancelled when streams establish conn
str #24934 - fix stream reference timeout
=doc make akka.paterns,PatternCS imports explicit in gracefulStop docs #24912 (#24913)
+str add in-line wireTap operator for sideeffecting (#24610)
Enable header plugin for the MultiJVM configuration (#24974)
update scala version for travis
use travis for mima and whitesource, remain no jenkins for tests (in parallel) (#24968)
Add tests for BoundedBlockingQueue (#24850)
Harden ClusterClientHandoverSpec #24959
Harden StreamTestKitSpec #24956
Reduce size of jenkins logs
Add classtag to tap/monitor for interception
fix contramap documentation typo (#24950)
Stream overview anchors
proper child creation from BehaviorTestKit
make path of StubbedActorContext configurable
Possibility to replace Typed extensions via ActorSystemSetup, #24954
Move stream documentation to their own files
Adds support for the signature directive to the paradox configuration
First start of stream reference docs template
Support Typed ActorSystem with Setup (#24937)
=doc fix duplicate "." (#24947)
fix trailing space, fixes pr validation (#24945)
Minor updates to stream ref docs
bump Mima.latestPatchOf25
Update circuit breaker docs to only show one language's examples (#24923)
Bind map operation to value
Link to multi-dc persistence
Update actors.md (#24920)
Remove duplicated ask section subject
Cont. fix broken explicit ask pattern for Java, #24587
Cluster receptionist and new reincarnation of node,  #23683
AutoReceivedMessage with Timers bug fixed (#24080)
+doc Add examples to Sink.actorRefWithAck (#24854)
Link to forum instead of mailing list from readme (#24886)
Add java.time.Duration support in the JavaDSL in akka-actor module #24646 (#24883)
harden TransportFailSpec
Optional snapshot store spec #24687
Add some cross linking with Play and Lagom (#24844)
DSL ActorContext extends typed ActorContext #24823 (#24829)
remove dependencies of provided scope (#24827)
Clear system messages sequence number for restarted node, #24847
update sbt (#24871)
add eagerCancel to Partition and Balance stage (#22339)
clarify the resolve debug logging (#24858)
Make sure to close resource in UnfoldResourceAsync  (#24842)
=build upgrade to SBT 1.1.3 (#24863)
Ported ActorBenchmark to typed (#24815)
Remove explicit outlet selector from graph docs (#24852)
add weakly up to leader actions list (#24849)
more efficient MDC in Typed persistence, #24787
Akka event logging unnecessary ' started' while shutdown #24803
=clu #24840 deprecation mark also in reference conf, removal-margin (#24841)
override watchWith in EffectfulActorContext, fixes #24924 (#24828)
Harden TcpSpec: wait for port to be bound
ArteryMessageLoggingSpec pick up command line overrides for akka settings
automatic throttle burst size, #24699 (#24784)
use new Typed persistence impl in javadsl, #24753 (#24802)
Remove incorrect comment from MarkerLoggingAdapter and deprecate LogMarker#extractFromMDC (#24808) (#24818)
use java.time.Duration in Typed javadsl, #24646 (#24804)
BehaviorTestKit - hasEffects and expectEffectPF
Update ssl-config (#24799)
More generous timeout in typed ClusterApiSpec (#24797)
better Typed HelloWorld, #24491
log warning if heartbeat sender ticks are delayed (#24785)
Log sent/receive message log level check #24774
Allow nested typed timers #24366
Extrapolate stage and expand redoc  #23804
Typed logging MDC improvements (#24729)
= build bump to sbt 1.1.2 (#24791)
Consolidate docs on disabling Java serialization (#24790)
GraphDSL create with Seq[Graph] added #24067
Added retry pattern #22276 (#23997)
fix #23618 : Support for persistence dynamic configuration at runtime (#23841)
Change Artery TCP to use bind address (#24773)
mima filter for PersistentActor.defer
Use genjavadoc 0.11 which is needed for Scala 2.12.5
Add delivery semantics notes to stream refs (#24777)
Many recoveries spec: Transferred (#24767)
[docs] added notes where the code was unclear for beginners (#24757)
=doc using java.time.Duration for stream's javadsl
+ testkit Add java.time.Duration to testkit's javadsl
= deps Upgrade Scala to 2.12.5 (#24762)
Remove some of `Unused import` warning (#24750)
=typ #24683 Behaviors receive, receiveMessage, receivePartial, receiveMessagePartial (#24718)
improve docs and test style of lazyInitAsync (#24754)
materialized value of Flow.lazyInit must be a Future #24670 (#24685)
=str #24581 Bugfix in VirtualProcessor (#24722)
minor improvement of ClusterReceptionist loading (#24739)
less aggressive resend of Artery sys msg after nack, #24744 (#24745)
=doc Note Source.queue backpressure behavior on stream integration page (#24746)
Typed persistence tests: RecoveryPermitterSpec (#24748)
Small RS compatibility fix in cancelled sink (#24749)
+ str Add java.time.Duration to akka-stream's javadsl.* (#24706)
+ str Add java.time.Duration to TimerGraphStageLogic. (#24712)
Capture the Success companion object as well as its class (#24747)
Remove the duplicated class Coroner.scala
Add missing import
Remove some of `Unused import` warning (#24650)
Adding explanation for Java DSL TestKit#awaitAssert return value (#24110) (#24737)
Expect effect type/class for BehaviorTestKit #24714
Improve Source.queue scala doc based on user feedback (#24734)
Java Flow dsl lower bounds incorrect #24368
Subscribing twice should cancel second subscriber #24719
Split up receptionist implementations #24615
Make use of the fact that identity is eliminated (#24702)
 Issue 24490: Refactoring of ActorContextSpec (#24644)
JavaDSL mergeMat ignores eager complete param (#24713)
Execute tasks from Actors constructor on creation of BehaviorTestKit #24703
Issue 24594: Integration with sbt-headers and initial header population
Adding additional details to the auto-downing section of the documentation to indicate the consequences of using it (#24697)
Remove default parameters in doc journal (#24704)
=doc #24688 link to akka cluster bootstrap in docs (#24693)
Subscription timeouts should not hit after stream ref subscribe #24626
recovering = replaying naming change
simplify pendingInvocations
cleanup and make snapshots work, make event timeout work too
may want to benchmark typed persistence
add MDC logging to StdOutLogger, making withMdc in Akka typed usable
make PersistingEvent MutableBehavior
EventsourcedRunning, internalPersist, internalPersistAll
reduce boilerplate for passing setup (and [C,E,S])
WIP towards immutable style
Rename PersistentBehaviorImpl => EventsourcedSetup and pass setup around directly
Allow internal custom implementations of DeferredBehavior
separate PersistentBehavior API and implementation
=per native typed implementation of Eventsourced=>PersistendBehavior timeout is explicitly a message of Command
Do not drop messages in delay with EmitEarly when buffer overflows (#24642)
Eliminate identity flow when possible #24554
Update PersistenceQueryDocSpec.scala (#24405)
+ actor add java.time.Duration to AbstractFSM ,ActorSelection ,Scheduler and AbstractScheduler. (#24651)
Add serialization with transport information method in public API #24321 (#24515)
Revert "Unidoc directives for cluster md files" #22904
= util add Throwables helper to help fatal checking of Throwable for Java,alias with Scala's Nonfatal pattern matching. (#24661)
Unidoc directives for cluster md files #22904
lazy init of SerializationExtension in Artery, #24620 (#24667)
parity for Sink, for preMaterialize operation (#24657)
Revert "TCK: Empty Flow[Int]: onSubscribe should be called prior to onComplete always " (#24678)
deduplicate logic for IODispatcher #24604 (#24619)
ClusterSharding: automatically choose start or startProxy by a node role (#23934) (#24669)
tck issue or bug,  onSubscribe should be called prior to onComplete always (#24582)
= all remove semicolons "bye-bye semicolon" (#24659)
Add serializer for `akka.NotUsed` (#24599) (#24600)
Add java duration support for Source.tick (Java DSL) #24339 (#24645)
=pro add log timestamps to all sbt output and enable sbt debug logging for multi-jvm for ssh debugging
slowdown LargeMessageClusterSpec for tcp transport, #24576
Add log() method to typed Logging API #24648
fix Trigger references in the stream cookbook example for digest #24317  * replace Trigger with Unit  * cosmetic changes in docs.stream.cookbook tests
+ben add DirectBufferPoolBenchmark, just for reference
Add unidoc directive for markdowns #24426
Adds test and caps the timeout check period to 1s  #24616
MiMa latest release updated (#24638)
=doc fix the wrong position of a sentence
2.5.10 wire protocol regression (#24625)
Remove "them them" (#24613)
Avoid infinite recursion in AbstractPersistentFSM, #24448
small adjustment of the aeron vs tcp documentation
fix deployRsync param in release script
fix blocking-io-dispatcher setting, #24357
Actually use the relative blocking io dispatcher setting #24357
Receptionist message improvements, #24511 and #24492
Typed Java testkit, #24551
=str add simplified ask(ref) that defaults parallism 2
+str #18142 ask pattern integration for akka streams
LineNumbers for Lambda's #24480
use Flow.lazyInit in Artery TCP (#24590)
ambiguous method byteBuffer.limit with jdk9 (#24593)
+str Add Flow.lazyInit (#24427) (#24527)
prune entries in ClusterReceptionist from nodes that have been removed, #23683
Issue 24519: Created method lazilyAsync for both DSLs and adds section in docs (#24568)
Exception from receiveRecover should stop the PersistentActor #24192
fix TlsTcpWithHostnameVerificationSpec when run without tls
Stop unused Artery outbound streams, #23967
Separate Java and Scala typed TestProbes #24542 and #24334
Adding preMaterialize operator for Source #23894 (#24497)
+ stream add collectType operator to Source,SubSource,Flow and SubFlow for javadsl.
Adding defer method to PersistentActor
#23951 Fail materialized future of IO stages when stream fails
Describe options for hostname verification and certificates, #24390
Add Artery TCP/TLS transport, #24390
Add Artery TCP transport, #24390
Prepare Artery for alternative TCP transport, #24390
Rolling update config checker, #24009
typed Cluster.sharding.spawn fail fast #23708
Cut the detail level in half
fix java documentation snippet by being explicit (#24569)
Link to Vavr sample project (#24570)
Make stashing timer messages work  (#24565)
A bit more generous timeouts in RateTransformationDocSpec #24559 (#24564)
#24411 Give a bit more time to the consumers (#24545)
alsoTo eager cancellation #24291
Deprecated method used in docs
+tkt Provide run method that doesn't canonicalize behavior #24486 (#24487)
Typed: Renaming deferred to setup #24548
Document that a scheduler is needed for standalone typed ask  #24219
Add dispatcher name to names of threads created by AffinityPool (as it is already done for ForkJoin and ThreadPool) #24544
Chunker should only pull if buffer is empty (#24019)
Generate file to use instead of assuming class loader type #23902
Add wireTap combinator (#15077) (#23824)
Add example of testing actors with subclassing (#24539)
Too many Tocks in typed TimerSpec #24360
=pro fix osgi plugin muting AutomaticModuleName (#24534)
Add log() in stream-error.md (#24522)
StreamTcpDocSpec: Less race, better error if client fails #24500
Less fragile way of waiting for stream completion #24501 (#24528)
Add warning about AsyncRecovery assumptions c* plugin makes
Make MetricsBasedResizerSpec a bit slower but less GC sensitive #24397 (#24449)
=doc cluster client: Introduce javadoc and scaladoc directives (#24524)
Cancel GroupBy when all substreams cancel (#24438)
cleaning up documentation on deprecated actorSubscriber and actorPublisher
Bump sbt to 1.1.1 (#24517)
Changed StreamRefs docs title to RS over the network (#24506)
throw NoSuchFileException if the file is not there on FileIO.fromPath #24512 (#24513)
Remove auto-fusing option from docs (#24510)
add JsonFraming usage example to the docs #24495 (#24498)
Java DSL for typed persistent actors, #24193
Actor interaction patterns docs for typed (#24404)
Add serializer for ServiceKey, #23687
small Typed doc improvements
Document failure bubbling in Akka Typed, #22665
Specific message for serialize-messages errors (#24414)
Document how to refer to methods from scaladoc (#24482)
remove PersistentBehaviors.persistentEntity
Document preference of 'internal' package (#24481)
Testkit docs use deprecated messages (#24472)
add dataCenter in ClusterSharding API via settings, #23689
separate scaladsl/javadsl and avoid overloaded spawn, #24470
entityId => Behavior in ClusterSharding API, #24470
fix Sharding StartEntity, #23679
Api improvements of Sharding handOffMessage, #23686
Port WithLogCapturing + Silence TLSSpec (#24476)
Supervise also deferred initialization, #24052
=typ #24456 in ActorAdapter catch exceptions from ask/message adapters
=typ fix race condition in AskSpec
Ability to disable coordinated shutdown phases #24477
=typ allow creation of ActorSystemAdapters only after ActorSystem is fully initialized
=typ #24279 introduce special startup state for typed guardian actor
=typ #24279 Add tests for ActorSystem startup / shutdown scenarios
change spelling of behaviour to behavior, #24457
Make typed test probe names consistent (#24469)
Add dependency snippets to relevant doc sections (#24418)
=str #24298 ActorMaterializer now starts actors under /system unless inside ActorContext, in which case it still is child actors as usual
Typed stream adapters, #23604
WIP initial typed streams adapters
Scheduler that manually advances time (##24150)
document and cleanup stashing, #22275
Document thread safety of ActorContext #24410
Make sure it is obvious ctx.stop(non-child) does not work #18524
Logging for typed #23326
Introduces eager cancellation for divertTo
Increase timeout for system termination in BasicClusterConfigSpec (#24446)
=doc #24435 copy mutable maps before sharing them as messages in java (#24447)
add missing returnRecoveryPermit (#24439)
Handle TCP connection timeout while resolving #24437
=clut #24311 timer event may arrive after we already identified successfuly (#24442)
MultiDcSplitBain: only subscribe to unreachable after split
More details in the coordinated shutdown docs (#24436)
Adds RestartFlow to restart only on failures #24421
=str #24413 make sure to check if available to push (#24434)
=typ #23697 start typed receptionist eagerly
Use getWhenTerminated in Java examples (#24428)
=doc Some improvements on overview of Akka modules (#24429)
Shorter heading for scalaFiddle example (#24416)
harden DistributedPubSubRestart, #24100
Adding streams to the list of capabilities (#24417)
Suppress 'match is not exhaustive!' warning (#24408)
fix typo (#24415)
make NonBlockingBoundedMailbox the default example (#24401)
Remove explicit fsync from FileSink (#24314)
=act don't initialize Serializer extension in `RemoteActorRefProvider`
=typ load typed extensions as part of a separate untyped extension
=typ initialize ActorRefResolver lazily in MiscMessageSerializer
sbt-jmh 0.3.3 now works with dtrace (macs!) (#24396)
use `expectTerminated`
Document tiers api for akka typed (#24382)
Disallow remote deploy for typed actors #24352
Add ApiMayChange warning in docs of StreamRefs (#24389)
add more tests + docs
Snapshots for typed persistent actors (#24350)
More correctly detect cluster in Receptionist (fixes #24379)
Message transformer, without risk of resource leak, #23770
groupBy pulls upstream when a substream materialization is waiting #24353
The most common partition-case, as divertTo(Mat) #24388
+str #24229 back to Future[] API for stream refs
+str #24229 implement flattening of mat values, may block; SHOULD BE INTERNAL API
+str #24229 move SinkRef / SourceRef to akka.stream
+str ##24229 naming the stageActor via def stageActorName
+str #24229 first working SinkRef, though serialization is wrong somehow (when serialize-messages = on)
!act #23668 fail watch/watchWith when previous watch to same subject registered different message
Stashing in Typed, #22275 (#24349)
actor-typed: remove unsupported DispatcherSelectors #24337 (#24380)
TestProbe support for actor stop checking (#24365)
Typed docs for sharding and singleton (#24364)
Too quick merge of ActorRef serialization with incorrect formatting of test (#24377)
format ActorRefSerializationSpec
Use Java serialization for typed ActorRef #24135
Actor-to-actor ask for typed, #23770
=typ Improve error message for Assertion checking (#24359)
Remove access of state from spawnAdapter in ClustserReceptionist (#24336)
Add typed supervisor strategy and some basic docs (#24341)
=typ Examples how to stop actor with cleanup (#22776)
Typed - cleanup canonic #22841
#24303 ActorSystem.getWhenTerminated which returns CompletionStage
Keep addition affects if persisting effect is none (#24345)
Rename scaladsl/javadsl Actor to Behaviors, #24071
Allow tagging in persistence typed (#24217)
harden RemoteDeploymentSpec, #24252
harden StreamTestKitSpec, #24308
add maxRestarts to RestartWithBackoff #24129
Simpler tls over tcp #24153
More generous timeout in DaemonicSpec (#24322)
harden AeronStreamConsistencySpec, #24190 (#24326)
Add streams recipe for 'source from function' (#22074) (#24132)
 Cleanup of UnfoldResourceAsync and fix for #24119
harden BasicClusterManualSpec, #24293 (#24318)
add label 'good first issue' (#24296)
Actually check the shutdown status before materializing anything (#24307)
Remove redundant Futures tests (#24095) (#24130)
Remove Exiting/Down node from other DC, #24171
harden CoordinatedShutdownShardingSpec, #24113
Update whitesource plugin to the latest (#24313)
fix compilation error (expectNoMsg) (#24312)
Use expectNoMessage in typed testkit (#24250)
Test that large messages don't disturb cluster heartbeats, #24055
additional test of SendQueue
#23695 Remove onSignal from typed persistent actor (#24253)
Update the latest versions for MiMa checks
Update LevelDB (#23907)
Update whitesource (#23757)
#24104 Give a bit of time for consumers to register
Adds stacktrace to the logged warning in onPersistRejected() (#24263)
A bit more text about the clustered receptionist
Review updates and making the Receptionist API work from Java plus workaround for guardian start race
Review updates and making the Receptionist API work from Java
Cluster typed examples in scala and java
Receptionist docs and examples
Untangle settings from attributes in materializer #24063
Update sbt-paradox-akka
+rem #24265 protobuf serializer for Address and UniqueAddress in akka… (#24267)
harden ClusterClientSpec, #24277
=doc,per Include link to nice article about Events as First-Class Citizens (#24262)
Reply to GetShardHome requests after rebalance, #24191
Version checking utility #24030
reply to known shard locations immediately when waitingForUpdate, #24064
=tes #24270 expectNoMessage should pull the unexpected msg  (#24271)
cluster client handover when receptionist's node leaves the cluster (#24167)
add flag crdt constants (#24208)
Update tutorial_5.md (#24268)
! project upgrade to SBT 1.1.0 (#24257)
Remove superfluous final modifier #19493
Cluster singleton manager: don't send member events to FSM during shutdown (#24236)
Extend copyright into 2018 (#24246)
Update copyright to 2018 (#24241)
Typed async testkit (#24203)
Allow member to leave a cluster via CoordinatedShutdown.run when MemberStatus is Joining/WeaklyUp/Up. (#24152)
Fail fast on empty string persistenceId in PersistentActor (#24239)
update java and scala doc to use the terminate method (#24233)
fix up AbstractActor's Java doc. (#24212)
rewrite FlatSpec tests using WordSpec #24186
Adding new book reference for Akka HTTP (#24218)
+ actor #15446 add external predicate to ReceiveBuilder (#24221)
Docs: add dependency info in docs for akka test kit (#24232)
= paradox fix typo (#24207)
Upgrade to sbt 1.1.0-RC4 (#24206)
Initial pass of typed testkits + documenation (#24187)
Remove death watch and supervision mechanics (#24198)
Initial docs for typed persistence (#24197)
document rolling upgrade of serializers (#24200)
Use System.getProperty for ttl values found using legacy sun properties #24188
Upgrade to SBT 1.1.0-RC2 (#24181)
New docs tree for akka typed (#24182)
Move misc serialiser to akka-typed from akka-cluster-typed (#24184)
Update sbt-api-mappings (#23843) (#24157)
Move typed EventStream to akka.event.typed package
made correct to sentence in documentation (#24180)
Use Wordspec for all tests
delete unnecessary code (#24168)
Reactive Streams 1.0.2 (#24178)
update grammar and code highlighting (#24174)
Remove akka typed actor system implementation
Separate typed into modules (#24173)
Aeron 1.7.0
tmp fix failing CoordinatedShutdownShardingSpec, #24113 (#24163)
update jmh plugin (#24131)
MultiDcSplitBrainSpec: Turn on gossip loggig; Increase gossip frequency (#24024)
Correcting migration guide to configure serialization of messages (#24159)
Specify user-provided hooks are not disabled (#24136)
Formatting: used textile instead of markdown. (#24139)
Remove superfluous 'for' in log message (#24148)
Split up 'Networking' docs in 'Networking' and 'Clustering' (#24142)
Update Scala 2.11.x version to 2.11.12 (#24033)
Do not publish typed tests #24125
Post 2.5.8 fixes (#24128)
Revert source incompatible sharding changes (#24126)
fix entityPropsFactory id param, #21809
=str use 1.0.2-RC1 TCK, without bumping the API dependency yet (#24108)
Rename AllPersistenceIdsQuery -> PersistenceIdsQuery in docs (#24121)
MapAsync and already failed futures #24117
#24097 Try a few times to get an exception
=str #23953 cleanup ConcurrentAsyncCallback implementation
=str speed up Async callback
fix Typed Cluster Singleton with PersistentActor, #24112 (#24114)
Calls to stash() inside of persist callbacks should throw exception (#22615)
Do not invoke the supervisor twice for the same MapAsync failure #23888
=docs use stream compression in recipe (#23823)
add entity id to sharding props (#24053)
ClusterSpec, race between MemberRemoved and MemberExited, #23449 (#24105)
adds serializer for akka.Done. #23854
Async callback memory leak fix #24046
#24075 Add a buffer to store completion signals
make it possible to disable all jvm shutdown hooks, #24077 (#24093)
Nice CONTRIBUTING.md intro text (#24096)
FusableProcessorTest failure #22981 (#23994)
ScanAsync did not complete in all scenarios #24036 (#24090)
attempt to stabilize the CompressionIntegrationSpec (#23987)
=str convert require calls in GraphStage to ifs to avoid allocs (#24094)
enforce right order of Timers and PersistentActor trait, #24076 (#24081)
Test coverage for stages using invokeWithFeedback #23953
Harden and turn on debug logging for SystemMessageDeliverySpec (#23989)
Add common multi jvm config to cluster tests (#23974)
send crossDcHeartbeatSender over Artery control stream, #24088 (#24089)
add Reason to CoordinatedShutdown, #24048
Run all CoordinatedShutdown phases also when downing, #24048
=act fix null sender in FunctionRef DeathWatch notification (#24084)
Use Future.successful/failed instead of Promise.s/f.future
Add Sink.collection #23917
Add Actor.immutablePartial (closes #24015)
CONTRIBUTING.md: No need to mention java and scala directory separation  (#24057)
upgrade to sbt 1.0.4 (#24068)
Add stream-substream.md  #23461
Remove links to ConductR given that it will no longer see active development (#24044)
Revert "Add Sink.collection that generalizes Sink.seq to any immutable collection #23917
fix typo in remoting*.md and actors.md #24061
Add Sink.collection that generalizes Sink.seq to any immutable collection #23917 (#24016)
Attributes on fromGraph(stage) should be treated as on stage #22911, #22523
Don't create multiple outbound envelopes (#24045)
Use CrossVersion.partialVersion instead of regex (#24032)
Update image links (#24031)
JavaSerializer should not supersede other serializer, #17252 (#24002)
Check all dependencies, except NoPublish ones, fail on error (#24021)
Update whitesource to 0.1.7 (#24001)
No submaterializing inner source when outer stream already canceled (#23723)
Add throttle combinator without bucket size in parameters (#23808)
The right place for MiMa excludes
One more tryFailure
Mima
Try fail in case the unbind promise was already completed
Put those @params last
Complete unbind promise earlier if possible and always in postStop
Mima and internalizing things that should have already been internal
Formatting
Make TCP server unbinding observable #23798
Handle race where broadcasthub consumer already cancelled (#23970)
Make imports explicit in timer example (#24010)
fix double return of recovery permit, #24003
=str cosmetic changes to VirtualPublisher
disambiguate serializer in typed ClusterShardingSpec, #23993 (#23999)
Add overloaded Effect.persist and renaming Effect.done to none #23964
Include the full apache license text (#23992)
=str #23933 materialization failing hard with nicer message now
=ddata Garbage collect valueDeltas tombstones at merge/mergeDelta #22974
Dependency updates (#23852)
fix flow control in FanOutThroughputSpec, #23198
Improve error message for AbstractPersistentFSMTest failure (#23985)
adjust burstSize in FanOutThrougputSpec, #23198
Clarify ScalaDoc of Actor.immutable (closes #23977) (#23982)
add serializer for typed ShardingEnvelope, #23772
additional hardening of RemoteReDeploymentSpec, #23838
Separate sharding regions and proxies, #23472
mark FanOutThrougputSpec as pending, #23198
=pro #23931 define automatic module names explicitly (#23960)
Docs - re-order Java snippet delimiters for Getting Started Guide Part 4 #23966
Make the actor-terminate-unexpectedly test more verbose in case it fails again #21839
#23484 Fortify RestartSpec
Improve error message when pushing unpulled outlet (#23923)
Allow RestartSource.withBackoff to restart only on failures #23881 (#23911)
Increase timeout and remove sleep
=act #23961 increase timeouts in fsm spec a bit, change from deprecated method (#23969)
Be more explicit about commenting with link to Issue in CONTRIBUTING (#23968)
=doc fix ssl-config link (#23897)
Simplify Artery remote deployment and make inbound-lanes=4 default, #21422
Pass HandshakeReq in all inbound lanes, #23527 (#23842)
Provide access to known shard types add test #23912
Provide access to known shard types #23912 (#23913)
Multi-jvm testing docs improved #23954 (#23957)
fix the name of SinkModulePhase (#23939)
Update ISSUE_TEMPLATE.md
Create new issue template (#23944)
sbt1 camelcases commands (#23932)
=stk accept Throwable in stream probe's sendError methods (#23940)
+doc document lifecycle of ActorMaterializer explicitly (#23836)
Revert "#23329 PersistentFSM: andThen callbacks are not executed when stay() (#23943)" (#23947)
#23329 PersistentFSM: andThen callbacks are not executed when stay() (#23943)
fix deprecation warning in project/MultiNode.scala (#23941)
Move coordinated-shutdown config from test/resources, #23879
rename according to previous review, #23919
#23880 Specify scope when disabling scaldoc task (#23928)
Optimize TCP stream writes, #23919 (#23920)
Provide meaningful name for SubSource.out/SubSink.in (#23922)
small perf improvement of isGossipSpeedupNeeded for single-dc
#23848 Align typed persistence API with ReplicatedEntity API
#23861 Test maximum burst immediatelly after drain
Avoid javax.xml in SerializeSpec (#23903) (#23905)
#23880 Set sources for doc task to empty, as skip does not seem to work (#23900)
Cross DC gossip fixes #23803
Add combinedMat method to Source (#23809)
Stream cookbook sample for adhoc source (#23761)
Update to scala 2.12.4 (#23896)
Update logging.md (#23892)
Stop actor system from shutting down on Cluster.leave (#23872)
harden RemoteScatterGatherSpec, #22192
+str  AsyncCallbacks lost on finished stage by error
#23880 Do not generate api doc for NoPublish projects
fix confusing logging when receiving gossip from unknown
fix missing letter typo
fix 2.13 version checking in MiMa config
Remove shutdown hook on shutting down (#23866)
=doc Java Actor doc for 2.5 updates
shm leak in ClusterSingletonProxySpec, #23844
Turn on gossip logging for flaky test + improve test error msg (#23868)
harden RemoteReDeploymentSpec, #20180 (#23867)
Compression level for gzip flow (#23845)
Format docs like we do our own code
Switch languages in paradox without page refresh (#23544)
Update to Sbt 1.0.3 (#23860)
improve AkkaSpec.getCallerName, #23862
Port build to SBT 1.x (#23850)
Nicer message when expectCancellation() fails (#23847)
Harden restart of Artery stream with inbound-lanes > 1, #23561
Retry creation of ActorSystem in remoting tests #23481 (#23769)
Log coordinated shutdown as debug (#23839)
Fail fast on null messages #23796
fix wrong inheritance of AbstractPersistentLoggingFSM, #23436 (#23831)
Use scaladoc and javadoc directives in stages-rate.md (#23811)
Accept 'Join' messages from nodes without dc (#23822)
=str mark overflow strategies with DoNotInherit
=doc Clarify leveldb dependencies in docs (#22816)
=doc fix typo in dispatchers.md (#23825)
Spawning of typed persistent actors from untyped ActorSystem
=doc Correction: it's -> its (pronoun) (#23801)
Update to scalariform 1.8.1 (#23806)
Eplicit Java version requirement for OSGi #23795 (#23813)
Remove the JUnit test runner (#23784)
Block ActorSystem creation until Artery is bound
Update community tag to help wanted (#23802)
Don't use TestActorRef for async testing  #23445
Corrected link to docs sample #23759 (#23760)
=doc Full word "upstream" in docs (#23797)
Update Config to v1.3.2 (#23790)
Swap unit for Void so we dont get wrong type exceptions on JDK9 (#23794)
Update scalariform (#23778) (#23783)
Update event-bus.md (#23786)
+str add java Compression.gzip and deflate (#23779)
https for snapshot repo (#23780)
Fork tests #22979
Fail ignore sink matval on abrupt termination #23726 (#23728)
SharedKillSwitch memory leak fix #23622
Widen within spans downwards in PersistentFSMSpec  (#23715)
Typed ClusterSharding must handle PersistentBehavior, #23773
Eager close tests for InterleaveSpec made deterministic #23724
Clean up JVM shutdown hooks on actor system termination (#23514)
incorporate feedback on the multi-dc docs
=per #23739 deprecate `State.using` to deter Java users (#23740)
=io #23404 stop using sun.net.InetAddressCachePolicy, JDK9 prep
=doc #23421 move Kill docs around and fix snippet (#23429)
fix debug logging in Receptionist and TimerScheduler (#23725)
harden RestartSpec, less timing sensitive, #23593 (#23731)
mockito version supporting jdk9  #23402
Remove structural type that relies on runtime type in sun.nio #23400, #23403
Verify removal and add of new node incarnation in multi-dc, #23585
New implementation of expectNoMsg in TestKit #23224
Add parameter eagerClose to Flow.interleave #22710 (#23718)
Keep the refuseUid in a better way, #22156
Java 9 Unsafe access to String value type mismatch. (#23710)
fix issue with vvector handling in ORSet.mergeRemoveDelta #22890
enforce same DC for isOlderThan, #23307 (#23625)
Make sending messages to dead letters by DistributedPubSubMediator configurable. #23462 (#23615)
Add more doc for framing on tcp streaming #23325
EntityTypeKey in typed Cluster Sharding, #23690
=typ,clu akka typed cluster sharding, #23698
provided cluster dependencies in Akka Typed
Typed library-extensions were loading the wrong thing (#23701)
Typed actorref serializer to allow for java serialization of messages (#23696)
Add 'def andThen(callback: ⇒ Unit)'
Some additional api adjustments, #22273
Chaining side effects (callbacks and stopping)
impl and test of signals
Move ApiTest to PersistentActorCompileOnlyTest
first impl of Typed PersistentActor, #22273
Some experiments with a typed api for persistence
=type Cluster and local Receptionist, #23634
Add onSignal behavior factory to Akka Typed DSL (closes #23640)
cluster apis for typed, #21226
Add Code of Conduct, inspired by Play Framework's (#23673)
=doc Remove duplicated 'to be's. issue #23646 (#23671)
Avoid side effect in ActorGraphInterpreter#toString #23656
=jdk9,str JDK9 ready classes, in special directories (#23650)
DistributedData extension
convenience for ask
add remaining commands
incorporate feedback
Subscribe
first stab at javadsl for Typed ddata
WIP ddata api for Akka Typed
First test for Akka Typed remoting, #21225
Disambiguate 'position' and 'limit' calls (#23659)
=act small compilation fixes for JDK9 (#23658)
=str hide deprecated lazy vals behind def in FanInShape et al (#23655)
Add AbstractPersistentActorWithTimers, #23652 (#23653)
Disable min-nr-of-members for ClusterSingletonProxySpec #23619, #23627
Nicer way to determine `snip.akka.base_dir` (#23648)
Added journal compaction behavior for LevelDB #21677
Further stream shape cleanups (#23633)
deprecate Source.combine instance method #22452
fix typo (#23630)
=doc Make ActorSystem name in tutorial_1 consistent with documentation (#23629) (#23635)
More consistency between UniformFanInShape and UniformFanOutShape (#23321)
=str 21732 rewrite file souce with NIO and GraphStagу
=rem Relax Aeron CNC version check but log a warning. (#23572)
=doc,release Baptising the release server (#23606)
test Scala version in a Scala 2.13 friendly manner (#23620)
=tes Update documentation for testkit fishForSpecificMessage #23608 (#23609)
=tes #23528 Hand out temporary loopback addresses from a larger pool (#23530)
=pro Update dependencies and plugins to latest. (#23591)
new actor benchmark (#23489)
=doc #23487 add missing scala snippet in testing doc (#23488)
+str #23392 AbstractGraphStageWithMaterializedValue for Java users (#23394)
Add timeout to abort joining of seed nodes, #23502
=doc Some documentation fixes (#23616)
=str #23536 Complete and fail ByteStringParser eagerly (#23594)
=str #22881 test also resume case for throwing mid-stream mapAsync (#22915)
Materialized value injected per materialization #23577
Remoting for Akka Typed, #21225
add more gradle deps
Update whitesource plugin (and MiMa)
Issue #23588 Typo in Scala version of Stream Composition
Add parentheses to startCoroner method call (#23599)
Add customized NPE for null actor system (#23580)
use right youngest when moving to Up, #23582
Mark all the around hooks as internal in the api docs (#23587)
Consistently spell Maven and Gradle with uppercase (#23569)
=str failed: FlowSplitWhenSpec (#23278)
fix snip of ClusterShardingTest, moved
add mima filters
remove mima changes to avoid merge conflict
increase timeout in MultiDcSplitBrainSpec
renamed the whitesource stable product name
#23484 Guard against double pull (#23560)
clarify sender of throttle example, #23485
Connect the dots for cross-dc reachability, #23377
DeadLetterSuppression for Replicator.UpdateSuccess in distributed data #23553
Missing become after CurrentClusterState in CrossDcHeartbeatSender, #23371
avoid unique actor name issue in EndToEndEventAdapterSpec, #23483 (#23520)
Data center reachability in cluster state (#23359)
Don't use WeaklyUp immediately, #23554
=str add latch to ManualProbe to popagate events only when subscription is done (#23365)
Update tutorial_5.md (#23550)
=clt #23215 fail with nicer message if PubSubMediator gets null message (#23216)
+str fix for "fail offer future when stream is completed" QueueSource/SinkSpec
Docs: Persistence - add configuration example for eager init. of plugins (#23545)
=art #23504 Keep more old decompression tables (3)
Update configuration to exclude akka-bench-jmh from whitesource (#23542)
removing ThreadLocalRandom import (#23540)
Add alsoTo to stages (#23537)
Document rolling upgrades of clusters using ddata (#23372)
Update tutorial.md
fix NodeChurnSpec tombstones, #23369
=doc Transform broken link to ActorNotFound to inline code #23517
Updated codahale metrics dependencies to 3.2.4 #17515
fix duplicated FlightRecorder event 91, #23323
fix link labels in migration guide (#23491)
Modularizes the queue-selector in AffinityPool
Better use of Artery lanes for ActorSelection, #23150
Update to Reactive Streams 1.0.1
Replay all events if snapshot is unhandled #23469
Add PartitonHub, #21880
+doc more details on akka.actor.Status support in ask (#23463)
Replace ClusterRouterGroup/Pool "use-role" with "use-role-set" #23496
Correct location of implicits in comment #23492
disclaimer about security vs binary compatibility
security announcement CVE-2017-5643
Upgrade camel-core dependency to 2.17.7
=typ toTyped always returning the same adapter #23405 (#23441)
harden RemoteRestartedQuarantinedSpec, #17314
=str #23398 groupedWeightedWithin zero cost bugfix (#23399)
Rename addr to address in non-public API  #21874
throw java.io.NotSerializableException during deserialization (#22821)
=doc fix issue with Graceful Stop (#23478)
Docs: Cluster Usage (#23479)
=slf show how one would use mdc and a marker in slf4j
ImmutableIntMap optimizations
=act #23458 cross link Patterns java APIs (#23459)
=doc Akka Persistence: sbt/Maven instead of Scala/Java (#23450)
=str update reference FlowMaterializer to ActorMaterializer (#23457)
Typed test kit improvements #23360
Persistence: Reference.conf : remove refs to persistent view (#23451)
Update CONTRIBUTING.md regarding MiMa issue filters (#23448)
Load MiMa filters from file (#23083)
=str add Input/OutputStream mapMaterialized value warning in doc (#23424)
Cleaned up the comments and fixed typo (#23418)
Docs: Akka Persistence: Better intro for snapshots (#23430)
Stream supervision doc clarification #23376
=act #23437 wake up SelectionHandler every 10 seconds to prune stale selection keys
fix typo (#23434)
Annotated extendable cluster tool actors with DoNotInherit (#23335)
Removed TOC (#23425)
Docs: Improve `TwitterStreamQuickstartDocSpec` fiddle code (#23411)
+slf #23409 support org.slf4j.Marker
Small typo (#23419)
remove references to persistent views (#23426)
fix small issue (#23428)
fix #23416 instantiate exceptions at right time
=doc fixed broken link to CompletableFuture (#23412)
Add some logging to track down #20180
=doc replace java version with a link - distributed-data.md (#23052)
=doc consolidate content of distributed-data.md (#23052)
give a more comprehensive doc
add zero-copy constructor to create ByteString from external array
fix comments for maxParkNanos and spinning
Restart Flow/Source/Sink #19950
Reencoding idle tracking to take place withing the AffinityPool's IdleStrategy
Optimizations and correctness fixes to the AffinityPool Notably: * Reimplementation of ImmutableIntMap for much faster performance * Benchmark for ImmutableIntMap added to akka-bench-jmh * Many small performance improvements to the impl of AffinityPool * Correctness fixes for pool lifecycle management
Include imports in the GraphStage logging snippets (#23378)
Add streams cookbook to java docs again (#23379)
rephrase section on persistence a bit (#23364)
Elminate race in MultiDcHeartbeatTakingOverSpec #23371 (#23373)
fix small issue (#23363)
Update README.md (#23366)
=clu,dc #23354 do not heartbeat to yourself (cross-dc)
Streams QuickStart title (#23356)
=clu,dc #23340 additional test to see a node take over monitoring of remote DC (#23342)
Getting Started tutorial improvements (#23210)
#23118 Fail SourceQueue completion future in postStop
=str upgrade streams TCK to 1.0.1-RC2 (#23343)
DC reachability events #23245
Renamed/moved the self data center setting #23312 (#23344)
Prune version clocks based on merged tombstones when merging  #23318
Remove deprecated ActorDSL section from docs (#23330)
Link index-futures.md and index-network.md (#23331)
merge content of stream-parallelism.md (#23206)
=pro,str Upgrade to Reactive Streams 1.0.1, unlocks #20241
Merging did not prune vector clocks for tombstoned nodes #23318
Improve Java pubsub example
Update to modules.md (#23317)
Update the link to Javaslang (#23316)
=clu #23286 filter emitted reachability event by DC
Docs for multi-DC features
Unbreak MultiDcSunnyWeatherSpec #23310
limit cross dc gossip #23282
Custom frame size computation support in Framing #22129 (#22837)
Add AffinityPool which pins actors to threads (#23104)
=clu #23229 multi-dc heartbeating, only N nodes perform monitoring
increase timeout due to sometimes slow initialization of lmdb, #23284 (#23302)
Add some more imports to cluster sharding doc examples (#23305)
Support for Actor timers, and fix bug in FSM, #15733
fix copy-pasta mistake in ShardRegion
fix usage of the the leader sorted set in Replicator
MaybeSource rewritten as GraphStage #22789
MultiDcSplitBrainSpec fixed #23288
Document scala/java-specific content in paradox (#23264)
JsonObjectParser escape sequence processing fix #23292
Broaden timeout for SystemMessageDeliverySpec (#23271)
Refactoring of Gossip class, #23290
Rename team to data center, #23275
+str,doc #23274 add ASCII diagrams for Flow.fromSinkAndSource (#23277)
Make cluster sharding DC aware, #23231
Introduce missing team role if necessary (#23276)
=clu fix Reachability.equals wrt versions
=clu add comments for Reachability methods
Support cross team in ClusterSingletonProxy, #23230
Make cluster singleton DC aware, #23230
[WIP] one leader per cluster team (#23239)
Move name parameter to 2nd pos. in typed system factories (#23244)
Add link to akka-http talks on 'books/videos' page (#23268)
Document how to run JMH benchmarks (#23262)
javadsl should use java types #23251
Less abbreviations, more reliable test
Introduce cluster 'team' setting and add to Member
Revert "Introduce cluster 'team' setting and add to Member"
Revert "Less abbreviations, more reliable test"
merge content of stream-io.md (#23236)
Typos (#23260)
Use less of Project.apply
=str #23119 improve docs of SourceQueue.watchTermination (#23208)
Can merging of multiple sources be prioritized? (#22864)
Correct the backpressure API comment for buffer
Make the 'other modules' doc sections (#23233)
=pro update sbt-jmh (readying up for sbt 1.0)
=tes Add parameter scaladocs to expectTerminated (#23227)
Move 'java 8 compatibility' under 'utilities' (#23232)
debug logging in RemoteRestartedQuarantinedSpec, #17314 (#23237)
Introduce cluster 'team' setting and add to Member (#23234)
merge content of stream-testkit.md (#23213)
merge content in stream-quickstart.md (#23212)
=doc Add dependency for Akka Typed #23222 (#23223)
fix typo (mather -> matter) (#23221)
remove duplicate `recoverWithRetries` entry (#23220)
fix unbalanced quotes that mess up formatting (#23219)
merge content of stream-rate.md (#23218)
slow init of lmdb in DurableDataSpe, #22082
enable debug logging in DurableDataSpec, #22082
=doc #23052 merge content of stream-integrations.md (#23203)
=doc #23052 merge content of stream-introduction.md (#23204)
remove scm from akkaPomExtra, included by sbt-git
marking as pending, #23198
adjust number of messages in FanInThrougputSpec and FanOutThrougputSpec
Harden LoggingReceiveSpec, #23140
Use snapshot-after in config for periodical snapshots in PersistentFSM (#22605)
runaway bracket fix
discard large deltas, #23025
revert change of PhiAccrualFailureDetector constructor, #17389
Replace java/persistence-query.md with a symlink to scala/persistence-query.md
Identical contents in scala/persistence-query.md and java/persistence-query.md
add heartbeat delays warning log to remoteWatcer #17389 (#23135)
fix MiMa
Replace java/serialization.md with a symlink to scala/serialization.md
Identical contents in scala/serialization.md and java/serialization.md
Replace java/scheduler.md with a symlink to scala/scheduler.md
Identical contents in scala/scheduler.md and java/scheduler.md
=doc #23052 Identical contents in scala/io-udp.md and java/io-udp.md
=rem #23023 log reasons for disassociations with debug level
Updated books.md (#23157)
Copied as little as possible of the deprecated stuff from sbt (#23147)
=act #23067 by adding logging for None message (#23103)
Ignore unknown messages in LoggingReceiveSpec #23140
Adds scaladoc to each CoordinatedShutdown phase (#23148)
=str #22917 recoverWithRetries allow 0 and negative values
Update whitesource report on release (#23146)
=doc passive mode for fiddles (#23145)
Produce child to send camel results or failures directly to its parent (Producer Actor) instead of itself and then forward
make it easier to configure dispatcher for Camel ProducerChild, #23099
Simplify whitesource configuration (#23141)
made StateChangeEvent public. fixes #23072
increase timeout in ActorsLeakSpec, #23010
Add sbt-whitesource plugin (#23122)
Update camel to 2.15.6 (#23124)
update AeronStat to 1.2.5
changing java stages-overview.md stream-composition.md stream-flows-and-basics.md to symlinks (#23126)
Correction of HDR percentiles logging
Two unrenamed variable references fixed (#23120)
Some cleanups in ClusterClientSpec (#23095)
Log fatal errors to stderr, add exceptions to 'marked' errors (#23109)
=str break out a few source implementations into separate files
=str gather no stack trace for TcpIdleTimeoutException (#23106)
=str typo in exception, it is getStageActor
#22889 Use port 0 for address which is supposed to never be bound
Corrected the setup of contact paths for subscribers #22991
Add fan-in and fan-out benchmarks for remoting
Use akka-paradox version with algolia fix (#23087)
Make sure connections are aborted correctly on Windows  #19611
Document ORMultiMap.emptyWithValueDeltas (#22771)
Added rate normalization and supporting tests. #15283 (#21928)
Make fewer assumption about log msg ordering (#23001)
=per #23042 Recover.none should immediately carry None snapshot crit (#23043)
=per Optimize highestSequenceNr method in AtomicWrite (#23059)
Be more specific about node/test for multi-jvm specs
=format remove whitespace causing formatting trouble (#23060)
Reworded 'Asynchronous Testing' intro a bit (closes #23054) (#23055)
fix scaladoc in PersistentFSMBase #23056 (#23057)
Update to theme with extra icons
Same github url construction logic for both kinds of github links (#23040)
Reapplying Martynas unidoc fix
modules in alphabetical order
No more sbt.Build, all projects in build.sbt (one issue outstanding though)
A few small warnings fixed
Add Java API 'getRef' to 'Terminated' (#22985) (#23021)
Add 'Books and Videos' header (#23036)
Improve docs (#23037)
Remove warnOldDocs.js from release procedure
fix table
add Reactive Design Patterns
!typ #22970 Actor.restarter renamed to supervise (#23015)
Log cause message of causes without stack traces (#23018)
Drop the exec bit on non-executable files
Extra warning about rolling upgrades and sharding added (#23000)
update quickstart page, #22900
fix race in fiddle example test, #23013
harden ClusterShardingRememberEntitiesSpecNewExtractorSpec
Sbt console initialization in akka-typed
don't continue processing after fatal exception, #22946
fix concurrency bug in typed ActorCell, #22946
harden another case in ClusterShardingSpec, #23006
serialize-creators=off in tests, #23003
add missing newline
+doc akka typed java docs made into paradox and mima fixed
addressing comments
+doc Basic Fiddle interactive examples
#22808 Move CoupledTerminationFlow to Flow.fromSinkAndSourceCoupled
Avoid infinite recursion in AbstractFSM with Java on Scala 2.12 #12887
fix remember entities tests, #22994
=doc small adjustments for merging typed docs to master
Move 'synchronous testing' to the bottom (#22947) (#22973)
remember entities and changing shardIdExtractor (#22894)
Use paradox akka-theme artifacts from jcenter
Start shards after full cluster restart, #22868
=cls add logging info on seed node joining (#22724)
Documentation of the new materializer system (#22699)
Correct error in sharding snapshot deletion code #22916
update logback test/docs dependency (#22972)
Remove blockquotes around lists in the docs
Update to the latest akka-paradox
=act #13861 report cause for Akka IO TCP CommandFailed events
Update to the latest from https://github.com/akka/akka-paradox/pull/1
abstract class SupervisorStrategy for Java API, #22961
Replace deprecated sbt method `<+=` with `+=` in Version.scala
missing toc depth in guide, #22949
fix mima filters
fix race in DeviceGroupTest, #22893
typ: added missing space (#22952)
cleanup the Shard idByRefs map when entity terminated, #22893
Generate paradox documentation when building a release (#22907) (#22925)
change top heading to Akka Documentation
Update to latest paradox with sidenote directive support
Add more paradox properties
=act referable CircuitBreaker resetTimeout
use the right name in StubbedActorContext.spawnAdapter
Actor.deferred should stop when factory yields stopped, #22934
Update sbt-updates and dependency-graph plugins (#22927)
Remove docs for the (deprecated) contrib subproject (#22926)
Remove top-level index.md from the ToC
rewrite quickstart page, #22900
Add java examples to getting started guide, with language switch (#22919)
fix links, #22912
Add a scope to paradox task
fix wrong relative links in toc
fix circuitbreaker.md
move code to src/test
additional cleanup
Information for Akka Developers, #22902
Cleanup ToC, #22901
Use released Paradox version
Correct link to Java Akka Docs, fixes https://github.com/akka/akka/issues/22879 (#22882)
=doc request adding links to issues in guide
Update RST documentation for a cleaner conversion (#22895)
Use linked directories to share docs between scala and java
Move ConstantFun to akka.util, #22813
Run rst to md conversion
Replace sphinx config with paradox config
'git mv' rst resources to md
complete the ChatRoom java example
Move content from akka-docs-new into akka-docs
Java example code for Getting Started
Add 'replyWhileStopped' param to BackoffSupervisor
Document ActorSystem termination (#22863)
Patience config for typed tests  #22859
Clustering documentation example link fix
Leave less room for port binding race conditions (#13908)
Removed Scala code from Java docs #22811
remove the outdated doc of PersistentView (#22862)
add Java docs for Akka Typed
Moved typed inbox to testkit #22753
Factory methods for dispatcher selector props #22828
Extensions for Akka typed, #16738
signal PostStop also when voluntarily stopped, #22840
minor follow up on PR #22794 (#22851)
Implement watchWith to customize the termination msg, #18778
Java API for ActorSystem.create, #22847
Move timestamp formatting to Helpers
javadsl BehaviorBuilder, #22748
Extend copyright into 2017 (#22833)
call onSignal as a PartiaFunction, #22662
support for safe timers, periodic scheduling, #16742
Updated books.rst
silence scary printTree in TypedSpecSpec, #22763
use "akka" as protocol also for typed
rename Actor behavior factory methods to lower case, #22805
refactoring of ActorContext hierarchy, #22804
rename createAdapter to spawnAdapter (again), #22804
Add version 2.5.1 to MiMa (#22824)
Rename DeploymentConfig to Props #22660
Update links to Split Brain Resolver (#22822)
Document which function types we prefer (#22819)
fix compilation error, duplicate wildcard imports
add missing mima filter for 2.5.0
update to Scala 2.11.11 and 2.12.2
implement javadsl in Scala, #22749
Lazy init of LmdbDurableStore, #22759 (#22779)
complete and test Restarter, #21217
+str #22711 adding GroupedWeightedWithin
add testkit for real asynchronous testing, #22764
Fail all stages on abrupt termination #22652
Truncated contents in existing files for FileIO.toPath/toFile #22782
#22662 Partial application for signal management
#22662 Convert onSignal to partial function
#22662 Refactor to onSignal builder method instead of constructor parameter
Stop adapted actorsystem after running TypedSpec (#22763)
Remove reference to Total from akka-typed docs #22610 (#22797)
Rename `management` to `receiveSignal` and `message` to `receiveMessage` #22718
Don't schedule messages on a scheduler that might be shut down already #22127
Rename 'stateful' to 'immutable' in MonitoringTest too (#22793)
Re-enable javadsl Flow 'via' test #18863
Use InetSocketAddress.getHostString in favour of getHostName (#22785)
skip serialize-messages check for well known local messages, #22680
Separate dot attributes by comma's (#22786)
fix more timestamp formatting, #22774
Limit number of concurrent PersistentActor recoveries, #22638 (#22641)
Add bind-hostname tip (#22418)
Small tweaks to docs
Little doc improvement due to issue #22566 (#22591)
fix log timestamp, #22774
=typ #22736 expose Behavior.Same and friends
Refactor SimpleDateFormat to the new DateTimeFormatter of JDK 8 which is thread safe.
Add generic parameter to watch/unwatch (#22696)
fix race condition in ReplicatorDeltaSpec (#22737)
Less confusing logging for dead letters without sender (#22722)
Add startPosition option for FileIO API
Prefer use of charset over charset name (#22679)
afterCompletionStage doc fix #22761
#22744 Remove preStart
fix compilation error in multi-jvm tests
#22687 Undefer before terminate
remove stateless, rename stateful to immutable, #22325
typed MutableBehavior API (#22732)
Replace FileInputStream and FileOutputStream, #22733
Return large buffers to the bufferPool #22723 (#22729)
+typ #22663 move symbolic ! into implicit class of ActorRef
misleading sentence deleted from doc (#22740)
Added Hello World example, rephrased some wording, corrected spelling and grammatical errors, completed missing links, and misc other improvements.
update to Aeron 1.2.5, and fix the SharedMediaDriverSupport
Proper Logging.simpleName() invocation with Class[_] arg instead of Class[_].getName #22533
fix typo
Document using OneForOne with BackoffSupervisor
Update index.rst
Complete adapter API for coexistence of typed and untyped actors, #22174
Update api mapping plugin
Revert "update to Aeron 1.2.4, and fix the SharedMediaDriverSupport, #22693"
properly shutdown ArteryTransport using CoordinatedShutdown, #22671 (#22698)
update to Aeron 1.2.4, and fix the SharedMediaDriverSupport, #22693
Update CONTRIBUTING.md
Clarify awaitAssert scaladoc
#21524 Moved {Stubbed,Effectful}ActorContext to testkit
#21524 Disable MiMa for Typed testkit
#21524 Add missing formatter settings
#21524 Add typed tests dependency to docs
#21524 Split out typed testkit
Revert "update to Aeron 1.2.4"
update to Aeron 1.2.4
Introducing watching for completion earlier
Link stream quickstart guide to build tools section
Make 'watch' and 'unwatch' return void (#22664)
safe, typed, composable
Apply review feedback
Interpreted behaviors in Akka Typed (#22670)
Substream materialization failure test coverage and fix #22646
Link to Carl Hewitt
Short section on distributed data
Mention types and composability for Streams
Mention Event Sourcing under Persistence
"Concurrent, parallel and distributed"
Avoid 'anycast' in Publish-Subscribe description
More succinct Cluster Sharding section
Various spelling errors
Typos
Avoid 'elect' to avoid 'leader election' connotation
=str #22666 fix FileIO parameter type to OpenOptions
Add diagrams to tutorial
Use Example Code Service for samples
Add diagrams to introduction
Tutorial pt4
Add docs for circuit breaker new feature #22596
Schedule timer for remaining delayed elements #22416
Serialization Docs: Better intro to custom serializer section (#22653)
Use full state for the ORSet and ORMap removals until #22648 is fixed
Tutorial pt3
fix wrong log in receiveDeltaPropagation
Update deferAsync doc #20873
Serialization Docs: add info about adding a logger (#22618)
fix compilation in scaladoc code for TestFSMRef #22625
Handle delta None correctly, #22655
Tutorial pt2
Tutorial pt1
Race condition in TcpSpec eliminated #22503
=str #22358 enable test and cleanup FutureFlatten source
failed: BalancingSpec #22040
Handle IncompatibleClassChangeError by writing "fix your akka version" (#22628)
delta-aggregation in the ORMap deltas (#22633)
=str #22602 short path for Source.fromFuture and fromFutureSource and their alias
Remove use of deprecated Scala features #22581
Various corrections
=str #22124 fix failing TlsSpec "certificate check"
Serialization Docs: better intro (#22624)
Towards getting-started docs
=doc Serialization Docs: section on verification (#22616)
-doc remove dead library ref from documentation (#22617)
fix ORMap duplicated delta propagation (#22606)
fixed serialization of RemoveKey
fix serialization of delta ops, #22604
add sub-stream benchmark
=str #22584 make subfusing work if diff materialize() is called
rename spawnAdapter due to Scala 2.12 compilation error
Java style accessors for AbstractFSM #22592
AbstractPersistentFSM should have getContext, getSelf, getSender #22541
ORMap and friends have deltas (#22350)
Let typed Stateful optionally handle signals also, #22293
mima filters and note in migration guide
Make FJP SPINS configurable with System.property, default 256
scala 2.11 FJP
Improve ForkJoinActorBenchmark
Benchmark for actor throughput with FJP #18262
22295 Allow user define what is failure in terms on circuit breaker
Handlers for circuit breaker (#22244)
Add @InternalApi annotations and private markers on internal apis (#22563)
Re-implement javadsl testkit (#22240)
Protobuf serializers for remote deployment #22332
Updates to paths in the Java docs missed in #22413
convert typed IntroSpec to new API, #22293
add Akka Typed Java API #22293
small change in method dispatch that seems to impact bench results (#22564)
=doc #19661 document purpose and limits of akka scheduler (#22334)
Consolidate various message buffer implementations
ActorContext.getParent for Java API #22413
Give a good error message on unassigned ports  #22552
=str #22124 enable DEBUG logging for TlsSpec to find cause of failures
=act #22568 reduce spurious ResumeReading log messages
Deprecated build symbols replaced
=str #22554 fix ClassCastException in SubSink
Use delta in direct write also, #22188
Fail framing stage if length field is less than 0 #22367
Deprecate auto-fusing setting #22431
=str formatting fix
Scalacheck min max range could become max min and fail the test. (#22400)
Allow multiple Cluster JMX MBeans in the same JVM (#22484)
GroupedWithin cold emit fix  (#22407)
Suggest using 64bit JVM for Artery in docs (#22553)
Update Persistence Snapshot documentation (#22419)
Provide materialized value even if downstream cancels.
More complete test coverage, bug and code style fixes
Handle sub interpreters not being initialized when debug dumping graph
Flatten a `Future[Graph[SourceShape[T], M]]` as `Source[T, Future[M]]` #22359
use CompletionStage instead of Future in java doc classes (#22472)
Documentation note for large-message-frame-size (#22519)
remove lazy from TraversalBuilder field
Remove unecessary implicit in test
Make sure the hashcode is not negative when selecting key chunk #22487
Avoid Array.ofDim where possible #22516
#22429 Use Arrays.copy instead of scala builder
Remove superflous ownerId fields in interpreter Connection #22447
=act,str Port be-scala-2.13-friendly (#22528)
Note that you must be a public member of akka org to trigger builds #22543
#22429 Resize connections array when needed
fix some grammar/usage issues in docs
FAILED ActorSelectionSpec #22460
workaround for nested attribute issue, #22523
URLEncode the name
optimize ins and outs of size <= 1
better List creation
use new Array instead of Array.ofDim
optimize actor names
optimize Attributes
=pro silence MiMa warning in testkit
=str use OptionVal in Traversal building
Include exception message in log on swallow NoStackTrace exception #22488
=str #22437 replace require() with if calls to avoid fn allocs
=str #22438 make use of OptionVal in materializer internals
=ben,str make sure to return values in benchmarks
Two failing doctests fixed
=str add mima exclusions for all new materializer changes
Change Unit to NotUsed in Twitter stream example (#22511)
Restore interpreter debug output #22433
=str optimize Keep.none
=str simple signatures of methods having combineMat parameter + optimize ComposeReversed
fix broken refs in docs for Cluster Usage
fixing some typos in docs
add a note about dispatcher creating async boundary, #22436
enable pending tests in FileSinkSpec and FileSourceSpec, #22463 (#22477)
enable pending test in FileSinkSpec (#22501)
fix SinkSpec, and async boundary attribute, #22463
=str #22463 introduce validation to GraphDSL, fix GraphDSLCompileSpec
fix ReverseArrowSpec due to changed exc, #22463
=str refactor GraphApply.GraphImpl to be reused at more places
#22463 Check for wired ports before wiring in traversal builder (#22492)
Explicitly handle SpecViolation exceptions in GraphStage callbacks in boundaries
include initialAttributes of GraphStage, #22463
=str remove printlns that somehow snuck into the low-level test PR (#22489)
+str #22425 re-implement sub-fusing with new materializer (#22478)
Wip 22430 make tlsspec pass again drewhk (#22482)
Update the maximum serializer identifier reserved for Akka
Low level interpreter tests working without GraphAssembly #22423
Update Aeron to 1.2.3
Provide how to build docs on Linux in docs #22455
Delete LOLSPEC.scala
=str #22448 rewrite Source.empty to GraphStage
Wip fix islands drewhk (#22475)
one more rename of stageName
fix DslFactoriesConsistencySpec, #22463
=str #22430 add TlsModulePhase (#22466)
fix FlowRecoverWithSpec, #22463
fix ReverseArrowSpec, #22463
stream actor names, #22426 (#22465)
disable tests that don't compile
Split Brain Resolver docs should redirect to latest page #22230
Move inlined example to its own class (#22453)
Update sbt
Make flowspec great again drewhk (#22443)
#22424: Use InputBuffer attribute for asynchronous inputs (#22441)
Re-enable some Java tests not actually being run #22439
Use the right serializers when checking bw compability of DaemonMsgCreateSerializer #22224
New materializer and layout
fishForSpecificMessage #20118
Log a warning if an entity ID extractor is not defined for a message #22395
Very minor grammar change that was incorrect on both the Scala and Java docs around fused steam processing.
Exclude docs package from API docs #22296
add default-blocking-io-dispatcher and make TTL configurable with Java DNS properties #21170
less verbose debug logging in ddata (#22384)
Remove backwards compatible workaround in SnapshotSerializer? (#22231)
fix MultiNodeSpec.getCallerName, #22186
improve docs for logging with more than 4 args, #17895
Move DnsSpec to multi-jvm test, #22330
Select right IP address based on Java preferences. (#22336)
Bump few dependency versions.
+str #22376 add javadsl versions of low-level TLS constructors
+str #22345 #21854 provide forward compatible TLS constructor in stream TLS
Revert "=str Remove manual hostname verifier support, used to be included only because Java 6 (#22320)"
fix wrong heading in ddata docs
expectNextPF with timeout #21314 (#21825)
Convert UntypedActor to AbstractActor #22308
fix serialization of pruning in DurableDataEnvelope
update osgi version import, #22363
proper implementation of mergeRemoveDelta, #22188
causal delivery of deltas, #22188
fix byte order issue in DaemonMsgCreateSerializer, #22366
semicolon aren't such a thing in Scala
Don't close over TestConductorExt with an actor sent remotely
note about Camel in migration guide
deprecate akka-contrib, #22198
deprecate contrib.JavaLogger, include in akka-actor, #22198
deprecate ReceivePipeline, #22198
deprecate Aggregator, #22198
deprecate ReliableProxy, #22198
deprecate TimerBasedThrottler, #22198
deprecate PeekMailbox, #22198
move streams migration guides out of the way
deprecate CircuitBreakerProxy, #22198
Doc - Modify Dispatcher to use simplified thread-pool-config values, as described by @ktoso in the the issue (#21572)
#21725 cluster-sharding doesn't delete snapshots and messages (#21777)
Adding debug message when passivate method cannot identify entity (#21886)
#22353 fix mbean expected json format
#21965: Modify CompressionIntegrationSpec to not assume ordering in compression advertisements
document remember entities limitation, #22327
Replace "experimental" with "may change" (#22326)
Adjust the score for the serialization vulnerability
add case for DeathPactException stopping actor
Deprecation of ExtensionKey #22208
Pass the deserialized message on when serialize-messages on #13751
=pro add missing mima filters for #21854/#22320 when checking against 2.4.17
=pro #22306 add missing mima filter rules for 2.4.16/17 changes
=pro move some MiMa filters to the release-2.4 list
=pro #22306 add missing mima entries for 2.4.16 / 2.4.17, filter 2.4.15
=pro update to mima 0.1.14
=pro organize filters a bit differently to prevent merge conflicts with release-2.4
=doc Make it easier to disable Java serialization, #22283 (#22315)
GSet ported to delta-CRDT (#22187)
#22030 Lazy sink wait for init
=str Remove manual hostname verifier support, used to be included only because Java 6 (#22320)
Update remoting-artery.rst (#22321)
Eliminate race in connection closed tcp test case #21903
fix #21653
allow named adapters and add receptionist to system
=str refine built-in Take and TakeWhile stages (#21871)
Fail fast + docs around mixing major Scala versions serializing #22004
Remove samples (#22288)
Close Java Stream after completion #22241
Remove references to FSM's Ev matcher
+doc add more docs on CoupledTerminationFlow
+str implement CoupledTerminationFlow to be used in WS in HTTP
=rem #22277 log remoting connection errors
Upgrade Typesafe Config & slf4j
Reset `pendingSend` on address resolution failure #22076
update the reference of mapConcat signature in doc (#22262)
#22097 Eliminate race in materialization order in FlowSplitWhenSpec (#22266)
use index access instad of iterator in Broadcast, #22113
add Java API for NegotiateNewSession, #22239
Adding hint in remote-artery docs that large-message-destinations have to match on sending and receiving side #22256
Mistype fix
Convert remaining UntypedActor in docs #22182
Correct typo in "Backpressure aware stages" section (#22252)
Make the coordinated shutdown jvm hook work #22253
add to release notes: DD is now a stable module
clarify Akka Http starting version
Minor grammar change that was incorrect on both the Scala and Java docs. (#22176)
Micro kernel module removed  #22205
customise test for race between GetState and persistAsync handler #22052
fix sharding dependency to persistence
Do not build and publish dist and activator zips (#22223)
adjust time assertion in TestConductorSpec
temorary disable additional-serializers for ReliableProxySpec, #22224
+doc add sentence on Akka 2.5 in bin compat guide (#22221)
rolling update considerations in migration guide
fix some compilation warnings
fix SystemMessageDeliveryStressTest NPE with additional-serializers, #22169
Change signature of addJvmShutdownHook
disable weakly-up for some tests
handle IllegalStateException in CoordinatedShutdown
fix typos
Enable additional-serialization-bindings by default, #22169
Use ddata mode as the default for Cluster Sharding, #17963
use minCap for majority write/read in sharding, #22141
remove deprecated constructor in DeadlineFailureDetector, #21423
remove deprecated ARRAY_OF_BYTE_ARRAY, #21423
remove deprecated persist method, #21423
remove deprecated methods in routing, #21423
removal of deprecated constructor in PromiseActorRef, #21423
remove deprecated constructor in serializers, #21423
remove deprecated util.Crypt, #21423
remove some deprecated event bus classes, #21423
remove deprecated ActorPath.ElementRegex, #21423
remove deprecated ActorSystem termination methods, #21423
Add support for delta-CRDT, #21875
Promote Distributed Data, #22201
Promote WeaklyUp and enable by default, #22197
Promote PersistenceFSM, #21190
eager initialization of CoordinatedShutdown, #22191
change router type in cluster.StressSpec
Update Aeron to 1.1.0
rename lambda doc files, #21717
improve AbstractActor, #21717
make pruning of CRDT garbage work, #21647
timeout cancelation in PersistentFSM #22166
Custom ActorSystem creation in MultiNodeSpec #22180
stop ClusterSingletonProxy when self member removed, #22117
rememberingEntities with ddata mode, #22154
serialize Scala 2.12 functions for when used in remote deployment, #22041
remove old deprecated cluster metrics, #21423
add serialize-messages=off #22128
cleanup old migration guides (#22164)
add note about CoordinatedShutdown and tests, #21537
Don't shutdown ActorSystem in tests
stash messages while Replicator is loading durable data, #22150
Add minimum cap for ReadMajority/WriteMajority #21618
define Listener classes as top level class and remove unused AnyRef instance
#22147 show the cause of the error stopping durable store
Update cluster-usage.rst, fix typo
use exclusive fromSequenceNumber in eventsByTag, #22145
add CoordinatedShutdown, #21537
#22140 fixed ReplicatedDataSerializerSpec error with artery serializers
remove extra parameter to match Listener constructor
 Updated DistributedData Delete API to include optional request context. #20140
removed unnecessary new keywords
#21475 moving compressions ownership to Decoder (#22047)
remove org.uncommons.maths dependency (#12636) Also * add InternalApi annotation to AESCounterBuiltinRNG * add setDaemon(true) to re-seeder thread
Wraps CombinedReadEventAdapter into NoopWriteEventAdapter
 #22035 Make it possible to use anything as the key in a map
Update CONTRIBUTING.md
AES-CTR with re-seeding, review remarks included (#21740)
Improve CircuitBreaker documentation #21879
 #21648 Prefer reachable nodes in consistency writes/reads
+doc document DoNotInherit and ApiMayChange
+act #22109 add documentation annotations in akka.annotation
stop ClusterClient ResponseTunnel after first reply when ask is used, #22093
extended copyright into 2017
fork stream TCK tests
!rem #22073 enable mutual TLS authentication by default
=doc reorder migration guide a bit based on generality of subprojects
removing deprecated AESCounterInetRNGs, fixes #22014 (#22015)
reduce allocations in ActorModelSpec, #22085
removed redundant new modifier
=rem #21365 less aggressive busy spinning in AeronSource
more consistent naming and style, fixed typos and mistakes #22077
=rem #21365 enable multiple lanes in MaxThroughputSpec
=rem log results of MaxThroughputSpec and LatencySpec to result file
=rem #21365 cleanup multiple lane creation slightly
=rem #21365 use default directory for shared media driver to /dev/shm
=pro fix typo
Update Aeron to 1.0.5
=str fix typo in GraphStage port validations
harden DurableDataSpec, #22037
log join retries, #22053
prevent mistake of releasing from wrong branch (#22043)
make maxAllowedWait timeout be dilated #21996
catch NotSerializableException from deserialization, #20641
Fail fast on null persistenceId in PersistentActor #22025
-doc remove promise of macro based actorOf (#22026)
PersistentFSMBase - matchEvent API bug fix
Reachability.remove didn't always remove all, #22012
=pro fix MiMa to survive per-query promotion to stable
WIP ActorSystemSettings programatic config #21894
=peq remove bridge from old APIs in PersistenceQuery
actor-dsl deprecation note
=act deprecate direct use of BalancingDispatcher (hide as private[akka])
=21423 remove deprecated PersistentView
=21423 deprecate ActorDSL
=21423 deprecate udp remoting, artery is the "new UDP"
Add parameterless constructor to LevelDB journals (#22007)
=peq add migration guide for persistence query
=peq mark persistence query as stable
=peq #21724 #19174 unify naming of query methods
=per Allow persisting events when recovery has completed (#21893)
=str compilation fix, because merged without validation
+str add more information to generic connection shutdown connection
=str more specific error type if idle-timeout triggers in tcp
=str 20448 splitAfter should emit substreams in a lazy way (#21306)
optionally pass plugin conf path to persistence plugins, #19822
fix compilation warnings in akka-stream
dynamic config path for levelDBJournal and localSnapshotStore #21394
No default OSGi private package to avoid publish build warnings (#21915)
Update MiMa to 0.1.13 (#21978)
add http api for cluster management, #21172
=clu don't use Down member as leader, #21906 (#21990)
harden AllAtOnceEntityRecoveryStrategySpec, #21985
+doc Documented how CompletionStages execute #20513 (#21845)
Remove cancellable setting, makes it hard kill sbt (#21987)
format the code
use log level when draining LoggerMailbox, #21895 (#21949)
=str deprecate ActorPublisher/Subscriber, use GraphStage (#21952)
-cam #21423 deprecate camel (#21925)
Race condition fix for Test{Sink/Source}Stage #20737
InputStream from StreamConverters.asInputStream respects read() contract #21943 (#21954)
fix shutdown of pending StressSpec, #21960 (#21963)
Test documenting LineNumber behaviour on Scala 2.11, 2.12, Java 8 (#21897)
=act improve ByteString#dropRight(...) (#21439)
=rem Streamline Artery encoding of metadata to avoid allocations
=jmh Clean up Artery CodecBenchmark
enable NodeChurnSpec, #21483
Add support for durable storage of distributed data, #21645
member accessor in ReachabilityEvent, #21944 (#21947)
bump version to 2.5-SNAPSHOT (#21946)
=pro no more mima checking with 2.3, we're 2.5 now (#21939)
-str #21423 remove deprecated Stage references (#21919)
=str #21926 add note on (non)guarantees of materializer SPI (#21932) (#21935)
=str #21926 add note on (non)guarantees of materializer SPI (#21932)
Eliminate the allocation on each aroundRecieve  #20748
Disable ActorContextSpec for now #21653
serializer for Optional, #21911
make IODispatcher attribute public
!agnt #21423 agents to be deprecated (#21913)
Speedup pull request validation
Separate afr-files also for RemoteRouterSpec
Use MultiNodeSpec where possible, and handle all afr files, not only the default
Add flight recording and dump on failure for more artery tests
update camel version in sample, #21837
fix regression in remember entities, #21892
Test case more concistently exercising the race without taking 8s #21864
Lazy source (#21081)
=doc update reference to resolveOneCS in Java documentation (#21726) (#21890)
Disable serialization warnings in akka test suites #21882
Updated Books (#21888)
fix SourceQueue docs inconsistencies #21852
=doc fix double 'the' in some docs (#21881)
=str follow up review comments on compression PR
=str add safeguard against accidental logic cycles in user ByteStringParser logic
=str #21873 fix ByteStringParser getting stuck when parsing step doesn't produce output
=str #21395 quiet down errors in ByteStringParser stage + better compression errors
=str #21850,#21395 move compression tests over from akka-http
=str #21395 fix default flushing in Deflate/Gzip compression
!str #21395 move compression default values used in public API into public place
=pro #21867 update scala-stm dependency for akka-agent, scala 2.12 (#21868)
mark StressSpec pending for Artery until we fix it, #21810
harden cluster leaving, #21847
Correct errors from InputStreamSinkStage when first read times out #21804 (#21821)
asOutputStream did never complete on close and exposed a unsafe callback #20503, #21864
add LoadSnapshotFailed in snapshot protocol, #21842
doc update deprecated documentation of FileIO (#21860)
=per #20821 optimize recovering from snapshot in LocalSnapshotStore (#21827)
use SimpleLinearGraphStage to reduce the boilerplate code #21830
Move (de)compression helpers to akka-stream module #21395 (#21409)
=pro update Aeron to 1.0.4
=str #21753 simplify TLSActor configuration by allowing to specify SSLEngine directly (#21822)
=act #21774 fix ByteString.toString to use fixed stringPrefix for all subclasses (#21775)
Remove scalatest from OSGi sample (#21817)
Remove not needed type match in last clause in EventSourced
per bugfix #21824 pass the message which cause restart in PersistentActor
+stk expose `within` for both TestSubscriber and TestPublisher
rewrite Buffer as a GraphStage #21528
Cluster singleton testing (#21803)
fix AgentDocTest (#21814)
Add resolveOneCS to ActorSelection for Java CompletionStage 21726
Workaround for #21475 until it is fully fixed. Makes snapshots thread-safe
remove template pattern in howto docs (#21808)
avoid infinite blocking in TcpConnectionSpec #21375
Handle early termination of system when starting logger, #21674
minor cleanup of cluster.subscribe usage
harden ClusterShardingSpec, #21535
increase barrier-timeout in ClusterShardingSpec, #21718
Publish dining hakkers deps to local maven repo (#21793)
Added Java API and discoverable factory methods for Offset #21788
Took grab and pull out of try
Bugfix #21770, NoSuchElementException with probe supervisor in TestActorRef (#21776)
Add a note about RecoveryCompleted for new actors
Changes needed to build/test/release for 2.12.0 (#21789)
New authors-script for releasing (#21783)
fix enable-additional-serialization-bindings docs (#21769)
=act,rem Clean up some test serialization issues for Scala 2.12
=act Ignore some line number tests on Scala 2.12 #21773
=rem Don't try to serializa null file names in stack traces #21772
=act Test that serialization works instead of that the bytes match #21771
fix little typo
Remove accidentally re-added akka-http files (#21759)
fix mima warnings (#21756)
Add flag to enable mutual certificate authentication for old Akka Remote SSL transport (#21748)
reference.conf MUST end with newline (#21755)
=pro merge ssl-config-akka from ssl-config project into akka-stream (#21551)
+str #18793 StageLogging that allows logger access in stages (#21696)
shard coordinator should wait until min-members regions registered, #21194
small test changes for Scala 2.12 (#21738)
+doc #21668 better docs for configuring ssl (#21730)
+act,rem,str add SECURITY marker to logs (#21749)
send terminationMessage to singleton when leaving last, #21592 (#21654)
Scala 2.12 does not name mangle private fields (#21742)
=rem #13874 cleanup SSLSettings (#21746)
Add openLatch.reset to some tests #21719
Update package declaration to fit directory.
New EventEnvelope including Offset rather than Long #21722
+slf,act #21671 allow using Markers with LoggingAdapter (#21707)
Make the akka-scala-nightly project work as expected
Add apiURL setting for cross-linking scaladoc in projects depending on Akka (#21734)
Test case for persistence plugins re large snapshots #21704
Rewrite Sink.ignore as a GraphStage #21527
improve streams actor integration docs, #21698 (#21700)
+str #20795 IOResult construction exposed, in bincompat way (#21070)
remove akka parsing (moved to akka/akka-http) (#21721)
+rem remote deployment whitelist feature (#21676)
+doc add missing java documentation for scanAsync/foldAsync (#21701)
Adding create() to ReceiveBuilder to promote a builder-like syntax #18894
increase test timeout in PersistentFSMSpec, #20725 (#21694)
+doc,per #21689 document calling persist() in Future is unsafe (#21699)
Add documentation to contributing workflow (#21703)
Increased timeout in long running test FramingSpec #21673 (#21686)
ByteString.indexOf optimized to speed up framing stage  #21530
harden AtLeastOnceDeliverySpec, #20724 (#21695)
Add a retry for a check for stopped actors #21122
harden CompressionIntegrationSpec, #21616 (#21692)
Remove Akka-HTTP sources from akka/akka, moving to akka/akka-http! (#21690)
Add missing copyright header to DispatcherShutdownSpec
Removing floating point arithmetic in LARS.roundUp method (#21473)
=doc fix typo
Added a flag on takeWhile to allow it to include the final element, #21330
Add expectNextChainingPF method  to streams testkit #21614 (#21617)
eventsByTag and currentEventsByTag to use Offset (#21615)
Add scanAsync to Akka Streams, similar to scan but taking a Future (#21553)
20597 - Make BackoffSupervisor respect OneForOneStrategy's maxNumRetries property (#20772)
Failing tcp spec fix #21377
=act add benchmark of ByteString#take(...) (#21540)
#17717 handle OnComplete in ActorSubscriber doc samples
update to Aeron 1.0.2, #21583
fold async emits zero given an empty stream #21562
Remove unnecesary s when printing unit times (#21637)
Improve akka-stream docs (missing `an`) (#21649)
Updated akka-sample-persistence-java tutorial documentation. Solves issue #21641 (#21643)
Adding protobuf serialization for SendToOneSubscriber (cluster pubsub) #21629
Doc - Add warning note about persistence message deletion (#21486)
Minimal test fix (integer -> decimal)
minParkNanos is declared but not used, instead constant 1 was used (#21634)
=act clean up ByteString#drop(...) (#21440)
#17174 add support various log level for LoggingReceive (#21578)
DirectBufferPool.tryCleanDirectByteBuffer always failed #21622
Include parallelism in mapAsyncUnordered docs #21556
clock clarification for LWWRegister, #18434
use the implicit clock parameter in LWWRegister.withValue, #21610
Upgrade sbt-jmh to 0.2.16 (#21589)
java docs for Artery, #21209
+doc document ByteBufferSerializer for Artery #21601
+doc removing java serialization in java ref docs (#21603)
Do not reference remote settings directly as it breaks if remoting is not on classpath (#21604)
+doc document how to disable java serialization (#21601)
#21209: Reorganized remote reference.conf and its docs
doc Refer to the Streams section from TCP stream (#21436)
#21209: Added docs for AFR
docs for media driver, #21209
remove docs about pluggable transports from old docs, #21209
#21209: Added docs for cpu-idle and large messages
Artery docs for Quarantine, #21209
Directory traversal fix (backport to akka-http 2.4.x) (#21584)
use longUid in ClusterRemoteWatcher, #21594
implement EventStream and Dispatchers
remove Props in akka-typed
shortname for provider config
file header
#21209: Skeleton for Artery docs
revert Artery config in akka-sample-cluster-scala
adjust build for master
Realign artery header data  (#21581)
add/change private visibility
config of control stream dispatcher
configuration properties for frame size
Serialization for system messages, RemoteWatcher and ByteString
Quarantine gracefully downed node after some time (#21534)
21202: Added more serializers for built-in stuff
add thread local LRU cache for resolveActorRef
serialization of ActorRef, #21202
protobuf serialization of Status.Succes, Status.Failure, #21202 (#21565)
fix wrong afr id
remove Range.Inclusive subclass (toString), #21548
#20872 Change tableVersion to Byte
multi lanes not supported yet
increase timeout for fist message in RemoteSendConsistencySpec, #21529
Use long uid in artery remoting and cluster #20644
harden shutdown exception in sendTerminationHint
complete the Future[Done] in AeronSink in finally, #21538
Better to send msg to unresolved ref than dropping it, #21422
Flight recorder improvements (#21532)
fix typo in futures.rst (#21536)
increase acceptable-heartbeat-pause in StressSpec, #21522
Testconductor allows more time to pass to give artery time to shutdown #21500
akka.remote.artery.canonical.port in sample
freeSessionBuffer in AeronSource FragmentAssembler, #21401
log-received-messages and log-sent-messages, #21506 (#21508)
21400: Flush ordinary and control message streams
fix shutdown race in sendControl, #21514 (#21517)
Change doc: reflect WeaklyUp is used in DD #21502
=act improve ByteString#take(...) (#21438)
fix problem with quick restart, #21512
revert quarantine removed (leaving) cluster member, #21509
stop outbound streams when quarantined, #21407
+str add zipWithIndex to FlowOps #21290
=art Heap structure in heavy hitters
Add non-local recipient check when handling HandshaleReq (#21497)
close inbound compressions properly
MDC support for LoggingReceive #21361
improve shutdown of TaskRunner, #21430
#21419: Reenable ClusterDeathWatchSpec
fix many bugs in InboundCompressions, #21464
Textual representations of event codes in flight recorder dump (#21489)
=art add metadata field to the header, #20703
Enable flight recorder in tests #21205
make cluster.StressSpec pass with Artery, #21458
#21466 Wrong protocol name expected in tests when using Artery
ClusterClientSpec workin with artery #21477
Remove hardcoded port number in TcpConnectionSpec, #21375
harden ConstantRateEntityRecoveryStrategySpec, #21230
More tests working on artery
Delay should not pull when buffer is full with Backpressure strategy, #21334
=htc don't encode known to be empty entities (#21393) (#21396)
Verbose logging in LeveldbAtLeastOnceDeliverySpec to figure out #20724
=per Higher recovery timeout in PersistentActorRecoveryTimeoutSpec to not fail on slow/gc #20728 (#21445)
=art remove addressed todo in compressions
=art Count min sketch benchmark and performance improvments. (#21037)
#21446: Completion events must not be swallowed if chasing
Add javadsl FormData.create(Iterable) overload #21303 (#21344)
don't quarantine back, #21450
rewrite TestStage to use thread-safe shared state, #21431
Add documentation for ReplayFilter #20301
=rem,act move direct buffer cleaning util method to akka.io
=rem remove test-only HeaderBuilder.bothWays
-doc Remove stale other language bindings doc page #21426 (#21432)
One more missed canonical.port in cluster tests (#21428)
Port and hostname config path was changed, cluster tests didn't get the change (#21427)
Disable ClusterDeathWatchSpec for now (#21421)
handle longer network partitions, #21399
No ack delivery for prio messages, #21371
20623 Make sure external (mapped) resources are properly cleaned on shutdown
#20946 Add bind address (#21404)
try delayed retry resolve  of remote deployed refs only once, #21403
enable misc serializers by default for Artery, #21339
mute expected exception in RemoteDeathWatchSpec
require power of two
flight recorder event for send queue overflow
add reason param to quarantine method
size of outboundEnvelopePool
handle Aeron Publication.CLOSED
config of send queues
remove or reword obsolete fixme
=rem #21202 a first set of protobuf serializations for artery messages (#21380)
Rename protocol from "artery" to "akka"  (#21405)
#21206: Improve AFR resilience to write-after-close
Make map stage final and refactor OneBoundedSetup to take a decider. (#21374)
21203: Cache/memoize ActorRef resolution
new implementation for Akka Typed #21131
=htc #20793 make Marshaller.fromStatusCode emit empty entity for StatusCode with allowEntity=false
Make cluster tests run with artery #21204
handle fatal Aeron exceptions, #20561
add missing killSwitch for parallel outbound lanes, #21381
abort streams on shutdown, #21388
=htc #21281 render empty params double quoted in headers like `Authorization`
fix glitch in lazy restart, #21347
=htc #19643, #20570, #21235 Refactor PoolSlot to GraphStage to address race conditions
Artery transport shutdown improvements (#21357)
Comment on persistenceId uniqueness (#21060)
fix failing SystemMessageDeliverySpec, #21331
harden receive of messages using wrong compression table
make restart materialization of outbound streams lazy, #21347
improve deadLetters and logging when send queue overflow (#21355)
support for parallel lanes, #21207
=act fix typo in ByteString#take error message (#21366)
Eliminated JVM crashing race on transport stop (#21337)
add java api for websocket testkit #21184
exponential backoff in circuit breaker #21036
treat serialization (toBinary) exception of remote message as transient error, #21343
Update links to Lightbend RPv2, more warnings about auto-down
+art enable compression for manifests (#21211) (#21333)
+tes #21198 Allow TestActor/TestKit/TestProbe to create child actors
#20587 Clean artery configuration (#21279)
#20904: Increase timeouts in TestKitDoc tests, use Sink.seq (#21260)
=doc fix getStageActor docs typo (remove "not")
=pro update aeron to 1.0.1
=htp fix for infinite timeout disabling timeout infrastructure (#20817) (#21295)
added test showing that timeout is correctly reset for both infinite as well as finite initial request-timeout (#20817)
fail fast in mapAsync for completed failed future, #21318 (#21322)
More generous timeout directive spec timeout #20278
Race in PersistentActorFailureSpec removed #21229
OrElse stage for fallback when no elements emitted  #21024
Http internal One2OneBidi pulling closed port #20944
* -htc remove proxy settings because not implemented (#21288)
Expose success and fail methods in CircuitBreaker #18347
=htc Response rendering spec hardening #21088 (#21245)
Add badge to Scaladex search for Akka Actor, Stream and Http dependencies.
added DummyCancellable object to avoid allocation (#20817)
Use in-memory filesystem for the file sink and source #20726
=per Log more info when recovery fails #20728 (#21313)
=str Refactoring to avoid distinct handler instantiation for stage logics (#21309)
=act #21237 fix regression in ByteString.slice (#21294)
=htp change extract to provide (#21302)
filtering out timeout-access header in additional tests (#20817)
filtering out timeout-access header in tests where necessary (#20817)
=htp Extract RemoteAddress.Unknown when cannot find client ip (#21289)
Refactoring of outbound compression, #21210
WIP separate prio artery channel (#21278)
add `override` for scala/scala#5331
fix for infinite timeout disabling timeout infrastructure (#20817)
Add warning to Akka DD docs about freq add/deletes of top-level entit… (#21269)
FoldAsync op for Flow #18603
=htc remove unnecessary asInstanceOf (#21275)
minor cleanup of WildcardIndex
=doc fix link in CONTRIBUTING.md (#21274)
+Doc #20192 update http example to always consume response (#21241)
+htp Add javadsl Query.create(Iterable) overload #21232 (#21265)
use the new WildcardIndex
update to Aeron 1.0
harden SurviveNetworkInstabilitySpec #18767
Added a note to the serialization section regarding desugared names #21263
Corrected previous version mima-filters, added 2.4.9 empty section
#20933: Make RecoverWith non-detached (also eliminates race in test)
#20887: Reduce GC pressure by compacting to reduce long lived garbage
=doc Added hints about timeouts to contributing.md (#21256)
=htp A bit more generous timeouts in HttpServerSpec #20350 (#21255)
=str 21049 gaps in FlowOps section of stages-overview documentation
More generous binding timeouts in TcpSpec (#21246)
=str #21199 Prevent pull/push from constructor by throwing IllegalStateException (#21252)
Adding some assertAllStagesStopped
=htc Bugfix #21243 absolute request target parsing broken (#21244)
Updating to ScalaTest 3.0.0 and ScalaCheck 1.13.2
=htp clean up json stream unmarshalling (#21233)
cluster singleton improvements, #20942
fixes #21193 Expose a number of GraphStage attributes
Balancer should not push to a closed out #20943
=doc fix akka-http timeouts documentation #21214
removes a blocking InetSocketAddress call with createUnresolved #21149
=doc add missing module (#21188)
fix eventbus doc-code (#21189)
add extractActorSystem directive (#21097)
!htc use correct rejection in http javadsl (#21179)
remove duplicated sentences (#21187)
=str 21049 gaps in Source/Sink sections of stages-overview documentation
=str fix up Scaladocs for Source & Sink
optimization to improve the time to rebalance shards
Correctly handle parsing of JSON strings containing single quotes #21147
increase test timeout in CircuitBreakerSpec, #20982
Allow Java GraphStages to throw checked exception #21168
ShardRestart shouldn't go to userspace #21145
=str rewrite Sink internal impl as GraphStage
double wildcard for actor deployment config #19872
More generous timeout in file upload sample spec #20727
increase test timeout in ReplicatorSpec, #20932
suppress deadletter for the cluster joining messages
=act change Unsubscribers visibility
named should not replace attributes #21068
Bugfix #21130 remote-address support broken in server optimizations
Extra clarification and link to juc.ThreadPoolExecutor from docs #21109
=doc websocket - amending streaming to streamed msgs #19945
check for non empty journal batch before sending to journal #21116
harden NodeChurnSpec, #21053
Adding ScalaDocs for FlowOps.async #21137
=doc adding a note about websocket idle-timeout #19945
HttpMessage#header[Content-Type] should work #21127
Don't mention akka.udp as a remote transport to use in the docs #21112
[#21090] Added the improved code for loggingResponsetime and added the link in the docs (#21118)
Add samples to run HTTP and HTTPS servers in the same app #18551 (#21079)
Upgrade jackson-databind to 2.7.6 (#21113)
=pro make #21105 never ever happen again (OSGi breaking release) (#21121)
=act ByteString deserialization unbroken for large bytestrings #20901 (#21096)
Incorrect message for graceful shard region shutdown docs fixed #20764
#20638: Harden TickSourceSpec (#21095)
=htc fix JsonFraming completion bug, exposed by new Interpreter
=htc improve patience on FramingSpec because Jenkins
+htp #18837 completely rewrite EntityStreamingSupport added CSV examples updated docs EntityStreamingSupport is now an entry point, to all streaming things both read and write side use it it's easy to extend as well
=htp address review feedback on JSON streaming
=htp introduce ToByteStringMarshaller alias and fix fixme
=htp framed entity streaming cleanup, renames
+htp #18837 allow as[Source[Tweet, NotUsed]]
+htp #18837 more docs and final cleanups, complete java docs
+htp #18837 implemented JavaDSL for Source streaming
+htp #18837 JSON framing and framed entity streaming directives
Downgrading SBT until https://github.com/sbt/sbt/issues/2686 is fixed
=doc,htc fix code include and method name of completeWith (#21092)
=htp #21029 Move redirect to RequestContext. (#21071)
=htc Http server latency multi node spec array and source routes unmixed (#21086)
=rem #21077 explicitly set used SSL protocol (#21078)
reducing array load pressure by making connections an explicit object
Event chasing implemented
Microoptimizaitons in the interpreter
Optimize Fold supervision
make Map a GraphStage
baseline benchmark
Cluster Sharding with remember-entity enabled fails to recover after restart #20744
Convert Rechunker to GraphStage
=doc fix typo for migration guide (#21075)
+doc stages-overview entry for partition stage #21020 (#21073)
Link to migration guide from java docs, minor corrections for #20945
Additional JavaDSL package structure and docs #20945
align package structure in http javadsl
make RunnableGraph.addAttributes return a RunnableGraph #20630
HTTP: Optimise response rendering and response parsing (#21046)
=htc #21051 WebsocketResponse future now fails if the connection failed (#21054)
=str 20711 IllegalMonitorStateException in Source.queue
=readme Updated the contributing doc with sbt memory heap config (#21055)
replace AkkaSpec with StreamSpec for stream tests #21011
=doc fix spray-json included snippet (#21045)
=htc #21008, controller stage misbehaving on early response (#21033)
=htc migrate Masker to graph stage (#21048)
=ben fix compilation due to stale PR being merged (#21044)
=htc #20921 mima filters and scaladoc for discardBytes (#21042)
=htc #20921 add discardBytes method to HttpEntity (#20925)
Document HTTP custom method (#20508)
=doc graphstage sink example (#20955) (#21030)
+doc add unit tests for extractDataBytes and extractRequestEntity directives (#21022)
=htc Byte string parser input for request target parsing (#21018)
+pro Update sbt-JMH (includes JMH 1.13) (#21026)
Jenkins benchmarking improvements (#21034)
=doc fix FAQ url (#21031)
=doc fix .rst syntax (#21032)
+htc #20771 provide different options to deal with the illegal response header value (#20976)
=doc set up mailbox for BalancingPool documented #13961
Limitable in HTTP Core rewritten as GraphStage #21019
=act Identify does not reset idle state of actors under ReceiveTimeout. fixes #20998 (#20999)
Pre-fuse http server layer (#20990)
=htp #21009 Correct type of response in logging directive samples  (#21010)
+htp #20881 add toStrictEntity and extractStrictEntity directive (#20953)
=str 20967 print stream state on test failed (#21003)
+htp,ben HttpBlueprint benchmark (#21005)
ByteString optimisations of methods in HTTP parsing hot-path (#20994)
=htp cache default RejectionHandler instance, it's safe to share (#20996)
+doc explain how to generate JavaDoc in CONTRIBUTING.md (#20995)
+act Clarify usage of FromConfig in doc and API doc #18771 (#20981)
Bump sbt to 0.13.12 (#20978)
=htc do not mention source in HttpEntity.toString (#20739) (#20971)
=htc #20920 create ContentLength HTTP header in JavaDSL (#20926)
Update AkkaHttpServerLatencyMultiNodeSpec.scala (#20980)
=str Avoid building unused strings on every wire call (#20948)
=doc Akka & GitHub appearances in docs (#20968)
+doc Indicate in doc BalancingPool should not support Broadcast #15030 (#20979)
=htp attempt to fix PR validation issue, unable to reproduce (#20975)
=htp fix typo in latency spec using AB (#20965)
=htp multinode latency spec for HTTP (#20964)
Nikdon 20535 check same origin (#20962)
=htc replace getSimpleName with Logging.simpleName (#20951)
additional debug logging for fsm #20952
Corrected onPush description in Custom stream processing docs #20959 (#20960)
+write http throughput results if asked to (#20958)
dsable fuzzer in Http Throughput spec (#20957)
+htp akka http Throughput benchmark, for jenkins (#20956)
+act #20936 add CompletionStage API to CircuitBreaker (#20937)
=build update to latest sbt-jmh (#20949)
=htp #20884 fix header name rendering issue when $minus present (#20940)
=act #20910 optimize ByteString#copyToBuffer (#20911)
=build versions of dependencies for 2.12.0-M5 (#20939)
Adding note on usage of Cluster Dispatcher #20775 (#20927)
Add news link
=doc #20931 fix java docs link
=htc, doc replace usages of deprecated methods of FileIO (#20928)
+doc #20192 explain need of draining entities in server/client HTTP (#20852)
migrate Fold, Sliding, Grouped to GraphStage (#20914)
=str 20843 Scan failure should flow downstream ASAP
Document handling blocking ops in ScalaDSL Akka HTTP (#20912)
=htc Convert HandlerStage to GraphStage, #19361. (#20855)
=doc #20885 small fix and clarification for Java stream-graphs example (#20894)
Recommend `new SecureRandom` for an HTTPS server #20908 (#20909)
=str 20843 Scan.in cannot pull closed port
=htp #20915 fix too small timing issue in DirectivesSpec (#20916)
=art place OutboundTestStage after SystemMessageDelivery stage (#20899)
=ddata add WeaklyUp cluster member node (#20634)
=htc Convert ChunkTransformer to GraphStage (#20493)
+htc Parse URIs with many query string segments (#20770)
Update issue-tracking.rst with links etc (#20905)
+str 20129 add lazySink (#20579)
adjust the hit count sampling with the rate
doc #20466 Java range-directives examples added (#20892)
enable compression by default
remove burstiness in latency tests
Improved CONTRIBUTING.md (#20895)
Explain SettingsCompanion being internal (#20893)
Suppress Java Serializer warnings when extending NoSerializationVerificationNeeded (#19963) (#20785)
19615 set redelivery delay on camel unit test to speed it up and support future versions of camel
=doc Correct minor typo (#20897)
Modify SettingsCompanion to support create using ActorSystem (#20845)
+doc Add more description about actor path alias, symbolic link #20773 (#20866)
adaptive sampling of hit counting
=act let onReceive throw Throwable, #20231 (#20781)
=doc Improve readme a bit, more links, and sections (#20889)
=str switch to java std lib ThreadLocalRandom. (#20877)
doc #20466 akka http java dsl examples - file upload directives (#20859)
Compression tables properly *used* for Outgoing Compression (#20874)
update to Aeron 0.9.9
new OutboundEnvelope
+doc add http (experimental) migration guide to ease upgrading DSLs (#20860)
enable flight recorder by config
remove invalid actorFor test
adjust oversized error message
flush messages on shutdown, #20811
ignore PubSub Status message from unknown node, #20846 (#20847)
=art #20455 compression tables advertised as a whole "2 tables mode" (#20863)
+doc #20794 explain Prop edge cases. (#20861)
Remove distributed pubsub nodes on leave #20826
=htc #20789 fix double push of requestPrepOut in HTTP blueprint (#20841)
update to Netty 3.10.6.Final, #20856
=htp simple head test to cheack manual completion with empty Source (#20853)
stop PoolInterfaceActor on shutdown, #20842 (#20844)
+htp #18929 add withSizeLimit directive (#20760)
=htc #19361 Convert UpgradeStage to GraphStage (#20835)
rename 2.5 migration guide, #20831
#19931 Track pending requests properly on expectRequest
+htc #20456 Add hot connection pool via the minConnections setting (#20723)
=str Deprecate InvalidAbsorbTermination, please use GraphStage instead. (#20288) (#20386)
=htc Ensure DNS resolution is performed for all new connections #20690 (#20791)
Akka-HTTP: basicAuthentication directive promotes insecure passwords #18858 (#20820)
+tes introduce simple way to gather flamegraphs from multinode specs
+doc #20466 example snippet for akka http java dsl: ParameterDirectives (#20823)
fix bug in SystemMessageAcker, #20709 (#20792)
+art #20455 HeavyHitters, CountMinSketch => ActorRef Compression
+htt #20815 Add expectNext(d: FiniteDuration) and requestNext(d: FiniteDuration) (#20819)
Replace PushStage-based Log with GraphStage (part of #19834) (#20788)
#20804 add a note for unique per instance extract directory
+doc #20466 akka http java dsl example snippets timeout directives (#20812)
akka http javadsl - add path directive tests (#20813)
+htc #20272 HttpMessageParser swallows IllegalHeaderException (#20783)
Improve map stage diagrams (#20551)
#20808 clarify docs on the quarantined node restart
+rem Support serialization of scala Some and None (#20801)
+doc example snippet for akka http java dsl: SecurityDirectives (#20717)
+doc Add more imports to the stream quick start guides for Java and Scala (#20797)
delete embedded media files on shutdown, #20779
=str #20214 remove debug println in TLSActor (#20769)
=htc #20683 added more docs, documented expected double-run behaviour (#20765)
Allow Java API to create actor publishers with stash
port remaining remote multi-node tests to Artery
Warning for actors with value class arguments
Remote actor selection test cleaned up, but still not passing
Porting RemotingSpec to artery #20714
make cpu vs latency configurable, #20625
make remote deployment work with Artery, #20715
A simpler ActorRefProvider config #20649 (#20767)
=str ActorPublisher mustn't to signal onSubscribe on the given subscriber more than once. (#20733)
send dropped system messages to deadLetters
reduce allocations with specialized ImmutableLongMap (#20750)
=htc migrate BodyPartRenderer to GraphStage #20288
+htc #20683 discardEntityBytes() combinator for draining entity stream (#20707)
+doc add depenedency note to docs #20732 (#20761)
example snippet for akka http java dsl: FileAndResourceDirectives (#20758)
Better recovery timeout for persistent actors #20738
+doc #20521 Enrich docs and tests regarding empty strings used in matchers (#20719)
+htp #19756: Add extractData and extractRequestEntity directives. (#20730)
+doc updated Sphinx install guide (#20743)
object pool for InboundEnvelope
improve the test somewhat
Option value class, to avoid allocations for optional sender
optimize access to association UniqueAddress
adjust default-remote-dispatcher settings
optimize quarantine uid check
improve performance of serializer lookup by id
avoid unessary wakeup in SendQueue
fixes #20414 Allow different ActorMaterializer subtypes
test support for blackhole in Artery, #20589
Reduce internal allocation in ActorGraphInterpreter
Initial AFR instrumentation
+doc #20699 improve docs for akka-http (#20722)
+doc #20466 example snippet for akka http java dsl: FormFieldDirectives (#20731)
Amending docs for KillSwitch #20708 (#20716)
+doc #20466 example snippet for akka http java dsl: RouteDirectives (#20721)
+doc #20466 example snippet for akka http java dsl: CodingDirectives (#20718)
+doc #20466 example snippet for akka http java dsl: ExecutionDirectives (#20710)
port some remote tests to Artery
new queue Source for remote sends
Added reading support for testing
Flight recorder, initial data structure sketch
+htp #20705 allows javadsl creating custom rejections
=doc Invalid FrameParser example fixed #20519
Adding docs for KillSwitch #20265
recovery timeout for persistent actors #20698
+doc #20466 example snippet for akka http java dsl: BasicDirectives (#20647)
format with new Scalariform version
-str #20288 Remove obsolete RestartTestStage (#20692)
=htp #20648 encoder now encodes all response types, not only successes (#20691)
Update to a working version of Scalariform
detect wrong protocol
+htp #19929 NameReceptacle[T].as[B] take Unmarshaller[T, B] instead of FromStringUnmarshaller
adjust sample for Artery
tryCleanDirectByteBuffer in Artery BufferPool
Attempt cleaning of DirectByteBuffer, #17194
#20627: Increase LayoutSpec stresstest patience
keep the refuseUid along association state transitions, #20531
gating should not overwrite quarantine, #20531
=htc #20214 disabling SNI per-connection now works (passing though sslconfig) (#20621)
test for restarting node, #20639
doc #20622 Document the Raw URI option in reference docs (#20682)
+htp #20535 add checkSameOrigin directive to HeaderDirectives (#20560)
=str #20676 harden OutputStreamSourceSpec, #20676 (#20693)
replace thin spaces with regular spaces (to make diagrams look good) (#20696)
=http #20687 remove dead code and unused import from Unmarshaller (#20688)
port of some remote multi-node tests
doc #20672 pulling pattern link broken (#20686)
htp #20685 HttpEntity should not care about the materialized type of its Source (#20684)
use ByteString.empty
+doc #20466 add header directive examples (Java) (#20673)
configuration of Artery materializer and dispatcher
make it possible to use external Aeron media driver, #20588 (#20653)
improve performance of literal encoding (#20655)
+doc add java example for onCompleteWithBreaker (#20675)
+htp #20198 onCompleteWithBreaker directive (#20402)
use blocking-io-dispatcher correctly in OutputStreamSource, #20666
htp #20392 ControllerStage should complete when parsing of request failed and bad request response sent. (#20596)
=str #19921 Error in documentation: Graph_cycles (#20656)
fix memory leaks in tests, #20659
-str Remove obsolete OneToManyTestStage, #20288 (#20629)
+doc  #20466 Include Future Directives Examples for Java. (#20619)
+doc #20466 akka http javadsl - add debugging directive test (#20651)
remove async, #20562 (#20645)
=htc #20602 avoid checking racy value if we don't really care (#20617)
=doc fix inaccurate docs #20632 (#20652)
initiate new handshake after restart of receiving system, #20568
change header to use serializer id instead of FQCN
handle serialization errors, #20324
optimize currentTransportInformation
add serialization api based on ByteBuffer, #20324
add JMH benchmark for encoder decoder stage
Return failed IOResult for non-existint file (closes #20590)
-doc remove note about scala in java testkit docs, #17288 (#20614)
increase some test timeouts in http, #20607
-doc remove STM section from JMM docs, #16980 (#20612)
!htp,java #20592 javadsl complete* should take Marshaller[...,RequestEntity] (#20593)
-doc remove tracking codes from urls (#20609)
=clu #20613 logging selfRoles during node unreachable and quarantined (#20542)
Added a Packt video to list of resources (#20509)
regression of Creator check, #20537 (#20538)
Update MiMa to check against Akka 2.4.6 as well (#20604)
=htp #20601 increase timeout in File touching tests (#20603)
+doc,htp example snippet for akka http java dsl: CookieDirectives (#20585)(#20466)
=doc Remoting documentation addition (#20463) (#20584)
converts LengthFieldFramingStage to GraphStage
=str Converts DelimiterFramingStage from PushPullStage to GraphStage (#20367) (#20367)
=doc,htp #20466 Include Respond Directives Examples for Java. (#20595)
fix-rds-leak-bug
Add scheme directive example in javadsl (#20586)
=str #20229 groupBy should be a Graph stage (#20344)
=doc #20565 explain binary compat rules explicitly (#20569)
improve restart logging
give up sending after a while, #20317
temporary workaround for failing RemoteRestartedQuarantinedSpec
[WIP] Large message stream for Artery (#20545)
improve codec performance
increase Aeron liveness timeout
rename protocol to artery
make OneHundredContinueStage an object
Buffer and header parsing support
Publish akka-osgi but do not include it in dist #20548 (#20549)
=str #20550 only accept -1 for infinite retries in recoverWithRetries (#20555)
!htp Move classes from javadsl to javadsl.server to keep in release jars #20556 (#20558)
replace PushPullStage with GraphStage in HttpServerBluePrint
HTTP: Document how a type is marshalled into json #20514
Removing pidfile that got in the JavaDSL merge
log Aeron errors, #20317
make use of auto port selection in tests
handle stream failures by restarting, #20317
harden resend sys msg test
add quarantining state and inbound quarantine check, #20313
init new handshake for unknown origin, receiver restarted, #20313
make control message ingress buffer bounded
amend build for artery dev
Auto port selection and SunnyWeatherSpec for Artery (#20512)
Workaround for unidoc failing to compile scaladsl.server.Rejection
20413: Implemented. Now 0 and 1 treated as boolean if specified. (#20526)
Docs for half closed client WebSockets #19957
Removing accidentally committed async-client subproject (#20530)
+doc #17972 added spray migration guide (#20511)
!htp #18919 #19519 New JavaDSL for Akka HTTP (#20518)
=act #16969 Props.create must not check STATIC flag (#20488)
add unit tests for the handshake and control stages, #20313
Observe the cluster client and its receptionist
Test spec for Strict-Transport-Security added
Reverted to maintain binary compatibility; extra fields allowed in Strict-Transport-Security
Added preloaded field to Strict-Transport-Security header in akka-http headers model
htc #20379 allow registering custom media types (#20401)
add deprecatio marker to Timed operations
=act #18938 fix MetricsBasedResizerSpec
rename reply to control
=htc #19650 expse effectivePort on Uri, better port handling
inject outgoing control messages at lower level
=str rewrite StartTimed, StopTimed & TimedInterval as GraphStage
first stab at handshake, #20313
=pro #20495 derive Dist projects from publishArtifact setting
re-enable DontLeakActorsOnFailingConnectionSpecs #19049
flush outstanding task in AeronSink before completing
update HdrHistogram test dependency (#20499)
increase timeout for setting up SharedLeveldbStore, #20056
=str #19025 check that the server has started before trying to connect (#20494)
format the code
=pro #20287 sync dontPublish with Dist
getLogger that accepts AbstractActor #20478
DistributedPubSub messages sent to dead letters if no recipients #19009
included script for finding fixed tickets #20475
=doc add important async caveat for Source.actorRef
+per #20257 Snapshots with PersistentFSM
headerValueByType should extract just value #20472
Updated for outProbe
=htc convert from identity to ConstantFun.scalaIdentityFunction (#20467)
=str remove unused akka.stream.impl.fusing.Completed (#20468)
first stab at system message delivery, #20323
KillSwitch implementations should implement KillSwitch (#20459)
Introduced backpressure timeout (#20131) stage.
=htc make HttpMessageParser use GraphStage #19225 (#20385)
htp #19681 MalformedRequestContentRejection cause traceability (#20346)
htc #20388 HttpServerBluePrint is now resilient to the response being handled before the scheduled timeout response for same exchange. (#20458)
handle tick wrap around in LARS, #20424 (#20435)
=htc Various minor cleanups (#20451)
=sha #20315 make sharding snapshotting based on seqNr, not counter (#20319)
Convert Completed from PushPullStage to GraphStage (#20454)
=pr #20439 remove git plugin to avoid jgit version clashes (#20452)
=act #20447 fix UntypedActorWithStash javadoc
more readable number format
show Aeron stats
update to Aeron 0.9.7
delegate backoff to separate/shared thread (#20407)
#19978 SpecViolation should result in orderly shutdown of GraphInterpreter
=htt #19792 Increase file upload directive test timeouts
=doc correct references to non-existent ShardRegion state messages / return types
verify docs for complete directive #20280
+str #19443 add support or Java Stream
Upgrade jackson-databind to 2.7.4 (#20419)
boolean unmarshallers will unmarshall 0 to false 1 to true (#20416)
htc #20362 Expire defaults when HTTP-date is not possible to parse (#20362)
Str #20217 If the future in mapAsync is already available, don't dispatch it (#20375)
=htp #20338 correct byte range slicing (#20382)
=act split event Unsubscribers.
Support Protobuf serialization/deserialization of `akka.actor.Identify` and `akka.actor.ActorIdentity` (#20380)
=act Locale unaware method in Helpers. (#20412)
htc #20403 fix initialization of deprecated field (#20411)
=act jvm env unaware ActorSystem.
doc #20409 Broken link corrected in Akka HTTP WS server docs (#20410)
htc #20398 fix missing param delegation in javadsl https (#20399)
-doc,str,tes remove statsd and graphite reporting code, its not used (#20383)
Add latest versions to MiMa
=htc replace printEvent with Flow[T].log #20288 (#20384)
!htc #20371 allows for simple HTTPS usage from Java, fixes typo in APIs (#20373)
Add basic support for Java 7 NIO file systems (#20293)
Updated the link for 'full routing example' to WebSocketCoreExample.java (#20389)
Migrate NaiveTake and ByteStringBatcher to GraphStage #20288.
add output for trend plots
htt #17542 and #20298 resource leak test coverage and fix (#20300)
Exception description modified to reflect exclusion of 0 (#19709) timeout. (#20321)
+htc #20273 EitherUnmarshaller (#20274)
Adding javadsl.model.MediaType.Compressibility (#20378)
+str #19782 Transpose a sources sequence (#19795)
add Artery throughput and latency tests
support HttpEntity.with/withoutSizeLimit in scaladsl HttpEntity, #20342
#20123 Added recoverWithRetries which adds a parameter to limit the (#20137)
=per #19688 [2.4.1][PersistentFSM] getting StateTimeout for state wit… (#20266)
=doc #20354 fix version for docs search (#20369)
+doc New UI for the autocomplete (#20364)
improve Aeron source and sink
Migrate BodyPartParser to GraphStage #20288.
Clarify explanation of Source.actorRef termination in embedded doc
Disable diagram verification for akka-http-tests (#20355)
act #20332 Functionality to automatically load library extensions
clu #20309 API for pluggable cluster downing
Copyright year in docs updated
Improve documentation and configuration API when using together: sharding and distibuted data (#20215)
convert Recover to GraphStage
Migrate PushStages in LifecycleInterpreterSpec to GraphStages #19834.
Configure external links in ScalaDoc
+htp,str #20326 more links to ssl-config and update default TLS version
Converts the Scan-operation from PushPullStage to GraphStage
migrating Doubler, KeepGoing to GraphStage
= rename FlowGraph* to GraphDSL
disable some PR validation, during Artery prototyping
increase delay before shutting down persistence samples, #20005
Replace PushStage-based Filter with GraphStage (part of #19834) (#20269)
remove TcpTransport
add Aeron to Artery
move AeronSource, AeronSink to remote
Proof-of-concept for the new Remoting codenamed Artery
adjustments for Scala 2.12.0-M4
=per make sure ReplayFilter works OK if no previous writer ID was seen
doc,io #16262 UDP multicast tests work on all platforms (#20290)
=act reduce substring call by adding an additional startIndex (#20279)
i=doc fix #20291 by exposing imports better (#20292)
ignore ClosedChannelException when register selector, #16035
str #20262 reduce should fail explicitly on empty stream (#20267)
htc #20258 add override modifier in the custom header methods
#20282: Make unbind work on windows
#20216: Wiring should work in arbitrary nest levels far from original module
lazy usage of defaultAddress in ConsistentHashingRouter, #20263
debug sender/receiver
Updated the documentation example for Directives.getFromDirectory and Directives.getFromResourceDirectory- #20186
htp #20214 more docs on https context configuring
htp #20214 allow workaround for disabling SNI
=htc #20080,#20081,#20082 Simplify pool gateway synch
first prototype of Aeron Source & Sink
=htc #20236 enable streaming responses with `Connection: close` (#20254)
=htc #19834 replace StreamUtils.identityFinishReporter with Flow.watchTermination
fix osgi-dining-hakkers sample
=htc Refactor StreamUtils.identityFinishReporter to Future[Done]
Refactor anon GraphStageWithMaterializedValue to object
=htc #19834 convert StreamUtils.identityFinishReporter to GraphStage
htc #20228 fix race condition when setting up client https connection
all #20090 enable running java tests in actor,camel,cluster,persistence
harden ActorLeakSpec, #20221
=str #19993 Less tight limits in one throttle test
remove JUnitRunner annotation, #16112
increase test timeout in FlowLimitSpec, #20197
htp #19678 add variadic concat route combinator
=htc #16394 Remove StreamUtils.recover, Flow.recover is now available
htc #19834 convert streamutils to GraphStages graphstage
clarify pubsub group docs, #17458
str: Support stash in ActorPublisher, #17037
=htc #19834 Replaced PushStage based captureTermination with GraphStage
=str - Improves performance of mapAsync
Clarify system name requirement for cluster members
htp #20103 introduce Scaladoc groups for Directives
doc-separate-section-persistence-eager-init
fix doc generation with python 3.5
Eliminate double-copy of byte array when creating ByteString with varargs
Replaced PushStage based TakeWhile with GraphStage #19834
+str #19390 Add 'monitor' flow combinator and stage
Remove 'the' duplicates
=str #19834 Replave UTF8Encoder with GraphStage
+str #18620 add Source.blocking() for legacy API integration
19958: Add tests for throttle reuse
#19777 OutputTruncation should be only reported if there is proof of it
=htc #19953 Complete Promise in captureTermination onDownstreamFinish
19862 Token bucket reimplemented
#19862 Token bucket should start full
19892: KillSwitch (controllable stream completion)
adding java dsls
=str #19834 replace PrepareForUserHandler with GraphStage
=doc #20017 Update the stream-rate docs to current streams behavior
str #20144 UnzipWith pushed twice when sinks were closing
Replaced PushStage based CheckContentLength with GraphStage #19834
document FlowOps extension
Added markdown file type to MediaType text/markdown entry
lift mapMaterializedValue to FlowOpsMat
use union/diff operator on Sets (optimization)
=str 19834 Migrating PushStages to GraphStage
Improve error when Cluster MBean is gone #2033
fix wrong setting in AdaptiveLoadBalancingRouterSpec, #18156
fix InvalidActorNameException in EventAdapterSpec, #18954
=htp #20052 headerValueByType now works with custom headers
increase some test timeouts in http-core, #19965
increase test timeouts in typed.ActorContextSpec, #18568
harden LoggingReceiveSpec, #20027
=htp #18615 rm comment on workaround in Scala 2.10
harden cluster.NodeChurnSpec, #19536
harden cluster.StressSpec, #20095
=str Simplify cancellation of TickSource
+htc #19162 add init workaround when scala inits first (and then java)
htc #19693 fix too small timeout in test
make DNS actor work with RemoteActorRefProvider, #18650
+htc #19162 add safe java accessors to scala objects
=doc fix code include marker for timeouts
avoid NPE in recoveryRunning, #19177
Add links to go to Java and Scala contents #15556
rem #19780: Skip acks during connection handoff
#tweet-source now is bound to the actual impl
=htc make ws.Message toString reprs consistent
+htc #20086 make ws.*Message.Streamed not private
=act #19901 Include actor path in ActorInitializationException message
fix ABNQ nepotism
Replaced PushStage based Take with GraphStage #19834
fix the the typo
str #20049 OutputStreamSource thread leak fixed
=per #19828 pop the internal stash when the writing was finished in the processing commands state
add Source.queue termination support, fixes #19877
add tests for large flows
catch ActorCell creation failures for top-level actors #15947
=doc #20051 Parallellism docs updated for async and fusing
!htc WIP #19956 removing case classes from HttpMessages
include cause in remote init failure logging, #20061
+htp #20002 add authorizeAsync
fix endless loop race condition in NodeQueue, #19949
Allow loggers to use a dedicated dispatcher, fixes #20006
simplify materialized value computation tree, fixes #20015
remove 1 synchronized from akka.dispatch
+doc #20046 allow general sections to be searched
=doc fix scaladoc warnings #18500
=cls #19917 Clarify docs about sharding ddata
=rem #19322 reset bufferWasInUse
fix ActorPublisher state machine, fixes #20031
=cls #19893 Handle SaveSnapshotSuccess in PersistentShard
=str #20009 State shared over multiple materializations eliminated
=htp #19397,#19842 fix content negotiation for non 2xx and Accept handling
=htc #20024 introduce more specific exception type for connection close
=htc #20024 introduce more specific exception type for connection close
=htt #20013 Provide a description as stream size exception message
Update CONTRIBUTING.md
+doc more visible note on connection pool shutdown
fix race condition in MessageSpec, fixes #19995
 #15654 point out explicit actor lifecycle
fixing scaladoc warnings reported by jenkins
=doc fixed part of scaladoc warnings
#18765 Update to latest MiMa which is now an AutoPlugin.
document ActorSystem shutdown needed in REPL, #15314
add FAQ entry for careful ActorSystem creation, #15313
Point to Reactive Manifesto in README, see #15130
#15120 BalancingPool semantics note for Java
#15120 BalancingPool semantics note for Scala
=str #19791 subscription timeouts modes respected in prefixAndTail
touch-ups to what-is-akka.rst
only put canonical links in online version
#12772 recommend at least 2GB for running the build
=str #19500 Make encoder and decoder in simpleFramingProtocol public
-doc delete versions.json
Stabilization of ClusterShardingGetStatsSpec, fix for #19863
#19983 Add withoutSizeLimit overrides for Scala API.
fix and document VirtualProcessor, fixes #19790
=htc #15799 implement client-side `Expect: 100-continue` support
update warnOldDocs.js and symlink for release
+doc,htp #19896 directives for RequestTimeout and docs
Do not warn about harmless unhandled MemberEvents in ShardRegion
=act #19926 clarify fixed-pool-size valid values
=act #19789 do not log serialization warnings for java.lang.*
-doc remove team.rst as we have a team page on the site and contributions can be checked on github with full stats
-doc remove unnecessary Loading div
Replace mentions to Spray to Akka HTTP #19898
Add "Phylosophy" section to Akka HTTP doc #19898
Upgrade jackson-databind version to 2.7.2
=pro upgrade to sbt-boilerplate 0.6.0
Remove outdated note in Streaming File IO
=htc #19058 prevent errors to be logged for http timeouts
Replace errorLogging with GraphStage - resolves #19899
When RARP is being shutdown, it pipes result of the shutdown of transport to self. remote's shutdown is using `ask` pattern, so it can produce `Status.Failure`, which is not handled in RARP's state `WaitTransportShutdown`. For fixing it added matching for `Status.Failure` and changed `RemoteTransport`'s shutdown signature to use `akka.Done`, which looks more consistent with other shutdown's and `akka.Done` is more verbose than previously used `Unit`.
SimplifyTestKit doc async sample #18804
+doc #19844 rel links to "current" on each page
+doc introduce algolia search box
add Strict-Transport-Security header #19861
SBT build configuration updated * replaced Defaults.coreDefaultSettings and Project.defaultSettings to *.coreDefaultSettings * replaced 'settings = ' inside 'Project(...)' to 'Project(...).settings'
=clu #19859 Relaxed constraints on downing old incarnation of rejoining node.
Replaced PushStage based Drop with GraphStage #19834
=htc #19827 avoid double-push when request timeout triggers
=doc typesafe config is still named typesafe
microscopic doc improvement
=htc #19287 fixes SNI issue on JDK8 in http client
remove akka.stream.testkit.AkkaSpec, fixes #19879
=doc #19840 Introduction docs for HTTP
make MetricsBasedResizerSpec deterministic, fixes #19873
+doc,java document the PatternsCS.ask
=htc #17595 a word of warning against increasing `pipelining-limit` on the client
=doc #16491 document ways of controlling server parallelism
=all remove unused imports
=htc fix some warnings
=htc #19814 fix port handling in ConnectHttp
Update copyrights and links to the new company name #19851
add notice that chill is based on 2.3.x but also works with 2.4.x
=doc #19551 Supplement java8-lambda docs of persistence stash
=str #19818 Flow.transform should be deprected too
bump sbt version to 0.13.11
#19767 Exclude meta-projects from unidoc tasks.
Remove duplicate overridden is streams customization
add Twitter Chill to list of External Akka Serializers
Added Learning Akka book
=htc make basic credentials token method return correct token
Add license information for samples.
add Twitter Chill to list of External Akka Serializers
=htc make HTTP compile under Scala 2.12.0-M3
Make CrossVersion.full work with custom scala versions
=str - #19774 - Implements GSL.readN properly, with tests
Unbreak master by fixing StreamFileDocSpec to import scaladsl._ iso io._
= str #19803 fix 1 element buffer handling
splitting up TLS APIs
fix Balance internal buffer wrap-around, see #19806
+doc add missing migration parts to java documentation
!str split Framing into javadsl and scaladsl
add new Streams Quick Start
+doc #19796 explain how to obtain a JsValue using entity(as)
Prepare build for Scala 2.12.0-M3 release
-htp #19577 replace overloads of bind with HttpConnect
remove requirement for module tag in commit message, fixes #19413
document that GraphStage is a blueprint, fixes #19471
add section about Java 8 APIs #19655
document that StreamConverters close their streams #19773
expose file open options in FileIO.toFile #19635
=str #19781 Use overriden `InputBuffer` attribute
= - Minor cleanups, will get an appropriate commit message soon
clean up dependencies #19755 and other fixes
Documentation improvements
add statefulMapConcat to overview and fix links
GZIPInputStream is not closed at all  at places, where it's instantiated, which leads to off-heap memory leak with every deserialized message.
=str #19775 FilePublisher should not report EOF multiple times
=per #19551 support stash overflow strategy
include build information for Scala 2.12.0-M3
=str #18890 fix throttle
=http =doc, fixes #16113 - fix some spray references in scaladoc
update to slf4j 17.16, #19758
ensure that graph attributes are not lost
Generate version files from the version sbt setting
=str #19423 add satefulMapConcat
=doc Add intended use section to OSGi doc
=str #19591 updated 'partition to three subscribers' to use Sink.seq and added a new test to cover a case where partitioner return an index out of bounds
=str #19293 fix issues in Sink.seq + minor doc fixes + use Sink.seq and limit in tests where appropriate
!str #19732 Concise and consistent way to mark async boundaries
+str #18045 add recoverWith(Source)
19452: Contramap and fromFunction
=htc #19741 cannot pull twice bug in OutgoingConnectionBlueprint fixed
#19662 Reuse connection pool settings if none specified
fix Sink.queue when buffer has run full #19675
=str - removing superfluous try-catch in stream-customize.rst
+htc #19577 binding DSL for javadsl Http
!htt #19388 Chanring x-real-ip from raw to real modeled header
do not require partial batch replay in TCK #19728
=doc #19737 explain websocket -> WebSocket change in migration guide
!htt #19388 Removing use of InetAddress.getByName
-doc remove outdated list of http frameworks built on Akka
#19645: BackoffOnRestartSupervisor should not ignore commands while child is terminating
add hook before each persistence TCK test case
prohibit concurrent write request from same persistenceId #19694
#19719 add ThrottleMode Java API
=doc hide auto downing from default sample config in cluster
!htp #19528 HttpServerBluePrint: close connection on request entity cancellation
fix spelling errors in javadsl/Flow.scala
=str #19721 Failing FlowConflateSpec and NPE in Batch fixed
spelling corrections
=htc #19528 OutgoingConnectionBlueprint: replace splitWhen/prefixAndTail with custom stage
+str #19528 Add `propagateSubstreamCancel` flag to `splitWhen` and `splitAfter`
#19553 One2OneBidi should report truncation also if wrapped flow cancels early
Add Typesafe copyright header
!str #19710 Use Java types in Attributes Java API
silence deadletter logging of SubscribeAck
+htc #19708 provides default marshaller for akka.Done (200, empty text response)
=htc #18993 HttpConnectionPool constructor made private as it leaks impl type
=htc #19692 Improved docs for the web socket message classes
=str - correct typo in 'Source.from()' function documentation
!str #19698 Remove tuple from Java API Source signatures
Java and Scala overview separated. delay and initialDelay added
One small step for mankind but a pretty big one for the stage overview
#19639 Supress warnings on custom headers
Cover sources and sinks as well, and change into a format that allows for toc
=str #19552 Replacing Conflate with Batch
Remove unused imports
=doc #19315 docs for websocket client
19455 Simplify conflate signature for the common case
!htt #19674 Audit HTTP headers and mark correctly as response or request
=hts #19663 Bind-timeout cannot be infinite, reference.conf corrected
!clu #19679 make MemberStatus a sealed class
=htp fix multipart/form-data unmarshaller when no Content-Type field is present
Add support for OpenJDK to release script
=clu #19622 Use full address in ClusterShardingStats
Don't leak FunctionRef instances
remove verbose expected stacktrace from JournalSpec
=str #19664 Docs no longer claim that framer delimiter is included in frames
=str #19469 More verbose logging of stage and tcp errors
#19392: asInputStream timeout
=str - Minor improvements to Framing
!str #19620 Java API for shutting connection pool down
fix ActorRefWithAck when buffer has run full #19653
 #19637 fix BC issue in AsyncWriteJournal
=htt #19623 optimizations and more careful handling of complete and failure in PrepareRequest
!htt #19628 Make CORS response headers extend ResponseHeader
=htt #19623 Early response no longer causing push or pull twice errors
Update copyright year
=act #19616 removing unused setting received-message-size-limit for UDP
=doc #16262 temporary disable failing udp multicast doc test
+htt #19618 adding missing factory methods for server settings in Java API
=htt Test coverage for the Java HTTP extension
=pro #19581 Ignore MiMa changes in validatePullRequest.
=str #19585 fix long initialization for InputStreamSinkSpec
=str #19291 add TestGraphStages for Sink and Source
!htt #19514 Update RouterSettings to be non case class
!htc #19514 add withXYZ methods to all configs
!htc #19514 more case class => class boilerplate
!htc #19514,#18958 make config in HTTP non-case class + from reference
remove experimental marker from stream/testkit/parsing/http-core
+str #19589 Add autoFlush option to  OutputStream Sinks
=str - Sprinkles some finals in Tcp and improves docs in Flow
convert watchTermination to CompletionStage for Java
wip #19441 convert from Option to Optional in javadsl
=pro #19068 All copyrights ranges and single years updated to a range ending in 2016
=clu #19017 Race-condition issue when handling Topic/Group actors.
=doc fix comment for safe-shutdown-example-bad
=str adding documentation for batch & batchAggregated combinators
 #19440 replace Scala Future usage with CompletionStage in javadsl
+str #18565 termination notification combinator
#19517 add parsing to aggregate
!htt #19388 Removing use of InetAddress.getByName
#19344 Made BackoffSupervisorSpec more robust
#19553 deprecate stage infra
#19333 Added missing section in migration guide
!htc,str #19275 fix various scala/java interop problems in DSL
!htc,str #19275 adjust bind/client apis on Http()
!htc,doc,htp #19508 fix casing of WebSocket (as per spec)
=pro fix junit version to be the same in both scopes
!htc,str #19275 towards ssl-configurable server, change APIs
+pro enable validatePullRequest locally
+str #19020 reduce combinator
=str #18890 Polish Source.queue
#19537 Increase RS TCK timeouts
#19446 #18869 Add IOResult
 #19522 make javadsl.Sink.asPublisher nicer
#19432 enable MiMa check for osgi and cluster-metrics projects
#19566 Increase too tight patience for FormDataSpec
Balance should also be allowed to have just one input
#19342 Eliminated race in SubstreamSubscriptionTimeoutSpec due to concat
#19333: Remove ImplicitMaterializer
=doc #18989 Make docs more googlable with regards to docker containers
+str #16610 minor fixes
+str #16610 added javadsl tests + conflate now delegates to Batch + most of the changes @drewhk & @rkuhn suggested
+str #16610 applied the changes suggested by @drewhk
+str #16610 adding aggregate & aggregateWeighted ops
#19544 fix FlowExpandSpec
=str #19361 migrating ByteStringParserStage to graph stage
fix InterpreterStressSpec GC problem
#19530 FlowConcatSpec non-determinism
Do not verify if scaladoc diagrams have been generated as there is none in this project.
squash some warnings
#19046 replace system.{shutdown => terminate}
#19213 clarify clientAuth=None
#19269 doc: Sink.seq is limited to Int.MaxValue
add migration guides for Scala and Java
 #19444 simplify signature of FlowOps.expand
also fix FlowInterleaveSpec
#19517 publish akka parsing
+htc add BiDiFlow.identity in JavaDSL
+htc #16819 implement server-side request timeouts
!htc improve header rendering control by introducing distinction between request and response headers
=htc update outdated documentation in reference.conf
=doc Move formField directives' docs to a correct directory
=osgi #19323 Add to documentation on OSGi
Minor streams touchups
+str #19176 Added Partition Graph Stage with tests
=doc #19449 new migration guide for streams 2.0 to 2.4
fix HttpResponseRenderer termination
#19467 avoid pulling closed port in ProtocolSwitch
#19451 use random port in WebsocketIntegrationSpec
 #19398 fix stream leak in ProtocolSwitchStage
#19014 make Akka Typed spawnAdapter more efficient
 #19014 add FunctionRef and use in GraphStage.StageActor
Various streams build improvements
=pro #18744 Disable generation of javadoc for akka-bench-jmh
=doc expound on SubFlow motivation / upgrade procedure
=act #19496 add sender information in LoggingReceive
 #19427 do not require Flow in UpgradeToWebsocket
fix up StreamTestKitSpec
Corrected several misspellings of the word "losing".
19441: Use Optional instead of Option in http core javadsl
#19441: Use Optional instead of Option in javadsl
Post review changes: converted reference to `circuit-breaker` into a rst ref. Renamed the section into `circuit-breaker-proxy` to avoid section ID conflicts
#19271 Eager pull for Concat and Interleave
+htp: #16651 Add formFieldMap, formFieldMultiMap & formFieldSeq Directives
=htc #19418 add compile test for accessing javadsl content/media type
=htc #19418 avoid LUB problem in javadsl.model.ContentType, see SI-9621
#19457: emitMultiple should handle empty iterator (cherry picked from commit 96e24c8)
#19447 remove compatibility fallbacks for Java < 8
#18860 add back @SafeVarargs annotations
=htc #19418 avoid LUB calculation problem, see SI-9621
=doc fix github link as in #19434
#19440 Added scala-java8-compat as a dependency to streams
+doc #19429 initial merge of docs-dev and docs
Post review changes: - Moved `CircuitBreakerInternalEvents` inside `CircuitBreakerProxy` companion object, - changed logs messages to be consistent with the state name case, - used the correct log level for the case of unexpected self-sending of `CircuitOpenFailure` - Converted the  `OpenCircuitException` class into an object implementing the sealed class `OpenCircuitException` - `CircuitBreakerAwareFuture` is a final class - Using Given-When-Then consistently across all tests (can remove them all if we prefer to keep consistency with the rest of the project) - Using Given-When-Then consistently across all tests (can remove them all if we prefer to keep consistency with the rest of the project)
=str #19431 fixes remaining usage in FlowSlidingSpec
#19326 do not call TestKit.remaining for Akka 2.4 compatibility
=str #19377 improve expectNext() error reporting (if no element signaled)
=pro fix stream tests tck project ref
=pro disable docs in http core for now
=pro fix unidoc/javadoc settings
 #19417 fix empty.head error in WebSocket termination
fix actor leak in streams
 #19094 fix double pull in PoolConductor
str #19338: NPE in ActorGraphInterpreter due to race with publisher shutdown and subscription (cherry picked from commit 161e01e)
=pro fix aggregates
=pro osgi cleanup
=pro merge akka-http-tests-java8 with akka-http-tests (raw)
+pro add Akka Streams HTTP to master build > merged akka-bench-jmh-dev with akka-bench-jmh > renamed akka-stream-tck to more correctly named akka-stream-tests-tck > merged java8 tests with normal tests in http
=htp #19331 Make FileAndResourceDirectives work in OSGi environments
=str - Change implementation of Source.repeat to use unfold
-pro remove unused build stats tooling
-str - Removes Source.unfoldInf
=str - Significant simplification of the implementation of Source.unfoldInf
!peq #19324 update persistence-query to stream 2.0.1
Remove old akka-stream subproject, to be replaced with real one
Remove old akka-stream subproject, to be replaced with real one
=clu #18577 Option to stop cluster client after no receptionist contact timeout
=htc #19361 Rewrite Duplicator/Duplicator2 to use GraphStage instead of StatefulStage
 #18948 add eagerComplete parameter to FlowOps.merge
=clt #19381 silence heartbeat logging in cluster client
Revert "!htc fix multipart model (java6 had trouble)"
=doc minor fixes in stream quickstart
=htc disable fuzzing-mode by default in TestServer
Revert "=act,rem #17911 handle IPv6 Addresses better"
=str include port name when require fails in GraphStage
=str - 16503 - Implements a dedicated FutureSource
=act,rem #17911 handle IPv6 Addresses better
=doc #19357 fix grammar in CONTRIBUTING.md
=doc #19355 fix typo in docs
+htc #18349 emit Tls-Session-Info header when configured on both client and server
=htc Added test to check if charset is set on application/json content type
=htc #19352 HttpServerBluePrint: get rid of costly flatMapConcat on the rendering-side
=htc #19240 HttpServerBluePrint: replace splitWhen/prefixAndTail with simple GraphStage
make FlowOps(Mat).Repr(Mat) safe and precise
=act #19341 increase timeout of askspec testcase
=doc,htc show explicitly how to return an HttpResponse in Java8 DSL See question: https://groups.google.com/forum/#!topic/akka-user/ZmIP7RIDeUs
+htc #19237 entity#withSizeLimit for Java + add withoutSizeLimit
=htc add explicit override keyword where apropriate
Upper case for `Implicits` object and made the CircuitOpenException extending RuntimeException
=htc #19340 fix broken user-handler completion in WS
=htc cleanup imports
Added copyright header to `askExtensions.scala` file and did some small improvement to ScalaDocs and rst documentation
Trying to fix build failures about not thrown exceptions in ScalaDoc
Trying to fix build failures about not thrown exceptions in ScalaDoc and not found reference to `akka.pattern.ask`
Post revision changes:
Post revision changes:
Post revision changes:
Post revision changes:
Post revision changes:
=doc #19302 fix activator link in getting started docs
#19246 Auto and manual reset and `BackoffOptions`.
=doc link to contributing.md from readme
=str #18967 Source.actorRef really take name from the stage
Make it clear that AkkaAppPackaging is actually deprecated
=str add missing copyright comment
=per #19221 Eager initialization of persistence plugins
fix error in distributed pub sub documentation
=clu #19274 failure detection of joining/down member status
Post revision changes:
Post revision changes:
=doc make missing snippets errors again
=doc make missing snippets errors again
=doc,htc #19252 fix docs where occasionally broken
=htc #19276 explain draining of entities is needed
=htc,str #19256 add TCK test for InputStreamPublisher
 #19235 document fusing
 #19267 add .viaAsync combinator
 #19261 override and test addAttributes compilation
=htc,str #19256 InputStreamPublisher could emit without pending demand, bug
=str fix typo in scaladoc
=str - Adds minor touchups to Unfold & UnfoldAsync
+htc add blocked-by as convenience rel (see https://datatracker.ietf.org/doc/draft-ietf-httpbis-legally-restricted-status/?include_text=1)
!htc fix multipart model (java6 had trouble)
=doc add custom ValidationRejection handling to samples
add fusing to migration guide
=doc explain hostname verification, recommend upgrading
=htp #19184 better TLS defaults and hostname verification + depends on com.typesafe.ssl-config which we'll need to release + also makes tests compile on JDK6, to enable testing this on JDK6
fusable SplitWhen and reusable HTTP blueprint
=cls increase the delay in the graceful shutdown example
=act #19201 improve configuration of thread-pool-executor
#17849 reenable ActorMaterializerSpec test
=str #19215 Sink.inputStream OutOfBoundsException
Add named exception to detect when a cluster node has been quarantined by others #18758
 #19192 Cluster extension helper to get full path of an actor ref
#19222 describe why stream elements may be dropped silently
 #19238 add detach operator and fix Detach stage
 #18021 Sink.seq and FlowOps.limit and .limitWeighted
+str #19069 Add FlowOp.prepend for prepending Sources to Flows
Adding to the contrib module an Proxy Actor implementing the circuit breaker pattern
+str #19032 Docs for graph stage and Java API
=fix missing param in javadoc example
=str #19193 remove buffer from InputStreamSource
=rem #19228 make the default TLS version 1.2
=cls improve the graceful shutdown example
=cls Clarify the sharding role setting
=htc, htp replace double backticks in comments with single backtick
!htc #15674 add Java side of Multipart model
!htc restructure HttpEntity model on the Java side for consistency in modelling approach
!str #19129 New homes for file and java.io stream factories
 #19197 implement SubFusingActorMaterializer
=str #19128 #19127 rename Source/Sink factory apply overloads
=htc #16821 support UTF-8 characters in field values
 #19196 fix StageActorRef termination watch leak
=str #18821 fix Sink.queue termination
=per add detailed debug logging in ReplayFilter
=rem #19133 avoid DeathPactException race condition
!htp #19185 generic CSV form field unmarshallers
+str: Implement PrefixAndTail as a GraphStage
make fused graphs fusable
!str #19137: Rename inlet and outlet to in and out on Flow/Source/SinkShape
add fusing
=htp add explicit type annotations to public implicits where still missing
=doc #18849 Improve orthography & grammar For all docs: * remove consecutive duplicate words * Improve use of commata * Improve use of articles * Improve consistent use of singular/plural * Simplify run-on sentences
=doc explain branches
=htp stop case class extraction from throwing IllegalArgumentException
!str #19156 Source/Flow/Sink-Stage removed
=str fixing documentation for PR #19143
+str #19021 Add unfold (and variants) generators to Source
fix GraphConcatSpec
+str #17967 add Sink.actorRefWithAck
+str #19041 deterministic `interleave` operation
=htc #19159 Adds falback for wildcard charset with decimal priority
=http - 19058 - make idle timeout log DEBUG instead of exception
=htc #16395 print decoded text for non-binary strict entities
=htc,doc more docs on EntityStreamSizeException
=str - 19149 - Corrects the behavior of FlowOps.sliding
 #19145 fix FlowGroupBySpec
+str #17967 add Sink.actorRefWithAck
+str #19041 deterministic `interleave` operation
adding stage completion test to intersperse
=htc, str remove references to 'akka.io.tcp.windows-connection-abort-workaround-enabled' setting
=htc: minor cleanups
=str&http - 19142 - Renames all occurrences of `mat` with `materializer`
+str #19041 deterministic `interleave` operation
+str #19041 deterministic `interleave` operation
+str #19041 deterministic `interleave` operation
=htc amend CodingDirectivesSpec to match rebased code
=htp #19099 make sure headers are always written on `finish` in `GzipCompressor`
=htp #19099 fix encoding of empty stings
!str #19005 make groupBy et al return a SubFlow
=str - 18988 - Make AcknowledgeSinkSpec more robust
=str - Avoids an NPE in LocalSource.pull
=str - Adds finals and reorganizes some StreamOfStreams code
fixed typo call to emitMultiple
code restructure to enhance readability
working GraphStage-based intersperse implementation
WIP - Base intersperse on GraphStage instead of StatefulStage. TODO: handle logic to add last element
=doc #16262 do not bind udp test to docker interfaces
=str remove unused buffer pool
=str remove unneeded test marker
=str - 19109 - Unbreaking SinkForeachParallelSpec
=http - 19091 - Removes the buffer(1, Backpressure) from the Http blueprint
!htp #18567 Added unmarshallers for CSV integer sequences
!str - 19028 - Adds requirements for minimum ports
=htc remove reference to jdk7 class in test
=str - 19082 - Moves the `allow` var into the Logic of DropWithin
!str One overload of emitMultiple misspelled.
+htc add `text/csv(UTF-8)` ContentType
+str #18807 Source.range for Java DSL
=str speed up test by 20s by removing an order of magnitude of sizes to test
=str #19064 fix little endian conversion for field length == 4
=htc #19050 reusable http blueprint: attribute injected rem-addr
!htc, htp #16991 add support for precompressed media-types and `.gz` file extension suffixes
!htc, htp remove `specimen` method of ranges, restrict `Unmarshaller#forContentType`
!htp #19034 refactor content negotiation, upgrade to new MediaType / ContentType model
!htc refactor MediaType and ContentType model for better type-safety and cleanliness
=htk fix potential test failure obfuscation
+act #19085 adds Java API ByteString#createBuilder
=htc remove while text color (because jenkins)
+htc,tes #18563 move scripts autobahn jenkins scripts to project
=doc add curl example to fileUpload docs
=htc #18563 fix access to props
=htc #18563 small fixes to make autobahn tests nicer to Jenkins
+str #18556 add delay combinator
+str #18807 Source.range for Java DSL
!str #19037 rename FlowGraph to GraphDSL
=pro put some global keys in Global scope to prevent per project reexecution
=pro #19054 use sbt-dependency-graph directly
=pro #19054 update to sbt-dependency-graph 0.8.0
PersistencePluginProxy
+per #18839 Add better journal proxy
=htc slight renaming, refs #19052
=htc replace websocket support graph by simpler graph stage
=docs style currently deployed
=htc restructure HttpServerBlueprint as stack of BidiFlows for better readability
=str use Scala's ThreadLocalRandom, because Java 6
=htc ignore test, to be fixed in #19049
=doc #18917 remove old API mentions from the docs
=str fix race condition in case of early termination of connections source
=str fix tests depending on supervisor name
=str #18928 fix BidiStage reversed
=str make StageActorRef "single" and watchable, fix some tests
=str Use SeqActorName in more places
-str remove DelayedInitProcessor, no longer needed
=str: Make TCP fusable (first attempts)
+str #18807 add Source.range for Java DSL
+str #18807 add Source.range for Java DSL
+str #18556 add delay combinator
+str, doc: Documentation for GraphStage
+htp add `selectPreferredLanguage` directive incl. docs
!htc #19023 improve/refactor `Language` and `LanguageRange`, add convenience helpers
=doc fix optimised away imports
=per,tck #18639 introduce capability flags for journal features
=cls #18978 Lazy startup of shards when rememberEntities=false
=act #19016 use the BackoffSupervisor as sender for parent msg
+str #18556 add delay combinator
=str,htc apply review feedback: smaller improvement across the board
=htc,htp prepare for enabling `stream.materializer.debug.fuzzing-mode=on` in tests
+htc migrate `pipelining-limit` server config setting from spray
=htp #16898 detect early responses, warn + close if detected
=htp #18830 simplify HttpServerBluePrint: removing bypass, clean up 100-continue support
Add snapshot-store.plugin config to 2.3-2.4 migration docs
=cdd #18328 use set operators union diff instead of ++ --
!cdd #18328 optimize VersionVector for size 1 (typical dots)
=cdd #18328 use iterator with filter
=cdd #18328 use ancestor field, for fast forward merge
=cdd #18328 optimize ORSet.mergeCommonKeys
=cdd #18328 add JMH benchmark, baseline
+htt 16841 uploadedFile directive
=doc,htc better example docs on mapping error response to empty JSON body
+htc #18898 modeledCustomHeader to ease matching on headers
add insecure HTTPS client warning for Java
add insecure HTTPS client warning for Scala
+str #18555 add throttle combinator
=htp #18999 fix IllegalArgumentException in getFromFile/getrFromResource when serving empty files
=act move lookupAndSetField to Reflect helper.
!act #18996 PFBuilder matchAny should take declared input type I
=str fixes wrong / missing cross references in scaladoc
=htc add test to verify URI against a very long path
=str #18556 add delay combinator
=act removed reference to java.reflect.
+act #18913 moved PrettyDuration to akka-actor
=doc #18972 fix typo in docs on oauth2
=doc #18968 Document auth options for Java DSL
=doc #18857 Add docs about comparing the secret when authenticating
+str - Adds Sink.last and Sink.lastOption to mirror Sink.head and Sink.headOption
=tes #18312 Increased the timeout of the test actor and dilated it
=doc fixup due to validation having run before we merged in the rename
=cls #18722 fix DDataShardCoordinator init
!str - Moving the InputStream and OutputStream utilities into Source and Sink
+cam #11214 add attachments to CamelMessage
!htc allow configuration of cookie parsing mode, fixes #16828
!str - 18916 - Source.file and Sink.file
+act #18487 Support custom supervision strategy in BackoffSupervisor
=doc 18471 Document file uploads
=htc fix formatting
+str #18906 add Sink.headOption
=doc add chapter on HTTP message entity size limiting
=htp apply simplification possible after fix of #16394
=htp small style cleanup in tests
+htp #16468 add `withSizeLimit` modifier to `HttpEntity` to flexibilize entity size verification
=doc show where connections are coming from in stream-io.rst
+htc #18925 Add parallelism param to IncConn.handleWithAsyncHandler
+rem #18353: Prune reliable deliver actors (cherry picked from commit 6643f56)
+act #15819 Add PromiseRef and FutureRef as an alternative to ask pattern
+act #15819 Create ask() variant that can be used without sender()
+str enable custom Attributes, add a few more helper methods for attribute querying
=doc #18899 code review follow-up, fixed typo
+str #18835: Allow stages to stay alive even after all ports closed
=act #18613 Optimize RepointableActorRef for sys msg
=act #18607 Test failing on timeout not happening
=cls #18762 fix graceful shutdown of empty region
=str #18870 Refactoring and optimizations of InputStreamSink, OutputSreamSource
=doc #18635 Added section about `ActorSystem.shutdown` being deprecated
=htp #18881 accept multipart boundary parameters with internal spaces
+str #18798: Fuzzing mode for the interpreter
=str #18902 in tests (due to grouped+Sink.head) empty response stream would throw
=htp #18825 don't print parsing exception stackstraces to the console
=doc 18878 Document gotcha about missing tilde
fix includecode
=str #16927 preserve header order in body parts
=str small improvement in GraphInterpreter.currentInterpreter
=clu replace Set -- with diff and ++ with union
=act switch to java std lib ThreadLocalRandom
=act split Props java api implementation in separate files.
=act Scheduler implementation separated from interface.
=act split ReflectiveDynamicAccess implementation in separate file.
=act split FSM java api in a separate file.
=act #16522 Optimize Stash creation
+doc show warning if browsing outdated docs
=str #18817 add Java API for GraphStage In/OutHandler
+doc #18295 add close button with 1day delay to reappear
+doc #18295  show warning if browsing outdated docs +doc #18295 include versions.json updation during release
=str #17732 covered all client APIs to check if idle timeouts work
=htc Remove Java 7 features
=str fix error logging in GraphInterpreter
=doc fix URL to "The ϕ Accrual Failure Detector" paper
=doc #18715 migration guide for Query in Akka HTTP
+str #18840 add of method to predefined Shapes, for nicer Java use
!str - Switches Sink.publisher to use a boolean to indicate fanout rather than a number of allowed subscribers
!str - 18808 - Removes Sink.fanoutPublisher and makes Sink.publisher specify number of subscribers
=str #15707 name unnamed modules
!htp #18479 defer parsing of query key-value-pairs
!str - replaces flattenConcat with flatMapConcat
!str GraphInterpreterSpecKit must not extend AkkaSpec
+doc 18737: Code snippets for migration guide (Java)
+doc 18737: Code snippets for migration guide (Scala)
=str simplify splitWhen and splitAfter's signature.
+str 18735: Added keepalive inject and initial delay ops
=htp #18389 revert earlier workaround since original problem in spray-json has been fixed
=htc #16597 more tests for outgoing connection timeout
=str #18037 FlowOps.log exception handler does not follow supervision strategy
-str - #18806 - Replacing flatten(FlattenStrategy) with flattenConcat
!str - 18608 - Moves the a.s.io.Timeouts functionality into Source/Flow/BidiFlow
+clu #17695 add a way to inspect the current sharding state
Add TransparentExponentialBackoffSupervisor
Sprinkling finals on javadsl classes
!str,htc replace and remove OneBoundedInterpreter
=htt - Improve stability of ClientServerSpec
=cdd #18768 Cache serialization of read and write msg
consider akka.test.timefactor when using akka.test.filter-leeway
+str #17338 add OutputStreamSource and InputStreamSink
=str #16597 initial steps with idleTimeout
=str - Makes GraphStageWithMaterializedValue covariant its type parameters
=str #18135 log debug information when overflowStrategy occur
=str #18789 fix the attributes for log stage
+str #17967 add filterNot combinator
=htp #16962 docs for creating custom directives
=per #18728 allow persistAll(Nil)
=str #18763 remove unused parameter in PoolConductor
!str #18674 remove FlowGraph.Builder.add(Sink|Source)
=str - Minor touchups to GraphInterpreter and GraphAssembly
=htp #18661 effectiveUri in Java testkit
=pro verify BC against all binary compatible versions
!str #18692 javadsl.FlowGraph.Builder.add()
+act #18356 Metrics based resizer for router
=htc log error if user handler fails
 =htc #17344 Error-close client-side response stream if there are responses pending at connection end
 +str #17344 add One2OneBidiFlow
=htp #18759 fix accidental recursive loop in java WebsocketUpgradeResponse
!htc move scala side WebsocketUpgradeResponse to scaladsl.model.ws
=htc #18628 WS: report proper close code when user handler fails
+htc report peer close reasons to the user with custom exception
=htc use automatic probes in MessageSpec
!str make Inlet/Outlet invariant and add Java variance
+act #18575 Publish MemberJoined
+per #18751 Persistence: Return completed current events stream for cleaned journal
=htp #17971 parse responses with missing reason phrase
=act #18371 Warn if the default Java serializer is used
=clu #18554 Make oldest assignment deterministic when joining
=doc Add missing `by` in Routing docs
+per #18559 TCK tests for highestSequenceNr not reset after journal message deletion
RangeDirectivesExamplesSpec uncommented and working
=per #18708 only try further constructors if constructor can't be found
=rem #18339 Use explicit handshake timeout
+str #17383 implement intersperse
=doc explain parallelism-max in more detail
=htc move `Sec-WebSocket-Key` creation/validation to header model
=htc server side handshake cleanup and clarifications
+htc #17275 Java-side of Websocket client API
!htc #17275 encapsulate Websocket request arguments in new `WebsocketRequest` class
=htc Websocket Autobahn Suite test runners and documentation
+htc #17275 Websocket client implementation
=htc introduce ByteStringSinkProbe and update tests to new infrastructure
=doc =per fixed a few typos from 'Unknow' to 'Unknown'
=doc #18496 add scala docs for coding directives
=doc Replace "in runtime" with "at runtime"
=doc Missing `by` in Actors/Initialization patterns
=doc fixed some typos in formFields
=doc #17938 fix references to "Deserializer" in docs
=doc #17938 remove confusing POST wording in formFields
#18058 Emit errors from TLS handshake
=doc fix dispatchers docs nr typo, see #18712
=htc accept entity for DELETE and GET methods
=doc Add missing words in Configuration doc
=htc,doc #18496 make all directive docs have the same style, some additions
=htc,doc #18496 lots of small improvements and last missing docs
+doc,htp #18496 recoverRejections documented
+doc,htp #18496 improved parameter docs a bit
+doc,htp #18496 example for formfield
+doc,htp #18496 file directives docs
+doc,htp #18496 cancelRejections
+doc,htp #18496 overrideMethodWithParameter
-htp #18626 remove overrideStatusCode we don't recommend using it.
=doc,htpi #18496 more security directives docs
=typ #18699 pass Unhandled message to unhandled()
=doc remove misleading statement on async custom stages
=str #18133 Sink.actorSubscriber() should verify the props
=str - #17827 - Introduces  operator for Sources and Flows, to attach a Sink in an inline broadcast fashion.
=htc fix WS masking for empty frames on client side
+htc allow configuration of random source in Websockets + various cleanups
=htc cleanup of WS infrastructure
+htc add missing javadsl.Http.outgoingConnectionTls overload + remove extra params
=htt #17353 Reduce verbosity of logging on pool shutdown
=per Clarify concurrency of asyncWriteMessages
=doc #18636 Correction of mailbox documentation
+stk add TestSubscriber/Publisher.Probe.ensureSubscription to allow manual initialization
+str #18679 add BidiFlow.mapMaterializedValue
+htc,doc #18657,#18665 FormData javadsl and FormField docs
=doc,htp #18657 document FormField vals
=doc,htp #18657 document Headers request values
=per #18646 Remove double wrapping of PersistentRepr in writeMessages
=doc correction of PersitenceFailure typo
+doc #18670 log errors when included snippet empty
=doc #18657 Doc host and path directives
+doc fails fast when includecode has no content
Revert "+str #18486 Source.subscriber's Subscriber throws if subscribed more than once"
+htp #18496 add missing directive documentation (scala)
=str - Uses identityOp iso creating a new name for every Identity module
=htc #18121 enable UTF-8 decoding for HTTP header values
=htc fix formatting + typo
+doc,htc #18610 document using singleRequest in Actors
=str - Minor improvements to SynchronousFilePublisher
=htc #18641 request must be made to the right port
cleanup some test configuration
+str #18411 add FlowOps.zip/zipWith/merge/concat operators
+str #18411 add FlowOps.zip/zipWith/merge/concat operators
+str #18411 add FlowOps.zip/zipWith/merge/concat operators
Remove extra dot
=htp #18632 check ports of URI and Host header in effectiveUri
=htc #18397 fix ArrayIndexOutOfBoundsException in HttpHeaderParser
=htc fix off-by-one errors in header name and value length verification
=htc,doc #18535 improved docs on spray-json usage
+htc add popular ContentType instances for convenience
=doc Add section about persistence failures in migration guide
=str: Optmizing GraphInterpreter
+str: fusable fan-in and fan-out ops
=doc Remove experimental marker from persistence TCK
=act correct two comments in AbstractNodeQueue.java
=str removes newInstance from StageModule and reduces the noise for implementing it
=pro #18447 Check binary compatibility with 2.4.0
+doc,htc #18600,18597 documents where/how to deal with failure in Http
+htc,java #18600 Add missing convenience ContentTypes class
=htc upgrade to updated akka.parboiled internalization
!par upgrade akka.parboiled internal copy to parboiled 2.1.0
+str #18111 SubscriberEvent in stream-testkit is not visible
=str fix double-dilation in StreamTestKit
=doc #17329 Spelling normalization, typos fixed.
=doc fix typo in sharding docs
=str #18501 make TestSink.probe consistent in style with Sink.head Also known as, we do not use () for those
=doc fix typo in sharding docs
Generalised Authentication Directives to accept Bearer Tokens
+str #18501 improvements and fixes in StreamTestKit (adds toStrict)
Actually implement proper cascading
=str,htp clean up build warnings
=htc #18533 make configuration of parsing less confusing
+str #18486 Make sure that Source.subscriber's Subscriber throws if subscribed more than once
=doc #16399 Document async appender for SLF4J
=per #18527 fix race condition in async stash test
=str add missing internal api marker
+str #18486 Make sure that Source.subscriber's Subscriber throws if subscribed more than once
=act #15159 Better error when maibox does not fulfill requirements
=str: TickSource is now a GraphStage
+str #18486 Make sure that Source.subscriber's Subscriber throws if subscribed more than once
=htc #18518 make it simpler to unmarshal csv values from params
=str #18378 Small typos in Streams docs
=str #18378 Small typos in Streams docs
!str #16410 #16597: Removed TimerTransform, added Timeout stages
=clt #18440 Harden ClusterClientSpec again
=doc fix typo: invalid inline literal syntax in addressing.rst
=clm #16369 Harden cluster metrics sigar tests
+per #18485 Add cluster sharding data removal utility
=per #18497 Handle large deleteMessages ranges in leveldb journal
=rem Improve the TimeoutReason error message
=clt #18343 Improve structure of DistPubSub docs
=per #18451 Recommend configuring stash capacity when persistence is used
!per #18463 Make Persistence Query API explorable
=clt #16948 Use min retries for singleton leaving scenario"
=str: GraphStage improvements
=doc #18104 fixes typo which made includecode2 not work in many places Note that some of the files don't exist, fixing this very soon.
=act #17640 Improving documentation for TailChoppingRoutingLogic, TailChoppingPool, and TailChoppingGroup
=doc 17371 avoid using awdl0 interface in tests
=per #16528 improved persistent actor stash test coverage
=htc #18489 allow `infinite` value in max-content-length
=doc Clarify sharding data compatibility
=per #18228 Convert Persistence schema evolution guide to Java
=clt #18459 Add ClusterClient test for quick restart
=ben interpreter benchmarks
=doc fix formatting typo
=sam update leveldb dependencies and doc links
=doc #18458 explain the reactive platform
=con bind the contrib tests to random open port
=doc Documentation that Inbox.receive now throws a checked exception in the migration guide
+str #18072 fix concat with empty source
=ben #15693 Sync benchmarks from release-2.3 branch
=act #17425 Document NonBlockingBoundedMailbox to be single-consumer
=per #18439 Preserve original manifest for IdentityEventAdapter
=clu #18245 Improve registerOnMemberRemoved example
=ben add flag to benchmark GraphStage.Identity
!per #18050 Make event adapter lookup more efficient
=act #18346 Document scheduler task throws
=cls #18370 Document supervision for Cluster Sharding
=rem #17556 Do not fail if identity or terminated arrives
=cls #18176 Harden ClusterShardingLeavingSpec
=doc #15001 doc logging unhandled messages at debug
=doc #15678 clarify log level limits events passed to actual logger
=mnt #17317 Harden reconnect when attaching to test conductor
+htp #16438 add Java-side rejection handling support
!htp use immutable collections in Rejections
=htc add missing Java model class for ContentTypeRange
=doc #18163 More visible docs about NAT support
Updated books page with the book by Vaughn Vernon
=doc #18209 Clarify remote message ordering
=tes #15399 Remove warning from TestKitBase
+str: Support for arbitrary, fusable graph processing stages (octopus)
=per #17139 Clarify AtLeastOnceDelivery persistent state
=pro #18408 Update to Scala 2.11.7
=per #18415 Don't start redelivery during recover
=tes #16074 remove return statements from scala sources
=doc #18226 document actor stopping
=pro #18404 Remove jmh from akka-protobuf
+str #17693 add Source.queue and Sink.queue
=pro workaround for scalaunidoc:doc issues
=clu #13584 mark as experimental and some doc clarificiations
+clu #13584 Accept joining to be WeaklyUp during network split
=per #18342 Improve docs for leveldb plugin config
=clu #18337 Disable down-removal-margin by default
=per #18394 persist EventAdapter manifest in default proto serializer
=rem #13783 Make ProtobufSerializer independent of protobuf version
=all #13783 replace protobuf dependency by embedded version
=clu #18345 Support local address in cluster commands
=clu #17253 Improve cluster startup thread usage
=str #17226 remove in-place DropWhile impl, it exists now
=ben add benchmark runner and move stream benchmarks to dev project
=rem #17555: Quarantine should clear pending connections (cherry picked from commit 010074d)
=str #17803: Document that DetachedStage might "unhold" a token
=str #18136: Document mapAsync invocation order
=str #18189: Explicitly disallow absorbTermination() from onDownstreamFinish()
#18151: Fail Futures returned by TCP when connection fails
=str #18377: Harden DroppyBroadcastSpec to not lose messages
=str #18091: Take should eagerly complete if arguments are zero or less
+str #17399 add boilerplate remover for fan-in junctions
+str #18099 FAILED: TcpSpec
=htp #18361 enable pending test in RouteDirectivesSpec
=act #18364 fix AbstractFSM#onTransition infinite recursion
=htp #18361 bump spray-json version and enable pending spec
!per #18360 Move Tagged to akka.persistence.journal
+str #18275 Java DSL: Flow.of(MyClass.class).via(otherFlow) throws ClassCastException
=htp #17068 decodeRequestWith(NoEncoding) should not touch request entity
=htp #17419 fix `Decoder.decode` to collect all output data
=per #18296 Use 0L or snapshot seqNr as asyncReadHighestSequenceNr param
=doc update stream-io doc page to the latest API
=cls #15646 Optimize the initial watch in shard coordinator
=clt #18314 Reduce message lost when region terminates
=cdd #18235 Harden ddata PerformanceSpec
=doc add more documentation for WebsocketDirectives and testing
+htp #17726 add support for WS subprotocols to WebsocketDirectives
+htk #17914 add nicer Websocket route testing support
+stk add missing `TestSubscriber.requestNext()` method
=clu #18156 Harden AdaptiveLoadBalancingRouterSpec
=cls #18287 failed: ClusterShardingSpec ddata mode
=htp fix test in FileAndResourceDirectivesSpec
=htp: remove chunking leftovers from FileAndResourceDirectivesSpec, cleanup
=doc fix typo: scaladoc syntax used instead of rst syntax
=doc #16122 improve color of strong elements inside note/warn
=doc #18306 resolve problem with navigating using right-hand TOC
=per #18303 avoid causing match error in AsyncWriteJournal
=doc code snippet include in persistence docs (scala) was broken
=rem remove unused code
=per #18288 Add docs of leveldb queries
=clu #13802 Introduce max-total-nr-of-instances for cluster aware routers
=clu #15412 Add paths(system) method to Group router
=cls #17846 Use provided scope for the distributed-data dependency
=act #17372 warn when non-zero push timeout detected
+per #18192 leveldb impl of EventsByTag query
=clt #17975 Add debug logging to ClusterClientReceptionist
=clt #18258 Create protobuf serialization for ClusterClient
=cls #17846 Add experimental note to ddata mode docs
=doc #18128 explain PoisonPill interaction with PA
=per #18273 Make leveldb numericId thread safe
=str #16967 add buffer to headSink and "take" state
=cls #17846 Use CRDTs instead of PersistentActor to remember the state of the ShardCoordinator #17871
+per #18191 Leveldb impl of AllPersistenceIds query
+per #18190 leveldb impl of EventsByPersistenceId query
=cls #17699 Add some DeadLetterSuppression
+act #16629 Possibility to receive messages that not reset receiveTimeout
+per #18137 EventAdapter => can be Read / Write or both
=rem,clu #17750 Decrease default expected-response-after
=clt #18232 Serializer for ClusterSingleton
=rem #18252 Change loglevel for failing resolveActorRef
+htc #18250 add HttpEntity#apply(contentType, source) for Chunked
=act #15040 ScatterGatherFirstCompleted reply when no routees
!clt #13523 Don't expose sender in cluster client replies
=act #18187 Make Props.producer private[akka]
=per #18219 Find plugin constructor automatically
=clm #17768 Silence stacktrace in cluster sample
=rem #15779 Deprecate InternetSeedGenerator
=str: various minor cleanups
=act #17898 Limit length of ByteString.toString
=cls #17908 Protobuf serializer for cluster sharding
=act #17781 Optimize the creation of router actor
=htp remove printEvent from test
=htp more newline test fixes
=htp #17984 reenable test in ContentNegotiationSpec also make it more agnostic to newline encodings
=pro Remove unneccessary log file
=str #18002 FlowTest#mustBeAbleToRecover timing issue
=pro bump sbt-jmh dependency to 0.2.3 (cached source gen)
+str: Sliding window operation
=pro Update url in publish samples script
=pro Remove 2.12.0-M2 from cross
=per #18123 Deprecate PersistentView
=con #17414 doc mix-in order for PersistentActor and ReceivePipeline
=pro Scala 2.12.0-M2
+per #17837 Detect (and repair) corrupt event streams
=per #18112 Use timestamp in deleteSnapshots
=per #18108 document that batch contains the same persistenceId events
=per,doc #18061 doc that Persistence won't work with TestActorRef
=act #18001 Suppress deadletters for ChannelReadable
+doc #17613 document persistence schema evolution
=per #15889 Add tck test for save snapshot with same seqNr
!per #17918 Make deleteMessages reply msgs public
=per #17959 Prevent PersistentFSM from saving state change event on stay
+per #15955 Add lower bounds to SnapshotSelectionCriteria
=per #17844 Clarify docs around journal dispatchers
=cls #16090 Add more logging for buffering and unavailable coordinator
=per #16090 Fail loudly if SharedLeveldbJournal is not initialized
!htk change return type of TestResponse.fail to Unit to avoid surprises for Java implementors
=htc move tests keys to src/test/resources (+ fix instructions)
+per #16541 add missing java samples for persistence query
+per #16541 allow using javadsl implemented journals as-if scaladsl
+per #16541 java docs for persistence query
+per #15816 Use CircuitBreaker
=per #17033 AtLeastOnceDelivery extends PersistentActor
=act #17842 Move BackoffSupervisorSpec to akka-actor-tests
+per #17894 Support Future(Nil) in asyncWriteMessages
!per #17862 Remove experimental from persistence
=htc #18044 fail HTTP/1.0 requests with 400 if no default-host-header is set
=act split FSM java api in a separate file.
=act use filterNot directly since SI-6208 fixed
+per #16541 initial version of the Persistence Query module
=clu #13226 Prune vector clocks from removed member
+per #16339 adds actorSelection support to AtLeastOnceDelivery TODO: need to add docs updates
=per #17896 Support stashing of replayed in PersistentView
+per #18076 makes AtomicWrite more user friendly
=htc #16583 update comment to point to new issue
+per #17668 allows not configuring a snapshot-store if it is never used
=rem #18158 Harden RemotingSpec
!per #18168 consistency improvements for PersistentFSM
=htp #18070 add comment to scaladoc of formField/parameter how to work around compilation error
=pro 18053 Disable diagram validation
=htc fix scaladoc of Http.bindAndHandle*
=per #18162 harden PersistentFSMActorSpec, less timing sensitive
=act 18160 harden SchedulerSpec slightly
=cdd #18146 Increase join timeout in ddata samples
+per #18032 Removed final from all persist & deferAsync methods
=htc restructuring of Websocket stack as stacked BidiFlows
=htc convert request rendering from a stage to a plain function
= str #18134 add require assert for WatermarkRequestStrategy
=htp: reenable tests
=atm remove atmos config
+htc #16834 apply uri-parsing-mode setting to header parsing as well
!htc #15687 enable https hostname verification on Java 7+
=ben http microbech
=str fix typo in error message
=htp: fix match headers by symbol name
+tes #13980 #17276 #18077 Added missing overloads on TestActorRef
=htc cosmetic fixes
=htc remove a layer of redundant wrapping
=str #18074 UnzipWith#sad case scenario timing issue
!htp simplify implicit resolution by getting rid of `RoutingSetup`
=htp a few small things that got lost in the #17988 merge
+htc #18027 add the missing javadsl.clientLayer and serverLayer
!htp,jso,xml #18064 remove implicit parameters of Unmarshaller instances
=str #18002 FlowTest#mustBeAbleToRecover timing issue
!htp #18017 don't use scala.Tuple2 in javadsl
!htp #18028 fix signature of Java-side handleWebsocketMessages directive
!str #18059 new `hostInfo` parameter to SslTls to transport `createSslEngine` arguments
=htc #16472 apply max-content-length setting to Chunked and CloseDelimited entities as well
=doc #17591 add note that long running requests may block connections
=doc #16812 link community extension to HTTP for other (JSON) marshallers
=doc reorder Scala Akka HTTP TOC
+doc #15497 document encoding response entities of HEAD requests
+doc #18012 add Java-side Server Websocket documentation
+doc #18012 port client-side https documentation to the java-side
=doc #18012 rate transformation doc improvements
Update stream-composition.rst
=doc fix typo in host-level http docs
+str,doc #18012 adds missing docs on client-side http in java
Update stream-composition.rst
=str #18034 remove println call from OutputStreamSubscriber
=docs #18012 complete remaining TODO sections in scala HTTP docs
=doc #18012 add placeholder documentation for #18027
=doc, htp minor fixes in docs and tests
=doc shuffle test files around to proper packages
+doc #18012 add handleWithAsync documentation + examples
+htk add RouteTest.testAppRoute
=doc #18012 rate transformation docs
+doc add Java testkit documentation and scaladoc
=doc correct http-testkit and http-tests module names
=doc rename ModelSpec => ModelTest to adapt to the convention
=doc remove link to self
Set tcpNoDelay on child channels
=str fix ambigous import of akka(-stream).testkit.AkkaSpec
=str,doc fixing typo in docs for mapAsync(Unordered) stages
=tes since 2.4.x requires Java8, we can drop LongAdder and Striped copies
=act #18007 remove reference to scala.concurrent.util.Unsafe
=str #16965 use akka-actor provided tuples for gen UnzipWith
!htp #17965 more consistent and 22-ified javadsl handleWith
=str,doc #17993 explain how to use pipeto and dispatcher in docs
+str #16965 add generalized UnzipWith
+str #16394 recover operation
=htc #17992 prevent single failing server connections from cancelling the binding
+doc add more detailed PathDirectives documentation
+doc fix link to RFC 7234
+doc PathDirectives: the missing Scaladoc parts
+doc add some java-side marshalling documentation
+htp #16439 allow creation of custom marshallers on the java side
+doc add overview documentation for java-side directives (+ some cleanup)
+doc java sample code for detached stage
=doc #17655 improvements in streams quickstart
=htp #17984 #17985 fix ContentNegotiationSpec
=htp #17985 fix content negotiation assuming charsetRanges being List in pattern match
=htp #17984 enable lot's of broken tests in ContentNegotiationSpec
=doc #17093 mention components that do not honour supervision attribute
+doc #17337: java doc samples
+htc #17982 introduce ModeledCompanion.parseFromValueString, MediaType.parse, and ContentType.parse
-str - Improvements and renames in internal streams classes
+doc #17337: Document composability and modularity
=doc document java-side handlers
=doc add explanation about Route => Flow conversion
+doc: Add documentation for DetachedStages
=doc add lots of documentation about java-side routing API, some detail and further examples still missing
=doc port over some http documentation from the scala side
+htp add RequestContext.materializer
+htp allow creation of custom Parameters, FormFields, PathMatchers, Unmarshallers, and RequestVals
=doc fix indentation
=doc fix broken links and chapter name
=act,per additional test for onTransition behaviour when initialize() called
created factory method
+str #17203: Add extra docs to prefixAndTail
!str #17923 remove javadsl's elements method, due to compiler bug
Other minor improvements
+doc #16765: Clarify asyncrhonous backpressure and thread-safety
+doc #17569: Mention no support of "backpressure" strategy on Source.actorRef
!str #17406: Remove references to removed allowCycles() in docs
!htc use correct akka.japi.function.Function interface on the Java side
!htc fix javadsl.model.HttpProtocols constants not being public static
+htc add a new javadsl.model.headers.Location.create aux constructor
+htc add javadsl.model.HttpEntity.toStrict
+htc add java-side constructors for ChunkStreamParts
=doc #17752 Compatibility with latest version of Sphinx
!per +act #17842 move BackoffSupervisor to akka.pattern
=str #16787 java cookbook
= htc #17943 more robust creation of function literals
=per #17820 avoid depending on ordering of redelivery (when slow)
=htp #17873 normalize whitespace for resource paths
=pro fixup in PR validation logging logic
+doc #17669 better section header and TOC navigation
=act: TCP actor should unwatch handler/commander after Close (cherry picked from commit 9578d46)
+doc #17014: Make sentence about deployment paths a note (cherry picked from commit 3c4dc45)
+doc #17669 better section header and TOC navigation
=doc #15569 document TestActorRef being bad for persistence
!per #17518 harmonize and document failure handling in persistence + added tests for all failure scenarios (callbacks)
!per #17518 harmonize and document failure handling in persistence + added tests for all failure scenarios (callbacks)
=str #17854: fullClose should not Abort
+doc #17597 improve BalancingPool docs, show configuring executor
=cdd #17778 Convert samples to java
=pro #17841 improve PR validator to diff the merge commit for change detection
=act #17738 RoundRobinRoutingLogic negative index fix after Long.MAX_VALUE
!cdd #17770 Use self recursive type in AbstractReplicatedData (Java API)
=per #15916 Read highestSeqNr first in replay
=clt #17735 Harden ClusterClientSpec
=str change var to val
+doc #17885 explain sender semantics in receiveRecover
=str #17853 chain terminationEmit elements to the currently emitting ones
=clt #17447 Split ClusterClient docs into java/scala
=clu #15404 Require at least one subscribe class
=htp #15588 use Source from akka.stream.io
=act #17822 harden ActorSystemSpec
=doc remove duplicated word typos
+doc #17877 document filtering for subclasses in eventStream
=act #17805 Don't change self on restart"
=pro #17855 dont publish benchmarks or tests, fix license in bench
=clu #16897 Correct wording for routees.paths
=act #17572 Supress deadLetters logging for Tcp.CloseCommand
=clu #16800 Remove NIY sections of Cluster Specification
=clu #17712 Guard against readView not created
=rem #17729 Don't use Implicits.global in remoting shutdown
=doc update references to deferAsync
+clu #17870 add Java api for joinSeedNodes
=str #16935 add junctions
=clt #17447 Split DistributedPubSub docs into java/scala
=clt #17447 Split Cluster Singleton docs into java/scala
=cls #17447 Split Cluster Sharding docs into java/scala
!clt, cls #17866 Use systemActorOf for exension actors
!per,doc,sam #17574 #17626 make recovery a method, move lambda samples + LambdaDoc samples now in the docs project = simplified internal state by removing recoveryPending = recovery is now triggered in around* method, so user is free to use   preStart freely - recovery works even if one forgets to call super on   preStart
=str - Various internal Akka Stream improvements
Introduces `fold` as a Flow transformation and generalizes Sink.fold to be Flow.fold + Sink.head
=cdd #17779 Create activator template for Distributed Data
fix Java8 DiningHakkers sample
=cdd #17796 Avoid duplicate change events
=str #16935 add graph and bidiflow builders to the spec
move StepWise into tests and deprecate
Revert "=pro remove cross scala 2.12.0-M1"
=pro remove cross scala 2.12.0-M1
=cdd #17851 Mark distributed data as experimental
=per #15640 support nested persist/persistAsync
=str #16935 revive dsl factories consistency spec
!per #17832 Remove SyncWriteJournal
=per #17598 Add writerUuid to PersistentRepr
=per Harden SnapshotStoreSpec
!per #17799 Remove support for non-permanent deletes
!per #15377 Mandate atomic writes for persistAll, and support rejections
!per #17755 removes the saved callback in plugins and adds receive
=str: Materializer should report being shut down on sys termination
+str #17751 configurable load attempts for local-snapshot-store
!per #17586 async snapshot delete and remove timestamp from deleteSnapshot()
+str #17819 Add missing Java API accessors for ActorPublisherMessage singletons
+pro #17611 add perl script to find javadoc errors
Removed problematic and wrong test
Added test for cancellation scenarios in Http client/server
=clu #16890 Add missing barrier in LeaderDowningNodeThatIsUnreachableSpec
Make broadcast cancellation configurable
=str Add missing abstract modifier to ActorPublisherMessage.Cancel
=htj #16436 add missing Java directives
!htj move RequestVal classes to javadsl.server.values
+htj #16436 add ExecutionDirectives.handleExceptions
=htj move directive tests into own package
Remove simple line parsing, exposing explicit delimiter stage instead
fixing post-rebase issues
Rename RunnableFlow to RunnableGraph
Rename FlowMaterializer to Materializer
Rename OperationAttributes to Attributes
+per #17579 #17617 Introduces EventAdapter + per plugin scoped adapters + could be swapped during runtime +per EventAdapter now has manifest and is configurable ai la serializers + json examples in docs + including "completely manual" example in case one wants to add   metadata TO the persisted event + better error reporting when misconfigured bindings + manifest is handled by in memory plugin - did not check if it works with LevelDB plugin yet > TODO: json example uses Gson, as that's simplest to do, can we use +per allows 1:n adapters, multiple adapters can be bound to 1 class
+per #17579 #17617 Introduces EventAdapter + per plugin scoped adapters + could be swapped during runtime +per EventAdapter now has manifest and is configurable ai la serializers + json examples in docs + including "completely manual" example in case one wants to add   metadata TO the persisted event + better error reporting when misconfigured bindings + manifest is handled by in memory plugin - did not check if it works with LevelDB plugin yet > TODO: json example uses Gson, as that's simplest to do, can we use +per allows 1:n adapters, multiple adapters can be bound to 1 class
add extra test using broken Props in actorPublisher
=str #16935 revivce dsl consistency spec
+act #17719 introduce Tuple3-22 classes for java api
make racy test accept 500 or exception
fix actorsystem shutdown in tests
=str #17786: Cancelling bind stream should not cancel children
=str #16973: Stream TCP actor should watch IO actor and handle termination
+doc add server-side WebSocket documentation
!htc remove `Streamed` subclasses to signify that streamed is the default and add convenience Message constructors
Update CONTRIBUTING.md
point out akka/dev gitter channel in CONTRIBUTING
=str #17172 make assertions on sync zip more robust
=doc #17291 grammar fixes and Await.result instead of Await.ready
=cls #17261 Use persistent shard only when rememberEntities=true
=cls Split sharding classes into separate files
+str #17765: Add shutdown() to materializer, also fix interpreter interruption errors
=doc add client- and server-side HTTPS section for scala
+str #16889: Configurable TCP close modes
fix FlowStageSpec (and some boyscouting)
=str fix sub-upstream cancellation in concatAll
Clarify code comment for InPort/OutPort
=doc fix broken links in scala-side HTTP docs
=htc small improvement in test (as per review from @jrudolph)
=docs #17600 fix incorrect http client example
=doc #17291 java docs code
=htj #17181 fix objectMapper
=doc #17291 more stream test docs
=str add VirtualProcessor
=cdd #16799 Add another test for changed events
!htc #17656 do not render host header default port values
=htp add more explicit type annotations to implicit definitions
+cdd #16799 Add ORMultiMap data type
=doc complete alphabetical directive listing for scaladsl, improve scaladocs
+cdd #16799 Add Distributed Data module
=htc #17664 create convenience shortcuts in FormData and FormData.BodyPart to simplify client-side file uploads
=htc #17664 create Multipart.toEntity to simplify creation of multipart/formdata requests
=clu Improve cluster downing
=per #16542 Don't store sender in PersistentRepr
!htp remove implicit ExecutionContext parameter where possible
=htp add more tests for PathDirectives and fix test descriptions
+htc add missing constructor for javadsl.model.headers.RawHeader
!clt #15410 Change path in ClusterSingletonProxy.props
!clt #15110 Use buffer instead of stash in cluster client
!clt #15110 Use buffer instead of stash in singleton proxy
=act #17690 add additional validation for name param in RootActorPath
+htp extract multiple occurrences in the parameters/formFields directives by suffixing with .*
=con #17501 Increase timeouts in ReliableProxySpec
=str #17759: Handle when request() throws in ActorInterpreter
!per Make persistent failures fatal
=act #17010 Drain log messages on system shutdown
=htc #17187 fix illegal request entities not producing the right error response
+htc some convenience methods for javadsl.model.HttpCookie
+str #17226 add dropWhile and takeWhile
=htc #17709 fix incorrect default port in `Http.cachedHostConnectionPoolTls`
=htp #17051 fix multipart unmarshaller not surfacing header parsing errors on outer (part) stream
!per #15644 Rename persist(seq) to persistAll
=htp #17051 fix BodyPartParser failing to detect initial boundary if it is chunked
=htp move tests for MultipartUnmarshallers to dedicated file
!cls #16422 Rename shardResolver and idExtractor
=rem #17554 Improve flow control of system message delivery
=str code comment the Inlet/InPort dichotomy
=htc #17551 fix leak because of never subscribed Websocket handler if connection is closed by peer
+str #17702: Add Keep.none
=htc #17403 fix connection pool reusing existing connections too early
=str #16923: Inject identity between SubscriberSource and PublisherSink
=rem #17583 Increase default value of system-message-buffer-size
=str - Introduces a TCK-verified SingleElementPublisher to optimize Source.single and things depending on it
+htc #17680 add `HttpEntity.contentLengthOption`
!cls #16422 Rename Entry to Entity in sharding
!cls java8 Optional
=cls #15614 Change persistenceId for sharding coordinator
=cls #15619 Use event counting instead of time based snapshot in sharding
+cls #15330 Add GetCurrentRegions, for testing
=cls #15330 Enable configuration of coordinator singleton
!cls #17158 Add configuration of sharding journal
!clt #17364 Make ShardRegion.props internal
Changed version for com.typesafe.config in OSGi manifest (was 1.2.x) to same as in Dependencies (1.3.0)
+str #17461 add a parallel version of foreach (+1 squashed commit) Squashed commits: [7042ef9] +str #17461 add a parallel version of foreach (+1 squashed commit) Squashed commits: [a310520] +str #17461 add a parallel version of foreach
!htj #17687 remove superfluous type parameter and implicit of `sprayJsValueMarshaller`
=str fix comment and log typos
=htc #17663 implement HttpEntity.apply(File)
=htc compact outgoing ByteStrings in parsers to avoid referencing more memory than necessary
=htc #17683 drop already consumed input in `continue`
+htp #16810 use flushing deflate call on Java > 6
=str - fixing TODO about scaladsl & javadsl Source/Sink/Flow/BidiFlow.wrap not having to needlessly re-wrap
=str - Deleted SynchronousIterablePublisher as it is replaced by a fast SingleElementPublisher + mapConcat
=str - Introduces a TCK-verified SingleElementPublisher to optimize Source.single and things depending on it
Adding OSGi metadata to contrib module.
+str - Deletes FuturePublisher and replaces it with Source.single(f).mapAsync(1)(identity)
+str - #17662 - Changes Sink.ignore to return a Future[Unit]
+htc #17609 overloads to handle websocket requests with sink and source, removed materializer param
=htp #17067 port XXE fixes and tests from spray/spray#1024
=htp add more explicit implicit definition result types
=htc #16839 don't accept headers with trailing garbage
!htc #16818 also report port in Remote-Address header if available
!htc #16641 support remote-address-header setting
=htc #17404 fix generation of IPv6 Host headers
=htp #17657 fix supposedly compatible getHostString failing at runtime on Java 6
=htc use akka-http UA instead of spray in tests
Adding AbstractFSMWithStash Java API
=per #17630 FAILED: PersistenceFSMActorSpec
=con #13909 Don't use remote watch in ClusterClient
+cls #16050 Support graceful shutdown of ShardRegion
+str #17310: Basic framing support
=doc #17358 remove duplicates
making http pass with serialization checks
=str #16997 added variance annotation to UniformFanInShape
!str #17393: Make stream-tests pass with serialize-messages=on
=str #17167 drop new overflow strategy
+act #17576 Support serializer with string manifest
=doc Changed style for footnote backreference
+per #15279 FSM for PersistentActor
add test
=act #17606 Revert abstract class change of ActorPath
=rem #17567 Adjust parameters for DeadlineFailureDetector
=pro update mima plugin to 0.1.7
fix typo in cluster-usage.rst
+str #16885 add splitAfter Implementation is shared with splitWhen - see Split / SplitWhere Allows for easy addition of splitWhen(x => Decision) if we'd like to Resolves #16885
+str #17298 include stream supervisor in log() source
=pro run multi-jvm tests when validating pr
!htc #16826 introduce HttpCookiePair for usage in `Cookie`-header
=act #17415 fix concurrency bug in CircuitBreaker
=doc fix examples of Http extension
=per #16802 no need to verify serialization on journal protocol
!per #16797 rename defer to deferAsync, remove Seq version
updated scalariform link
=sam #17537 relax timing in multi node spec
clu #17565 Invoke OnMemberRemoved callback when  cluster.shutdown
=doc: Update withRangeSupport.rst
=doc Correct typos in "Streaming File IO" section
=htp add explicit result types to formField/parameter implicits
!htc #17512 `max-connections` setting to limit connections accepted with bindAndHandle concurrently
+str #17361: Unified http java/scala projects except marshallers
!htc move backlog and socket options to configuration in an effort to decrease API surface
documentation update for TestKit class
add crosscompilation for 2.12.0-M1
=sam method name is "onReceive", not "receive"
=doc another batch of documentation (example) fixes
=str: Don't use "remaining", check proper localized TCP messages
=pro update sbt-jmh and include for compilation in root
+str #17491: Bump Akka version and remove Functions template
+str #17464: mapConcat accepts immutable.Iterable
=doc fix mentions of spray and link to magnet pattern
!str #17465: Don't create expensive exceptions for abrupt termination
=act #17530 fix BatchingExecutor vs. CallingThreadDispatcher
=doc fixed example compile errors either by fixing files or commenting them for now
=doc Significantly extend HTTP documentation with new content and ports from spray docs
=pro Use provided dependency from persistence in bench-jmh
=htp #16808 fix unnecessary reverse DNS lookups for >Java1.7
=pro update sbt-unidoc to 0.3.3
=htc #17494 fix interpreter leak due to unsubscribed websocket handler hole
do not generate javadoc for tests
=pro sbt-pgp 1.0.0
=pro check jdk8 in release script
!con #15331 Support async allocateShard and rebalance
=str IO stream sink/source materialized value must be boxed explicitly
!act #13919 Make ActorRef.isTerminated internal
!act #13919 Make actorFor internal
=act #17071 Update typesafe-config to 1.3.0
!cto #17454 Introduce ClusterClientSettings and ClusterReceptionistSettings
=rem #17084 Skip test if 127.0.1.1 is not available
!cto #17454 Introduce DistributedPubSubSettings
!cto #17454 Introduce ClusterSingletonManagerSettings and ClusterSingletonProxySettings
=pro #16695 Update dependencies
= #17380 genjavadoc 0.9
= #17380 fix doc comments for java8 doclint
=rem #17440 Harden RemoteReDeploymentSpec
=con Harden ClusterSingletonManagerLeaveSpec
!pro #17380 Build with Java 8
!htp Change marshalling and unmarshalling infrastructure to use ExecutionContext from RequestContext
cam #16406 Harden camel.ActorProducerTest
=htc s/timely request/timely response/
+act #17482 fix typo in error message for parsing task-peeking-mode
=per #17150 Harden AtLeastOnceDeliverySpec
!htc HTTPS-enable server- and client-side APIs
=rem improve remote watching mechanism
=typ #17460 fix message order in typed.ActorContextSpec
=typ #17445 Reduce number of iterations in typed.PerformanceSpec
=pro #16736 Add bin compat problem filter for internal change
=clu #17362 Make cluster.joinSeedNodes equivalent to conf seed-nodes
Removes duplicated code snippet and paragraph
=pro The `test` task is now NOT overwritten by PR validator
+str #17418: Improved error handling for termination cases in Interpreter
=pro explicit jcenter repo
=pro Check BC against 2.3.11
=act #16327 fix BatchingExecutor.blockOn
=doc #17438 Refine documentation
= #17342 Make 2.4 binary compatible with 2.3
=act #17239 Add akka.japi.function with variance
=act - Reinstates the Mailbox optimization reusing the FJT instance but doesn't use FJT.fork() due to unfairness
!cls #13711 Move cluster sharding
!clt #13711 Move cluster tools from contrib
=pro change resolver reference to sbt built-in
=doc add props static method to IODocText
=pro bintray jcentral resolver for jenkins-ci deps
=pro #17397 PR validation must build all projects if project/** was modified
=act - Reinstates the Mailbox optimization reusing the FJT instance but doesn't use FJT.fork() due to unfairness
preStart is now more type-safe, allows AsyncStage to provide it's Async context
+str #17290 Adds preStart / postStop to AbstractStage + AsyncStage now uses preStart + Log stage now uses preStart (better perf), can be optimised more
=act #17441 Harden BalancingSpec
+pro Update ScalaTest in order to use tag ignoring in sbt
=pro #17397 improve PR validation speed tremendously (skipping things) + enable parallel execution + exclude perf tests (TODO mark more as such) + uses sbt-dependency-graph plugin + implement dependency tracking for testing of only these + project which could have been affected by a given PR
+act #17274 make ForkJoinPool asyncMode configurable
=doc #17320 Remove typesafe repo from docs
+clu #16736 add registerOnMemberRemoved to get notified when current member removed from the cluster
=act #17341: Revert starvation prone optimization 4e0bd6d
!str #17355: Don't use case classes for settings
=str #17377: Turn off debug validation
=str #17407: MapAsync should pull when failed futures free up space
Revert "=act #17216 fix DirectByteBufferPoll locking"
=act #17002 Harden ActorSystemSpec
=act #13935 Throw same exception when extension init fails
!per #17249 Avoid init problems of persistence tck
!pro #17381 Remove cross build for Scala 2.10
=htc #17348 don't render extra LastChunk at the and of Chunked entity
=str #17308: Don't do blocking prefetch before subscription in fileSource
!str #17123: Make materialized value handling method names consistent
=rem #17365 Add missing barrier in RemoteGatePiercingSpec
Utf8Decoder license clarified
Revert "= #17342 Make 2.4 binary compatible with 2.3"
= #17342 Make 2.4 binary compatible with 2.3
=pro #17334 mark scala-reflect and quasiquotes as provided dependencies
=htc #17322 fix race condition between websocket http response and first websocket message
=htc #16055 refactoring: make headAndTail a simple flow
!str #17327 use curried methods for mapAsync
=htc extract HttpServerTestSetupBase from HttpServerSpec
=str #17323 Source.actorRef now emits buffered els before completion
=act #17316 fix wrong setting in pinned-disp reference.conf
=doc fix typo in stream io
+htc client-side of http-core Java API
!htc move ServerSettings and ParserSettings up a package to make them accessible both from the java and scala side
=doc #17279 upgrade to new http package layout
!ht* #17279 java side: refactor package structure to new layout
!ht* #17279 scala side: refactor package structure to new layout
!htc #17279 refactor package structure to new layout
=ht* #17279 rename akka-http-* modules where agreed
=str minor doc syntax correction
+doc documents how to use stream.io.Implicits
+str #17162 add log() stage for simple logging in Flows + with javadsl + allows configuring log levels + allows turning off logging of certain actions completely + cookbook adjusted to show this instead of manual PushStage - PENDING: preStart based impl will be faster, coming soon
+htc #16887 the Java side of the Websocket server-side API
move boilerplate FunctionN into akka.japi.function package
!str #17031 Rename StreamTcp to Tcp
!str #17031 Use host and port instead of InetSocketAddress
+str #17254: Accept graphs instead of Flow/Source/Sink etc.
=str #17176 do not check for arbitrary conditions that depends on thread scheduling
=str more robust dispatcher checking in FileSource specs
=str fix compilation issue after #17238 merge
+doc, str #16716: Table summarizing built-in processing stages
=str #17089 stream testkit
!str #17277 remove akka.stream.javadsl.japi.WithVariance
=htc #16887 properly report truncated WS messages to user handler
=htc #17129 improve error message that serverLayer cannot be reused
=htc #16887 remove duplication in TestServer
+htc resurrect low-level server-side Java API and JavaTestServer
refactor SslTlsActor and stop it reliably
+doc, str #16714: Add documentation explaining parallelism and pipelining
=htc #16507 log materialization errors in `bindAndHandle`
=str fix typo in internal type (`RejectAdditionalSubscribers`)
+str #17284 allows deciding to stop after signaling terminal or not
+str #15588 Additional way of using IO sink/source > Similarily to akka.stream.extra._
=str #16986 Handle early cancelation issue
=str #15191 Verify that stage actors are stopped
+str #15588,#17229 Java 6 Synchronous File Sink / Source   These are synchronous implementations, because we need to be Java 6   compatible while developing on 2.3.x. However asynchronous   implementations using AsynchronousFileChannel will come soon for JDK7   users.
=str 16940: Implement shallow copy of layouts
=htc #16887 speed up some websocket tests
!htc #17278 replace remaining usages of scaladsl.Source in akka.http.model.japi
+str #15833 TLS with session renegotiation
!htc #15681, #15906, #16852, #17064 add client-side connection pooling with retries
+htc, htp: small improvement to `HttpMessage::withDefaultHeaders`
=htc smaller improvements to util helpers
=str smaller improvements to `ActorSubscriber`
=str widen `Flow::andThenMat` visibility from `private[stream]` to `private[akka]`
+htc #17064 add `Uri::toHttpRequestTargetOriginForm` and double-slash path tests
=str #16699 fix some FIXMEs
= #17240 Use some more DeadLetterSuppression
=rem #17213: Remove wrong assertion from EndpointManager
+act #17257 add Actor.ignoringBehavior
+htc #16887 add support for WS application-level subprotocol negotiation
+htp #16887 add simple websocket support directive to akka-http
=htc #16887 integrate websocket pipeline into http server
=act #17216 fix DirectByteBufferPoll locking
=str #17200 Stop shard region when MemberRemoved
=htc #16887 implement high-level server-side Websocket API
=htc make headAndTail work if prefixAndTail returns an empty prefix
=htc #16887 websocket framing implementation
=htc #16887 a Utf8 encoder and decoder
+htc #16887 add server-side websocket API and add example to TestServer
+str #17145 add new Flow.wrap overload to create flow from sink and source
=htc #17129 Preliminary fix until this is fixed with the new features from #16168
=act #17255 Temporary disable windows-connection-abort-workaround
+htc introduce big endian read methods to ByteReader
+htc #16887 add Upgrade header parsing/rendering
+htc #16887 implement Websocket header parsing/rendering
=str Use some more DeadLetterSuppression
+act #13516 add getByteString and getBytes method with a given length
=htc #16795 add missing test
=str 15707 Define default names for sources and sinks
=htc #17227 always render `HttpChallenge` realm in double-quotes
=act #17168 avoid copy in Props for the same mailbox or dispatcher
!str #17189 Add withAttributes and named to Graph
#15898 change ActorPath to abstract class to make the methods in the companion usable in java
switch README from textile to markdown and freshen it up
!str #16951 Unify scaladsl and javadsl OperationAttributes
=str #16608 adds scaladoc about null in col returned from mapConcat
=str #16608 adds section in readme explaining null is illegal
=act #17206 properly document semantics of context.stop(self)
=con #17169 Add missing barrier in ReliableProxySpec
=rem #16346 Close connection after refused connection attempt
+con #16141 Add GetTopics message to DistributedPubSubMediator providing list of topics
=str #17173 Clarify CompletionHandling scaladoc
=con #13869 Speedup startup of Cluster singleton
=str #17191 mapAsyncUnordered shall terminate after resume
=str #16957 Refactor actor creation api for sinks and sources
=str #17157 indicate right input in ReadPreferred
=str minor typo fixes and scala version bump
=str #16975 Use akka.io management-dispatcher for StreamTcp manager and listener
=doc Clarify cluster singleton role
=act #15914 Clarify and correct max-received-message-size
!str #16937 Remove section, in favor of via and separate flow
+str #17039 add `concatMat` to `Flow` and `Source`
=doc #17039 change default materialization placeholder type from `Unit` to `Any`
!htc #17039, #16933 change default materialization placeholder type from `Unit` to `Any`
!str #17039 change default materialization placeholder type from `Unit` to `Any`
=htc upgrade HTTP layer API to new BidiFlow design
!htc Some cleanup in internal and external naming, improvements to scaladoc
+str Add `FanInShape1N`
+added comments to all templates
=htp #17051 fix BodyPartParser not handling streaming entities correctly
!str #16520 Add ActorRefSource
!str #16521 Add ActorRefSink
!str #17090 add AsyncStage
!str #16993 Separate scaladsl/javadsl for FlattenStategy
=str #16913 enable and fix broken StreamTcpDocSpec
=act #17140 FSM: forMax(Inf) can now override stateTimeout
=htc #16807 introduce `akka.http.parsing.error-logging-verbosity` setting
!htc #16803 introduce proper model for type of media-type encoding specs
=rem #17151 Add missing barrier in RemoteNodeRestartGate
=doc #16670 version in docs should be auto-replaced
=tes #17080 Move TestUtils to testkit.SocketUtil
=act #15170 bytestring serialization
+str #17108 adds arity-numbers to javadsl for nicer compile errors Resolves #17108
!str #16168: Expose materialized value in the graph as a "source"
+act #17012 improve err msg on invalid actor name/path Resolves #17012
=typ #17137 increase await timeout, allow using dilation
#17135 replace substring with take to avoid Exception in non English evn
Expand the documentation of Scheduler
add Akka Typed to build
=con #15817 add missing cancel of scheduled sharding task
=per #16737 avoid NPE when snapshot dir is removed
=htc #17110 disallow zero body parts in MIME content
=ker #15677 Deprecate Microkernel
=str #17109 update reactive streams to RC4
=htp #15792 make `entityAs` directive turn `IllegalArgumentException` into `ValidationRejection`
=htc #16805 add tests covering chunked/close-delimited response to HEAD request
=act #17087 PromiseActorRef (ask pattern) must send right Terminated()
=htc #16804 make `akka.http.model.RangeUnit.Bytes` a `case object`
=htc #16806 add test demonstrating custom CT and CL in response to non-transparent HEAD request
=htc #16809 add testing proving absence of issue spray/spray#1006
=htc #16823 make `Access-Control-Allow-Origin` with multiple origins harder to access
=htc #17066 port new test from spray
=htp #17082 fix response message generated for `MethodRejection`
=doc fix typo: form -> from Ports #17074 to the right branch
-#15825 add isEmpty and nonEmpty to ByteStringBuilder
=doc #16989 update http bind documentation
=sam #16905 multiple fixes for java-lambda doc samples
=rem #16224: Not terminate connections if quarantine id do not match
+tes #17023 Adding ForwardActor among test-kit actors
=con #16946 Make ReliableProxyMultiJvmSpec not reuse actor name
fixed ClusterShardingSpec
direct ByteBuffer performance note
optimized tmp buffer for IndexedSeq
!per #15884 Make LevelDB an optional dependency
=str #16938 Enable more tests in GraphConcatSpec
!str #16416,#16994 BidiFlow DSL and Flow.join Mat
=doc fix PoisonPill typos
Spelling mistakes and clarifications.
+htp #16816 Add variants of `conditional` directive taking only ETag or only Last-Modified value
=act #17040 Let RouterActor remove ActorRefRoutee on termination
!htc #16972 harmonize naming - bindAndHandle...
+htc #16972 makes bindAndStartHandlingWith actually run()
=str #17008 Close the TcpConnectionStream on failure.
Changes all occurances of Typesafe copyright to extend to 2015
Changes all occurances of Typesafe copyright to extend to 2015
=tes Use ConversionCheckedTripleEquals
=doc add clarification on ActorSelection vs. ActorRef
!str #16983 add outputBurstLimit
=str #16309 DRY FlowIteratorSpec, FlowIterableSpec, SynchronousIterableSpec
=htc Enable rendering of HTTP/1.0 responses, increase test coverage for connection closing logic
Doc: Simplyfies decider in FlowErrorDocSpec.scala
=act #16620 Log cause of bind and connect failures
!str #16992 Rework Source and Sink name parameter
+all #16632 Make serialization identifiers configurable in reference.conf
=str #16866 fail fold and foreach future when function throws
=str #16751 Update to reactive-streams 1.0-RC3
=str correct InterpreterSupervisionSpec
!htc #16988 hide model.parser.HeaderParser from public API, add proper `HeaderParser.parse`
=htc add missing `private` markers to internal parser sub-traits
=htc small internal member naming improvement
=act #16536 actor selection now completes ask
=htp #16934 s/ActorFlowMaterializer/FlowMaterializer where possible, smaller cleanups
=htc #16934 s/ActorFlowMaterializer/FlowMaterializer where possible, smaller cleanups
=htc,htp Small fix in scaladoc, add FIXME reminder
+act adds missing java api for byte string
Graph#Shape needs uncheckedVariance in 2.11
fix source link in Java stream docs
=str #16959: MapAsync and MapAsyncUnordered should not ignore cancel
+doc: Added materialized value handling section for Java
mention BoxedUnit in the Java QuickStart
rework java/stream-graph.rst
tests compile apart from flexi things
!htp #16833 Add minimum number of iterations to `PathMatcher::repeat` modifier
!htp Refactor ExceptionHandler infrastructure for symmetry with RejectionHandler
!htp #16835 Refactor RejectionHandler infrastructure for cleanliness and independence from rejection ordering
add Java graph DSL
many compile fixes and FlowMaterializer
increase timeouts in SourceSpec
update graph docs
+doc: Updating basics, quickstart and some of graph docs
fix two wrong/flaky tests
overhaul stream-design-rst after recent changes
small fixes to stream supervision
fix a good swath of FIXMEs
!str #16902: Unify stream internal representation
=htc Rework tests sensitive to defined header model (class names and count), introduce HttpHeaderParserTestBed
+str #15750 Prototype of stream supervision
+hco #16822 add model for `Referer` header
=doc #16874 clean up `Relationship between deliver and confirmDelivery` section
+per #15587 Make it possible to use multiple persistence plugins
!htp #16593 negotiate content encoding
=htp make coding specs more robust On my machine I got: GzipSpec: "invalid code lengths set" instead of  "incomplete dynamic bit length tree" DeflateSpec: "unknown compression method" instead of "incorrect header check"
+htp improve naming consistency + cleanup
Update building-akka.rst
=rem #16505: Do not publish AddressTerminated
add akka.util.TypedMultiMap
=clu #16726 Down member automatically when restarted
=hco #16865 response parser needs to continue with startNewMessage if method is still missing
=pro #16791 Calculate OSGi scala.* version import range correctly
=act #16745 Improve error logging in akka.io.SelectionHandler
=act #16757 Remove handling of default messages on guardians
fix warnings in contrib, docs, osgi, persistence and slf4j
=str #16683 fixes NPE in stateful stage example
=str #16652 java documentation for integrating streams
=per #15942 Support resume after recovery failure
=per #15943 Avoid initite restart loop when recovery fails
=per #16187 PersistenceFailure after persistAsync failure
=clu #13875 Exclude unreachability observations from downed
=str #16652 Add java docs for 'Working with streaming IO'
=str #16652 Add java docs for 'Basics and working with Flows'
=str #16652 Add java docs for 'Buffers and rate'
=str #16652 Add java docs for 'Custom stream processing'
=str #16331 Use ReactiveStreamsCompliance utility everywhere
!str #16565 Make Flexi* limitations explicit
=str #15859 Eliminate usage of Stash mailbox
=sam #16764 Incomplete sample project breaks samples build and IDEA import
=doc #16672 explain relationship between AS and RS
fix warnings in remote and cluster
fix warnings in akka-actor-tests
=clu #15439 Harden SurviveNetworkInstabilitySpec
fix warnings in actor and testkit
!str #16448 Change error to failure
=doc #16740 add missing \n to examples, test if really works
+str #16547 "lazyEmpty" source, which allows external triggering of completion
=str #16687 rename internal GraphFlow to GraphBackedFlow Same rename made for GraphSource and GraphSink for consistency
add akka-typed project with generic ActorRef
=clu #16667 fix Inconsistent message order in ClusterMessageSerializer & MessageSerializer
!str #6577 Align API of Flexi with Stage
Introduce stable priority mailboxes.
=act #16653 swallow exception from setTcpNoDelay
fix up java8 ActorDocTest compilation
!str #15851 Rename FlowMaterializer and settings
=act #15865 add LogEvent.getMDC Java API
+ akka-persistence: add internal message protocol traits 2 more snapshot messages used for internal plugin acknowledgement in https://github.com/akka/akka/blob/master/akka-persistence/src/main/scala/akka/persistence/snapshot/SnapshotStore.scala * see #16612 * see #16633
fix up wrong includecode comments in FaultHandlingDocSpec
+str #15349 Add debug logging setting
!str #16563 terminal operations start with run*; runFold runForeach
!str #16492 Remove closure in TickSource to make it shareable
=str #16652 Convert 'Working with Graphs' to java
=str #16231: Protect jumpback table from corruption
=doc #16614 Include best-practice tip on messages in companion object in docs
=str #16602 Suppress dead letters
=str #15349 Sanitize error logging
=str #16577 emit user exception from Flexi* completion handler
=pro #16704 add validatePullRequest task to samples
=doc #16706 fixed wrong link and minor style fixes
=sam #16703 temp remove osgiDiningHakkersSampleMavenTest from samples aggregate
=sam #16684 Change to scala 2.11.5 in samples
=str #16609 add missing handling of FlowGraphs when connecting
=str #16658 tickSource in JavaDSL must expose keyed source / cancellable
=doc s/will always by/will always be/
+ akka-cluster-metrics: new akka module * new akka module split from akka-cluster * provide sigar provisioning * fix ewma usage * resolve #16121 * see #16354
=pro unset dry_run flag
=clu #16624 Expand the monitored nodes when unreachable
=doc s/apropriate/appropriate/
=per #16659 fix deserialization of SnapshotHeader
-zer #15864 remove zeromq module
str #16652 Convert quickstart to java
=str #16652 Add structure for stream java docs and java8 doc sample
=htc #16566 fix company name typo in copyright comment
+slf #16630 Add the actor system name to the Slf4jLogger context
Super minor change to scala fsm example: added named boolean arg
The size of ActorCell is not 64bytes
+ akka-persistence: add internal message protocol traits * resolve #16612
=pro update genjavadoc version to enable crosspublishing
=doc fixes for Akka Streams "Basics and working with Flows"
=act Constant value made a val to avoid unnecessary allocation Changed the parameter type of targetName in PromiseActorRef#apply and changed so that toString of targetName is called once the value is actually needed, eg in the case of timeout.
=doc fixes for Akka Streams "Working with Graphs"
=doc typo fixes for Akka Streams documentation
=str #16385 update reactive streams to RC1, enable fixed TCK tests
+htc #16030 Age and Expires headers
=doc fixes for Akka Streams quick start guide
+doc #16549 StreamTCP docs
=doc #16459 change confusing FaultHandlingDocSpec in Fault Tolerance Document.
=rem #16428 optimize protobuf serializer
added custom linear stages section
Added explicit buffers section
+doc: Added section about buffering
+doc: Changes to basics+flows part
+str #16464 generalised zipWith for up to 22 params - removing deprecarted marker from japi, people will have to use it   currently
+htp #16516 allow setting maximum ByteString chunk size for decoding operations
+htp #16516 rewrite Deflate/GzipDecompressor as StatefulStage to defuse zip bomb
+hco another variant of StreamUtils.runStrict that takes an Iterator of inputs
tidy up once more
!htc #16494 provide content negotiation fallback to exception handlers
=htc simplify content negotiation
=htc optimize copy shortcuts
+htp #16543 add directives to add or remove trailing slash
some more doc fixes
+doc: Changes to basics+flows part
fix some small things in HTTP
fix some sphinx errors
!doc: Finish restructuring
!htp add some FIXMEs and small fixes
=htp move docs and create TOC structure
!doc: Restructure document pages
=act, ker, rem, doc #16330 deprecate akka.util.Crypt
=str #16549 doc: ActorPublisher
+doc explain backpressure / reactive streams a bit
+doc flow / flowgraph docs, moved quickstart + moved quickstart + more info about simple materialization
=htc add one more test checking against #16574
=htc make server accept early incoming request stream close
+doc: Document graph cycles
=doc a first set of new and imported documentation for akka-http
=doc move http documentation around and setup high-level documentation structure
=htc #16574 fix large requests not being consumable on the server-side
=htc small improvement in BodyPartParser
=str #16549 write intro to docs
=str #16549 doc: Integration with Reactive Streams
=str #16549 doc: Integration with External Services
fixed merge conflicts, fixed reducebykey
+doc #15239: Stream cookbook
=htc refactor HttpClient stream setup, closes #16510
=htc small refactoring in OneHundredContinue support
!htc clean up and unify HTTP exception model
=str apply temporary work-around for #16571
=htc small improvements in `DateTime`
=htp mark Http.ServerBinding `sealed`
!str #16400 Add Java API for StreamTcp
!str #16484 #16392 Remove String identifier of junctions
+doc akka streams docs, flowGraphs
+doc quickstart docs for akka streams, initial version
=str #16479 Make constructor of FreeDirective internal
!str #16557 Rename Source.singleton to Source.single
!str #16455 Remove unused fanout settings
+doc apply new docs design to akka-docs-dev
=htc #16488 add missing assertions in tests
!str #15964 Remove dependency to persistence
=doc fix typo
per #15423 Remove deprecated features from akka-persistence
=htc small cleanup
=htc #16500 parse Sunday dates and dates with long weekday names correctly
=htc #16501 render custom Date header
=str #16508 in StatefulStage.emit don't lose state change for single-element iterator
=str - 16467 - Updates Akka Streams to Reactive Streams 1.0.0.M3
=htc #16482 preserve header order during parse
!htc replace Parameter interface with ju.Map.Entry in japi.Uri
!htc use japi.Option
=htc use forall
=str - Addresses so that the optimizer for collect does not close over the previous AstNodes
=doc fix typo
+tes #16431 support for TestProbe with user-defined name
+str - adds ZipWith and makes Zip use that to create tuples/pairs
=pro #16418 add settings from AutoPlugins to transformed samples
=pro make samples optional
=doc clarify that onError is for failures (d’oh)
=str Ensure the visibility of the DelayedInitProcessor implementation var
=str #16259 Added more red-face testing of the stream Java DSL
=str #16380 Cleaned up Source/Sink/Key overlap
=doc add section on three-phased stream materialization
=str #15152 operation transformations
=doc add section on Error vs. Failure for streams
+act #15163 allows to suppress certain messages from being dead-letter-ed
+str dsl consistency spec also investigates return types now
+htp add ToNameReceptacleEnhancements companion object
+htp smaller improvements in FileAndResourceDirectives
!htc remove unused ExecutionContext implicit on HttpEntity.toStrict
+htp add shortcuts for quick encoding / decoding
+htc add missing HttpEncodings constants and related helpers
!htc small fixes to the japi.Authorization/HttpCredentials model
+htc add japi.MediaType.toContentType helper
+htc add starting points for requests with a certain HTTP method
!htp remove `ScalaRoutingDSL`
=str: #15802: TickSource cancellable
+htc add `startHandlingWith*` helper methods to `Http.ServerBinding` and `Http.IncomingConnection`
=str apply review feedback
=pro fix test phrase
=pro #16371 enable cross builds
=pro upgrade to latest sbt and add first auto plugins
+per #16348 Limit the number of messages redelivered at each interval
uncommons 1.2.2 depends on jfreechart 1.0.8 not present on maven central; see: https://github.com/dwdyer/uncommons-maths/issues/14 need specific exclusion to allow clean room build
!htp upgrade (and simplify) main API entrypoints
!htc #16162 upgrade HTTP-level APIs to end-user style
!str #16166 upgrade stream TCP APIs to end-user style
=str #16314 harden GraphConcatSpec, it can error as soon as possible
=all some more fixes to make it build in Eclipse
+str,htc #16071, #16072 New Stream Tcp and Http API
=doc First draft of Streams design principles
+htc fix Java build for Eclipse
=str: #16285: Expand should not drop elements on completion
+act #15804 blackbox verification for head subscriber
-str #16393 removes timerTransform mentions from scaladocs
=sam #16402 #16402 add explicit dependencies to samples
=str: #16345: fix IndexOOB, and error handling in the interpreter
=htc prevent response entity rendering for status codes not allowing response entities
=htc #15799 add server-side 100-continue support, fix request- and entity-stream error propagation
+htc minor additions to header model
=htc small simplification in message parsers
=htc fix broken per-connection header cache
=act #16361 Added more information to AskTimeoutException
=act #13894 cancel StateTimeout when FSM actor is stopped
-str #16393 removes timerTransform from public API
=htc #16388 fix StackOverflowException during chunk parsing
=pro update to reactive-streams 1.0.0.M1 Notice that one 317 is disabled and awaiting a fix in the TCK
!htp #15923 port `FormFieldDirectives` from spray
!htp #15927 port `MarshallingDirectives` from spray
!htk rename `RouteTest::entity` to `RouteTest::responseEntity`, smaller test cleanups
!htp #16190 refactor and improve marshalling infrastructure, get rid of `Marshallers` abstraction altogether
+htc apply smaller extensions and simplifications
=act #16344 ActorPath validation now without regex, safer and faster
+pro #16372 bring akka-bench-jmh benchmarks to master
=doc #15489 document the possibility to see cluster member roles via JMX
+clu #15489 expose cluster member roles in JMX getClusterStatus
=str #16318 Harden FlexiRouteTest
!str #15236 Replace Transformer with Stage
=con #16358 Harden ClusterShardingFailureSpec
!tes #16075 Change default awaitAssert interval to 100 ms
#16245 fix formatting and delete usages of diamond operator
=str #16349 fix map + map optimization
=str #16338 Emit final elements in mapConcat
+act #16245 receive builder works with generic messages
=str - renames ReactiveStreamsConstants to ReactiveStreamsCompliance
=str #16315 fixes assumption that substream key is always present
=str - hardens the IteratorPublisher by making it use the ReactiveStreamsConstants
+str - Removes AsynchronousIterablePublisher
+str - Renames SynchronousPublisherFromIterable to SynchronousIterablePublisher        Introduces an Actor-based IterablePublisher        Gives names to most of the publishers
= akka-*: full name space for loggers - resolve #16138
=htp #16289 in `handleException` also catch strict exceptions during route building or execution
!act #16125 Timeout Calls through CircuitBreaker.
=str - Various Flow and FlowMaterializer improvements
Revert "=str #16280 Make flows sharable again" since the problem is solved differently in this branch.
+tes add `static` modifier for overloaded JavaTestKit.shutdownActorSystem(...) methods to make them more usable in unit tests.
!str: IteratorInterpreter and ByteStringBatcher
=str #15622 ActorPublisher now has subscriptionTimeout support
=doc #16300 correct remote doc to right package
=pro load sample builds with project dependencies
=act #15956 Correct exception message for invalid sys name
=htc optimize rendering for Strict entities
!str #16263 Made subscription timeout handling run mostly inside the actor
=str #16272 splitWhen should drop reference when done with substream
!htc,par cleanup warnings
+htp #15922 import FileAndResourceDirectives from spray
+str add akka.stream.materializer.file-io-dispatcher setting
=htp #16238 fix RangeDirectives not to assume reusable entity data stream
+htc a safer Future.awaitResult that doesn't throw away the call stack of the awaiter
+htp resurrect RequestContext.flowMaterializer
=str #16280 Make flows sharable again
=rem #16241 Added helpful message for remoting startup timeout.
+act #15956 Allow _ in ActorSystem name
+rem #15530 Include cause in some remote log messages
=tcp #15766: Workaround for Windows to detect TCP abort (cherry picked from commit 9340215)
=act #15991 delay sending of ACK until we have updated pendingWrite
=clu #16224 Add test for cluster node restart
+str - Changes the signature of Source.expand to be curried, to guide type inference.
=cam #16249 fix method reference in ProducerSupport
=act #16199 fixed missing predicate delegation
Revert "+str #15802 Make TickSource cancellable"
!str #16235 Rename Sink.future to Sink.head
+doc #15542 Change FSM doc rst file to correctly specify None value for infinite timeout rather than Duration.Inf
+str #15086 substream publishers now have subscription-timeouts
=str #15795 Add overflow protection in ActorPublisher
+str #15802 Make TickSource cancellable
+str #15205 Java API for FlexiRoute
+str: Implement efficient stream op DSL
=str #16163 allow connecting GraphSource to GraphSink directly
!str Remove unused io2 package
=str #16221 fix graph precondition checks when attaching Source/Sink
=str  #16109: Replace ScalaGraph with custom graph impl
+str #15205 Add FlexiRoute junction
=str #16051 Possibility for Balance to wait for all downstream
=str don't run streams test twice because of junit.RunWith annotation
=str centralize number of runs for randomized stream tests
+htc #16084 introduce CustomHeader superclass for user-defined headers
+pro #15917 provide SprayJsonSupport in akka-http-spray-json project
!htp #15656 split out scala-xml support into its own subproject
+htp #15930 import RangeDirectives from spray
=doc #16198 FSM extends Actor, not depends on it
+str - improves type inference on  by separating the seed from the op (currying)
=per #16009 Serialize SnapshotHeader without Java serialization
!con #16123 Expand cluster roles support in ClusterSharding
=htp #15920 fix test-case broken because of merge conflict
+htp #15933 import + improve SecurityDirectives (+ infrastructure) from spray
=htc #16175 regard `raw-request-uri-header` setting
+str #16191 adds Flow.concat(Source):Flow method
+str #16093 Add missing runWith variant
!htp #15674 upgrade to new Multipart model
!htc #15674 refactor, improve Multipart model
=htc small fix and improvements to HttpEntity
=con #15788 Harden ClusterShardingSpec
!clu #15042 useRole restriction on local node is now respected This is an API breaking change if someone implemented their own Routers. The change is required because the router must know if the local routees should be started or not so it has to check the roles of the cluster member (the local one). We could delay this decision of starting local routees, but that would allow messages to be dead-letter-ed (bad).
!str switch to a stable `Source.empty` val
=doc #13043 Adding section on testing parent-child relationships
+htp #15920 import DebuggingDirectives from spray
=doc Describe how to use microKernel with sbt-native-packager
=doc Clarify cluster sharding docs
!str #16066 rename connect to via/to
!str #16188 Remove value equality of iterable flow
=str removing duplicate fold sink definition on Sink
add Future case to javadsl.SinkTest
=str typos in returned types in javadsl sadly a reflection based spec cannot easily test this
=per fixed small typo in parameter name
!str #16069 disallows using one Keyed sink/source ambiguously (many times)
=act #16152 - Elides the need to allocate an AkkaForkJoinTask for Mailbox-submission to registerForExecution, by having Mailbox extend ForkJoinTask and using the fact that ForkJoinTask.exec when returning false does not set completion on the task, so it is free to be resubmitted to the ForkJoinPool without reinitialization.
!htp consistently prefix simple extraction directives with `extract`
+htp provide RoutingSettings through RequestContext
!str #16039 Remove old scaladsl, rename scaladsl2
=pro Grab binary version for MIMA combatibility testing from a setting.
=htc improve error messages
=per #15937 Allow PersistentActor to be used as a stackable modification
+str #16114 better consistency specs and missing methods added - javadsl
=str #16041 Move PersistentSource to the latest Stream DSL
=str #16095 make Actor{Publisher,Subscriber} as {Source,Sink}
Update Reflect.scala
=doc Link to CONTRIBUTING.md and remove obsolete dev guidelines
=doc New styling and logos for the documentation
=doc #16134 read file as binary stream, because StreamReader expects binary
+str #16046 implemented OverflowStrategy.error
=doc fix unclosed quotes in docs
+str #16077 implement Zip/Unzip/Concat for javadsl, while reusing all impl
=per #16104 fix no longer send messages when actor crashed on recovery
=str #16109 Workaround scalax.graph reflection issue
=str #16103 Flattened javadsl class structure - no adapters, no ops
+htp add RequestContext/BasicDirectives.withLog/extractLog
!htp rename conflicting withExecutionContext directive to extractExecutionContext
+htp #15919 import CookieDirectives
+htp #15918 import CacheConditions from spray
+htp #15931 Import RespondWithDirectives from spray
!htp #16101 improve basic directive infrastructure, add more scaladoc, fix smaller problems
+htp #15929 port ParameterDirectives from spray
=htp refactor tuple join to foldLeft-based implementation, unify tuple operations
!htp #15935 clean up and extend unmarshalling infrastructure
=htp small improvement to Marshaller
=htp enable tests that were erroneously disabled due to specs2 -> scalatest copy-pasta
=htp add support infrastructure for folding over tuples with a binary poly-function
=htc smaller improvements in FastFuture
=doc #15939 update typo in addressing.rst
+htp #15924 import FutureDirectives from spray
=str #16085 PublisherSink is no longer a singleton
!str #16102 Fold Tap/Drain into Source/Sink
=doc fixed spelling mistake in comment
=htc,htp #16099 remove all special treatment for ISO-8859-1, switch to UTF-8 as default charset everywhere
!htp renaming: mapRouteResponse => mapRouteResult, mapHttpResponse => mapResponse
!htp #16088 replace RouteResult.Failure by Future.failed + handle post-processing directly in Directives
!htp convert List[Rejection] => immutable.Seq[Rejection] everywhere
+htc #16087 add FastFuture.transformWith and implement others in terms of that + recoverWith + lots of tests
+str #15736 Initial version of JavaDSL for akka-streams (NOT complete)
=htp #16063 fail on data truncation for GZIP coding
=htp #15921 import CodingDirectives from spray
=htc #16067 fix Chunked.transformDataBytes' onError/cleanup behavior
=htp #16064 fail properly and early if Gzip header is corrupt
!htc #15726: Akka HTTP with the new DSL
+str #15079 Add flexible merge
First sketch of flexible merge
+str #16038 Create Source/Flow/Sink from partial flow graphs
+htp #15932 integrate SchemeDirectives from spray codebase
=str - #16048 - Switches to pattern-matching iso getOrElse to avoid allocation in ThunkTab and Flow.apply
=pro #15178 enable junit tests in akka-streams again
+str #15904 Ported Tcp IO to new Stream DSL
=htp add one more test
=htc small improvement to `ContentLengthParser`
+htp #15928 Import MiscDirectives from spray
+htp #15925 Import HeaderDirectives from spray
=htp reduce set of not-encoded characters in FormData marshalling
+str #15998 Add Source singleton, empty, failed factories
=str #16040 Use scaladsl2 in TCK tests
=str #16026 Emit directly in MapAsyncProcessor and MapAsyncUnorderedProcessor
+str #15950 Add fold and foreach shortcuts
!str #15950 Add runWith and remove toX
=htp small simplification in tests
=htp port `FromEntityUnmarshaller[FormData]` from spray, closes #15966
=htp fix `UnmarshallerLifting` to not obscure missing Unmarshaller errors with implicit diversions
=htc fix error message in response parser
=htc allow `0` as special value `If-Modified-Since` and similar headers
=htc accept comma as cookie separator
=htp fix UnsupportedOperationException in `PathMatchers.valueMap2PathMatcher`
=htc fix parsing of `Cache-Control` header
=htc add missing alias for `US-ASCII` charset
=htc add ';' to to-be-encoded characters in URI.Query rendering
+str #15905 Add capability to merge and connect flow graphs
=str #16028 Cleaned up ducplicate implementations of FlowOps
+str #15946 Support flows without junctions in FlowGraph
=str #15874 Hook-up balance operation
+hco #15798 add missing java api for Connection.tokens
!str #15977 Rename and change types in the new DSL
=htc Add test case for bind failures
+htp #15910 import + improve coding infrastructure from spray
=str #16001 Propagate error to FoldSink's future
+str #15875 Hook-up unzip operation in the new Streams DSL
+str #15960 Correction of FlowGraph variance
+str #15996 Add mapAsyncUnordered
=doc #16000 fix tck-experimental version
=str #15900 Make fanout publisher actor name unique
!str,hco #15945 Make creation of ServerBinding public again
+hco #15945 Make Tcp and Http server binding closeable
+htp #15926 Import HostDirectives from spray
=htc Improve handling of `Transfer-Encoding` header, closes #15490
!htc Tighten up header model some more, update spec links
!htc Remove obsolete ProtectedHeaderCreation construct
+hco #15498: Transparent HEAD support
!htp,htk Upgrade from `Deferrable` to new `FastFuture`, closes #15962
!htc Replace `Deferrable` with `FastFuture`
=hco don't reject headers that refer to charsets or methods not available on the current platform
!hco #15635 reorganize registration of predefined, custom HTTP primitives
=doc #15538 Updating documentation on deliver and confirmDelivery for Scala, Java and Lambda-java
=str #15948 Make Broadcast cancel upstream when all downstreams have canceled
!hco #15915 introduce more shades of HttpEntities
!hco make Marshaller(s) covariant in result type
!hco Make `Content-Length` and `Content-Type` visible but not constructible
!htk move RequestBuilding trait from akka.http.testkit into akka.http.clien package, closes #15801
!htp rename akka.http.routing package to akka.http.server
!htc move akka.http.{client,server,parsing,rendering} underneath akka.http.engine package
=htc move source files into directories for new package structure
=pro do not push releasing* branch
=pro Cleaner way to declare Scala Version dependent dependencies
+pro #15406 Split up stream into testkit, tests and tck
=rem #15007 add ability to bind to a different address than the remoting waits messages from
=rem #15843 rename package of QuietReporter Resolves #15843
=str #15885 fix outdated error message in StreamTestDefaultMailbox
=doc#15830 fixed the mismatch between akka-docs and akka API
fix wrong depletion handling
+str #15764: Add concat and zip combinator
=str make some FlowGraph things akka internal
=str #15869 Re-enable flow graph checks
=str Add some rough overview docs of the new scaladsl package
=str #15852 Port remaining Flow tests to new DSL
+str #15762: Implement merge and broadcast
=par more shapeless strip-down and comment cleanup
!par strip down shapeless2 to the bare minimum needed
=htp Add akka-http-tests project, tests for already-ported directives
+htk Add akka-http-testkit as a port of spray-testkit
!htp port over routing DSL core from spray, other improvements
!htc apply various upgrades and improvements
=str FutureSink must not be singleton
=str Make it possible to use graph cycles
=str #15844 Use key labeled edges to support multiple edges between same vertices
=str #15737 hookup map* combinators
=str Sugar to make flows between vertices optional
=str Rename Fan to Junction
=str Source/Sink vs SourceVertex/SinkVertex equality
=str Add some more tests of complex broadcast-merge combinations
=str Add broadcast in the graph traversal
+str reintroduced the TCK, 0.4.0.M2-SNAPSHOT, passing all tests
=str #15743 tests for prepend and append
+str #15402 SSL support for streams
=str #15402 Split up MultiStream(Input|Output)Processor since SSL will use both
=str #15741 Hook-up conflate, expand, buffer, and FoldSink
=str #15738 Hook-up drop, dropWithin, take, takeWithin to new DSL
=str #15739 Hook-up grouped, groupedWithin, timerTransform to new DSL
=str #15735 Prototype of FlowGraph
=str #15740 hookup filter and collect
=act,clu,rem #15828 Turkish I bug
=doc #15241 ClusterRouterGroup uses actor selection, remove warning
=hco #15682 replace default toLowerCase calls with one using Locale.ROOT
=hco fail pending tests faster
!hco #15800 mark `Content-Length` header private for now
!str #15742 Hook-up flatten (concat all) to new DSL
!str #15742 Hook-up splitWhen to new DSL
!str #15742 Hook-up prefixAndTail to new DSL
!str #15742 Hook-up groupBy to new DSL
=doc #15336 run contrib preprocessing after regular preprocess
=act Make SerializationCompatibilitySpec pass on Scala 2.11.x
=tes #15808 force the locale in pretty duration, its only a helper
=pro #13928 Run multi-jvm tests in samples in normal test target
=act #15033 Added test to verify tcp connection actor termination
remove old scalaBinaryVersion workaround
=doc #15772 Make IPv6 multicast tests work on OS X
!str #15604: Removal of default fanout behavior
=str #15755 #15756 rework Source/Sink materialization
=str #15755 #15756 Some cleanup
=str #15756 Implement Sinks
=str #15755 implement Sources
=str #15755 mandate materializer for IterableSource
=str #15755 #15756 correct variance annotations
=str #15755 #15756 First stab at input/output factories
!str #15121 MaterializerSettings now uses a config object
=act,rem #13946 fix handling of null parameters in Props
=str #15744 Hook-up transform to the AST nodes
=tes #15777 simple, but stable fix to , or . sensitivity in spec
=rem #15100 Harden InetRNGSpec
=act #15027 Harden FSMTimingSpec
=per #15730 fix context.become in PersistentView
Update books.rst
=act #13981 Encode name of Balancing dispatcher config path
=con #15577 Harden ReliableProxyDocSpec
!str #15026 change thunk publisher api to () => Option[T]
=str #15026 add some scaladoc backticks
=str #15026 take drop negative
=con Harden ClusterShardingSpec some more
=str #15746 Rename flow classes
=str Move new dsl to scaladsl2 package
+act - 15757 - Changes the signature of ActorSystem.terminate() and ActorSystem.whenTerminated() to be of Future[Terminated] iso Future[Unit]
+act - 15757 - Reworks implementation of ActorSystem shutdown   * deprecates awaitTermination, shutdown and isTerminated   * introduces a terminate-method that returns a Future[Unit]   * introduces a whenTerminated-method that returns a Future[Unit]   * simplifies the implementation by removing blocking constructs   * adds tests for terminate() and whenTerminated
=doc Improve formatting in faq.rst
!str #15271 make transform() take a factory instead of Transformer + Makes reusing flows safe + Adds timerTransform for ops which need TimerTransformer + Adds TransformerLike in order to keep transform/timerTransform   typesafe in respect to the passed in type og Transformer
!str #15672 add a way to retrieve Publsiher or Subscriber from Output/Input
=doc Improve formatting in scala actors.rst
!str #15289 Java API for ActorPublisher and ActorSubscriber
!str #15672 add HTTP Pipeline with the new DSL
!str #15672 added all combinators from current Flow API
!str #15672 shallow shim of the new Streams DSL
!str #15050 Remove unused ReceiveTimeout
!str #15705 Update to Akka 2.3.5, and new akka-persistent api
=per #15671 fix local snapshot store picking up wrong file.
!str #15551 Switch to implicit passing of FlowMaterializer
!str #15564 Add stream supervisor
=htc #15711 fix Http.Bind failure warning message
=str #15608 Make sure ExposedPublisher is first
=htc #15670 add convenience BodyPart extractors
+str #15558 Initial delay support for TickProducer
fix typo 'inctance'
+str #15408 Replace uncheckedVariance annotations in Flow/Duct
Security: use https to fetch repo artifacts. See http://blog.ontoillogical.com/blog/2014/07/28/how-to-take-over-any-java-developer/
!con #15496 Remember entries in cluster sharding
!act #15626 expose DatagramChannel creation in DatagramChannelCreator
=htc #15686 fix off-by-one error when creating strict entities for small payloads
=htc #15560 close entity data stream eagerly + add more tests
!str #15479 "Rename ActorPublisher.Request parameter
!str #15076 Make foreach a terminal operation, returning Future[Unit]
=pro #15664 Use scala version in dist files
=hco #15665 fix BoyerMoore for byte values > 0x7f
Improve docs for AtLeastOnceDelivery recovery
=15648 ker Use wildcard in microkernel classpath
=doc #15638 clarify message ordering rule
=tes Increase coroner timeout for some tests
=per #15590 Increase efforts to in-order on start of ALOD
+act,slf #11715 Add configurable LoggingFilter
Forgotten bracket
Doc stars err
+act - #15501 - Adding support for a Non-blocking, bounded, MPMC mailbox called 'NonBlockingBoundedMailbox'
=tes #15167 Harden TestTimeSpec
+con #13737 Interceptors chain for Actors' bahavior.
=con #15613 Rename one of the DistributedPubSubMediatorSpec classes
=htp Apply remaining review feedback
=htp Add more multipart unmarshalling tests
=hco Apply review feedback
=hco,htp Upgrade to latest release-2.3-dev head
+htp add high-level unmarshalling API entry point, more tests
+htp add first version of new unmarshalling infrastructure, tests still missing
=htp smaller improvements in the marshalling infrastructure
!hco prepare for multipart body parser implementation
+htp add first version of new marshalling infrastructure
+hco various smaller cleanups and helper additions
=doc #15565 improved wording in cluster-usage docs
=pro #15616 UTF-8 charset and exception with offending file (for Validation)
Add abbrev for project changes to CONTRIBUTING.md
= str - #15621 - Moving FlowMaterializer argument to the end of all Flow and Duct methods which uses it.
= str - #15618 - Renames Flow and Duct 'tee' operation to 'broadcast'
!scr do not remove tags (github) that are not set on an issue
+act #13004 Adding TailChopping router
+act #15502: Pluggable DNS resolution in akka-io
Update AbstractNodeQueue.java
Update AbstractNodeQueue.java
!str: #15474: Migrate to reactive-streams 0.4.0.M1
=act #15572 don't read recursively in pullMode when a complete buffer was read
=con #15574 impr TimerBasedThrottlerSpec stability
=per #15559 use the same config as all other peristence tests
=per #15575 lessen timing issue in AtLeastOnce spec
!act #13490 Changed the callback to SocketOption to accept a channel instead of a Socket, this allows for using the nio features.
=act #13970 Send transistion on goto(CurrentState) in FSM
=act #15488 add @volatile logLevel, and benchmark
=doc #15543 link to persistence in java docs should point to java persistence
+doc #15537 add Typed router pattern
+per #13815 akka-persistence-tck based on @krasserm's work
=sam #12702 Create FsmSimpleRedelivery sample
+tes #12681 add EchoActor
=doc #15207 add note about UndeclaredThrowableException when used from Java
=act fixed typo in scaladoc, and => an
=ben #15516 correct tell_commandPersist_reply test with right props
Update books
=doc fix typo found in #15504 in the java version of docs
=doc fixed minor typo
Upgrade to Mockito 1.9.5 (closes #15493)
=doc #15491 java circuit breaker doc update
=act #15488 Removed guard around _logLevel
=doc,sam RecoveryCompleted handled by receiveRecover typo
Add import for TestProbe
=per #15472 Flush instead of unstash when PersistentActor restarts
=con #15440 Add invariant checks to ClusterSharding state
=per #15441 Remove persistent stream in docs and sample
=per #15457 Correlate persistAsync handlers with journal messages
!per Change for journal plugin compatibility
!per Additional deprecations and cleanup
!per #15427 Deprecate deleteMessage and writeConfirmations in journal plugin api
!per #15428 Deprecate deleteMessage
+act #15284 Add throws TimeoutException to Inbox.receive
=act #15361 Require non-abstract actor class (earlier)
=per #15459 Use full batching for persistAsync and defer
+per #15327 Add AtLeastOnceDelivery trait
!per #15436 make persistenceId abstract in NEW classes
+pro,hco Disable JavaDoc and revert breaking code changes
+pro,doc Make sure that doc gets published during subproject release
+pro,hco,par Make sure that things build on both 2.10 and 2.11
+pro Create aggregate project for pulishing stream/http-core/parsing
+per #15424 Added PersistentView, deprecated View
=per #15429 Rewrite persistence documentation and samples for 2.3.4 changes
+per,+str #15035 Reactive-stream producers for persistent messages written by akka-persistence processors
+per,+str #15035 Reactive-stream producers for persistent messages written by akka-persistence processors
=per #15230 deprecate Channel and PersistentChannel
!per #15230 rename processorId => persistentId
+act #15383 add strict japi.Option.getOrElse to simplify working with options from Java
+act #13992 Improve identify replies of wildcard selections
=act #13942 Avoid allocations in LoggingReceived when disabled
=act,clu,con,doc,per,rem,sam #15114 append missing parens at Actor.sender() invocations
=tes #15132 remove not needed lazy val
=act #15395 update typesafe config API URL
=doc first parts of HTTP model documentation
=hco Changes needed to compile with java 6 on mac
+hco Java model for http-core
=hco Remove `Low-Level API Design.rst`
!hco Add client-side request rendering and response parsing, refactor, strip-down
!str Extend StreamIO API with `idleTimeout` config setting, improve `connectTimeout` model (refs #15401)
!hco privatize some internal Uri.Host constructors
!hco #15392 use `params` instead of `parameters` consistently
!hco get rid of extra HttpResponse constructor which changes ordering
!hco more stringent following of plurally named container object
+hco introduce generic abstract accessor for HttpCredentials parameters
=hco more accurate result types for HttpEntity.apply overloads
+hco introduce Uri.Host.inetAddresses for easy access to the actual addresses
=hco,str small cleanups
+hco Add low-level server and (partial) client infrastructure
+hco Add `akka-http-core` module with initial HTTP model
+par Add new `akka-parsing` module with embedded copy of shapeless 2.0.0 and parboiled 2.0.0-RC2
=str Improve `merge` signature
+per #15229 defer for PersistentActor
=str #15347 in `concat` propagate errors in secondary upstream properly
+per #13944 Send RecoveryComplete message at end of recovery
=con #15285 wrap message in RouterEnvelope before routing
+clu #15365 Make cluster.UniqueAddress public
!per persistAsync
=per #13898 Make LocalSnapshotStore directory creation more robust
=per #13962 Close LevelDB snapshots to avoid resource leakage
scalariform ActorProducer
+tes #15132 Add additional overloaded expectMsg to TestKit
=str #15355: fix race with ExposedPublisher messaage in tee
+str #15288 Add user support for Producer backed by an actor
=str #15353 propagate error if TimerTransformer.onTimer throws exception
=act #13678 #15149 Reply with ActorIdentity(None) from deadLetters
=tes #15357 fix for PrettyDurationSpec
=rem #13923 Mute log and stack traces in RemoteInitErrorSpec
=pro Add watchSources for *.rst to akka-docs
=proj #15333 Update to sbt 0.13.5
=per #15131 Make LocalSnapshotStore fail if it can't create target directory
=per #15212 Avoid half written snapshots in LocalSnapshotStore
+str #15218 Add mapFuture operator
=act log source example - trait takes type params
=act #15265 Enable OP_READ interest for pullMode early ResumeReading
=pro silence github tagging (curl)
+str #15091 Add time driven operators
+str #15080 Add tick producer
=per #15280 Make snapshot header length field deserialize correctly
=act #15265 Make TcpConnection handle Suspend/ResumeReading while waiting for Register
=str #15242 Add test for converting onComplete to onError
=str #15253 Check for null exposed pub in stop
incorporate feedback
str =15252 Add dsl consistency spec
+pro,doc #15290 Add separate doc project for release-2.3-dev
=pro #15290 Make validatePullRequest run all tests
=str Change to testkit jar dependency
+str #15081: Implement conflate, expand and buffer
=scr silence curl on jenkins, no need for progress bars
+scr additional functions for tagging issues on github
+str #15088, #15200: Add takeAndTail and concatAll
=pro Upgrade akka-stream dependencies to akka 2.3.3
=str #15250 Use BlackholeConsumer for Flow.consume()
+str #15173 Add user support for actor consumer endpoint
=act #15220 fix a typo in parameter name
+str #15197 Add flow.append(duct)
=doc #15213 snapshot repo for snapshot dependencies
+str #15195 Add internal SynchronousProducerFromIterable
=scr #15002 use github API to get fixed issue list for a milestone
Update .gitignore
=act Add `putByteArrayUnsafe` optimization to `ByteStringBuilder`
=pro #15116 Update Typesafe Config to 1.2.1
+str #15223 `timed` extra combinators for Duct Note: not too happy about duplication of impl, but is required due to the Flow and Duct not sharing any types (could use structural, not going there though).
=doc #15234 add new google analytics tracker
+con #15157 Changed ClusterSharding.start to return the shardRegion ActorRef #15209
=tes #15165 MetricsKit should not nullpointer on racy graphite usage The report() call can come from multiple threads in our code, yet it was opening/closing a shared graphite client instance in this method, causing NPE when periodic reporting kicked in during a manual report() call. We want to be able to do this - thus rewrite to safe impl
+str #15142 Initial support for timing streams
+str : Various cleanups of internal streams architecture
=act #15217 the watching message is generated always, so the test should await on both, before it expects the unsubscribing message, otherwise it's racy.
+str #15193 Expose some test producers in StreamTestKit
+str #15172 Add javadsl.Duct as free-standing Flow
=rem #15109: Separate field in Pass for refuseUid
+str #15174 Add dispatcher setting to FlowMaterializer
+act Add japi.Pair and japi.Predicate for streams
=act #15165 should fix out-of-bounds in actor creation Other than that, also improved failure logging when AIOOB happens in the histogram Added a test which shows why the updateWithExpectedInterval method should be preferred too.
=pro #15031 separate sbt build file for every module
=act #15186 add missing string interpolators
+str #15034 Add Flow javadsl
+str #15108 Use value equality on Producers wrapping iterables
+str #15093 Add flow logging facility
+str #15084 Use sensible flow processor actor names
=pro #15166 do not redefine executeTests
+str #15085 Add Duct as free-standing Flow
=act add one more test to routing.BalancingSpec
=doc #15160 Minor spelling, wording and grammar fixes.
=act #13964 make BalancingPool mailbox configurable
=tes #15155 prettyduration should work with infinity adjust default precision to be 4 (fits use case better)
=act #15102 No serialization needed for EventStreamUnsubscriber
+per,+str #15035 Reactive-stream producers for persistent messages written by akka-persistence processors
=act,tes Initial draft of internal MetricsKit
+str #15071 Add Flow.apply from a Future
+str #15106 Add Flow collect operator
=pro #15031 move build logic into separate files
+str #15105 Add Flow tee
!str #15063 Add Flow.Transformer interface
=build #15103 Add Build start/finish events These are visible on the grafana dashboard, in order to be able to see on which commit stats have been recorded.
minor docfixes in ClusterSingletonManager.scala
=pro #15018 update to sbt 0.13.5-RC1 which has publish fix
=act #13966 Change wrong default discardOld in UntypedActor become
=str #15065 Avoid use of reflection in TcpConnectionStream
+str #15073 Add Flow produceTo consumer
=pro all non-words must be replaced with _, for statsd keys
=pro #15031 use sbt-unidoc plugin
build #15021,#13755 Emit statsd events during build
=sam Update Scala dependencies to 2.10.4
!act,doc #3893 Removed isTerminated checks from ActorClassification
+sam #13890 Add Akka Main Activator template for Java 8
=rem #13960 #13989 #13742 #13985  Optimize EndpointWriter
=pro Remove unused dependency version
=pro #15045 Adjust build for Scala 2.11.0
=pro Update test dependencies to Scala 2.11 cross published versions
=sam #15028 Change reference from java file to scala file
!str remove StreamIO and reuse akka.io.IO
!str clarify the semantics of splitWhen
!str properly separate the akka-stream build from the rest
=str updated stream tests to use Java TCK
!str Initial version of Tcp implementation
!str Make soonToFailPublisher tests handle both cases
!str Increased test coverage
!str Rename ProcessGenerator to FlowMaterializer
!str Add onClomplete to Flow DSL
!str Add cleanup function to transform
!str Align construction of thunk and collection producers
!str make ProcGen ThreadLocal-context aware
!str small fixes to ScalaDoc
!str add ScalaDocs
!str handle empty stream toFuture
!str rename scala_api to scaladsl, thanks Patrik!
!str The Big Rename
!str move to SingleStreamProcessors.scala
!str Minor cleanup of generate in ActorProducer
!str Specify defaultTimeoutMillis
!str make Stream[+T] covariant
!str remove now-unneeded imports
!str fix initial TransferState to not be null
!str Implementation of multi-stream operations
!str remove now unused AbstractProducer
!str Specify publisherShutdownTimeoutMillis
!str Improve ActorPublisher
!str Add Stream from Iterator and Iterable
!str fix small review comments
!str add ActorProducer and fix FanOutBox
!str reorganize and implement consume()
!str add transform’s isComplete and use it for Take
!str add Foreach
!str make Grouped test more thorough
!str add fold
!str make transform() onComplete work
!str clean up test output and ActorProcessorImpl
!str add Drop
!str add test for Grouped
!str add test for Filter and Map
!str add ScriptTest and apply it to mapConcat
!str rename mapSeq to mapConcat
!str rename SPI/TCK to org.reactivestreams
!str Add tests
!str step 1: add impl part that compiles
=sam Update version numbers to 2.4-SNAPSHOT
=act #3623 unsubscribe when actors terminate, instead of `isTerminated`
Updates in the Building Akka documentation page in accordance with the discussion with @bantonsson
+con #3972 Make Distributedpubsubmediator support consumer group
=pro Remove unused atmos project in build
=pro Update genjavadoc version to 0.7
=tes Remove some old (dead) test/sample code
=pro use sbt 0.13.2
=doc #3986 Slight updates in wording on cluster singleton docs
=doc #3982 Clarify that EventStream is local only
=doc switch to GitHub Issues
=pro sbt-0.13.2-RC2 with name hashing, scala 2.10.4
=con #3993 Send UnsubscribeAck in DistributedPubSubMediator to the right sender
=doc #3986 Cluster Singleton should not be used with AutoDown unless you want each partition of the cluster (effectively new clusters), to spin up their "own" singleton.
=con #3975 Check for wrong id in cluster sharding
=per #3957 Always reject external Persistent in EventsourcedProcessor
+per #3927 Enable EventsourcedProcessor to handle ConfirmablePersistent
=rem #3967 Handle refused connections as association failures
=3974 per Persist (serialize) actor refs  with transport info
=clu #3973 Make JoinSeedNodeProcess actor name unique
=sam #3945 Added license file and tutorial to java8 persistence sample
=rem 3933: Quarantine piercing should not lose quarantine marker (cherry picked from commit 7c8160b)
=doc #3924 Doc how to be notified when recovery completed
=doc #3954 Clarify how to use snapshots with Maven
=per #3933 Correction of seq number logic for persistent channel
add links to reference.conf to docs
+con #3937 Start ShardCoordinator again after PersistenceFailure
=doc #3917 include all reference.conf
+act,sam,doc #3940 Added receive setter for Java Lambda actors
=cam #3929 updated apache camel dependency to version 2.13.0
=per #3915 Make become work during recovery for EventsourcedProcessor et.c.
=rem #3930 part 2: track UID of associated systems
=act,rem #3930 part 1: remote daemon watches parents
+act #3949 add LoggingReceive.withLabel
+act,mul #3948 add MultiNodeSpec.startNewSsytem() and system.abort()
=clu #3941 SurviveNetworkInstability ignore leftover pings
+pro #3907 fix OSGi Scala version constraint
+pro #3910 Make the build package all Activator templates
=sam #3936 Changed to correct akka version in sample
+sam #3925 Adding Supervision for Java with Lambda Support Activator template
+act #3911 Adding Java Lambda compatibility for Supervisor Strategy
fix project name of akka-sample-fsm-scala
=sam #3843 Use ClusterSingletonProxy in cluster samples
!tes #3920 Remove TestKit.dilated
!act #3920 Remove UntypedActorFactory
!con #3920 Remove JavaLoggingEventHandler
!rem #3920 Remove LogRemoteLifecycleEvents
!act #3920 Remove Timeout constructor without unit
!act,rem,clu #3920 Remove deprecated old routers
!clu #3920 Remove deprecated akka.cluster.auto-down
!clu #3920 Remove deprecated Cluster.publishCurrentClusterState
!tra #3920 Remove deprecated durable mailboxes
!tra #3920 Remove deprecated akka-transactor
!dat #3920 Remove deprecated akka-dataflow
=doc clean up what-is-akka.rst and switch to www.typesafe.com
+con #3843 Add ClusterSingletonProxy
=act, rem #2556 Optimize subscriptions of AddressTerminated
+act #3246 Added control aware mailbox types
!tes #2971 Make TestKit.remaining throw AssertionError outside of within
!per #3916 upgrade org.iq80.leveldb to 0.7
=pro,sam,act Change version to 2.4-SNAPSHOT
=all #3858 Make case classes final
+pro #3906 Building persistence Java with lambda support doc code automatically
!act,sam #3889 Adding Activator template FSM/become for Java with Lambda support
=doc #3905 describe symmetric remoting requirement
=act #3888 add Timeout JavaDoc
=doc #3899 duration2TestDuration migration
+per #3906 use AbstractActor for Java8 Persistence
+per #3906 add Java8 support for Persistence
=pro #3904 do not leak internal repositories during staging
=rem #3902: Reduce disassociate errors in remote stress-test
+act #3900 make systemActorOf available to Extensions
!act,doc #3831 Adding more Java with Lambda documentation and support
=per #3898 Increase expect timeout for SharedLeveldbJournalSpec
=act Make death watch tests test something
=act,tes Small TestKit cleanup
=doc document why Deliver takes an ActorPath
=doc #3883 Eventsourced to Akka Persistence comparison/migration
The correct directive name is Stop, not Terminate
=doc #3897 Routers migration guide format fix
=sam #3887 Public domain license for activator templates
=sam Switch to build.sbt in activator templates
=doc Links to activator and some doc improvements
+cam #3885 Add the ability to use an external camel context
=clu Remove debug log noise of gossip round
=doc #3881 Change link to persistence community plugins
fix maven shade docs
=doc #3886 improved example of PartialFunction.orElse composition
=pro Exclude target directories from find in publish_samples.sh
=rem #3879: Stop sysmsg redelivery for unknown systems after a timeout
=act - Make ConsistencySpec more consistent (has been prone to intermittent failures in the past
=clu #3871 Harden SurviveNetworkInstabilitySpec
=con #3882 Defer watch in ClusterSharding until after recovery
=con #3880 Keep track of all shards per region in ClusterSharding
=tes,act,doc Make dilated an extension method and deprecate TestKit.dilated in favor of JavaTestKit.dilated
!cam Splitting up case class as workaround for SI-8283
=pro Disable akka-samples and akka-dataflow in akka-scala-nightly for dbuild
+act #3873 Adding Props.create method with manifested type
=per #3774 Persistence activator templates
=doc #3868 Clarify remote router group
+sam #3689 Make activator template of the multi-node sample
+sam #3689 Make activator template of the fsm sample
=doc #3685 Add FAQ to documentation
!act,doc #2922 Doc event bus and fix Java API
=doc #3620 Add unified documentation of deployment section
=doc #2859 Describe stdout logger more
=clu #3750 Update cluster specification
=doc #3734 Clarify that remoting cannot be used for client-server
=pro #3689 Add script to publish samples zip files
=rem #3870 Stop re-delivery of system messages when watching non-existing sys
=act Don't rely on Scala 2.10 compiler bug with private inheritance
=rem #3867 Make sure endpointWriter is terminated before ungate
=doc Typed actors chapter improvement
=con #3228 Adjust structure of TimerBasedThrottler ScalaDoc
=doc #3849 Add instructions for Maven Shade plugin
=act #3863 Increased test timeout for Scheduler.close() due to GC
+pro #3822 Add script to be run after a successful sbt build
=doc #3568 Clarify JVM options of sbt-multi-jvm
Changes all occurances of Typesafe copyright to extend to 2014.
=pro Enable scaladoc diagrams
=act #3857 Ensure that only relevant test messages go to dead letters
=pro #3855 Update to Scala 2.10.3
=pro #3841 link to scala-library when generating unified scaladoc.
=pro #3852 scaladoc generation: add a link to source file on github.
!osg, pro Updated OSGi dependencies and using a BundleDelegatingClassLoader
=all #3837 Make akkaScalaNightly compile on scala 2.11.0-M8
=act #3562: Do not generate Terminated when unwatched in preRestart
=act - Refactored the BatchingExecutor to support both managed blocking and not.
=per #3848 Link to external plugin list
=doc Explaining how to deal with Exceptions in TypedActor
=rem #2966 Harden RemoteNodeShutdownAndComesBackSpec
=* #2966 Reduce warnings from compile, test, scaladoc
=pro #3841 - use autoAPIMappings := true to link to scala-library in scaladoc.
=con #3834 Doc fixes for ReliableProxy
=sam #3689 Add required activator properties in samples
=per #3844 Views now enforce autoUpdateReplayMax
=per #3836 Set lower idleTimeout for persistent channels
=sam #3607 Amend version number in pom.xml sample
=doc #3573 Clarify maxNrOfRetries in supervisor strategies
+sam #3607 Add maven pom.xml to akka-sample-main-java
=doc #3647 Clarify that existing FSM timer is canceled by setTimer
=doc #3102 Remove ComposableActor doc sample
+act #3513 Clarify gracefulStop stopMessage, and add Java API
=clu,rem #3632 Correct wrong transport in docs
=pro #3833 Disable diagram verification for kernel and dataflow
=pro #3740 Verify docs in pull req validator
=con Unbork genjavadoc for ReliableProxy
=doc cleanup formatting error in docs
=per #3824 Do not share testActor across tests
=act - Optimization of actorcell and actor field clearing
+act #3770 Added Java 8 friendly APIs for Actor and FSM
!con #3820 Add reconnection to ReliableProxy
=clu #3826 Harden cluster.StressSpec
=per #3829 Set default expectation timeout to 10s
=rem #3827 Adjust gate setting in AkkaProtocolStressTest
!per #3828 Rename receiveReplay to receiveRecover
!tes #3544 Added 'system' as default parameter to the shutdown method on TestKit
=per #3820 Increase some test timeouts in persistence
+act #3586 #3807 Implement mandatory read throttling
=act #3572 Add parens to sender
!act #3812: Remove Pipelines
!cha #3789: Remove typed channels
!per #3704 Persistence improvements
!rem #3765: Change the defaults for remoting
!pro,sbt #3781 Remove akka-sbt-plugin
!act,doc,rem,tes 3823 remove deprecated Props methods
+act #2075 Added possibility to pass an ExecutionContext to an ActorSystem
=doc 3764 revise recommended practice for Props creation
=act #3710 Correct doc of FSM unregistering listener
!act #2927 Add BalancingPool and deprecate BalancingDispatcher
!clu #3617 API improvements related to CurrentClusterState
+doc #3816 Removed surrounding scala code from config examples in docs
=act #3798 Increase coroner timeout in ConsistencySpec
!pro #3809 Update to config 1.2.0
+act #3769 Add toStringWithoutAddress to ActorPath
=act #3819 - Correcting a race between Index.put and Index.remove(key)
=con #3801 No dilation of expectNoMsg in ReliableProxySpec
=act #3690 Correct calculation of remainingDuration in CircuitBreakerOpenException
+act #3591 Return ExecutionContextExecutor from context.dispatcher
+act #3662 Support Any value in akka.actor.Status
=act #3605 Make defaultDecider a val
+act #3648 Add default repeat=false in FSM.setTimer
=doc Replace old NetBeans plugin information
=act #3800: Add timeout value in AskTimeoutException message.
=act Normalize DeathWatch Debug events' messages
=per #3797 Additional hardening of persistence tests
=per #3797 Harden file deletions in persistence tests
=pro #3759 Changed to using non-deprecated ScalaTest Matchers
=doc #3564 Moving the Actor DSL doc section
=per #3771 Snapshot file names are only read on system startup
=pro Exclude osgi samples from zips, (fails, no content)
=doc #3763 add actor creation ordering guarantees
=pro clean up build
=tes #3638 Testing DefaultTimeout trait
+con #3758 Provide sharding of actors in a cluster
=doc #3782 Make IODocSpec say what went wrong
=tra #3668 Deprecate transactors
=age #3667 Deprecate stm support in agents
=pro Upgrade to sbt 0.13.1
=dur #3664 Deprecate durable mailboxes
=dat #3780 Deprecate dataflow
!tes #3638 ImplicitSender and DefaultTimeout requires TestKitBase
=doc #3689 zip samples and upload to s3
=doc #3689 Don't rewrite arrows in doc and samples
!per #3785 Change default implementation of processorId
=doc #3689 Make activator templates for cluster samples
=doc #3689 Make activator templates for remote samples
=doc #3689 Make activator templates for camel samples
=doc #3689 Make activator template for akka.Main
!act #3786 Remove deprecated DefaultScheduler
!act Remove deprecated one args tell in ActorSelection
!act #2770 Remove deprecated FSM.timerActive_?
!act #3012 Remove deprecated event-handlers
=act #3725 Make FSMTimingSpec more robust.
+act #3609 Include host and port in log source
!per #3761 Reliable channels
=act #3720 Optimze actor creation speed and actor size
+rem: Implement Quarantine piercing
=slf #3788 Update to logback 1.0.13 and slf4j 1.7.5
!rem #3712 Update to netty 3.8.0
!act #3637: Add information about target in AskTimeout
!act #3670: Removing old IO implementation
Class name typo in the testing documentation
remove orphaned link
=pro #3753 Override dependency versions from command line
+per #3746 Remote sharing of LevelDB for testing purposes
=pro #3752 publish jars locally to the right directory
=pro Upgrade to sbt 0.13.1-RC5
Removed section on how to create a dynamo style db on top of Akka from cluster docs
=act #3688 - Calls bind _after_ all pre-connect-hooks
=act #3733 Re-receive unstashed Terminated messages
!per #3729 Journaling protocol optimization
=doc fix misleading Recommended Practices
=act cleanup state parameters in TcpOutgoingConnection
+act #3630 - Only fall back to default ctor if NoSuchMethodException
!per #3717 Deletion API for snapshots and persistent messages
!clu #3683 Change cluster heartbeat to req/rsp protocol
=doc Add dependency and sample to osgi docs
=act #3590 Reject task scheduled too far in the future
+rem #3665 Allow trusted selections in untrusted-mode
+act #3073 Add forward to ActorSelection
=act #3507 Change format of ActorSelection.toString
=per #3718 Support for native LevelDB
!per #3707 Channel enhancements
=zer #3512 Harden zeromq ConcurrentSocketActorSpec
=act Log random seed in case of SupervisorHierarchySpec failure
=rem #3706 Avoid loss of floating point precision in PhiAccrualFailureDetector
=pro Upgrade to sbt 0.13.1-RC2 to avoid too many open files.
+act #3579 Direct ActorSelection for missing actor to deadLetters
=act,rem #3073 Make ActorSelection faster
=act #3601 Harden test for log dead letters
+doc #3656 correcting the TypedActor documentation
=all #3448 Newer Scalariform running on more files
=pro #3448 Upgrade to sbt 0.13.0
=doc,osg Effort to get OSGi integration tests running again
=doc Update Sphinx installation instructions
!per #3681 Performance and consistency improvements
=doc #3684 Document that SslTlsSupport doesn't support Tcp.WriteCommand.
=act 3684 prevent usage of WriteCommands other than Tcp.Write with SslTlsSupport
update to latest version of Typesafe CONTRIBUTING rules
=act 3571 quiet down exceptions from `Socket.shutdownOutput()`
=clu #3683 Don't trigger extra heartbeat when not expected sender
=doc #3682 Document message size limit in SslTlsSupport.
!con #3679 Make protobuf serialization for DistributedPubSubMediator
=act #3680 fix SuspendReading being overruled by racy ChannelReadable
+con #3677 Limit delta in DistributedPubSubMediator
=clu #3676 Cache the last system name and protocol during deserialization.
+clu #3458 Adjust biased gossip for large cluster
Possibility to skip mima check in release
!clu #3657 Lazy deserialization and TTL of Gossip message payload
=act #3672 fix garbling of big outgoing Tcp.Write caused by mixup of buffers
+con #3669 Possibility to define routing logic in DistributedPubSub
+act #3663 Package BalancingDispatcher for usage in router pool
+per #3661 Event sourcing support
=rem : Update comment in logging section of remoting configuration (cherry picked from commit 0510163)
=rem #3666: Explicitly log invalid outbound addresses (cherry picked from commit e8bbcf8)
+clu #3627 Cluster router group  with multiple paths per node
!act,rem,clu #3549 Simplify and enhance routers
=doc #3639 Show complete custom mailbox example.
=clu #3660 Simple speedup of gossip in early phase
+clu #3636 Revert join to uninitialized
!per #3652 Custom snapshot and persistent message serialization
!rem #3646: Optimize sending of Ack messages
=rem #3643 Remove warning message from normal remote system shutdown.
#3655 clu Stop sending EndHeartbeat after ack
=rem #3621 Make Netty respect akka.daemonic setting
=act #3645 Make TcpOutgoingConnection actor handle UnresolvedAddressExceptions
+per #3641 Storage plugin API
!per #3631 Snapshotting
+clu #3612 Allow join to uninitialized node
!act #3583 Timer based auto-down
=doc #3581 Add "Writing to a connection" section to IO docs
!act #3581 Add Tcp.CompoundWrite, some cleanup
=pro,doc Update sbt-multi-jvm plugin to 0.3.8 and add sbt 0.13 docs
!clu #3416 Use plain protobuf and protoc
!per #3618 Cleanup duplication of life cycle hooks in Processor
=rem #3606 Properly reset system message buffer between remote sys restarts
=clu #3533 Harden cluster startup error handling
=clu #3608 Simplify Reachability merge
akka-persistence prototype
=clu #3603 Handle removed member in Gossip and Reachability merge
!clu #3599 Use counter in VectorClock
+con #3595 Use remote death watch in cluster client
small spelling fix
+con #3578 Aggregator contribution
=act #3602 report `Connected` only when connection attempt was successful
!rem, clu, mul #3154 Upgrade protobuf to 2.5.0 and add an SBT task
=clu #3600 Disable Cluster assertInvariants checks by default
=clu #3498 Optimize ClusterHeartbeatSender
!clu #2307 Allow transition from unreachable to reachable
=pro #3569 Remove experimental label from cluster pom.xml
=doc #3596 Add paragraph about Agent locality
!con #3597 Remove hand over data message in cluster singleton
!osg Updating Aries dependencies
=act #3593 Turn of serialize-messages and make receive polymorphic
+con #3551 Buffer messages in cluster client
+act #3592 Read stash-capacity from mailbox config
!clu #2320 Convert the seen table into something more efficient
=clu #3442 Optimize the vector clock comparison
fix scripts/authors.pl
=act #3565 Add ClassTag in Props.apply(creator)
=tes #3563: Mark internal Testkit messages as NoSerializationVerificationNeeded
=act fix reference.conf comment for event-handler-startup-timeout
=pro #3558 Add validate-pull-request task
=act #3389 Improve SSL closing sequence
+act #3529 Add convenience helper for looking up an actor by identity
=act, rem, clu #3521: make serialize-messages work with core modules
=act #3525 Retry finishConnect after OP_CONNECT
+rem #3504: Toned down error logging and made loglevel configurable
=rem #3527 Correction of match in reWatch
=cam #3541 Log Camel endpoint activation/deactivation failures as error
=doc #3500 Add section about Dependency Injection
=doc #3539 Update the cluster spec
=act #3557 Improved semantics for BoundedBlockingQueue
=rem #3527 Take actor system uid into consideration in remote watch
=rem #3527 Fail fatally when negative acknowledgement is unfulfillable
=rem #3527 Throw away system message delivery state when new UID from a remote Address is detected
=clu #3519 Cluster router should use provided supervisor strategy
=pro #3015 Upload dist to S3 downloads.typesafe.com
=act #3535 Report CommandFailed for early IOExceptions
=act Cleanup size > 0 anti-pattern in Stash
+rem #3485 Make dispatcher for all remoting actors configurable
+act #3532: Add ask support for Java API
Add a few more details to the cluster client docs.
=rem #3555: Wrong and superfluous match in EndpointWriter
=doc Update ZeroMQ pub/sub port mismatch between doc and code example
=pro #3552 Upgrade ScalaTest to 1.9.2-SNAP2 for dbuild
=doc #3531 Recommend orElse’ing super.supervisorStrategy.decider
!act #3526 Make SupervisorStrategy.logFailure public
=clu #3536 Update doc of hostname port params in cluster jmx script
=clu #3546 Change log level of gossip from unknown
=clu #3517 Guard against wrong random selection
=doc Correct typo in cluster docs
=act #3547 Resolve high contention on unsubscribeAddresssTermination
=doc Move up dependency info for DurableMailboxSpec
 #3520 - fixing putLongParts in ByteStringBuilder and adding tests
=doc add work pulling pattern to list of patterns
Add explanation and example for 'Secure Cookie Handshake' to akka-sample-remote
!act Marked StashWhen* marker traits as internal API
=pro #3019 Migrate the actor copy reference actions to a resourceGenerator.
=doc #3167 Image clarifying paths, incarnations, UIDs, ActorRefs and Selections.
switch master to 2.3-SNAPSHOT
update CONTRIBUTING.md to express commit message rules
=pro #3488 update to config library 1.0.2
=doc:3472 Updated Stash docs to reflect new mailbox requirements
=clu:3152 Improve scaladoc of cluster
=act:3152 Add doc to LoggingAdapter
=act:3478 don’t fail constructor at end of hierarchy stress
clarify wording of actor termination phase
Improve scaladoc in akka-actor, see #3152
=actor: More descriptive error message when serializer with given ID is missing #3487
Handle null constructor parameters, see #3486
Make Throttler usable from Java, see #3223
DOC: how to conf dispatcher of camel producer, see #3048
Update ActorInitializationException message to be symmetric Java/Scala, see #3275
DOC: clarify empty CurrentClusterState for early subscribers, see #3470
= doc: Added warning about closing over in scheduled tasks #3263
DOC: correct wrong advice in 'Routers and Supervision', see #3484
DOC: Clarify the two types of cluster aware routers, see #3447
sbt 0.12.4, see #3479
Adjust dist README, see #3105
DOC: FSM start state in preStart/postRestart, see #3440
DOC: how to change default mailbox, see #3483
Update Agent.scala
=doc: Document code block style difference from style guide #3106
=doc: Document that EventBus do not preserve sender #2918
Do not publish aggregator projects, see #3481
DOC: Describe cluster dispatcher, see #2816
DOC: Strange link names, see #3259
 #3437 - Adding rst documentation for the MPSC mailbox
DOC: Props.empty.withRouter, see #3464
Logging of transient errors in remoting attempt 2.
! remoting:  EndpointWriter uses mailbox requirements instead of dispatchers #3480
Reducing the use of intermediate datastructures for the ClusterMessageSerializer
Keep the order of buffered messages in Camel producer, see #3477
Trace all system actors
Error level remoting events are logged by default #3475
fix yet another bug in LARS, see #3471
Removing the use of 'null' in LARS
unhandled msg in cluster StressSpec
Replaced multi-line strings with \n and concatenation #3462
change line endings to CRLF for akka.bat
add pipeToSelection support, see #3430
Turn of retry-limit for AkkaProtocolStressTest #3466
Minor touchups and cleanups in ActorSelection
Java (Eclipse) compatibility of extensions, see #3469
fix stupid bug in LARS, see #3467
Make Make Cluster.joinSeedNodes public, see #3468
Test was not using the view from the fresh system #3460
Added comment
Update atmos test configuration to trace testActors
sbt-multi-jvm 0.3.6
Setup tests with atmos tracing
remove obsolete verbiage from ScalaDoc of actorOf, see #3463
Tweaked drop policy to be less aggressive on the other system
replace embedded JMX Client with jmxsh, see #3461
add ActorRef.noSender() for the Java API, see #3429
Longer timeout in RemoteDeliverySpec. See #3451
revert to 10ms and fix two more things, see #3428
Log dead letters, see #3453
Speed up cluster gossip processing. See #3441
io: change IOException treatment from "fatal error" to "expected during normal operation"
io: fix TcpConnection acking empty writes which carry `NoAck(...)` markers
 #3457 - Adding proper type to TestFsmRef
rework LARS, see #3428
 #3449 - Adding a new factory method for creating TestActorRefs in Java without having to specify a name.
 #3438 - Adding support for non-static top-level classes in check constructors
tcp-reuse-addr off on windows, see #3450
Make akka.cluster.MetricsCollector public, see #3452
Use dispatcher from config with RARP, see #3445
Quick grammar fix for Scala/FSM docs.
Count vclock stats when published, not for each received gossip
 #3436 - use the ActorSystem's ThreadFactory for Netty threads
io tests: clean up imports
 #3343 - Moving to Scala 2.10.2
remove “compile” scope from contrib dep to remoteTests, see #3343
change default timer resolution to 20ms
Proper handoff of readers #3286
 #2809 - avoiding unnecessary copying of Byte Arrays for ByteStrings in Akka Remoting
increase coroner timeout for SupervisorHierarchySpec
improve BackpressureSpec, see #3414
move deadLetterMailbox into Mailboxes and fix review comments, see #3342
Verify that messages are not dropped, see #3390
use original system’s default address in serializedActorPath, see #3425
fix one case of unguarded Option.get in UDP remoting
change IAE to ConfigurationException, see #3342
small fix in SslTlsSupportSpec
fix SupervisorHierarchySpec and add more debug output, see #3312
rewrite mailbox selection logic, see #3342
tone down error logging in IO layer, see #3386
Increase timeouts in ConcurrentSocketActorSpec, see #3421
Race in creating new remote child, see #3423
Remote deployed typed actors need a local proxy. See #3380
Allow akka sbt plugin to be excluded from remote publishing
More props factories, see #3418
Split Akka PDF into a Java and Scala version. See #3400
Improve logging in remoting, see #3177
harmonize MyActor.props pattern, see #3418
Change workSchedule time to avoid SupervisorHierarchySpec running slow. See #3312
Wrap long lines, for pdf
Make the SslTlsSupportSpec AkkaSslHandler stop on all types of close. See #3407
adapt SchedulerSpec rate test to 10ms time slices, see #3391
only create the routees once they can be looked-up, see #3406
Add a barrier in RemoteNodeDeathWatchSpec to compensate for connection time. See #3390
remove unused pom.xml with akka-cluster-experimental ref
Make AkkaSpec getCallerName work on J9. See #2996
improve safety of Props.create by allowing Creator<T>, see #3377
make LocalScope mean “purely local” and avoid Props serialization check, see #3210
OSGi Make the integration test work again. See #3292
Footnote breaks pdf generation
Dilate ask timeout in ConcurrentActivationTest, see #3413
Increase ask timeout in CoordinatedIncrementSpec, see #3409
 #3405 - fix race between consumer and producer for MPSC
Warn about -optimize flag, see #3233
Mark not impl parts in Cluster Specification, see #3331
Disable cluster stats by default, see #3348
remove fallback to default-dispatcher, see #3394
 #3335 - Adding connection timeout to TCP connections
Getting started link to Activator
=== was not testing what it thought it did
Split mailbox documentation into a separate section. See #3341
fix some FIXMEs, see #3192
add supported zeromq version information in docs
Remove redundant should/must in tests, see #3272
FIXME in cluster, see #3192
do not close over context.self in TickGenerator, see #3393
a few fixes after review of the IO doc changes
Include path in error message for missing router conf, see #3178
Change default tick-duration to 10ms, see #3387
fix one more warning
split IO docs and mark them EXPERIMENTAL, see #3294
add ScalaDocs and correct UDP docs, see 3268
add BackpressureBuffer, see #3253
 #3378 - fixing memory leak in LARS.stop
Quarantining completely disables outbound attempts #3285
Start heartbeatSender after Welcome, see #3388
ClusterSingletonManagerSpec must not use 'node' from other thread, see #3382
Validate deployment paths at startup, see #2749
Remove experimental label from cluster, see #3283
fix some warts in IO
Shutdown of transports  are now synchronous with system shutdown #3368
Config of cluster info logging, see #3225
Add previousStatus in MemberRemoved, see #3252
Increase timeout for akka.camel.ConcurrentActivationTest. See #3269
Increase timeout in MetricsCollectorSpec, see #3358
Increase timeout in RemotingSpec, see #3372
Cleaning up bad search and replace so docs generate correctly. See #3374
Remove hardcoded port in RemoteRouterSpec, see #3369
exclude akkaSbtPlugin from unidoc (does not make sense and fails)
Minor improvement to Coroner thread count formatting.
Error reporting when starting remoting with wrong configuration, see #3373
Config library 1.0.1
make it compile with Scala 2.11.0-M3
fix StashJavaAPI test (i.e. make it test something)
Send extra DeathWatchNotification from RemoteWatcher, see #3368
Reinstating a couple of deprecation warnings for Props
Minor fixes after review.
 #3370 - Undeprecating Props.apply(=> Actor) and Props.withCreator(=> Actor)
Make associate in TestTransport wait for the association event linstener. See #3363
 #3345 - making sure not to close the Netty Bootstrap on the Netty IO thread, and making sure to close the channel and release the external resources.
 #3371 - using a new port for each of the TcpConnectionSpec tests to avoid races with reuse of port numbers
 #3323 - Adding support for akka.remote.log-sent-messages
Added optional property (skipSenderNode) to PubSub.SendToAll if the message should be sent to a matching path on the sender node or not.
Added INTERNAL API marker
Marked FailureDetectorLoader as akka private
EventStream is now passed to failure detectors
davyJones should be sender, see #3366
Ensure that dispatcher doesn't get empty during test. See #3251
Missing barrier coordination in RemoteNodeDeathWatchSpec, see #3350
Remove auto-join config, derive from seed-nodes, see #3359
Use a dilated timeout for ConcurrentActivationTest. See #3269
Netty 3.6.6, see #3356
Change defaults for Netty pools, see #3346
Hardening of cluster member leaving path, see #3309
Remove some unnecessary object creation and switch to HashSet for better performance. See #3308
Shutdown ordering issue in RemoteDeploymentDeathWatchSpec, see #3334
 #3340 - Adding support for 0ms push timeout for blocking mailboxes
fix release printed in docs header
make release script really clean out the working directory
Compression of large cluster messages, see #3355
Forward port of release and build changes from 2.1
Connection retries to shutdown node, see #3326
io: add comments based on review feedback
io: remove SelectionKey lookup and reduce IO-layer-internal message volume
io: small clean-ups
io-tests: simplify TcpConnectionSpec in preparation for coming modifications
Heartbeat interval was too low compared to awaitCond sampling #3289
Upgrade ScalaBuff to 1.2.0
 #3313 - Relaxing the timing of the consumer timeout and marking the test as timing sensitive.
 #3333 - adding -encoding UTF-8 to javacOptions
add Futures.promise to the docs
Better test timeouts in UnreachableNodeJoinsAgainSpec, see #3285
Publish cluster metrics periodically, see #3296
 #3322 - Changing the name of the bigBounce actor in RemotingSpec to a unique one so that there is no race between tests.
update to genjavadoc 0.5
Some more test cleanup to not create so many threads. See #3320
clear FSM.nextState after transition, see #3274
Removed unnecessary comment
fix TestTimeSpec, see #3317
TypedProps now uses deploy information #3315
Actor fields are cleared after Terminated is sent. See #3311
Wait on shutdown of extra actor systems in tests. See #3217
Changed design of RemoteWatcher due to cleanup race, see #3265
remove ActorRef#tell(Any), see #3293
Logging of the size of different message types.
call executor.prepare() for scheduled jobs, see #3307
Cluster member age, and usage in singleton, see #3195
Enforce mailbox types on System actors. See #3273
Remove duplicates in roleMapping, see #3270
improve logging in {Tcp,Udp}Listener, see #3305
[docs] fix there -> their in two places.
fixed indentation
Move barriers of conditional tests in StressSpec, see #2787
Reduce amount of gossip data transferred in idle cluster, see #3279
Additional tests of ClusterMessageSerializer
Quick fix for unreachable exiting, see #3266
Enable usage of MultiJvm nrOfNodes in cluster StressSpec, see #2787
remove NullMessage, see #3281
removed calls to deprecated Props constructor in java code
work around epoll() bug, see #3176
AddressTerminated interference in RemoteWatcherSpec, see #3290
fix ActorSelection hashCode/equals and ask, see #3287 #3261
Added proper serialization for messages sent via ActorSelection #3271
add akka.Main and use that to add Hello World docs
SerializationCompatibilitySpec failure on JDK7. See #3288
 #3080 - Including a timestamp in LogEvent and in the MDC
Added delimiter-byte codec that fixes SslTlsSpec #3256
Count the number of threads during tests to find leaks. See #2936
Improve wording in 2.2 migration guide (closes #3284)
Timing issue in RemoteNodeDeathWatchSpec, see #3265
fixed instamtiation error of InboxActor in actor.dsl.Inbox
removed 1 deprecation warning from akka-zeromq
removed deprecation warnings from akka-transactors
removed some deprecation warnings from akka-testkit
removed deprecation warnings from akka-samples
removed deprecation warnings from akka-remote
removed deprecation warnings from akka-remote-tests
removed one deprecation warning in akka-osgi
removed deprecation warnings from akka-multi-node-testkit
removed some deprecation warnings from akka-contrib
more deprecation warnings removed
Make SerializationCompatibilitySpec check instances and not tuples. See #3184
Fail actor creation if mailbox doesn't conform to required type. See #3237
removed some deprecations
#3272: Eliminate redundant 'should' in DataflowSpec test
Stop heartbeating when watching node crash, see #3265
Configurable maximum frame size for Netty driver
Additional coordination of shutdown in ClusterDeathWatchSpec, see #3255
Move resolver so that all dependent projects find the artifact.
Solve UnreachableNodeJoinsAgainSpec problem, see #3247
Coordinate shutdown of ClusterDeathWatchSpec with messages, see #3255
Use ScalaBuff 1.2.0-SNAPSHOT so the build works on windows.
Allow a FromConfig router to be partly configured from code. See #3136
Increase time limits in CircuitBreakerMTSpec, see #3243
RemoteWatcherSpec interference with real quarantining, see #3257
Udp tests now use port acquired from a DatagramSocket #3245
also fix java/io.rst link to EchoServer et al
API adjustments to ClusterClient, see #3264
Disable quarantine for RemoteWatcher unit test
Ignoring test that relies on actorFor and remote watch
Allow different types of mailboxes on the same dispatcher. See #2687
restructure ToC of reST docs
Quarantine is in wrong block
add link to ticket from FIXME
add SslTlsSupport (ported from spray-io), see #3236
Hooked in quarantining
NewRemoteActorSpec is racy, but has to work even if the race happens
Only quarantine removed member that was unreachable, see #2594
Change member prio for Joining/Up, see #3239
Temp workaround in tests for the duplicate MemberUp events, see #3239
Adding workaround for UnreachableNodeJoinsAgain
Quarantine from ClusterRemoteWatcher also, see #2993
Factory methods for Props
Added acknowledged delivery of system messages
implement ResumeWriting, see #3200
Race between termination and actorFor, see #3234
Reliable remote supervision and death watch, see #2993
Disallow re-joining, see #2873
deprecate closure-taking Props factories, see #3081
clean up DeathWatch semantics, see #3222
The test implicitly relied on a loss of a message
Correct unsigned byte behavior
TcpConnection: forward exception from WriteFile dispatcher to the actor for proper handling
TcpConnection: don't lose direct buffers when ByteString operations fail
TcpConnection: add `file-io-transferTo-limit` config parameter
include bound localAddress in Bound message, see #3230
Cluster client and receptionist, see #1165
Distributed pub-sub in cluster, see #3203
always clear ActorCell.sysmsgStash, see #3231
The test implicitly relied on a loss of a message
 #3204 - Adding keypass to SSL configuration
Some cleanup
Tone down error logging of DeathPactExceptions via dedicated SupervisorStrategy
Protobuf serialization of cluster messages. See #1910
Make karaf osgi-sample extract to target directory. See #3216
Tcp: cosmetic changes and more checks
 #3198 - Making CoronerSpec taggedAs TimingTest
Upgrade to Netty 3.6.5.Final, see #3218
 #3215 - fixing race in JavaTestkitSpec
Terminated is now a SystemMessage
Don't send Remove command to unreachable, see #3209
 #3206 - Adding expectTerminated to TestKit
Tcp: introduce WriteFile to support zero-copy writing of files (using FileChannel.transferTo), fixes #2896
Tcp: abstract writing into WriteCommand to make place for other kinds of writing
TcpConnection: abstract PendingWrite logic to make room for other types of writing
add Tcp.register overload with `keepOpenOnPeerClosed` parameter for Java usage
Tcp: hide support for half-closed connections behind Register.keepOpenOnPeerClosed
TcpConnection: use pattern matching
io: handle half-closed connection when peer closed first
Make akka-sample-osgi-dining-hakkers compile again. See #3212
 #3207 - prolonging the timeouts in FutureDocSpec to be less flaky when there's a GC pause
make lifecycle hooks work when using Stash, see #3199
add link from Actor JavaDoc to UntypedActor
implement and document Pipelines, see #3174
add @throws annotation to actor life-cycle hooks, see #3188
Deprecate actorFor in favor of ActorSelection, see #3074
Supress stack trace for exc thrown when remoting is stopped
ClusterRouterConfig should stop remote deployed routees, see #2797
Don't stop dynamic router when all routees terminated, see #2734
Cleanup of TestActorRef constructor, see #2728
Make JavaTestKit match TestKit, see #3042
Add dispatcher to deployment config, see #2839
Cluster member status transition guards, see #2802
Resolve naming/packaging problems
 #3203 - deprecating HashedWheelTimer
clarify watch() idempotency (Java)
clarify watch() idempotency (Scala)
io: catch CancelledKeyExceptions in SelectionHandler, see #3191
Adding more tests to MailboxSpec so that we know they follow the contract ;)
We should always handle ThrottleMode messages. See #3179
Change to Netty 3.6.4.Final, see #3190
Changed to Netty 3.6.3.Final, see #3190
Small simplification in TcpConnection
TcpOutgoingConnection: Respond with CommandFailed rather than ErrorClosed on failed connect
Clean up imports
Make use of new command.failureMessage
Associate Tcp.CloseCommands with their respective confirmation events
rename UdpFF->Udp and the other UdpConnected, see #3058
 #3077 - Deprecating ActorRef.isTerminated
Renaming peek() to peekNode and making it protected, then creating a new peek that returns T
Adding a MailboxSpec for SingleConsumerOnlyMailbox
Moving in isEmpty and count into AbstractNodeQueue
 #2970 - Removing scheduler and dispatcher from ARP and reimplementing PromiseActorRef to use an internal calling thread EC
 #3161 - adding trust managers for server connection too
 #3107 - Moving the relevant scripts and samples into the dist folder of the akka-kernel project
TcpConnection: forward received data to handler immediately without concatenating buffers
Cleaning up the ActorRef serialization according to review. See #3137
Correctly serialize local actor refs from other actor systems. See #3137
Link to old migration guides instead of embedding, see #2774
 #3166 - Adding parenthesis to FSM.initialize
 #3165 - Preventing SOE with conflicting serializers when serialize-messages = on
Making SerializedSuspendableExecutionContext use AbstractNodeQueue instead of ConcurrentLinkedQueue
 #3018 - Enabling -Xlint and dealing with the situation that occurs
Tone down logging in SelectionHandler
Turn "compile-time constant" into compile-time constant
NPE in logFailure, see #3181
Return of the DefaultSystemMessageQueue fixes. See #3170
Make The Coroner print full stack traces.
Exiting members must still have seen the gossip for convergence, see #3171
Use awaitAssert in cluster tests, see #3168
awaitCond = awaitCond with better error reporting, see #3168
Correct import statement.
Ignore members that can't be leader during convergence check. See #3150
maven exec plugin doesn't have to be added to pom.xml
Minor fix to SupervisorHierarchySpec to ignore Terminated from old child
Changed Failed to be a SystemMessage
Add UID to RemoteActorRef, see #3072
Changed ThrottlerManager setMode to use watch to ensure completion of future. See #2930
Configure RemotingSpec to not create 500 threads. See #3134
Wait for the second member to become Up. See #3140
Make joining to the same node multiple times work, and reenable blackhole test. See #2930
Read instead of write to get connection reset by peer. See #3128
Shutdown/cleanup cluster extension if actor init fails, see #3162
update to SBT 0.12.2
Cluster node roles, see #3049
Release should build and copy javadoc automatically. See #3158
DOC Change the HTTP section. See #3155
Updated documentation
filter resume-warning in SupervisorHierarchySpec, see #3151
update to genjavadoc 0.4 and fix path concat in Unidoc, see #3144
remove occurrences of List.size==0
 #3147 - correcting ScalaDoc comment for ActorRef.isTerminated
Adding high-performance MPSC queue based mailbox to Akka
some IO doc fixes
genjavadoc is now off by default, see #3141
Set TCPNODELAY as default.
Change log-remote-lifecycle-events=on, see #2826
Reduce unwanted logging from remoting, see #2826
Log actor failures in supervisor, see #2824
Publish LeaderChanged when first seen, see #3131
Cluster singleton failure due to down-removed, see #3130
 #3114 - Replace props on ActorCell termination to avoid leakage if one holds onto LocalActorRefs.
Logging of joining
Don't increment vector-clock on merge and merge locally. See #3076
TransitioinsSpec can't use address ordering to check who's leader. See #3129
Increase within timeout in MBeanSpec, see #3133
make config switchable in initialCommands for SBT console
Temporary ignore failing tests, see #2930
Joining member should not be leader, see #3021
Publish member events when state change first seen, see #3075
Transition from Down to Removed, see #3075
fix formatting of Java API in doc comments + genjavadoc 0.3
Removing the redundant field that is RemoteActorRefProvider from RARP as it is transitively availabe through the transport
Back off if another thread has processed all messages for this actor. See #3064
build unified javadocs (under target/genjavadoc-api), see #3122
Make `SecretAgent` final (sorry James, you knew it couldn't last forever!) and standardised doc comment. Add `Actor.create` factory method to 2.1->2.1 migration docs
Use fishForMessage instead of ignoreMsg, see #3116
add javadoc to most projects
Adjust timing in FutureDocTestBase, see #3112
Harden ClusterSingletonManagerSpec, see #3116
javadoc-ify akka-actor
Harden TimerBasedThrottlerSpec, see #3103
Actually use the correct timeout value in the cluster StressSpec. See #3092
Adding some cuban sigar
akka.sample.osgi.dining-hakkers integration test
akka-sample-osgi : fix on sript running maven integration test
Added Pax Exam based in-container integration test
Maven optimization and Karf Feature
DinningHakkers with automatic Karaf runners\n current error: No configuration setting found for key 'akka.cluster'
Initial commit
Made `Agent` an abstract class, pushed existing implementation into a private `SecretAgent` class and added a java-lovin' factory method. See #3108
clarify context needed for ActorDSL.actor() and add @implicitNotFound
Make sure that all nodes use tha same number of rounds. See #3050
Adding more information in TestKit asserts. See #3040
#3100 - allow sending more than one udp packet with UdpFF
Adjust timeouts in LARS tests since processing can take a while. See #3091
Hardened flushing code in Remoting #3036
Adjust test timeout since joining seed nodes might take a little longer. See #3092
 #3093 - removing the temporal constraints on TcpConnectionSpec
 #3054 - Removing Makefile from akka-docs
 #2991 - Switching to org.fusesource instead of org.hyperic
Removed blocking code from TcpConnectionSpec #3064
Defining vocabulary in the introduction pages #2229 (cherry-picked from 1ce6bb8)
Timing issue in TypedActorSpec, see #3085
document availability of `sender` in supervisorStrategy
Problem with address already in use in udp tests, see #3084
Make RandomRoutedRemoteActorSpec lucky, see #3061
Add logging intro, see #2737 (cherry picked from commit 5fcde199d818e22e6dad4aa70f351a52cefe446f)
Add multi-node-testkit to the project aggregate. See #3090
clarify `sender` in preRestart, see #2509
Added patterns for initialization for Scala #2297 (cherry-picked from e2aa3b5)
Temporary fix to make build happy again.
Add test for config of multiple loggers, see #2968 (cherry picked from commit 14d857a593513d932b82ab2fd4e2a2dc78ef911c)
Akka SBT plugin now uses project IDs instead of names. See #2695
Only log log initializaton errors directly to StandardOutLogger. See #3069
Support restart of first seed node, see #2854
Links to akka books, see #2713 (cherry picked from commit cb2e682ed8619aa1cf0960b2e0a283f4d994ec77)
Removed TOC for old IO in the new docs. Reported by rit.
Change event-handlers to loggers. See #2965
Ensure that logging propagates since it is asynchronous. See #3069
Change documentation to consistently use quotes for log levels. See #2965
Add the LogLevel OFF that can be used to turn off logging. See #2965
DOC: Correct wording about actorFor. See #2764
Add intro in config docs, see #2756 (cherry picked from commit f79b38771fa009b7bc9666cb784be81fcdd7480e)
Change more copyright to 2009-2013, see #2879
Add fail fast checks to prevent null message, see #2800 (cherry picked from commit 5526f9d2a8b01f944ff078ce57f2a03c21649d05)
Java docs and sample of durable mailbox, see #2761
Adjust scheduler isCancelled, see #2903
Report port when IOManager listen fails, see #2852 (cherry picked from commit 9737197c7b2647e861372db1292fb6729e2c7bc8)
 #2989 - Switching to mina2 for Camel examples
Script that generates statistics for release notes
Adding FIXME in AkkaBuild regarding ScalaVersion of allTests
fix TcpConnection’s PendingWrite.wantsAck
Added missing return types in UdpFFMessage
Java API for UdpConn
add INTERNAL API markers and explicit return types
Added Java API for UdpFF
IO layer: add Java API and docs for TCP
brown paper bag fix to the build
add allTests pseudo-project for BC verification of Scala
Correct link in io docs
Create cluster scheduler from configured scheduler class, see #3034
Nodes not part of cluster have marked the Gossip as seen, see #3031
Make cluster fault handling more robust, see #3030
SimpleSender now works with the companion object
Check for interruption after message processing. See #3006
ensure unique actor names in camel ProducerFeatureTest, see #3026
Restore ssl settings in reference.conf, see #3022
move multi-node-testkit into its own module, see #2981
Scheduler shutdown timeout needs to be longer on slow machines. See #3027
Don't rethrow InterruptedException when handling failures in the dungeon. See #3006
remove actor-dep from dataflow, see #3016
Second iteration of documentation
Polish the API/SPI of remoting, see #2827
First iteration of documentation
Updated documentation to reflect changes in remoting
 #3023 - Adding Gradle section to Getting Started docs and clarifying which repos are available and when snapshots etc should be used.
We can't set the SHA1PRNG random source reliably from within Akka. See #2977
Buffer LeaderChanged events and publish all on convergence, see #3017
Hardening of another corner case in cluster singleton, see #3017
Connection based UDP fixed
Catch InterruptedException in the dungeon and mark the thread as interrupted. See #3006
some small fixes to typed-channels.rst
Updated tests to work (or be disabled) on Win
Use configured hostname instead of getHostName, see #2997
Bind failures are now explicitly reported instead of swallowed
Various minor changes:  - added forwarders to SO objects to Inet  - added batch read support for UDP  - changed write for UDP  - SimpleSender is now registered as everone else
Shutting down the LARS test driver too early might fail one of the tests. See #3005
Added connection style UDP (not working fully yet)
Eliminated KickStartDone and using ChannelRegistered
Failed commands in SelectionHandler are now notified in a nicer way.
Factored out common manager code and SocketOptions
Rename event-handlers to loggers, see #2979
avoid wrapping messages when ask returns single type
Removed WithByteBuffer and friends
zeromq socket pinned to the thread that created it, see #2863
Preserve sender when sending to deadLetters, see #3009
Various fixes to tests
Do not try to generate ScalaDoc diagrams for akka-channels-tests since it will contain none. See #3010
Do not interrupt LARS at shutdown or tasks might fail. See #3005
DSL element for future transformations in send pipeline
remove test apidocs from unidoc
final review comments
Another LIMBO commit, but TCP now uses the unified selector
Temporary LIMBO commit, but UDP now uses the unified selector
Adding implicits and diagrams to scaladoc. See #2880
Failure detector refactoring, see #2690
fix two bugs in LARS, see #2950
Added libraryDependencies info for sbt users below 0.12.x
review comments
remove old “direct” router references, see #2978
 #2986 - Changing ActorContext and ActorRefFactory's dispatcher to return ExecutionContext
Remove work-around for sending to broken connections, see #2909
Send ChildTerminated before Terminated when AddressTerminated, see #2983
First iteration of Fire-and-Forget style UDP IO
update copyright headers
add docs on how to create child actors with channels
Generate ChildTerminated from all Terminated in RemoteDeploymentWatcher, see #2983
Share same instance of deadLetters between LARP and RARP, see #2983
make all arrows invertible
change synthetic sender’s reply type to UnknownDoNotWriteMeDown
require “Actor with Channels” by using self-typing
first cut of the docs for typed channels
correction of akka-osgi imports (missing imports)
deprecate old akka.actor.IO
clean up test output and help aggregation to pass on my Mac
move akka-io project into akka-actor’s akka.io package
make sure that InterruptExceptions are not swallowed, see #2963
fix the first of the issues: too strict test requirement, see #2950
Remove try ... catch constructs around invokations of tell, see #2870
ignore automatically assembled files in akka-osgi resources dir
Dead letters containing remote envelopes handled correctly #2959
Making sure that the current Threads' UEH is called when using Akka FJP in Dispatcher as ExecutionContext
Clarifications of cluster singleton docs, see #2895
user configuration for OSGi application bundle
Reenabling the SerializationCompatibilitySpec, now with extra bells and whistles.
Making it easier to understand where the SerializeSpec fails
Stop sending 'timeout' from ReceiveTimeoutActor, see #2961
OSGi EventHandler dynamically listen to LogService More information in logging
EventHandler using the OSGi LogService NB1: the EventHandler needs to be specified in the configuration NB2: there are some logs that appear in the OSGi prompt at starting and stopping of the Bundle
Increase remoting startup/shutdown timeoutsi, see #2954
 Alter the timeouts of the TypedActorSpec to use 'remaining' when possible
Keep the dispatcher inhabitants count balanced. See #2919
 #2913 - Adding asByteBuffers to ByteString
Adding migration docs for new Agents
 #2964 - Updating Camel to 2.10.3
 #2934 - explaining send a bit better in the docs
 #2942 - prolonging timeout for one test in TypedActorSpec to accomodate for slow Jenkins
add ReplyChannels[T] to model fully polymorphic channel forwarding
the great wrapping
the great beautification
finally found out how to splice types
use config.getBytes where appropriate
fix: skip selector when read is split up just because of ReceivedMessageSizeLimit
aggregate received data as long as there's data in kernel buffers or 'received-message-size-limit' is reached, see #2886
Updated samples to run with the new remoting #2906
Cluster singleton actor pattern, see #2895
Reversed order in which adapters are applied from config
fix checking for connection close in TcpConnectionSpec
    akka-actor and akka-osgi wrapped into one bundle (akka-osgi) taking care of the ActorSystem creation     The akka modules reference.conf are copied inside this bundle.     Every other akka module is imported optionnaly,       the same for com.google.protobuf (already imported in akka-remote)
fix CallingThreadDispatcherModelSpec, see #2821
enable EPUB output also in online build
show real error cause, not LARS shutdown failure, see #2950
add logging to LARS so bugs can actually be found, see #2950
Reversed protocol scheme order in Addresses
fix SchedulerSpec config, see #2941
reenable EPUB on sbt-site 0.6.2, see #2938
various doc fixes (spelling, wrong words, clarity)
don’t use the testActor.queue for probe.watch(), see #2915
fix-up Cluster’s complaint for too slow Scheduler, see #2904
Changed and documented new remoting configuration #2593
Added blocking handshake for outbound SSL connections #2833
Change wrong netty port conf in tests
relax too tight timing in FSMTransitionSpec
log failures in postStop, see #2928
document deadlock risk of TestProbe.watch(TestActorRef), see #2916
disable EPUB build until sbt-site is fixed, see #2938
Java 6 again; plus forgot one copyright header
LightArrayRevolverScheduler, see #2904
 Migrating Agents to greener pastures
 Migrating Agents to greener pastures
Add TCP message protocol diagrams
when the connection is established optimistically try reading before registering ReadInterest
Add missing copyright header, smaller cleanups
Add support for 'unlimited' max-channels
Rename `ErrorClose` event to `ErrorClosed`
"unseal" Tcp.Event trait
major facelift: -!-> and -?-> appear
 isProxy is internally using a single, fat, synchronized – yes, astonishing to say the least, with this we lower the pressure on that lock.
fix: make sure buffer is released in any case, also after not acked writes and when killed
prevent connection leak when temporaryServerAddress throws
Revert "Change socket options type from `immutable.Traversable` to `Traversable`"
remove explicit `selector` field in TcpConnection + TcpListener
 #2782 - Removing ConcurrentIdentityHashMap and shake this all about
Add missing case to CapacityLimitSpec
Decrease visibility of internals to `private[io]`, clean up imports
Cleanup, small fixes and more and better tests
Change socket options type from `immutable.Traversable` to `Traversable`
properly cleanup selector in tests
use proper selection strategy to try to improve test stability
added basic support for Epub generation
fix race condition when trying to assert closed channel on the server side
add more integration tests
further improve pullFromServerSide stability
improve stability of tests, pullFromServerSide now uses real selector to check for conditions
make asserting on received messages more resilient
Revert "in DirectByteBufferPool keep buffers by soft reference"
 #2775 - Adding migration guide for waiting on promises
remove commented code
improve DirectByteBufferPool and some smaller fixes
add debug helper for CallingThreadDispatcherModelSpec, see #2821
Update akka-docs/rst/general/actor-systems.rst
Terminate zeromq context after actors have terminated. See #2838
Making test more DRY. See #2862
Style change of def starting with if
more tests, smaller improvements
Unique barriers for each round in StressSpec.exerciseSupervision, see #2905
Detect failure when no heartbeats sent, see #2907
Preserving Envelopes in UnstartedActorCell as requested by Mr Pink
Clean up network connections from the test coordinator and player. See #2862
Shut down both client and server channels. See #2862
Update akka-docs/rst/general/actor-systems.rst
Update akka-docs/rst/general/actor-systems.rst
improvements from the first round of feedback, see #2885 and #2887
in tests make sure to get a server address that is highly probable to be currently unbound
use a direct buffer pool for buffers needed for channel.read/write
fix issues discussed in the pull request
fix assertion error typo
refactor tests to reuse common connection setup
tcp selector and listener actors, extension of tcp manager actor, see #2885 and #2887
tcp connection actors, see #2886
Incorparate review comments, see #2803
Publish InstantMemberEvent immediately, see #2803
Updated Netty to 3.6.1.Final #2715
make ActorRefSpec more deterministic, see #2836
update/improve design docs as background info for IO layer, see #2890
Created top level manager for TCP based IO #2887
Confirmation of throttle mode change, see #2877
Throw startup exception from Remoting, see #2872
add Tcp IO extension and first draft of settings/options, see #2888
Replace noSender in DeadLetterActorRef, see #2882
add design docs as background info for IO layer, see #2890
Add first version of TCP message protocol
Correction of within time in TransformationSampleJapiSpec, see #2875
Adjust protocol pattern in LogRoleReplace for new remoting
add testkit as a dependency for akka-io, see #2884
create akka-io subproject, see #2884
 #2879 - updating copyright info
Remove todo ReentrantReadWriteLock
Revert "Propagate statusPromise down to the actual change in throttler, see #2877"
Publish clean state when joining (PublishStart), see #2871
remove extra "the" in docs
Remove LargeClusterSpec, superseded by StressSpec, see #2786
Only client should issue an SSL handshake #2833
Propagate statusPromise down to the actual change in throttler, see #2877
add verification of ping-pong chains
add check that all channels were declared
add check for same-erasure channels
Stress / long running test of cluster, see #2786
add typed ask support
add polymorphic channels
Improve ReliableProxy resend across a slow link, see #2849
Added scope query methods to Address.
Enforcing ordering of Terminated wrt remote/local #2835
Enable blackhole tests again, see #2832
fix broken rename of nanoTimeOfLastSend
Clean shutdown of ReliableProxySpec, see #2846
rkuhn comments applied: no more extension
add narrowing from ActorRef to ChannelRef
add ChannelRef.narrow[]
add tests for parentChannel
change Recv[] from partial to total function
rename AkkaSpec.{atTermination => afterTermination}
introduce AkkaSpec.beforeTermination hook, e.g. to silence shutdown logs
Using named parameters for booleans
Added setIssueHandshake() to enable auto-handshake
remove postfixOps warnings in remote tests
remove fixed ports from RemotingSpec, see #2843
Cleaned up chaining of ChannelGroupFutures
 patriknw comments commited
Hardened flushing by sending a final "null" message
remove fixed ports from ThrottlerTransportAdapterSpec, see #2843
remove fixed ports from AkkaProtocolStressTest, see #2843
remove fixed ports from RemoteCommunicationSpec, see #2843
replace Channel[] trait with simple Tuple2 for nicer syntax
clean it up a little
add selfChannel and createChildren
half-done PoC of typed channels
Concerning akka in osgi: ActorRefProvider contains in akka-cluster or akka-remote bundle are not found by the akka-actor bundle, thus exposing those if required
Let the ActorSystem find its configuration outside of the bundle, in the OSGi etc directory, following this order:     etc/bundle-BUNDLE_SYMBOLIC_NAME.conf     etc/bundle-BUNDLE_ID.conf     etc/akka.conf     akka-actor classpath config (using the original  OsgiActorSystemFactory.actorSystemConfig method.)
Switching to ByteString in FSMDocSpec to get rid of warnings in pattern matching
 #2848 - Removing the UUID from AkkaException
Turning off stacktraces for ConnectException, to cut down the noise in the logs
update multi-jvm docs for scalatest 1.9.1
update to CrossVersion.binary deps
Moderate restructuring of NettyTransport
update link of migration guide to 2.0.4
Minor restructuring of the EndpointWriter
update to staged 2.10.0 release, CrossVersion.binary, see #2684
Minor cleanups in new remoting
Check routees in a better way in ClusterRoundRobinRoutedActorSpec, see #2801
Harden ResizerSpec a bit more. See #2822
Bump allowed times to 20 seconds since MemberUp comes later now. See #2820
Allow allow-core-timeout=off conf of PinnedDispatcher, see #2856
fix sometimes-off-by-one in PeekMailbox, see #2851
discuss message delivery guarantees in more detail, see #2783
Minor boyscouting substituting a null for Actor.noSender
 #2841 – remove stack traces from new remoting exceptions
Add java.util.logging to contrib toc, see #2837 (cherry picked from commit 1ed4e9f2efa98f92942d4a047e85be982f3c8c50)
Introducing OnlyCauseStackTrace trait
Adding NoStackTrace to EndpointException to save a couple of meters of log output.
Get more logs if SupervisorHierarchySpec fails. See #2836
Changed protocol fields from "akka" to "tcp.akka"
Use version 0.3.5 of sbt-multi-jvm plugin. See #2791
Load build time system properties from a file. See #2791
Marking blackhole tests as ignored. See #2731
round up ticket workflow in CONTRIBUTING
Workaround for tests relying on accurate throttling  - increased default capacity of token bucket in testconductor (Player)
 #2818 - prolonging TypedActorSpec timeouts for the Option-returning methods to avoid slow jenkins barfing
Updating Akka to Scala 2.10.0-RC5
Changed to enabled retry gate by default, when testtransport is used
 #2815 - ensuring that the state given when stopping is the one seen onTermination
Reenabled ignored cluster tests
Rewriting the fix to PatternSpec
Removed explicit usage of null as root cause for EndpointException
Removed implicit conversions from ActorRef to AssociationEventListener and HandleEventListener
Implemented strictly ordered shutdown between remoteDaemon and transport in RARP.
Removed Await in creation of the manager actor of actor based transport adapters.
Added clarifications to driver-adapter stack building method
Added flushing shutdown to Remoting
Improved protocol driver stack initialization sequence
Integration with the TestConductor
- Removed usage of nulls from Remoting - Eliminated dangerous closed-over states in Props usages
Made RemotingEvents sealed and final
Adding migration docs for the Scheduler changes.
 #2742 - making reuseAddress default false on windows with option to turn it on for everybody or off for everybody
 #2721 - Adding implicit sender to Scheduler + tests
 #2810 - Adding a Java API for JavaSerializer.currentSystem + added tests
 #2726 - removing a potential race between initializing the ReliableProxySpec
 #2722 - Making AskableActorRef a value class (cannot be made an implicit value class and retain correct behavior)
Remove check of heap max value, see #2793
more documentation fixes
allow cross-versioned akka-kernel deps for dist task to work, see #2807
 #2799 - forwardporting the fix to allow null reponses to TypedActor calls
 #2673 + #2674 - Seq[Byte] becomes ByteString and Frame gets removed, lots of cleanup in ZMQ API
java.util.logging backend for ActorLogging system, see #2805
 #2776 - deprecating and introducing alternatives for methods and parameters ending with '_?'
Change cluster MemberEvents to only be published on convergence. See #2692
min-nr-of-members and registerOnMemberUp, see #2306
Publish AddressTerminated after a member is Downed/Removed, see #2779
camel: ticket #2781
make pinned dispatcher available in sbt console
Imports fixed. Corrected akka 2.1 releated changes.
fixed imports
Moved example code, fixed indentation in SupervisedAsk
 #2778 - make thread names unique per system
Incorporate review comments and cleanup isAvailable, see #2018
Tests for the Cluster JMX API, see #2018
DOCS: corr then -> than, see #2757
DOCS: Correct ScalaVersion in microkernel Build sample, see #2758
DOCS: Remove reference to non-existing bundled sample, see #2753
DOCS: tick-duration.tick-duration, see #2748
Don't use top level actor in PriorityDispatcherSpec, see #2745
Adjust backoffThreshold in ResizerSpec, see #2763
Load Cluster extension from ClusterActorRefProvider, see #2704
Await leader in awaitUpConvergence, see #2752
Removing the boolean var in UnstartedActorCell and replace it with an inspection of lookup and underlying.
#2644 - doc FSM.NullFunction and when-requirements
#2746 - document provider.getDefaultAddress
 #2747 - warn against use-dispatcher-for-io
Adopt ResizerSpec, resize not triggered by CurrentRoutees, see #2725
Streamline tell and applyRoute in RoutedActorCell, see #2725
Streamlined configuration, transport adapters and FailureInjector
 #2755 - fixing the JMX_CLIENT_CLASSPATH
 #2754 - adding the stopping of 0mq actors in the Java doc example as the Scala version has.
 #2709 - Adding documentation for wildcards in deployments.
Eliminate race in RoundRobinRoutedRemoteActorSpec, see #2725
Adding the correct, published, version for the zeromq binding for scala 2.10.0-RC3
Updating to Scala 2.10.0-RC3
Scalariforming
drop extra space between main class and bootable (cherry picked from commit a6c6078c58cf16918f8e0c58fe1beb6ed79354c6)
introduces new setting for a Bootable to sbt plugin (#2701)
fix lookup of top-level’s children, see #2675
Cleanup according to comments
Hardening the tests in cluster sample, see #2654
Hardening the tests in cluster sample, see #2654
Mark tests that use unstable experimental features as ignored. See #2654
Don't replace the active connection with a passive one. See #2654
 #2718 - Adding version range OSGi importPackage for Protobuf
Return only the changes to the SubclassifiedIndex. #2738
Correction of router with resizer doc sample, see #2740
Reset StreamCache in getBodyAs to be able to re-read it, see #2724
ticket #2739 fix. Also removed author tags since that's so 1990's
Simplify MetricsGossip and NodeMetrics merge, see #2547
Roland found a nasty race between activate in supervisor and locally, this commit should fix it, and rename activate to point
-Xmx256m for multi-node jvms, see #2547
Hardening AdaptiveLoadBalancingRouterSpec, see #2547
Correction of doc of unhandled, see #2736
 #2575 - attempting to fix RepointableActors
DOC: Formatting issues, see #2723 (cherry picked from commit 15abee84875cdb534056986b9172a38b57d24d92)
clarify internal nature of ActorRefProvider impls
add ActorRefProvider.getDefaultAddress, see #2732
#2719 - removing deployReadme from Dist task since it isn't used or needed.
#2729 - Removing uses of Future.either in favor of firstCompletedOf
#2720 - Adding OSGi manifest to testkit
Attempting to hunt down and find the race in the RoutingSpec
Simplifying the code inside Children and RepointableActorRef
Attempting to hunt down and find the race in the RoutingSpec
Several fixes of the Remoting and Endpoint
Removed cross layer dependencies
Added defaultAddress() to RemoteTransport API
Ported threadpool limiting to the new NettyTransport
#2717 - Changing names of the PojoSR constants to be more Scala-like and switching to FiniteDuration instead of Long
Allow fallback classloader to be explicitly specified (cherry picked from commit f51a2894150e0f5cc6923b8e3aa42d7ebdd6663d)
Minor RoutingSpec refactoring
Adding return type on foreachChild
Clarifying docs in ActorCell
Making RoutingSpec a bit more elaborate, to put pressure on the implementation
Adding ConfigSpec test for unstarted-push-timeout
Silencing unhandled message in IOActor
#2703 - unprivatizing NoLogging and adding a Java API for obtaining the reference
#2710 - requiring sender and recipient of DeadLetters to be non-null
Rewriting PriorityDispatcherSpec not to rely on suspension
Adding return type on foreachChild
Clarifying docs in ActorCell
Making RoutingSpec a bit more elaborate, to put pressure on the implementation
Adding ConfigSpec test for unstarted-push-timeout
Silencing unhandled message in IOActor
Add Typesafe repo in cluster sample, for sigar, see #2547
Incorparate more review feedback, see #2547
Incorparate review feedback, see #2547
Increase within timeouts in cluster sample tests, see #2699
Cleaning up after 2.1.0-RC2 staging
Update doc with correct version of ScalaTest
Building with 2.10.0-RC2 and all dependencies that are published.
Release script instructions added.
Preventing the TimerBasedThrottlerSpec printing to the console
make HashedWheelTimer tolerate wrap-arounds, see #2686
Switching over to immutable.Iterable where possible
AdaptiveLoadBalancingRouter and more refactoring of metrics, see #2547
amend one place in docs referring to blocking system.actorOf
Switching to immutable.Seq instead of Seq
ClusterLoadBalancingRouter and refactoring of metrics, see #2547
Initial work of adaptive metrics aware routers, see #2547
#2688 - Switching to s.c.u.Unsafe.instance for akka.util.Unsafe.instance
fix two old Duration references
fixes to accomodate time dilation in tests and minor issues from reviews by @rkuhn and @patriknw
fix up two oversights in previous doc change
correct small confusion (short: confuso)
removed `remaining` argument in `expectNoMsg` calls in tests
change Java stash sample to become(), see #2642
better document become semantics, see #2683
align Act.become with context.become, see #2682
Update build and sbt plugin to sbt 0.12.1
make FSM.receive overridable, see #2680
Unbreaking poolsize for everybody.
Use undefined metrics value for negative load average, see #2664
more tests and bug fixes
Allow negative Load average in test, see #2664
make timing requirements for lenient for ReliableProxySpec, see #2637
paragraph is not a dollar. I promise.
Adding pool size for both use with dispatcher as without.
Missing variable assignment, see #2677
Correct and update the SbtMultiJvm documentation. #2671
Improve MultiNodeSpec ifNode syntax. #2126
contribution module throttle
Removed Java7 API call
Use withDefaultValue instead of withDefault
Correction of remote-tests-experimental proj name
Limit the number of netty worker threads based on configuration. #2659
Use full address when hashing routees, see #2657
#2661 - Changing ignoreMsg of TestProbe to take a PF from Any instead of AnyRef, to support primitives
New Remoting implementation (iteration 3) #2053
#2655 - Hardinging the LocalActorRefProviderSpec
MatchError in RemoteDaemon case AddressTerminated, see #2660
Added remoting lifecycle event classes and event publisher
Update akka-docs/rst/general/supervision.rst
Wrong message ordering in ClusterDomainEventPublisherSpec, see #2648
Eliminate glitch that caused job to be sent to deadletters, see #2630
Repointing the link for the downloads.
Include generated pdf in online docs
Update release script with new repo.akka.io details
#2646 - Replacing most usages of JavaConversions by JavaConverters
#2643 - Removing the use of Await in the Future documentation, promoting the use of callbacks
Correction of 2.1 migration guide
#2623 - Adding a @github@ substitution for links to github, as well as adding a pointer as to where to find the example code for the docs.
Even better assert message in case of failure of assertLeader, see #2641
Better assert message in case of failure of assertLeader, see #2641
Updated CONTRIBUTING.md file with new doc template project name project.
#2628 - make HelloActor and WorldActor public static classes
mention “import context.dispatcher” in the docs, see #2638
Typesafe Config had an inappropriate version range in the OSGi manifest, correcting it.
#2635 - Removing Akka OSGi modules out of the dist, they should be opt-in
Excluding jfree:jcommon and jfree:jfreechart from uncommons-maths
Only disabling the binary jar from the Akka samples, not the source jars etc.
Removing the now redundant module doc for camel
switch groupId for scala-stm
fix small CSS issue in docs (overlapping DIV tag)
Bumping the version of Akka master to 2.2-SNAPSHOT
Solve wrong barrier problem, see #2583
Patrik’s comments: change CircuitBreaker to Runnable
Updating to the zeromq release for 2.10.0-RC1
remove some FIXMEs
Mavenize java akka-sample-cluster
Update akka-docs/rst/dev/developer-guidelines.rst
put in sonatype repo for scala-stm
Config lib v1.0.0, see #2611
mention stateName in FSM unhandled messages, see #2617
clarify need to carefully managing blocking, see #2616
review comments: Duration.parse and FIXMEs
#2619 - make read first in the developer guidelines a ..note::
Capitalize extractor
actually build the samples
update versions for Scala 2.10.0-RC1
Make it possible to pass -D and -X args to multi jvm/node tests, see #2618
Corrected mixup in migration guide.
Removing rst_html and rst_latex
Clarifying setReceiveTimeout examples after review
Change RemoteActorRef to not start before it's been published. #2575
Adding link to CONTRIBUTING.md in developer-guidelines.rst
Increasing timeouts for FutureDocTestBase to avoid Jenkins being too slow.
Adding SBT transient project config classes to .gitignore
#2613 - Harmonized the Akka CONTRIBUTING.md with the Typesafe Developer Guidelines
#2612 - Clarifying ReceiveTimeout semantics in the documentation.
Applied discussion results to implementation and documentation.
slf4j 1.7.2, see #2615
More Duration cleanup, and changed use of ScalaNumber to ScalaNumericConversions. #2504
Logback and slf4j dependencies, see #2615
Adjust barriers/checks in LeaderElectionSpec, see #2583
LogRoleReplace filter out ESC characters
move Duration classes according to scala 2.10 nightly and remove casts to FiniteDuration, see #2504
Changes according to review. #2575
config lib 0.6.0
Start actor after it can be resolved with actorFor. #2575
2609 Typo in method name for ClusterRouteeProvider
Diagnostics for failing test, see #2583
Move state of ClusterHeartbeatSender to separate immutable class, see #2284
Incorporate review comments, see #2284
Adjust the failing assert in SingletonClusterSpec, see #2582
Wrong remoteConfig
Test tags should be opt-out and not opt-in, see #2600
Changes according to review. #2513
Use consistent hash to heartbeat to a few nodes instead of all, see #2284
URLEncode heartbeat sender child names
Move heartbeat sending out from ClusterCoreDaemon, see #2284
fix link to CLA
Adjust the scaladoc note as suggested, see #2586
Java Pattern - Exception propagation in actor hierarchy using supervision
fixed timing test when response is not sent by actor
add small hint for programmatic remoting config, see #2604
Changing the default sender of ! to be Actor.noSender to keep null in one place and have a logical alternative when deadLetters isn't present in scope.
testTransport in ReliableProxySpec, see #2586
Document how to schedule periodic messages from an actor to itself. #2513
Avoid TestConductorTransport unless needed, see #2586
Don't decode path in RelativeActorPath, see #2603
Wipe @author tags
Incorporate feedback, see #2502
fix one warning in UntrustedSpec
Adding addressTerminated to UntrustedSpec
fix message laziness
#2601 - upgrade to Scalariform 1.0.0
clarify what restart means, see #2508
implement untrusted mode, see #2573
Remove refactoring residue, see #2502
Java version of Cluster usage documentation, see #2502
Additions for Java API of cluster, see #2502
 Review comments. #2049
Minor doc and API cleanup for Test Conductor. See #2049
Revert "CAMEL: Used endpoint replyTimeout in processExchangeAdapter, fixed ActorProducerTest which did not wait for completion"
CAMEL: Used endpoint replyTimeout in processExchangeAdapter, fixed ActorProducerTest which did not wait for completion
DOC: Minor improvement of circuit breaker example.
Correct sbt example usage of MultiJvm plugin in docs.
#2581 - removing 'running' from RemoteActorRef as discovered unused by Endre.
Publish cluster metrics through the publisher actor.
Add docs publishing
Too long line in code. #2553
Bumping sbt-site plugin to 0.7.0-M1
fixes based on review comments
integrate akka-contrib docs into akka-docs build
Update enabling of sphinx pdf generation
Use sbt-site plugin to generate sphinx docs
add ReliableProxy pattern to demo akka-contrib
reference akka-contrib from CONTRIBUTING.md
add akka-contrib area, see #2553
Include dispatcher id in thread name of pinned dispatcher, see #2585
Three more tweaks. #2413
Mute expected unhandled msg, see #2010
Mute deadletters in ScatterGatherRoutedRemoteActorSpec, see #2010
Skip exception msg check of UnknownHost, see #2010
Additional assert, see #2550
Reformating configuration and examples for PDF (Scala, and leftovers). See #2413
Reformating configuration and examples for PDF (Java). See #2413
Mute expected log messages, see #2010
Make multiNodeTargetDirName configurable by system property, see #2580
#2578 Minor cleanup of 'Why Akka' in docs
#2577 Minor cleanup of 'What is Akka' in docs
#2576 Correct usage of alumni to alumnus on Team docs page
Avoid to load Google Custom Search API for offline docs.
Adjust order of receive of Terminated in SystemGuardian, see #2552
Review feedback fixes. #2561
Refining the Google site hint
Adding initial slash to post-hostname in google custom search
Adding site directive to Google Custom Search
Cluster.unsubscribe with class parameter, see #2567
Separate class for SystemGuardian, see #2552
Use deadline for reconnect window in remote Client
Incorporate review feedback, see #2550
Typo corr, add Helena to the list of committers
Add Helena to the list of committers
Manually reformatting camel reference config docs
Adding the current doc version as an additional parameter for the search
Removing non-needed section for version numbers in the AkkaBuild
Removed a couple of println outputs in Logger
Minor cleanup in SubclassifiedIndex
Incorporate review feedback, see #2552
Minor code restructuring for SubchannelClassification
Add test for Switch, see #2569
Verify proper shutdown when remote deployed actor, see #2552
Perform Terminate removeChild under the terminating lock also, see #2552
EventBus now handles adding and removal better. See #2561
Capitalizing Camel Settings constants.
Too tight timout/within in FSMTimingSpec, see #2548
Switching to not initializing loaded classes up front and cleaning up the test case.
foreachChild instead of allChildren, see #2552
Add some extra safety to Guardian termination hook, see #2552
Use whileOff instead of fold to avoid confusion, see #2552
Correct logic in Switch.whileOff, see #2569
Adding more rigorous tests for ByteArraySerializer
#2499 - Adding ByteArraySerializer and change ReflectiveDynamicAccess to use Class.forName with classloader instead of classloader loadClass directly.
clarify purpose of ActWithStash
Restructuring the CamelConfigSpec for fun and profit
#2568 - Adding the ability to configure body conversions in the config file.
Clarifying how max-pool-size-x is determined
Revert wrong changes in ClusterConsistentHashingRouterSpec
Clean up remote-deployed children when target node goes down, see #2550
camel fix for the situation that the test can send to deadletters or may not, so it should not assert on the event filter in ConcurrentActivationTest
fix scalariform error, cant handle the 2.10 string interpolation syntax
Minor tidying up in CamelMessage
Unborking ActivationTrackerTest
Tickets  #1924 #1925 #2383 #2387 #1927 #1926
#2082 - Adding conditional google search bar into the online version of the Akka docs
Remove race when terminating, see #2552
Adding unconditional Google search bar to the html docs.
Incorporate review feedback, see 2551
Clarifying the core-pool-size-factor and parallelism-factor in the reference.conf documentation.
Terminate remote deployed actors when parent node goes down, see #2551
Terminate remote-deployed actors when system shutdown, see #2552
EventStream should publish to all matching traits. See #2525
export supervision tools in Act trait, and other review fixes
Race in LeaderLeavingSpec, see #2549
replace/add READMEs for the samples (keep it simple)
NPE in SunnyWetherSpec, see #2544
document ActorDSL, see #2411
Removing unused expression
Cleaning up a merge fault in the MetricsCollectorSpec
Simplifying a metrics collection test
Minor cleanup in MetricsCollectorSpec
#2546 MetricsCollectorSpec assertion modified for heap mem max in relation to used and committed.
Making sure that akka-docs also has the CPS plugin enabled, for the dataflow doc spec
Removing apparently superfluous resolvers
Cluster metrics internal API and cluster-wide transport of metrics data. * Create Cluster Metrics API * Create transport of relevant metrics data Does not include load-balancing routers.
Adding docs section in the CONTRIBUTING.md about experimental modules.
TestConductorSpec failure, final barrier missing, see #2440
Update CONTRIBUTING.md
Adding Code Reviews section and Source style section to the CONTRIBUTING.md
Docs reformatting for adding the durable mailbox test fixture
Minor cleanup of ls-sbt config
Removing weird artifact id in durable mailbox.rst
Don't await the write of shutdownSignal to openChannels when shutting netty, see #2535
Update CONTRIBUTING.md
Adding a CONTRIBUTING.md
#2097 - Adding ls-sbt for all akka projects.
say "IO support" in docs (avoid "module")
minor edits to cluster-usage doc
Removing warning about not touching instance fields in receive
fix akka-docs build after sphinx run
Adjust paths, see #2437
Cleanup after merge.
Hide Echo actor impl from docs, see #2537
Minor correction, see #2437
Move phi images to new dir, see #2251
now hopefully fix it for real (no guarantees, it just works here)
Improvements based on feedback, see #2251
make it work with Java 6 (aargh)
add some comments, fix experimental status of cluster
Correction of Java doc Creating Actors Remotely, see #2537
add preprocessor for RST docs, see #2461 and #2431
Unborkening DataflowDocSpec
Changed order of sections and additions based on review . See #2349
Adding Caveat for Death Watch of Remoting into the Scala section as well.
Doc changes after review of PR 724
Describe how to write cluster test, see #2437
2378 review fixes
The unborkening of the plugins publish
Multi Node Testing Docs and Sample. See #2349
Cleaning up dataflow docs a bit
More work on Dataflow docs
Describe cluster failure detector and phi, see #2251
Move heartbeat-interval into failure-detector section
DAtaflow doc start
Changed weird quotes in scaladoc. See #2528
Minor corr, fqcn of CARP
Switch to ConistentHashingRouter in cluster sample
Test consistent hashing router with cluster router, see #944
Changed multinode properties used by MultiNodeSpec. See #2528.
Adding regression test for DataflowSpec
Update to the latest community build.
Further improvement of selectDeploymentTarget based on feedback
Use named parameters to Deploy, avoid strange path param
Use Either for LeaderChanged state, see #2518
Disable remote logging
Cluster config setting to disable jmx, see #2531
Cluster doc of JMX and admin script, see #2014
remove all but one occurrence of single-arg tell()
Removing compilation warnings.
Remove duplicated multi-node-log-replace, it's in scripts/
#2402 - Cleaning up repositories used by the AkkaBuild
clarify migration doc re: java samples
Add another test case for publish of LeaderChanged, see #2518
NonFatal not needed in Try recoverWith, see #2496
#2519 - Clarifying watch/unwatch and adding reference to DeathWatch
#2511 - clarifying that all magic comes from ActorContext
#2510 - fixing above to beneath
#2507 - changing doc of explicit to implicit
#2506 - Clarifying dead letter docs.
Minor Serialization performance improvement.
more conversion to FiniteDuration, plus fix the build, see #2521
Support load of extensions without specifying trailing $, see #2496
Publish cluster LeaderChanged only when convergence, see #2518
closes #2520: Improve wording of 2.6.2 note box
#2512 - Typo in docs
#2492 - Skipping publishArtifact for sample libs
#2492 - Dropping the samples from the dist, still published though.
Make multi-jvm-tests compile with normal tests (again). See #2316
Minor cleanup
Remove graphviz diagram generation in docs build, see #2505
second round of FiniteDuration business, including cluster fixes
fix two relative imports in Agent.scala
various documentation patches, found at the bottom of my inbox
make TestKitBase.testActor strict, see #2514
ClassTag to construct arrays, see #944
Some optimizations for the ConsistentHashingRouter
Clean up akka-file-mailbox for OSGi. #see 2497
Clean up akka-remote for OSGi and re-enable OSGi bundles. See #2497
Rename a few things, see #944
Remove router benchmark, see #944
Java doc sample for consistent hashing router, see #944
Disable OSGI for now.
Handle FromConfig in withFallback also, see #944
Incorporate minor review feedback, see #944
Simplify selectDeploymentTarget
comment on evil lazy val trick in FSMActorSpec
unb0rk akka-actor-nightly build
Complete unfinished ConsistentHashingRouterDocSpec, see #944
Remove note about redis client, completely different impl, see #944
Support partial function to map message to hash key, see #944
Optimized ConsistentHash with array and binarySearch, see #944
clarify limitations of `def receive` in Scala, see #1842
Correction, get from ref first, see #944
Use tuple to update ConsistentHash and routees together, see #944
#2489 - Remove ConnectionManager
Improvements based on review feedback, see #944
Move MurmurHash to separate file due to license header, see #944
Cluster documentation
Handle empty availableNodes, see #2103
move code snippets into compiled files for duration.rst, see #2462
Updated docs with new sbt-multi-jvm versions and names. See #2494
Changed sbt-multi-jvm version and naming according to plugin guidelines. See #2494
Typo in docs. #1802
Removed all dependencies to ScalaTest in the published artifacts. See #1802
Added missing copyright header. #1802
Make variable private to stop missuse. See #2368
Request send/publish of CurrentClusterState, see #2438
Cleanup based on review. See 2368.
Also changing the publishTo target for the plugin as per Josh Suereth's suggestion
Documentation of constent hashing router, see #944
Implement ConsistentHashingRouter, see #944
Make ConsistentHash immutable, see #944
Pick correct node at the ring boundary and change to TreeMap, see #944
Rename to allowLocalRoutees in code also, see #2103
Improvements based on review comments from √, see #2103
Unbork wrong merge of ClusterDeathWatchSpec
Remove println in test
#2488 - Deleting the NonFatalSpec, is tested in the stdlib now.
Incorparate review feedback, see #2455
Resume before you create the new actor instance.
Ignoring stress test in SuperVisorHierarchySpec while working on fix. See 2368
Add comment about attachChild
Explain use of existenceConfirmed, see #1588
Mark cluster as experimental, see #2455
Actor failure during creation means Recreate must be turned into Create. See #2368.
Removing the smartypants setting from setup.py
There was an error in the placement of the smartypants setting, fixed that and added exit code to the output if pygment installation fails.
Make RoutingSpec more robust, see #2484
Incorparate feedback from rkuhn, see #2103
Deploy not needed for programatically defined cluster router, see #2103
Actor failure during creation means Resume must be turned into Create. See #2368
Move test of AkkaSpec to test again.
Make akka-testkit and akka-remote-tests contain enough for MultiNodeSpec. See #1802
attachChild in ClusterRouteeProvider also, see #2485
received Supervise from unregistered child Actor, see #2485
#2472 - making the akka-sbt-plugin publish via Ivy, and removed redundant OSGi settings from AkkaBuild
Improve ClusterRouterSettings, see #2103
Change to correct signature of java registerRouteeFor, see #2482
Move package file to correct directory, see #2103
#2441 - Updating howto.rst to include all the summer of blog posts and removed the howdoi.rst
#2432 - turning off smarty pants so that our quotes don't get mangled in code samples.
Incorparate review comments, see #2473
Add missing Java API in RouteeProvider, see #2482
unbreak the akka-actor-nightly build
#2427 - Hiding AkkaSpec from FSMDocSpec
Switching to autoselecting scala version for the artifact of akka-cluster
Lookup of cluster routees, see #2103
Adjustments based on feedback, see #1588
Add deploy-on-own-node setting for cluster router, see #2103
Revert "Reduce exposure of ActorContext to RouteeProvider"
#2478 - switching Typesafe Config dependency to 0.5.2
Adding migration docs for the Either => Try changes as well as cleaning up a couple of imports
Longer timeouts in CircuitBreakerMTSpec, see #2474
#2469 - Switching to scala.util.Try instead of Either[Throwable, T] in the codebase
Race in initChild. See #2439
(oh snap, had increased thread count in AkkaSpec)
add even more logging
Direct failed remote sends to deadLetters, see #1588
Docs update for escaped characters in names, see#2123
Maintain AddressTerminated subscription in DeathWatch, see #1588
DeathWatch must only notify when watching, see #1588
make logging more voluminous in SupervisorHierarchySpec
make logging more aggressive in SupervisorHierarchySpec
Bumped version of multi-jvm to 0.2.0-M5 and override multi-node-java. See #2443
Remove concurrent access to testconductor ClientFSM, see #2456
Prototype of death watch hooked up with failure detector, see #1588
Change timouts to 'remaining' in RoutingSpec
#2463 - Making it possible to configure the Deserializer for 0MQ and fixing an exhaustiveness check in patmat for SocketOptions
Patching CoordinatedIncrementSpec to try avoid failing on jenkins when timeout is too long
Avoid / by zero in SmallestMailboxRouter also, see #2442
Some clarifications from review, see #1916
Incorporate review comments, see #2433
The Unborkening
createRoutees also when initial CurrentClusterState is received, see #2103
Allow escape sequences in actor names, see #2123.
Clarifying in the docs that the user gets an ActorRef and not a RoutedActorRef
Adding :ActorRef to signal that actorOf returns an ActorRef for routers as well
Add missing CurrentClusterState case to tests, see #2456
Remove increased leader-actions-interval, since it's false safety, see #2444
Removed racy test, covered by MembershipChangeListenerJoinSpec anyway, see #2444
#2436 - Changing typo in untyped actor code
Clear out interrupted flag before we recurse. See #2454
Clarified that the Future is in the Scala Standard Library. See #2314
Organize imports, see #2103
Test cluster router deployment config
Describe API changes for custom routers in migration guide
Make sure that compile in test will compile MultiJvm test as well. See #2316
Reduce exposure of ActorContext to RouteeProvider
Reintroduced preRestart override for Stash and added Stash-changes to the migration docs
Changing Doc from Akkas futures to Scalas futures and cleanup of examples. See #2314
Use the router actor as cluster listener, see #2103
Adding migration notes around the removal of Props(ActorContext => Actor.Receive)
Unregister routees living on removed node, see #2103
Support programatic declaration of cluster router, see #2103
Deploy to new members in cluster, see #2103
#2396 - Removing the Props.apply(ActorContext => Actor.Receive) method as it is superceded by the ActorDSL
#2451 - Changing so that Stash overrides postStop instead so that stashed messages are reenqueued to mailbox on preRestart calling postStop and on stop, ending up in dead letters as they should.
Add warning block
Rename local val _routee, see #2442
Better methods in RouteeProvider
Allow project scala version to be set with a property. See #2429
Avoid ArithmeticException: / by zero in routers, see #2443
Make it more intuitive for tests using real Cluster(system) extension, see #2103
Small refactoring to improve resize api
Prototype of cluster aware routers, see #2103
First part of usage doc for cluster, see #1916
Add comment about member replacement in Set, see #2202
Resizer specified in code combined with other router config, see #2433
A typo is corrected. It should be 'affect' instead of 'effect'
Add warning about passing mutable state into the constructor of an Actor
adapt release script to maven publishing
Publish-to now accepts jvm property publish.maven.central to rewire resolver to be aven central.
fix scalaBinaryVersion for sbt plugin
redo ChildTerminated() processing, see #2391"
make all tests pass again with 2.10.0-M7
disable one of Dataflow tests which depends on SI-6262, to be re-enabled later
adapt to different error messages, fix one case of Props()
port onto SBT-0.12 branch
Remove cluster-sample/README, was added prematurely
A typo in general doc: class name is misspelled
Fine grained events, see #2202
fix NullMessage handling to not be logged as AutoReceiveMessage
add even more explanation for NullMessage
add more explanation for NullMessage
add NullMessage after Supervise to prevent race, see #2418
Use pattern matching in getChild instad of flatMap in child
ScalaDoc updated
Renamed childExists to child and return Option[ActorRef]. See #2343
Add note about log-remote-lifecycle-events change, see #2406
document finite vs. infinite durations
Remove prematurly added cluster-usage.rst
Move misplaced docs/io/BinaryCoding
add more debug output in case of timeout in Stopping by collecting "not resumed"
Incorporate more review comments, see #2406
Add back migration-guide-1.3.x-2.0.x with link to 2.0 docs, see #2406
Incorporate review comments, see #2407
change settings to FiniteDuration where applicable
A typo in general doc is corrected
Incorparate review comments, see #2410
Remove references to deleted akka-tutorials in the build. See #2415
Simplified check for existence of actor child. See #2343
DOC: Describe pattern.after, see #2410
DOC: Link to patterns, see #2409
DOC: Describe how to use SSL for remoting, see #2407
Change link to Scala style guide, see #2351
Rename file to Timeout.scala
Migration guide for 2.0 to 2.1, see #2406
Akka now builds and tests with sbt 0.12.0. See #2353
boyscout some around ActorSystem.Settings
make Terminated constr private[akka]
make Terminated.uid private[akka]
add more debug printout if HierarchySpec times out in Failing
enqueue to deadLetters upon hitting timeout in UnstartedCell.tell()
Members ordered by address only, see #2405
remove child in Terminated() processing, see #2391
reserve & init guardians, so that lookup works, see #2403
Upgrade Netty from 3.5.3 to 3.5.4
Clear interrupted flag after test to not interfere with next test. See #2400
make scalariform happy (doesn’t like string interpolation)
improve debug logging if HierarchySpec gets timeout in Stopping
Removing old or incomplete parts of the multi-jvm docs. See #2399
Updating to sbt-multi-jvm 0.2.0-M4. See #2398 (cherry picked from commit a4d4eb611641c93ea14ab6e0818b01bf9b93574e)
fix up RemoteConfigSpec
last round of fixes, see #2376
switch remoting logging on by default, see #2397
add more information about supervisor strategies
add deadlock warning to Inbox methods
automatically reference right scalaVersion in RST
Move Cluster query methods to ClusterReadView, see #2202
Be clear about the fact that two actor systems can't have the same port. See #2389 (cherry picked from commit 0bd9aa1a6a48c84a73d7827b15a5178c1b616f43)
WIP cluster docs
inline manually CatchingSend()
InterruptedException changes based on discussion. See #2385
Make SeenChanged internal api, see #2202
fix CTD vs. RepointableRef by swallowing exceptions during send
Incorporate review comments, see #2270
sealed ClusterDomainEvent, see #2202
Improve publish of domain events, see #2202
Test for interrupt flag in actor
add tests for guardian strategies, see #2376
Better handling of interrupted exception. See #2385
Clarify JoinSeedNodeProcess, see #2270
better document top-level supervisors, see #2366 and #2386
More aggressive testing of startup order, see #2270
sealed Tick, see #2270
Join seed node in separate actor, see #2270
review comments (Viktor), see #2376
Remove ClusterEventBus and system.eventStream, see #2202
Support concurrent startup of seed nodes, see #2270
Code Scouting after review. See #2339
#2384 - Adding implicit EC for activation and deactivation future call
Suppress OSGI printing to stderr unless a test fails. See #2339.
Quiet down the camel tests. See #2339
DOC: Link to online CLA signing, see #2380
Publish cluster changes to event bus, see #2202
Clarifying that Props is immutable
make guardian supervisorStrategy configurable, see #2376
Using -C instead of -r for the ScalaTest reporter
#2370 - making sure that all artifacts that are exported actually are bundles.
Improving IOActorSpec after review
#2375 - disable JMX for Camel by default, add configuration setting for it. Also add docs to the settings and harmonize Camel settings to Akka standard.
incorporate review comments
Change scalatest -r to -C, see #2374
Remove workaround for SortedSet bug SI-5986, see #2286
Adding more ScalaDoc to dataflow api
#2372 - Making RemoteActorRefProvider public since it is in the signature of RemoteTransport, which is public
correct reference to scalaVersion in docs
ticket #2322  updated camel to 2.10.0 ticket #1928  added camel samples to a proper sample project
fix the DSL with stash, see #2364
adding tests and comments, see #2362
Some initial work on lightweight actor creators, see #2362
bring ScalaDoc up to date, see #2362
rework ActorDSL.Inbox, see #2362
Make sure that akka compiles with JDK 7. See #2041
work some more on ActorDSL’s Inbox feature, see #2362
add throws clauses to Java APIs
Forwardporting the adding of throws clauses on the Java API for Function, Procedure etc
add comments explaining the new ActorCell UID, see #2363
switch to AbstractPartialFunction, see #2357
Adding a IOManager.Settings type and adding ConfigSpec validation for the io module
Merging with master
fix wrong failure processing after child name reuse, see #2363
Review fixes, adding descriptions of the io-configuration parameters
add ActorDSL object with receiver methods, see #2362
Upgrade to Netty 3.5.3.Final as suggested by Björn Harrtell
ease debugging of SupervisorHierarchySpec with more precise logging
(re)move akka.japi.*PartialFunction and optimize TestKit, see #2357
Making it possible/mandatory to signal which ExecutionContext will actually execute something scheduled
clarify ScalaDoc of SupervisorStrategy
some cleanup after Viktor’s comments
Manual merge with master
Moving the Dataflow package.scala into akka/dataflow
test exceptions from actor constructor in hierarchy, see #2336
#2360 - Upgrading Typesafe Config dependency to 0.5.0
Adding old Dataflow tests, passing like a baws.
Initial port of Dataflow API, added it as its own subproject, switched to implicit value classes with cps transformation annotations
#2358 - Explicitly excluding the slf4j-api dependency from Camel to only use Akkas slf4j version
add terminating children during restart to stress test, see #2336
Replacing if-statement with epic usage of Math.max
Major cleanup in HWT, Making the Timeout a static class to be able to use Unsafe instead of AtomicInteger. Sprinkling finals and changing code formatting.
simplify HWT logic and make better use of inaccuracy, see #2354
stress test also the Stop directive, see #2336
Clarifying reference documentation regarding connection-timeout
Adding support for task batching complete with tests
Code formatting
Making read buffer size, select interval and default backlog size configurable in .conf and making it possible to override backlog on a per-Listen basis. Also Adding causes to a could of cleanup calls.
clean up hierarchy’s log stashing in preparation for remaining TODOs
Initial IO work
test exceptions during recreation, see #2336
Removing the now not-needed dep on scala-reflect.jar
make actor-related exceptions be case classes for matching
Formatting: sequence should be formatted as traverse
Dropping the use of ExecutionContext.MODULE$
verify preRestart is not called twice, see #2336
randomize hierarchy setup and test Escalate, see #2336
Switching to Futures instead of Actors for seeding the FutureSpec
make random router test less random, hopefully fixes #2293
Adding more SerialVersionUIDs
#2338 - Akka Sbt Plugin now in build
#2261 - adding rewrites of Akka github urls to solidify on release
#2348 - SI-4804 is fixed so enabling serialversionuids
Updating version range for OSGi
make suspend-test deterministic
fix broken comment
extend comment explaining “online version of docs”
Revert "restrict Sphinx tasks to akka-docs cage"
Updating to Scala-stm 0.6
Updating Scala-stm to 0.6
merge with master
restrict Sphinx tasks to akka-docs cage
Uncommit me
sphinx: run easy_install in the right directory
fix REPL cmds for postfixOps
remove guardian’s reply for StopChild, see #2221
Adding postfixOps to CustomRouteSpec
change timeout of hierarchy stress test to 30.seconds.dilated (takes 10 on my box)
Scoping scalac and javac options to Compile
Importing language features used by akka-cluster and akka-remote-tests
A suggestion how things could be done otherwise.
add docs for ExtractRoute, see #2337
Removing awaitActivation and awaitDeactivation and just retain the future-returning methods as to promote not to block.
fix up multi-jvm tests
Tagging some tests in ActorProducerTest as timing sensitive
Making sure that the multi-jvm tests compile
Setting an appropriate sizehint for format in Logging, and removing a superfluous FIXME
Adding a warning for adapted args and fixed the issues associated with it
Avoid endless loop in ScalaDoc
Correcting erronous code links
Added warning section about dealing with exceptions when using futures
Added warning section about dealing with exceptions when using futures
Hopefully correcting the FSMTransitionSpec and a ScalaDoc issue with mailbox.scala
Corrected grammar errors that Viktor Klang identified in first paragraph of "What is Akka?".
Stab at fixing more tests with timeout issues on Jenkins
Adding notice that Dataflow has been temporarily removed in 2.1-M1
#2341 - enabling -deprecation in AkkaBuild and subsequently fixing tons of deprecation warnings
Scalariform
Corrected grammatical errors.
Corrected some grammatical errors in section "What is Akka?".
Update README.textile
#2221 - Making sure that ActorSystem.stop doesn't throw exceptions
add akka.testkit.ExtractRoute, see #2337
ALL GREEN BABY
Merging with master
fix SupervisorHierarchySpec
fix two language feature warnings
remove CPS stuff from AkkaBuild (breaks eclipse)
Adding import language.implicitConversions for Member.scala
#2335 - Adding better failures to AskSupport and added clearer error messages
review of docs processed
made receive and onReceive final in Producer
more review
Making it green
small fix in stringifying ActorInitializationException
Prettify dependencies
Chaning an implicit val to an import of that value
Removing akka.util.NonFatal and replacing it with scala.util.control.NonFatal
Making FutureTimeoutSupport more robust
Removing ExecutionContext from some signatures in Future.scala, changing copyright to Akka for BatchingExecutor
processed code review, still have to do docs comments
Making sure that akka-remote and akka-remote-tests compiles and that tests are green
Removing Specs2 as a dependency to remove the hassle of keeping track of available versions
Rewriting the event loop in batching to be tailrec, very nice
Fatal mistake in Batching corrected
Minor restructuring in Batching
add BatchingExecutor mixin trait to akka.dispatch, unused
Changed akka camel URI pattern to akka ActorPath pattern, like akka://system/user/someactor fixed some fixmes regarding using the reference.conf config Added some more java tests for custom routes with producers and consumers changed autoack to autoAck
Bumpting to Scala 2.10.0-SNAPSHOT
Adding additional router supervision test
Correcting lifted code examples for programmatic usage of Serializers in Java documentation of Serializers
Making so that 'pass checks' fails
Partial migration to M5
camel docs java
rename becomeOpen/becomeSuspended to resume/suspend on Mailbox
#2285 - Making it possible to emit warning output when a router is configured but not in code.
code style fixes
#2192 - Adding a doc note about not needing Props.creator when specifying routees via sequence of actors.
send Supervise before attaching to dispatcher, see #2301
Adding the OKResponse definition to the IO reST docs.
The unborkinging
processed review
Merging with master
#2325 - Adding AkkaProtocolMessageSizeEstimator to NettyRemoteTransport
fix imports (and some other style things)
add copyright headers to akka.actor.cell.*
add test for scrapping of behaviorStack during restart
review comments: don’t include risky things in messages
fix handling of handleChildTerminated, see #2301
split up ActorCell functionality into multiple source files
Undoing ActorCell enhancements
Making some changes in the cluster code to avoid doing work that isn't needed
Merging in master, huge work trying to get things to compile, tests not green at this stage
Remove superfluous double setReceiveTimeout
Remove workaround for the strange gossip merge, see #2303
Rewriting the CircuitBreakerMTSpec to be less hysterical
move child-related things from ActorCell to ChildrenContainer
Separate Cluster to several files, see #2311
Incorparate feedback from review, see #2311
Add back Cluster JMX, see 2311
Cleaning & restructuring OSGi module
fix JavaTestKit docs (one warning too many)
Make Cluster ready for use before constructor returns, #2311
Cleaning up SupervisorMiscSpec
fix SupervisorSpec race (within the test code)
Aesthetics change in OSGi sauce
Add missing auto-down=on, due to changed default (lost in merge)
Deleted NodeLeavingSpec, see #2289
Shall not do that
Rewriting docs for 0mq Connect
Partial work + broken commit
Merging in master
Deleting akka.util.cps due to severe lack of attention.
Minor touch-ups
don’t encourage thread leaks so easily (initialCommands)
Remove gossip to deputy nodes, see #2310
Tiny LoC removal
First step in refactoring of cluster internals to actors, see #2311
Note about URLEncode instead of MD5, see #2290
move 'repl' script into AkkaBuild as initialCommands, thanks Pete!
incorporate review: add docs, see #1952
another round of fixes due to suspend counting, see #2212
Aligning the latches in the AgentSpec optimially for the test cases
Changing implementation of AgentSpec not to do Thread.sleep
ActorCell.receiveTimeout will store 'Duration' instance instead of 'Long'
Prolonging the timeouts for the ProducerRegistryTest
Change auto-down default to off, see #2304
Doc typo change and clarification
Document how to boot up an Akka/play-mini application, see #2272
Stop SBT from buffering test output to ease bug hunting on Jenkins
fixed dangling exception, reusing code, removed DevRandomSeedGenerator
Gossip merge in large cluster, #2290
Small refactoring of cluster actors
Implemented a custom InternetSeedGenerator to override seed generator ordering to try and fix long waiting times on Linux because DefaultSeedGenerator uses /dev/random first instead of random.org
Implemented a custom InternetSeedGenerator to override seed generator ordering to try and fix long waiting times on Linux because DefaultSeedGenerator uses /dev/random first instead of random.org
Add license information for junit-interface
reuse dispatcher thread for remoting in REPL
Making sure that OSGi docs don't break the build and making sure that the osgi artifacts are bundled in the project
re-add “repl” script for priming the REPL
A few more code-style improvements and an easier API for the activator
link to Config lib docs, see #2296
Moving to s.c.EC and s.c.A, compiles but tests aren't passing
Initial work in moving to scala.concurrent.Await + Awaitable
add JavaTestKit, see #1952
A few more code-style fixes
The unb0rkening
#2292 - Removing akka.util.Duration etc and replace it with scala.concurrent.util.Duration
Keep the cluster node membership change listeners when joining.
Review changes
Support for re-JOINING a node that have been DOWN. See #1908
Bringing UnreachableNodeRejoinsClusterSpec up to speed with master
Group multiple awaitCond into single one
Changes after review
Cluster node that is UNREACHABLE and rejoins. see #2160
Moved GossipDifferentViewProbability to config, see #2253
Minor improvement of LargeClusterSpec, see #2239
Cache time unit for ZMQ poll duration
Making use-dispatcher-for-io also used for the client connector
Making everything compile and tests pass
Improve efficiency of gossip, see #2193 and #2253
Test gossip in large cluster, see #2239
Propagate akka system properties to multi-node tests, see #2280
Switching to applyOrElse for receiveMessage in ActorCell
Adding the zmq binding for 2.10-m4
adding RCLE test
Adding test for logging of RLCEs
#2279 - making logging of RLCEs configurable
Adding test case duration output to the multi-jvm tests
Update polling for compatibility with ZMQ
Enabling -target:1.6 (GenASM) but it currently uses a hack to run it against the latest 2.10-SNAPSHOT
Stash docs: add paragraphs about performance and restarts
Resolve merge conflicts
Make FailureDetector.remove clean out information about address. See #2277
Add types to API methods and clarify Scaladocs
Adjusted comment based on feedback, see #2265
Removing dead FIXME
Adding tailrec annotation on ActorModelSpec.await
Removing all uses of 'return' and removing the ZeroMQExtension implicit
Move Aries Blueprint namespace handler into a separate akka-osgi-aries module
Removing dead code in Helpers
Test split brain scenario, see #2265
Removing the dead code that is SystemPropertyUtil
Switching to the embedded jsr166y in scala.concurrent and dropping akka.jsr166y
Workaround for SI-5986, see #2275
Update osgi branch with latest changes from 'akka/master'
Making sure that TypedActor use the same instantiation strategy as FromClassCreator
Adding test case duration output to the tests
added akka camel docs
Start seed nodes sequentially in JoinSeedNodeSpec, see #2271
Adding Stash section in Actors docs (including docs for the Java API).
Correcting example in ScalaDoc for Stash
Explicitly name Akka.pdf in sphinx doc generation
 added more docs for camel, couldnt resist to also remove a ; from DefaultCamel
Join seed nodes before becoming singleton cluster, see #2267
Cleanup of comments, see #2263
Add join-seed-node-timeout config, see #2219
stashin commit so Iulian can play with it
Getting akka-sample-fsm compiling and tests green
Making sure that Akka Camel compiles and that the tests pass, also moving the examples from the sources to the tests.
Making akka-mailbox* compile and tests green
Making akka-slf4j compile and tests green
Making akka-cluster compile and tests green
Minor code cleanup
Making sure that akka-remote and akka-remote-tests pass
Akka Remote now compiles and tests pass
Shorter gossip interval still needed
Don't gossip to unreachable, see #2263
Making sure that akka-actor and akka-actor-tests compile and tests are green
Switching to our embedded Murmur hash
#2260 - making sure that Terminated deregisters the watch from the kid and then propagates it to the normal receive
Upgrading Netty to 3.5.1-Final
add simple script for priming the REPL
Rewriting the polling for 0mq so that we can discern EAGAIN from empty poll
fix up one last test, see #2031
clarify system.actorOf special semantics section, see #2031
Attempt to deal with race between sending and receving multi-framed messages
Remove fixme
Cleaned up stuff around file-based mailbox
Stash: add Java docs
Stash: add warning about mix-in order
Switching off -target:1.6 since its broken
Changes based on review. See #2230
Updating to scalatest 2.10.0-M4-x-B2 and adding feature imports
Make MultiNodeSpec shut down the conductor after other nodes. See #2230
Temporary ignore, see #2259
Reintroduce 'seed' nodes, see #2219
Remove unnecessary clock param in one of AccrualFailureDetector's constructors
Renamed AESCounterRNG classes to be a bit more self-explanatory Added some comments
Renamed AESCounterRNG classes to be a bit more self-explanatory Added some comments
When the Cipher changes were reverted, this also got reverted, so fixing it
Revert "Somehow the code for the fast and the secure was flipped"
Formatting
Using softer language and warning about using 0 threads for the execution handler
Review reformatting
Removing SSL debug residue
Rearchitecting the reconnection semantics since we need to handle the ssl handshake there as well
I think we have a winner
Doing a roundtrip before issuing the wave of messages
Adding support for being able to _not_ use ExecutionHandler by setting the poolsize to 0
Removing the naught default in code of the failure detector and changed so that the AccrualFailureDetectors constructor matches what the instantiator expects
Add missing after barriers in LeaderElectionSpec, see #2256
Start sending heartbeats immediately when joining, see #2249
Increased timeout for LeaderLeavingSpec
Avoid gossip merge when singleton cluster, see #2250
Mergin in the latest master
Rename GossipingAccrualFailureDetectorSpec
Adding the setting of securerandom.source and support for NativePRNG
Incorporated feedback from review, see #2066
One more barrier in TransitionSpec
Somehow the code for the fast and the secure was flipped
Making AkkaProvider a Scala Object
Restructuring some of the SSL code to avoid the risk of races
Rewriting large parts of the SSL tests and adding cleanup to the code
Disabling SSL once again
Added ScalaDoc about the Leaving, Exiting and Removed states
Changed ByteString docs to hoist example code from separate file
Changed tests to use enterBarrier
Commenting out Ticket1978AES128CounterRNGSecureSpec
Changes based on review
Commenting out one of the SSL tests since I can't see how it is needed
Revert "Sigh, the tests are flakier than a flaky flake from flakeville"
incorporate review comments, add docs, see #2031
Minor cleanup.
Added ScalaDoc on 'def status: MemberStatus' describing the MemberStatus.Removed semantics.
Improve phi in AccrualFailureDetector, see #2066
Turning on the ssl test again
Sigh, the tests are flakier than a flaky flake from flakeville
Adding IAEs for null subscriber/classifier in ActorClassification
remove debug statement
add stress test, keep count of suspend/resume, and fix resulting bugs
I think I nailed it.
Switching to 256bit for the Ticket1978AES128CounterRNGSecureSpec
Deactivating the SSL tests for now
Trying to work around the fact that intercept doesn't respect remaining but invents its own default timeout
Using setRuntimeClass() avoids the need for the user bundle to import akka.osgi.blueprint
Switching to 30s timeout for the SSL tests + loading from classloader rather than file path
#2245 - Adding nullchecks in EventStream
Trying to embed smarted detection for the SSL tests, is this a keeper?
Minor code restructuring for the SSL tests
Reenabled LeaderLeavingSpec and added successful leader-handoff assertion
Added spec testing the Ordering[Address] and Ordering[Member].
Change Member ordering so it sorts members by host and port with the exception that it puts all members that are in MemberStatus.EXITING last.
Removing commented out code in the Ticket1978CommunicationSpec
Switching strategy for SSL detection to try to initialize a Client SslHandler
Removing dead code as detected by The Doctor
Shorter gossip interval, until we optimize join, see #2239
InitialiZe
Unrandom to unb0rk Linux, because Linux has some issues with dev/random entropy
Minor edit .
Cleaned up LeaderLeavingSpec.
Remove address vals in tests, fix race in TransitionSpec, see #2201
Switching to a more continuation based approach for sending that also solves the issue when sending is not possible
Cleanup based on review comments, see #2201
correct ActorSystem’s error message for invalid system name, see #2246
Removed final specifier on some ByteString and ByteIterator methods
Improved ByteString.{head,tail,last, init} and added missing tests
Added explicit apply method with return type Byte to class ByteString
Added new ByteString features to IO (Scala) documentation
Simplified implementation of ByteStringBuilder.asOutputStream
Added spec testing telling a LEADER to LEAVE (and transition from UP -> LEAVING -> EXITING -> REMOVED).
Minor edits to cluster specification.
Removed MembershipChangeListenerRemovedSpec.
Changed logging in FD from INFO to DEBUG.
Removed 'remove' from, and added 'isRunning' to, 'akka-cluster' admin script.
Commenting out the SSL tests until I have time to fix them
Adding a test for the default RNG
Removing the use of 256bit encryption by default since it requires an install to get
Place the address cache in MultiNodeClusterSpec, see #2201
Minor cleanup based on feedback, see #2223
Parrying for NoSuchAlgorithmException
Second stab at making sure we don't run the tests for SSL remoting for the RNGs that aren't installed on the box the tests run on
Use FailureDetectorPuppet in ClusterSpec
Implicit conversion from RoleName to Address
Cache node lookup, see #2201
Allow barrier timeouts to be shortened and other review fixes
Minor reformatting
Real SunnyWeather
Test state transitions and actions step-by-step, see #2223
Fail fast in cluster tests if prevous step failed
Use max of periodic-tasks-initial-delay and the interval
Correction of gossip merge when joining, see #2204
Adding -feature and trying to find scala versions for our akka-actor-test dependencies. Also updating the version of Scalatest, specs2 and junit
Removed some superfluous braces.
make suspend/resume act recursively, as always intended, see #2212
#2197 - Switching to GenASM (java6 classfiles)
Service registration is now optional, service references get cleaned up properly
make system.actorOf() non-blocking (and working), see #2031
Improve docs based on feedback, see #2077
Improve debug log message of no convergence, see #2222
Removing long2double and using toDouble instead
Additional check of expectedAddresses in listener tests
#1929 - enabling -Xlog-reflective-class
Lots and lots of work to get things to compile without warnings
import MemberStatus._
Add invariant assertions to Gossip, see #2077
Switching to getDeclaredConstructor.newInstance as a fallback
Review fixes
Removing horrid IDEA autogenerated section and adding Typesafe copyright to NonPublicClass.java
Trying to get it to compile
Make multi node tests use the within() aware barrier
Removing all uses of immutable.Stack in Akka
Skipping immutable.Stack due to questionable implementation, going for immutable.List instead
Make test conductor barriers fail for all on timeouts and care about within() blocks. See #2218
#2217 - setting accessible = true before newInstance
Removing a pointless import and the only Scala return statement in our codebase
Caching emptyBehaviorStack and remove all other uses of Stack.empty
Minor cleanup, based on review comments, see #2077
Formatting
Proposal to make it possible to fully discard the receive and replace it with become, unbecome then reverts to receive if no behavior left
Correct? implementation of merge and other actions, see #2077
#2156 - sbt plugin: project dependencies should be included automatically
Update docs and use Option[String] in the activator instead of null
Using Test.logback instead of Runtime.logback
Adding PojoSR tests and a lot of code cleanup
Rename + operator of VectorClock and Versioned to :+
Adding Stash section in Actors docs. Including example added to ActorDocSpec.
Prolonging wait time for TypedActorSpec to avoid problems on slower machines
Minor markup fix.
Info log about dedicated scheduler, and refactoring, see #2214
Use dedicated cluster scheduler only when default scheduler resolution isn't good enough, see #2214
Completed ByteString tests in ByteStringSpec
Extended ByteStringBuilder tests in ByteStringSpec
Completed ByteIterator tests in ByteStringSpec
Added tests for Float/Double encoding/decoding to ByteStringSpec
Switching to Mr Pink's Java6 detector
Schedule cluster tasks with more accurate, see #2114
Incorporate feedback from review, see #2214
Used RemoteCommunicationSpec as a template to implement a functional spec to test SSL communication.
Unbreaking master
Split up all tests that are related to failure detection into two versions: Accrual FD and FD Puppet. Also moved all tests that are not failure detection tests to use FD Puppet.
Use Use separate heartbeats for FailureDetector, see #2214
Created FailureDetectorStrategy with two implementations: FailureDetectorPuppetStrategy and AccrualFailureDetectorStrategy.
#2119 - enforce Java6 for releases
#2187 - Making Warning sections in docs yellow so they aren't overlooked
Misc fixes after FailureDetectorPuppet and abstraction review
Made LeaderDowningNodeThatIsUnreachableSpec make use of the new FailureDetectorPuppet as a sample of how to use it.
Abstracted the FailureDetector into a interface trait and added controllable failure detector mock.
Ignoring ConvergenceSpec until fixed.
#2208 - Upgrading to Netty 3.5.0 - remove StaticChannelPipeline since it's deprecated.
Ignore due to failures, see #2180
Turn on debug logging due to failures
#2186 - Adding test to verify that parent is restarted if decider throws an exception
Remove jenkins color codes in LogRoleReplace script
Rename NodeShutdownSpec to SingletonClusterSpec, see #2182
Minor formatting
Incorparated improvements/cleanup based on feedback, see #2182
#2203 - publish failed message deliveries to DeadLetters when bounded or durable mailbox enqueues fail
Use all heartbeats in failure detector, see #2182
Added MembershipChangeListenerRemovedMultiJvmSpec
Turn on debug logging due to failures
Ignore the leaving/exit failing tests
Change loglevel to info, gossiping verification done, see #2195
initialParticipants default as roles.size in cluster tests
Notify MembershipChangeListeners when 'members' change
ActorCell: move out and reuse children updaters, add stress test
fold reservedNames into normal ChildStats trees inside ChildrenContainers
add test for waves of top-level actors
make system.actorOf non-blocking (*), see #2031
remove LocalActorRef.systemService (residue, very old)
document processAllSystemMessages semantics
Change to logback 1.0.4, see #2198
#2196 - Updating Logback dep to 1.0.0
Test normal healthy cluster, see #2195
Add missing assert
Node that joins again should be ignored, see #2184
Totally skip running multi-jvm tests when long-running is excluded, see #2194
Change protected to private[akka], see #2163
add java testing doc chapter and link to Munish’s blog
do not discard system messages silently after stop
remove unused _receiveTimeout constructor args (ActorCell and LocalActorRef)
unbreak config check in RoutedActorRef, which blocked&leaked threads
Unit tests of Cluster, see 2163
Adding missing slash
Clarifying semantics for ActorSystem.registerOnTermination
Minor restructuring of the send-callback
Deciding not to publish errors when a message delivery fails
Adding a FIXME
#2189 - Removing RemoteClientWriteFailed and log it as a RemoteClientError and send the message to DeadLetters
ScalaDoc of awaitClusterUp
Refactor cluster startup join in tests and fix barrier race
Remove cluster settings vals
Updated to support 3 different random number generators:
update ActorPath.png, see #2147
Review cleanup
changed val to lazy after review
fix a few doubled the’s
Misc changes, fixes and improvements after review.
clarify deployment using anonymous factories
warn against using TestKitBase trait
#2093 - Adding support for setting the sender when using TestActorRef.receive
We need to reregister a client conection when we know the actor system address. see #2175
Shutdown does removeNode, see #2137
Always removeNode when shutdown, see 2137
Minor improvement from review feedback, see 2137
Switching to the appropriate check for confirmed existence
Add script to run LogRoleReplace, see #2173
More formatting
make cleanUp of systemMessages atomic
Replace 'after' barrier with explicit barrier inside test method.
Adding some sanity and some CAS-magic
add back TestProbe.reply, see #2172
Added comment to explain the increase in leader action frequency.
Formatting
offer TestKitBase trait, see #2174
Utility to replace jvm and host:port with role in logs, see 2173
Making sure we use vals for the fields in Terminated
Added test for testing that MemberChangeListener is triggered by node LEAVING event.
Added test for testing that MemberChangeListener is triggered by node JOINING and UP events.
Added test for testing that MemberChangeListener is triggered by node EXITING event.
Changed name of test files to end with *Spec.
Incorporating Roland's feedback
Adding the low watermark option
Switching over to foreach, anticipating the use of -optimize for 2.10
#2168 - Exposing more Netty options in remtoe config
Renamed the NodeStartupSpec to NodeJoinAndUpSpec and added tests for both JOINING and UP.
Made the timeout for test dilated
Added test for testing cluster node transitioning from UP -> LEAVING -> EXITING -> REMOVED.
Added test for testing cluster node transitioning from UP -> LEAVING -> EXITING.
Added test for testing cluster node transitioning from UP -> LEAVING.
Added implementation of the LEAVE command for a cluster node.
Test gossip convergence, see #2164
Adding some error ouput for violated invariants in ASkSupport
Test leader member states, see 2157
Debug log since we had one hard to reproduce failure on this
Shutdown correct node
Invoke mima as part of the release --dry-run see #1953
Add Migration Manager for binary compatibility checks. see #1953
Initial stab at a Blueprint namespace handler
Add missing long-running tag
#2166 - Adding link to Kryo serialization by Roman Levenstein
Correcting typo
Correcting typo
Changed loglevel to INFO for debugConfig(false)
Singleton cluster convergence, see #2117
Boy scouting
Make multi-jvm run all tests even when there are failures see #2154
Correcting example in ScalaDoc for Stash
Removed obsolete ByteIterator.isIdenticalTo
Added test for ByteString.compact to ByteStringSpec
Removed unnecessary implementations of ByteString.clone
Made things that don't need to be public private in ByteString / -Iterator
Removing doc references to onResult and onTimeout
Add missing barrier
Improved ByteArrayIterator.empty
Removed some remnant exposed internals from ByteArrayIterator
Minor code formatting
Minor corrections and cleanup
Change to ThreadLocalRandom, see #2123
Code formatting
Adding warning logging for erronous settings
Unborkening the top-level surveillance
Adding PossiblyHarmful to RemoteTransport untrusted mode filtering
Implementing death watch for PromiseActorRef
Reverted changes to client and server files and moved the code to NettySSLSupport.scala Updated configuration file to reflect new netty.ssl hierarchy.
Simplified implementation of ByteIterator.indexOf
Made bytestrings private in ByteString.ByteStrings
Code formatting changes as requested by Victor
Added specialized implementation of foreach to MultiByteArrayIterator
Changed ByteIterator.span to return operand iterator first in tuple
Improved ByteStringSpec tests for iterator.{span, takeWhile, dropWhile}
Workaround in ByteStringSpec for Scala-2.9 iterator.span bug
Changed MultiByteArrayIterator to operate on a LinearSeq
Removed object ByteStringBuilder
Improved documentation of ByteString methods compact and isCompact
Improved MultiByteArrayIterator.toByteString
Added lots of missing tests to ByteStringSpec
Quoting strings differently for multi-node
Switching approaches for EmptyLocalActorRef and DeadLetterActorRef
Quoted strings confuses ScalaTest (space seoarated argument strings suck)
Making sure Watch messages are handled by DeadLetterActorRef + EmptyLocalActorRef
Making sure that Terminated messages don't go to the same guy
Removing some boiler
Making sure that you cannot watch or unwatch yourself
Tag all multi node tests as long-running, since slow jenkins sometimes has problems running them.
Switched back to the old debug messages
Removing DaemonMsgWatch, oh yeah baby. However, still no cigar
Boy scouting based on feedback, see #1935
Resolve conflict
Add doc note about using testconductor from constructor, see #2143
Adding a convenience BundleActivator implementation to bootstrap Akka from an OSGi bundle
Adding a FIXME for handleSupervisorFailing in ActorCell
Switching to logging warnings instead of throwing exceptions in untrustedMode
Workaround for Initialization race in MultiNodeSpec, see #2143
Enable running tests on multiple nodes with -Dakka.test.multi-node=true
Added Typesafe Config's license in AkkaBuild
Port all MultiJvm tests to MultiNode, see #1935
Update docs to reflect that there isn't 0 deps for akka-actor
tags.exclude should add to default excludes, not override, see #2145
Reduce sleep and use awaitCond for the failure case, see #2110
#2051 - Removing the embedded config library and switch to using the published OSGi-enabled 0.4.1 version
#2102 - porting over the fix for Netty/356
Test tags not working as expected, see #2145
closes #2146: Publish OSGi bundle for akka-actor
Making dispatcher in ActorRefFactory public and implicit, by request from Matthias Doenitz (spray.cc)
Initial stab at DeathWatch 2.0, tests don't pass just yet
Minor cleanup
Rename mySelf in MultiNodeSpec to myself
Port GossipingAccrualFailureDetectorSpec to MultiNodeSpec, see #2110
Move GossipingAccrualFailureDetectorSpec to multi-jvm, see #2110
Tag BarrierSpec as timing, due to jenkins failures
Use only the hard exit LeaderElectionSpec, see #2113
Renamed the LeaderDowningSpec to LeaderDowningNodeThatIsUnreachableSpec (same as the class)
Decreased failure detector threshold to shorten failure detection time.
Removed old LeaderDowningSpec
LeaderElectionSpec with hard exits. See #2113 and #2138
added docs about BalancingDispatcher and routers, see #2080
Clarified Awaitable doc.
Incorporated feedback - switched to MultiNodeClusterSpec etc.
Increased some timeouts of BarrierSpec
Adjust cluster tests to not fail when excluded, see 2139
Revert "Commented out the cluster tests because it's not possible to exclude them right now"
Pass include/exclude tags arguments to multi-jvm tests, see #2139
Tag as LongRunningTest. See 2113
kick off pattern collection
Port LeaderElectionSpec to MultiNodeSpec. See #2113
Move LeaderElectionSpec to multi-jvm. See #2113
Explicit types for everything related to ByteString and ByteStringIterator
Added missing class description of ByteIterator
Removed ContByteString
Improved return type specialization for methods implemented in super-type
Moved ByteIterator implementations into object ByteIterator
improve one word, see #2131
document creator requirement, see #2131
Removing dead FIXME
Simplified config and removed old too-long timeout.
#2136 - Making it possible to use balancing dispatcher for routees but not routers, changing the docs and updating the tests
Rewritten old in-memory ClientDowningSpec into multi-node specs.
Added more logging to Cluster's who to gossip selection process.
Revert "Removed ResizerSpec test violating routing rules"
Commented out the cluster tests because it's not possible to exclude them right now
Tag as LongRunningTest
improve logging of NoStackTrace exceptions
Sort on host and port only. See #2133
fix specs2 samples so they system.shutdown
Removing warning from serialization.rst by adding whitespace, thanks reST.
Correct sort. See #2133
Remove port awareness in asserts of leader and members. See #2133
Use better sort order of members. See #2133
try to fix the race between sending a message and the client shutting down
Assert with sorted member addresses, since ports are random
Change node naming. See 2114
Change node naming. See 2115
Change node naming. See 2111
Adding docs about creating TypedActor children
Inadventently deleted akka-intellij-code-style.jar
document Specs2 + TestKit, see #2068, plus fix up broken includes
add docs about how to serialize ActorRefs
add comments to clarify code in NetworkFailureInjector.scala
Use ifNode for asserts. See #2111
Port JoinTwoClustersSpec to MultiNodeSpec. See #2111
Move JoinTwoClustersSpec to multi-jvm. See #2111
merge with master
Remove hardcode host/port for node-to-join. See #2115
Remove hardcode host/port for node-to-join. See #2114
Remove node var. See #2114
Remove node var. See #2115
Port MembershipChangeListenerSpec to MultiNodeSpec. See #2114
Moved MembershipChangeListenerSpec to multi-jvm. See #2114
get better auto-generated actor system names in tests, see #2122
add deployOn/deployOnAll DSL to MultiNodeSpec, see #2118
Binary compat work for the 0mq module
Binary compat for serialization
Changed the stupid node var. See #2115
Binary compat work for routing
Port NodeMembershipSpec to MultiNodeSpec. See #2115
Moved NodeMembershipSpec to multi-jvm. See #2115
Merging with latest master
Binary compat work for Akka Remote
make failure injection idempotent
Pass timefactor to multi-jvm process
FIXME singletonCluster should reach convergence. See #2117
Placed the barrier in after instead. See #1948
Preparing transactors for binary compat
Binary compat for SLF4J module
Make sure normal tests are run even if multi-jvm tests fail
Add convergence verification to NodeStartupSpec. See #1948
Convert NodeStartupSpec to MultiNodeSpec. See #1948
Making most of the innards of microkernel.Main private
Preparing mailbox-commons for bin compat
Preparing the FileBasedMailbox for binary compatibility
Adding some docs to the Camel package object
Preparing Akka Camel for bin compat
Adjusted tests to latest testconductor, remote deploy still fails. See #2069
make too verbose logging in TestConductorSpec go away (d’oh)
Adjusted tests to latest testconductor, remote deploy still fails. See #2069
Preparing Agent for binary compat
incorporate review comments into TestConductor work
Adding references to Roman Levensteins akka-protostuff and akka-quickser in the serialization docs
Arrow-formatting ;-)
improve documentation of explicitly given routees
Switching to checking InstantiationException for both create and recreate
Added section to remote docs about remote security as well as improved doc in reference config
Move all doc examples out of the akka-package to avoid use of private APIs. See #2092
Cleaning up some horribly written Java code
harden up FSM.scala, improve gracefulStop ScalaDoc
Adding more robust tests to HotSwapSpec
sbtscalariform 0.4.0
Use sbt 0.11.3. See #2087
Removing NoStackTrace from AkkaInitializationException
Removing most of AkkaException since it's to be considered outdated residue by now
Switching to logging InvocationException's getCause
Added Typesafe to the 'sponsors' doc page
Updated copyright to 2012
Adding the arguably more correct behavior stacking
Adding a more robust test for the SchedulerSpec
Cleaning up the cancellables, null-object pattern ftw
Added Akka Mist port and pointers to other community HTTP/REST projects to the HTTP docs
unb0rkening the akka-docs
HUGE CHANGE - moving behaviorStack into ActorCell
Switching to indexOf instead of Seq.contains
Removed ResizerSpec test violating routing rules
Incorporate review feedback. See #2061
Minor adjustments from feedback. See #2072
Changed package to akka.jmx, for OSGi purposes. See #2079
Adding return types in Dispatcher
Removing the AtomicReference from Dispatcher and restructured the code a bit
#2091 - Adding a small intro to the Microkernel docs to state what the purpose of it is.
Moving the HWT stuff from org.jboss.netty.akka.util to akka.util.internal
Huge refactor + preparing for binary compatibility, last stretch for akka-actor.jar...
switch MultiNodeSpec to use RoleName type when referring to participants
Improved implementation of ByteStrings.iterator
Moved the dispatcher/router verification to RoutedActorRef, also checks dispatcher only through the config so we don't trigger creation of dispatcher.
Embed the source of jmxclient into akka-kernel. See #2079
Reworking Listeners so that senders can be supplied
Further work on binary compatibility
switch to Björn’s new multi-jvm setup (i.e. remove system properties)
Added documentation about the verification of BalancingDispatcher + Router (added to both Dispatcher and Routing docs)
Added verification that a BalancingDispatcher can not be used with any kind of Router (impl + test).
add utility for fixing up broken PROTOC code (and apply it)
wrap up MultiNodeSpec, see #1934 and #2063
Removing debug equipment left inside the patient.
Removing ActorTimeoutException everywhere... I swear it...
Tighten akka import version range and make some more packages private
Removing ActorTimeoutException since it was only used in GracefulStop, and changed GracefulStop to use PromiseActorRef instead of spawning a toplevel actor
Saving the planet and shufflin'
DOC: TestKit sample is wrong. See #2072
ActorSystem.dispatcher should be implicit for easier importability. See #2074
Added reference to the NetBeans SBT plugin
Added variants of getBytes, getShorts, etc. to ByteByteIterator
Added variants of putBytes, putShorts, etc. to ByteStringBuilder
Added methods isCompact and isContiguous to ByteString
Made byteOrder implicit in ByteIterator methods
Made byteOrder implicit in ByteStringBuilder methods
Added methods getByte, getShort, etc. to ByteIterator
Added methods putByte, putShort, etc. to ByteStringBuilder
Added methods getBytes, getShorts, etc. to ByteIterator
Added methods putBytes, putShorts, etc. to ByteStringBuilder
Added a java.io.InputStream wrapper for ByteIterator.
Added a java.io.OutputStream wrapper to ByteStringBuilder
Added a companion object, length and sizeHint to class ByteStreamBuilder
Improved implementations of ByteIterator.++
Improved implementations of ByteString.++
Enhanced ByteString implementation using ByteIterator
Added ByteIterator
Added ByteString1.apply(bytes, startIndex, length)
Introduced ContByteString to complement CompactByteString
Optimized ByteString1.++
Add options for creating epub output for the documentation
sun.misc.Unsafe should be loaded through boot delegation instead
Add sbtosgi plugin configuration to generate OSGi metadata
Adding tons of ScalaDocs for Mailbox.scala
Adding docs and privatizing some fields in Dispatchers.scala
Adding docs and fixing a potential bug in use of getSimpleName in Dispatcher
Moving in SharingMailbox into BalancingDispatcher and making team & messageQueue private[akka]
Moving out ConfigurationException from akka.config to akka
Adding docs and making things private to akka for TypedActors
Adding some docs to Stash
Adding overrides on the DefaultScheduler
Making sure that the ContinuousCancellable can never be re-initialized
Cleaning up Scheduler, rewriting ContinuousCancellable
Touch-up of Props
Docs, comments, cleanup, fairy dust...
clarify semantics of name reuse/gracefulStop, see #2073
Reverted the change to serializeActorRef in DurableMessageSerialization. See #1755
properly take boxing into account when expecting messages by type or class
Optimize remote serialization for the create from class case. See #1755
Adding even more future proofing
Imrovements from feedback. See #1755
Future proofing ActorRefProvider
Create test-fixture for durable mailboxes. See #2061
IO.SocketOption: switch back to one line-per case
IO#fowardFailure: catch NonFatal rather then all Throwables
Future-proofing ActorRef
IO: use defaults for SocketOption param rather then overloading
IO.SocketOption: catch exceptions and forward them back to sender
Moving ActorPath.split into PathUtils so it's only internally used
Adding some commends and making SuspendReason sealed
IO.SocketOption: add require around TrafficClass range restrictions
IO.SocketOption: improve SoTimeout documentation wording
IO.SocketOption to link to java docs
Removing com.eaio.Uuid and replacing its usage with java.util.UUID
closes #2076: Streamline usage of parens on arity-0 methods with the Style Guide (once more)
Replace Java serialization of DaemonMsg by protobuf. See #1755
Removed code for tutorial, already removed in docs since duplicate in Typesafe/Akka getting started guide and template
Adding docs and privatizing parts of Actor.scala
Improved the docs for dataflow concurrency
Added failing DirectRoutedRemoteActorMultiJvmSpec. See #2069
Replacing MapBackedSet with newSetFromMap
Use maxSampleSize correctly. See #2065
Added .scalastyle to .gitignore
fix SchedulerSpec
add range checks (and tests) for Duration, see #2064
Use previous snapshot publishing, rather than sonatype
named ActivationTracker actor camelActivationTracker
various comments processed
Added caution about custom routers to docs
add some tests for BarrierCoordinator and Controller
Formatting of ActorComponent
Changing to the correct gh id for me in the Publish.scala
Removing the Atomic*Updaters from MessageDispatcher, switching to Unsafe all the way baby
Adding assertions into the new great socket options from Scott
Removing 1 lazy field from Address
Updated copyright headers to say Typesafe instead of Scalable Solutions
Removed getting started guides - instead linked to typesafe's tutorials and template projects
Cleaned up akka-docs, removed old and unused docs, fixed some errors etc.
Removed akka.camel.Failure, replaced with akka.actor.Status.Failure, fixed tests
#1508 - Reducing closure wrapping in scheduler
scaladoc for TestConductor
Removing akka-migration from 2.1-SNAPSHOT, welcome to the future.
Adding a warning about closing over sender and context
break out TestConductor stuff into akka-remote-tests project
Adding howdoi.rst
Include google analytics in online version of docs. See #1892
Add new sbt-based sphinx doc building
#2036 - Adding how-do-i section on General in the docs
move blocking of client.connect() out of writeLock, see #2034
#2050 - Upgrade zeromq scala driver to 0.0.6
Clarifying that you cannot change dispatcher after the actor has been created.
IOManager: support setting socket options
Removing all but the FileBasedDurableMailbox from the docs
Removing the community-maintained durable mailboxes, replacing the dep on commonsIo with the piece of code needed and switched to commonsIo for the FileBasedDurableMailboxSpec, also removed the amqp stubs, the spring stubs and other AkkaBuild residue
Updated multi-jvm test docs
Adding a test to verify that the deserialized TypedActor Proxy represents the old one
Adding a doc diagram for the Test Conductor Extension
#950 - finally got around to transparently serialize and deserialize TypedActor proxies using Java Serialization
handle barrier failures better
rename mkPipeline => createPipeline
fix after review
Making ActivationTrackerTest timingSensitive
Removing akka.actor.Actors since they were deprecated in 2.0.2
#2046 - Remove PromiseStream
make transform DSL nicer, see #1966
fix BuilderParent in generated TestConductorProtocol.java
unb0rkening the akka-docs
make all FSM doc code snippets compiled, see #1871
Removing legacy messages from the remote protocol
Clarifying the error message given when there's an InstantiationException during create
ticket-1732, return Failure on producer ask _and_ throw AkkaCamelException so supervision can occur on camel failures
add FSM.transform, but needs docs (see #1966)
#2024 - changing so that JvmExitOnFatalError is more adequately logged
fix system.shutdown() mention in intro
wait for initial crew before starting the party
optimize partial message scheduling
implement more precise bandwith throttling
fix bug in FSM when manually rescheduling non-recurring timer, see #2043
add previously forgotten TestConductorTransport
integrate NetworkFailureInjector and add first test
fix bug in FSM when manually rescheduling non-recurring timer, see #2043
Added the concept of PortPrefix in the clustering tests to avoid clashes in binding of server port when running the tests in parallel.
Cleaning up a bit after a bit of havoc...
improve exception niceness for future await timeout
Revert "closes #2019: Use parentheses for arity-0 methods which are not referentially transparent"
TestConductor: convert to Akka Extension and add test
rename a doc section to refer to multiple ActorSystem
move the docs on config file prior to docs on coding custom config
in docs, discuss using "include" instead of coding custom config
move custom config example in Java into a code file
move the new doc section on custom config to a better place
Added copyright header.
Move reference config listings to bottom of the page
add docs on loading configuration from custom place
Removing ClusterMBeanSpec
fix of typo
Consumer Actors section
porting to 2.0, making it compile: UNTESTED!
- dependencies section - headers for clarity
Adding a multi-recipient test to the durable mailbox spec
Increasing the timeout as to not barf on slow test boxes
MAking ActivationTrackerTest timeing sensitive
Adding more comprehensive tests for durable mailbox implementations
FSM inherits log instead of having its own, see #1899
Making ClusterMBeanSpec a tad smarter
Removing ChannelLocalSystem (binary incompat change) as well as increasing timeout for ConcurrentSocketActorSpec
#2029 - adding @throws annotations to the TypedActorSpecs
#2028 - fixing ClassLoaderObjectInputStream
do not reuse same port in same ømq test, fixes #2022
add one more test for wildcard deployment
Adding tests for wildcard matches
Switching from warning to debug for failed deploy lookup
Avoiding the top-level node in the WildcardTree for the Deployer
Putting WildcardTree in akka.util and making it a bit more generic
Cleaning up and streamlining the error handling of the invoke methods as suggested by Roland
Adding documentation about working around the REPL bug.
Taking ClusterMBeanSpec out of commission until it's fixed
Changing so that you can specify any dispatcher id to be used for remoting
Removing the String-only lookup method and replaced it with Iterable, Iterator and ActorPath
#2003 - Switching over to WildcardTree
Optimizing AbstractPromise to avoid initial CAS
Reverting to the old NonFatal impl since the new wasn't needed and adding finally block and escalation only in the case of InterruptedException or fatal
#2023 - Switching from ARFU to Unsafe for the DefaultPromise
#1986 - Adding Java API constructors for Mute/UnMute
#1973 - Adding support for a mechanism to create Futures that will have a result after a specified duration.
Switching to a more streamlined approach for systemInvoke error handling, resembling the approach used by invoke
#2021: Abstract over time for AccrualFailureDetector
Added doc note on routers and termination
Added support for a config flag that allows the user to reuse the default dispatcher as the ExecutorService for the Netty Remote Pipeline (IO)
Redundant import that was made by IntelliJ is removed
AccrualFailureDetector tests are tagged as LongRunningTest to reduce the test run
The only sensible solution is to log and rethrow, nooptimal solution.
Optimized CompactByteString.apply methods for the case of empty input
Renamed ByteString.ByteStringCompact to ByteString.ByteString1C
#2020 - Adding 'checkedApply' to Mapper to allow for binary compatible retrofit. And then @throws on the other Java Callbacks
closes #2019: Use parentheses for arity-0 methods which are not referentially transparent
#1896 - Sprinkling some magic sauce so that we can support recreating the exact same instance without ending up in a world of pain. A world of pain.
Redundant if clause is removed
Make Java come before Scala in the docs
The unborkening of master, fixing breakage in camel docs
Ignored test is fixed now. Redundant comment is removed from test
Ignored test runs again + a new test for explicit removal of connections in AccrualFD
Explicit removal of connection functionality is implemented for AccrualFD
#1969 - Adding support for specifying sender to PipeSupport
removed info about typed actors
Extracting code to scala files
Initial doc import. Adding just an introduction as this is my first commit to docs, so this is just to set the scene.
Initial doc import. Adding just an introduction as this is my first commit to docs, so this is just to set the scene.
Removed the 'jmxclient' JAR. Instead changed AkkaBuild to get it from the Typesafe Maven Repo and tweaked 'akka-cluster' script to use it.
closes #2013: Typos in the docs, using parens for arity-0 methods which are not referentially transparent
#1930 - use new favicon for akka docs
akka-cluster: vector clocks test - merge two disjoint vector clocks
Added CompactByteString
Adding @implicitNotFound annotation on LogSource
#2005 - Putting the required fields into RemoteTransport and took the opportunity to clean up use of ActorSystemImpl
#1962 - Clarifying the error logging when dropping inbound messages and lazy-fying the logger
Adding docs section on how to proxy ActorRefs with TypedActors
add option to log UnhandledMessage, see #1999
#1990 - Adding Java and Scala version of the microkernel docs
#1946 - Adding clarification in docs about the HashedWheelTimer semantics
Removed 'ping' command. Replaced checking with 'is-available'. Added a bit of info to README for distribution.
document blocking nature of system.actorOf, see #2007
Akka prompt is added to SBT
Adding Amir's cool prompt to sbt
routeResponse returns Unit
removed info about typed actors
Making sure that null-messages don't mess up SLF4J handler
Adding TypedActor.context for the lifecycle methods
Akka prompt is added to SBT
Extracting code to scala files
Initial doc import. Adding just an introduction as this is my first commit to docs, so this is just to set the scene.
Initial doc import. Adding just an introduction as this is my first commit to docs, so this is just to set the scene.
casting to AnyRef instead
Improved the 'akka-cluster' CLI tool help message.
Removing unused dependencies
Stopping the bleeding of ActorSystem ScalaDoc
Clarifying actor jmm rules
Added start of a help page for the akka-cluster tool.
Changed output of the 'cluster-status' command to be nicely formatted. Added error handling to JMX registration. Added more doc to 'akka-cluster' script.
Cleaned up cluster node admin script and improved functionality in JMX API.
Initial commit of 'akka-cluster' CLI tool working together with the new Cluster JMX API
update to scala 2.9.2
make error message more clear when logger initialization times out
Renamed methods in public Cluster API, plus changed semantics of Cluster.join (was wrong before).
fix ØMQ detection during tests
Renamed Node.scala to Cluster.scala
incorporate Viktor’s review
add Java API for most case objects
adding return types
adding return types
#1983 - Removing network-event-sender from reference.conf
#1931 - correcting logging config examples
#1982 - Opening up the send and notifyListeners methods on RemoteTransport so 3rd parties can extend it properly
Partial functions replaced with regular functions for message converters
fix over-eager polling in zeromq
Do not tinker with the 0mq socket for the ConnectionSocketActor on Restart
fix CallingThreadMailbox.numberOfMessages
fix CallingThreadMailbox.hasMessages, see #1918
reject invalid ActorSystem names, see #1898
fix stopping of actors in RouterConfig spec, see #1974
#1958 - adding docs for lifecycle hook-parameters
clarify typographic error in general/remoting.rst
Hardening the suspend/resume methods so that actorcells with dlqs aren't throwing up
#1957 - Adding warning section regarding jarjar and akka configuration
incorporate Viktor’s review (part 1)
bump version of scala-bindings to 0.0.5
remove debug-Thread.sleep
rewrite ZeroMQ poll loop
Manual patch of Doug Leas fix to ForkJoinPool
Made message conversions on producer more user friendly by renaming it and adding outgonig message converter. Part II
Made message conversions on producer more user friendly by renaming it and adding outgonig message converter.
Update akka-docs/scala/dispatchers.rst
Added more dispatcher descriptions
Update as per Roland Kuhn's suggestions
Added _TestCallingThreadDispatcherRef
Update akka-docs/scala/dispatchers.rst
add remote ask “stress” test
Added more dispatcher info.
Added CamelContext implicit to ProducerSupport
Decrease memory footprint of PromiseActorRef by ca. 30% (two ref fields)
made the timeout longer (from 30ms to 200 ms) on in-only test of ActorProducerTest so it also works on a slow box
Ticket #1633 updated docs
first step towards TestConductor
fix TestKit class scaladoc
Another round of improvements to PromiseActorRef
Improve PromiseActorRef as per team comments
Make provider registration of PromiseActorRefs lazy
Small optimization in FiniteDuration.equals
Removed obsolete FIXME.
Renamed 'Node' to 'Cluster'.
Added spec for testing various ways of connecting two clusters into one single cluster.
Cleaned up cluster membership tests.
Multi-JVM Stop actors before we shut down nodes to avoid warning messages.
Only build the akka sbt plugin against scala 2.9.1
Processed review wip-camel pull request 344
Rebased and squashed all changes to akka camel so far from Piotr and Ray
Making sure that we only publish the truth about watch/unwatch
Switching to - instead of filterNot
#1902 - Adding docs in Serialization Java/Scala for deep serialization using EventSourcing
#1906 - Clarified the development process
merge in docs change wrt ScalaDoc links
#1904 - Clearing up performance aspects of using ask
Making RLCE Serializable and making RemoteTransport in events @transient
Muted exceptions sent to the TestEventListener in the ClusterSpec.
Added config options for run frequency of the different periodic node tasks.
Added 'ClusterSpec' abstract class with 'awaitConvergence' method to get rid of most 'Thread.sleep()' calls. Updated all cluster specs. Now works more reliable.
Switching to the faster append and removed a relative import
Switching to TreeSet, which should also receive quite some performance enhancements in Scala 2.10
Removing superceded comment
Removing dead code
fixed misspelling
#1894 - Switching to jsr166y.ThreadLocalRandom
Adding some more docs to the SmallestMailboxFirstRouter
Introducing so that suspended actorrefs are just better than the dlq
Additional simplifications to smallestmailboxrouter
Collapsing some logic
Making sure that the code works....
New implementation of smallest mailbox router
Update release script to use repo.akka.io
remove sjson and h2Lzf dependencies, see #1900
Moved FIXMEs into tickets. Hardened convergence.
link to letitcrash post from typed-actors.rst
Update ls.implicit.ly sbt settings
Update ls.implicit.ly info for 2.0
merge with master
minor edit
Added DOWNING (user downing and auto-downing) and LEADER actions.
add section on when to use typed actors
Removing lie in docs
Adds google analytics to the docs that will go on akka.io.
Use relative link to pdf in docs
Update footer in docs theme
Update urls for akka.io transition to akka.github.com
Add a warning to Future methods that take an async callback.
#1891 - Adding cause and message to AskTimeoutException
Update akka-docs/general/supervision.rst
Add --no-revert option to release script
Added imports for things moved to akka.pattern._
Update docs theme
Changing from jboner/akka to akka/akka
remove stale link to getting-started-first-scala-eclipse.rst
clarify restart sequence in supervision.rst
Consistently using 'terminate' in supervision docs
add docs for durMbx settings, see #1863
rewrite configuration.rst, see #1823 and #1838
Added docs about Push/Pull and Rep/Req ZeroMQ support. Added Windows versions for all command line samples in the Getting Started Guides.
#1885 - Adding section on serializing ActorRefs
move to github.com/akka/akka in docs
Update version to 2.1-SNAPSHOT
Switching to Scala 2.9.1-1
Cleaned up cluster daemons instantiation. Added address field to all cluster commands. Added more state transitions in Joining phase + tests to cover it.
fix implementation of PromiseStream.<<(elem1,elem2,elems)
Added '/system/cluster' top-level supervisor for all cluster daemons.
Scalariform
add some scaladoc for ActorCell.ChildrenContainers
disallow actor creation while shutting down
remove ActorContext.suspendForChildTermination, handle exceptions, add docs
Adding decent ScalaDoc to the apply and create methods of ActorSystem
Reinstating the magic number 2 into the stack-hack by Roland
#1878 - whippin' up some badass ClassLoader magicks
Removing legacy section of documentation
Sprinkling stardust
Artistic reinterpretation
little polish for TerminatingChildrenContainer
rework childrenRefs to make context.stop(child) fully asynchronous
Cherry-pick ConfigFactory class loader fixes to com.typesafe.config
Re-adding the twitter repo since it is needed, sigh
Removing wasteful repos
Reverted two lines of code mistakenly pushed to early.
Cleaned up failure detector fixing minor issues after review. Renamed internal classes in Node.
Added FSM to the Node's ClusterCommandDaemon to manage the cluster command state as an FSM. Also added tests for all the FSM state changes.
fix shutdown of remote routers, see #1872
Added 'akka.cluster' package object with implicit conversion which creates an augmented 'ActorSystem' with a method 'def node: Node'.
Removing reduntant reduntancy.
Added docs about how to enable 'long-running' and 'timing' tests.
Added ensime files to .gitignore. Plus fixed error from merge.
Turned cluster Node into an Extension.
Added support for 'deputy-nodes'.
Added support for "leader election", the isLeader method and leader election tests. Also fixed bug in scrutinizer not maintaining the 'seen' map.
Renamed Gossiper to Node (and selfNode to vclockNode).
Split up ClusterDaemon into ClusterGossipDaemon (routed with configurable N instances) and ClusterCommandDaemon (shortly to be an FSM). Removed ConnectionManager crap.
Created test tag LongRunningTest ("long-running") for excluding long running (cluster) tests from standard suite.
Added support for checking for Cluster Convergence and completed support for MembershipChangeListener (including tests).
Added testkit time ratio sensitive durations.
Removed printed stack trace from remote client/server errors. Just annoying when client hangs retrying and does not provide any real value since they are the same every time.
Disabling out erroneous cluster 'scrutinize' service until fixed and proper tests are written.
Renamed NodeGossipingSpec to NodeMembershipSpec since it is testing consistency of the cluster node membership table
Finalized initial cluster membership and merging of vector clocks and gossips in case of concurrent cluster updates. Plus misc other fixes.
Rewrite of the VectorClock impl. Now with 'merge' support and slicker API. Also added more tests.
Added NodeGossipingSpec for testing gossiping and cluster membership.
Implemented 'receive(newGossip)' plus misc other changes and fixes.
Added 'or' method to Versioned.
Refactored Gossip state and management. Introduced GossipOverview with convergence info, renamed some fields, added some new cluster commands.
Skips gossipping and cluster scrutinization if singleton cluster.
Switching node status to Up if singleton cluster. Added 'switchStatusTo' method. Updated the test. Profit.
Completed singleton and N-node cluster boot up and joining phase.
Removed cluster seed nodes, added 'join.contact-point', changed joining phase, added singleton cluster mode plus misc other changes.
Changes to cluster specification.
Completed singleton and N-node cluster boot up and joining phase.
Removed cluster seed nodes, added 'join.contact-point', changed joining phase, added singleton cluster mode plus misc other changes.
Changes to cluster specification.
spelling
Removing catch-block and clearing up the ScalaDoc
switch to 2.9.1-1-RC1, which fixes the outstanding problems
Capture early exception within Future.flow, fixes #1869
Removing dataflow docs for Java, as there is no such thing
Update constructors of deque-based mailboxes
Make overridden preRestart more robust
Add Java API class UntypedActorWithStash. Add tests for Stash Java API.
Adding docs about how to do remoting with TypedActors
Removing playMini as to avoid the cyclic dependency, please look at the play-mini docs for examples
Removing the Filter class, keeping Filter.filterOf
rename AddressExtractor to AddressFromURIString, see #1865
clarify purpose of akka.dispatch.Filter in scaladoc
include system.settings when constructing MailboxType, see #1864
take testMaibox setting from akka.testMailbox system property
switch to dispatcher-scoped settings for durable mailboxes, see #1836
make it compile in SBT & Eclipse with 2.9.2-SNAPSHOT
Updating misc docs
Making sure that the java and scala extension docs mention thread safety
add serialVersionUID to ConfigSubstitution
Add note about mixing in the Stash trait
Remove def unstashAll(handler: Receive)
Remove Stash extends Actor
fix Future BoxedUnit stuff
Adding Gatling to the third-party integrations
#1859 - rewriting dispatcher docs
#1860 - Making all default messagequeues be the implementation, and therefor avoiding one level of indirection.
get it to not compile with local settings
Turned cluster Node into an Extension.
improve comments, see #1854
do newActor() and preRestart() in the right order, see #1854
#1855 - JITing 0mq module
document multi-arg logging, see #1856
fix LoggingAdapter multi-arg handling, see #1856
Reword default config headers
Remove unneeded word "that".
Last minute awesomization of the priority based mailbox API docs
Changing so that PriorityMailboxes can be used
clean up mailbox types configurability, see #1843
document RemoteRouterConfig, see #1846
rename durable mailboxes to message queues, see #1844
move back to explicit enqueue/dequeue delegation from Mailbox to MessageQueue, see #1844
Tightening some screws
#1842 - Documenting initial behavior
Updating to HOCON as of 2012-02-21
Update to version as of 2012-02-21
document AllForOneStrategy better, see #1851
remove termination-triggered slaughter, see #1851
add ActorSystem.isTerminated, see #1849
Switching to using a ChannelLocal to keep tabs on the inbound clients address
Clarifying the need for Future.blocking
Adding Receiver-docs
Adding example on how to roll your own ExecutionContext
fix BSONSerializer’s use of paths
Removing unused RemoteServerWriteFailed event, and added docs describing the possibility to listen to remote events
Adding more detailed logs to remote messages
Stab at rectifying the TypedActor Serialization issue
Adding testcase for Receiver
Check if the same message is stashed twice. Add test for this case.
Always get stash capacity from config
Remove DequeBasedMessageQueue.enqueueAllFirst
Adding support for Receiver and yanking out DeathWatcher
Adding support for DeathWatcher for TypedActors
Removing logging from MongoBasedMailbox and BSON serialization
split Mailbox and MessageQueue, see #1844
fix Java API for creating SupervisorStrategy from array
add TestKit.setAutoPilot, see #1807
make LoggingReceiveSpec more robust
make supervisorStrategy of Router configurable, see #1835
Adding support for specifying localAddress in remote config
explicitly set supervisorStrategy for both guardians, see #1839
make ActorSystem.shutdown() asynchronous, see #1840
improve Scaladoc of ActorContext.children
#1830 - Adding warning section in dispatcher docs for the default dispatcher
Missed one place in the documentation containing a reference to an old version of play-mini. All refs are now ok.
Updated version of play-mini in documentation.
Removing durable mailbox logging
Attaching the test this time
Adding union interfaces for ES and EC and E and adding tests to verify signatures
Only aggregating callbacks for the same EC
Adding leeway to ResizerSpec
First stab, do we want to go for throws Throwable or even just switch to RuntimeExceptions?
DOC: Migration guide for routing. See #1700
Added copyright header.
Deleted broken startup scripts.
Updated license to 2012.
don’t mask origin NPE when invoking actor
update to latest config lib
Nulling out the actor field when the actor terminates
Performance optimization for BalancingDispatcher
Restoring the order of the universe
Renaming buddies to team and then optimized usage of the teamwork
Sprinkling magic dust and webscale sauce
fix AddressExtractor (from URI)
fix DefaultResizer.pressure, make ResizerSpec less flaky
unborking compile in akka-cluster (sorry …)
unborking compile in akka-cluster (sorry …)
Switching approaches to check for max throttle
make unbalanced Address() constructor private, fix parsing, see #1806
final touch to actor start-up sequence
tweak ResizerSpec to work better with async Resize(), see #1814
Update mailbox-type config syntax in comments and error messages
Update config syntax
clean up BalancingDispatcher:
Clean ups. Reorder traits for readability. Fewer braces.
Add stash capacity configuration and checking. Add class StashOverflowException. Add tests.
Make Stash.unstashAll() not atomic. Avoid locking on hot path. Update docs in Stash accordingly.
Added resolver to Typesafe snapshot repo used for play-mini. See #1538
Added HTTP docs with a sample application. See #1538
#1813 - Adding clarification regarding JMM and Futures
first stab at balancing algorithm: it passes the tests
special start-up sequence for actors on BalancingDispatcher
scaffolding: make debug printout more useful, add assertions
change IdentityHashComparator to fall back to a real one
DOC: Corrections for the MultiJVM doc. See #1801
Replace akka.actor.timeout with specfic settings. See #1808
fix up FromConfig router: allow empty constructor for Java
fixing up final misnamers (createClassFor -> getClassFor)
fix some more comments and make Router dispatcher configurable
Removed host info from AkkaException. See #1784
fix up Java API for serializers (both use and implement)
incorporate Patrik’s feedback
Minor improvement. See #1713
Removing the old work redistribution
Removing the erronous execution context and added Java API
incorporate Viktor’s feedback and fix some stuff
Improve docs and api for zeromq. See #1713
incorporate Viktor’s review
now that was a nice journey (related to #1804)
Add test for Stash using BoundedDequeBasedMailbox
Check capacity in BoundedDequeBasedMessageQueueSemantics.enqueueAllFirst(). Document semantics of unstashAll().
Bye-bye ReflectiveAccess, introducing PropertyMaster, see #1750
Add bounded deque-based mailbox
add clarification to dispatcher-id documentation
Adjustments based on review. See #1805
Pi is not a constant, it has changed
remove unnecessary “return” in fault handling and make code look nicer
Proper thread names for fork-join-executor. See #1805
clarify wording or Pi sample configuration section
mark two doc tests as TimingTests
DOC: Error Kernel example in Actor docs doesn't do what is intended. See #1803
remove sbteclipse plugin from project/plugins.sbt
Improve docs. Use private instead of instance-private modifiers. Add return type.
Test for Slf4jEventHandler. See #1625
review-based improvements on Serialization
tone it down: just a Warning in case of ambiguous serializers
change serialization to strictly rely on subtyping
System.exit on fatal error and removed actor null check. See #1799 and #1768
Adding link to config for application.conf
Some cleanup and additional tests for Serializable. See #1786
Add @SerialVersionUID to Serializable classes. See #1786
PinnedDispatcher config and docs for dispatcher executor.
Improvements after review
Configure serializer with class as key. See #1789
Revert "Commenting out Akka Cluster because it shouldn't be Released, have fun Jonas ;)"
Commenting out Akka Cluster because it shouldn't be Released, have fun Jonas ;)
Switching to using the internalClassLoader for loading the Serializers
Sprinkling some finals and adding return types
Creating our own FJTask and escalate exceptions to UHE
Add tests for Stash and UnboundedDequeBasedMailbox
Add Stash and UnboundedDequeBasedMailbox
also add configurability section to eclipse example
move Java code snippet into compiled class
add conf override to Pi sample, see #1763
Improving the imports of Future
add router design rationale, see #1772
Adding type parameter to onComplete for better type inference. Making complete throw exception on race. Minor code improvements inside Future
Add comment about ssh config for release script
Update to ScalaSTM 0.5 (which includes Java API)
Making Akka more Android compliant :-)
fixes review comments
Performance improvement
Improvements
Removed unnecessary config options.
Switched to ThreadLocalRandom.
Find serializer by looking at interfaces and super classes. See #1766
Embedding ThreadLocalRandom from jsr166y
update to Havoc’s latest config lib from the serializable branch
fix SchedulerSpec, this time for real.
fix SchedulerSpec and ActorTimeoutSpec
Adding more Scaladoc to Await and Awaitable
ScalaDoc can be stupid
add missing parens
change “Class[_]” into proper Java raw generics
Added cause to LogEventException and ajdusted logging in Future. See #1310
update docs for SLF4J, see #1779
Added reportFailure for logging in ExecutionContext. See #1310
Adding ExecutionContext docs for futures, and adding a Java-friendly ExecutionContexts object
use correct logSource in ActorLogging trait, fixes #1780
include review comments
Renaming tryRecover to recoverWith as in SIP14, adding parameter to foreach
remote deploy docs & provider.getExternalAddressFor (see #1765)
move RemoteServerStarted message to NettyRemoteTransport, fixes #1771
#1773 bites the dust
Refactored multi-jvm tests to use other ports than regular remote testing, also the ability to configure a specific port range for each test.
Renaming NettyRemoteSupport to NettyRemoteTransport everywhere
Switching to an orchestrated teardown on READ_TIMEOUT
Ripping out ReadTimeout and adding Idle timeout and fixing issues with configured port on top of that
Refactored multi-jvm tests to use other ports than regular remote testing, also the ability to configure a specific port range for each test.
Added stack trace to the logging of remote client/server errors. Added helper methods to make a string representation of stack trace to AkkaException object.
make it possible to programmatically deploy (e.g. remotely), see #1644
Making createAsker private, adding docs for 'to', changing Java API to be symmetric to Java
Some polish on the error handling. See #1310
Cleaning up the code
Restructuring the pattern internals so it is modular
Removing Timer and adding isOverdue method on Deadline
Not a running junit test, only verifies compilation
Adding composable actor code snippet to docs, case closed
Remove log warning on reschedule to stopped actor. See #1760
Remove that shit
Switching to FJP as default in the tests
Config dir first in classpath. See #1761
doc updates for #1759
FSM: remove Ev extractor and move -> into companion object, see #1759
Moving the InternalGetActor message to the companion object and verifying that it's possible to call apply from Java
Removed unused import
Removed unused classes referencing CORBA from UUID
Removed unused classes referencing CORBA from UUID
Removed unused classes referencing CORBA from UUID
Removing pipeTo from akka.actor, renamed pipeTo(f,a) to pipe(f,a)
Merging with master
Renaming Future.or to fallbackTo
Replaced Action with Directive in SupervisorStrategy. See #1716
Adding java documentation for andThen, recover and tryRecover
converted tabs to spaces
Changed line endings from DOS to UNIX
Cleaned up AccrualFailureDetectorSpec after changing order of arguments in AccrualFailureDetector
Adding doc to andThen and tryRecover
Added try-finally blocks for each shutdown step in the Gossipper.shutdown method.
Second stab at revised error handling. See #1310
Moved Gossiper, FailureDetector and VectorClock (with tests) to the akka-cluster module. Deleted all old unused cluster code (ZooKeeper-based stuff).
Moved failure detector config from 'remote' to 'cluster'
Enhanced the Gossip state with member status, ring convergence flags etc.
Added some options to the cluster config section. Moved gossip config from remote to cluster section.
Added test for testing the Failure Detector when used together with Gossiper and a set of remote cluster nodes.
Added logging to AccrualFailureDetector
Added 'Versioned' abstraction which is versioned through a VectorClock (including tests).
Added initial join cluster through seed nodes phase to Gossiper plus misc other fixes and additions.
Minor code and ScalaDoc formatting changes.
Changed akka.util.Timer to use nanos and added a 'timeLeft' method.
Changed copyright header to Typesafe.
Moved Gossiper, FailureDetector and VectorClock (with tests) to the akka-cluster module. Deleted all old unused cluster code (ZooKeeper-based stuff).
Removing JMX from akka-actor
Adding correct classloader to executor config
Switching to fork join as default dispatcher and adding tests for it
Updated to latest jsr166y FJ
Rewrite ActorTimeoutSpec not to be iffy. See #1593
Review comments. See #1717
Adjusted performance benchmarks for fjpool. See #1728
Moved failure detector config from 'remote' to 'cluster'
Renaming tests to reflect current APIs
Adding tests for tryRecover and andThen
Making the ExecutionContext protected and adding tryRecover
ZeroMQ module's ConcurrentSocketActorSpec fails.
Enhanced the Gossip state with member status, ring convergence flags etc.
Added some options to the cluster config section. Moved gossip config from remote to cluster section.
Added test for testing the Failure Detector when used together with Gossiper and a set of remote cluster nodes.
Added logging to AccrualFailureDetector
Added 'Versioned' abstraction which is versioned through a VectorClock (including tests).
Added initial join cluster through seed nodes phase to Gossiper plus misc other fixes and additions.
Migrating tests to use the new config for dispatchers
Minor code and ScalaDoc formatting changes.
Changed akka.util.Timer to use nanos and added a 'timeLeft' method.
Changed copyright header to Typesafe.
Enabled zeromq extension for the zeromq tests
Adding support for the ForkJoinPool
removed unused import
Removed processingBehavior, everything in behaviorStack. See #1717
Restructuring how executors are configured and making sure people can plug in their own
Removed file that was added by misstake
Move hotswap stack into Actor trait. See #1717
remote cleanup: include feedback from Viktor and Patrik
DOC: Better use of pipeTo in FaultHandlingDocSample
Describe akka-sbt-plugin AkkaKernelPlugin. Version 2.0-SNAPSHOT. See #1742
Describe akka-sbt-plugin AkkaKernelPlugin. See #1742
I really dislike final var
Added name of the listener actor in pi sample
Remove akka.conf from pi sample.
Updating to latest version of FJP
implement ActorPath.fromString, see #1697
Changing signature of the createThreadPool in MDC to return the MD
properly fix the port==0 issue and use it in more tests
rework use of ClassLoaders, see #1736
Packaging the new FJ pool into Akka
Added section about what happened to Cloudy Akka
rework system initialization, remove remote address from LocalActorRef
DOC: Added note about override of get in ExtensionId
DOC: Derek Wyatt's diagrams of fault tolerance sample, and descriptions. See #1730
Adding tests for recover and mapTo, adding API for creating manifests from Java and doccing things
Improved java version of pi example also. See #1729
wip
Removed the need for passing in 'this' as log source to LoggingReceive. See #1720
wip
DOC: Improved Pi example. Removed latch and return result to listener actor. See #1729
LoggingReceive with implicit ActorContext instead of ActorSystem. See #1720
Rearanged declaration of messages. Improvements from review. See #1722
more wip
wip
DOC: Java version of the fault tolerance sample. See #1722
Use IndexedSeq instead of Arrays.
Factor out localhost and re-enable schoir.
Copy in config lib v0.2.1 commit 2c8bf3be7
Review comments addressed
Removing dead imports from 0mq
Removing dead imports for transactors
Removing dead imports from testkit
Removing dead imports from sbt plugin
Removing dead imports from akka-remote
Removing dead imports from kernel
Removing dead imports in durable mailboxes
Removing dead imports in akka-migration
Removing dead imports from akka-actor
More work on IO reST docs
tighten static type of Duration factories
DOC: Typo
Minor adjustments based on feedback. See #1574
Adding Future docs for Java API
Commented out Schoir plugin. It has bad dependency to log4j 1.2.15. See #1721
Correcting after review
DOC: Added new fault handling sample. See #1574
add Java FSM example and reST, see #1428
Correcting spelling errors and fixing formatting of futures.rst
add implicit Decider conv. for Iterable[CauseAction]
Adding docs and samples for onSuccess, onFailure, onComplete, filter, or, zip and successful/failed
add ExtendedActorSystem to shield ActorSystemImpl
Type inferer help not needed
Moved decider to separate parameter list, and implicit conversion from Seq[Throwable]. See #1714
code style touch up of FSM.scala
Improved API of OneForOneStrategy and AllForOneStrategy. See #1714
More IO docs
Use random port in remaining IO tests
Update zeromq module
IO: Don't use JDK7 api
remove implementation from TypedActor lifecycle traits to require their implementation
IO: Support random port
update copyright headers
incorporate Viktor’s review
document EmptyLocalActorRef, see #1605
include FSMDocSpec example in fsm.rst and fix a few outdated things
Renamed more things to SupervisorStrategy. Updated more docs. See #1711
Make IO tests a bit less abusive
Linking the 0MQ docs
Changed name of the instance field as suggested. See #1702
Adding 0MQ to the microkernel
remove use of `akka.actor.timeout` property for `ask`
add FSMDocSpec and improve FSM API
Adding DEBUG documentation and reference to testkit
Changing logging docs to have settings turned on
Improving logging docs
Moved definition of fault handler from Props to overridable method supervisorStrategy in Actor. See #1711
improve migration guide & helpers, plus some docs
Unborking master, sorry about that. I blame my agent.
Merging in master
weird star replacement
Update akka-actor/src/main/scala/akka/dispatch/Future.scala
Adding brackets around remote debug log parameters
Clarified the code, removing a negation that could be overlooked
Modifications after review
Improvement based on feedback. See #1702
Moving tests after first invocation
Removing noise
Moving debug logging statement back into Mailbox.scala
Switching to tail recursion and lowering numer of moving parts
Adding config options, tests and conditional code for remote message logging
Scaladoc for ByteString
More scaladocs for IO
Unborkening master
add ?(msg, timeout) migration helper, see #1653
Switching to a bit more robust approach
make TestActorRef’s dispatcher configurable, fixes #1162
docs for ask/pipeTo patterns
Switching to LBD and minimizing window of failure
Merging in the daemonicity stuff
move all Ask stuff to akka.pattern
Moving connection-timeout to client since it belongs there, also adding more docs to the remote reference config
Improvements based on feedback
restructure remoting
#1657 - trying to get random port for port 0
Timeout in test
Run callbacks in defined order, and ActorSystem.awaitTermination. See #1704, #1705
#1703 & #1693 - moving daemonicity to one place, and in doing so creating a thread factory in ActorSystem
DOC: Extension sample for application specific settings. See #1702
Adds java api helpers
Adds missing docs and/or return types
minor cleanup
Rename HWM options, remove Frame companion object
Throw a clearer error message when the socket handle is null
Adds scaladocs and removes some options that made no sense in the current implementation
Throw proper Exceptions instead of sys.error()
Update stm migration with changes to the java api
Update java-friendly api for scala stm
DOC: Added migration documentation for dispatchers. See #1406
DOC: Added migration documentation for configuration. See #1406
DOC: Added migration documentation for Scheduler. See #1406
Adds rst docs and a package wide implicit to extend the actorsystem
#1692 - Adding config option for making the Scheduler daemonic
Damn you ConfigSpec
Removing 'name' from dispatchers, just use id, much better
Updating Copyright as per #1660
#1690 - upgrading Netty to 3.3.0-Final
Modifying the test for Futures.reduce
Switching to semi-dynamic discovery of sun.misc.Unsafe entity
Renaming TestActorRef.apply to receive, in order to get forwarders generated & improve Java API
Restructuring ActiveRemoteClient, moving to a shared NioClientChannelFactory, making the timer optionally a daemon, switching to channel groups
Removed FState, switched to isCompleted checks instead of value.isDefined, added zip etc
make poll timeout configurable
make listener a val, remove other lazy vals
use tailrecursive loop for reading the incoming zmq message
uses collect first where appropriate, removes redundant config from the spec and uses a deathwatch for the listener
move private objects for the ConcurrentSocketActor to a companion object
Also setup connection and subscriptions again after a restart
IO ScalaDocs about half done
Changes the intialization logic for the actor so that zeromq options are preserved
Add some migration guidance for stm
Add basic java api for scala stm to transactor module
Update to new Java API for Scala STM
Making it possible to configure all-around stuff for the PinnedDispatcher
Switching the remoting utilities to be daemonic by default
Switching to reduceLeft so we can change the type signature of reduce to be more useful
Use system.dispatchers.lookup
Adds explicit return type for newSocket, removes protected receive and makes context a val
Move reference.conf values, use instance logger
Also actually type case object if you want a case object
Updates style, adds version to error message, makes poll dispatcher configurable and doesn't use an unsupported internal api
Attempt to avoid some race condition in zeromq initialization
specs pass again
Adds initial version of zeromq support for akka 2.0
Another adjustment of pool-size
#1656 - Adding support for configuringthreads created by remoting as daemons
scaladoc for patterns
add akka.pattern.pipeTo, see #1582
move ask machinery from ActorRefProvider to pattern.AskSupport
move everything into package akka.pattern
DOC: fixed minor path err
Brought multi-jvm testing doc up-to-date.
Add schoir description.
Proper fault tolerance in IO test Actors and less blocking in tests
polish “ask” pattern, see #1581
Adjust pool size of default-dispatcher. See #1654
fix a few typos in ActorSystem’s scaladoc. We need those compiled snippets NOW.
Simplified the test cases for Future.or
Removed the RoutedActorRef from RouteeProvider constructor. See #1606
Adding tests for the chaining
Making sure that if the second Future fails, the returned future also fails
Removing nodename
Limit of default-dispatcher pool size, since we run tests in parallel
Should have been in previous merge commit
Moving the creation fo the Create() message to ActorCell
Minor improvements based on feedback. See #1606
Revering moving of the Create() message, leave it there ;)
Removed create-as and corresponding ActorRecipe. See #1511
Changing the semantics of Future.or
fix dormant bug in Mailbox’s error logging
Removing pointledd use of CORBA from the UUID lib
Removing ClusterName
Added an extra test
Moved DefaultScheduler to Scheduler.scala file
Handle remote routers transparently. See #1606
add retry method in IOActorSpecs until I find a better home
Removing legacy configuration message resend shenanigans
Clarified Future.or semantics
FIXMEs, young grasshopper
Dealt with a FIXME and removing Lispiness
Implementing support for serialization manifests in TypedActor calls that are serialized
Merging in TypedProps into master
More review cleanup and extra comments
After review
Creating TypedProps and implementing support for wrapping an arbitrary ActorRef as a TypedActor
Improvements from feedback. See #1641
Echo client may send requests out of order on errors, okay for this example but will try to find way of maintaining order
Initial attempt to allow handling errors in iteratees
typo
incorporate review feedback
Support config of custom router. See #1623
quiesce logging of artifact resolution from Ivy
fix bug in EmptyLocalActorRef serialization, see #1591
make failing test deterministic for RemoteDeathWatchSpec
include actor system’s address in akkaSource log property, see #1621
add Class[_] to LogEvent
Migration kit and start of migration documentation. See #1406.
Removing ListenerManagement and making FSM extend Listeners (but retaining its subscribe/unsubscribe messages
Improvements based on feedback. See #1619
Integrate schoir for distributed testing.
Implemented SmallestMailboxRouter. See #1619
Added a comment in CustomRouterConfig as suggested
Removed exposure of RoutedActorRef in RouterConfig. See #1618
Improvements based on feedback. See #1557
Verify config override of router nr-of-instances. See #1607
Directing the Http docs to Play! mini
Improvements and finalization of dynamically resizable routers, replaces ActorPool. See 1557
fix one spurious buglet in CallingThreadDispatcher, see #1375
Implemented dynamically resizable routers. See #1557
Avoid AtomicInteger overflow in RoundRobinRouter. See #1610
Avoiding 'releaseExternalResources' for the Remote Server's executionHandler
Adding null-checks in shutdown of ActiveRemoteClient
Avoiding to releaseExternalResources on the ExecutionHandler
Removing the ChannelGroup from the ActiveRemoteClient since it's only going to have one channel at a time anyway
fix trivial off-by-one aesthetic buglet: start random names at $a instead of $b
Added explicit type of def context in TypedActor
Added docs to registerOnTermination, that you can add multiple code blocks
Removing trailing dot madness
Removing trailing dot madness
#1604 - Switched to ThreadLocal.remove() and dropping Optionizing things
#1598 - tryComplete == false for KeptPromise
DOC: Routing (Java). See #1600
Java API for RouterConfig. See #1609
Changed message type to Any instead of AnyRef in ask method. See #1608
DOC: Minor improvement of remote docs
Renamed RemoteExtension file to RemoteSettings and it's not an Extension
IO docs, in progress
move listen and connect into IOManager class
Added documentation. See #1583
Force use of IOManager factory methods to create default IOManager. If additional IOManagers are required in an ActorSystem the actors must be started manually
clean up IO tests based on feedback
IOManager is now an Extension
akka.patterns.ask everywhere
WIP: first compiling base
ask-2.3
ask 2.2
ask 2.1
ask-2.0
format
Improvements based on feedback. See #1583
Added akka.pattern.gracefulStop. See #1583
Rewrite dispatcher usage in ActorModelSpec. See #1563
Activated ignored test and verified with profiler that the issue is gone. See #1423
parallelExecution default false, use -Dakka.parallelExecution=true for warp speed.
Use correct implicits
Update IO to new iteratee based api
Avoid allocating varargs array and stack builder
Final fix to zk client, distributed testing for akka works. Happy NY to everyone!
Unborking docs, ScalaDoc....
Unborking master
Adding Java docs for Serialization, and discovered some flaws with the Java API, that have been fixed
Adding Scala reST docs for Serialization
Adding Scala reST docs for Serialization
Rewriting the ProtobufSerializer to be a bit less imperative
Adding minor ScalaDoc to SerializationExtension
Removing a shadowing import in ProtobufSerializer.scala
Catching up with master
Correct wording
Adding some more ScalaDoc to Future to explain foreach, withFilter and filter
Adding throws-clause to the invoke method in TypedActorInvocationHandler
Switching to backing off by cancel the ChannelFuture
Adding backoff-timeout to remote configuration
Added converters from Executor and ExecutorService to ExecutionContext
Adding more ScalaDoc to Serializer
Formatting Future.scala
ZK related fixed. No review since there's nothing to review.
Removing all but 2 uses of dispatcher.eventStream in Future.scala this means we can look into requiring an ExecutionContext instead of MessageDispatcher
Adding more docs to Serialization and making sure that the Protobuf stuff gets its manifests
Closing #1584 and #1585
initial commit on serialization docs
Adding ScalaDoc to ExecutionContext
Introducing ExecutionContext to MessageDispatcher and attaching it to Future
Removing some leftovers in the remoting and tweaking the ActorTimeoutSpec
Switching to encoding and decoding the remote messages inside the Netty pipeline
Switching to using OrderedMemoryAware executor same for all of the remoting, added more remote config tests and switched to mem size conf
fix review comments
document EventStream, see #1507
fall back to unhandled() in onReceive() in docs
add debug logging for unsuccessful actorFor
Re-adding the ExecutionHandler to try to combat OOME
check validity of path elements (actor names), see #1567
implement routing.FromConfig, see #1554
Remote DeathWatch (2): make it work
remove wasteful way of logging
replace % in generated names with ~
Adding ScalaDoc to EventStream
Adding ScalaDoc to EventStream
Adding ScalaDoc to Logging and reinstating the implicit def that converts an ActorSystem to EventStream
Removing testing residue from EventStream
integrate Java remoting sample into docs
Updated Java remote sample to send unhandled messages to deadletters. See #1571
Making the debug an explicit field
Removing MonitorableThread
fix eclipse build: config/ is gone, must not depend on it
Javadoc modification: Changed system.actorOf(classOf[MyActor]) to system.actorOf(MyActor.class) to reflect Java syntax (instead of Scala).
Updated README to explain the Java sample. See #1571
various documentation improvements
Removing unused import and DurableMailboxException from the DurableMailbox.scala
Adding ScalaDoc to ThreadPoolBuilder.scala
Minor changes - updated after feedback. See #1571
Added remote Java sample. See #1571
Removing wasteful DNS resolve
Breaking the verification test up in 3 pats
Removing nodename from the necessities in the remoting docs
Adding support for verifying serializability of Props.creator as well
Adding support for checking the serializability of the Props.creator as per #1462
Making sure it deserializes too
Verifying serializability of messages when serialize is on
Automatically changing min/max so that min is always <= max and max is always >= min
Removing unchecked pattern
Removing mailboxIsEmpty and mailboxSize from MessageDispatcher
Adding rethrowing explanation for Escalate
Adding ScalaDoc for Resume, Restart, Stop and Escalate
Switching withCreator + class to Props + class
Adding validation for ActorPath, to disallow slashes.
add examples for printing out configuration
add a few cross references to remoting docs
Remote DeathWatch (1): daemon communication
Adding documentation for ask timeout expiry
Switching to a default value for the nodename
Changing boxing of TimeoutException to boxing of InterruptedException and adding support for completing Ask Futures with an AskTimeoutException on timeout.
Outputting the node name on startuo
Defaulting the nodename to 'default'
Removing reduntant logic
Remove old sbt 0.7 build files
Improve the distribution download
include akka-sample-remote in remoting.rst
improve docs on context.actorFor
improve docs for expecting exceptions
Removed global counter, which sometimes caused test failures when running tests in parallel.
System property for parallelExecution, use -Dakka.parallelExecution=false in sbt launch script to run build/tests sequential
Specialcasing NonLocalReturn and TimeoutException for Promises
Updated after feedback. See #1546
Updated and corrected documentation for remoting. See #1546
add picture showing remote deployment
Changed file ending to .rst. See #1560
Removed more abbreviations. See #1560
Minor fixes to the sample. See #1560
add picture displaying relations between ref/path/cell/actor
A sample application showcasing some of the remoting capabilities of Akka 2.0. See #1560
Used ZkClient for distributed testing.
Found AkkaRemoteSpec.testConf singleton to use.
Minor cleanup.
Clarifying the remote docs a bit for Java as well
Removing the file known as q
Update stm docs
Replace use of props withCreator in java examples
Create timeouts from java without using durations
Props.defaultDispatcherId -> Dipsatchers.DefaultDispatcherId. See #1458
Ticket 1546: correcting remote docs.
Updated documentation. See #1458
Removed some unessary dispatcher constants in ActorSystem.Settings. See #1458
Improved priority mailbox usage, and documentation. See #1458
Changed so that the configured FQCN of the mailboxType must be a MailboxType, not the Mailbox. See #1458
Rename dispatcherFactory to dispatchers in ActorSystem. See #1458
Improvements based on feedback. See #1458
Improving logging for remote errors
Minor corrections according to Viktor's review.
Done removing "localhost" from test configs.
Initial commit of dispatcher key refactoring, for review. See #1458
Added zk client for distributed barriers + started to simplify test configuration.
Minor updates after further feedback. See #1529
Switch to Await.ready for test latches in transactor spec
Updates based on feedback - use of abstract member variables specific to the router type. See #1529
Remove the remaining files in akka-stm
Add simplified stm docs
Update transactor docs and switch to compiled examples
Add some java helpers for using scala-stm with transactor
Initial port of transactor to scala-stm
Remove .tags_sorted_by_file
Initial take on removing hardcoded value from SGFCR. See #1529
Removed old unused config files in multi-jvm tests.
Move dispatcher-shutdown-timeout to dispatcher config. See #1512.
Removing UnhandledMessageException and fixing tests
Merging in wip-1510-make-testlatch-awaitable-√
Cleaning up some of the Java samples and adding sender to the UnhandledMessage
Publish UnhandledMessage to EventStream
Additional feedback, thanks.
Unwrap InvocationTargetException in ReflectiveAccess.createInstance. See #1555
Updates after feedback
DOC: Extracted sample for explicit and implicit timeout with ask. Correction of akka.util.Timeout
Add copyright header to agent examples
Added CustomMailbox for user defined mailbox implementations with ActorContext instead of ActorCell.
Make MailboxType implementation configurable. See #1484
Removed racy test. See #1495
Updated code after feedback; the actual ActorRef's are returned instead of the name of them. See #1495
Enable parallel execution of tests. See #1548
Bootstrapping the ContextClassLoader of the calling thread to init Remote to be the classloader for the remoting
Making TestLatch Awaitable and fixing tons of tests
Added functionality for a router client to retrieve the current routees of that router. See #1495
Adding FIXME comments to unprotected casts to ActorSystemImpl (4 places)
Tweaking general badassery
Adding general badassery
Migrate agent to scala-stm. See #1281
#1475 - implement mapTo for Java
#1496 - Rename 'targets' to 'routees'
Adding debug messages for all remote exceptions, to ease debugging of remoting
Some more minor changes to documentation
DOC: Added recommendation about naming actors and added name to some samples
Formatting after compile
Disable amqp module as there currently isn't anything there
polish TestKit (add new assertions)
Added brief documentation for Java specific routing.
DOC: Minor cleanup by using Futures.successful, which didn't exist a while ago
redo section Identifying Actors for Java&Scala
Minor corrections from review comments
Clarified the contract for isTerminated
add Java part for fault handling docs
Moving todo out from docs ;)
Minor touchups of FSM docs
DOC: Update Future (Java) Chapter. See #1487
change "direct" to "from-code" in router config
Minor edits to documentation in reference.conf in akka-actor.
document FaultHandlingStrategy for Scala
Initial stab at remoting documentation. See #1175
Clarifying how Awaitable should be used
transparent remoting -> location transparency
Updated after feedback. See #1063
DOC: Update Future (Scala) Chapter. See #1487
Minor edits
Correcting minor things
correct points Henrik raised
Quick and dirty touch-up of Dataflow
Adding Typed Actor docs for Java, as well as some minor tweaks on some Java APIs
Adding Typed Actor docs for Java, as well as some minor tweaks on some Java APIs
Upgraded routing documentation to Akka 2.0. See #1063
document deadLetter in actors concept
polish some more and add remoting.rst
Added 'notes' section formatting and some more content to the cluster, spring and camel pages.
DOC: Update Testing Actor Systems (TestKit) Chapter. See #1486
Misc additions to, and rewrites and formatting of, the documentation.
Removing Guice docs
Adding a Scala and a Java guide to Akka Extensions
Adding Scala documentation for Akka Extensions
polish and add general/actors
Adding a note describing the serialization of Typed Actor method calls
DOC: Disabled agents chapter, since it's in the akka-stm module. See #1488
Update akka sbt plugin
Some documentation fixes
first stab at actor-systems.rst
fix hideous and well-hidden oversight
fix log statement in ActorModelSpec
Minor touchups after review
Removing conflicting versions of typedActorOf and added Scala docs for TypedActor
Updated microkernel
DOC: Improved scheduler doc. Split into Java/Scala samples
DOC: Another correction of stop description
Reducing the number of typedActorOf-methods
DOC: Correction of stop description
DOC: Updated stop description
remove non-user API from ActorContext, see #1516
DOC: Updated preRestart
A few more 2000 milliseconds
make infinite durations compare true to themselves, see #1514
Review comments. Config lib v0.2.0.
Enormous merge with master which probably led to the indirect unfortunate deaths of several kittens
Moved Timeout classes from akka.actor._ to akka.util._.
always start Davy Jones
fix stupid compile error
Removed withRouter[TYPE] method and cleaned up some docs.
Minor review comment fix
incorporate review comments
Rearranged ordering of sections in untyped actor docs
DOC: Rewrite config comments. See #1505
Minor doc changes to Props docs
Updated to config lib 5302c1e
Added 'withRouter[TYPE]' to 'Props'. Added docs (Scala and Java) and (code for the docs) for 'Props'. Renamed UntypedActorTestBase to UntypedActorDocTestBase.
UntypedActor hooks default to super.<whatever> now, plus updated ScalaDoc
Removed STM module. See #1503
DOC: Updated dispatcher chapter (Java). See #1471
Add config spec for akka kernel
Re-enable akka-kernel and add small sample
Adding resource cleanup for TypedActors as to avoid memory leaks
Replacing old Future.fold impl with sequence, avoiding to close over this on dispatchTask, changing UnsupportedOperationException to NoSuchElementException
make Davy Jones configurable
Changing Akka Futures to better conform to spec
rename ActorSystem.stop() to .shutdown()
change default behavior to kill all children during preRestart
Adding Promise.future and the failed-projection to Future
remove ActorRef.stop()
Removing the typed-actor docs for java, will redo later
Remove bin and config dirs from distribution zip
Adding daemonicity to the dispatcher configurator
Making it easier to specify daemon-ness for the ThreadPoolConfig
Adding daemonicity to the dispatcher configurator
Making it easier to specify daemon-ness for the ThreadPoolConfig
rename /null to /deadLetters, fixes #1492
fix docs generation
Added ScalaDoc to Props.
make routers monitor their children
add watch/unwatch for testActor to TestKit
Updated to latest config release from typesafehub, v0.1.8
DOC: Corrections of dispatcher docs from review. See #1471
Making owner in PinnedDispatcher private
Updated docs with changes to 'actorOf(Props(..))'
Split logging doc into scala and java. See #1467
Removed all 'actorOf' methods that does not take a 'Props', and changed all callers to use 'actorOf(Props(..))'
Added with ActorLogging
make writing custom routers even easier
DOC: Updated logging documentation. See #1467
rename Props.withRouting to .withRouter
fix two comments from Patrik
Cleaned up ActorCell, removed all Java-unfriendly methods
More docs
re-enable the missing three multi-jvm tests
DOC: Removed stability-matrix
Added lookup method in Dispatchers to provide a registry of configured dispatchers to be shared between actors. See #1458
DOC: Update Dispatchers (Scala) Chapter. See #1471
gitignore _mb, which is created by file based durable mailbox tests
#1470 - Document Scheduler
implement remote routers
wrap up local routing
Renaming Block to Await, renaming sync to result, renaming on to ready, Await.ready and Await.result looks and reads well
Removing Future.get
Renaming Promise.fulfilled => Promise.successful
Implementing most of the 'pending' Future-tests
Renaming onResult to onSuccess and onException to onFailure
Renaming completeWithResult to success, completeWithException to failure, adding tryComplete to signal whether the completion was made or not
Removing Future.result
Misc improvements of ActorRoutedRef. Implemented a scatterer gatherer router. Enabled router related tests. See #1440.
Removing FutureFactory and reintroducing Futures (for Java API)
DOC: added Henrik to team list
DOC: Disabled stm and transactors documentation
DOC: minor corr
Removing Future.exception plus starting to remove Future.result
DOC: fixed links
DOC: fixed other-doc
DOC: Removed old migration guides and release notes. See #1455
DOC: Removed most of http docs. See #1455
DOC: Removed actor registry. See #1455
DOC: Removed tutorial chat server. See #1455
DOC: Disabled spring, camel and microkernel. See #1455
DOC: Update Durable Mailboxes Chapter. See #1472
Changing AskActorRef so that it cannot be completed when it times out, and that it does not complete the future when it times out
Include copy xsd in release script
Implemented a couple of router types. Updated some tests. See #1440
Removing Future.as[] and commenting out 2 Java Specs because the compiler can't find them?
that was one hell of a FIXME
Converting away the usage of as[..]
Removing resultOrException
add docs for Deadline
fix review comment .size>0 => .nonEmpty
polish Deadline class
Adding Blockable.sync to reduce usage of resultOrException.get
add Deadline class
Tests are green with new Futures, consider this a half-way-there marker
fix some FIXMEs
incorporate review comments
remove LocalActorRef.underlyingActorInstance
merged
tmp
tweak authors.pl convenience
Add scripted release
re-enable multi-jvm tests
simplify structure of Deployer
Converted tabs to spaces.
Removed all @author tags for Jonas Bonér since it has lost its meaning.
Added sbteclipse plugin to the build (version 1.5.0)
require deployment actor paths to be relative to /user
fix remote-deployed zig-zag look-up
Removed multi-jvm test for gossip. Will reintroduce later, but first write in-process tests for the gossip using the new remoting.
fix routing of remote messages bouncing nodes (there may be pathological cases ...)
Initial take on new routing implementation. Please note that this is work in progress!
Removed mist from docs. See #1455
From review comments
whitespace format
Reuse the deployment and default deployment configs when looping through all deployments.
make remote supervision and path continuation work
UnhandledMessageException extends RuntimeException. See #1453
Updated documentation of Actors (Java). See #1435
Minor corrections after review
Making sure that ActorCell isn't serializable
Merging in the hotswap docs into master
Removing 1-entry lists
Clarifying some do's and dont's on Actors in the jmm docs
Removing HotSwap and revertHotSwap
make remote lookup work
Corrections based on review
Elaborating on the message send semantics as per the ticket
Update to sbt 0.11.2
Making sure that it doesn't break for the dlq itself
remove references to Remote* from akka-actor
Moving all the logic for cleaning up mailboxes into the mailbox implementation itself
fix failing ActorLookupSpec: implied synchronicity in AskActorRef.whenDone which does not exist
Changed to Debug log level on some shutdown logging
Use Config in benchmarks
remove residue in RemoteActorRefProvider
Since there is no user API for remoting anymore, remove the old docs
#1339 - adding docs to testing.rst describing how to get testActor to be the implicit sender in TestKit tests
Adding docs to clarify that restarting resets the actor to the original behavior
#1429 - reverting hotswap on restart and termination
make next state’s data available in onTransition blocks, fixes #1422
Updated documentation of Actors Scala. See #1435
add and verify Java API for actorFor/ActorPath, fixes #1343
ActorContext instead of ActorRef in HotSwap code parameter. See #1441
Adding support for range-based setting of pool sizes
Removed actorOf methods from AkkaSpec. See #1439
API doc clarification of context and getContext
Minor fixes from review comments. See #1377
fix ordering issue in ActorLookupSpec
improve ScalaDoc of actorOf methods (esp. their blocking on ActorSystem)
make Jenkins wait for Davy Jones
fix bug in creating anonymous actors
add min/max bounds on absolute number of threads for dispatcher
introduce akka.actor.creation-timeout to make Jenkins happy
Minor formatting, docs and logging edits.
#1437 - Replacing self with the DeadLetterActorRef when the ActorCell is shut down, this to direct captured self references to the DLQ
Renamed startsWatching to watch, and stopsWatching to unwatch
Cleanup of methods in Actor and ActorContext trait. See #1377
document requirements of our Scheduler service
fix remaining review comments
correct spelling of Davy Jones
make testActor spew out uncollected messages after test end
do not use the only two special characters in Helpers.base64
incorporate review comments
replace @volatile for childrenRefs with mailbox status read for memory consistency
rename ActorPath.{pathElemens => elements}
add test for “unorderly” shutdown of ActorSystem by PoisonPill
Unborking master
Added disabled GossipMembershipMultiJVMSpec.
Cleaned up inconsistent logging messages
Added fallback to testConfig in AkkaRemoteSpec
Simplified multi-jvm test by adding all settings and config into the test source itself
Added JSON file for ls.implicit.ly
Updated config documentation
fix one leak in RoutedActorRef (didn’t properly say good-bye)
annotate my new FIXMEs with RK
fix visibility of top-level actors after creation
make scheduler shutdown more stringent
make HashedWheelTimer reliably shutdown
fix bug in ActorRef.stop() implementation
implement ActorSeletion and document ActorRefFactory
implement coherent actorFor look-up
#1424 - RemoteSupport is now instantiated from the config, so now anyone can write their own Akka transport layer for remote actors
Commenting out the ForkJoin stuff until I've cleared some bits with Doug Lea
Changed signatures of Scheduler for better api of by-name blocks
Utilized the optimized withFallback to simplify config checkValid stuff
rename RefInternals to InternalActorRef and restructure
rename top-level paths as per Jonas recommendation
Updated to latest config lib 38fb8d6
Nice looking toString of config settings. See #1373
Made DefaultScheduler Closeable
Revert the removal of akka.remote.transport. Will be used in ticket 1424
Minor fixes from review comments.
Changed config.toValue -> config.root
Removing suspend and resume from user-facing API
Removing startsWatching and stopsWatching from docs and removing cruft
Removing the final usages of startsWatching/stopsWatching
Switching more test code to use watch instead of startsWatching
Removing one use-site of startsWatching
Sprinkling some final magic sauce
Adding support for ForkJoinPoolConfig so you can use ForkJoin
Tweaking the consistency spec for using more cores
fix ActorRef serialization
Making the ConsistencySpec a tad more awesomized
remove ActorRef.address & ActorRef.name
fix actor creation with duplicate name within same message invocation
Adding the origin address to the SHUTDOWN CommandType when sent and also removed a wasteful FIXME
#1409 - offsetting the raciness and also refrain from having a separate Timer for each Active connection handler
fix one typo and one bad omission:
Removed obsolete samples, see #1278
#1417 - Added a test to attempt to statistically verify memory consistency for actors
First walk throught of FIXME. See #1378
Changed LinkedList to Iterable in constructor, see #1278
fix EventStreamSpec by adding Logging extension
merge master into wip-ActorPath-rk
merge master into wip-ActorPath-rk
Added todos for 2.0 release, see #1278
Making sure that all access to status and systemMessage is through Unsafe
Added initial support for ls.implicit.ly to the build, still need more work though
second step: remove LocalActorRefProvider.actors
Updated after comments, see #1278
Replaced removed visibility, see #1278
Updated to latest config lib and changed how reference config files are loaded.
Added dispatcher to constructor of DefaultDispatcher. See #1380
Use scala.util.control.NoStackTrace
Added *.vim to .gitignore
Making TypedActors an Akka Extension and adding LifeCycle overrides to TypedActors, see #1371 and #1397
Execute scheduled tasks in system default dispatcher. See #1380
stdout-loglevel = WARNING in AkkaSpec
Skip stack trace when log error without exception. See #1402
Minor review fixes
Slf4jEventHandler should not format log message. See #1401
Changed slf4j version to 1.6.4. See #1400
Updated DefaultScheduler and its Spec after comments, see #1393
Added logConfig to ActorSystem and logConfigOnStart property. See #1373
Added some variations of the TellThroughputPerformanceSpec
Added configuration for seed nodes in RemoteExtension and Gossiper. Also cleaned up reference config from old cluster stuff.
Removed obsolete sample modules and cleaned up build file.
Creating ExtensionId, AbstractExtensionId, ExtensionIdProvider and Extension
Reinterpretation of Extensions
first step: sanitize ActorPath interface
Added BroadcastRouter which broadcasts all messages to all the connections it manages, also added tests.
Removed unnecessary method and utilize System.nanoTime directly instead. See #1381
Minor fixes from review
Moving the untrustedMode setting into the marshalling ops
Decreased the time to wait in SchedulerSpec to make tests run a wee bit faster, see #1291
PORT_FIELD_NUMBER back to origin
Modularize configuration. See #1361
Removing legacy comment
Updated the scheduler implementation after feedback; changed Duration(x, timeunit) to more fluent 'x timeunit' and added ScalaDoc
Removing @inline from Actor.sender since it cannot safely be inlined anyway. Also, changing the ordering of the checks for receiveTimeout_= so it passed -optimize compilation without whining
Introduced Duration instead of explicit value + time unit in HWT, Scheduler and users of the schedule functionality. See #1291
#1372 - Making sure that ActorCell is 64bytes so it fits exactly into one cache line
Removing a wasteful field in ActorCell, preparing to get to 64bytes (cache line glove-fit
Removing commented out code
Removing obsolete imports from ReflectiveAccess
Added test of HWT and parameterized HWT constructor arguments (used in ActorSystem), see #1291
version 2 of the addressing spec
Removing ActorContext.hasMessages
Adding a FIXME so we make sure to get ActorCell down to 64bytes
Removing 1 AtomicLong from all ActorCells
Removed unecessary code in slf4j logger, since logSource is already resolved to String
Switching to sun.misc.Unsafe as an experiment, easily revertable
Remove default time unit in config. All durations explicit. See #1363
add ActorSystem.hasExtension and throw IAE from .extension()
add some more docs
write addressing & path spec
Adjustments based on Viktor's review comments.
Adjustments based on review comments. See #1141
Latest config lib
add extension mechanism
Docs: Changed organization id from se.scalablesolutions.akka to com.typesafe.akka
Removing unused utilities
Switching to Switch for the shutdown flag for the bubble walker, and implementing support for stopping with an error
change source tag in log events from AnyRef to String
Removed unecessary import
Changed to parseString instead of parseReader
#1351 - Making sure that the remoting is shut down when the ActorSystem is shut down
Replaced akka.config with new configuration utility. See #1141 and see #1342
Adding DispatcherPrerequisites to hold the common dependencies that a dispatcher needs to be created
Adding DispatcherPrerequisites to hold the common dependencies that a dispatcher needs to be created
merge system-cleanup into master
merge system-cleanup into master
Adding warning message for non-eviction so that people can see when there's a bug
Switching to the same system message emptying strategy as for the normal Dispatcher, on the BalancingDispatcher
incorporate Viktor’s review comments
rename app: ActorSystem to system everywhere
rename AkkaConfig to Settings
rename ActorSystem.root to rootPath
mark timing tags so they can be omitted on Jenkins
move japi subpackages into their own directories from reduced Eclipse disturbances
clean up initialization of ActorSystem, fixes #1050
Removing UnsupportedActorRef and replacing its use with MinimalActorRef
Renaming startsMonitoring/stopsMonitoring to startsWatching and stopsWatching
Prolonging the timeout for the throughput performance spec
Making sure that dispatcher scheduling for shutdown is checked even if unregister throws up
Switching to a Java baseclass for the MessageDispatcher so we can use primitive fields and Atmoc field updaters for cache locality
Removing Un(der)used locking utils (locking is evil) and removing the last locks from the MessageDispatcher
Added cleanUp callback in Mailbox, dused in ZooKeeper. Some minor cleanup
Removing bounded executors since they have probably never been used, also, removing possibility to specify own RejectedExecutionHandler since Akka needs to know what to do there anyway. Implementing a sane version of CallerRuns
- expose ActorRefProvider.AkkaConfig - relax FSMTimingSpec a bit
Doh
Switching to AbortPolicy by default
BUSTED !
Temporary fix for the throughput benchmark
remove app argument from TypedActor
remove app argument from Deployer
remove app argument from eventStream start methods
remove app argument from Dispatchers
Removing yet another broken ActorPool test
Removing pointless test from ActorPoolSpec, tweaking the ActiveActors...Capacitor
Removing nonsensical check for current message in ActiveActorsPressureCapacitor
move AkkaConfig into ActorSystem companion object as normal class to make it easier to pass around.
start clean-up of ActorSystem structure vs. initialization
Enabled durable mailboxes and implemented them with mailbox types. See #895
Removing potential race condition in reflective cycle breaking stuff
Moving comment to right section
It is with great pleasure I announce that all tests are green, I now challenge thee, Jenkins, to repeat it for me.
add comment in source for 85e37ea8efddac31c4b58028e5e73589abce82d8
introduce base64 random names
implement 'stopping' state of actors
fix more EventFilter related issues
fix EventStreamSpec (was relying on synchronous logger start)
do not stop testActor
remove ActorRef from Failed/ChildTerminated and make some warnings nicer
improve DeadLetter reporting
fix one safe publication issue
silence some more expected messages which appeared only on Jenkins (first try)
clean up test output, increase default timeouts
correct cleanupMailboxFor to reset the system messages before enqueuing
Removed RoutedProps.scala (moved the remaining code into Routing.scala).
Removed config elements for Mist.
Cleaned up RoutedProps and removed all actorOf methods with RoutedProps.
fix some bugs, but probably not the pesky ones
Add config default for TestKit wait periods outside within()
further tweak timings in FSMTimingSpec
adapt TestTimeSpec to recent timefactor-fix
Splitting out the TypedActor part of the ActorPoolSpec to isolate it
Removing postMessageToMailbox and taking yet another  stab at the pesky balancing dispatcher race
make FSMTimingSpec even more robust (no, really!)
add specific override from System.getProperties for akka.test.timefactor
use actor.self when logging system message processing errors
Added explicit import to help SBT with dependencies during documentation generation
rename MainBus to EventStream (incl. field in ActorSystem)
rename akka.AkkaApplication to akka.actor.ActorSystem
Removing hostname and port for AkkaApplication, renaming defaultAddress to address, removing Deployer.RemoteAddress and use the normal akka.remote.RemoteAddress instead
Merging in Henriks HashedWheelTimer stuff manually
Merging in Henriks HashedWheelTimer stuff manually
Merging with master
Removing InetSocketAddress as much as possible from the remoting, switching to RemoteAddress for an easier way forward with different transports. Also removing quite a few allocations internally in the remoting as a side-efect of this.
turn unknown event in StandardOutLogger into warning
optimize SubchannelClassification.publish (manual getOrElse inline)
Updated after code review:
Removing one allocation per remote message send
Removing the distinction between client and server module for the remoting
minor fix to logging
Extend waiting time for "waves of actors" test by explicitly waiting for all children to stop.
Update deployer to use actor path rather than old address (name)
Removed 'GENERIC' log level, now transformed into Debug(..)
Rename address to name or path where appropriate
Add an initial implementation of actor paths
Removed CircuitBreaker and its spec.
Moved 'failure-detector' config from 'akka.actor.deployment.address' to 'akka.remote'. Made AccrualFailureDetector configurable from config.
implement SubchannelClassification in MainBus, fixes #1340
actually make buddies comparator consistent now
make BalancingDispatcher.buddies comparator transitive
Adding support for reusing inbound connections for outbound messages, PROFIT
Removing akka-http, making so that 'waves of actors'-test fails when there's a problem and removing unused config sections in the conf file
Removing akka-http, making so that 'waves of actors'-test fails when there's a problem and removing unused config sections in the conf file
De-complecting the notion of address in the remoting server
Removing a pointless TODO and a semicolon
Simplifying remote error interception and getting rid of retarded exception back-propagation
Removing a couple of lines of now defunct code from the remoting
Removing executionHandler from Netty remoting since we do 0 (yes, Daisy, you heard me) blocking ops in the message sends
Removing some bad docs
finish EventFilter work and apply in three places
Get rst docs building again and add some adjustments to the new cluster documentation
Adding stubs for implementing support for outbound passive connections for remoting
Turning all eventHandler log messages left in NettyRemoteSupport into debug messages and remove more dual entries (log + event)
Removign dual logging of remote events, switching to only dumping it into the eventHandler
Removing the guard (ReentrantGuard) from RemoteServerModule and switching from executing reconnections and shutdowns in the HashWheelTimer instead of Future w. default dispatcher
Adding a project definition for akka-amqp (but without code)
Renaming ActorCell.supervisor to 'parent', adding 'parent' to ActorContext
Dropping akka-http (see 1330)
Reducing sleep time for ActorPoolSpec for typed actors and removing defaultSupervisor from Props
TestEventFilter overhaul
FSMTimingSpec overhaul
Slight tweak to solution for ticket 1313
work-around compiler bug in ActiveRemoteClient
fix Logging.format by implementing {} replacement directly
Moving in Deployer udner the provider
fix ActorDocSpec by allowing INFO loglevel to pass through
Removing unused code in ReflectiveAccess, fixing a performance-related issue in LocalDeployer and switched back to non-systemServices in the LocalActorRefProviderSpec
fix FSMActorSpec (wrongly setting loglevel)
expand MainBusSpec wrt. logLevel setting
Removing outdated and wrong serialization docs
Switching to AddressProtocol for the remote origin address
fix TestKit.receiveWhile when using implicitly discovered maximum wait time (i.e. default argument)
fix LoggingReceiveSpec
incorporate review from Viktor & Jonas
Adding initial support in the protocol to get the public host/port of the connecting remote server
Folding RemoteEncoder into the RemoteMarshallingOps
Profit! Removing Uuids from ActorCells and ActorRefs and essentially replacing the remoting with a new implementation.
Refining the DeadLetterActorRef serialization test to be a bit more specific
#1320 - Implementing readResolve and writeReplace for the DeadLetterActorRef
#1324 - making sure that ActorPools are prefilled
Renaming JavaAPI.java:mustAcceptSingleArgTryTell to mustAcceptSingleArgTell
Removing unused handleFailure-method
Increasing the timeout of the ActorPoolSpec for the typed actors
All green, fixing issues with the new ask implementation and remoting
Removing obsolete test for completing futures in the dispatcher
Porting the Supervisor spec
Making sure that akka.transactor.test.CoordinatedIncrementSpec works with machines with less than 4 cores
Making sure that akka.transactor.test.TransactorSpec works with machines with less than 4 cores
Making sure that the JavaUntypedTransactorSpec works with tinier machines
Making walker a def in remote
Removing futures from the remoting
Removing Channel(s), tryTell etc, everything compiles but all tests are semibroken
Removing Channel(s), tryTell etc, everything compiles but all tests are semibroken
fix up Slf4jEventHandler to handle InitializeLogger message
remove references to !! from docs (apart from camel internals)
Added a simple performance test, without domain complexity
Changed so that clients doesn't wait for each message to be processed before sending next
some polishing of new Logging
clean up application structure
Removed trailing whitespace
Added documentation page on guaranteed delivery.
Added section about how to do a distributed dynamo-style datastorage on top of akka cluster
Some more cluster documentation
first time Eclipse deceived me: fix three more import statements
fix overlooked Gossiper change (from rebase)
introducing: MainBus feat. LoggingBus
introducing: MainBus feat. LoggingBus
reformatting
Removed all old failure detectors.
Cleaned up new cluster specification.
Rename new cluster docs from 'new' to 'cluster'
Some more updates to the new cluster documentation
Turned pendingChanges in Gossip into an Option[Vector].
Improved ScalaDoc.
Conversion of class names into literal blocks
fix CallingThreadDispatcher’s assumption of mailbox type
Formatting of TransactionFactory settings is changed to be compatible with Configuration section
Added 'Intro' section to new cluster specification/docs. Also minor other edits.
Added some sections to new clustering specification and also did various reformatting, restructuring and improvements.
Defer a latch count down in transactor spec
Renamed RemoteDaemon.scala to Remote.scala.
Initial version of gossip based cluster membership.
Some docs for new clustering
add dispatcher.shutdown() at app stop and make core pool size smaller to let the tests run
fix InterruptedException handling in CallingThreadDispatcher
Class names and types in the text are converted into literal blocks
broken bullet list is corrected
broken bullet list is corrected
add pimp for Future.pipeTo(Channel), closes #1235
document anonymous actors and their perils, fixes #1242
remove all use of Class.getSimpleName; fixes #1288
add missing .start() to testing.rst, fixes #1266
#1059 - Removing ListenerManagement from RemoteSupport, publishing to AkkaApplication.eventHandler
relax over-eager time constraint in FSMTimingSpec
fix CallingThreadDispatcher and re-enable its test
make most AkkaSpec-based tests runnable in Eclipse
make most AkkaSpec-based tests runnable in Eclipse
A typo is corrected in Future example Scala code
Preparing to remove channels and ActorPromise etc
merge master into parental-supervision, fixing up resulting breakage
Moving postMessageToMailbox* to ScalaActorRef for some additional shielding.
Included akka-sbt-plugin in build, since I need timestamped version to be published
nearly done, only two known test failures
improve some, but tests are STILL FAILING
Made improvements to IndexSpec after comments from Viktor.
Removed reference to non-committed code
Adding Actor.watch and Actor.unwatch - verrrry niiiice
add TestKit.fishForMessage
Rewriting DeathWatchSpec and FSMTransitionSpec to do the startsMonitoring inside the Actor
I've stopped hating Jenkins, fixed the pesky elusing DeathWatch bug
Making the DeadLetterActorRef push notifications to the EventHandler
Making sender always return an ActorRef, which will be the DeadLetterActor if there is no real sender
Adding possibility to specify Actor.address to TypedActor
Removing the 'def config', removing the null check for every message being processed and adding some TODOs
Introduce parental supervision, BUT TESTS ARE STILL FAILING
Removing senderFuture, in preparation for 'sender ! response'
#1299 - Removing reply and tryReply, preparing the way for 'sender ! response'
Added Gossip messages and management to remote protocol. Various refactorings and improvements of remoting layer.
Removing receiver from Envelope and switch to use the Mailbox.actor instead, this should speed up the BalancingDispatcher by some since it doesn't entail any allocations in adopting a message
Changed API in VectorClock and added references in scaladoc.
teach new tricks to old FaultHandlingStrategy
split out fault handling stuff from ActorCell.scala to FaultHandling.scala
#1210 - fixing typo
replace ConcurrentLinkedQueue with single-linked list for Mailbox.systemQueue
Removing ActorCell.ref (use ActorCell.self instead), introducing Props.randomAddress which will use the toString of the uuid of the actor ref as address, bypassing deployer for actors with 'randomAddress' since it isn't possible to know what the address will be anyway, removing Address.validate since it serves no useful purpose, removing guard.withGuard in MessageDispatcher in favor of the less costly lock try-finally unlock strategy
Renaming createActor to actorOf
Pushing the memory per actor down to 464 bytes. Returning None for the Deploy if there is no config
merge in Viktor’s dispatcher uuid map removal
remove SystemEnvelope
Removing uuid tracking in MessageDispatcher, isn't needed and will be reducing the overall memory footprint per actor
Making sure that the RemoteActorRefProvider delegates systemServices down to the LocalActorRefProvider
Adding clarification to DeathWatchSpec as well as making sure that systemServices aren't passed into the deployer
Adding extra output to give more hope in reproducing weird test failure that only happens in Jenkins
Switching to a cached version of Stack.empty, saving 16 bytes per Actor. Switching to purging the Promises in the ActorRefProvider after successful creation to conserve memory. Stopping to clone the props everytime to set the application default dispatcher, and doing a conditional in ActorCell instead.
Changing so that the mailbox status is ack:ed after the _whole_ processing of the current batch, which means that Akka only does 1 volatile write per batch (of course the backing mailboxes might do their own volatile writes)
Removing RemoteActorSystemMessage.Stop in favor of the sexier Terminate message
Tidying up some superflous lines of code in Scheduler
Making a Java API for Scheduler (JScheduler) and an abstract class Scheduler that extends it, to make the Scheduler pluggable, moving it into AkkaApplication and migrating the code.
fix small naming errors in supervision.rst
add first draft of supervision spec
Adding try-finally in the system message processing to ensure that the cleanup is performed accurately
Renaming InVMMonitoring to LocalDeathWatch and moved it into AkkaApplication, also created a createDeathWatch method in ActorRefProvider so that it's seeded from there, and then removed @volatile from alot of vars in ActorCell since the fields are now protected by the Mailbox status field
Relized that setAsIdle doesn't need to call acknowledgeStatus since it's already called within the systemInvoke and invoke
Removing Gossiper. Was added prematurely by mistake.
Vector clock implementation, including tests. To be used in Gossip protocol.
Renaming link/unlink to startsMonitoring/stopsMonitoring
Cleaning up a section of the ActorPool
Get remoting working under the remote actor ref provider
fix remaining issues apart from multi-jvm
Making so that if the given address to a LocalActorRef is null or the empty string, it should use the toString of the uuid
rename application to app everywhere to make it consistent
Removing pointless AtomicReference since register/unregister is already lock protected
fix akka-docs compilation, remove duplicate applications from STM tests
fix akka-docs compilation, remove duplicate applications from STM tests
Added test for parallel access of Index
make EventHandler non-global
make EventHandler non-global
Simplified (and improved speed) of PHI calculation in AccrualFailureDetector, according to discussion at https://issues.apache.org/jira/browse/CASSANDRA-2597 .
Added test for akka.util.Index (ticket #1282)
Added sampling of latency measurement
Added .cached to .gitignore
Adding documentation for the ExecutorService and ThreadPoolConfig DSLs
#1285 - Implementing different internal states for the DefaultPromise
fix compilation of akka-docs
pre-fix but disable LoggingReceiveSpec: depends on future EventHandler rework
remove superfluous AkkaApplication.akkaConfig() method (can use AkkaConfig() instead)
#1192 - Removing the 'guaranteed delivery'/message resend in NettyRemoteSupport
Removing pointless Index in the Remoting
Documenting the EventBus API and removing some superflous/premature traits
Adding support for giving a Scala function to Index for comparison, and fixed a compilation error in NEttyRemoteSupport
Adding a Java API to EventBus and adding tests for the Java configurations
Enabling the possibility to specify mapSize and the comparator to use to compare values for Index
introduce nicer AkkaSpec constructor and fix FSMActorSpec
rename AkkaConfig values to CamelCase
make everything except tutorial-second compile
make everything except tutorial-second compile
Added an Accrual Failure Detector (plus tests). This is the best general purpose detector and will replace all others.
Adding another test to verify that multiple messages get published to the same subscriber
Switching to have the entire String event being the classification of the Event, just to enfore uniqueness
Making sure that all subscribers are generated uniquely so that if they don't, the test fails
Adding even more tests to the EventBus fixture
Adding EventBus API and changing the signature of DeathWatch to use the new EventBus API, adding some rudimentary test fixtures to EventBus
make akka-actor-tests compile again
make akka-actor-tests compile again
Changing DeathWatchSpec to hopefully work better on Jenkins
Moved method for creating a RoutedActorRef from 'Routing.actorOf' to 'Actor.actorOf'
Added support for custom user-defined routers
Increasing the timeouts in the RestartStrategySpec
Start on getting the actor tests compiling and running again
Cleaned up internal API
Removed the ActorRegistry, the different ActorRefProvider implementations now holds an Address->ActorRef registry. Looking up by UUID is gone together with all the other lookup methods such as 'foreach' etc. which do not make sense in a distributed env. 'shutdownAll' is also removed but will be replaced by parental supervision.
Removed the ActorRegistry, the different ActorRefProvider implementations now holds an Address->ActorRef registry. Looking up by UUID is gone together with all the other lookup methods such as 'foreach' etc. which do not make sense in a distributed env. 'shutdownAll' is also removed but will be replaced by parental supervision.
Scalariform & add AkkaSpec
'fixing' the DeathWatchSpec, since the build machine is slow
#1239 - fixing Crypt.hexify entropy
Major refactoring of RemoteActorRefProvider, remote Routing and FailureDetector, including lots of fixes and improvements.
Update stm module to work with AkkaApplication
Removing a synchronization in UUIDGen.java and replace it with a CCAS
Removing a TODO that was fixed
Renaming linkedActors to children, and getLinkedActors to getChildren
Adding final declarations on a number of case-classes in Mailbox.scala, and also made constants of methods that were called frequently in the hot path
Implementing support for custom eviction actions in ActorPool as well as providing default Props for workers
introduce AkkaApplication
add Eclipse .cache directories to .gitignore
Added multi-jvm tests for remote actor configured with Random router.
Added multi-jvm test for remote actor configured with RoundRobin router.
Added multi-jvm test for remote actor configured with Direct router.
Added configuration based routing (direct, random and round-robin) to the remote actors created by the RemoteActorRefProvider, also changed the configuration to allow specifying multiple remote nodes for a remotely configured actor.
Remove the sun.tools.tree.FinallyStatement import
Begin using compiled code examples in the docs. See #781
Adding AbstractPromise to create an AtomicReferenceFieldUpdater to get rid of the AtomicReference allocation
Preventing wasteful computation in BalancingDispatcher if buddy and receiver is the same guy
Removing PriorityDispatcher since you can now use Dispatcher with UnboundedPriorityMailbox or BoundedProprityMailbox
switch on force inlining of Mailbox one-liners
optimize Mailbox._status usage
Removing the AtomicInteger in Mailbox and implementing it as a volatile int + AtomicIntegerFieldUpdater in AbstractMailbox.java
Tidying up some of the CAS:es in the mailbox status management
Renaming InVMMonitoring
Moving the cause into Recreate
Removing actorClass from ActorRef signature, makes no sense from the perspective of distribution, and with async start it is racy
Removing getSupervisor and supervisor from ActorRef, doesn't make sense in a distributed setting
Removing ActorRef.isRunning - replaced in full by isShutdown, if it returns true the actor is forever dead, if it returns false, it might be (race)
All tests pass! Supervision is in place and Monitoring (naïve impl) works as well
Removing the old Supervision-DSL and replacing it with a temporary one
Temporarily fixing RestartStrategySpec
Removing defaultDeployId from Props
Placed the plugin in package akka.sbt
Adding a todo for AtomicReferenceFieldUpdater in Future.scala
Restructuring the ordering of recreating actor instances so it's more safe if the constructor fails on recreate
Improving the ActorPool code and fixing the tests for the new supervision
Adding more tests to ActorLifeCycleSpec and the DeatchWatchSpec
Switched the signature of Props(self => Receive) to Props(context => Receive)
rename {Message,Mailbox}Handling.scala
fold Mailbox.dispatcherLock into _status
Renamed 'replication-factor' config element to 'nr-of-instances' and 'ReplicationFactor' case class to 'NrOfInstances'.
Now treating actor deployed and configured with Direct routing and LocalScope as a "normal" in-process actor (LocalActorRef).
Added misc tests for local configured routers: direct, round-robin and random.
Switching to filterException
Replacing ActorRestartSpec with ActorLifeCycleSpec
Added configuration based routing for local ActorRefProvider, also moved replication-factor from 'cluster' section to generic section of config'
Major rework of supervision and death watch, still not fully functioning
log warning upon unhandled message in FSM, fixes #1233
add () after side-effecting TestKit methods, fixes #1234
Merging with master
Some clean up of the compile and test output
Changed all 'def foo(): Unit = { .. }' to 'def foo() { .. }'
Added error handling to the actor creation in the different providers
Disabled akka-camel until issues with it have been resolved.
Making sure that the receiver doesn't become the buddy that gets tried to register
Added eviction of actor instance and its Future in the ActorRefProvider to make the registry work again. Re-enabled the ActorRegistrySpec.
Implementing buddy failover
Upgrading to SBT 0.11
Upgrading to SBT 0.11
Adding comment about thread-safety
Making the event-handlers dispatcher configurable in config, also fixing a nasty shutdown in it
Removing shutdownAllAttachedActors from MessageDispatcher and moving starting of the dispatcher close to the registration for execution
Add file-based barrier for multi-jvm tests
Enforing an acknowledgement of the mailbox status after each message has been processed
Adding a more friendly error message to Future.as
Switching so that createMailbox is called in the ActorCell constructor
Making sure that you cannot go from Mailbox.Closed to anything else
Changing Mailbox.Status to be an Int
Removing freshInstance and reverting some of the new BalancingDispatcher code to expose the race condition better
Update to scala 2.9.1
Update to sbt 0.11.0
Update to ivy-published plugins
Partial fix for the raciness of BalancingDispatcher
Changing so that it executes system messages first, then normal message then a subsequent pass of all system messages before being done
Rewriting so that the termination flag is on the mailbox instead of the ActorCell
Update to sbt 0.11.0-RC1
reorder detach vs. terminated=true
Rewriting the Balancing dispatcher
fix more bugs, clean up tests
fix ActorModelSpec
Added first test of remote actor provisioning using RemoteActorRefProvider.
Completed RemoteActorRefProvider and parsing/management of 'remote' section akka.conf, now does provisioning and local instantiation of remote actor on its home node. Also changed command line option 'akka.cluster.port' to 'akka.remote.port'.
Added doc about message ordering guarantees.
Decoupling system message implementation details from the Mailbox
Refactor Mailbox handling
Implementing spinlocking for underlyingActorInstance
Renaming Death to Failure and separating Failure from the user-lever lifecycle monitoring message Terminated
fix some of the immediate issues, especially those hindering debugging
Change the package name of all classes in remote module to 'akka.remote'.
Almost there... ActorRefSpec still has a failing test
Moved remote-centric config sections out of 'cluster' to 'remote'. Minor renames and refactorings.
Rename ActorInstance to ActorCell
Resolve merge conflict with master
Resolve merge conflict with master
Removing deployId from config, should be replaced with patterns in deployment configuration that is checked towards the address
Use non-automatically settings in akka kernel plugin
RemoteActorRefProvider now instantiates actor on remote host before creating RemoteActorRef and binds it to it.
Added deployment.remote config for deploying remote services and added BannagePeriodFailureDetectorFailureDetector config.
Added lockless FailureDetector.putIfAbsent(connection).
Removing compression from the remote pipeline since it has caused nothing but headaches and less-than-desired performance
Remove SelfActorRef and use ActorContext to access state in ActorInstance. See #1202
Remove SelfActorRef and use ActorContext to access state in ActorInstance. See #1202
add more API docs to routing/Pool.scala
unborkin master
improve documentation of Future.onComplete wrt. ordering
Adding 'asynchronous' init of actors (done blocking right now to maintain backwards compat)
Switching to full stack traces so you know wtf is wrong
improve failure messages in case of expectMsg... timeout
Add empty actor context (just wrapping self). See #1202
Added RemoteActorRefProvider which deploys and instantiates actor on a remote host.
Initial breakout of ActorInstance. See #1195
Temporarily exclude test until race condition is analyzed and fixed
Adding a write-up of supervision features that needs to be tested
Removing debug printouts
Removing LifeCycle from Props, it's now a part of AllForOnePermanent, OneForOnePermanent etc
Changed 'deployment.clustered' to 'deployment.cluster'
Changed 'deployment.clustered' to 'deployment.cluster'
Renamed to AkkaKernelPlugin
Improved comments
Added ActorRefProvider trait, LocalActorRefProvider class and ActorRefProviders container/registry class. Refactored Actor.actorOf to use it.
Use address rather than uuid for ActorRef equality
Trying to merge with master
Trying to merge with master
Starting to work on DeathWatch
Removed all files that were moved to akka-remote.
Added akka.sublime-workspace to .gitignore.
Created NetworkEventStream Channel and Listener - an event bus for remote and cluster life-cycle events.
Moved remote-only stuff from akka-cluster to new module akka-remote.
Commenting out -optimize, to reduce compile time
disabled akka-cluster for now, getting ready to re-add akka-remote
Added FIXME comments to BannagePeriodFailureDetector
Added tests for the CircuitBreaker
Added NOTE to CircuitBreaker about its status and non-general purpose
Rewrote CircuitBreaker internal state management to use optimistic lock-less concurrency, and added possibility to register callbacks on state changes.
Rewrote and abstracted remote failure detection and added BannagePeriodFailureDetector.
Moved FailureDetector trait and utility companion object to its own file.
Reformatting.
Get the (non-multi-jvm) cluster tests working again
Added old 'clustering.rst' to disabled documents. To be edited and included into the documentation.
#1180 - moving the Java API to Futures and Scala API to Future
Start removed but cluster is broken
Removing preStart invocation for each restart
fix compilation warnings (failed @Inline, erased types)
remove akka.util.Helpers.flatten
silence two remaining expected exceptions in akka-actor-tests
Removing wasteful level-field from Event
fixes #976: move tests to directories matching their package declaration
improve wording of doc for Future.await(atMost), fixes #1158
Refactored and renamed API for FailureDetector.
Removing localActorOf
Removed the ClusterProtocol.proto file
Added configuration for failure detection; both via akka.conf and via Deploy(..).
Switching to geronimos 2.0 impl instead of glassfish since it's in the sbt default maven repo
Removed old duplicated RemoteProtocol.java.
Refactored state management in routing fail over.
Disabled ClusterActorRefCleanupMultiJvmSpec until fail over impl completed.
Disabled the replication tests until fixed.
Added recompiled versions of Protobuf classes, after change of package name and upgrade to Protobuf 2.4.1.
Disabled the replication tests until they are fixed.
Removing wasteful locking in BalancingDispatcher
Changed 'connectionSize' to 'nrOfConnections'.
Added toString to ReplicationFactor config element.
#1145 - Changing private[akka] to protected[akka] in MessageDispatcher so that inheriting classes can access those methods
Added failure detection to clustered and local routing.
Cleaned up JavaAPI and added copyright header.
Included event.thread.getName in log message again. See #1154
Misc reformatting, clean-ups and removal of '()' at a bunch of methods.
Manually fix protocols for scaladoc generation. See #1017
Removed trailing whitespace.
Converted tabs to spaces.
Re-added NetworkFailureSpec for emulating shaky network, slow responses, network disconnect etc.
Added initial (very much non-complete) version of failure detection management system.
Added Thread name to the formatting of Slf4j handler.
Removed Tab and Newline from formatting in Slf4j handler.
Moved all 'akka.remote' to 'akka.cluster', no more 'remote' package.
Added disclaimer about typesafe repo, and info about underlaying repositories. See #1127 (cherry picked from commit 11aef33e3913aee922b78fcc684416a03439d9a5)
Use RoutedProps to configure Routing (local and remote). Ticket #1060
#1146 - Switching from STringBuffer to StringBuilder for AkkaException
Removing the dispatcher from inside the EventHandler
Adding initial support for Props
Adding initial support for Props
Upgrade to Camel 2.8.0
Minor changes to logging and reformatting.
Rewrote RandomFailoverMultiJvm and RoundRobinFailoverMultiJvm to use polling instead of Thread.sleep.
Changed akka.cluster.client.read-timout option.
Changed remote client read timeout from 10 to 30 seconds.
Added explicit call to Cluster.node.start() in various tests.
Switched from Thread.sleep to Timer.isTicking in various tests.
Added method to ClusterNode to check if an actor is checked out on a specific (other) node, also added 'start' and 'boot' methods.
Added Timer class to be used in testing and more.
Refactored and enhanced EventHandler with optional synchronous logging to STDOUT to be used during testing and debugging sessions.
Added preferred node to ReplicationTransactionLogWriteThroughNoSnapshotMultiJvmSpec to make it more stable.
#1140 - Adding support for specifying ArrayBlockingQueue or LinkedBlockingQueue in akka.conf and in the builder
#1139 - Added akka.actor.DefaultBootableActorLoaderService for the Java API
Removed unused Routing.scala file.
Removed logging in startup of TransactionLog to avoid triggering of cluster deployment.
Build RemoteProtocol protobuf classes for Protobuf 2.4.1
Changed style of using empty ZK barrier bodies from 'apply()' to 'await()'
Moved the Migration multi-jvm test to different package.
Removed MigrationAutomaticMultiJvmSpec since the same thing is tested in a better way in the router fail-over tests.
Disabled test in Ticket1111 (scatter gather router) which fails randomly, awaiting fix.
Renamed and rewrote DirectRoutingFailoverMultiJvmSpec.
Disabled mongo durable mailboxes until compilation error is solved
Instruction of how to write reference to ticket number in first line.
Making TypedActor use actorOf(props)
Removing global dispatcher
Split up the TransactionLogSpec into two tests: AsynchronousTransactionLogSpec and SynchronousTransactionLogSpec, also did various minor edits and comments.
fix cancellation of FSM state timeout by named timer messages, fixes #1108
IO: Include cause of closed socket
more logging
Avoid MatchError in typed and untyped consumer publishers
More work on trying to get jenkins to run again
Attemp to get jenkinks running again; added .start after actorOf for clusteredActorRef
cleanup of unused imports
Changing default connection timeout to 100 seconds and adding Future Java API with tests
Changed the elements in actor.debug section in the config from receive = "false" to receive = off. Minor other reformatting changes
removal of some unwanted println in test
minor doc improvent
minor doc improvent
minor doc improvent
RoutedActorRef makes use of composition instead of inheritance. Solves ticket 1075 and 1062 (broken roundrobin router)*
Forward-porting documentation-fixes and small API problems from release-1.2
Added policy about commit messages to the Developer Guidelines documentation
remove now-unused "package object akka"
restore behavior of Future.as[T] and .asSilently[T] (fixes #1088)
clarify origin of stats in release notes
remove pluggable serializers from release notes, since they are only in 2.0
first stab at release notes for release 1.2
Adding DeployId and LocalOnly to Props
ticket 989 #Allow specifying preferred-nodes of other type than node:<name>/ currently the task has been downscoped to only allow node:name since we need to rethink this part. Metadata is going to make it / it possible to deal with way more nodes
ticket 989 #Allow specifying preferred-nodes of other type than node:<name>/ currently the task has been downscoped to only allow node:name since we need to rethink this part. Metadata is going to make it / it possible to deal with way more nodes
ticket 989 #Allow specifying preferred-nodes of other type than node:<name>/ currently the task has been downscoped to only allow node:name since we need to rethink this part. Metadata is going to make it / it possible to deal with way more nodes
ticket 989 #Allow specifying preferred-nodes of other type than node:<name>/ currently the task has been downscoped to only allow node:name since we need to rethink this part. Metadata is going to make it / it possible to deal with way more nodes
ticket #992: misc fixes for transaction log, processed review comments
ticket #992: misc fixes for transaction log, processed review comments
Removing the shutdownHook from the Actor object since we are no longer using Configgy and hence no risk of leaks thereof
fix for a failing test:who changes the compression to none but didn't fix the testsgit add -A..you badgit add -A
Turning remote compression off by default, closing ticket #1083
ticket 934: fixed review comments
ticket #958, resolved review comments
Add check for jdk7 to disable -optimize
Future: Reschedule onTimeout/orElse if not yet expired
ticket #992 after merge
ticket #992 after merge
ticket #992
Removing deprecated methods from Future and removing one of the bad guys _as_
Removing awaitBlocking from Future since Futures cannot be completed after timed out, also cleaning up a lot of code to use pattern matching instead of if/else while simplifying and avoiding allocations
Reimplementing DefaultCompletableFuture to be as non-blocking internally as possible
IO: add method to retry current message
Future: make callback stack usable outside of DefaultPromise, make Future.flow use callback stack, hide java api from Scala
Adding parens to postStop in FSM, closing ticket #1079
Some more quietening of tests
Quieten the stm test output
Disable parallel execution in global scope
Some quietening of camel test output
ticket #1032.. more cleanup
Remove heap size option for multi-jvm
Quieten the multi-jvm tests
ticket #1032
make tryTell nice from Scala AND Java
Use dispatcher from the passed in Future
uncomment test
Reenabling mutable zeroes test
Adding Props to akka.actor package
Set PartialFunction[T,Unit] as onResult callback, closing ticket #1077
Changing initialization and shutdown order to minimize risk of having a stopped actor in the registry
Update Future docs
Allow a Duration to be used with Future.apply
revert scalacOptions
Future: move implicit dispatcher from methods to constructor
Updating Netty to 3.2.5, closing ticket #1074
ticket #934
clean up Channel API (fixes #1070)
Renaming sendOneWay to tell, closing ticket #1072
Making MessageDispatcher an abstract class, as well as ActorRef
Deprecating getSender and getSenderFuture
Minor cleanup in Future.scala
Refactor Future.await to remove boiler and make it correct in the face of infinity
ticket #889 some cleanup
Update sbt plugins
Update multi-jvm docs
oops, sorry :-(
clean up test output some more
fixed redis based serialization logic, added RedisClientPool, which is needed to handle multiple asynchronous message persistence over single threaded Redis - now runs all test cases in DurableMailboxSpec
Test output cleaned up in akka-actor-tests and akka-testkit
Simpler method for filtering EventHandler during testing
Add test for ticket 1054
Add test for ticket 1054
Formatting fix
KeptPromise executes callbacks async
Future.onComplete now uses threadlocal callback stack to reduce amount of tasks sent to dispatcher
ticket #889 after merge
ticket #889 after merge
ticket #889
reverting optimized Future methods due to more consistent behavior and performance increase was small
documentation: fix bullet list
Reducing IO load again to try and pass test on CI build
Partial fix for ticket #1054: execute callbacks in dispatcher
CI build failure was due to IOManager not shutting down in time. Use different ports for each test so failure doesn't happen
Reduce load during test to see if CI build will succeed.
Don't use global dispatcher in case other tests don't cleanup
formatting fixes
Update scalariform plugin
Lots of code cleanup and bugfixes of Deployment, still not AOT/JIT separation
Cleaning up some code
ticket 889, initial checkin
Reformat with scalariform
Add scalariform plugin
Update to sbt 0.10.1
ticket #958 after merge
ticket #958
Added docs for Amazon Elastic Beanstalk
ticket #1048
Add abstract method for dispatcher name
Ticket 981: Include akka properties in report
Ticket 981: minor
Ticket 981: Moved general stuff to separate package
Ticket 981: Include system info in report
Ticket 981: Better initialization of MatchingEngineRouting
Ticket 981: Added mean to percentiles and mean chart
Ticket 981: Added mean to latency and througput chart
Ticket 981: Adjusted how report files are stored and result logged
ticket 1043
Removing superflous fields from LocalActorRef
ticket 917, after merge
ticket 917
Forward porting fix for #1034
Ticket 1002: dist dependsOn packageBin
removing replySafe and replyUnsafe in favor of the unified reply/tryReply
Moving the config of the Scalariform
ticket 885
Adding Scalariform plugin
mark Actor.freshInstance as @experimental
add @experimental annotation in akka package
improve docs for dispatcher throughput
Testing out scalariform for SBT 0.10
Ticket 1002: Include target jars from dependent subprojects
Ticket 1002: Only dist for kernel projects
Ticket 1002: group conf settings
Closing ticket #1030, removing lots of warnings
Adding some ScalaDoc to the Serializer
Switching to Serializer.Identifier for storing within ZK
The Unb0rkening
Optimizing serialization of TypedActor messages by adding an identifier to all Serializers so they can be fetched through that at the other end
ticket 974, part 2
ticket 974
Ticket 964: rename of reply?
improve scaladoc of TestKit.expectMsgAllOf
improve testing docs
changed scope of spring-jms dependency to runtime
Move sampleCamel-specific Ivy XML to Dependencies object
Excluded conflicting jetty dependency
re-added akka-sample-camel to build
In progress documentation update
fix bad merge
Covers tickets 988 and 915. Changed ActorRef to notify supervisor with max retry msg when temporary actor shutdown. Actor pool now requires supervision strategy. Updated pool docs.
Adding support for having method parameters individually serialized and deserialized using its own serializer, closing ticket #765
Increasing timeouts for the RoundRobin2Replicas multijvm test
Adding TODO declarations in Serialization
Tweaking the interrupt restore it and breaking out of throughput
1025: some cleanup
Adding warning docs for register/unregister
ticket 1025
issue 956
issue 956
issue 956
ticket 972
Ticket 981: Generate html report with results and charts
#1018, removal of git add akka-actor/src/main/scala/akka/actor/ActorRef.scala
Ticket 1002: Inital sbt 0.10 migration
Ticket 1002: Inital sbt 0.10 migration
Updating copyright section to Typesafe Inc. etc
Updating copyright section to Typesafe Inc. etc
fix 909 and 1011 part IV
1011 and 909
1011 and 909
Reviving BadAddressDirectRoutingMultiJvmSpec, MultiReplicaDirectRoutingMultiJvmSpec, SingleReplicaDirectRoutingMultiJvmSpec, RoundRobin2ReplicasMultiJvmSpec
Unbreaking the build, adding missing file to checkin, I apologize for the inconvenience
Adding method return types to Serialization, and adding ScalaDoc, and cleaning up some of the code
Making sure that access restrictions is not loosened for private[akka] methods in PinnedDispatcher
Adding ScalaDoc to akka.util.Switch
Add test exclude to sbt build
Early abort coordinated transactions on exception (fixes #909). Rethrow akka-specific exceptions (fixes #1011).
Update multi-jvm plugin
Tweaking the RoutingSpec to be more deterministic
Enabling 'cluster' for the routing tests
Ticket 981: Added generation of anoher chart for display of throughput and latency in same graph
Ticket 981: Minor improvement of error handling
1018: removal of deprecated git status
removal of deprecated git checkout wip-1018
Issue 990: MBean for Cluster improvement
Update the multi-jvm testing docs
Documentation for MongoDB-based Durable Mailboxes
Revert "Commenting out the Mongo mailboxen until @rit has published the jar ;-)"
Removing Scheduler.shutdown from public API and making the SchedulerSpec clean up after itself instead
Making the RoutingSpec deterministic for SmallestMailboxFirst
Commenting out the Mongo mailboxen until @rit has published the jar ;-)
Ticket 1005: Changed WeakReference to lookup by uuid
Migrate to Hammersmith (com.mongodb.async) URI Format based URLs; new config options     - Mongo URI config options     - Configurable timeout values for Read and Write
Add the Mongo Durable Mailbox stuff into the 0.10 SBT Build
Update the building akka docs
Add testkit as a test dependency for all modules
Getting akka-actor-tests to run again
disabled test because they keep failing, will be fixed later
Adding support for daemonizing MonitorableThreads
moved sources
moved files to a different directory
Changing 'flow' to use onException instead of other boilerplate
Removing the ForkJoin Dispatcher after some interesting discussions with Doug Lea, will potentiall be resurrected in the future, with a vengeance ;-)
Move multi-jvm tests to src/multi-jvm
Add publish settings to sbt build
Add reST docs task to sbt build
Disable cross paths in sbt build
Add unified scaladoc to sbt build
Update build and include multi-jvm tests
Basis for sbt 0.10 build
Move sbt 0.7 build to one side
Ticket 981: Prefixed all properties with benchmark.
Ticket 981: Added possibility to compare benchmarks with each other
Making sure that RemoteActorRef.start cannot revive a RemoteActorRefs current status
Ticket 981: Added charts for percentiles
Index is moved to the akka.util package
Clean up some comments from the original template mailbox
Must actively complete the future even if no messages exist; setting it to null on no match fixes testing issues.
jmm doc improvement
Migrated to new Option[T] based findAndModify code to more cleanly detect 'no matching document'
Update Hammersmith dependency to the 0.2.6 release.
Mongo Durable Mailboxes now Working against snapshot hammersmith.
1. Completed replication over BookKeeper based transaction log with configurable actor snapshotting every X message. 2. Completed replay of of transaction log on all replicated actors on migration after node crash. 3. Added end to end tests for write behind and write through replication and replay on fail-over.
1. Implemented replication through transaction log, e.g. logging all messages and replaying them after actor migration 2. Added first replication test (out of many) 3. Improved ScalaDoc 4. Enhanced the remote protocol with replication info
Contains the new tests for the direct routing
Contains the new tests for the direct routing
Contains the new tests for the direct routing
Seems to be no idea to reinitialize the FJTask
Adding guards in FJDispatcher so that multiple FJDispatchers do not interact badly with one and another
Added more info about how to create tickets in assembla
Removed unnecessary check in ActorRegistry
Ensured that if an actor of the same logical address already exists in the registry then just return that, if not create a new one.
Changed semantics for 'Actor.actorOf' to be the same locally as on cluster: If an actor of the same logical address already exists in the registry then just return that, if not create a new one.
First pass at Mongo Durable Mailboxes in a "Naive" approach.  Some bugs in Hammersmith currently surfacing that need resolving.
First pass at Mongo Durable Mailboxes in a "Naive" approach.  Some bugs in Hammersmith currently surfacing that need resolving.
Added some Thread.sleep in the tests for the async TransactionLog API.
Removed call to 'start()' in the constructor of ClusterActorRef
Minor refactoring and restructuring
Ticket 981: Removed the blocking call that was used to initialize the routing rules in the OrderReceiver
Ticket 981: EventHandler instead of println
Ticket 981: Refactoring, renamed and consolidated
Ticket 981: Reduced default repeat factor to make tests quick when not benchmarking
Ticket 981: Removed TxLog, not interesting
Inital import of akka-sample-trading. Same as original except rename of root package
remove Actor.preRestart(cause: Throwable)
make ActorRestartSpec thread safe
Disabled the migration test until race condition solved
Adding support for ForkJoin dispatcher as FJDispatcher
Added ScalaDoc to TypedActor
work on the clustered test; deployment of actor fails and this test finds that bug
Added a test for actors not being deployed in the correct node
Use new cluster test node classes in round robin failover
Remove double creation in durable mailbox storage
Cluster test printlns in correct order
more work on the roundrobin tests
Removed the peterexample tests
Lot of work in the routing tests
Closing ticket #963
Closing ticket #979
Manual merge
Comment out zookeeper mailbox test
Attempt to get the zoo under control
Comment out automatic migration test
- removed unused imports
removed unused class
WIP of serialization cleanup
Formatting
Ticket 975, moved package object for duration to correct directory
readded the storage tests
added missing storage dir
- initial example on the clustered test to get me up and running.. will be refactored to a more useful testin the very near future.
- initial example on the clustered test to get me up and running.. will be refactored to a more useful testin the very near future.
Added description of how to cancel scheduled task
Move Timeout into actor package to make more accessible, use overloaded '?' method to handle explicit Timeout
re-enable akka-camel and akka-camel-typed and fix compile and test errors
Include package name when calling multi-jvm tests
make currentMessage available in preRestart, test #957
- moving the storage related file to the storage package - added some return types to the Cluster.scala
add Actor.freshInstance hook, test #955
- more work on the storage functionality
Added 'private[cluster]' to all methods in ClusterNode API that deals with UUID.
Added multi-jvm test for ClusterDeployer
add debug output to investigate cause of RoutingSpec sporadic failures
add TestKit.expectMsgType
Added 'node.shutdown()' to all multi-jvm tests. Renamed MigrationExplicit test.
Added tests for automatic actor migration when node is shut down. Updated to modified version of ZkClient (0.3, forked and fixed to allow interrupting connection retry).
Reorganized tests into matching subfolders.
Make better use of implicit Timeouts, fixes problem with using KeptPromise with aggregate methods (like traverse and sequence)
formatting fix
Moved remoting code into akka-cluster. Removed akka-remote.
Uncommented failing leader election tests
Removed link to second non-existing chapter in the getting started guide
Added tests for storing, retrieving and removing custom configuration data in cluster storage.
Added methods for Cluster.remove and Cluster.release that accepts ActorRef
Added test scenarios to cluster registry test suite.
Added multi-jvm test for doing 'store' on one node and 'use' on another. E.g. use of cluster registry.
Added multi-jvm test for leader election in cluster
Add Future.orElse(x) to supply value if future expires
Silence some more noisy tests
Silence some more noisy tests
Basic scalacheck properties for ByteString
add TestFSMRef docs
ActorRef.start() returns this.type
move FSMLogEntry into FSM object
add TestFSMRefSpec and make TestFSMRef better accessible
add TestFSMRef
break out LoggingFSM trait and add rolling event log
change all actor logging to use Actor, not ActorRef as source instance
Improved TestEventListener
Make it possible to use infinite timeout with Actors
add debug traceability to FSM (plus docs)
add terminate(Shutdown) to FSM.postStop
FSM: make sure terminating because of Failure is logged
make available TestKitLight without implicit ActorRef
add stateName and stateData accessors to FSM
make TestKit methods return most specific type
document logging and testing settings
document actor logging options
document channel and !!/!!! changes
improve usability of TestKit.expectMsgPF
first part of scala/actors docs
enable quick build of akka-docs (html)
Added myself to the team
Start migrating Future to use Actor.Timeout, including support for never timing out. More testing and optimization still needed
Better solution to ticket #853, better performance for DefaultPromise if already completed, especially if performing chained callbacks
tracking down reason for failing scalacheck test, jvm needs '-XX:-OmitStackTraceInFastThrow' option so it doesn't start giving exceptions with no message or stacktrace. Will try to find better solution.
Test for null Event message
enable actor message and lifecycle tracing
Nothing to see here... move along...
Add several instances of silencing events
Filter based on message in TestEventListener
Add akka-testkit as a test dependency
Added TestEventListener
relax FSMTimingSpec timeouts
introduce generations for FSM named timers, from release-1.2
TestKit timeouts and awaitCond (from release-1.2)
remove stack trace duplication for AkkaException
Merging all my branches together
Merging all my branches together
Renamed sample class for compute grid
Added test for ChangeListener.newLeader in cluster module
Added ChangeListener.nodeDisconnected test
Added test for Cluster ChangeListener: NodeConnected, more to come. Also fixed bug in Cluster
wip - add detailed unit tests and scalacheck property checks
Update scalatest to 1.6.1, and add scalacheck to akka-actor-tests
Add Future.onTimeout
Added some more localActorOf methods and use them internally in cluster
Added 'localActorOf' method to get an actor that by-passes the deployment. Made use of it in EventHandler
Added transaction log spec
Improved error handling in Cluster.scala
Adding some ScalaDoc to Future
Changed a typo
Renamed ReplicationSpec to TransactionLogSpec. + Added sections to the Developer Guidelines on process
document Channel contravariance
make Channel contravariant
Adding initial test cases for serialization of MethodCalls, preparing for hooking in Serialization.serialize/deserialize
Switching from -123456789 as magic number to Long.MinValue for noTimeoutGiven
Moving the timeout so that it isn't calculated unless the actor is running
Making the default-serializer condition throw NoSerializerFoundException instead of plain Exception'
removed duplicate copy of Serializer.scala
reformatted akka-reference.conf
pluggable serializers - changed entry name in akka.conf to serialization-bindings. Also updated akka-reference.conf with a commented section on pluggable serializers
Specialize mapTo for KeptPromise
re-add implicit timeout to ActorRef.?, but with better semantics:
revert changes to java api
Didn't test that change, reverted to my original
Update to latest master
Adjust all protocols to work with scaladoc
Manually fix remote protocol for scaladoc
unify sender/senderFuture into channel (++)
- more work on the storage functionality
Refactoring the use of !! to ?+.get for Akka internal code
Creating a package object for the akka-package to put the .as-conversions there, also switching over at places from !! to ?
fixed protobuf new version issues and some minor changes in Actor and ActorRef from merging
Replacing !!! with ?
Adding 'ask' to replace 'sendRequestReplyFuture' and removing sendRequestReply
Adding microkernel-server.xml to Akka since kernel has moved here
renamed 'remote' module config option to 'cluster' + cleaned up config file comments
Moved 'akka.remote' config elements into 'akka.cluster'
Added storage models to remote protocol and refactored all clustering to use it.
- Made ClusterActorRef not extends RemoteActorRef anymore - Refactored and cleaned up Transaction Log initialization
Improving error messages from creating Actors outside of actorOf, and some minor code reorganizing
Added ZK flag for cluster deployment completed + methods for checking and invalidating it
Adding support for mailboxIsEmpty on MessageDispatcher and removing getMailboxSize and mailboxSize from ActorRef, use actorref.dispatcher.mailboxSize(actorref) and actorref.dispatcher.mailboxIsEmpty(actorref)
1. Made LocalActorRef aware of replication 2. Added configuration for transaction log replication 3. Added replication schemes WriteThrough and WriteBehind 4. Refactored serializer creation and lookup in Actor.scala 5. Extended network protocol with replication strategy 6. Added BookKeeper management to tests 7. Improved logging and error messages 8. Removed ReplicatedActorRef 9. Added snapshot management to TransactionLog
Removing Jersey from the docs
Adding TODOs to TypedActor so we know what needs to be done before 2.0
Making ActorRef.address a def instead of a val
Minor renames of parameters of non-user API an some code cleanup
Minor renames of parameters of non-user API an some code cleanup
Adding tests for LocalActorRef serialization (with remoting disabled)
Issue #595: Pluggable serializers - basic implementation
Migrate akka-camel-typed to new typed actor implementation.
Some more minor code cleanups of Mist
Some more minor code cleanups of Mist
Adding documentation for specifying Mist root endpoint id in web.xml
Cleaning up some Mist code
Cleaning up some Mist code
Removing the Jersey Http Security Module plus the AkkaRestServlet
Removing the Jersey Http Security Module plus the AkkaRestServlet
Adding support for specifying the root endpoint id in web.xml for Mist
Adding support for specifying the root endpoint id in web.xml for Mist
Rewriting some serialization hook in Actor
Removing pointless guard in ActorRegistry
Removing AOP stuff from the project
Combine ByteString and ByteRope
Manually transform CPS in Future loops in order to optimize
IO continuations seem to not suffer from stack overflow. yay!
implement the rest of CPSLoop for Future. Need to create one for IO now
Removing residue of old ActorRef interface
might have a workable solution to stack overflow
Removing deprecation warnings
Removing ActorRef.isDefinedAt and Future.empty and moving Future.channel to Promise, renaming future to promise for the channel
Added failing test due to stack overflow, will try and fix
Forgot to add cps utils. Suspect TailCalls is not actually goign to stop stack overflow. will test.
update to be compatible with latest master
refactoring for simplicity, and moving cps helper methods to akka.utils, should work with dataflow as well
Found way to use @suspendable without type errors
Attempt to solve ticket #902
Expand K/V Store IO test
these aren't promises, they are futures
Improve clarity and type safety
Renaming Future.failure to Future.recover
move all IO api methods into IO object, no trait required for basic IO support, IO trait only needed for continuations
Add cps friendly loops, remove nonsequential message handling (use multiple actors instead)
Change from @suspendable to @cps[Any] to avoid silly type errors
refactoring and minor edits
change read with delimiter to drop the delimiter when not inclusive, and change that to the default.
Add test of basic Redis-style key-value store
Add support for reading all bytes, or reading up until a delimiter
Add ByteRope for concatenating ByteStrings without copying
Rename IO.Token to IO.Handle (the name I wanted but couldn't remember)
- more work on the storage functionality
Hold state in mutable collections to reduce allocations
IOActor can now handle multiple channels
remove unused val
Option to process each message sequentially (safer), or only each read sequentially (better performing)
Adding support for completing senderFutures when actor is stopped, closing ticket #894. Also renaming DurableEventBasedDispatcher to DurableDispatcher
Adding withFilter to Future, fixing signature of filter, cleaning up foreach
Allow find-replace to replace versions in the docs
Update docs
Update release scripts for modules merge
Add microkernel dist
Reduce copying ByteString data
lining up config name with reference conf
updates to remove references to akka-modules
adding modules docs
updates to remove references to akka-modules
refactor test
adding modules docs
First try at implementing delimited continuations to handle IO reads
fixing sample-camel config
copied over akka-sample-camel
Move thread into IOWorker
Commented out akka-camel and akka-kernel
Added tests for round-robin routing with 3 nodes and 2 replicas
Minor changes and some added FIXMEs
- Changed implementation of Actor.actorOf to work in the the new world of cluster.ref, cluster.use and cluster.store. - Changed semantics of replica config. Default replicas is now 0. Replica 1 means one copy of the actor is instantiated on another node. - Actor.remote.actorFor/Actor.remote.register is now separated and orthogonal from cluster implementation. - cluster.ref now creates and instantiates its replicas automatically, e.g. it can be created first and will then set up what it needs. - Added logging everywhere, better warning messages etc. - Each node now fetches the whole deployment configuration from the cluster on boot. - Added some config options to cluster
fixing compile looks like some spurious chars were added accidentally
reverting the commenting out of akka-camel, since kernel needs it
commenting out camel, typed-camel, spring for the time being
Add ByteString.concat to companion object
Full clustering circle now works, remote communication. Added test for cluster communication. Refactored deployment parsing. Added InetSocketAddress to remote protocol.
ByteString will retain it's backing array when possible
Adding a Java API method for generic proxying
Removing hte slick interfaces/implementation classes because it`s just not good enough
Removing hte slick interfaces/implementation classes because it`s just not good enough
Adding support for retrieving interfaces proxied and the current implementation behind the proxy, intended for annotation processing etc
- added the InMemoryRawStorage (tests will follow)
Handle shutdowns and closing channels
Use InetSocketAddress instead of String/Int
Allow an Actor to have more than 1 channel, and add a client Actor to the test
removed duplicated NodeAddress
Moved ClusterNode interface, NodeAddress and ChangeListener into akka-actor as real Trait instead of using structural typing. Refactored boot dependency in Cluster/Actor/Deployer. Added multi-jvm test for testing clustered actor deployment, check out as LocalActorRef and ClusterActorRef.
- fixed the type problems. This time with a compile (since no tests currently are available for this code).
- disabled the functionality for the rawstorage, will inspect it locally. But at least the build will be running again.
- initial checkin of the storage functionality
move over some more config
fix compilation by changing ref to CompletableFuture to Promise
second pass, mostly compiles
Added a default configuration object to avoid object allocation for the trivial case
Adding a test to verify usage of TypedActor.self outside of a TypedActor
first pass at moving modules over, sbt project compiles properly
Added some API to be able to wrap interfaces on top of Actors, solving the ActorPool for TypedActor dilemma, closing ticket #724
Adding support for customization of the TypedActor impl to be used when creating a new TypedActor, internal only, intended for things like ActorPool etc
Rewriting one of the tests in ActorRegistrySpec not to use non-volatile global state for verification
Adding assertions to ensure that the registry doesnt include the actor after stop
Removing duplicate code for TypedActor
Renaming CompletableFuture to Promise, Renaming AlreadyCompletedFuture to KeptPromise, closing ticket #854
Added docs about setting JVM options and override akka.conf options to multi-jvm-testing.rst
removed ./docs
Add individual options and config to multi-jvm tests
Rename NIO to IO
IO Actor initial rewrite
ByteString improvements
ByteString.apply optimized for Byte
Basic immutable ByteString implmentation, probably needs some methods overriden for efficiency
Improved NIO Actor API
Removing excessive allocations and traversal
Reformatting and some cleanup of the Cluster.scala code
Removing some boilerplate code in Deployer
Tidying up some code in ClusteredActorRef
Switching to a non-blocking strategy for the CyclicIterator and the RoundRobin router
Removing lots of duplicated code
Removing allocations and excessive traversals
add NIO trait for Actor to handle nonblocking IO
Renaming EBEDD to Dispatcher, EBEDWSD to BalancingDispatcher, ThreadBasedDispatcher to PinnedDispatcher and PEBEDD to PriorityDispatcher, closing ticket #784
Harmonizing constructors and Dispatcher-factories, closing ticket #807
Moved secure cookie exchange to on connect established, this means I could remove the synchronization on send, enabling muuuch more throughput, also, since the cookie isn`t sent in each message, message size should drop considerably when secure cookie handshakes are enabled. I do however have no way of testing this since it seems like the clustering stuff is totally not working when it comes to the RemoteSupport
Changed creating ClusterDeployer ZK client on object creation cime rather than on 'init' method time
Replacing hook + provider with just a PartialFunction[String,ActorRef], closing ticket #749
Replacing hook + provider with just a PartialFunction[String,ActorRef], closing ticket #749
Adding the migration guide from 0.10 to 1.0 closing ticket #871
Renaming akka.routing.Dispatcher to Router, as per ticket #729
Adding support for obtaining the reference to the proxy of the currently executing TypedActor, this is suitable for passing on a safe alternative to _this_
Removed typeclass serialization in favor of reflection-based. Removed possibility to create multiple ClusterNode, now just one in Cluster.node. Changed timestamp format for default EventHandler listener to display NANOS. Cleaned up ClusterModule in ReflectiveAccess.
Refactor for improved clarity and performance. 'Either' already uses pattern matching internally for all of it's methods, and the 'right' and 'left' methods allocate an 'Option' which is now avoided.
Refactor to avoid allocations
fix bad move of CallingThreadDispatcherModelSpec
Add PromiseStream
Specialize monadic methods for AlreadyCompletedFuture, fixes #853
add copyright headers
Reverting use of esoteric character for field
Removed some more boilerplate
Cleaned up the TypedActor coe some more
Removing some boilerplate
Implementing the typedActor-methods in ActorRegistry AND added support for multi-interface proxying
Removing the old typed actors
Added copyright header
Turned of verbose mode of formatting
Removed the not implemented transactor code and removed duplicate code
merged with scalariform branch
merged with scalariform branch
converted tabs to spaces
Added Scalariform sbt plugin which formats code on each compile. Also checking in reformatted code
Added Scalariform sbt plugin which formats code on each compile. Also checking in reformatted code
Normalizing the constructors, mixing manifests and java api wasn`t ideal
Making the MethodCall:s serializable so that they can be stored in durable mailboxes, and can be sent to remote nodes
Adding tests and support for stacked traits for the interface part of a ThaipedActor
Adding support and tests for exceptions thrown inside a ThaipedActor
using Config.nodename
Added a future-composition test to ThaipedActor
Added command line options for setting 'nodename', 'hostname' and 'remote-server-port' when booting up an Akka node/microkernel
ThaipedActor seems to come along nicely
- more style related cleanup
Adding warning of using WorkStealingDispatcher with TypedActors
Added deployment code for all 'actorOf' methods
ThaipedActor is alive
fixed typo in docs
- more style related cleanup
Move embedded-repo jars to akka.io
Getting API generation back on track
Bump docs version to 2.0-SNAPSHOT
Bump version to 2.0-SNAPSHOT
Commenting out the 855 spec since it`s not really applicable right now
moved some classes so package and directory match, and s some other other stuff like style issues to remove a lot of yellow and red bars in IntelliJ
Added consistent hashing abstraction class
Added docs for durable mailboxes, plus filtered out replication tests
Added durable mailboxes: File-based, Redis-based, Zookeeper-based and Beanstalk-based
Playing around w new typed actor impl
Removing the use of the local maven repo, and added the jsr31-api ModuleConfig, hopefully this will improve reliability of updates
Added tests for usage of cluster actor plus code backing the test. Added more cluster API to ReflectiveAccess. Plus misc refactorings and cleanup.
Adding the needed repos for the clustering and jmx stuff
Deactivating the 855 spec since the remoting is going to get changed
Resolve merge conflict in cherry-pick
Resolve merge conflict
add some tests for Duration
Commented away failing remoting tests
Added MultiJvmTests trait
Misc fixes everywhere; deployment, serialization etc.
Misc fixes everywhere; deployment, serialization etc.
Added dataflow article
Changed Scalable Solutions to Typesafe
- removed unused imports
add summary of system properties to configuration.rst
Rewriting TypedActor.future to be more clean
Removing weird text about remote actors, closing ticket #851
Update to scala 2.9.0 and sbt 0.7.7
Reusing `akka.output.config.source` system property to output default values when set to non-null value, closing ticket #573
Silencing the output of the source of the configuration, can be re-endabled through setting system property `akka.output.config.source` to anything but null, closing ticket #848
Removing the use of currentTimeMillis for the restart logic, closing ticket #845
Changing signature of traverse and sequence to return java.lang.Iterable, updated docs as well, closing #847
Updating Jackson to 1.8.0 - closing ticket #839
Updating Netty to 3.2.4, closing ticket #838
Exclude all dist projects from publishing
Update docs version to 1.2-SNAPSHOT
Some updates to docs
Update pdf links
Adjust docs html header
Added PDF link at top banner (cherry picked from commit 655f9051fcb144c29ebf0e993047dc3010547948)
Docs: Added links to PDF, removed links to old versions (cherry picked from commit f0b3b8bbb39353ac582fb569624aeba414708d3a)
Adding some tests to make sure that the Future Java API doesn`t change breakingly
Adding docs for Futures.traverse and fixing imports
Adding future docs for fold and reduce for both Java and Scala API
Docs: fixed missing ref (cherry picked from commit 210261e70e270d37c939fa3e551b598d87164faa)
Docs: Added other-doc, links to documentation for other versions (cherry picked from commit d2b634ee085bd7ff69c27626390ae944f71eeaa9)
Adding Future docs for Java API and fixing warning for routing.rst
Docs: Some minor corrections (cherry picked from commit 52a0b2c6b89b4887f84f052dd85c458a8f4fb68a)
Docs: Guice Integration in two places, removed from typed-actors (cherry picked from commit 5b1a610c57e42aeb28a6a1d9c3eb922e1871d334)
Docs: fixed wrong heading
merge
Docs: fixed broken links
Docs: Removed pending
Update tutorial sbt defs to match main project
Rework modular dist and include in release build
Update tutorials and include source in the distribution
Update loader banner and version
Update header in html docs
Include docs and api in release process
Change the automatic release branch to avoid conflicts
Removing logging.rst and servlet.rst and moving the guice-integration.rst into the Java section
Removing unused imports
Adding some docs to AllForOne and OneForOne
Don't deliver akka dist project
Rework dist yet again
Update gfx
Removed jta section from akka-reference.conf (cherry picked from commit 3518f4ffbbdda8ddae26e394604f7e0d22324a38)
Docs: Removed JTA (cherry picked from commit d92d25b15894e34c0df0715886206fefec862d17)
clarify time measurement in testkit
Minor changes to docs + added new akka logo
Docs: Various improvements (cherry picked from commit aad2c29c68a239b8f2512abc5e93d58ca4354a49)
Docs: Moved slf4j from pending (cherry picked from commit ff4107f8e0531b88db317021eeb56d636ba80bad)
Docs: Moved security from pending (cherry picked from commit efcc7325d0b4063dc225f84535ecf1cacf4fd4ee)
Docs: Re-write of Getting Started page (cherry picked from commit 55ef6998dd473f759803e9d6dc862af80b1cfceb)
Docs: Moved getting-started from pending (cherry picked from commit d3f83b2bed989885f318f3d044668a4fac721a3d)
Docs: Converted release notes (cherry picked from commit 0df737e1c7484047616112af8b6daab44d557e73)
Docs: Cleanup of routing (cherry picked from commit 744d4c2dd626913898ed1456bb5fc287236e83a2)
Docs: Moved routing from pending (cherry picked from commit d60de88117e18fc8cadb6b845351c4ad95f5dd43)
Docs: fixed stability matrix (cherry picked from commit 6ef88eae3b96278e25ef386b657af82d9a1ec28f)
Docs: Release notes is totally broken (cherry picked from commit 72ba6a69f034f6b7c15680274c6507c936b797e4)
Docs: Restructured toc (cherry picked from commit b6ea22e994ab900dad2661861cd90a7ab969ceb4)
Docs: Moved from pending (cherry picked from commit c10d94439dcca4bb9f08be2bc2f92442bb7b3cd4)
Docs: Added some missing links (cherry picked from commit a70b7c027fba7f24ff1b7496cf8087bc2e9d5038)
method dispatch (cherry picked from commit 1494a32cc8621c7cd53f1d6ed54d4da99b543bc1)
Add released API links
Add links to snapshot scaladoc
Bump version to 1.2-SNAPSHOT
Update find-replace script
Add sh action to parent project
clarify messages in TestActorRef example, fixes #840
add import statements to FSM docs
Don't git ignore project/build
Generate combined scaladoc across subprojects
Make akka parent project an actual parent project
Update to scala RC3
Adding tests for the actor ref serialization bug, 837
Changed the 'home' cluster config option to one of 'host:<hostname>', 'ip:<ip address>'' or 'node:<node name>'
updated sjson ver to RC3
Added explicit sjson.json.Serializer.SJSON
Remove hardcoded Scala version for continuations plugin, fixes #834
Update release scripts
Dataflow examples all migrated to new api, all tested to work in sbt console
Use Promise in tests
Add Promise factory object for creating new CompletableFutures
Begin updating Dataflow docs
Enable continuations plugin within sbt console
Add exception handling section
Clustered deployment in ZooKeeper implemented. Read and write deployments from cluster test passing.
Bring Future docs up to date
Cleanup
Moved dataflow from pending
Moved deployment-scenarios from pending
Moved futures from pending
Cleanup of fault-tolerance
Moved fault-tolerance from pending
Adding implicit conversion for: (actor !!! msg).as[X]
Removing the intermediate InvocationTargetException and harmonizing creation of Actor instances
Typos and clarification for futures.
fix import in testkit example; fixes #833
remove extra allocations and fix scaladoc type inference problem
add import statements to testing.rst
fix pygments dependency and add forgotten common/duration.rst
move Duration docs below common/ next to Scheduler
move FSM._ import into class, fixes #831
no need to install pygments on every single run
Porting licenses.rst and removing boldness in sponsors title
Converting team.rst, sponsors.rst and fixing some details in dev-guides
Moving Developer guidelines to the Dev section
Converting the issue-tracking doc and putting it under General
Converting the Akka Developer Guidelines and add then to the General section
Scrapping parts of Home.rst and add a what-is-akka.rst under intro
Adding a Common section to the docs and fixing the Scheduler docs
Removing web.rst because of being severely outdated
Added alter and alterOff to Agent, #758
Will always infer type as Any, so should explicitly state it.
Reviewed and improved serialization docs, still error with in/out, waiting for answer from Debasish
Removing the CONFIG val in BootableActorLoaderService to fix #825
added jmm documentation for actors and stm
fixed typo
Added installation instructions for Sphinx etc
Ticket 739. Beefing up config documentation.
Added outline on how to implement clustered deployment
Rewriting matches to use case-class extractors
fix exception logging
also adapt createInstance(String, ...) and getObjectFor
Reviewed and improved remote-actors doc
Cleanup of serialization docs
Moved serialization from pending
Improving throughput for WorkStealer even more
Switching from DynamicVariable to ThreadLocal to avoid child threads inheriting the current value
Reverting to ThreadLocal
Massive refactorings in akka-cluster. Also added ClusterDeployer that manages deployment data in ZooKeeper
Reenabling the on-send-redistribution of messages in WorkStealer
Reducing object creation overhead
Added instructions on how to check out the tutorial code using git
Added instructions to checkout tutorial with git
Failing test due to timeout, decreased number of messages
Scala style fixes, added parens for side effecting shutdown methods
Scala style fixes, added parens for side effecting shutdown methods
Cleanup
Cleanup
Moved remote-actors from pending
Add @tailrec check
Avoid unneeded allocations
prevent chain of callbacks from overflowing the stack
Added instructions for SBT project and IDE
Added sbt reload before initial update
Cross linking
fixed compilation problems in akka-cluster
Removing redundant isOff call
Removing uses of awaitBlocking in the FutureSpec
make sure lock is aquired when accessing shutdownSchedule
Added sample to Transactional Agents
Dispatcher executed Future will be cleaned up even after expiring
Add failing test for Ticket #812
Reviewed and improved transactors doc
Moved transactors from pending
Making it impossible to complete a future after it`s expired, and not run onComplete callbacks if it hasn`t been completed before expiry, fixing ticket #811
Renaming a test
Removing awaitValue and valueWithin, and adding await(atMost: Duration)
All tests passing except akka-remote
Removing the Client Managed Remote Actor sample from the docs and akka-sample-remote, fixing #804
Removing blocking dequeues from MailboxConfig due to high risk and no gain
Remove microkernel dist stuff
Remove akka modules build info
Added clustering module from Cloudy Akka
Rebased from master branch
Rebased from master branch
Added Deployer with DeployerSpec which parses the deployment configuration and adds deployment rules
Rebased from master
Move building and configuration to general
Update building akka docs
Cleanup
Moved tutorial-chat-server from pending
Cleanup
Moved stm from pending
Sidebar toc
Moved agents from pending
Cleanup
Moved dispatchers from pending
cleanup
Moved event-handler from pending
typo
Added serialize-messages description to scala typed actors doc
Added sidebar toc
Moved typed-actors from pending
Moved actor-registry from pending
index for java api
Moved untyped-actors from pending
Added parens to override of preStart and postStop
Added parens to override of preStart and postStop
Minor, added import
A typo and small clarification to actor-registry-java documentation.
Removing some boiler in Future
Deployer and deployment config parsing complete, test passing
Improved stm docs
Improved stm docs
Improved agents doc
Added a test to validate the API, it´s gorgeous
Added a test to validate the API, it´s gorgeous
Pointing Jersey sample to v1.0 tag, closing #776
Making ActorRegistry public so it`ll be in the scaladoc, constructor remains private tho, closing #743
Adding the class that failed to instantiate, closing ticket #803
Adding parens to preStart and postStop closing #798
Removing unused imports, closing ticket #802
Adding yet another CPS test
Adding a test for the emulation of blocking
Add Future.failure
Improve pattern matching within for comprehensions with Future
Update Jetty to version 7.4.0
Applied the last typo fixes also
Add documentation to Future.flow and Future.apply
Refactor Future.flow
make test more aggressive
Use simpler annotation
Remove redundant Future
Add additional test to make sure Future.flow does not block on long running Futures
Added EventHandler.shutdown()'
use Future.empty in Future.channel
add Future.empty[T]
Removed logging ClassNotFoundException to EventHandler in ReflectiveAccess
Changed default event-handler level to INFO
added some generic lookup methods to Configuration
move Duration doc to general/util.rst move migration guide links one level down
add Java API to Duration
Applied patch from bruce.mitchener, with minor adjustment
Adding delimited continuations to Future
add references to testkit example from Ray
add testing doc (scala)
test exception reception on TestActorRef.apply()
merge master and wip-testkit into wip-testkit2
merge master and wip-testkit into wip-testkit2
make testActor.dispatcher=CallingThreadDispatcher
proxy isDefinedAt/apply through TestActorRef
add Future.channel() for obtaining a completable channel
Tweaked the migration guide documentation
Removed OSGi from all modules except for akka-actor. Added OSGi example.
Added a little to meta-docs
Additional improvement of documentation of dispatchers
Improved documentation of dispatchers
mid-address-refactoring: all tests except remote and serialization tests passes
mid-address-refactoring: all tests except remote and serialization tests passes
Added Iulian's Akka Eclipse tutorial with some minor edits of Jonas
New remote 'address' refactoring all compiles
Deprecating methods as discussed on ML
Updating most of the migration docs, added a _general_ section of the docs
Adding Devoxx talk to docs
Two birds with one stone, fixing #791 and #792
Add meta-docs
incorporated feedback on the java tutorial
mid address refactoring
Try reorganised docs
Simplify docs html links for now
Add configuration to docs
Add building akka page to docs
Add the why akka page to the docs
fixed small typos
removed old commented line
Added missing semicolon to Pi.java
Corrected wrong URI to source file.
Cleaned up formatting in tutorials
Putting RemoteActorRefs on a diet
Added Maven project file to first Java tutorial
Added Java version of first tutorial + polished Scala version as well
Rework routing spec - failing under jenkins
Make includecode directive python 2.6 friendly
mkdir -p
Rework local python packages for akka-docs
Use new includecode directive for getting started docs
Add includecode directive for akka-docs
Comment out pending toc entries
Automatically install pygments style
optimize performance optimization (away)
Adding possibility to use akka.japi.Option in remote typed actor
Added links to the SBT download
changed all versions in the getting started guide to current versions
changed all versions in the getting started guide to current versions
Added some more detailed impl explanation
merge with upstream
merge with upstream
Added a couple of articles
add Timeout vs. Duration to FSM docs
minor edit
document FSM timer handling
use ListenerManagement in FSM
exclude pending/ again from sphinx build
rewrite FSM docs in reST
make transition notifier more robust
properly handle infinite timeouts in FSM
add TestActorRef
Add Java API versions of Future.{traverse, sequence}, closes #786
change the type of the handler function, and go down the rabbit hole a bit. Add a Procedure2[T1,T2] to the Java API, and add JavaEventHandler that gives access from java to the EventHandler, add docs for configuring the handler in declarative Supervision for Scala and Java.
add the ability to configure a handler for MaximumNumberOfRestartsWithinTimeRangeReached to declarative Supervision
Set actor-tests as test dependency only of typed-actor
updated sjson to version 0.11
Quick fix for #773
Refining the PriorityGenerator API and also adding PriorityDispatcher to the docs
changed wrong time unit
changed wrong time unit
Added parens to latch countDown
Added parens to unbecome
Added parens to shutdownAll
Added parens to stop
Added parens to start
Added parens to start
Adjust sleep in supervisor tree spec
fixed warning
Remove project definitions in tutorials
Documentation fixes
Minor fixes to Agent docs
Made a pass through Actor docs
Exclude pending docs
Update docs logo and version
fixed bugs in typed actors doc
Pedantic language tweaks to the first getting started chapter.
minor improvements
merge
cleanup
improved actors doc
Another minor coding style correction in akka-tutorial.
cleanup docs
fixed wrong code block syntax
removed Logging trait
typo
included imports also
improved documentation of actor registry
Documentation cleanup
Code changes according to my review (https://groups.google.com/a/typesafe.com/group/everyone/browse_thread/thread/6661e205caf3434d?hl=de) plus some more Scala style improvements.
Text changes according to my review (https://groups.google.com/a/typesafe.com/group/everyone/browse_thread/thread/6661e205caf3434d?hl=de).
Add converted wiki pages to akka-docs
added more text about why we are using a 'latch' and alternatives to it
Changed a sub-heading in the tutorial
Incorporated feedback on tutorial text plus added sections on SBT and some other stuff here and there
Override lifecycle methods in TypedActor to avoid warnings about bridge methods
fixed warnings, compile without -Xmigration
fixed warnings, serializable
fixed warnings, serializable
fixed warnings, asScalaIterable -> collectionAsScalaIterable
commit in the middle of address refactoring
commit in the middle of address refactoring
fixed warnings, unchecked
fixed warnings, asScalaIterable -> collectionAsScalaIterable
fixed warnings, error -> sys.error
fixed warnings, error -> sys.error
fixed warnings, @serializable -> extends scala.Serializable
Adjusted chat sample to run with latest, and without Redis
Adjusted chat sample to run with latest, and without Redis
Added akka-sample-chat again
added isInfoEnabled and isDebugEnabled, needed for Java api
Drop the -1 in pi range instead
Small fix to make tailrec pi the same as other implementations
reverted back to call-by-name parameter
minor correction of typos
Changing the complete* signature from : CompletableFuture to Future, since they can only be written once anyway
Changing the complete* signature from : CompletableFuture to Future, since they can only be written once anyway
Removing registerSupervisorAsRemoteActor from ActorRef + SerializationProtocol
Adding TODOs for solving the problem with sender references and senderproxies for remote TypedActor calls
Removing even more client-managed remote actors residue, damn, this stuff is sticky
Deprecating two newRemoteInstance methods in TypedActor
Removing more deprecation warnings and more client-managed actors residue
Removed client-managed actors, a lot of deprecated methods and DataFlowVariable (superceded by Future)
notify with call-by-name included again
add documentation and compat implicit to FSM
Completed first Akka/Scala/SBT tutorial
Adjusted EventHandler to support Java API
Setup for publishing snapshots
completed first iteration of first getting started guide
completed first iteration of first getting started guide
Added new module 'akka-docs' as the basis for the new Sphinx/reST based docs. Also added the first draft of the new Getting Started Guide
reply to channel
If there is no EventHandler listener defined and an empty default config is used then the default listener is now added and used
Closing ticket #757
Deprecating the spawn* methods
Turned 'sendRequestReplyFuture(..): Future[_]' into 'sendRequestReplyFuture[T <: AnyRef](..): Future[T]
Moved 'channel' from ScalaActorRef to ActorRef to make it available from Java
Added overridden Actor life-cycle methods to UntypedActor to avoid warnings about bridge methods
working version of second.Pi.java
Addded method 'context' to UntypedActor. Changed the Pi calculation to use tail-recursive function
first, non-working version of second Pi.java
Added alt foldLeft algo for Pi calculation in tutorial
minor cleanup
moved tests from akka-actor to new module akka-actor-tests to fix circular dependencies between testkit and akka-actor
Add simple stack trace to string method to AkkaException
Another timeout increase
add warning message to git-remove-history.sh
Removing a compilation warning by restructuring the code
added first and second parts of Pi tutorial for both Scala and Java
Added PoisonPill and Kill for UntypedActor
Added scripts for removing files from git's history
Changing mailbox-capacity to be unbounded for the case where the bounds are 0, as per the docs in the config
734: moved package objects to package.scala files
replaced event handler with println in first tutorial
Remove infinite loop in AkkaException
Restoring SNAPSHOT version
Update version for release 1.1-M1
Adding the sender reference to remote typed actor calls, not a complete fix for 731
make onTransition easier to use
Switched to Option(...) instead of Some(...) for TypedActor dispatch
Update supervisor spec
Update supervisor spec
Add delay in typed actor lifecycle test
Add delay in typed actor lifecycle test
Specify objenesis repo directly
Specify objenesis repo directly
Add basic documentation to Futures.{sequence,traverse}
Add basic documentation to Futures.{sequence,traverse}
Add tests for Futures.{sequence,traverse}
Add tests for Futures.{sequence,traverse}
Make sure there is no type error when used from a val
Make sure there is no type error when used from a val
Bumping SBT version to 0.7.6-RC0 to fix jline problem with sbt console
Bumping SBT version to 0.7.6-RC0 to fix jline problem with sbt console
Adding Pi2, fixing router shutdown in Pi, cleaning up the generation of workers in Pi
Adding Pi2, fixing router shutdown in Pi, cleaning up the generation of workers in Pi
Simplified the Master/Worker interaction in first tutorial
Simplified the Master/Worker interaction in first tutorial
Added the tutorial projects to the akka core project file
Added the tutorial projects to the akka core project file
Added missing project file for pi tutorial
Added missing project file for pi tutorial
rewrote algo for Pi calculation to use 'map' instead of 'for-yield'
rewrote algo for Pi calculation to use 'map' instead of 'for-yield'
Changed Iterator to take immutable.Seq instead of mutable.Seq. Also changed Pi tutorial to use Vector instead of Array
Changed Iterator to take immutable.Seq instead of mutable.Seq. Also changed Pi tutorial to use Vector instead of Array
Added some comments and scaladoc to Pi tutorial sample
Added some comments and scaladoc to Pi tutorial sample
Changed logging level in ReflectiveAccess and set the default Akka log level to INFO
Changed logging level in ReflectiveAccess and set the default Akka log level to INFO
Added Routing.Broadcast message and handling to be able to broadcast a message to all the actors a load-balancer represents
Added Routing.Broadcast message and handling to be able to broadcast a message to all the actors a load-balancer represents
removed JARs added by mistake
removed JARs added by mistake
Changed *Iterator to take a Seq instead of a List
Changed *Iterator to take a Seq instead of a List
Added first tutorial based on Scala and SBT
Added first tutorial based on Scala and SBT
Adding Kill message, synonymous with Restart(new ActorKilledException(msg))
Adding Kill message, synonymous with Restart(new ActorKilledException(msg))
Added comment about broken TypedActor remoting behavior
Added comment about broken TypedActor remoting behavior
Should should be must, should must be must
Should should be must, should must be must
Rework the tests in actor/actor
Rework the tests in actor/actor
Add general mechanism for excluding tests
Add general mechanism for excluding tests
improved scaladoc in Future
improved scaladoc in Future
Added check to ensure that messages are not null. Also cleaned up misc code
Added check to ensure that messages are not null. Also cleaned up misc code
Added check to ensure that messages are not null. Also cleaned up misc code
added some methods to the TypedActor context and deprecated all methods starting with 'get*'
added some methods to the TypedActor context and deprecated all methods starting with 'get*'
Move akka-sbt-plugin to akka-modules
Move akka-sbt-plugin to akka-modules
More test timing adjustments
More test timing adjustments
Multiply test timing in ActorModelSpec
Multiply test timing in ActorModelSpec
Multiply test timing in FSMTimingSpec
Multiply test timing in FSMTimingSpec
Add some testing times to FSM tests (for Jenkins)
Add some testing times to FSM tests (for Jenkins)
Adding -optimise to the compile options
Adding -optimise to the compile options
Temporarily disabling send-time-work-redistribution until I can devise a good way of avoiding a worst-case-stack-overflow
Temporarily disabling send-time-work-redistribution until I can devise a good way of avoiding a worst-case-stack-overflow
Added configuration to define capacity to the remote client buffer messages on failure to send
Added configuration to define capacity to the remote client buffer messages on failure to send
AspectWerkz license changed to Apache 2
AspectWerkz license changed to Apache 2
Update to sbt 0.7.5.RC1
Update to sbt 0.7.5.RC1
Removing warninit from project def
Removing warninit from project def
Renamed config option for remote client retry message send.
Renamed config option for remote client retry message send.
Add sudo directly to network tests
Add sudo directly to network tests
Add system property to enable network failure tests
Add system property to enable network failure tests
Update plugins
Update plugins
Re-enable ants sample
Re-enable ants sample
1. Added config option to enable/disable the remote client transaction log for resending failed messages. 2. Swallows exceptions on appending to transaction log and do not complete the Future matching the message.
1. Added config option to enable/disable the remote client transaction log for resending failed messages. 2. Swallows exceptions on appending to transaction log and do not complete the Future matching the message.
fix error handling in TestKit.within
document CTD adaption of ActorModelSpec
Potential fix for #723
Potential fix for #723
Upgrading to Scala 2.9.0-RC1
Upgrading to Scala 2.9.0-RC1
Merging in master
Merging in master
Merging in master
changed version of sjson to 0.10
changed version of sjson to 0.10
Removing race in isDefinedAt and in apply, closing ticket #722
Removing race in isDefinedAt and in apply, closing ticket #722
Changed UnknownRemoteException to CannotInstantiateRemoteExceptionDueToRemoteProtocolParsingErrorException - should be more clear now.
Changed UnknownRemoteException to CannotInstantiateRemoteExceptionDueToRemoteProtocolParsingErrorException - should be more clear now.
added script to simulate network failure scenarios and restore original settings
added script to simulate network failure scenarios and restore original settings
Closing ticket #721, shutting down the VM if theres a broken config supplied
Closing ticket #721, shutting down the VM if theres a broken config supplied
Added accessor for pending messages
Added accessor for pending messages
Add a couple more test timing adjustments
Add a couple more test timing adjustments
Replace sleep with latch in valueWithin test
Replace sleep with latch in valueWithin test
Introduce testing time factor (for Jenkins builds)
Introduce testing time factor (for Jenkins builds)
Catch possible actor init exceptions
Catch possible actor init exceptions
merged with upstream
merged with upstream
refactored remote event handler and added deregistration of it on remote shutdown
refactored remote event handler and added deregistration of it on remote shutdown
Added a remote event handler that pipes remote server and client events to the standard EventHandler system
Added a remote event handler that pipes remote server and client events to the standard EventHandler system
moved slf4j to 'akka.event.slf4j'
moved slf4j to 'akka.event.slf4j'
added error reporting to the ReflectiveAccess object
added error reporting to the ReflectiveAccess object
Moving Initializer to akka-kernel, add manually for other uses, removing ListWriter, changing akka-http to depend on akka-actor instead of akka-remote, closing ticket #716
Moving Initializer to akka-kernel, add manually for other uses, removing ListWriter, changing akka-http to depend on akka-actor instead of akka-remote, closing ticket #716
Moving Initializer to akka-kernel, add manually for other uses, removing ListWriter, changing akka-http to depend on akka-actor instead of akka-remote, closing ticket #716
Moved EventHandler to 'akka.event' plus added 'error' method without exception param
Moved EventHandler to 'akka.event' plus added 'error' method without exception param
Moved EventHandler to 'akka.event' plus added 'error' method without exception param
Adding synchronous writes to NettyRemoteSupport
Adding synchronous writes to NettyRemoteSupport
Removing printlns
Removing printlns
Adding OrderedMemoryAwareThreadPoolExecutor with an ExecutionHandler to the NettyRemoteServer
Adding OrderedMemoryAwareThreadPoolExecutor with an ExecutionHandler to the NettyRemoteServer
Remove akka-specific transaction and hooks
Remove akka-specific transaction and hooks
Deprecating the current impl of DataFlowVariable
Deprecating the current impl of DataFlowVariable
Switched to FutureTimeoutException for Future.apply/Future.get
Switched to FutureTimeoutException for Future.apply/Future.get
Adding Java API for reduce, fold, apply and firstCompletedOf, adding << and apply() to CompletableFuture + a lot of docs
Adding Java API for reduce, fold, apply and firstCompletedOf, adding << and apply() to CompletableFuture + a lot of docs
Added SLF4 module with Logging trait and Event Handler
Added SLF4 module with Logging trait and Event Handler
Renaming resultWithin to valueWithin, awaitResult to awaitValue to aling the naming, and then deprecating the blocking methods in Futures
Renaming resultWithin to valueWithin, awaitResult to awaitValue to aling the naming, and then deprecating the blocking methods in Futures
Switching AlreadyCompletedFuture to always be expired, good for GC eligibility etc
Switching AlreadyCompletedFuture to always be expired, good for GC eligibility etc
Updating to Scala 2.9.0, SJSON still needs to be released for 2.9.0-SNAPSHOT tho
Updating to Scala 2.9.0, SJSON still needs to be released for 2.9.0-SNAPSHOT tho
Minor optimization for getClassFor and added some comments
Minor optimization for getClassFor and added some comments
Rewriting getClassFor to do a fall-back approach, first test the specified classloader, then test the current threads context loader, then try the ReflectiveAccess` classloader and the Class.forName
Rewriting getClassFor to do a fall-back approach, first test the specified classloader, then test the current threads context loader, then try the ReflectiveAccess` classloader and the Class.forName
added test cases for Java serialization of actors in course of documenting the stuff in the wiki
added test cases for Java serialization of actors in course of documenting the stuff in the wiki
Giving a 1s time window for the requested change to occur
Giving a 1s time window for the requested change to occur
added event handler logging + minor reformatting and cleanup
added event handler logging + minor reformatting and cleanup
removed some println
removed some println
Resolving conflict
Resolving conflict
Switching to PoisonPill to shut down Per-Session actors, and restructuring some Future-code to avoid wasteful object creation
Switching to PoisonPill to shut down Per-Session actors, and restructuring some Future-code to avoid wasteful object creation
Added hierarchical event handler level to generic event publishing
Added hierarchical event handler level to generic event publishing
Removing 2 vars from Future, and adding some ScalaDoc
Removing 2 vars from Future, and adding some ScalaDoc
Making thread transient in Event and adding WTF comment
Making thread transient in Event and adding WTF comment
 Removing verbose type annotation
 Removing verbose type annotation
Reducing overhead and locking involved in Futures.fold and Futures.reduce
Reducing overhead and locking involved in Futures.fold and Futures.reduce
make FSMTimingSpec more deterministic
make FSMTimingSpec more deterministic
ignore VIM swap files (and clean up previous accident)
ignore VIM swap files (and clean up previous accident)
Preliminary upgrade to latest Camel development snapshot.
Preliminary upgrade to latest Camel development snapshot.
Making sure that theres no allocation for ActorRef.invoke()
Making sure that theres no allocation for ActorRef.invoke()
Adding yet another comment to ActorPool
Adding yet another comment to ActorPool
Faster than Derek! Changing completeWith(Future) to be lazy and not eager
Faster than Derek! Changing completeWith(Future) to be lazy and not eager
Added some more comments to ActorPool
Added some more comments to ActorPool
ActorPool code cleanup, fixing some qmarks and some minor defects
ActorPool code cleanup, fixing some qmarks and some minor defects
Restructuring some methods in ActorPool, and switch to PoisonPill for postStop cleanup, to let workers finish their tasks before shutting down
Restructuring some methods in ActorPool, and switch to PoisonPill for postStop cleanup, to let workers finish their tasks before shutting down
Refactoring, reformatting and fixes to ActorPool, including ticket 705
Refactoring, reformatting and fixes to ActorPool, including ticket 705
Just saved 3 allocations per Actor instance
Just saved 3 allocations per Actor instance
Switching to unfair locking
Switching to unfair locking
Adding a test for ticket 703
Adding a test for ticket 703
No, seriously, fixing ticket #703
No, seriously, fixing ticket #703
Upgrading the fix for overloading and TypedActors
Upgrading the fix for overloading and TypedActors
Moving AkkaLoader from akka.servlet in akka-http to akka.util, closing ticket #701
Moving AkkaLoader from akka.servlet in akka-http to akka.util, closing ticket #701
Moving AkkaLoader from akka.servlet in akka-http to akka.util, closing ticket #701
Removign leftover debug statement. My bad.
Removign leftover debug statement. My bad.
Adding a unit test for ticket 552, but havent solved the ticket
Adding a unit test for ticket 552, but havent solved the ticket
All tests pass, might actually have solved the typed actor method resolution issue
All tests pass, might actually have solved the typed actor method resolution issue
changed event handler dispatcher name
changed event handler dispatcher name
Pulling out _resolveMethod_ from NettyRemoteSupport and moving it into ReflectiveAccess
Pulling out _resolveMethod_ from NettyRemoteSupport and moving it into ReflectiveAccess
Potential fix for the remote dispatch of TypedActor methods when overloading is used.
Potential fix for the remote dispatch of TypedActor methods when overloading is used.
Added generic event handler
Added generic event handler
Changed API for EventHandler and added support for log levels
Changed API for EventHandler and added support for log levels
Changed API for EventHandler and added support for log levels
Reverting change to SynchronousQueue
Reverting change to SynchronousQueue
Revert "Switching ThreadBasedDispatcher to use SynchronousQueue since only one actor should be in it"
Revert "Switching ThreadBasedDispatcher to use SynchronousQueue since only one actor should be in it"
Switching ThreadBasedDispatcher to use SynchronousQueue since only one actor should be in it
Switching ThreadBasedDispatcher to use SynchronousQueue since only one actor should be in it
Improve Future API when using UntypedActors, and add overloads for Java API
Improve Future API when using UntypedActors, and add overloads for Java API
Optimization for the mostly used mailbox, switch to non-blocking queue
Optimization for the mostly used mailbox, switch to non-blocking queue
Beefed up the concurrency level for the mailbox tests
Beefed up the concurrency level for the mailbox tests
Adding a rather untested BoundedBlockingQueue to wrap PriorityQueue for BoundedPriorityMessageQueue
Adding a rather untested BoundedBlockingQueue to wrap PriorityQueue for BoundedPriorityMessageQueue
Deprecating client-managed TypedActor
Deprecating client-managed TypedActor
Deprecating Client-managed remote actors
Deprecating Client-managed remote actors
Commented out the BoundedPriorityMailbox, since it wasn´t bounded, and broke out the mailbox logic into PriorityMailbox
Commented out the BoundedPriorityMailbox, since it wasn´t bounded, and broke out the mailbox logic into PriorityMailbox
Adding PriorityExecutorBasedEventDrivenDispatcher
Adding PriorityExecutorBasedEventDrivenDispatcher
Adding unbounded and bounded MessageQueues based on PriorityBlockingQueue
Adding unbounded and bounded MessageQueues based on PriorityBlockingQueue
Changing order as to avoid DNS lookup in worst-case scenario
Changing order as to avoid DNS lookup in worst-case scenario
Removing legacy, non-functional, SSL support from akka-remote
Removing legacy, non-functional, SSL support from akka-remote
Add future and await to agent
Add future and await to agent
Removing the use of embedded-repo and deleting it, closing ticket #623
Removing the use of embedded-repo and deleting it, closing ticket #623
Adding ModuleConfiguration for net.debasishg
Adding ModuleConfiguration for net.debasishg
Adding ModuleConfiguration for net.debasishg
Adding ModuleConfiguration for net.debasishg
Removing ssl options since SSL isnt ready yet
Removing ssl options since SSL isnt ready yet
closes #689: All properties from the configuration file are unit-tested now.
closes #689: All properties from the configuration file are unit-tested now.
re #689: Verified config for akka-http.
re #689: Verified config for akka-stm.
re #689: Verified config for akka-stm.
re #689: Verified config for akka-remote.
re #689: Verified config for akka-remote.
re #689: Verified config for akka-http.
re #689: Verified config for akka-http.
re #689: Verified config for akka-actor.
re #689: Verified config for akka-actor.
Removing SBinary artifacts from embedded repo
Removing SBinary artifacts from embedded repo
Reduce config footprint
Reduce config footprint
Removing support for SBinary as per #686
Removing support for SBinary as per #686
Removing dead code
Removing dead code
Reverting fix for due to design flaw in *ByUuid
Reverting fix for due to design flaw in *ByUuid
Remove uneeded parameter
Remove uneeded parameter
Dropped dependency to AspectInitRegistry and usage of internal registry in TypedActorComponent
Dropped dependency to AspectInitRegistry and usage of internal registry in TypedActorComponent
Removing non-needed jersey module configuration
Removing non-needed jersey module configuration
Moving most of the Jersey and Jetty deps into MicroKernel (akka-modules), closing #593
Moving most of the Jersey and Jetty deps into MicroKernel (akka-modules), closing #593
Moving most of the Jersey and Jetty deps into MicroKernel (akka-modules), closing #593
Changed event handler config to a list of the FQN of listeners
Changed event handler config to a list of the FQN of listeners
add locking to CTD-mbox
add locking to CTD-mbox
Tweaking AkkaException
Tweaking AkkaException
add test to ActorModelSpec
add test to ActorModelSpec
Adding export of the embedded uuid lib to the OSGi manifest
Adding export of the embedded uuid lib to the OSGi manifest
reverting changes to avoid breaking serialization
reverting changes to avoid breaking serialization
 Speeding up remote tests by removing superfluous Thread.sleep
 Speeding up remote tests by removing superfluous Thread.sleep
Removed some superfluous code
Removed some superfluous code
Add Future GC comment
Add Future GC comment
Adding support for clean exit of remote server
Adding support for clean exit of remote server
Updating the Remote protocol to support control messages
Updating the Remote protocol to support control messages
Adding support for MessageDispatcherConfigurator, which means that you can configure homegrown dispatchers in akka.conf
Adding support for MessageDispatcherConfigurator, which means that you can configure homegrown dispatchers in akka.conf
fixed repo of scalatest which was incorrectly pointing to ScalaToolsSnapshot
fixed repo of scalatest which was incorrectly pointing to ScalaToolsSnapshot
create akka-testkit subproject
create akka-testkit subproject
Use scalatools release repo for scalatest
Use scalatools release repo for scalatest
Remove logback config
Remove logback config
merged with upstream
merged with upstream
merged with upstream
reverted tests supported 2.9.0 to 2.8.1
reverted tests supported 2.9.0 to 2.8.1
reverting back to 2.8.1
reverting back to 2.8.1
Update Java STM API to include STM utils
Update Java STM API to include STM utils
Cleaner exception matching in tests
Cleaner exception matching in tests
Removing shutdownLinkedActors, making linkedActors and getLinkedActors public, fixing checkinit problem in AkkaException
Removing shutdownLinkedActors, making linkedActors and getLinkedActors public, fixing checkinit problem in AkkaException
Removing Thrift jars
Removing Thrift jars
Remove configgy from embedded repo
Remove configgy from embedded repo
Incorporate configgy with some renaming and stripping down
Incorporate configgy with some renaming and stripping down
Add configgy sources under akka package
Add configgy sources under akka package
remove debugging line from test
remove debugging line from test
Updating to Scala 2.9.0 and enabling -optimise and -Xcheckinit
Updating to Scala 2.9.0 and enabling -optimise and -Xcheckinit
Potential fix for #672
Potential fix for #672
merged with upstream
merged with upstream
merged with upstream
Upding Jackson to 1.7 and commons-io to 2.0.1
Upding Jackson to 1.7 and commons-io to 2.0.1
Renamed to EventHandler and added 'info, debug, warning and error'
Renamed to EventHandler and added 'info, debug, warning and error'
Renamed to EventHandler and added 'info, debug, warning and error'
Removing wasteful guarding in spawn/*Link methods
Removing wasteful guarding in spawn/*Link methods
Removing 4 unused dependencies
Removing 4 unused dependencies
Removing old versions of Configgy
Removing old versions of Configgy
Embedding the Uuid lib, deleting it from the embedded repo and dropping the jsr166z.jar
Embedding the Uuid lib, deleting it from the embedded repo and dropping the jsr166z.jar
Rework of WorkStealer done, also, removal of DB Dispatch
Rework of WorkStealer done, also, removal of DB Dispatch
Added the ErrorHandler notifications to all try-catch blocks
Added the ErrorHandler notifications to all try-catch blocks
Added the ErrorHandler notifications to all try-catch blocks
Add first test of Future in Java
Add first test of Future in Java
update Buncher to make it more generic
update Buncher to make it more generic
now using sjson without scalaz dependency
now using sjson without scalaz dependency
Reset currentMessage if InterruptedException is thrown
Reset currentMessage if InterruptedException is thrown
Ensure proper cleanup even if postStop throws an exception.
Ensure proper cleanup even if postStop throws an exception.
Support self.reply in preRestart and postStop after exception in receive. Closes #669
Support self.reply in preRestart and postStop after exception in receive. Closes #669
Add java friendly methods
Add java friendly methods
Added ErrorHandler and a default listener which prints error logging to STDOUT
Added ErrorHandler and a default listener which prints error logging to STDOUT
Reverse listeners before executing them
Reverse listeners before executing them
tabs to spaces
tabs to spaces
Removed logging
Removed logging
Removed logging
Add locking in dispatchFuture
Add locking in dispatchFuture
Add friendlier method of starting a Future
Add friendlier method of starting a Future
move unneeded test outside of if statement
move unneeded test outside of if statement
Add low priority implicit for the default dispatcher
Add low priority implicit for the default dispatcher
no need to hold onto the lock to throw the exception
no need to hold onto the lock to throw the exception
Revert lock bypass. move lock calls outside of try block
Revert lock bypass. move lock calls outside of try block
bypass lock when not needed
bypass lock when not needed
removed sjson from embedded_repo. Now available from scala-tools. Upgraded sjson version to 0.9 which compiles on Scala 2.8.1
removed sjson from embedded_repo. Now available from scala-tools. Upgraded sjson version to 0.9 which compiles on Scala 2.8.1
Optimizing for bestcase when sending an actor a message
Optimizing for bestcase when sending an actor a message
Removing logging from EBEDD
Removing logging from EBEDD
Removing HawtDispatch, the old WorkStealing dispatcher, replace old workstealer with new workstealer based on EBEDD, and remove jsr166x dependency, only 3 more deps to go until 0 deps for akka-actor
Removing HawtDispatch, the old WorkStealing dispatcher, replace old workstealer with new workstealer based on EBEDD, and remove jsr166x dependency, only 3 more deps to go until 0 deps for akka-actor
removed sjson from embedded_repo. Now available from scala-tools. Upgraded sjson version to 0.9 which compiles on Scala 2.8.1
removed sjson from embedded_repo. Now available from scala-tools. Upgraded sjson version to 0.9 which compiles on Scala 2.8.1
Reorder Futures.future params to take better advantage of default values
Reorder Futures.future params to take better advantage of default values
Reorder Futures.future params to take better advantage of default values
Reorder Futures.future params to take better advantage of default values
Can't share uuid lists
Can't share uuid lists
Run independent futures on the dispatcher directly
Run independent futures on the dispatcher directly
Specialized traverse and sequence methods for Traversable[Future[A]] => Future[Traversable[A]]
Specialized traverse and sequence methods for Traversable[Future[A]] => Future[Traversable[A]]
document some methods on Future
document some methods on Future
Removing method that shouldve been removed in 1.0: startLinkRemote
Removing method that shouldve been removed in 1.0: startLinkRemote
Removing method that shouldve been removed in 1.0: startLinkRemote
Removing method that shouldve been removed in 1.0: startLinkRemote
Reduce allocations
Reduce allocations
Add test for folding futures by composing
Add test for folding futures by composing
Add test for composing futures
Add test for composing futures
add Future.filter for use in for comprehensions
add Future.filter for use in for comprehensions
Add methods to Future for map, flatMap, and foreach
Add methods to Future for map, flatMap, and foreach
Added some minor migration comments for Scala 2.9.0
Added some minor migration comments for Scala 2.9.0
Added a couple of final declarations on methods and reduced volatile reads
Added a couple of final declarations on methods and reduced volatile reads
first shot at CallingThreadDispatcher
first shot at CallingThreadDispatcher
ticket 634; adds filters to respond to raw pressure functions; updated test spec
ticket 634; adds filters to respond to raw pressure functions; updated test spec
Update to Multiverse 0.6.2
Update to Multiverse 0.6.2
Small change to better take advantage of latest Future changes
Small change to better take advantage of latest Future changes
Manual inlining and indentation
Manual inlining and indentation
Lowering overhead for receiving messages
Lowering overhead for receiving messages
Adding support for PoisonPill
Adding support for PoisonPill
Add Future.receive(pf: PartialFunction[Any,Unit]), closes #636
Add Future.receive(pf: PartialFunction[Any,Unit]), closes #636
Refactoring based on Viktor's suggestions
Refactoring based on Viktor's suggestions
Spellchecking and elided a try-block
Spellchecking and elided a try-block
Removing conditional scheduling
Removing conditional scheduling
Possible optimization for EBEDD
Possible optimization for EBEDD
Allow specifying the timeunit of a Future's timeout. The compiler should also no longer store the timeout field since it is not referenced in any methods anymore
Allow specifying the timeunit of a Future's timeout. The compiler should also no longer store the timeout field since it is not referenced in any methods anymore
Add method on Future to await and return the result. Works like resultWithin, but does not need an explicit timeout.
Add method on Future to await and return the result. Works like resultWithin, but does not need an explicit timeout.
fix tabs; remove debugging log line
fix tabs; remove debugging log line
fix tabs; remove debugging log line
ticket 664 - update continuation handling to (re)support updating timeout
ticket 664 - update continuation handling to (re)support updating timeout
ticket 664 - update continuation handling to (re)support updating timeout
move repeated code to it's own method, replace loop with tailrec
move repeated code to it's own method, replace loop with tailrec
Rename completeWithValue to complete
Rename completeWithValue to complete
Throw an exception if Future.await is called on an expired and uncompleted Future. Ref #659
Throw an exception if Future.await is called on an expired and uncompleted Future. Ref #659
Use an Option[Either[Throwable, T]] to hold the value of a Future
Use an Option[Either[Throwable, T]] to hold the value of a Future
Potential fix for race-condition in RemoteClient
Potential fix for race-condition in RemoteClient
Update scalatest to version 1.3, closes #663
Update scalatest to version 1.3, closes #663
changed pass criteria for testBoundedCapacityActorPoolWithMailboxPressure to account for more capacity additions
changed pass criteria for testBoundedCapacityActorPoolWithMailboxPressure to account for more capacity additions
API improvements to Futures and some code cleanup
API improvements to Futures and some code cleanup
Exclude samples and sbt plugin from parent pom
Exclude samples and sbt plugin from parent pom
Adding Java API for ReceiveTimeout
Adding Java API for ReceiveTimeout
ticket #634 - add actor pool. initial version with unit tests
ticket #634 - add actor pool. initial version with unit tests
Disable -optimise and -Xcheckinit compiler options
Disable -optimise and -Xcheckinit compiler options
Enable compile options in sub projects
Enable compile options in sub projects
Changing to getPathInfo instead of getRequestURI for Mist
Changing to getPathInfo instead of getRequestURI for Mist
Changing to getPathInfo instead of getRequestURI for Mist
Porting the tests from wip-628-629
Porting the tests from wip-628-629
Potential fix for #628 and #629
Potential fix for #628 and #629
Potential fix for #628 and #629
Potential fix for #628 and #629
Potential fix for #628 and #629
Potential fix for #628 and #629
Added support for empty inputs for fold and reduce on Future
Added support for empty inputs for fold and reduce on Future
Refining signatures on fold and reduce
Refining signatures on fold and reduce
Added Futures.reduce plus tests
Added Futures.reduce plus tests
Adding unit tests to Futures.fold
Adding unit tests to Futures.fold
Adding docs to Futures.fold
Adding docs to Futures.fold
Adding fold to Futures and fixed a potential memory leak in Future
Adding fold to Futures and fixed a potential memory leak in Future
Upgrade hawtdispatch to 1.1
Upgrade hawtdispatch to 1.1
Adding Odds project enhancements
Adding Odds project enhancements
Add release scripts
Add release scripts
Add build-release task
Add build-release task
Making MessageInvocation a case class
Making MessageInvocation a case class
Removing durable mailboxes from akka
Removing durable mailboxes from akka
Reverting lazy addition on repos
Reverting lazy addition on repos
Switching to Peters cleaner solution
Switching to Peters cleaner solution
Allowing forwards where no sender of the message can be found.
Allowing forwards where no sender of the message can be found.
Added test for failing TypedActor with method 'String hello(String s)'
Added test for failing TypedActor with method 'String hello(String s)'
Update dependencies in sbt plugin
Update dependencies in sbt plugin
Making optimizeLocal public
Making optimizeLocal public
Adding more start methods for RemoteSupport because of Java, and added BeanProperty on some events
Adding more start methods for RemoteSupport because of Java, and added BeanProperty on some events
Minor code cleanup and deprecations etc
Minor code cleanup and deprecations etc
Changed URI to akka.io
Changed URI to akka.io
Minor typed actor lookup cleanup
Minor typed actor lookup cleanup
fix up indentation
fix up indentation
Removing ActorRegistry object, UntypedActor object, introducing akka.actor.Actors for the Java API
Removing ActorRegistry object, UntypedActor object, introducing akka.actor.Actors for the Java API
Removing ActorRegistry object, UntypedActor object, introducing akka.actor.Actors for the Java API
small adjustment to the example, showing the correct use of the startWith and initialize
small adjustment to the example, showing the correct use of the startWith and initialize
also test custom whenUnhandled fall-through
also test custom whenUnhandled fall-through
merge Irmo's changes and add test case for whenUnhandled
merge Irmo's changes and add test case for whenUnhandled
remove one more allocation in hot path
remove one more allocation in hot path
wrap initial sending of state to transition listener in CurrentState object with fsm actor ref
wrap initial sending of state to transition listener in CurrentState object with fsm actor ref
add fsm self actor ref to external transition message
add fsm self actor ref to external transition message
Move handleEvent var declaration _after_ handleEventDefault val declaration. Using a val before defining it causes nullpointer exceptions...
Move handleEvent var declaration _after_ handleEventDefault val declaration. Using a val before defining it causes nullpointer exceptions...
change indentation to 2 spaces
change indentation to 2 spaces
Adding support for non-delivery notifications on server-side as well + more code cleanup
Adding support for non-delivery notifications on server-side as well + more code cleanup
Major code clanup, switched from nested ifs to match statements etc
Major code clanup, switched from nested ifs to match statements etc
Putting the Netty-stuff in akka.remote.netty and disposing of RemoteClient and RemoteServer
Putting the Netty-stuff in akka.remote.netty and disposing of RemoteClient and RemoteServer
Removed generic typed classes that are only used in the FSM itself from the companion object and put back in the typed FSM again so they will take same types.
Removed generic typed classes that are only used in the FSM itself from the companion object and put back in the typed FSM again so they will take same types.
fix tests
fix tests
- make transition handler a function taking old and new state avoiding the default use of the transition class - only create transition class when transition listeners are subscribed
- make transition handler a function taking old and new state avoiding the default use of the transition class - only create transition class when transition listeners are subscribed
Removing PassiveRemoteClient because of architectural problems
Removing PassiveRemoteClient because of architectural problems
stop the timers (if any) while terminating
stop the timers (if any) while terminating
Added lock downgrades and fixed unlocking ordering
Added lock downgrades and fixed unlocking ordering
Minor code cleanup
Minor code cleanup
convert test to WordSpec with MustMatchers
convert test to WordSpec with MustMatchers
fix fallout of Duration changes in STM tests
fix fallout of Duration changes in STM tests
Added support for passive connections in Netty remoting, closing ticket #507
Added support for passive connections in Netty remoting, closing ticket #507
Added support for 'deputy-nodes'.
Added support for "leader election", the isLeader method and leader election tests. Also fixed bug in scrutinizer not maintaining the 'seen' map.
Renamed Gossiper to Node (and selfNode to vclockNode).
Split up ClusterDaemon into ClusterGossipDaemon (routed with configurable N instances) and ClusterCommandDaemon (shortly to be an FSM). Removed ConnectionManager crap.
Created test tag LongRunningTest ("long-running") for excluding long running (cluster) tests from standard suite.
Added support for checking for Cluster Convergence and completed support for MembershipChangeListener (including tests).
Added testkit time ratio sensitive durations.
Removed printed stack trace from remote client/server errors. Just annoying when client hangs retrying and does not provide any real value since they are the same every time.
Disabling out erroneous cluster 'scrutinize' service until fixed and proper tests are written.
Renamed NodeGossipingSpec to NodeMembershipSpec since it is testing consistency of the cluster node membership table
Finalized initial cluster membership and merging of vector clocks and gossips in case of concurrent cluster updates. Plus misc other fixes.
Rewrite of the VectorClock impl. Now with 'merge' support and slicker API. Also added more tests.
Added NodeGossipingSpec for testing gossiping and cluster membership.
Implemented 'receive(newGossip)' plus misc other changes and fixes.
Added 'or' method to Versioned.
Refactored Gossip state and management. Introduced GossipOverview with convergence info, renamed some fields, added some new cluster commands.
Skips gossipping and cluster scrutinization if singleton cluster.
Switching node status to Up if singleton cluster. Added 'switchStatusTo' method. Updated the test. Profit.
Completed singleton and N-node cluster boot up and joining phase.
Removed cluster seed nodes, added 'join.contact-point', changed joining phase, added singleton cluster mode plus misc other changes.
Changes to cluster specification.
Completed singleton and N-node cluster boot up and joining phase.
Removed cluster seed nodes, added 'join.contact-point', changed joining phase, added singleton cluster mode plus misc other changes.
Changes to cluster specification.
make TestKit assertions nicer / improve Duration
make TestKit assertions nicer / improve Duration
remove unnecessary allocations in hot paths
remove unnecessary allocations in hot paths
flesh out FSMTimingSpec
flesh out FSMTimingSpec
Adding support for failed messages to be notified to listeners, this closes ticket #587
Adding support for failed messages to be notified to listeners, this closes ticket #587
Adding possibility to set id for TypedActor
Adding possibility to set id for TypedActor
add first usage of TestKit
add first usage of TestKit
Removed if statement because it looked ugly
Removed if statement because it looked ugly
Minor refactoring to ActorRegistry
Minor refactoring to ActorRegistry
Moving shared remote classes into RemoteInterface
Moving shared remote classes into RemoteInterface
Changed wording in the unoptimized local scoped spec
Changed wording in the unoptimized local scoped spec
Adding tests for optimize local scoped and non-optimized local scoped
Adding tests for optimize local scoped and non-optimized local scoped
code cleanup (thanks, Viktor and Irmo)
code cleanup (thanks, Viktor and Irmo)
Moved all actorOf-methods from Actor to ActorRegistry and deprecated the forwarders in Actor
Moved all actorOf-methods from Actor to ActorRegistry and deprecated the forwarders in Actor
revamp TestKit (with documentation)
revamp TestKit (with documentation)
Improve Duration classes
Improve Duration classes
add facility for changing stateTimeout dynamically
add facility for changing stateTimeout dynamically
Adding additional tests
Adding additional tests
Adding example in test to show how to test remotely using only one registry
Adding example in test to show how to test remotely using only one registry
Making EmbeddedAppServer work without AKKA_HOME
Making EmbeddedAppServer work without AKKA_HOME
Making EmbeddedAppServer work without AKKA_HOME
first sketch of basic TestKit architecture
first sketch of basic TestKit architecture
revamp akka.util.Duration
revamp akka.util.Duration
improved test - test for intial state on transition call back and use initialize function from FSM to kick of the machine.
improved test - test for intial state on transition call back and use initialize function from FSM to kick of the machine.
wrap stop reason in stop even with current state, so state can be referenced in onTermination call for cleanup reasons etc
wrap stop reason in stop even with current state, so state can be referenced in onTermination call for cleanup reasons etc
Removing not needed dependencies
Removing not needed dependencies
Updated the copyright header to 2009-2011
Updated the copyright header to 2009-2011
Updated the copyright header to 2009-2011
Closing ticket 541
Closing ticket 541
Closing ticket 541
removed trailing spaces
removed trailing spaces
removed trailing spaces
WIP
WIP
Enriched TypedActorContext
Enriched TypedActorContext
changed config element name
changed config element name
changed config element name
Throw runtime exception for @Coordinated when used with non-void methods
Throw runtime exception for @Coordinated when used with non-void methods
changed config for JMX enabling
changed config for JMX enabling
added option to turn on/off JMX browsing of the configuration
added option to turn on/off JMX browsing of the configuration
added option to turn on/off JMX browsing of the configuration
added option to turn on/off JMX browsing of the configuration
removed persistence stuff from config
removed persistence stuff from config
Closing ticket #585
Closing ticket #585
All tests passing, still some work to be done though, but thank God for all tests being green ;)
All tests passing, still some work to be done though, but thank God for all tests being green ;)
add minutes and hours to Duration
add minutes and hours to Duration
add user documentation comments to FSM
add user documentation comments to FSM
Removing redundant call to ActorRegistry-register
Removing redundant call to ActorRegistry-register
Reverted to using LocalActorRefs for client-managed actors to get supervision working, more migrated tests
Reverted to using LocalActorRefs for client-managed actors to get supervision working, more migrated tests
Making sure RemoteActorRef.loader is passed into RemoteClient, also adding volatile flag to classloader in Serializer to make sure changes are propagated crossthreads
Making sure RemoteActorRef.loader is passed into RemoteClient, also adding volatile flag to classloader in Serializer to make sure changes are propagated crossthreads
Making sure RemoteActorRef.loader is passed into RemoteClient, also adding volatile flag to classloader in Serializer to make sure changes are propagated crossthreads
Making sure RemoteActorRef.loader is passed into RemoteClient, also adding volatile flag to classloader in Serializer to make sure changes are propagated crossthreads
Giving all remote messages their own uuid, reusing actorInfo.uuid for futures, closing ticket 580
Giving all remote messages their own uuid, reusing actorInfo.uuid for futures, closing ticket 580
Giving all remote messages their own uuid, reusing actorInfo.uuid for futures, closing ticket 580
Giving all remote messages their own uuid, reusing actorInfo.uuid for futures, closing ticket 580
- merge in transition callback handling - renamed notifying -> onTransition - updated dining hakkers example and unit test - moved buncher to fsm sample project
- merge in transition callback handling - renamed notifying -> onTransition - updated dining hakkers example and unit test - moved buncher to fsm sample project
Adding debug log of parse exception in parseException
Adding debug log of parse exception in parseException
Adding debug log of parse exception in parseException
Adding debug log of parse exception in parseException
Adding UnparsableException and make sure that non-recreateable exceptions dont mess up the pipeline
Adding UnparsableException and make sure that non-recreateable exceptions dont mess up the pipeline
Adding UnparsableException and make sure that non-recreateable exceptions dont mess up the pipeline
Adding UnparsableException and make sure that non-recreateable exceptions dont mess up the pipeline
Give modified configgy a unique version and add a link to the source repository
Give modified configgy a unique version and add a link to the source repository
Give modified configgy a unique version and add a link to the source repository
Give modified configgy a unique version and add a link to the source repository
Refine transactor doNothing (fixes #582)
Refine transactor doNothing (fixes #582)
Refine transactor doNothing (fixes #582)
Refine transactor doNothing (fixes #582)
change ff=unix
change ff=unix
improvements on FSM
improvements on FSM
Backport from master, add new Configgy version with logging removed
Backport from master, add new Configgy version with logging removed
Remove workaround since Configgy has logging removed
Remove workaround since Configgy has logging removed
Use new configgy
Use new configgy
New Configgy version with logging removed
New Configgy version with logging removed
Commented out many of the remote tests while I am porting
Commented out many of the remote tests while I am porting
Update group id in sbt plugin
Update group id in sbt plugin
Update group id in sbt plugin
Update group id in sbt plugin
Got API in place now and RemoteServer/Client/Node etc purged. Need to get test-compile to work so I can start testing the new stuff...
Got API in place now and RemoteServer/Client/Node etc purged. Need to get test-compile to work so I can start testing the new stuff...
Switch to a match instead of a not-so-cute if
Switch to a match instead of a not-so-cute if
First shot at re-doing akka-remote
First shot at re-doing akka-remote
Bumping version to 1.1-SNAPSHOT
Bumping version to 1.1-SNAPSHOT
Changing versions to 1.0-RC2-SNAPSHOT
Changing versions to 1.0-RC2-SNAPSHOT
fixed bug in which the default configuration timeout was always overridden by 5000L
fixed bug in which the default configuration timeout was always overridden by 5000L
fixed bug in which the default configuration timeout was always overridden by 5000L
fixed bug in which the default configuration timeout was always overridden by 5000L
Adding McPom
Adding McPom
applied McPom
applied McPom
Instructions on how to run the sample
Instructions on how to run the sample
changed access modifier for RemoteServer.serverFor
changed access modifier for RemoteServer.serverFor
changed access modifier for RemoteServer.serverFor
changed access modifier for RemoteServer.serverFor
renamed DurableMailboxType to DurableMailbox
renamed DurableMailboxType to DurableMailbox
renamed DurableMailboxType to DurableMailbox
renamed DurableMailboxType to DurableMailbox
Adding Java API for per session remote actors, closing ticket #561
Adding Java API for per session remote actors, closing ticket #561
merged module move refactor from master
merged module move refactor from master
merged module move refactor from master
bumped version to 1.0-RC1
bumped version to 1.0-RC1
Switched AkkaLoader to use Switch instead of volatile boolean
Switched AkkaLoader to use Switch instead of volatile boolean
Switched AkkaLoader to use Switch instead of volatile boolean
Moving all message typed besides Transition into FSM object
Moving all message typed besides Transition into FSM object
- added local maven repo as repo for libs so publishing works - added databinder repo again: needed for publish to work
- added local maven repo as repo for libs so publishing works - added databinder repo again: needed for publish to work
Adding AkkaRestServlet that will provide the same functionality as the AkkaServlet - Atmosphere
Adding AkkaRestServlet that will provide the same functionality as the AkkaServlet - Atmosphere
Adding AkkaRestServlet that will provide the same functionality as the AkkaServlet - Atmosphere
removed trailing whitespace
removed trailing whitespace
removed trailing whitespace
tabs to spaces
tabs to spaces
tabs to spaces
removed dataflow stream for good
removed dataflow stream for good
renamed dataflow variable file
renamed dataflow variable file
Making HotSwap stacking not be the default
Making HotSwap stacking not be the default
uncommented the dataflowstream tests and they all pass
uncommented the dataflowstream tests and they all pass
uncommented the dataflowstream tests and they all pass
- re-add fsm samples - removed ton of whitespaces from the project definition
- re-add fsm samples - removed ton of whitespaces from the project definition
Removing unused imports
Removing unused imports
added effect to java api
added effect to java api
Switching to raw SLF4J on internals
Switching to raw SLF4J on internals
Switching to raw SLF4J on internals
- fix race condition with timeout - improved stopping mechanism - renamed 'until' to 'forMax' for less confusion - ability to specif timeunit for timeout
- fix race condition with timeout - improved stopping mechanism - renamed 'until' to 'forMax' for less confusion - ability to specif timeunit for timeout
cleaned up project file
cleaned up project file
Separated core from modules, moved modules to akka-modules repository
Separated core from modules, moved modules to akka-modules repository
Separated core from modules, moved modules to akka-modules repository
Closing #555
Closing #555
Closing #555
Mist now integrated in master
Mist now integrated in master
Mist now integrated in master
Switching to SBT 0.7.5.RC0 and now we can drop the ubly AkkaDeployClassLoader
Switching to SBT 0.7.5.RC0 and now we can drop the ubly AkkaDeployClassLoader
Moving Mist into almost one file, changing Servlet3.0 into a Provided jar and adding an experimental Filter
Moving Mist into almost one file, changing Servlet3.0 into a Provided jar and adding an experimental Filter
Moving Mist into almost one file, changing Servlet3.0 into a Provided jar and adding an experimental Filter
upgraded to single jar aspectwerkz
upgraded to single jar aspectwerkz
Upgrade to Scala 2.8.1
Upgrade to Scala 2.8.1
Move persistent commit to a pre-commit handler
Move persistent commit to a pre-commit handler
Disable cross paths on parent projects as well
Disable cross paths on parent projects as well
Remove scala version from dist paths - fixes #549
Remove scala version from dist paths - fixes #549
Removed reflective coupling to akka cloud
Removed reflective coupling to akka cloud
Minor code tweaks, removing Atmosphere, awaiting some tests then ready for master
Minor code tweaks, removing Atmosphere, awaiting some tests then ready for master
Minor code tweaks, removing Atmosphere, awaiting some tests then ready for master
Merging in Actor per Session + fixing blocking problem with remote typed actors with Future response types
Merging in Actor per Session + fixing blocking problem with remote typed actors with Future response types
fixed wrong path in voldermort tests - now test are passing again
fixed wrong path in voldermort tests - now test are passing again
Disable cross paths for publishing without Scala version
Disable cross paths for publishing without Scala version
added back old 2nd sample (http (mist))
added back old 2nd sample (http (mist))
restore project and ref config to pre jetty-8 states
restore project and ref config to pre jetty-8 states
Ticket #506 closed, caused by REPL
Ticket #506 closed, caused by REPL
Ticket #506 closed, caused by REPL
Ticket #506 closed, caused by REPL
Moving dispatcher volatile field from ActorRef to LocalActorRef
Moving dispatcher volatile field from ActorRef to LocalActorRef
fixing a screwy merge from master... readding files git deleted for some unknown reason
fixing a screwy merge from master... readding files git deleted for some unknown reason
fixing a screwy merge from master... readding files git deleted for some unknown reason
removing odd git-added folder.
removing odd git-added folder.
removing odd git-added folder.
merge master to branch
merge master to branch
merge master to branch
hacking in servlet 3.0 support using embedded jetty-8 (remove atmo, hbase, volde to get around jar mismatch); wip
hacking in servlet 3.0 support using embedded jetty-8 (remove atmo, hbase, volde to get around jar mismatch); wip
hacking in servlet 3.0 support using embedded jetty-8 (remove atmo, hbase, volde to get around jar mismatch); wip
most of the refactoring done and jetty is working again (need to check updating timeouts, etc); servlet 3.0 impl next
most of the refactoring done and jetty is working again (need to check updating timeouts, etc); servlet 3.0 impl next
most of the refactoring done and jetty is working again (need to check updating timeouts, etc); servlet 3.0 impl next
refactoring WIP - doesn't build; added servlet 3.0 api jar from glassfish to proj dep
refactoring WIP - doesn't build; added servlet 3.0 api jar from glassfish to proj dep
refactoring WIP - doesn't build; added servlet 3.0 api jar from glassfish to proj dep
adding back (mist) http work in a new branch. misitfy was too stale. this is WIP - trying to support both SAPI 3.0 and Jetty Continuations at once
adding back (mist) http work in a new branch. misitfy was too stale. this is WIP - trying to support both SAPI 3.0 and Jetty Continuations at once
adding back (mist) http work in a new branch. misitfy was too stale. this is WIP - trying to support both SAPI 3.0 and Jetty Continuations at once
removing odd git-added folder.
removing odd git-added folder.
removing odd git-added folder.
merge master to branch
merge master to branch
merge master to branch
hacking in servlet 3.0 support using embedded jetty-8 (remove atmo, hbase, volde to get around jar mismatch); wip
hacking in servlet 3.0 support using embedded jetty-8 (remove atmo, hbase, volde to get around jar mismatch); wip
hacking in servlet 3.0 support using embedded jetty-8 (remove atmo, hbase, volde to get around jar mismatch); wip
Adding a Java API for Channel, and adding some docs, have updated wiki, closing #536
Adding a Java API for Channel, and adding some docs, have updated wiki, closing #536
tests pass
tests pass
Added a root akka folder for source files for the docs to work properly, closing ticket #541
Added a root akka folder for source files for the docs to work properly, closing ticket #541
Added a root akka folder for source files for the docs to work properly, closing ticket #541
Changing signature for HotSwap to include self-reference, closing ticket #540
Changing signature for HotSwap to include self-reference, closing ticket #540
Changing artifact IDs so they dont include scala version no, closing ticket #529
Changing artifact IDs so they dont include scala version no, closing ticket #529
factor out redundant code
factor out redundant code
Cleaned up some semicolons Test now compiles (but does not pass)
Cleaned up some semicolons Test now compiles (but does not pass)
cleanup from wip merge
cleanup from wip merge
check reference equality when registering a persistent datastructure, and fail if one is already there with a different reference
check reference equality when registering a persistent datastructure, and fail if one is already there with a different reference
Refatored createActor, separate unit tests cleanup according to viktor's suggestions
Refatored createActor, separate unit tests cleanup according to viktor's suggestions
added retries to persistent state commits, and restructured the storage api to provide management over the number of instances of persistent datastructures
added retries to persistent state commits, and restructured the storage api to provide management over the number of instances of persistent datastructures
merge wip
merge wip
merge wip
add TX retries, and add a helpful error logging in ReflectiveAccess
add TX retries, and add a helpful error logging in ReflectiveAccess
most of the work for retry-able persistence commits and managing the instances of persistent data structures
most of the work for retry-able persistence commits and managing the instances of persistent data structures
refactored the createActor function to make it easier to understand and remove the return statements;
refactored the createActor function to make it easier to understand and remove the return statements;
Cleaned up patch as suggested by Vicktor
Cleaned up patch as suggested by Vicktor
Making register and unregister of ActorRegistry private
Making register and unregister of ActorRegistry private
Change to akka-actor rather than akka-remote as default in sbt plugin
Change to akka-actor rather than akka-remote as default in sbt plugin
Change to akka-actor rather than akka-remote as default in sbt plugin
Change to akka-actor rather than akka-remote as default in sbt plugin
wip
wip
redis tests should not run by default
redis tests should not run by default
wip
wip
wip
wip
wip
wip
retry only failed/not executed Ops if the starabe backend is not transactional
retry only failed/not executed Ops if the starabe backend is not transactional
fix ticket-532
fix ticket-532
initial sketch
initial sketch
Added remote typed session actors, along with unit tests
Added remote typed session actors, along with unit tests
Added server initiated remote untyped session actors now you can register a factory function and whenever a new session starts, the actor will be created and started. When the client disconnects, the actor will be stopped. The client works the same as any other untyped remote server managed actor.
Added server initiated remote untyped session actors now you can register a factory function and whenever a new session starts, the actor will be created and started. When the client disconnects, the actor will be stopped. The client works the same as any other untyped remote server managed actor.
Added interface for registering session actors, and adding unit test (which is failing now)
Added interface for registering session actors, and adding unit test (which is failing now)
Update redis test after rebase
Update redis test after rebase
Remove disabled src in stm module
Remove disabled src in stm module
Move transactor.typed to other packages
Move transactor.typed to other packages
Update agent and agent spec
Update agent and agent spec
Add Atomically for transactor Java API
Add Atomically for transactor Java API
Add untyped coordinated example to be used in docs
Add untyped coordinated example to be used in docs
Use coordinated.await in test
Use coordinated.await in test
Add coordinated transactions for typed actors
Add coordinated transactions for typed actors
Update new redis tests
Update new redis tests
Add untyped transactor
Add untyped transactor
Add Java API for coordinated transactions
Add Java API for coordinated transactions
Move Transactor and Coordinated to akka.transactor package
Move Transactor and Coordinated to akka.transactor package
Some tidy up
Some tidy up
Add reworked Agent
Add reworked Agent
Update stm scaladoc
Update stm scaladoc
Add new transactor based on new coordinated transactions
Add new transactor based on new coordinated transactions
Add new mechanism for coordinated transactions
Add new mechanism for coordinated transactions
Reworked stm with no global/local
Reworked stm with no global/local
First pass on separating stm into its own module
First pass on separating stm into its own module
Implemented addition of entries with same score through zrange - updated test cases
Implemented addition of entries with same score through zrange - updated test cases
Ensure unique scores for redis sorted set test
Ensure unique scores for redis sorted set test
closing ticket 518
closing ticket 518
closing ticket 518
clean up some code
clean up some code
minor simplification
minor simplification
- add possibility to specify channel prefetch side for consumer
- add possibility to specify channel prefetch side for consumer
Adding configurable default dispatcher timeout and re-instating awaitEither
Adding configurable default dispatcher timeout and re-instating awaitEither
Adding Futures.firstCompleteOf to allow for composability
Adding Futures.firstCompleteOf to allow for composability
Replacing awaitOne with a listener based approach
Replacing awaitOne with a listener based approach
Adding support for onComplete listeners to Future
Adding support for onComplete listeners to Future
Removing legacy code for 1.0
Removing legacy code for 1.0
Removing legacy code for 1.0
updated test case to ensure that sorted sets have diff scores
updated test case to ensure that sorted sets have diff scores
fix source of compiler warnings
fix source of compiler warnings
finished enabling batch puts and gets in simpledb
finished enabling batch puts and gets in simpledb
Removing pointless synchroniation
Removing pointless synchroniation
cassandra, riak, memcached, voldemort working, still need to enable bulk gets and puts in simpledb
cassandra, riak, memcached, voldemort working, still need to enable bulk gets and puts in simpledb
first pass at refactor, common access working (cassandra) now to KVAccess
first pass at refactor, common access working (cassandra) now to KVAccess
most of the refactoring done and jetty is working again (need to check updating timeouts, etc); servlet 3.0 impl next
most of the refactoring done and jetty is working again (need to check updating timeouts, etc); servlet 3.0 impl next
most of the refactoring done and jetty is working again (need to check updating timeouts, etc); servlet 3.0 impl next
Merging support of amazon simpledb as a persistence backend
Merging support of amazon simpledb as a persistence backend
Merging support of amazon simpledb as a persistence backend
Check that either implementation or ref are specified
Check that either implementation or ref are specified
test max key and value sizes
test max key and value sizes
Customizing routes to typed consumer actors (Scala and Java API) and refactorings.
Customizing routes to typed consumer actors (Scala and Java API) and refactorings.
merged master
merged master
merged master
working simpledb backend, not the fastest thing in the world
working simpledb backend, not the fastest thing in the world
change var names for aws keys
change var names for aws keys
refactoring WIP - doesn't build; added servlet 3.0 api jar from glassfish to proj dep
refactoring WIP - doesn't build; added servlet 3.0 api jar from glassfish to proj dep
refactoring WIP - doesn't build; added servlet 3.0 api jar from glassfish to proj dep
switching to aws-java-sdk, for consistent reads (Apache 2 licenced) finished impl
switching to aws-java-sdk, for consistent reads (Apache 2 licenced) finished impl
adding back (mist) http work in a new branch. misitfy was too stale. this is WIP - trying to support both SAPI 3.0 and Jetty Continuations at once
adding back (mist) http work in a new branch. misitfy was too stale. this is WIP - trying to support both SAPI 3.0 and Jetty Continuations at once
adding back (mist) http work in a new branch. misitfy was too stale. this is WIP - trying to support both SAPI 3.0 and Jetty Continuations at once
renaming dep
renaming dep
Closing ticket 476 - verify licenses
Closing ticket 476 - verify licenses
Java API for customizing routes to consumer actors
Java API for customizing routes to consumer actors
- improved RPC, adding 'poolsize' and direct queue capabilities - add redelivery property to delivery
- improved RPC, adding 'poolsize' and direct queue capabilities - add redelivery property to delivery
Add a ref="..." attribute to untyped-actor and typed-actor so that akka can use spring created beans
Add a ref="..." attribute to untyped-actor and typed-actor so that akka can use spring created beans
wip for simpledb backend
wip for simpledb backend
Tweaking the encoding of map keys so that there is no possibility of stomping on the key used to hold the map keyset
Tweaking the encoding of map keys so that there is no possibility of stomping on the key used to hold the map keyset
Tweaking the encoding of map keys so that there is no possibility of stomping on the key used to hold the maps keyset
Tweaking the encoding of map keys so that there is no possibility of stomping on the key used to hold the maps keyset
Update sbt plugin
Update sbt plugin
Adding support for user-controlled action for unmatched messages
Adding support for user-controlled action for unmatched messages
formatting
formatting
realized that there are other MIT deps in akka, re-enabling
realized that there are other MIT deps in akka, re-enabling
commenting out memcached support pending license question
commenting out memcached support pending license question
freeing up a few more bytes for memcached keys, reserving a slightly less common key to hold map keysets
freeing up a few more bytes for memcached keys, reserving a slightly less common key to hold map keysets
updating akka-reference.conf and switching to KetamaConnectionFactory for spymemcached
updating akka-reference.conf and switching to KetamaConnectionFactory for spymemcached
Closing ticket-29 memcached protocol support for persistence backend. tested against memcached and membase.
Closing ticket-29 memcached protocol support for persistence backend. tested against memcached and membase.
Closing ticket-29 memcached protocol support for persistence backend. tested against memcached and membase.
Initial support for customizing routes to consumer actors.
Initial support for customizing routes to consumer actors.
refactored test - lazy persistent vector doesn't seem to work anymore
refactored test - lazy persistent vector doesn't seem to work anymore
changed implementation of PersistentQueue so that it's now thread-safe
changed implementation of PersistentQueue so that it's now thread-safe
merged master
merged master
merged master
merged master
merged master
Cleanup and wait/retry on futures returned from spymemcached appropriately
Cleanup and wait/retry on futures returned from spymemcached appropriately
Made remote message frame size configurable
Made remote message frame size configurable
merged with upstream
merged with upstream
merged with upstream
Merging of RemoteRequest and RemoteReply protocols completed
Merging of RemoteRequest and RemoteReply protocols completed
Memcached Storage Backend
Memcached Storage Backend
formatting
formatting
Added remote client info to remote server life-cycle events
Added remote client info to remote server life-cycle events
Switched to server managed for Supervisor config
Switched to server managed for Supervisor config
removed trailing spaces
removed trailing spaces
removed trailing spaces
Cleaned up shutdown hook code and increased readability
Cleaned up shutdown hook code and increased readability
Changed default remote port from 9999 to 2552 (AKKA) :-)
Changed default remote port from 9999 to 2552 (AKKA) :-)
Adding shutdown hook that clears logging levels registered by Configgy, closing ticket 486
Adding shutdown hook that clears logging levels registered by Configgy, closing ticket 486
Adding shutdown hook that clears logging levels registered by Configgy, closing ticket 486
Remove Camel staging repo
Remove Camel staging repo
Refactored a CommonStorageBackend out of the KVBackend, tweaked the CassandraBackend to extend it, and tweaked the Vold and Riak backends to use the updated KVBackend
Refactored a CommonStorageBackend out of the KVBackend, tweaked the CassandraBackend to extend it, and tweaked the Vold and Riak backends to use the updated KVBackend
Added untrusted-mode for remote server which disallows client-managed remote actors and al lifecycle messages
Added untrusted-mode for remote server which disallows client-managed remote actors and al lifecycle messages
mid prococol refactoring
mid prococol refactoring
merged master after the package rename changeset
merged master after the package rename changeset
merged master after the package rename changeset
More sugar on the syntax
More sugar on the syntax
Optimization, 2 less allocs and 1 less field in actorref
Optimization, 2 less allocs and 1 less field in actorref
Bumping Jackson version to 1.4.3
Bumping Jackson version to 1.4.3
polishing up code
polishing up code
Improved secure cookie generation script
Improved secure cookie generation script
use nice case objects for the states :-)
use nice case objects for the states :-)
Adding PersistentQueue to CassandraStorage
Adding PersistentQueue to CassandraStorage
refactored KVStorageBackend to also work with Cassandra, refactored CassandraStorageBackend to use KVStorageBackend, so Cassandra backend is now fully compliant with the test specs and supports PersistentQueue and Vector.pop
refactored KVStorageBackend to also work with Cassandra, refactored CassandraStorageBackend to use KVStorageBackend, so Cassandra backend is now fully compliant with the test specs and supports PersistentQueue and Vector.pop
converted tabs to spaces
converted tabs to spaces
Changed the script to spit out a full akka.conf file with the secure cookie
Changed the script to spit out a full akka.conf file with the secure cookie
Completed Erlang-style cookie handshake between RemoteClient and RemoteServer
Completed Erlang-style cookie handshake between RemoteClient and RemoteServer
refactoring the FSM part
refactoring the FSM part
Adding possibility to take naps between scans for finished future, closing ticket #449
Adding possibility to take naps between scans for finished future, closing ticket #449
Added support for remote agent
Added support for remote agent
Added Erlang-style secure cookie authentication for remote client/server
Added Erlang-style secure cookie authentication for remote client/server
Switching to non-SSL repo for jBoss
Switching to non-SSL repo for jBoss
BREAKAGE: switching from se.scalablesolutions.akka to akka for all packages
BREAKAGE: switching from se.scalablesolutions.akka to akka for all packages
BREAKAGE: switching from se.scalablesolutions.akka to akka for all packages
Upgrade to Camel 2.5 release candidate 2
Upgrade to Camel 2.5 release candidate 2
Refactoring KVStoragebackend such that it is possible to create a Cassandra based impl
Refactoring KVStoragebackend such that it is possible to create a Cassandra based impl
adding compatibility tests for cassandra (failing currently) and refactor KVStorageBackend to make some functionality easier to get at
adding compatibility tests for cassandra (failing currently) and refactor KVStorageBackend to make some functionality easier to get at
Making PersistentVector.pop required, removed support for it being optional
Making PersistentVector.pop required, removed support for it being optional
Making ThreadBasedDispatcher Unbounded if no capacity specced and fix a possible mem leak in it
Making ThreadBasedDispatcher Unbounded if no capacity specced and fix a possible mem leak in it
Handling Interrupts for ThreadBasedDispatcher, EBEDD and EBEDWSD
Handling Interrupts for ThreadBasedDispatcher, EBEDD and EBEDWSD
Updating Netty to 3.2.3, closing ticket #495
Updating Netty to 3.2.3, closing ticket #495
added more tests and fixed corner case to TypedActor Option return value
added more tests and fixed corner case to TypedActor Option return value
Closing ticket #471
Closing ticket #471
Adding a flooding test to reproduce error reported by user
Adding a flooding test to reproduce error reported by user
Added the ActorModel specification to HawtDispatcher and EBEDWSD
Added the ActorModel specification to HawtDispatcher and EBEDWSD
Added tests for suspend/resume
Added tests for suspend/resume
Added test for dispatcher parallelism
Added test for dispatcher parallelism
Adding test harness for ActorModel (Dispatcher), work-in-progress
Adding test harness for ActorModel (Dispatcher), work-in-progress
Closing ticket #460
Closing ticket #460
updating common tests so that impls that dont support pop wont fail
updating common tests so that impls that dont support pop wont fail
Finished off adding vector.pop as an optional operation
Finished off adding vector.pop as an optional operation
Removed boilerplate, added final optmization
Removed boilerplate, added final optmization
Rewrote timed shutdown facility, causes less than 5% overhead now
Rewrote timed shutdown facility, causes less than 5% overhead now
initial tests of vector backend remove
initial tests of vector backend remove
Naïve implementation of timeout completed
Naïve implementation of timeout completed
Use a cached JMS ConnectionFactory.
Use a cached JMS ConnectionFactory.
Renamed stopAllLinkedActors to stopAllAttachedActors
Renamed stopAllLinkedActors to stopAllAttachedActors
Moved active flag into MessageDispatcher and let it handle the callbacks, also fixed race in DataFlowSpec
Moved active flag into MessageDispatcher and let it handle the callbacks, also fixed race in DataFlowSpec
Removing unused code and the isShutdown method
Removing unused code and the isShutdown method
Tests green, config basically in place, need to work on start/stop semantics and countdowns
Tests green, config basically in place, need to work on start/stop semantics and countdowns
Initial frontend code to support vector pop, and KVStorageBackend changes to put the scaffolding in place to support this
Initial frontend code to support vector pop, and KVStorageBackend changes to put the scaffolding in place to support this
WIP
WIP
Final tweaks to common KVStorageBackend factored out of Riak and Voldemort backends
Final tweaks to common KVStorageBackend factored out of Riak and Voldemort backends
Voldemort Tests now working as well as Riak
Voldemort Tests now working as well as Riak
riak working, all vold tests work individually, just not in sequence
riak working, all vold tests work individually, just not in sequence
refactoring complete, vold tests still acting up
refactoring complete, vold tests still acting up
Improving SupervisorConfig for Java
Improving SupervisorConfig for Java
Closes #479. Do not register listeners when CamelService is turned off by configuration
Closes #479. Do not register listeners when CamelService is turned off by configuration
Changes publication from sourcess to sources
Changes publication from sourcess to sources
Made Format serializers serializable
Made Format serializers serializable
remove usage of 'actor' function
remove usage of 'actor' function
Reducing object creation per ActorRef + removed unsafe concurrent publication
Reducing object creation per ActorRef + removed unsafe concurrent publication
fix for the fix for #480 : new version of redisclient
fix for the fix for #480 : new version of redisclient
fix for issue #480 Regression multibulk replies redis client with a new version of redisclient
fix for issue #480 Regression multibulk replies redis client with a new version of redisclient
Added Java API constructor to supervision configuration
Added Java API constructor to supervision configuration
Refining Supervision API and remove AllForOne, OneForOne and replace with AllForOneStrategy, OneForOneStrategy etc
Refining Supervision API and remove AllForOne, OneForOne and replace with AllForOneStrategy, OneForOneStrategy etc
Moved Faulthandling into Supvervision
Moved Faulthandling into Supvervision
Upgrade to Camel 2.5 release candidate leaving ActiveMQ at version 5.3.2 because of https://issues.apache.org/activemq/browse/AMQ-2935
Upgrade to Camel 2.5 release candidate leaving ActiveMQ at version 5.3.2 because of https://issues.apache.org/activemq/browse/AMQ-2935
Refactored declarative supervision, removed ScalaConfig and JavaConfig, moved things around
Refactored declarative supervision, removed ScalaConfig and JavaConfig, moved things around
Refactored declarative supervision, removed ScalaConfig and JavaConfig, moved things around
Removing local caching of actor self fields
Removing local caching of actor self fields
Added missing Consumer trait to example actor
Added missing Consumer trait to example actor
adding default riak config to akka-reference.conf
adding default riak config to akka-reference.conf
Closing #456
Closing #456
Improve Java API to wait for endpoint activation/deactivation. Closes #472
Improve Java API to wait for endpoint activation/deactivation. Closes #472
final tweaks before pushing to master
final tweaks before pushing to master
merging master
merging master
merging master
Improve API to wait for endpoint activation/deactivation. Closes #472
Improve API to wait for endpoint activation/deactivation. Closes #472
Added Java API for Supervise
Added Java API for Supervise
added fork of riak-java-pb-client to embedded repo, udpated backend to use new code therein, and all tests pass
added fork of riak-java-pb-client to embedded repo, udpated backend to use new code therein, and all tests pass
Closing ticket #469
Closing ticket #469
Upgrade to Camel 2.5-SNAPSHOT, Jetty 7.1.6.v20100715 and ActiveMQ 5.4.1
Upgrade to Camel 2.5-SNAPSHOT, Jetty 7.1.6.v20100715 and ActiveMQ 5.4.1
fix an inconsistency
fix an inconsistency
Initial Port of the Voldemort Backend to Riak
Initial Port of the Voldemort Backend to Riak
Removed duplicate code
Removed duplicate code
First pass at Riak Backend
First pass at Riak Backend
Merging in CouchDB support
Merging in CouchDB support
Improvements to actor-component API docs
Improvements to actor-component API docs
Adding implicit dispatcher to spawn
Adding implicit dispatcher to spawn
Removing anonymous actor methods as per discussion on ML
Removing anonymous actor methods as per discussion on ML
Switching to volatile int instead of AtomicInteger until ticket 384 is done
Switching to volatile int instead of AtomicInteger until ticket 384 is done
Tuned test to work, also fixed a bug in the restart logic
Tuned test to work, also fixed a bug in the restart logic
Rewrote restart code, resetting restarts outside tiem window etc
Rewrote restart code, resetting restarts outside tiem window etc
Dynamic message routing to actors. Closes #465
Dynamic message routing to actors. Closes #465
Initial attempt at suspend/resume
Initial attempt at suspend/resume
Switching to Switch and restructuring some EBEDD code
Switching to Switch and restructuring some EBEDD code
Switching to Switch for EBEDWSD active status
Switching to Switch for EBEDWSD active status
Refactorings
Refactorings
Switched to JavaConversion wrappers
Switched to JavaConversion wrappers
Removed errornous method in Future
Removed errornous method in Future
Initial Scaffold of Riak Module
Initial Scaffold of Riak Module
Folding 3 volatiles into 1, all transactor-based stuff
Folding 3 volatiles into 1, all transactor-based stuff
Tests for Message Java API
Tests for Message Java API
Java API for Message and Failure classes
Java API for Message and Failure classes
Removed all allocations from the canRestart-method
Removed all allocations from the canRestart-method
Switching to a more accurate approach that involves no locking and no thread locals
Switching to a more accurate approach that involves no locking and no thread locals
Rework restart strategy restart decision.
Rework restart strategy restart decision.
Add more specs for restart strategy params.
Add more specs for restart strategy params.
after merge cleanup
after merge cleanup
- Finshed up java api for RPC - Made case objects 'java compatible' via getInstance function - Added RPC examples in java examplesession
- Finshed up java api for RPC - Made case objects 'java compatible' via getInstance function - Added RPC examples in java examplesession
Serialization of RemoteActorRef unborked
Serialization of RemoteActorRef unborked
Removing isInInitialization, reading that from actorRefInCreation, -1 volatile field per actorref
Removing isInInitialization, reading that from actorRefInCreation, -1 volatile field per actorref
Removing linkedActorsAsList, switching _linkedActors to be a volatile lazy val instead of Option with lazy semantics
Removing linkedActorsAsList, switching _linkedActors to be a volatile lazy val instead of Option with lazy semantics
Changed != SHUTDOWN to == RUNNING
Changed != SHUTDOWN to == RUNNING
Added serialization of 'hotswap' stack + tests
Added serialization of 'hotswap' stack + tests
-1 volatile field in ActorRef, trapExit is migrated into faultHandler
-1 volatile field in ActorRef, trapExit is migrated into faultHandler
Made 'hotswap' a Stack instead of Option + addded 'RevertHotSwap' and 'unbecome' + added tests for pushing and popping the hotswap stack
Made 'hotswap' a Stack instead of Option + addded 'RevertHotSwap' and 'unbecome' + added tests for pushing and popping the hotswap stack
- made channel and connection callback java compatible
- made channel and connection callback java compatible
- changed exchange types to case classes for java compatibility - made java api for string and protobuf convenience producers/consumers - implemented string and protobuf java api examples
- changed exchange types to case classes for java compatibility - made java api for string and protobuf convenience producers/consumers - implemented string and protobuf java api examples
register client managed remote actors by uuid
register client managed remote actors by uuid
added java API for PersistentMap, PersistentVector
added java API for PersistentMap, PersistentVector
Tests for Java API support
Tests for Java API support
Moved Java API support to japi package.
Moved Java API support to japi package.
fix:ensure that typed actor module is enabled in typed actor methods
fix:ensure that typed actor module is enabled in typed actor methods
Upgraded to Scala 1.2 final.
Upgraded to Scala 1.2 final.
Minor reformattings
Minor reformattings
Java API for CamelServiceManager and CamelContextManager (refactorings)
Java API for CamelServiceManager and CamelContextManager (refactorings)
completed!!
completed!!
merge with yllan's commit
merge with yllan's commit
Copied the actor spec from mongo and voldemort.
Copied the actor spec from mongo and voldemort.
Upgraded to AspectWerkz 2.2.2 with new fix for Scala load-time weaving
Upgraded to AspectWerkz 2.2.2 with new fix for Scala load-time weaving
clean up db for actor test.
clean up db for actor test.
Add actor spec (but didn't pass)
Add actor spec (but didn't pass)
Add tags to gitignore.
Add tags to gitignore.
Removed pointless check for N/A as Actor ID
Removed pointless check for N/A as Actor ID
Added some more methods to Index, as well as added return-types for put and remove as well as restructured some of the code
Added some more methods to Index, as well as added return-types for put and remove as well as restructured some of the code
Java API for CamelServiceManager and CamelContextManager (usage of JavaAPI.Option)
Java API for CamelServiceManager and CamelContextManager (usage of JavaAPI.Option)
Removing more boilerplate from AkkaServlet
Removing more boilerplate from AkkaServlet
Removing more boilerplate from AkkaServlet
Add couchdb support
Add couchdb support
my first commit
my first commit
Cleaned up code and added more comments
Cleaned up code and added more comments
Cleaned up code and added more comments
CamelServiceManager.service returns Option[CamelService] (Scala API) CamelServiceManager.getService() returns Option[CamelService] (Java API) Re #457
CamelServiceManager.service returns Option[CamelService] (Scala API) CamelServiceManager.getService() returns Option[CamelService] (Java API) Re #457
porting a ticket 450 change over
porting a ticket 450 change over
Ensure that at most 1 CometSupport is created per servlet. and remove boiler
Ensure that at most 1 CometSupport is created per servlet. and remove boiler
Ensure that at most 1 CometSupport is created per servlet. and remove boiler
Changed ReflectiveAccess to work with enterprise module
Changed ReflectiveAccess to work with enterprise module
Creating a Main object for Akka-http
Creating a Main object for Akka-http
Creating a Main object for Akka-http
Moving EmbeddedAppServer to akka-http and closing #451
Moving EmbeddedAppServer to akka-http and closing #451
Moving EmbeddedAppServer to akka-http and closing #451
Add couch db plugable persistence module scheme.
Add couch db plugable persistence module scheme.
Minor code cleanup of config file load
Minor code cleanup of config file load
Added hasListener
Added hasListener
Changing order of priority for akka.config and adding option to specify a mode
Changing order of priority for akka.config and adding option to specify a mode
Updating Atmosphere to 0.6.2 and switching to using SimpleBroadcaster
Updating Atmosphere to 0.6.2 and switching to using SimpleBroadcaster
Updating Atmosphere to 0.6.2 and switching to using SimpleBroadcaster
Added tests of proper null handling for Ref,Vector,Map,Queue and voldemort impl/tweak
Added tests of proper null handling for Ref,Vector,Map,Queue and voldemort impl/tweak
two more stub tests in Vector Spec
two more stub tests in Vector Spec
More VectorStorageBackend tests plus an abstract Ticket343Test with a working VoldemortImpl
More VectorStorageBackend tests plus an abstract Ticket343Test with a working VoldemortImpl
Map Spec
Map Spec
Moved implicit Ordering(ArraySeq[Byte]) to a new PersistentMapBinary companion object  and created an implicit Ordering(Array[Byte]) that can be used on the backends too
Moved implicit Ordering(ArraySeq[Byte]) to a new PersistentMapBinary companion object  and created an implicit Ordering(Array[Byte]) that can be used on the backends too
merged ticket444
merged ticket444
merged ticket444
minor edit
minor edit
fixed test
fixed test
merged master
merged master
merged master
CamelService can now be turned off by configuration. Closes #447
CamelService can now be turned off by configuration. Closes #447
Initial QueueStorageBackend Spec
Initial QueueStorageBackend Spec
Initial QueueStorageBackend Spec
Initial QueueStorageBackend Spec
added Java API
added Java API
closing ticket440, implemented typed actor with constructor args
closing ticket440, implemented typed actor with constructor args
Changing impl of ReflectiveAccess to log to debug
Changing impl of ReflectiveAccess to log to debug
new version of redisclient containing a redis based persistent deque
new version of redisclient containing a redis based persistent deque
refactoring to remove compiler warnings reported by Viktor
refactoring to remove compiler warnings reported by Viktor
Refactored ExecutableMailbox to make it accessible for other implementations
Refactored ExecutableMailbox to make it accessible for other implementations
Initial Spec for MapStorageBackend
Initial Spec for MapStorageBackend
Persistence Compatibility Test Harness and Voldemort Implementation
Persistence Compatibility Test Harness and Voldemort Implementation
Removing runActorInitialization volatile field, replace with isRunning check
Removing runActorInitialization volatile field, replace with isRunning check
Initial Sketch of Persistence Compatibility Tests
Initial Sketch of Persistence Compatibility Tests
Removing isDeserialize volatile field since it doesn´t seem to have any use
Removing isDeserialize volatile field since it doesn´t seem to have any use
closing ticket 444, moved RemoteActorSet to ActorRegistry
closing ticket 444, moved RemoteActorSet to ActorRegistry
Removing classloader field (volatile) from LocalActorRef, wasn´t used
Removing classloader field (volatile) from LocalActorRef, wasn´t used
Replacing use of == null and != null for Scala
Replacing use of == null and != null for Scala
Replacing use of == null and != null for Scala
closing ticket441, implemented typed actor methods for ActorRegistry
closing ticket441, implemented typed actor methods for ActorRegistry
Initial PersistentRef spec
Initial PersistentRef spec
Finished off Queue API
Finished off Queue API
Further Queue Impl
Further Queue Impl
Support for more durable mailboxes
Support for more durable mailboxes
Made dequeue operation retriable in case of errors, switched from Seq to Stream for queue removal
Made dequeue operation retriable in case of errors, switched from Seq to Stream for queue removal
Small change in the config file
Small change in the config file
more queue implementation
more queue implementation
Refactor to utilize only one voldemort store per datastructure type
Refactor to utilize only one voldemort store per datastructure type
Changed file-based mailbox creation
Changed file-based mailbox creation
API-docs improvements.
API-docs improvements.
closing ticket322
closing ticket322
initial take on java examples
initial take on java examples
reducing boilerplate imports with package objects
reducing boilerplate imports with package objects
Only execute tests matching *Test by default in akka-camel and akka-sample-camel. Rename stress tests in akka-sample-camel to *TestStress.
Only execute tests matching *Test by default in akka-camel and akka-sample-camel. Rename stress tests in akka-sample-camel to *TestStress.
Only execute tests matching *Test by default in akka-camel and akka-sample-camel. Rename stress tests in akka-sample-camel to *TestStress.
Only execute tests matching *Test by default in akka-camel and akka-sample-camel. Rename stress tests in akka-sample-camel to *TestStress.
Organized imports
Organized imports
Renamed two akka-camel tests from *Spec to *Test
Renamed two akka-camel tests from *Spec to *Test
Aligned the hbase test to the new mechanism for optionally running integration tests
Aligned the hbase test to the new mechanism for optionally running integration tests
Aligned the hbase test to the new mechanism for optionally running integration tests
Aligned the hbase test to the new mechanism for optionally running integration tests
add test filter to the amqp project
add test filter to the amqp project
Aligned the hbase test to the new mechanism for optionally running integration tests
Aligned the hbase test to the new mechanism for optionally running integration tests
Aligned the hbase test to the new mechanism for optionally running integration tests
Aligned the hbase test to the new mechanism for optionally running integration tests
wait a bit longer than the deadline... so test always works...
wait a bit longer than the deadline... so test always works...
renamed tests to support integration test selection via sbt
renamed tests to support integration test selection via sbt
back to original project settings :S
back to original project settings :S
More Queue impl
More Queue impl
Refactoring Vector to only use 1 voldemort store, and setting up for implementing Queue
Refactoring Vector to only use 1 voldemort store, and setting up for implementing Queue
Added support for having integration tests and stresstest optionally enabled
Added support for having integration tests and stresstest optionally enabled
Corrected the optional run of the hbase tests
Corrected the optional run of the hbase tests
Now the hbase tests don't spit out too much logs, made the running of the hbase tests optional
Now the hbase tests don't spit out too much logs, made the running of the hbase tests optional
removed unnecessary imports
removed unnecessary imports
Disable test before push
Disable test before push
Make tests pass again...
Make tests pass again...
Updated test to changes in api
Updated test to changes in api
Re-adding voldemort
Re-adding voldemort
Merging with ticktock
Merging with ticktock
Merging with ticktock
Merging with ticktock
Merging with ticktock
Merging with ticktock
- Adding java api to AMQP module - Reorg of params, especially declaration attributes and exhange name/params
- Adding java api to AMQP module - Reorg of params, especially declaration attributes and exhange name/params
Removing BDB as a test-runtime dependency
Removing BDB as a test-runtime dependency
Temporarily removing voldemort module pending license resolution
Temporarily removing voldemort module pending license resolution
Adding Voldemort persistence plugin
Adding Voldemort persistence plugin
Adding Voldemort persistence plugin
Removing registeredInRemoteNodeDuringSerialization
Removing registeredInRemoteNodeDuringSerialization
Removing the running of HBase tests
Removing the running of HBase tests
fixed some tests
fixed some tests
fixed some tests
fixed some tests
Modified the hbase storage backend dependencies to exclude sl4j
Modified the hbase storage backend dependencies to exclude sl4j
renamed the files and the names of the habse tests, the names now ends with Test
renamed the files and the names of the habse tests, the names now ends with Test
renamed the files and the names of the habse tests, the names now ends with Test
renamed the files and the names of the habse tests, the names now ends with Test
Modified the hbase storage backend dependencies to exclude sl4j
Modified the hbase storage backend dependencies to exclude sl4j
Removing log4j and making Jetty intransitive
Removing log4j and making Jetty intransitive
Bumping Jersey to 1.3
Bumping Jersey to 1.3
renamed the files and the names of the habse tests, the names now ends with Test
renamed the files and the names of the habse tests, the names now ends with Test
Ported HBase to use new Uuids
Ported HBase to use new Uuids
Now the hbase persistent storage tests dont'run by default
Now the hbase persistent storage tests dont'run by default
Adding poms
Adding poms
Corrected a bug, now the hbase quorum is read correctly from the configuration
Corrected a bug, now the hbase quorum is read correctly from the configuration
fixed TypedActorBeanDefinitionParserTest
fixed TypedActorBeanDefinitionParserTest
fixed merge error in conf
fixed merge error in conf
fixed missing aop.xml in akka-typed-actor jar
fixed missing aop.xml in akka-typed-actor jar
Integrated sjson type class based serialization into Akka - some backward incompatible changes there
Integrated sjson type class based serialization into Akka - some backward incompatible changes there
Preparing to add UUIDs to RemoteServer as well
Preparing to add UUIDs to RemoteServer as well
closing ticket423, implemented custom placeholder configurer
closing ticket423, implemented custom placeholder configurer
Refactored mailbox configuration
Refactored mailbox configuration
making the persistent data sturctures non lazy in the ActorTest made things work...hmm seems strange though
making the persistent data sturctures non lazy in the ActorTest made things work...hmm seems strange though
The getVectorStorageRangeFor of HbaseStorageBackend shouldn't make any defensive programming against out of bound indexes. Now all the tests are passing again. The HbaseTicket343Spec.scala tests were expecting exceptions with out of bound indexes
The getVectorStorageRangeFor of HbaseStorageBackend shouldn't make any defensive programming against out of bound indexes. Now all the tests are passing again. The HbaseTicket343Spec.scala tests were expecting exceptions with out of bound indexes
Adding a direct test of PersistentRef, since after merging master over, something is blowing up there with the Actor tests
Adding a direct test of PersistentRef, since after merging master over, something is blowing up there with the Actor tests
adding sjson as a test dependency to voldemort persistence
adding sjson as a test dependency to voldemort persistence
merge master of jboner/akka
merge master of jboner/akka
Some refactoring and management of edge cases in the  getVectorStorageRangeFor method
Some refactoring and management of edge cases in the  getVectorStorageRangeFor method
provide better voldemort configuration support, and defaults definition in akka-reference.conf, and made the backend more easily testable
provide better voldemort configuration support, and defaults definition in akka-reference.conf, and made the backend more easily testable
provide better voldemort configuration support, and defaults definition in akka-reference.conf, and made the backend more easily testable
provide better voldemort configuration support, and defaults definition in akka-reference.conf, and made the backend more easily testable
fixing the formatting damage I did
fixing the formatting damage I did
merged branch ticket364
merged branch ticket364
Removing dead code
Removing dead code
Folding 3 booleans into 1 reference, preparing for @volatile decimation
Folding 3 booleans into 1 reference, preparing for @volatile decimation
Threw away old ThreadBasedDispatcher and replaced it with an EBEDD with 1 in core pool and 1 in max pool
Threw away old ThreadBasedDispatcher and replaced it with an EBEDD with 1 in core pool and 1 in max pool
Corrected a bug where I wasn't reading the zookeeper quorum configuration correctly
Corrected a bug where I wasn't reading the zookeeper quorum configuration correctly
Corrected a bug where I wasn't reading the zookeeper quorum configuration correctly
Corrected a bug where I wasn't reading the zookeeper quorum configuration correctly
Reverting some of the dataflow tests
Reverting some of the dataflow tests
fixed merge
fixed merge
added possibility to register and find remote actors by uuid
added possibility to register and find remote actors by uuid
Implemented the start and finish semantic in the getMapStorageRangeFor method
Implemented the start and finish semantic in the getMapStorageRangeFor method
Implemented the start and finish semantic in the getMapStorageRangeFor method
Implemented the start and finish semantic in the getMapStorageRangeFor method
Adding the old tests for the DataFlowStream
Adding the old tests for the DataFlowStream
Readded a bugfixed DataFlowStream
Readded a bugfixed DataFlowStream
Adding better guard in id vs uuid parsing of ActorComponent
Adding better guard in id vs uuid parsing of ActorComponent
Its a wrap!
Its a wrap!
Its a wrap!
Its a wrap!
Switching from OP_READ to OP_WRITE
Switching from OP_READ to OP_WRITE
fixed ticket #435. Also made serialization of mailbox optional - default true
fixed ticket #435. Also made serialization of mailbox optional - default true
Added the ticket 343 test too
Added the ticket 343 test too
Now all the tests used to pass with Mongo and Cassandra are passing
Now all the tests used to pass with Mongo and Cassandra are passing
Aaaaalmost there...
Aaaaalmost there...
Starting to work on the hbase storage backend for maps
Starting to work on the hbase storage backend for maps
Starting to work on the hbase storage backend for maps
Starting to work on the hbase storage backend for maps
Ticket #343 implementation done except for pop of PersistentVector
Ticket #343 implementation done except for pop of PersistentVector
Implemented the Ref and the Vector backend apis
Implemented the Ref and the Vector backend apis
closing #364, serializiation for typed actor proxy ref
closing #364, serializiation for typed actor proxy ref
sorted set hand serialization and working actor test
sorted set hand serialization and working actor test
Adding support for optional maxrestarts and withinTime, closing ticket #346
Adding support for optional maxrestarts and withinTime, closing ticket #346
Extended akka-sample-camel to include server-managed remote typed consumer actors. Minor refactorings.
Extended akka-sample-camel to include server-managed remote typed consumer actors. Minor refactorings.
Closing #427 and #424
Closing #427 and #424
Make ExecutorBasedEventDrivenDispatcherActorSpec deterministic
Make ExecutorBasedEventDrivenDispatcherActorSpec deterministic
closing ticket 434; added id to ActorInfoProtocol
closing ticket 434; added id to ActorInfoProtocol
fix for issue #436, new version of sjson jar
fix for issue #436, new version of sjson jar
Corrected a problem merging with the upstream
Corrected a problem merging with the upstream
tests of PersistentRef,Map,Vector StorageBackend working
tests of PersistentRef,Map,Vector StorageBackend working
Resolve casbah time dependency from casbah snapshots repo
Resolve casbah time dependency from casbah snapshots repo
more tests, working on map api
more tests, working on map api
Initial tests working with bdb backed voldemort,
Initial tests working with bdb backed voldemort,
switched voldemort to log4j-over-slf4j
switched voldemort to log4j-over-slf4j
finished ref map vector and some initial test scaffolding
finished ref map vector and some initial test scaffolding
Start to work on the HbaseStorageBackend
Start to work on the HbaseStorageBackend
Start to work on the HbaseStorageBackend
Start to work on the HbaseStorageBackend
Closing #264, addign JavaAPI to DataFlowVariable
Closing #264, addign JavaAPI to DataFlowVariable
working on the hbase integration
working on the hbase integration
Updated akka-reference.conf with deadline
Updated akka-reference.conf with deadline
Added support for throughput deadlines
Added support for throughput deadlines
Added a simple test showing how to use Hbase testing utilities
Added a simple test showing how to use Hbase testing utilities
Added a simple test showing how to use Hbase testing utilities
Added a simple test showing how to use Hbase testing utilities
Added a simple test showing how to use Hbase testing utilities
Added a simple test showing how to use Hbase testing utilities
Added a new project akka-persistence-hbase
Added a new project akka-persistence-hbase
Added a new project akka-persistence-hbase
Added a new project akka-persistence-hbase
Added a new project akka-persistence-hbase
Initial PersistentMap backend
Initial PersistentMap backend
initial structures
initial structures
fixed bug in PersistentSortedSet implemnetation of redis
fixed bug in PersistentSortedSet implemnetation of redis
disabled tests for redis and mongo to be run automatically since they need running servers
disabled tests for redis and mongo to be run automatically since they need running servers
The unborkening of master: The return of the Poms
The unborkening of master: The return of the Poms
The unborkening of master: The return of the Poms
The unborkening of master: The return of the Poms
Added meta data to network protocol
Added meta data to network protocol
merged with master
merged with master
Switching dispatching strategy to 1 runnable per mailbox and removing use of TransferQueue
Switching dispatching strategy to 1 runnable per mailbox and removing use of TransferQueue
merged with master
merged with master
merged with master
merged with master
merged with master
closing ticket #426
closing ticket #426
Remove initTransactionalState, renamed init and shutdown
Remove initTransactionalState, renamed init and shutdown
Remove initTransactionalState, renamed init and shutdown
Switching dispatching strategy to 1 runnable per mailbox and removing use of TransferQueue
Switching dispatching strategy to 1 runnable per mailbox and removing use of TransferQueue
Setting -1 as default mailbox capacity
Setting -1 as default mailbox capacity
Take advantage of short-circuit to avoid lazy init if possible
Take advantage of short-circuit to avoid lazy init if possible
Adding final declarations
Adding final declarations
Resolved conflict
Resolved conflict
Improving latency in EBEDD
Improving latency in EBEDD
Better latency
Better latency
Safekeeping
Safekeeping
refactoring for more type safety
refactoring for more type safety
all mongo update operations now use safely {} to pin connection at the driver level
all mongo update operations now use safely {} to pin connection at the driver level
1 entry per mailbox at most
1 entry per mailbox at most
redis keys are no longer base64-ed. Though values are
redis keys are no longer base64-ed. Though values are
changes for ticket #343. Test harness runs for both Redis and Mongo
changes for ticket #343. Test harness runs for both Redis and Mongo
Added more safeguards to the WorkStealers tests
Added more safeguards to the WorkStealers tests
Massive refactoring of EBEDD and WorkStealer and basically everything...
Massive refactoring of EBEDD and WorkStealer and basically everything...
Removed logback config files from akka-actor and akka-remote and use only those in $AKKA_HOME/config (see also ticket #410).
Removed logback config files from akka-actor and akka-remote and use only those in $AKKA_HOME/config (see also ticket #410).
Added findValue to Index
Added findValue to Index
Moving the Atmosphere AkkaBroadcaster dispatcher to be shared
Moving the Atmosphere AkkaBroadcaster dispatcher to be shared
Moving the Atmosphere AkkaBroadcaster dispatcher to be shared
Optimization started of EBEDD
Optimization started of EBEDD
Added convenience method for push timeout on EBEDD
Added convenience method for push timeout on EBEDD
ExecutorBasedEventDrivenDispatcher now works and unit tests are added
ExecutorBasedEventDrivenDispatcher now works and unit tests are added
Added comments and removed inverted logic
Added comments and removed inverted logic
Removing Reactor based dispatchers and closing #428
Removing Reactor based dispatchers and closing #428
Refactor mongodb module to confirm to Redis and Cassandra. Issue #430
Refactor mongodb module to confirm to Redis and Cassandra. Issue #430
closing ticket 378
closing ticket 378
minor edits to scala test specs descriptors, fix up comments
minor edits to scala test specs descriptors, fix up comments
Added more comments for the mailboxfactory
Added more comments for the mailboxfactory
Optimization of Index
Optimization of Index
Adding support for safe mailboxes
Adding support for safe mailboxes
Removing erronous use of uuid and replaced with id
Removing erronous use of uuid and replaced with id
Removing boilerplate in reflective access
Removing boilerplate in reflective access
Removing boilerplate in ReflectiveAccess
Removing boilerplate in ReflectiveAccess
Refactoring RemoteServer
Refactoring RemoteServer
improved error reporting
improved error reporting
Adding support for BoundedTransferQueue to EBEDD
Adding support for BoundedTransferQueue to EBEDD
implemented server managed typed actor
implemented server managed typed actor
Added javadocs for Function and Procedure
Added javadocs for Function and Procedure
Added Function and Procedure (Java API) + added them to Agent, closing #262
Added Function and Procedure (Java API) + added them to Agent, closing #262
Added setAccessible(true) to circumvent security exceptions
Added setAccessible(true) to circumvent security exceptions
Closing ticket #261
Closing ticket #261
minor fix
minor fix
minor edits
minor edits
Closing #401 with a nice, brand new, multimap
Closing #401 with a nice, brand new, multimap
Removing unused field
Removing unused field
started working on ticket 194
started working on ticket 194
fix: server initiated remote actors not found
fix: server initiated remote actors not found
redisclient support for Redis 2.0. Not fully backward compatible, since Redis 2.0 has some differences with 1.x
redisclient support for Redis 2.0. Not fully backward compatible, since Redis 2.0 has some differences with 1.x
Removed LIFT_VERSION
Removed LIFT_VERSION
Removing Lift sample project and deps (saving ~5MB of dist size
Removing Lift sample project and deps (saving ~5MB of dist size
Added support for UntypedLoadBalancer and UntypedDispatcher
Added support for UntypedLoadBalancer and UntypedDispatcher
added config element for mailbox capacity, ticket 408
added config element for mailbox capacity, ticket 408
Moved ActorSerialization to 'serialization' package
Moved ActorSerialization to 'serialization' package
Optimization + less code
Optimization + less code
Added support hook for persistent mailboxes + cleanup and optimizations
Added support hook for persistent mailboxes + cleanup and optimizations
added alias for log category warn
added alias for log category warn
Upgrading Multiverse to 0.6.1
Upgrading Multiverse to 0.6.1
Initial UUID migration
Initial UUID migration
Add possibility to set default cometSupport in akka.conf
Add possibility to set default cometSupport in akka.conf
Add possibility to set default cometSupport in akka.conf
Ripping out Grizzly and replacing it with Jetty
Ripping out Grizzly and replacing it with Jetty
Ripping out Grizzly and replacing it with Jetty
Added all config options for STM to akka.conf
Added all config options for STM to akka.conf
Increased the default timeout for ThreadBasedDispatcher to 10 seconds
Increased the default timeout for ThreadBasedDispatcher to 10 seconds
Changed JtaModule to use structural typing instead of Field reflection, plus added a guard
Changed JtaModule to use structural typing instead of Field reflection, plus added a guard
Moving Queues into akka-actor
Moving Queues into akka-actor
Updating Netty to 3.2.2.Final
Updating Netty to 3.2.2.Final
removed trailing whitespace
removed trailing whitespace
renamed cassandra storage-conf.xml
renamed cassandra storage-conf.xml
Completed refactoring into lightweight modules akka-actor akka-typed-actor and akka-remote
Completed refactoring into lightweight modules akka-actor akka-typed-actor and akka-remote
remove logback.xml from akka-core jar and exclude logback-test.xml from distribution.
remove logback.xml from akka-core jar and exclude logback-test.xml from distribution.
Added boilerplate to improve BoundedTransferQueue performance
Added boilerplate to improve BoundedTransferQueue performance
Make sure dispatcher isnt changed on actor restart
Make sure dispatcher isnt changed on actor restart
Adding a guard to dispatcher_= in ActorRef
Adding a guard to dispatcher_= in ActorRef
Switched to mailbox instead of local queue for ThreadBasedDispatcher
Switched to mailbox instead of local queue for ThreadBasedDispatcher
Conserving memory usage per dispatcher
Conserving memory usage per dispatcher
Changed ThreadBasedDispatcher from LinkedBlockingQueue to TransferQueue
Changed ThreadBasedDispatcher from LinkedBlockingQueue to TransferQueue
Changing source jar naming from src to sources
Changing source jar naming from src to sources
fixed resart of actor with thread based dispatcher
fixed resart of actor with thread based dispatcher
Added more comments and made code more readable for the BoundedTransferQueue
Added more comments and made code more readable for the BoundedTransferQueue
RemoteServer now notifies listeners on connect for non-ssl communication
RemoteServer now notifies listeners on connect for non-ssl communication
Constraining input
Constraining input
Refining names
Refining names
Adding BoundedTransferQueue
Adding BoundedTransferQueue
Small refactor
Small refactor
splitted up akka-core into three modules; akka-actors, akka-typed-actors, akka-core
splitted up akka-core into three modules; akka-actors, akka-typed-actors, akka-core
Adding some comments for the future
Adding some comments for the future
Reconnect now possible in RemoteClient
Reconnect now possible in RemoteClient
Optimization of DataFlow + bugfix
Optimization of DataFlow + bugfix
Update sbt plugin
Update sbt plugin
minor reformatting
minor reformatting
Document and remove dead code, restructure tests
Document and remove dead code, restructure tests
Some more dataflow cleanup
Some more dataflow cleanup
Refactor, optimize, remove non-working code
Refactor, optimize, remove non-working code
Updated version to 1.0-SNAPSHOT
Updated version to 1.0-SNAPSHOT
Changed package name of FSM module to 'se.ss.a.a' plus name from 'Fsm' to 'FSM'
Changed package name of FSM module to 'se.ss.a.a' plus name from 'Fsm' to 'FSM'
Release 0.10
Release 0.10
Enhanced the RemoteServer/RemoteClient listener API
Enhanced the RemoteServer/RemoteClient listener API
Enhanced the RemoteServer/RemoteClient listener API
Added missing events to RemoteServer Listener API
Added missing events to RemoteServer Listener API
removed trailing whitespace
removed trailing whitespace
dos2unix
dos2unix
Added mailboxCapacity to Dispatchers API + documented config better
Added mailboxCapacity to Dispatchers API + documented config better
Changed the RemoteClientLifeCycleEvent to carry a reference to the RemoteClient + dito for RemoteClientException
Changed the RemoteClientLifeCycleEvent to carry a reference to the RemoteClient + dito for RemoteClientException
Changed the RemoteClientLifeCycleEvent to carry a reference to the RemoteClient + dito for RemoteClientException
Changed the RemoteClientLifeCycleEvent to carry a reference to the RemoteClient + dito for RemoteClientException
Added support for reconnection-time-window for RemoteClient, configurable through akka-reference.conf
Added support for reconnection-time-window for RemoteClient, configurable through akka-reference.conf
Update to Multiverse 0.6 final
Update to Multiverse 0.6 final
Added option to use a blocking mailbox with custom capacity
Added option to use a blocking mailbox with custom capacity
Test for RequiresNew propagation
Test for RequiresNew propagation
Rename explicitRetries to blockingAllowed
Rename explicitRetries to blockingAllowed
Add transaction propagation level
Add transaction propagation level
One minute is shorter, and cleaned up blocking readers impl
One minute is shorter, and cleaned up blocking readers impl
Exit is bad mkay
Exit is bad mkay
Added lazy initalization of SSL engine to avoid interference
Added lazy initalization of SSL engine to avoid interference
Added tests for DataFlow
Added tests for DataFlow
Added lazy initalization of SSL engine to avoid interference
Added lazy initalization of SSL engine to avoid interference
fixed remote server name
fixed remote server name
blade -> chopstick
blade -> chopstick
moved fsm spec to correct location
moved fsm spec to correct location
Dining hakkers on fsm
Dining hakkers on fsm
Added more flexibility to ListenerManagement
Added more flexibility to ListenerManagement
Changing Listeners backing store to ConcurrentSkipListSet and changing signature of WithListeners(f) to (ActorRef) => Unit
Changing Listeners backing store to ConcurrentSkipListSet and changing signature of WithListeners(f) to (ActorRef) => Unit
Introduced uniquely identifiable, loggable base exception: AkkaException and made use of it throught the project
Introduced uniquely identifiable, loggable base exception: AkkaException and made use of it throught the project
Hard-off-switching SSL Remote Actors due to not production ready for 0.10
Hard-off-switching SSL Remote Actors due to not production ready for 0.10
Adding scheduling thats usable from TypedActor
Adding scheduling thats usable from TypedActor
removed codefellow plugin
removed codefellow plugin
add akka-init-script.sh to allArtifacts in AkkaProject
add akka-init-script.sh to allArtifacts in AkkaProject
Adding lifecycle messages and listenability to RemoteServer
Adding lifecycle messages and listenability to RemoteServer
Adding DiningHakkers as FSM example
Adding DiningHakkers as FSM example
Added a more Java-suitable, and less noisy become method
Added a more Java-suitable, and less noisy become method
Refactoring: TypedActor now extends Actor and is thereby a full citizen in the Akka actor-land
Refactoring: TypedActor now extends Actor and is thereby a full citizen in the Akka actor-land
Issue #388 Typeclass serialization of ActorRef/UntypedActor isn't Java-friendly : Added wrapper APIs for implicits. Also added test cases for serialization of UntypedActor
Issue #388 Typeclass serialization of ActorRef/UntypedActor isn't Java-friendly : Added wrapper APIs for implicits. Also added test cases for serialization of UntypedActor
Return Future from TypedActor message send
Return Future from TypedActor message send
merged with master
merged with master
fixed properties for untyped actors
fixed properties for untyped actors
Changed signature of ActorRegistry.find
Changed signature of ActorRegistry.find
fixed properties for untyped actors
fixed properties for untyped actors
merged with upstream
merged with upstream
Added shutdown of un-supervised Temporary that have crashed
Added shutdown of un-supervised Temporary that have crashed
Added defaults to scan and debug in logback configuration
Added defaults to scan and debug in logback configuration
minor edits
minor edits
Migrated test to new API
Migrated test to new API
Added a lot of docs for the Java API
Added a lot of docs for the Java API
Some Java friendliness for STM
Some Java friendliness for STM
Closes #393 Redesign CamelService singleton to be a CamelServiceManager
Closes #393 Redesign CamelService singleton to be a CamelServiceManager
Cosmetic changes to akka-sample-camel
Cosmetic changes to akka-sample-camel
Closes #392 Support untyped Java actors as endpoint producer
Closes #392 Support untyped Java actors as endpoint producer
Full Camel support for untyped and typed actors (both Java and Scala API). Closes #356, closes 357.
Full Camel support for untyped and typed actors (both Java and Scala API). Closes #356, closes 357.
Added support for pool factors and executor bounds
Added support for pool factors and executor bounds
Holy crap, it actually works!
Holy crap, it actually works!
Initial conversion of UntypedActor
Initial conversion of UntypedActor
Removing legacy dispatcher id
Removing legacy dispatcher id
Cleaned up code and verified tests
Cleaned up code and verified tests
Added utility method and another test
Added utility method and another test
Added tests are fixed some bugs
Added tests are fixed some bugs
fixed untyped actor parsing
fixed untyped actor parsing
closing ticket198: support for thread based dispatcher in spring config
closing ticket198: support for thread based dispatcher in spring config
added thread based dispatcher config for untyped actors
added thread based dispatcher config for untyped actors
Update for Ref changes
Update for Ref changes
Small changes to Ref
Small changes to Ref
Cosmetic
Cosmetic
Use static 'parseFrom' to create protobuf objects instead of creating a defaultInstance all the time.
Use static 'parseFrom' to create protobuf objects instead of creating a defaultInstance all the time.
Adding first support for config dispatchers
Adding first support for config dispatchers
Adding first support for config dispatchers
disable tests again
disable tests again
making it more easy to start string and protobuf base consumers, producers and rpc style
making it more easy to start string and protobuf base consumers, producers and rpc style
closing ticket 377, 376 and 200
closing ticket 377, 376 and 200
added config for WorkStealingDispatcher and HawtDispatcher; Tickets 200 and 377
added config for WorkStealingDispatcher and HawtDispatcher; Tickets 200 and 377
ported unit tests for spring config from java to scala, removed akka-spring-test-java
ported unit tests for spring config from java to scala, removed akka-spring-test-java
Add default DEBUG to test output
Add default DEBUG to test output
Added tests for remotely supervised TypedActor
Added tests for remotely supervised TypedActor
Allow core threads to time out in dispatchers
Allow core threads to time out in dispatchers
Moving logback-test.xml to /config
Moving logback-test.xml to /config
Add actorOf with call-by-name for Java TypedActor
Add actorOf with call-by-name for Java TypedActor
shutdown linked actors too when shutting down supervisor
shutdown linked actors too when shutting down supervisor
added shutdownAll to be able to kill the whole actor tree, incl the amqp supervisor
added shutdownAll to be able to kill the whole actor tree, incl the amqp supervisor
Refactored Future API to make it more Java friendly
Refactored Future API to make it more Java friendly
Extra robustness for Logback
Extra robustness for Logback
Minor perf improvement in Ref
Minor perf improvement in Ref
Ported TransactorSpec to UntypedActor
Ported TransactorSpec to UntypedActor
Changing akka-init-script.sh to use logback
Changing akka-init-script.sh to use logback
added async call with partial function callback to rpcclient
added async call with partial function callback to rpcclient
Switch to Logback!
Switch to Logback!
Ported ReceiveTimeoutSpec to UntypedActor
Ported ReceiveTimeoutSpec to UntypedActor
Ported ForwardActorSpec to UntypedActor
Ported ForwardActorSpec to UntypedActor
added init script
added init script
manual rejection of delivery (for now by making it fail until new rabbitmq version has basicReject)
manual rejection of delivery (for now by making it fail until new rabbitmq version has basicReject)
removed trailing whitespace
removed trailing whitespace
Converted tabs to spaces
Converted tabs to spaces
Reformatting
Reformatting
Performance optimization?
Performance optimization?
Grouped JDMK modules
Grouped JDMK modules
types seem to help the parameter declaration :S
types seem to help the parameter declaration :S
Reduce memory use per Actor
Reduce memory use per Actor
add durablility and auto-delete with defaults to rpc and with passive = true for client
add durablility and auto-delete with defaults to rpc and with passive = true for client
Did some work on improving the Java API (UntypedActor)
Did some work on improving the Java API (UntypedActor)
Closing ticket #372, added tests
Closing ticket #372, added tests
Cleanup and Atmo+Lift version bump
Cleanup and Atmo+Lift version bump
The unborkening
The unborkening
Updated docs
Updated docs
Removed if*-methods and improved performance for arg-less logging
Removed if*-methods and improved performance for arg-less logging
undo local repo settings (for the 25953467296th time :S )
undo local repo settings (for the 25953467296th time :S )
added optional routingkey and queuename to parameters
added optional routingkey and queuename to parameters
Formatting
Formatting
Closing ticket 370
Closing ticket 370
remove rpcclient trait...
remove rpcclient trait...
disable ampq tests
disable ampq tests
- moved all into package folder structure - added simple protobuf based rpc convenience
- moved all into package folder structure - added simple protobuf based rpc convenience
Closing ticket 337
Closing ticket 337
- forgot the api commit - disable tests again :S
- forgot the api commit - disable tests again :S
- move helper object actors in specs companion object to avoid clashes with the server spec (where the helpers have the same name)
- move helper object actors in specs companion object to avoid clashes with the server spec (where the helpers have the same name)
- made rpc handler reqular function instead of partial function - add queuename as optional parameter for rpc server (for i.e. loadbalancing purposes)
- made rpc handler reqular function instead of partial function - add queuename as optional parameter for rpc server (for i.e. loadbalancing purposes)
Added unit test to test for race-condition in ActorRegistry
Added unit test to test for race-condition in ActorRegistry
Race condition should be patched now
Race condition should be patched now
update run-akka script to use 2.8.0 final
update run-akka script to use 2.8.0 final
Uncommenting SSL support
Uncommenting SSL support
Closing ticket 368
Closing ticket 368
Closing ticket 367
Closing ticket 367
Closing ticket 355
Closing ticket 355
Closing ticket 352
Closing ticket 352
closes #366: CamelService should be a singleton
closes #366: CamelService should be a singleton
Ref extends Multiverse BasicRef (closes #253)
Ref extends Multiverse BasicRef (closes #253)
Test cases for handling actor failures in Camel routes.
Test cases for handling actor failures in Camel routes.
formatting
formatting
Removed TypedActor annotations and the method callbacks in the config
Removed TypedActor annotations and the method callbacks in the config
Changed the Spring schema and the Camel endpoint names to the new typed-actor name
Changed the Spring schema and the Camel endpoint names to the new typed-actor name
Removed imports not used
Removed imports not used
Restructured test folder structure
Restructured test folder structure
removed trailing whitespace
removed trailing whitespace
dos2unix
dos2unix
Added UntypedActor and UntypedActorRef (+ tests) to work with untyped MDB-style actors in Java.
Added UntypedActor and UntypedActorRef (+ tests) to work with untyped MDB-style actors in Java.
removed trailing whitespace
removed trailing whitespace
converted tabs to spaces
converted tabs to spaces
minor reformatting
minor reformatting
upgraded sjson to 0.7
upgraded sjson to 0.7
merged with upstream
merged with upstream
merged with upstream
Initial draft of UntypedActor for Java API
Initial draft of UntypedActor for Java API
match readme to scaladoc in sample
match readme to scaladoc in sample
Implemented swapping TypedActor instance on restart
Implemented swapping TypedActor instance on restart
TypedActor refactoring completed, all test pass except for some in the Spring module (commented them away for now).
TypedActor refactoring completed, all test pass except for some in the Spring module (commented them away for now).
no need for the dummy tests anymore
no need for the dummy tests anymore
Converted all TypedActor tests to interface-impl, code and tests compile
Converted all TypedActor tests to interface-impl, code and tests compile
Added TypedActor and TypedTransactor base classes. Renamed ActiveObject factory object to TypedActor. Improved network protocol for TypedActor. Remote TypedActors now identified by UUID.
Added TypedActor and TypedTransactor base classes. Renamed ActiveObject factory object to TypedActor. Improved network protocol for TypedActor. Remote TypedActors now identified by UUID.
Upload patched camel-jetty-2.4.0.1 that fixes concurrency bug (will be officially released with Camel 2.5.0)
Upload patched camel-jetty-2.4.0.1 that fixes concurrency bug (will be officially released with Camel 2.5.0)
move into the new test dispach directory.
move into the new test dispach directory.
re-arranged tests into folders/packages
re-arranged tests into folders/packages
clean end state
clean end state
cosmetic
cosmetic
- better restart strategy test - make sure actor stops when restart strategy maxes out - nicer patternmathing on lifecycle making sure lifecycle.get is never called anymore (sometimes gave nullpointer exceptions) - also applying the defaults in a nicer way
- better restart strategy test - make sure actor stops when restart strategy maxes out - nicer patternmathing on lifecycle making sure lifecycle.get is never called anymore (sometimes gave nullpointer exceptions) - also applying the defaults in a nicer way
update to the released version of hawtdispatch
update to the released version of hawtdispatch
proof restart strategy
proof restart strategy
Test #307 - Proof schedule continues with retarted actor
Test #307 - Proof schedule continues with retarted actor
Now uses 'Duration' for all time properties in config
Now uses 'Duration' for all time properties in config
WIP
WIP
MongoDB based persistent Maps now use Mongo updates. Also upgraded mongo-java driver to 2.0
MongoDB based persistent Maps now use Mongo updates. Also upgraded mongo-java driver to 2.0
Simplify the hawt dispatcher class name added a hawt dispatch echo server exampe.
Simplify the hawt dispatcher class name added a hawt dispatch echo server exampe.
hawtdispatch dispatcher can now optionally use dispatch sources to agregate cross actor invocations
hawtdispatch dispatcher can now optionally use dispatch sources to agregate cross actor invocations
fixing HawtDispatchEventDrivenDispatcher so that it has at least one non-daemon thread while it's active
fixing HawtDispatchEventDrivenDispatcher so that it has at least one non-daemon thread while it's active
adding a HawtDispatch based message dispatcher
adding a HawtDispatch based message dispatcher
decoupled the mailbox implementation from the actor.  The implementation is now controled by dispatcher associated with the actor.
decoupled the mailbox implementation from the actor.  The implementation is now controled by dispatcher associated with the actor.
HTTP Producer/Consumer concurrency test (ignored by default)
HTTP Producer/Consumer concurrency test (ignored by default)
Added example how to use JMS endpoints in standalone applications.
Added example how to use JMS endpoints in standalone applications.
Closes #333 Allow applications to wait for endpoints being activated
Closes #333 Allow applications to wait for endpoints being activated
closes #342: Added parens to ActorRegistry.shutdownAll.
closes #342: Added parens to ActorRegistry.shutdownAll.
fix for idle client closing issues by redis server #338 and #340
fix for idle client closing issues by redis server #338 and #340
Remove misleading term 'non-blocking' from comments.
Remove misleading term 'non-blocking' from comments.
closes #31: Some fixes to the O-S-G-i settings in SBT project file; also deleted superfluous bnd4sbt.jar in project/build/lib directory.
closes #31: Some fixes to the O-S-G-i settings in SBT project file; also deleted superfluous bnd4sbt.jar in project/build/lib directory.
Minor changes in akka-sample-camel
Minor changes in akka-sample-camel
better matching reply value
better matching reply value
use ref for state- makes sense?
use ref for state- makes sense?
State refactor
State refactor
Adding become to Actor
Adding become to Actor
State refactor
State refactor
closes #277: Transformed all subprojects to use Dependencies object; also reworked Plugins.scala accordingly.
closes #277: Transformed all subprojects to use Dependencies object; also reworked Plugins.scala accordingly.
re #277: Created objects for repositories and dependencies and started transformig akka-core.
re #277: Created objects for repositories and dependencies and started transformig akka-core.
Remove listener from listener list before stopping the listener (avoids warning that stopped listener cannot be notified)
Remove listener from listener list before stopping the listener (avoids warning that stopped listener cannot be notified)
move StateTimeout into Fsm
move StateTimeout into Fsm
foreach -> flatMap
foreach -> flatMap
refactor fsm
refactor fsm
initial idea for FSM
initial idea for FSM
Completely redesigned Producer trait.
Completely redesigned Producer trait.
Added missing API documentation.
Added missing API documentation.
Non-blocking routing and transformation example with asynchronous HTTP request/reply
Non-blocking routing and transformation example with asynchronous HTTP request/reply
closes #320 (non-blocking routing engine), closes #335 (producer to forward results)
closes #320 (non-blocking routing engine), closes #335 (producer to forward results)
Do not download sources
Do not download sources
Remove Camel staging repo as Camel 2.4.0 can already be downloaded repo1.
Remove Camel staging repo as Camel 2.4.0 can already be downloaded repo1.
And multiverse module config
And multiverse module config
Multiverse 0.6-SNAPSHOT again
Multiverse 0.6-SNAPSHOT again
Updated ants sample
Updated ants sample
Adding support for maxInactiveActivity
Adding support for maxInactiveActivity
Adding support for maxInactiveActivity
Initial code, ble to turn ssl on/off, not verified
Initial code, ble to turn ssl on/off, not verified
Upgraded to new fresh Multiverse with CountDownCommitBarrier bugfix
Upgraded to new fresh Multiverse with CountDownCommitBarrier bugfix
Close #336
Close #336
disable tests
disable tests
- rpc typing and serialization - again
- rpc typing and serialization - again
Upgraded Akka to Scala 2.8.0 final, finally...
Upgraded Akka to Scala 2.8.0 final, finally...
Added Scala 2.8 final versions of SBinary and Configgy
Added Scala 2.8 final versions of SBinary and Configgy
Added support for MaximumNumberOfRestartsWithinTimeRangeReachedException(this, maxNrOfRetries, withinTimeRange, reason)
Added support for MaximumNumberOfRestartsWithinTimeRangeReachedException(this, maxNrOfRetries, withinTimeRange, reason)
Further tests
Further tests
redisclient & sjson jar - 2.8.0 version
redisclient & sjson jar - 2.8.0 version
Camel's non-blocking routing engine now fully supported
Camel's non-blocking routing engine now fully supported
Laying the foundation for current-message-resend
Laying the foundation for current-message-resend
Moved logging of actor crash exception that was by-passed/hidden by STM exception
Moved logging of actor crash exception that was by-passed/hidden by STM exception
Changed Akka config file syntax to JSON-style instead of XML style Plus added missing test classes for ActiveObjectContextSpec
Changed Akka config file syntax to JSON-style instead of XML style Plus added missing test classes for ActiveObjectContextSpec
Added ActorRef.receiveTimout to remote protocol and LocalActorRef serialization
Added ActorRef.receiveTimout to remote protocol and LocalActorRef serialization
rpc typing and serialization
rpc typing and serialization
Removed 'reply' and 'reply_?' from Actor - now only usef 'self.reply' etc
Removed 'reply' and 'reply_?' from Actor - now only usef 'self.reply' etc
Removed Java Active Object tests, not needed now that we have them ported to Scala in the akka-core module
Removed Java Active Object tests, not needed now that we have them ported to Scala in the akka-core module
Added tests for ActiveObjectContext
Added tests for ActiveObjectContext
- make consumer restart when delegated handling actor fails - made single object to flag test enable/disable
- make consumer restart when delegated handling actor fails - made single object to flag test enable/disable
Test #328
Test #328
small refactor - use patternmatching better
small refactor - use patternmatching better
Further tests for non-blocking in-out message exchange with consumer actors.
Further tests for non-blocking in-out message exchange with consumer actors.
re #320 Non-blocking in-out message exchanges with actors
re #320 Non-blocking in-out message exchanges with actors
Closing ticket 294
Closing ticket 294
Switching ActorRegistry storage solution
Switching ActorRegistry storage solution
added new jar for sjson for 2.8.RC7
added new jar for sjson for 2.8.RC7
bug fix in redisclient, version upgraded to 1.4
bug fix in redisclient, version upgraded to 1.4
removed logging in cassandra
removed logging in cassandra
Adding Ensime project file
Adding Ensime project file
cosmetic and disable the tests
cosmetic and disable the tests
pimped the rpc a bit more, using serializers
pimped the rpc a bit more, using serializers
added rpc server and unit test
added rpc server and unit test
- split up channel parameters into channel and exchange parameters - initial setup for rpc client
- split up channel parameters into channel and exchange parameters - initial setup for rpc client
removed @PreDestroy functionality
removed @PreDestroy functionality
Dropped akka.xsd, updated all spring XML configurations to use akka-0.10.xsd
Dropped akka.xsd, updated all spring XML configurations to use akka-0.10.xsd
Added support for springs @PostConstruct and @PreDestroy
Added support for springs @PostConstruct and @PreDestroy
Closes #318: Race condition between ActorRef.cancelReceiveTimeout and ActorRegistry.shutdownAll
Closes #318: Race condition between ActorRef.cancelReceiveTimeout and ActorRegistry.shutdownAll
...
...
Tests pass with Dummy SSL config!
Tests pass with Dummy SSL config!
Added some Dummy SSL config to assist in proof-of-concept
Added some Dummy SSL config to assist in proof-of-concept
Adding SSL code to RemoteServer
Adding SSL code to RemoteServer
Initial code for SSL remote actors
Initial code for SSL remote actors
Minor change, overriding destroyInstance instead of destroy
Minor change, overriding destroyInstance instead of destroy
#301 DI does not work in akka-spring when specifying an interface
#301 DI does not work in akka-spring when specifying an interface
cosmetic logging change
cosmetic logging change
closes #314 akka-spring to support active object lifecycle management closes #315 akka-spring to support configuration of shutdown callback method
closes #314 akka-spring to support active object lifecycle management closes #315 akka-spring to support configuration of shutdown callback method
set emtpy parens back
set emtpy parens back
- moved receive timeout logic to ActorRef - receivetimeout now only inititiated when receiveTimeout property is set
- moved receive timeout logic to ActorRef - receivetimeout now only inititiated when receiveTimeout property is set
Tests for stopping active object endpoints; minor refactoring in ConsumerPublisher
Tests for stopping active object endpoints; minor refactoring in ConsumerPublisher
Added test subject description
Added test subject description
Added comments.
Added comments.
Tests for ActiveObject lifecycle
Tests for ActiveObject lifecycle
Resolved conflicts and compile errors after merging in master
Resolved conflicts and compile errors after merging in master
Resolved conflicts and compile errors after merging in master
Track stopping of Dispatcher actor
Track stopping of Dispatcher actor
Do not log to error when interception NotFoundException from Cassandra
Do not log to error when interception NotFoundException from Cassandra
re #290: Added parens to no-parameter methods returning Unit in all subprojects.
re #290: Added parens to no-parameter methods returning Unit in all subprojects.
re #290: Added parens to no-parameter methods returning Unit in all subprojects.
re #290: Added parens to no-parameter methods returning Unit in rest of akka-core.
re #290: Added parens to no-parameter methods returning Unit in rest of akka-core.
re #290: Added parens to no-parameter methods returning Unit in ActorRef.
re #290: Added parens to no-parameter methods returning Unit in ActorRef.
Added codefellow to the plugins embeddded repo and upgraded to 0.3
Added codefellow to the plugins embeddded repo and upgraded to 0.3
Addde codefellow plugin jars to embedded repo
Addde codefellow plugin jars to embedded repo
 - added dummy tests to make sure the test classes don't fail because of disabled tests, these tests need a local rabbitmq server running
 - added dummy tests to make sure the test classes don't fail because of disabled tests, these tests need a local rabbitmq server running
- moved deliveryHandler linking for consumer to the AMQP factory function - added the copyright comments
- moved deliveryHandler linking for consumer to the AMQP factory function - added the copyright comments
No need for disconnect after a shutdown error
No need for disconnect after a shutdown error
minor edits
minor edits
removed akka.conf
removed akka.conf
Redesigned AMQP
Redesigned AMQP
Changed Akka to use IllegalActorStateException instead of IllegalStateException
Changed Akka to use IllegalActorStateException instead of IllegalStateException
Changed Akka to use IllegalActorStateException instead of IllegalStateException
RabbitMQ to 1.8.0
RabbitMQ to 1.8.0
fixed bug in timeout handling that caused tests to fail
fixed bug in timeout handling that caused tests to fail
commented out failing tests
commented out failing tests
type class based actor serialization implemented
type class based actor serialization implemented
Added CodeFellow to gitignore
Added CodeFellow to gitignore
re #297: Initial suport for shutting down routes to consumer active objects (both supervised and non-supervised).
re #297: Initial suport for shutting down routes to consumer active objects (both supervised and non-supervised).
Additional remote consumer test
Additional remote consumer test
re #296: Initial support for active object lifecycle management
re #296: Initial support for active object lifecycle management
Removed unused catch for IllegalStateException
Removed unused catch for IllegalStateException
Added ReceiveTimeout behaviour
Added ReceiveTimeout behaviour
CodeFellow integration
CodeFellow integration
#292 - Added scheduleOne and re-created unit tests
#292 - Added scheduleOne and re-created unit tests
Removed trailing whitespace
Removed trailing whitespace
Removed trailing whitespace
Converted TAB to SPACE
Converted TAB to SPACE
Converted TAB to SPACE
Added Java tests as Scala tests
Added Java tests as Scala tests
Added AspectWerkz 2.2 to embedded-repo
Added AspectWerkz 2.2 to embedded-repo
Upgraded to AspectWerkz 2.2 + merged in patch for using Actor.isDefinedAt for akka-patterns stuff
Upgraded to AspectWerkz 2.2 + merged in patch for using Actor.isDefinedAt for akka-patterns stuff
Removed pom.xml, not needed anymore
Removed pom.xml, not needed anymore
FP approach always makes one happy
FP approach always makes one happy
FP approach always makes one happy
Minor tidying
Minor tidying
Minor tidying
Updated to Netty 3.2.1.Final
Updated to Netty 3.2.1.Final
Upgraded to Atmosphere 0.6 final
Upgraded to Atmosphere 0.6 final
Atmosphere bugfix
Atmosphere bugfix
Atmosphere bugfix
Tests for #289
Tests for #289
Increased timeout in Transactor in STMSpec
Increased timeout in Transactor in STMSpec
Added serialization of actor mailbox
Added serialization of actor mailbox
Documentation added.
Documentation added.
Minor edits
Minor edits
closes #289: Support for <akka:camel-service> Spring configuration element
closes #289: Support for <akka:camel-service> Spring configuration element
Comment changed
Comment changed
fixed mem-leak in Active Object + reorganized SerializableActor traits
fixed mem-leak in Active Object + reorganized SerializableActor traits
Added test for verifying pre/post restart invocations
Added test for verifying pre/post restart invocations
Updated sbt plugin
Updated sbt plugin
Added akka.conf values as defaults and removed lift dependency
Added akka.conf values as defaults and removed lift dependency
Added akka.conf values as defaults and removed lift dependency
Added test for serializing stateless actor + made mailbox accessible
Added test for serializing stateless actor + made mailbox accessible
Protobuf deep actor serialization working and test passing
Protobuf deep actor serialization working and test passing
Removed comments from test
Removed comments from test
commented out failing spring test
commented out failing spring test
Added missing files
Added missing files
OSGi work: Switched to bnd4sbt 1.0.0.RC3, using projectVersion for exported packages now and fixed a merge bug.
OSGi work: Switched to bnd4sbt 1.0.0.RC3, using projectVersion for exported packages now and fixed a merge bug.
Stateless and Stateful Actor serialization + Turned on class caching in Active Object
Stateless and Stateful Actor serialization + Turned on class caching in Active Object
closes #281: Made all subprojects test after breaking changes introduced by removing the type parameter from ActorRef.!!.
closes #281: Made all subprojects test after breaking changes introduced by removing the type parameter from ActorRef.!!.
closes #281: Made all subprojects test after breaking changes introduced by removing the type parameter from ActorRef.!!.
When interfaces are used, target instances are now created correctly
When interfaces are used, target instances are now created correctly
Added support for scope and depdenency injection on target bean
Added support for scope and depdenency injection on target bean
re #281: Made all subprojects compile  after breaking changes introduced by removing the type parameter from ActorRef.!!; test-compile still missing!
re #281: Made all subprojects compile  after breaking changes introduced by removing the type parameter from ActorRef.!!; test-compile still missing!
re #281: Made all subprojects compile  after breaking changes introduced by removing the type parameter from ActorRef.!!; test-compile still missing!
re #281: Made akka-core compile and test after breaking changes introduced by removing the type parameter from ActorRef.!!.
re #281: Made akka-core compile and test after breaking changes introduced by removing the type parameter from ActorRef.!!.
re #281: Added as[T] and asSilently[T] to Option[Any] via implicit conversions in object Actor.
re #281: Added as[T] and asSilently[T] to Option[Any] via implicit conversions in object Actor.
Added more examples to akka-sample-camel
Added more examples to akka-sample-camel
Changed return type of CamelService.load to CamelService
Changed return type of CamelService.load to CamelService
Some stm documentation changes
Some stm documentation changes
Improved transaction factory defaults
Improved transaction factory defaults
Removed isTransactionalityEnabled
Removed isTransactionalityEnabled
Updated ants sample
Updated ants sample
Removing unused stm classes
Removing unused stm classes
Moved data flow to its own package
Moved data flow to its own package
Using actor id for transaction family name
Using actor id for transaction family name
Updated imports to use stm package objects
Updated imports to use stm package objects
Added some documentation for stm
Added some documentation for stm
Added transactional package object - includes Multiverse data structures
Added transactional package object - includes Multiverse data structures
Added stm local and global package objects
Added stm local and global package objects
Removed some trailing whitespace
Removed some trailing whitespace
Updated actor ref to use transaction factory
Updated actor ref to use transaction factory
Configurable TransactionFactory
Configurable TransactionFactory
Added Transaction.Util with methods for transaction lifecycle and blocking
Added Transaction.Util with methods for transaction lifecycle and blocking
Removed unused stm config options from akka conf
Removed unused stm config options from akka conf
Removed some unused stm config options
Removed some unused stm config options
Added Duration utility class for working with j.u.c.TimeUnit
Added Duration utility class for working with j.u.c.TimeUnit
Updated stm tests
Updated stm tests
Using Scala library HashMap and Vector
Using Scala library HashMap and Vector
Removed TransactionalState and TransactionalRef
Removed TransactionalState and TransactionalRef
Removed for-comprehensions for transactions
Removed for-comprehensions for transactions
Removed AtomicTemplate - new Java API will use Multiverse more directly
Removed AtomicTemplate - new Java API will use Multiverse more directly
Removed atomic0 - no longer used
Removed atomic0 - no longer used
Updated to Multiverse 0.6-SNAPSHOT
Updated to Multiverse 0.6-SNAPSHOT
Enforce commons-codec version 1.4 for akka-core
Enforce commons-codec version 1.4 for akka-core
Producer trait with default implementation of Actor.receive
Producer trait with default implementation of Actor.receive
re #281: Removed type parameter from ActorRef.!! which now returns Option[Any] and added Helpers.narrow and Helpers.narrowSilently.
re #281: Removed type parameter from ActorRef.!! which now returns Option[Any] and added Helpers.narrow and Helpers.narrowSilently.
Added akka-sbt-plugin source
Added akka-sbt-plugin source
synced with jboner/master; decoupled AkkaWrapperProject; bumped bnd4sbt to 1.0.0.RC2
synced with jboner/master; decoupled AkkaWrapperProject; bumped bnd4sbt to 1.0.0.RC2
Started work on OSGi sample
Started work on OSGi sample
All bundles resolve!
All bundles resolve!
Added SerializableActor trait and friends
Upgraded commons-codec to 1.4
Upgraded commons-codec to 1.4
Serialization of Actor now complete (using Java serialization of actor instance)
Serialization of Actor now complete (using Java serialization of actor instance)
Added fromProtobufToLocalActorRef serialization, all old test passing
Added fromProtobufToLocalActorRef serialization, all old test passing
Added SerializableActorSpec for testing deep actor serialization
Added SerializableActorSpec for testing deep actor serialization
Deep serialization of Actors now works
Deep serialization of Actors now works
Added SerializableActor trait and friends
Added SerializableActor trait and friends
Upgraded existing code to new remote protocol, all tests pass
Upgraded existing code to new remote protocol, all tests pass
Exclude transitive dependencies Ongoing work on finding the bundle list
Exclude transitive dependencies Ongoing work on finding the bundle list
Updated bnd4sbt plugin
Updated bnd4sbt plugin
Basic OSGi stuff working. Need to exclude transitive dependencies from the bundle list.
Basic OSGi stuff working. Need to exclude transitive dependencies from the bundle list.
Made AMQP UnregisterMessageConsumerListener public
Made AMQP UnregisterMessageConsumerListener public
fixed problem with cassandra map storage in rest example
fixed problem with cassandra map storage in rest example
Marked Multiverse dependency as intransitive
Marked Multiverse dependency as intransitive
Redis persistence now handles serialized classes.Removed apis for increment / decrement atomically from Ref. Issue #267 fixed
Redis persistence now handles serialized classes.Removed apis for increment / decrement atomically from Ref. Issue #267 fixed
remote consumer tests
remote consumer tests
restructured akka-sample-camel
restructured akka-sample-camel
tests for accessing active objects from Camel routes (ticket #266)
tests for accessing active objects from Camel routes (ticket #266)
Added a isDefinedAt method on the ActorRef
Added a isDefinedAt method on the ActorRef
Improved RemoteClient listener info
Improved RemoteClient listener info
pulled wrappers into AkkaWrapperProject trait file; sjson, objenesis, dispatch-json, netty ok; multiverse is next
pulled wrappers into AkkaWrapperProject trait file; sjson, objenesis, dispatch-json, netty ok; multiverse is next
added redis test from debasish
added redis test from debasish
Added bench from akka-bench for convenience
Added bench from akka-bench for convenience
Support for using ActiveObjectComponent without Camel service
Support for using ActiveObjectComponent without Camel service
Use more idiomatic way to add the assembly task
Use more idiomatic way to add the assembly task
Bumped version to 0.10-SNAPSHOT
Bumped version to 0.10-SNAPSHOT
Added a method to get a List with all MessageInvocation in the Actor mailbox
Added a method to get a List with all MessageInvocation in the Actor mailbox
Work in progress! Trying to find an alternative to mvn assembly
Work in progress! Trying to find an alternative to mvn assembly
Removed some dependencies since they will be provided by their own bundles
Removed some dependencies since they will be provided by their own bundles
Added dependencies-bundle.
Added dependencies-bundle.
Removed Maven projects and added bnd4sbt
Removed Maven projects and added bnd4sbt
Extended documentation (active object support)
Extended documentation (active object support)
Upgraded build.properties to 0.9.1
Upgraded build.properties to 0.9.1
Upgraded to version 0.9.1
Upgraded to version 0.9.1
Added reply methods to Actor trait + fixed race-condition in Actor.spawn
Added reply methods to Actor trait + fixed race-condition in Actor.spawn
initial implementation of OSGiWrapperProject, applied to jgroups dependency to make it OSGi-friendly
initial implementation of OSGiWrapperProject, applied to jgroups dependency to make it OSGi-friendly
merged with master; changed renaming of artifacts to use override def artifactID
merged with master; changed renaming of artifacts to use override def artifactID
merged with master; changed renaming of artifacts to use override def artifactID
initial changes for OSGification: added bnd4sbt plugin, changed artifact naming to include _osgi
initial changes for OSGification: added bnd4sbt plugin, changed artifact naming to include _osgi
Removed legacy code
Removed legacy code
Added remote active object example
Added remote active object example
Added methods to retreive children from a Supervisor
Added methods to retreive children from a Supervisor
Tidying up more debug statements
Tidying up more debug statements
Tidying up debug statements
Tidying up debug statements
Freezing Atmosphere dep
Freezing Atmosphere dep
Initial tests for active object support
Initial tests for active object support
make all classes/traits module-private that are not part of the public API
make all classes/traits module-private that are not part of the public API
Cleaned main sources from target actor instance access. Minor cleanups.
Cleaned main sources from target actor instance access. Minor cleanups.
Dropped service package and moved contained classes one level up.
Dropped service package and moved contained classes one level up.
Dropped service package and moved contained classes one level up.
Refactored tests to interact with actors only via message passing
Refactored tests to interact with actors only via message passing
ActiveObjectComponent now written in Scala
ActiveObjectComponent now written in Scala
Cleanup and refactored code a bit and added javadoc to explain througput parameter in detail.
Cleanup and refactored code a bit and added javadoc to explain througput parameter in detail.
formatting, comment fixup
formatting, comment fixup
update README docs for chat sample
update README docs for chat sample
Prepare merge with master
Prepare merge with master
Re-adding runnable Active Object Java tests, which all pass
Re-adding runnable Active Object Java tests, which all pass
Upgraded run script
Upgraded run script
Removed trailing whitespace
Removed trailing whitespace
Removed trailing whitespace
Converted tabs to spaces
Converted tabs to spaces
Added activemq-data to .gitignore
Added activemq-data to .gitignore
Removed redundant servlet spec API jar from dist manifest
Removed redundant servlet spec API jar from dist manifest
initial support for publishing ActiveObject methods at Camel endpoints
initial support for publishing ActiveObject methods at Camel endpoints
Added guard for NULL inital values in Agent
Added guard for NULL inital values in Agent
Added assert for if message is NULL
Added assert for if message is NULL
Removed MessageInvoker
Removed MessageInvoker
Removed ActorMessageInvoker
Removed ActorMessageInvoker
Added convenience method to ActorRegistry
Added convenience method to ActorRegistry
Refactored Java REST example to work with the new way of doing REST in Akka
Refactored Java REST example to work with the new way of doing REST in Akka
Cleaned up 'Supervisor' code and ScalaDoc + renamed dispatcher throughput option in config to 'dispatcher.throughput'
Cleaned up 'Supervisor' code and ScalaDoc + renamed dispatcher throughput option in config to 'dispatcher.throughput'
Renamed 'toProtocol' to 'toProtobuf'
Renamed 'toProtocol' to 'toProtobuf'
Upgraded Atmosphere to 0.6-SNAPSHOT
Upgraded Atmosphere to 0.6-SNAPSHOT
Upgraded Atmosphere to 0.6-SNAPSHOT
minor fix in test case
minor fix in test case
Added test for tested Transactors
Added test for tested Transactors
Upgraded ScalaTest to Scala 2.8.0.RC3 compat lib
Upgraded ScalaTest to Scala 2.8.0.RC3 compat lib
Upgrade to Camel 2.3.0
Upgrade to Camel 2.3.0
Prepare for master merge
Prepare for master merge
Ported akka-sample-secure
Ported akka-sample-secure
closes #247: Added all missing module configurations.
closes #247: Added all missing module configurations.
Upgraded to Protobuf 2.3.0
Upgraded to Protobuf 2.3.0
Upgraded Configgy to one build for Scala 2.8 RC3
Upgraded Configgy to one build for Scala 2.8 RC3
Ported samples rest scala to the new akka-http
Ported samples rest scala to the new akka-http
Looks promising!
Looks promising!
Looks promising!
ClassLoader issue
ClassLoader issue
no need to start supervised actors
no need to start supervised actors
checked in wrong jar: now pushing the correct one for sjson
checked in wrong jar: now pushing the correct one for sjson
re #247: Added module configuration for akka-persistence-cassandra. Attention: Necessary to delete .ivy2 directory!
re #247: Added module configuration for akka-persistence-cassandra. Attention: Necessary to delete .ivy2 directory!
re #247: Removed all vals for repositories except for embeddedRepo. Introduced module configurations necessary for akka-core; other modules still missing.
re #247: Removed all vals for repositories except for embeddedRepo. Introduced module configurations necessary for akka-core; other modules still missing.
project file updated for redisclient for 2.8.0.RC3
project file updated for redisclient for 2.8.0.RC3
redisclient upped to 2.8.0.RC3
redisclient upped to 2.8.0.RC3
updated project file for sjson for 2.8.RC3
updated project file for sjson for 2.8.RC3
added 2.8.0.RC3 for sjson jar
added 2.8.0.RC3 for sjson jar
Switched Listeners impl from Agent to CopyOnWriteArraySet
Switched Listeners impl from Agent to CopyOnWriteArraySet
Added Scala 2.8RC3 version of SBinary
Added Scala 2.8RC3 version of SBinary
Upgraded to Scala 2.8.0 RC3
Upgraded to Scala 2.8.0 RC3
minor log message change for consistency
minor log message change for consistency
Added senderFuture to ActiveObjectContext, eg. fixed issue #248
Added senderFuture to ActiveObjectContext, eg. fixed issue #248
Correct fix for no logging on sbt run
Correct fix for no logging on sbt run
Made 'sender' and 'senderFuture' in ActorRef public
Made 'sender' and 'senderFuture' in ActorRef public
fixed publish-local-mvn
fixed publish-local-mvn
Added default dispatch.throughput value to akka-reference.conf
Added default dispatch.throughput value to akka-reference.conf
Configurable throughput for ExecutorBasedEventDrivenDispatcher (#187)
Configurable throughput for ExecutorBasedEventDrivenDispatcher (#187)
Tweaking akka-reference.conf
Tweaking akka-reference.conf
Updated to Multiverse 0.5.2
Updated to Multiverse 0.5.2
Elaborated on classloader handling
Elaborated on classloader handling
Elaborated on classloader handling
Workaround temporary issue by starting supervised actors explicitly.
Workaround temporary issue by starting supervised actors explicitly.
Initial attempt at fixing akka rest
Initial attempt at fixing akka rest
Initial attempt at fixing akka rest
Added option to specify class loader when deserializing RemoteActorRef
Added option to specify class loader when deserializing RemoteActorRef
changed karaf url
changed karaf url
Added option to specify class loader to load serialized classes in the RemoteClient + cleaned up RemoteClient and RemoteServer API in this regard
Added option to specify class loader to load serialized classes in the RemoteClient + cleaned up RemoteClient and RemoteServer API in this regard
implemented updateVectorStorageEntryFor in akka-persistence-mongo (issue #165) and upgraded mongo-java-driver to 1.4
implemented updateVectorStorageEntryFor in akka-persistence-mongo (issue #165) and upgraded mongo-java-driver to 1.4
fixed merge error
fixed merge error
Changed order of peristence operations in Storage::commit, now clear is done first
Changed order of peristence operations in Storage::commit, now clear is done first
Upgraded to Cassandra 0.6.1
Upgraded to Cassandra 0.6.1
fixed merge error
fixed merge error
added new task publish-local-mvn
added new task publish-local-mvn
Upgraded to SBinary for Scala 2.8.0.RC2
Upgraded to SBinary for Scala 2.8.0.RC2
Upgraded to 2.8.0.RC2-1.4-SNAPSHOT version of Redis Client
Upgraded to 2.8.0.RC2-1.4-SNAPSHOT version of Redis Client
Added akka-sample-ants as a sample showcasing STM and Transactors
Added akka-sample-ants as a sample showcasing STM and Transactors
Added failing test for issue #211; triggering CommitBarrierOpenException
Added failing test for issue #211; triggering CommitBarrierOpenException
Updated pom.xml for Java test to 0.9
Updated pom.xml for Java test to 0.9
Updated to JGroups 2.9.0.GA
Updated to JGroups 2.9.0.GA
Added ActiveObjectContext with sender reference
Added ActiveObjectContext with sender reference
disabled tests for akka-persistence-redis to be run automatically
disabled tests for akka-persistence-redis to be run automatically
updated redisclient to 2.8.0.RC2
updated redisclient to 2.8.0.RC2
Removed some LoC
Removed some LoC
Switched to primes and !! + cleanup
Switched to primes and !! + cleanup
Removed trailing whitespace
Removed trailing whitespace
Removed trailing whitespace
Add the possibility to start Akka kernel or use Akka as dependency JAR *without* setting AKKA_HOME or have an akka.conf defined somewhere. Also moved JGroupsClusterActor into akka-core and removed akka-cluster module
Add the possibility to start Akka kernel or use Akka as dependency JAR *without* setting AKKA_HOME or have an akka.conf defined somewhere. Also moved JGroupsClusterActor into akka-core and removed akka-cluster module
Add the possibility to start Akka kernel or use Akka as dependency JAR *without* setting AKKA_HOME or have an akka.conf defined somewhere. Also moved JGroupsClusterActor into akka-core and removed akka-cluster module
Upgraded to Scala RC2 version of ScalaTest, but still some problems
Upgraded to Scala RC2 version of ScalaTest, but still some problems
Added regressiontest for spawn
Added regressiontest for spawn
Port to Scala RC2. All compile, but tests fail on ScalaTest not being RC2 compatible
Port to Scala RC2. All compile, but tests fail on ScalaTest not being RC2 compatible
Re-introducing 'sender' and 'senderFuture' references. Now 'sender' is available both for !! and !!! message sends
Re-introducing 'sender' and 'senderFuture' references. Now 'sender' is available both for !! and !!! message sends
Added explicit nullification of all ActorRef references in Actor to make the Actor instance eligable for GC
Added explicit nullification of all ActorRef references in Actor to make the Actor instance eligable for GC
Removing old, unused, dependencies
Removing old, unused, dependencies
Added Receive type
Added Receive type
Added Receive type
Took the liberty of adding the redisclient pom and changed the name of the jar
Took the liberty of adding the redisclient pom and changed the name of the jar
Improved error handling and message for Config
Improved error handling and message for Config
Added failing test to supervisor specs
Added failing test to supervisor specs
added lock util class
added lock util class
Rewritten "home" address management and protocol, all test pass except 2
Rewritten "home" address management and protocol, all test pass except 2
Rewritten "home" address management and protocol, all test pass except 2
changed version of sjson to 0.5
changed version of sjson to 0.5
changed redisclient version to 1.3
changed redisclient version to 1.3
Refactored code into ActorRef, LocalActorRef and RemoteActorRef
Refactored code into ActorRef, LocalActorRef and RemoteActorRef
Allow applications to disable stream-caching (#202)
Allow applications to disable stream-caching (#202)
Updated to Guice 2.0
Updated to Guice 2.0
Added scaladoc
Added scaladoc
Splitted up Actor and ActorRef in their own files
Splitted up Actor and ActorRef in their own files
AKKA-192 - Upgrade slf4j to 1.6.0
AKKA-192 - Upgrade slf4j to 1.6.0
Upgraded to Netty 3.2.0-RC1
Upgraded to Netty 3.2.0-RC1
Message API improvements
Message API improvements
Changed the order for detecting akka.conf
Changed the order for detecting akka.conf
Actor and ActorRef restructuring complete, still need to refactor tests
Actor and ActorRef restructuring complete, still need to refactor tests
Deactivate endpoints of stopped consumer actors (AKKA-183)
Deactivate endpoints of stopped consumer actors (AKKA-183)
Added isOrRemoteNode field to ActorRef
Added isOrRemoteNode field to ActorRef
Switched newActor for actorOf
Switched newActor for actorOf
Switched newActor for actorOf
newActor(() => refactored
newActor(() => refactored
Refactored Actor
Refactored Actor
Moved everything from Actor to ActorRef: akka-core compiles
Moved everything from Actor to ActorRef: akka-core compiles
Moved everything from Actor to ActorRef: akka-core compiles
Moved everything from Actor to ActorRef: akka-core compiles
Closing ticket 150
Closing ticket 150
Rewrite of remote protocol to use the new ActorRef protocol
Rewrite of remote protocol to use the new ActorRef protocol
Added Kerberos config
Added Kerberos config
Added ScalaDoc for akka-patterns
Added ScalaDoc for akka-patterns
Updated to Multiverse 0.5 release
Updated to Multiverse 0.5 release
Renamed ActorID to ActorRef
Renamed ActorID to ActorRef
Renamed ActorID to ActorRef
converted tabs to spaces
converted tabs to spaces
Add Protobuf serialization and deserialization of ActorID
Add Protobuf serialization and deserialization of ActorID
Cleanup and minor refactorings, improved documentation etc.
Cleanup and minor refactorings, improved documentation etc.
Removed Serializable.Protobuf since it did not work, use direct Protobuf messages for remote messages instead
Removed Serializable.Protobuf since it did not work, use direct Protobuf messages for remote messages instead
Renamed Reactor.scala to MessageHandling.scala
Renamed Reactor.scala to MessageHandling.scala
Changed suffix on source JAR from -src to -sources
Changed suffix on source JAR from -src to -sources
minor edits
minor edits
merged in akka-sample-remote
merged in akka-sample-remote
Added sample module for remote actors
Added sample module for remote actors
ActorID: now all test pass, mission accomplished, ready for master
ActorID: now all test pass, mission accomplished, ready for master
Split up Patterns.scala in different files
Split up Patterns.scala in different files
ActorID: all tests passing except akka-camel
ActorID: all tests passing except akka-camel
All tests compile
All tests compile
All modules are building now
All modules are building now
Added start utility method
Added start utility method
Chat sample now compiles with newActor[TYPE]
Chat sample now compiles with newActor[TYPE]
merged with upstream
merged with upstream
merged with upstream
merged with upstream
merged with upstream
merged with upstream
akka-core now compiles
akka-core now compiles
Updated to Multiverse 0.5
Updated to Multiverse 0.5
Added test for Ref initial value bug
Added test for Ref initial value bug
akka-core now compiles
akka-core now compiles
Mid ActorID refactoring
Mid ActorID refactoring
Moved Grizzly logic to Kernel and renamed it to EmbeddedAppServer
Moved Grizzly logic to Kernel and renamed it to EmbeddedAppServer
Moved Grizzly logic to Kernel and renamed it to EmbeddedAppServer
Moving akka-patterns into akka-core
Moving akka-patterns into akka-core
Consolidated akka-security, akka-rest, akka-comet and akka-servlet into akka-http
Consolidated akka-security, akka-rest, akka-comet and akka-servlet into akka-http
Consolidated akka-security, akka-rest, akka-comet and akka-servlet into akka-http
Removed Shoal and moved jGroups to akka-cluster, packages remain intact
Removed Shoal and moved jGroups to akka-cluster, packages remain intact
mid merge
mid merge
Made ActiveObject non-advisable in AW terms
Made ActiveObject non-advisable in AW terms
Added Future[T] as return type for await and awaitBlocking
Added Future[T] as return type for await and awaitBlocking
Added parameterized Futures
Added parameterized Futures
Added reply_? that discards messages if it cannot find reply target
Added reply_? that discards messages if it cannot find reply target
Added Listeners to akka-patterns
Added Listeners to akka-patterns
Minor cleanup
Minor cleanup
Initial parametrization
Initial parametrization
updated dependencies in pom
updated dependencies in pom
JTA: Added option to register "joinTransaction" function and which classes to NOT roll back on
JTA: Added option to register "joinTransaction" function and which classes to NOT roll back on
Added StmConfigurationException
Added StmConfigurationException
added scaladoc
added scaladoc
Moved ActiveObjectConfiguration to ActiveObject.scala file
Moved ActiveObjectConfiguration to ActiveObject.scala file
Made JTA Synchronization management generic and allowing more than one + refactoring
Made JTA Synchronization management generic and allowing more than one + refactoring
Renamed to JTA.scala
Renamed to JTA.scala
Added STM Synchronization registration to JNDI TransactionSynchronizationRegistry
Added STM Synchronization registration to JNDI TransactionSynchronizationRegistry
Added STM Synchronization registration to JNDI TransactionSynchronizationRegistry
Added STM Synchronization registration to JNDI TransactionSynchronizationRegistry
Cleaned up JTA stuff
Cleaned up JTA stuff
Finalized the JTA support
Finalized the JTA support
fixed #154 added ActiveObjectConfiguration with fluent API
fixed #154 added ActiveObjectConfiguration with fluent API
fix for Vector from Dean (ticket #155)
fix for Vector from Dean (ticket #155)
added Dean's test for Vector bug (blowing up after 32 items)
added Dean's test for Vector bug (blowing up after 32 items)
Removed jndi.properties
Removed jndi.properties
added logging to jta detection
added logging to jta detection
jta-enabled stm
jta-enabled stm
upgraded to 0.9
upgraded to 0.9
added TransactionManagerDetector
added TransactionManagerDetector
added sbt plugin file
added sbt plugin file
Added Cassandra logging dependencies to the compile jars
Added Cassandra logging dependencies to the compile jars
updating TransactionalRef to be properly monadic
updating TransactionalRef to be properly monadic
tests for TransactionalRef in for comprehensions
tests for TransactionalRef in for comprehensions
tests for TransactionalRef
tests for TransactionalRef
converted tabs to spaces
converted tabs to spaces
Updated old scaladoc
Updated old scaladoc
Removed Scala 2.8 deprecation warnings
Removed Scala 2.8 deprecation warnings
added ActorRef
added ActorRef
update instructions for chat running chat sample
update instructions for chat running chat sample
Added AtomicTemplate to allow atomic blocks from Java code
Added AtomicTemplate to allow atomic blocks from Java code
Redis client now implements pubsub. Also included a sample app for RedisPubSub in akka-samples
Redis client now implements pubsub. Also included a sample app for RedisPubSub in akka-samples
fixed bug with ignoring timeout in Java API
fixed bug with ignoring timeout in Java API
implemented link/unlink for active objects
implemented link/unlink for active objects
added compile options
added compile options
fixed bug in config file
fixed bug in config file
Documented replyTo
Documented replyTo
Moved a runtime error to compile time
Moved a runtime error to compile time
Refactored _isEventBased into the MessageDispatcher
Refactored _isEventBased into the MessageDispatcher
Readded more SBinary functionality
Readded more SBinary functionality
cleaned up remote tests + remvod akkaHome from sbt build file
cleaned up remote tests + remvod akkaHome from sbt build file
added test for supervised remote active object
added test for supervised remote active object
fixed bug in Agent.scala, fixed bug in RemoteClient.scala, fixed problem with tests
fixed bug in Agent.scala, fixed bug in RemoteClient.scala, fixed problem with tests
Initial values possible for TransactionalRef, TransactionalMap, and TransactionalVector
Initial values possible for TransactionalRef, TransactionalMap, and TransactionalVector
Added alter method to TransactionalRef
Added alter method to TransactionalRef
fix for HashTrie: apply and + now return HashTrie rather than Map
fix for HashTrie: apply and + now return HashTrie rather than Map
Started working on issue #121 Added actorFor to get the actor for an activeObject
Started working on issue #121 Added actorFor to get the actor for an activeObject
improved scaladoc for Actor.scala
improved scaladoc for Actor.scala
removed Actor.remoteActor factory method since it does not work
removed Actor.remoteActor factory method since it does not work
Added JTA module, monadic and higher-order functional API
Added JTA module, monadic and higher-order functional API
Cleaned up sbt build file + upgraded to sbt 0.7.3
Cleaned up sbt build file + upgraded to sbt 0.7.3
Removed uglies
Removed uglies
Improved ScalaDoc in Actor
Improved ScalaDoc in Actor
added a method to retrieve the supervisor for an actor + a message Unlink to unlink himself
added a method to retrieve the supervisor for an actor + a message Unlink to unlink himself
fixed bug in nested supervisors + added tests + added latch to agent tests
fixed bug in nested supervisors + added tests + added latch to agent tests
fixed @inittransactionalstate, updated pom for spring java tests
fixed @inittransactionalstate, updated pom for spring java tests
Change sender and senderfuture to Either
Change sender and senderfuture to Either
Added API to add listeners to subscribe to Error, Connect and Disconnect events on RemoteClient
Added API to add listeners to subscribe to Error, Connect and Disconnect events on RemoteClient
Added Logging trait back to Actor
Added Logging trait back to Actor
Now doing a 'reply(..)' to remote sender after receiving a remote message through '!' works. Added tests. Also removed the Logging trait from Actor for lower memory footprint.
Now doing a 'reply(..)' to remote sender after receiving a remote message through '!' works. Added tests. Also removed the Logging trait from Actor for lower memory footprint.
Rename file
Rename file
renamed tests from *Test -> *Spec
renamed tests from *Test -> *Spec
Changed module name, packagename and classnames :-)
Changed module name, packagename and classnames :-)
Improved scaladoc for Transaction
Improved scaladoc for Transaction
cleaned up packaging in samples to all be "sample.x"
cleaned up packaging in samples to all be "sample.x"
Refactored STM API into Transaction.Global and Transaction.Local, fixes issues with "atomic" outside actors
Refactored STM API into Transaction.Global and Transaction.Local, fixes issues with "atomic" outside actors
Created jxee module
Created jxee module
fixed broken "sbt dist"
fixed broken "sbt dist"
fix for comments
fix for comments
fixed bug with creating anonymous actor, renamed some anonymous actor factory methods
fixed bug with creating anonymous actor, renamed some anonymous actor factory methods
changed println -> log.info
changed println -> log.info
Added load balancer which prefers actors with small mailboxes (discussed on mailing list a while ago).
Added load balancer which prefers actors with small mailboxes (discussed on mailing list a while ago).
new redisclient with support for clustering
new redisclient with support for clustering
simplified tests using CountDownLatch.await with a timeout by asserting the count reached zero in a single statement.
simplified tests using CountDownLatch.await with a timeout by asserting the count reached zero in a single statement.
cleaned up
cleaned up
Minor cleanups and fixing super.unregister
Minor cleanups and fixing super.unregister
Improved unit test performance by replacing Thread.sleep with more clever approaches (CountDownLatch, BlockingQueue and others). Here and there Thread.sleep could also simply be removed.
Improved unit test performance by replacing Thread.sleep with more clever approaches (CountDownLatch, BlockingQueue and others). Here and there Thread.sleep could also simply be removed.
refactored build file
refactored build file
release v0.8
release v0.8
merged with upstream
merged with upstream
updated copyright header
updated copyright header
updated Agent scaladoc with monadic examples
updated Agent scaladoc with monadic examples
Agent is now monadic, added more tests to AgentTest
Agent is now monadic, added more tests to AgentTest
added jsr166x library from doug lea
added jsr166x library from doug lea
Added jsr166x to the embedded repo. Use jsr166x.ConcurrentLinkedDeque in stead of LinkedBlockingDeque as colletion for the actors mailbox
Added jsr166x to the embedded repo. Use jsr166x.ConcurrentLinkedDeque in stead of LinkedBlockingDeque as colletion for the actors mailbox
Gave the sbt deploy plugin richer API
Gave the sbt deploy plugin richer API
added missing scala-library.jar to dist and manifest.mf classpath
added missing scala-library.jar to dist and manifest.mf classpath
reverted back to sbt 0.7.1
reverted back to sbt 0.7.1
Removed Actor.send function
Removed Actor.send function
merged with upstream
merged with upstream
merged with upstream
merged with upstream
Forward-ported bugfix in Security to 2.8-WIP
Forward-ported bugfix in Security to 2.8-WIP
upgraded redisclient to version 1.2: includes api name changes for conformance with redis server (earlier ones deprecated). Also an implementation of Deque that can be used for Durable Q in actors
upgraded redisclient to version 1.2: includes api name changes for conformance with redis server (earlier ones deprecated). Also an implementation of Deque that can be used for Durable Q in actors
Added missing dependency
Added missing dependency
renamed some variables for clarity
renamed some variables for clarity
upgraded redisclient to version 1.2: includes api name changes for conformance with redis server (earlier ones deprecated). Also an implementation of Deque that can be used for Durable Q in actors
upgraded redisclient to version 1.2: includes api name changes for conformance with redis server (earlier ones deprecated). Also an implementation of Deque that can be used for Durable Q in actors
merged with upstream
merged with upstream
Updated version to 0.8x
Updated version to 0.8x
Rewrote distribution generation, now it also packages sources and docs
Rewrote distribution generation, now it also packages sources and docs
added spring dispatcher configuration
added spring dispatcher configuration
fixed name of dispatcher in log messages
fixed name of dispatcher in log messages
use forward in stead of send when stealing work from another actor
use forward in stead of send when stealing work from another actor
fixed round robin work stealing algorithm
fixed round robin work stealing algorithm
Added missing + sign
Added missing + sign
minor edit
minor edit
javadoc and comments
javadoc and comments
fix
fix
minor refactoring of the round robin work stealing algorithm
minor refactoring of the round robin work stealing algorithm
Simplified the round robin scheme
Simplified the round robin scheme
improved scaladoc
improved scaladoc
removed usused code
removed usused code
updated to commons-pool 1.5.4
updated to commons-pool 1.5.4
fixed all deprecations execept in grizzly code
fixed all deprecations execept in grizzly code
fixed deprecation warnings in akka-core
fixed deprecation warnings in akka-core
fixed warning, usage of 2.8 features: default arguments and generated copy method.
fixed warning, usage of 2.8 features: default arguments and generated copy method.
And we`re back!
And we`re back!
Bumped version
Bumped version
Removing Redis waiting for 1.2-SNAPSHOT for 2.8-Beta1
Removing Redis waiting for 1.2-SNAPSHOT for 2.8-Beta1
Resolved conflicts
Resolved conflicts
compiles, tests and dists without Redis + samples
compiles, tests and dists without Redis + samples
force projects to use higher versions of redundant libs instead of only excluding them later. This ensures that unit tests use the same libraries that are included into the distribution.
force projects to use higher versions of redundant libs instead of only excluding them later. This ensures that unit tests use the same libraries that are included into the distribution.
fixed bug in REST module
fixed bug in REST module
upgrading to multiverse 0.4
upgrading to multiverse 0.4
Exclusion of redundant dependencies from distribution.
Exclusion of redundant dependencies from distribution.
Upgrade of akka-sample-camel to spring-jms 3.0
Upgrade of akka-sample-camel to spring-jms 3.0
upgraded to 0.7
upgraded to 0.7
converted tabs to spaces
converted tabs to spaces
Documented ActorRegistry and stablelized subscription API
Documented ActorRegistry and stablelized subscription API
Cleaned up build file
Cleaned up build file
merged in the spring branch
merged in the spring branch
added line count script
added line count script
Improved Agent doc
Improved Agent doc
Added tests to AgentTest and cleaned up Agent
Added tests to AgentTest and cleaned up Agent
Extension/rewriting of remaining unit and functional tests
Extension/rewriting of remaining unit and functional tests
traits for configuring producer behaviour
traits for configuring producer behaviour
Extension/rewrite of CamelService unit and functional tests
Extension/rewrite of CamelService unit and functional tests
Don't allow two different actors (different types) to share the same work stealing dispatcher. Added unit test.
Don't allow two different actors (different types) to share the same work stealing dispatcher. Added unit test.
camel-cometd example disabled
camel-cometd example disabled
extension/rewrite of actor component unit and functional tests
extension/rewrite of actor component unit and functional tests
Changed Supervisors actor map to hold a list of actors per class entry
Changed Supervisors actor map to hold a list of actors per class entry
added new jar 1.2-SNAPSHOT for redisclient
added new jar 1.2-SNAPSHOT for redisclient
added support for Redis based SortedSet persistence in Akka transactors
added support for Redis based SortedSet persistence in Akka transactors
tabs -> spaces
tabs -> spaces
only allow actors of the same type to be registered with a work stealing dispatcher.
only allow actors of the same type to be registered with a work stealing dispatcher.
Refactored Serializer
Refactored Serializer
reformatted patterns code
reformatted patterns code
Created an alias to TransactionalRef; Ref
Created an alias to TransactionalRef; Ref
Updated how to run the sample docs.
Updated how to run the sample docs.
Updated README with new running procedure
Updated README with new running procedure
when searching for a thief, only consider thiefs with empty mailboxes.
when searching for a thief, only consider thiefs with empty mailboxes.
Changed Chat sample to use server-managed remote actors + changed the how-to-run-sample doc.
Changed Chat sample to use server-managed remote actors + changed the how-to-run-sample doc.
Made "sbt publish" publish artifacts to local Maven repo
Made "sbt publish" publish artifacts to local Maven repo
moved akka.annotation._ to akka.actor.annotation._ to be merged in with akka-core OSGi bundle
moved akka.annotation._ to akka.actor.annotation._ to be merged in with akka-core OSGi bundle
added integration tests
added integration tests
added integration tests, spring 3.0.1 and sbt
added integration tests, spring 3.0.1 and sbt
Added the run_akka.sh script
Added the run_akka.sh script
Removed dead code
Removed dead code
Minor syntax edits
Minor syntax edits
akka-camel added to manifest classpath. All examples enabled.
akka-camel added to manifest classpath. All examples enabled.
Move to sbt
Move to sbt
initial resolution of conflicts after merge with master
initial resolution of conflicts after merge with master
prepare merge with master
prepare merge with master
merged master into spring
merged master into spring
OS-specific substring search in paths (fixes 'sbt dist' issue on Windows)
OS-specific substring search in paths (fixes 'sbt dist' issue on Windows)
removed old source files
removed old source files
pulled and merged
pulled and merged
initial version of spring custom namespace
initial version of spring custom namespace
don't just steal one message, but continue as long as there are more messages available.
don't just steal one message, but continue as long as there are more messages available.
merged
merged
dispatcher speed improvements
dispatcher speed improvements
publish/subscribe examples using jms and cometd
publish/subscribe examples using jms and cometd
cleanup, added documentation.
cleanup, added documentation.
Revert to Atmosphere 0.5.4 because of issue in 0.6-SNAPSHOT
Revert to Atmosphere 0.5.4 because of issue in 0.6-SNAPSHOT
Return 408 is authentication times out
Return 408 is authentication times out
switched from "work stealing" implementation to "work donating". Needs more testing, cleanup and documentation but looks promissing.
switched from "work stealing" implementation to "work donating". Needs more testing, cleanup and documentation but looks promissing.
rewriting deployer in scala ... work in progress!
rewriting deployer in scala ... work in progress!
support for remote actors, consumer actor publishing at any time
support for remote actors, consumer actor publishing at any time
merged with upstream
merged with upstream
removed changes.xml (online instead)
removed changes.xml (online instead)
merged osgi-refactoring and sbt branch
merged osgi-refactoring and sbt branch
Renamed packages in the whole project to be OSGi-friendly, A LOT of breaking changes
Renamed packages in the whole project to be OSGi-friendly, A LOT of breaking changes
Added maven artifact publishing to sbt build
Added maven artifact publishing to sbt build
fixed layout
fixed layout
added todo
added todo
use Actor.forward(...) when redistributing work.
use Actor.forward(...) when redistributing work.
fixed warnins in PerformanceTest
fixed warnins in PerformanceTest
Finalized SBT packaging task, now Akka is fully ported to SBT
Finalized SBT packaging task, now Akka is fully ported to SBT
remove redundant method in tests
remove redundant method in tests
Added tests to Spring module, currently failing
Added tests to Spring module, currently failing
Cleaned up Spring interceptor and helpers
Cleaned up Spring interceptor and helpers
updated spring module pom to latest akka module layout.
updated spring module pom to latest akka module layout.
modified pom.xml to include akka-spring
modified pom.xml to include akka-spring
Added contructor to Dispatcher and AspectInit
Added contructor to Dispatcher and AspectInit
Added akka-spring
Added akka-spring
added final tasks (package up distribution and executable JAR) to SBT build
added final tasks (package up distribution and executable JAR) to SBT build
enhanced test such that it uses the same actor type as slow and fast actor
enhanced test such that it uses the same actor type as slow and fast actor
added atomic increment and decrement in RedisStorageBackend
added atomic increment and decrement in RedisStorageBackend
error handling enhancements
error handling enhancements
fix classloader error when starting AKKA as a library in jetty (fixes http://www.assembla.com/spaces/akka/tickets/129 )
fix classloader error when starting AKKA as a library in jetty (fixes http://www.assembla.com/spaces/akka/tickets/129 )
prevent Exception when shutting down cluster
prevent Exception when shutting down cluster
Cleanup of onLoad
Cleanup of onLoad
Making it possile to turn cluster on/off in config
Making it possile to turn cluster on/off in config
Added documentation for all methods of the Cluster trait
Added documentation for all methods of the Cluster trait
Revert change to RemoteServer port
Revert change to RemoteServer port
Should do the trick
Should do the trick
added assembly task and dist task to package distribution
added assembly task and dist task to package distribution
added java fun tests back to sbt project
added java fun tests back to sbt project
Improved work stealing algorithm such that work is stolen only after having processed at least all our own outstanding messages.
Improved work stealing algorithm such that work is stolen only after having processed at least all our own outstanding messages.
Documentation and some cleanup.
Documentation and some cleanup.
fixed bug in using akka as dep jar in app server
fixed bug in using akka as dep jar in app server
merged sbt branch with master
merged sbt branch with master
performance improvement
performance improvement
Added lifecycle methods to CamelService
Added lifecycle methods to CamelService
update docs, and comments
update docs, and comments
CamelService companion object for standalone applications to create their own CamelService instances
CamelService companion object for standalone applications to create their own CamelService instances
Default-enabling JGroups
Default-enabling JGroups
fixed compile errors after merging with master
fixed compile errors after merging with master
do not include *QSpec.java for testing
do not include *QSpec.java for testing
Producer trait for producing messages to Camel endpoints (sync/async, oneway/twoway), Immutable representation of Camel message, consumer/producer examples, refactorings/improvements/cleanups.
Producer trait for producing messages to Camel endpoints (sync/async, oneway/twoway), Immutable representation of Camel message, consumer/producer examples, refactorings/improvements/cleanups.
removed log.trace that gave bad perf
removed log.trace that gave bad perf
merged with master
merged with master
removed some logging and todo comments.
removed some logging and todo comments.
added test filter to filter away all tests that end with Spec
added test filter to filter away all tests that end with Spec
added akka-osgi module to parent pom
added akka-osgi module to parent pom
cleaned up buildfile
cleaned up buildfile
Added OSGi proof of concept Very basic example Starting point to kick of discussions
Added OSGi proof of concept Very basic example Starting point to kick of discussions
remove pom files
remove pom files
fixed differences with upstream master.
fixed differences with upstream master.
added remaining projects
added remaining projects
new master parent
new master parent
second phase
second phase
initial sbt support
initial sbt support
Redis tests now passes with new STM + misc minor changes to Cluster
Redis tests now passes with new STM + misc minor changes to Cluster
only unlock if locked.
only unlock if locked.
Conflicts: 	akka-core/src/main/scala/actor/Actor.scala
Conflicts: 	akka-core/src/main/scala/actor/Actor.scala
remove println's in test
remove println's in test
Release the lock when done dispatching.
Release the lock when done dispatching.
Improved event driven dispatcher by not scheduling a task for dispatching when another is already busy.
Improved event driven dispatcher by not scheduling a task for dispatching when another is already busy.
added todo
added todo
Had to remove the withLock method, otherwize java.lang.AbstractMethodError at runtime. The work stealing now actually works and gives a real improvement. Actors seem to be stealing work multiple times (going back and forth between actors) though... might need to tweak that.
Had to remove the withLock method, otherwize java.lang.AbstractMethodError at runtime. The work stealing now actually works and gives a real improvement. Actors seem to be stealing work multiple times (going back and forth between actors) though... might need to tweak that.
replaced synchronization in actor with explicit lock. Use tryLock in the dispatcher to give up immediately when the lock is already held.
replaced synchronization in actor with explicit lock. Use tryLock in the dispatcher to give up immediately when the lock is already held.
shutdown (and unbind) Remote Server even if the remoteServerThread is not alive
shutdown (and unbind) Remote Server even if the remoteServerThread is not alive
added documentation about the intended thread safety guarantees of the isDispatching flag.
added documentation about the intended thread safety guarantees of the isDispatching flag.
Forgot these files... seems I have to get use to git a little still ;-)
Forgot these files... seems I have to get use to git a little still ;-)
first version of the work stealing idea. Added a dispatcher which considers all actors dispatched in that dispatcher part of the same pool of actors. Added a test to verify that a fast actor steals work from a slower actor.
first version of the work stealing idea. Added a dispatcher which considers all actors dispatched in that dispatcher part of the same pool of actors. Added a test to verify that a fast actor steals work from a slower actor.
Toying with manifests
Toying with manifests
merged with upstream
merged with upstream
Had to revert back to synchronizing on actor when processing mailbox in dispatcher
Had to revert back to synchronizing on actor when processing mailbox in dispatcher
merged with upstream
merged with upstream
upgraded redisclient jar to 1.1
upgraded redisclient jar to 1.1
upgraded version in pom to 1.1
upgraded version in pom to 1.1
upgraded redisclient to 1.1 - api changes, refactorings
upgraded redisclient to 1.1 - api changes, refactorings
improved perf with 25 % + renamed FutureResult -> Future + Added lightweight future factory method
improved perf with 25 % + renamed FutureResult -> Future + Added lightweight future factory method
use immutable messages for communication with actors
use immutable messages for communication with actors
merge branch 'remotes/origin/master' into camel; resolved conflicts in ActorRegistry.scala and ActorRegistryTest.scala; removed initial, commented-out test class.
merge branch 'remotes/origin/master' into camel; resolved conflicts in ActorRegistry.scala and ActorRegistryTest.scala; removed initial, commented-out test class.
changed actor URI format, cleanup unit tests.
changed actor URI format, cleanup unit tests.
ActorRegistry: now based on ConcurrentHashMap, now have extensive tests, now has actorFor(uuid): Option[Actor]
ActorRegistry: now based on ConcurrentHashMap, now have extensive tests, now has actorFor(uuid): Option[Actor]
fixed bug in aspect registry
fixed bug in aspect registry
fixed bug with init of tx datastructs + changed actor id management
fixed bug with init of tx datastructs + changed actor id management
Upgraded to Multiverse 0.4 and its 2PC CommitBarriers, all tests pass
Upgraded to Multiverse 0.4 and its 2PC CommitBarriers, all tests pass
initial camel integration (early-access, see also http://doc.akkasource.org/Camel)
initial camel integration (early-access, see also http://doc.akkasource.org/Camel)
redis storage support ported to Scala 2.8.Beta1. New jar for redisclient for 2.8.Beta1
redis storage support ported to Scala 2.8.Beta1. New jar for redisclient for 2.8.Beta1
renamed actor api
renamed actor api
Added "def !!!: Future" to Actor + Futures.* with util methods
Added "def !!!: Future" to Actor + Futures.* with util methods
Cleanup
Cleanup
upgraded to multiverse 0.4-SNAPSHOT
upgraded to multiverse 0.4-SNAPSHOT
Akka LIVES!
Akka LIVES!
And now akka-core builds!
And now akka-core builds!
added plain english aliases for methods in CassandraSession
added plain english aliases for methods in CassandraSession
Working nine to five ...
Working nine to five ...
Updated more deps
Updated more deps
Deleted old version of configgy
Deleted old version of configgy
Added new version of configgy
Added new version of configgy
Partial version updates
Partial version updates
added auto shutdown of "spawn"
added auto shutdown of "spawn"
transactional storage access has to be through lazy vals: changed in Redis test cases
transactional storage access has to be through lazy vals: changed in Redis test cases
fixed bug with "spawn"
fixed bug with "spawn"
updated to 0.4 multiverse
updated to 0.4 multiverse
added check that transactional ref is only touched within a transaction
added check that transactional ref is only touched within a transaction


added possibility to register a remote actor by explicit handle id
added possibility to register a remote actor by explicit handle id
upgrade cassandra to 0.5.0
upgrade cassandra to 0.5.0
added sample for new server-initated remote actors
added sample for new server-initated remote actors
remove old and unused 'storage-format' config element for cassandra storage
remove old and unused 'storage-format' config element for cassandra storage
fixed bug in Serializer API, added a sample test case for Serializer, added a new jar for sjson to embedded_repo
fixed bug in Serializer API, added a sample test case for Serializer, added a new jar for sjson to embedded_repo
Added foreach to Cluster
Added foreach to Cluster
Restructure loader to accommodate booting from a container
Restructure loader to accommodate booting from a container
fixed failing tests
fixed failing tests
added some methods to the AspectRegistry
added some methods to the AspectRegistry
Added support for server-initiated remote actors with clients getting a dummy handle to the remote actor
Added support for server-initiated remote actors with clients getting a dummy handle to the remote actor
Deployment class loader now inhertits from system class loader
Deployment class loader now inhertits from system class loader
converted tabs to spaces
converted tabs to spaces
Added clean automatic shutdown of RemoteClient, based on reference counting + fixed bug in shutdown of RemoteClient
Added clean automatic shutdown of RemoteClient, based on reference counting + fixed bug in shutdown of RemoteClient
fixed some readme typo's
fixed some readme typo's
Added akka-patterns module
Added akka-patterns module
Moving to actor-based broadcasting, atmosphere 0.5.2
Moving to actor-based broadcasting, atmosphere 0.5.2
upgrade version in akka.conf and Config.scala to 0.7-SNAPSHOT
upgrade version in akka.conf and Config.scala to 0.7-SNAPSHOT
upgrade akka version in pom to 0.7-SNAPSHOT
upgrade akka version in pom to 0.7-SNAPSHOT
Tweaking impl
Tweaking impl
Updated deps
Updated deps
Upgraded Atmosphere and Jersey to 1.1.5 and 0.5.1 respectively
Upgraded Atmosphere and Jersey to 1.1.5 and 0.5.1 respectively
upgraded sjson to 0.4
upgraded sjson to 0.4
Now requiring Cluster to be started and shut down manually when used outside of the Kernel
Now requiring Cluster to be started and shut down manually when used outside of the Kernel
 Switched to basing it on JerseyBroadcaster for now, plus setting the correct ID
 Switched to basing it on JerseyBroadcaster for now, plus setting the correct ID
Tweaks
Tweaks
Cleaned up cluster instantiation
Cleaned up cluster instantiation
Initial cleanup
Initial cleanup
Updated Akka to use JerseySimpleBroadcaster via AkkaBroadcaster
Updated Akka to use JerseySimpleBroadcaster via AkkaBroadcaster
Added more documentation
Added more documentation
Added more conf-possibilities and documentation
Added more conf-possibilities and documentation
Added the Buildr Buildfile
Added the Buildr Buildfile
Removed WS and de-commented enforcer
Removed WS and de-commented enforcer
Shoal will boot, but have to add jars to cp manually cause of signing of jar vs. shade
Shoal will boot, but have to add jars to cp manually cause of signing of jar vs. shade
Created BasicClusterActor
Created BasicClusterActor
Compiles... :)
Compiles... :)
Added enforcer of AKKA_HOME
Added enforcer of AKKA_HOME
merge with master
merge with master
Tidied sjson deps
Tidied sjson deps
Deactored Sender
Deactored Sender
And the pom...
And the pom...
Stashing away work so far
Stashing away work so far
Updated dep versions
Updated dep versions
Minor code refresh
Minor code refresh
Updated deps
Updated deps
Updated bio
Updated bio
Should use the frozen jars right?
Should use the frozen jars right?
Actor now uses default contact address for makeRemote
Actor now uses default contact address for makeRemote
Cleanup
Cleanup
Queue storage is only implemented in Redis. Base trait throws UnsupportedOperationException
Queue storage is only implemented in Redis. Base trait throws UnsupportedOperationException
Added Shoal and Tribes to cluster pom
Added Shoal and Tribes to cluster pom
Added modules for Shoal and Tribes
Added modules for Shoal and Tribes
Moved the cluster impls to their own modules
Moved the cluster impls to their own modules
Implemented persistent transactional queue with Redis backend
Implemented persistent transactional queue with Redis backend
Added some FIXMEs for 2.8 migration
Added some FIXMEs for 2.8 migration
Added docs
Added docs
renamed shutdown tests to spec
renamed shutdown tests to spec
dos2unix formatting
dos2unix formatting
Added test for Actor shutdown, RemoteServer shutdown and Cluster shutdown
Added test for Actor shutdown, RemoteServer shutdown and Cluster shutdown
Updated pom.xml files to new dedicated Atmosphere and Jersey JARs
Updated pom.xml files to new dedicated Atmosphere and Jersey JARs
Comet fixed! JFA FTW!
Comet fixed! JFA FTW!
jndi.properties, now in jar
jndi.properties, now in jar
Typo broke auth
Typo broke auth
added pretty print to chat sample
added pretty print to chat sample
merged with master
merged with master
changed README
changed README
Restructured persistence modules into its own submodule
Restructured persistence modules into its own submodule
removed unecessary parent pom directive
removed unecessary parent pom directive
moved all samples into its own subproject
moved all samples into its own subproject
Added tests to Spring module, currently failing
Added tests to Spring module, currently failing
Cleaned up Spring interceptor and helpers
Cleaned up Spring interceptor and helpers
updated spring module pom to latest akka module layout.
updated spring module pom to latest akka module layout.
added postRestart to RedisChatStorage
added postRestart to RedisChatStorage
fixed bug in 'actor' methods
fixed bug in 'actor' methods
fixed bug in 'actor' methods
fixed bug in 'actor' methods
refactored chat sample
refactored chat sample
refactored chat server
refactored chat server
Added test for forward of !! messages + Added StaticChannelPipeline for RemoteClient
Added test for forward of !! messages + Added StaticChannelPipeline for RemoteClient
removed tracing
removed tracing
renamed Redis test from *Test to *Spec + removed requirement to link Actor only after start + refactored Chat sample to use mixin composition of Actor
renamed Redis test from *Test to *Spec + removed requirement to link Actor only after start + refactored Chat sample to use mixin composition of Actor
upgraded sjson to 0.3 to handle json serialization of classes loaded through an externally specified classloader
upgraded sjson to 0.3 to handle json serialization of classes loaded through an externally specified classloader
fixed shutdown bug
fixed shutdown bug
added README how to run the chat server sample
added README how to run the chat server sample
Enhanced sample chat application
Enhanced sample chat application
added redis module for persistence in parent pom
added redis module for persistence in parent pom
added new chat server sample
added new chat server sample
Now forward works with !! + added possibility to set a ClassLoader for the Serializer.* classes
Now forward works with !! + added possibility to set a ClassLoader for the Serializer.* classes
removed scaladoc
removed scaladoc
Updated copyright header
Updated copyright header
fixed misc FIXMEs and TODOs
fixed misc FIXMEs and TODOs
changed order of config elements
changed order of config elements
Upgraded to RabbitMQ 1.7.0
Upgraded to RabbitMQ 1.7.0
added implicit transaction family name for the atomic { .. } blocks + changed implicit sender argument to Option[Actor] (transparent change)
added implicit transaction family name for the atomic { .. } blocks + changed implicit sender argument to Option[Actor] (transparent change)
renamed ..comet.AkkaCometServlet to ..comet.AkkaServlet
renamed ..comet.AkkaCometServlet to ..comet.AkkaServlet
Adding docs
Adding docs
added tests for actor.forward
added tests for actor.forward
Added durable and auto-delete to AMQP
Added durable and auto-delete to AMQP
Some renaming and some comments
Some renaming and some comments
Additional tidying
Additional tidying
Cleaned up the code
Cleaned up the code
small typo to catch up with docs
small typo to catch up with docs
changed default port for redis server
changed default port for redis server
added redis backend storage for akka transactors
added redis backend storage for akka transactors
Got it working!
Got it working!
Tweaking
Tweaking
Experimenting with Comet cluster support
Experimenting with Comet cluster support
Forgot to add the Main class
Forgot to add the Main class
Added Kernel class for web kernel
Added Kernel class for web kernel
Added possibility to use Kernel as j2ee context listener
Added possibility to use Kernel as j2ee context listener
Christmas cleaning
Christmas cleaning
pre/postRestart now takes a Throwable as arg
pre/postRestart now takes a Throwable as arg
fixed problem in aop.xml
fixed problem in aop.xml
merged
merged
reverted back to working pom files
reverted back to working pom files
cleaned up pom.xml files
cleaned up pom.xml files
removed dbDispatch from embedded repo
removed dbDispatch from embedded repo
forgot to add Cluster.scala
forgot to add Cluster.scala
moved Cluster into akka-core + updated dbDispatch jars
moved Cluster into akka-core + updated dbDispatch jars
minor reformatting
minor reformatting
Updated conf aswell
Updated conf aswell
Moved Cluster package
Moved Cluster package
Merging
Merging
merged with master
merged with master
merged master
merged master
merged in teigen's persistence structure refactoring
merged in teigen's persistence structure refactoring
renamed akka-actor to akka-core
renamed akka-actor to akka-core
#82 - Split up persistence module into a module per backend storage
#82 - Split up persistence module into a module per backend storage
#82 - Split up persistence module into a module per backend storage
#82 - Split up persistence module into a module per backend storage
fixed broken h2-lzf jar
fixed broken h2-lzf jar
upgraded many dependencies and removed some in embedded-repo that are in public repos now
upgraded many dependencies and removed some in embedded-repo that are in public repos now
re-adding NodeWriter
re-adding NodeWriter
merge with master
merge with master
Removed MessageBodyWriter causing problems + added a Compression class with support for LZF compression and uncomression + added new flag to Actor defining if actor is currently dead
Removed MessageBodyWriter causing problems + added a Compression class with support for LZF compression and uncomression + added new flag to Actor defining if actor is currently dead
renamed 'nio' package to 'remote'
renamed 'nio' package to 'remote'
fixed broken runtime name of threads + added Transactor trait to some samples
fixed broken runtime name of threads + added Transactor trait to some samples
Isn´t needed
Isn´t needed
minor edits
minor edits
Moved {AllForOneStrategy, OneForOneStrategy, FaultHandlingStrategy} from 'actor' to 'config'
Moved {AllForOneStrategy, OneForOneStrategy, FaultHandlingStrategy} from 'actor' to 'config'
cleaned up kernel module pom.xml
cleaned up kernel module pom.xml
updated changes.xml
updated changes.xml
added test timeout
added test timeout
Removed boring API method
Removed boring API method
Added ask-back
Added ask-back
fixed the API, bugs etc
fixed the API, bugs etc
- added remote actor reply changes
- added remote actor reply changes
- Support for implicit sender with remote actors (fixes Issue #71) - The RemoteServer and RemoteClient was modified to support a clean shutdown when testing using multiple remote servers
- Support for implicit sender with remote actors (fixes Issue #71) - The RemoteServer and RemoteClient was modified to support a clean shutdown when testing using multiple remote servers
add a jersey MessageBodyWriter that serializes scala lists to JSON arrays
add a jersey MessageBodyWriter that serializes scala lists to JSON arrays
removed the Init(config) life-cycle message and the config parameters to pre/postRestart instead calling init right after start has been invoked for doing post start initialization
removed the Init(config) life-cycle message and the config parameters to pre/postRestart instead calling init right after start has been invoked for doing post start initialization
minor formatting edits
minor formatting edits
fixed bug in dispatcher
fixed bug in dispatcher
removed wrongly added module
removed wrongly added module
A better solution for comet conflict resolve
A better solution for comet conflict resolve
Upgrading to latest Atmosphere API
Upgrading to latest Atmosphere API
Updated to latest Atmosphere API
Updated to latest Atmosphere API
Minor tweaks
Minor tweaks
Adding more comments
Adding more comments
Excluding self node from member list
Excluding self node from member list
 Added additional logging and did some slight tweaks.
 Added additional logging and did some slight tweaks.
Ack, fixing the conf
Ack, fixing the conf
Sprinkling extra output for debugging
Sprinkling extra output for debugging
removed fork-join scheduler
removed fork-join scheduler
Rewrote new executor based event-driven dispatcher to use actor-specific mailboxes
Rewrote new executor based event-driven dispatcher to use actor-specific mailboxes
Working on one node anyways...
Working on one node anyways...
Hooked the clustering into RemoteServer
Hooked the clustering into RemoteServer
Tweaked logging
Tweaked logging
Moved Cluster to akka-actors
Moved Cluster to akka-actors
Moved cluster into akka-actor
Moved cluster into akka-actor
Tidying some code
Tidying some code
Atleast compiles
Atleast compiles
Rewrote the dispatcher APIs and internals, now event-based dispatchers are 10x faster and much faster than Scala Actors. Added Executor and ForkJoin based dispatchers. Added a bunch of dispatcher tests. Added performance test
Rewrote the dispatcher APIs and internals, now event-based dispatchers are 10x faster and much faster than Scala Actors. Added Executor and ForkJoin based dispatchers. Added a bunch of dispatcher tests. Added performance test
refactored dispatcher invocation API
refactored dispatcher invocation API
added forward method to Actor, which forwards the message and maintains the original sender
added forward method to Actor, which forwards the message and maintains the original sender
Adding the cluster module skeleton
Adding the cluster module skeleton
Upgraded API for Jersey and Atmosphere
Upgraded API for Jersey and Atmosphere
Updated conf docs
Updated conf docs
Create and link new cluster module
Create and link new cluster module
Upgraded MongoDB Java driver to 1.0 and fixed API incompatibilities
Upgraded MongoDB Java driver to 1.0 and fixed API incompatibilities
fixed actor bug related to hashcode
fixed actor bug related to hashcode
fixed bug in storing user defined Init(config) in Actor
fixed bug in storing user defined Init(config) in Actor
changed actor message type from AnyRef to Any
changed actor message type from AnyRef to Any
added memory footprint test + added shutdown method to Kernel + added ActorRegistry.shutdownAll to shut down all actors
added memory footprint test + added shutdown method to Kernel + added ActorRegistry.shutdownAll to shut down all actors
merged after reimpl of persistence API
merged after reimpl of persistence API
refactoring of persistence implementation and its api
refactoring of persistence implementation and its api
fixed bug in anon actor
fixed bug in anon actor
Upgrading to Grizzly 1.9.18-i
Upgrading to Grizzly 1.9.18-i
minor reformatting
minor reformatting
Tweaked Jersey version
Tweaked Jersey version
Added jersey.version and atmosphere.version and fixed jersey broadcaster bug
Added jersey.version and atmosphere.version and fixed jersey broadcaster bug
modified pom.xml to include akka-spring
modified pom.xml to include akka-spring
Added contructor to Dispatcher and AspectInit
Added contructor to Dispatcher and AspectInit
Added akka-spring
Added akka-spring
Added version
Added version
fixed bug in start/spawnLink, now atomic
fixed bug in start/spawnLink, now atomic
removed unused jars in embedded repo, added to changes.xml
removed unused jars in embedded repo, added to changes.xml
fixed type in rabbitmq pom file in embedded repo
fixed type in rabbitmq pom file in embedded repo
added memory footprint test
added memory footprint test
Added trapExceptions to declarative supervisor configuration
Added trapExceptions to declarative supervisor configuration
edit of logging
edit of logging
typos in modified actor
typos in modified actor
added PersistentMap.newMap(id) and PersistinteMap.getMap(id) for Map, Vector and Ref
added PersistentMap.newMap(id) and PersistinteMap.getMap(id) for Map, Vector and Ref
shaped up scaladoc for transaction
shaped up scaladoc for transaction
improved anonymous actor and atomic block syntax
improved anonymous actor and atomic block syntax
Upgraded to latest Mulitverse SNAPSHOT
Upgraded to latest Mulitverse SNAPSHOT
fixed MongoDB tests and fixed bug in transaction handling with PersistentMap
fixed MongoDB tests and fixed bug in transaction handling with PersistentMap
Addded reference count for dispatcher to allow shutdown and GC of event-driven actors using the global event-driven dispatcher
Addded reference count for dispatcher to allow shutdown and GC of event-driven actors using the global event-driven dispatcher
renamed RemoteServerNode -> RemoteNode
renamed RemoteServerNode -> RemoteNode
Atmosphere5.0
Atmosphere5.0
removed unused dependencies
removed unused dependencies
changed remote server API to allow creating multiple servers (RemoteServer) or one (RemoteServerNode), also added a shutdown method
changed remote server API to allow creating multiple servers (RemoteServer) or one (RemoteServerNode), also added a shutdown method
cleaned up and fixed broken error logging
cleaned up and fixed broken error logging
reverted back to original mongodb test, still failing though
reverted back to original mongodb test, still failing though
cleaned up logging and error reporting
cleaned up logging and error reporting
added support for LZF compression
added support for LZF compression
added compression level config options
added compression level config options
Added zlib compression to remote actors
Added zlib compression to remote actors
Cleaned up the Actor and Supervisor classes. Added implicit sender to actor ! methods, works with 'sender' field and 'reply'
Cleaned up the Actor and Supervisor classes. Added implicit sender to actor ! methods, works with 'sender' field and 'reply'
added stop method to actor
added stop method to actor
removed the .idea dirr
removed the .idea dirr
cleaned up supervisor and actor api, breaking changes
cleaned up supervisor and actor api, breaking changes
added eclipse files to .gitignore
added eclipse files to .gitignore
upgraded to Protobuf 2.2 and Netty 3.2-ALPHA
upgraded to Protobuf 2.2 and Netty 3.2-ALPHA
update package of AkkaServlet in the sample's web.xml after the refactoring of AkkaServlet
update package of AkkaServlet in the sample's web.xml after the refactoring of AkkaServlet
Unbr0ked the comet support loading
Unbr0ked the comet support loading
fixed bug in remote server
fixed bug in remote server
changed trapExit from Boolean to "trapExit = List(classOf[..], classOf[..])" + cleaned up security code
changed trapExit from Boolean to "trapExit = List(classOf[..], classOf[..])" + cleaned up security code
added .idea project files
added .idea project files
removed idea project files
removed idea project files
added system property settings for max Multiverse speed
added system property settings for max Multiverse speed
Added support for CometSupport parametrization
Added support for CometSupport parametrization
Updated Atmosphere deps
Updated Atmosphere deps
added changes to changes.xml
added changes to changes.xml
fixed potential memory leak with temporary actors
fixed potential memory leak with temporary actors
removed transient life-cycle and restart-within-time attribute
removed transient life-cycle and restart-within-time attribute
fixed typo in comment
fixed typo in comment
bring lift dependencies into embedded repo
bring lift dependencies into embedded repo
rename our embedded repo lift dependencies
rename our embedded repo lift dependencies
bring lift 1.1-SNAPSHOT into the embedded repo
bring lift 1.1-SNAPSHOT into the embedded repo
added lightweight actor syntax + fixed STM/persistence issue
added lightweight actor syntax + fixed STM/persistence issue
minor change to comments
minor change to comments
added monadic api to the transaction
added monadic api to the transaction
added the ability to kill another actor
added the ability to kill another actor
added support for finding actor by id in the actor registry + made senderFuture available to user code
added support for finding actor by id in the actor registry + made senderFuture available to user code
refactored and cleaned up
refactored and cleaned up
Changed the Cassandra consistency level semantics to fit with new 0.4 nomenclature
Changed the Cassandra consistency level semantics to fit with new 0.4 nomenclature
renamed lifeCycleConfig to lifeCycle + fixed AMQP bug/isses
renamed lifeCycleConfig to lifeCycle + fixed AMQP bug/isses
cleaned up actor field access modifiers and prefixed internal fields with _ to avoid name clashes
cleaned up actor field access modifiers and prefixed internal fields with _ to avoid name clashes
Improved AMQP module code
Improved AMQP module code
removed transparent serialization/deserialization on AMQP module
removed transparent serialization/deserialization on AMQP module
changed AMQP messages access modifiers
changed AMQP messages access modifiers
Made the AMQP message consumer listener aware of if its is using a already defined queue or not
Made the AMQP message consumer listener aware of if its is using a already defined queue or not
upgrading to lift 1.1 snapshot
upgrading to lift 1.1 snapshot
Added possibility of sending reply messages directly by sending them to the AMQP.Consumer
Added possibility of sending reply messages directly by sending them to the AMQP.Consumer
fixing compile errors due to api changes in multiverse
fixing compile errors due to api changes in multiverse
added scaladoc for all modules in the ./doc directory
added scaladoc for all modules in the ./doc directory
upgraded scaladoc module
upgraded scaladoc module
fixed issue with needing AKKA_HOME to run tests
fixed issue with needing AKKA_HOME to run tests
tests can now be run with out explicitly defining AKKA_HOME
tests can now be run with out explicitly defining AKKA_HOME
migrated over to ScalaTest 1.0
migrated over to ScalaTest 1.0
bump lift sample akka version
bump lift sample akka version
test cases for basic authentication actor added
test cases for basic authentication actor added
messed with the config file
messed with the config file
merged with updated security sample
merged with updated security sample
upgraded to multiverse 0.3-SNAPSHOT + enriched the AMQP API
upgraded to multiverse 0.3-SNAPSHOT + enriched the AMQP API
remove old commas
remove old commas
updated FQN of sample basic authentication service
updated FQN of sample basic authentication service
Updated FQN of Security module
Updated FQN of Security module
add missing @DenyAll annotation
add missing @DenyAll annotation
added API for creating and binding new queues to existing AMQP producer/consumer
added API for creating and binding new queues to existing AMQP producer/consumer
added a sample webapp for the security actors including examples for all authentication actors
added a sample webapp for the security actors including examples for all authentication actors
commented out failing lift-samples module
commented out failing lift-samples module
Added reconnection handler and config to RemoteClient
Added reconnection handler and config to RemoteClient
fixed wrong timeout semantics in actor
fixed wrong timeout semantics in actor
AMQP: added API for creating and deleting new queues for a producer and consumer
AMQP: added API for creating and deleting new queues for a producer and consumer
commented out the persistence tests
commented out the persistence tests
fixed SJSON bug in Mongo
fixed SJSON bug in Mongo
fix a bug in the retrieval of resource level role annotation
fix a bug in the retrieval of resource level role annotation
Added Kerberos/SPNEGO Authentication for REST Actors
Added Kerberos/SPNEGO Authentication for REST Actors
merged with master head
merged with master head
upgraded to cassandra 0.4.1
upgraded to cassandra 0.4.1
refactored Dispatchers + made Supervisor private[akka]
refactored Dispatchers + made Supervisor private[akka]
fixed sample problem
fixed sample problem
removed println
removed println
finalized new STM with Multiverse backend + cleaned up Active Object config and factory classes
finalized new STM with Multiverse backend + cleaned up Active Object config and factory classes
added wrong config by mistake
added wrong config by mistake
added NOOP serializer + fixed wrong servlet name in web.xml
added NOOP serializer + fixed wrong servlet name in web.xml
fixed bug with using ThreadBasedDispatcher + added tests for dispatchers
fixed bug with using ThreadBasedDispatcher + added tests for dispatchers
Changed to only exclude jars
Changed to only exclude jars
Added webroot
Added webroot
changed persistent structures names
changed persistent structures names
fixed broken remote server api
fixed broken remote server api
fixed remote server bug
fixed remote server bug
Fitted the Atmosphere Chat example onto Akka
Fitted the Atmosphere Chat example onto Akka
Refactored Atmosphere support to be container agnostic + fixed a couple of NPEs
Refactored Atmosphere support to be container agnostic + fixed a couple of NPEs
enhanced the RemoteServer API
enhanced the RemoteServer API
enhanced the RemoteServer API
enhanced the RemoteServer API
renamed methods for or-else
renamed methods for or-else
stm cleanup and refactoring
stm cleanup and refactoring
refactored and renamed AMQP code, refactored STM, fixed persistence bugs, renamed reactor package to dispatch, added programmatic API for RemoteServer
refactored and renamed AMQP code, refactored STM, fixed persistence bugs, renamed reactor package to dispatch, added programmatic API for RemoteServer
upgraded dependencies
upgraded dependencies
upgraded sjson jar to 0.2
upgraded sjson jar to 0.2
fixed a bunch of persistence bugs
fixed a bunch of persistence bugs
migrated storage over to cassandra 0.4
migrated storage over to cassandra 0.4
upgraded to Cassandra 0.4.0
upgraded to Cassandra 0.4.0
moved the STM Ref to correct package
moved the STM Ref to correct package
Removed bad conf
Removed bad conf
adapted tests to the new STM and tx datastructures
adapted tests to the new STM and tx datastructures
added camel tests
added camel tests
added @inittransactionalstate
added @inittransactionalstate
added init tx state hook for active objects, rewrote mongodb test
added init tx state hook for active objects, rewrote mongodb test
Switched to Shade, upgraded Atmosphere, synched libs
Switched to Shade, upgraded Atmosphere, synched libs
Added scala-json to the embedded repo
Added scala-json to the embedded repo
fixed mongodb test issues
fixed mongodb test issues
merged multiverse STM rewrite with master
merged multiverse STM rewrite with master
added monadic ops to TransactionalRef, fixed bug with nested txs
added new multiverse managed reference
Changed title to Akka Transactors
Changed title to Akka Transactors
commented the persistence tests
fixed screwed up merge
finalized persistence refactoring; more performant, richer API and using new STM based on Multiverse
rewrote the persistent storage with support for unit-of-work and new multiverse stm
Added HTTP Security and samples
Moved Scheduler to actors
deleted old project files
deleted old project files
merged multiverse branch with upstream
updated changes.xml
adapted fun tests to new module layout
removed akka project files
merged module refactoring with master
merged modules refactoring with master
merged module refactoring with master
kicked out twitter json in favor of sjson
kicked out twitter json in favor of sjson
modified .gitignore
3:d iteration of modularization (all but fun tests done)
removed idea project files
added more sophisticated error handling to AMQP module + better examples
added sample session
added supervision for message consumers + added clean cancellation and shutdown of message consumers
made messages routing-aware + added supervision of Client and Endpoint instances + added pre/post restart hooks that does disconnect/reconnect
2:nd iteration of modularization
added optional ShutdownListener to AMQP client and endpoint
enhanced AMQP impl with error handling and more...
splitted kernel up in core + many sub modules
fixed guiceyfruit pom problem
created persistent and in-memory versions of all samples
wrong version in pom
new scala json serialization library and integration with MongoStorage
cleaned up example session
init commit of AMQP module
added RabbitMQ 0.9.1 to embedded repo
init commit of AMQP module
removed idea files from git
parameterized all spawn/start/link methods + enhanced maintanance scripts
added enforcer plugin to enforce Java 1.6
removed monitoring, statistics and management
added more tracing to stm
removed Cassandra startup procedure
removed redundant test from lift sample
added lift header
added scheduler test
added generic actor scheduler
bumped up the version number of samples to 0.6
updated cassandra conf to 0.4 format
mid multiverse bug tracing
merge with multiverse stm branch
multiverse stm for in-memory datastructures done (with one bug left to do)
added testcase for persistent actor based on MongoDB
added Ref semantics to MongoStorage + refactoring for commonality + added test cases
renamed jersey package to rest
version is now 0.6
added changes to changes.xml
removed buildfile and makefiles
kernel is now started with "java -jar dist/akka-0.6.jar", deleted ./lib and ./bin
merged with upstream
added to changes.xml
restructured distribution and maven files, removed unused jars, added bunch of maven plugins, added ActorRegistry, using real AOP aspects for proxies
restructured distribution and maven files, removed unused jars, added bunch of maven plugins, added ActorRegistry, using real AOP aspects for proxies
externalized MongoDB configurations in akka-reference.conf
added remove functions for Map storage + added test cases + made getStorageRangeFor same in semantics as Cassandra impl
added more test cases for MongoStorage and fixed bug in getMapStorageRangeFor
changed cassandra name to avoid name clash with user repo
restructured maven modules, removed unused jars
testcase for MongoStorage : needs a running Mongo instance
wip: adding storage for MongoDB and refactoring common storage logic into template methods
added mongo jar to embedded repo and modified kernel/pom
merge master
added MBean for thread pool management + added a REST statistics service
Added it in /lib/ as well
Updated Cassidy jar
updated cassandra jar
disabled persistence tests, since req a running Cassandra instance
fixed sample after cassandra map generelization
CassandraStorage is now working with external Cassandra cluster + added CassandraSession for pooled client connections and a nice Scala/Java API
added windows bat startup script
implemented statistics recording with JMX and REST APIs (based on scala-stats)
Updated Lift / Akka Sample
removed tmp file
added web.xml to lift sample
minor edits
merge with origin cassandra branch
rearranged samples-lift module dir structure
added support for running akka as part of Lift app in Jetty, made akka web app aware, added sample module
screwed up commit
added support for running akka as part of Lift app in Jetty, made akka web app aware, added sample module
added support for running akka as part of Lift app in Jetty, made akka web app aware, added sample module
added scala-stats jar
fixed pom problem
Beginning of Multiverse STM integration
Added Multiverse STM to embedded repo
mid cassandra rewrite
merge with master
rewrote README
mid cassandra rewrite
minor reformattings
merged comet stuff from viktorklang
added comet stuff in deploy/root
adde lib to start script
checking for AKKA_HOME at boot + added Cassidy
added jersey 1.1.1 and atmosphere 0.3 jars
added new protobuf lib to start script + code formatting
scalacount should work now.
removed akka jars from deploy directory
removed akka jars from lib directory
merged in jersey-scala and atmosphere support
added images for wiki
Switched to JerseyBroadcaster
Sample cleanup
Comet support added.
fixed wrong path in embedded repository
tweaks...
Almost there...
concurrent mode is now per-dispatcher
added protobuf to storage serialization
fixed race bug in supervisor:Exit(..) handling
added generated protocol buffer test file
added missing methods to JSON serializers
added Protobuf serialization of user messages, detects protocol serialization transparently
fixed performance problem in dispatcher
Added Atmosphere chat example. DYNAMITE VERSION, MIGHT NOT WORK
removed comments
Atmosphere anyone?
added protobuf, jackson, sbinary, scala-json to embedded repository
completed scala binary serialization'
Cleaned up Atmosphere integration but JAXB classloader problem persists...
removed junk
Atmosphere almost integrated, ClassLoader issue.
Experimenting trying to get Lift views to work. (And they don't)
Added support for Scala XML literals (jersey-scala), updated the scala sample service...
EventBasedThreadPoolDispatcherTest now fails due to dispatcher bug.
merged in protocol branch
fixed outstanding remoting bugs and issues
added deploy dir to .gitignore
based remoting protocol Protobuf + added SBinary, Scala-JSON, Java-JSON and Protobuf serialization traits and protocols for remote and storage usage
added scala-json lib
updated jars after merge with viktorklang
completed protobuf protocol for remoting
Removed unused repository
added license to readme
added apache 2 license
added distribution link to readme
mid hacking of protobuf nio protocol
added configurator trait
added scala and java sample modules + jackson jars
clean up and stabilization, getting ready for M1
changed oneway to be defined by void in AO + added restart callback def in config
fixed last stm issues and failing tests + added new thread-based dispatcher (plus test)
implemented waiting for pending transactions to complete before aborting + config
fixed async bug in active object + added AllTests for scala tests
fixed most remaining failing tests for persistence
added new cassandra jar
added configuration system based on Configgy, now JMX enabled + fixed a couple of bugs
fixed bootstrap
added netty jar
various code clean up + fixed kernel startup script
added prerestart and postrestart annotations and hooks into the supervisor fault handler for active objects
added configuration for remote active objects and services
fixed some major bugs + wrote thread pool builder and dispatcher config + various spawnLink variations on Actor
fixed bugs regarding oneway transaction managament
complete refactoring of transaction and transactional item management + removed duplicate tx management in ActiveObject
iteration 1 of nested transactional components
transactional actors and remote actors implemented
finished remote actors (with tests) plus half-baked distributed transactions (not complete)
added remote active objects configuration + remote tx semantics
completed remote active objects (1:st iteration) - left todo are: TX semantics, supervision and remote references + tests
new factory for transactional state
completed new actor impl with supervision and STM
completed new actor impl with link/unlink trapExit etc. all tests pass + reorganized package structure
renamed dispatchers to more suitable names
finished STM and persistence test for Ref, Vector, Map + implemented STM for Ref
fixed hell after merge
Swapped out Scala Actors to a reactor based impl (still restart and linking to do) + finalized transactional persisted cassandra based vector (ref to go)
fixed TX Vector and TX Ref plus added tests + rewrote Reactor impl + added custom Actor impl(currently not used though)
finished actor library together with tests
project cleanup
upgraded to Scala 2.7.4
renamed api-java to fun-test-java + upgrade guiceyfruit to 2.0
added invocation object + equals/hashCode methods
added reactor implementation in place for Scala actors
cleanup and refactoring of active object code
fixed final issues with AW proxy integration and remaining tests
added custom managed actor scheduler
switched from DPs to AW proxy
added AW
mid jax-rs impl
added interface for active object configurator, now with only guice impl class + added default servlet hooking into akka rest support via jersey
first step towards jax-rs support, first tests passing
first step towards jax-rs support, first tests passing
fixed cassandra persistenc STM tests + added generic Map and Seq traits to Transactional datastructures
fixed broken eclipse project files
fixed bug STM bug, in-mem tests now pass
fixed test
init impl of camel bean:actor routing
fixed merging
commented out camel stuff for now
added kernel iml
mid camel impl
initial camel integration
initial camel integration
removed unused jars
upgraded to latest version of Cassandra, some API changes
fixed tests to work with new transactional items
improved javadoc documentation
completed cassandra read/write (and bench) + added transactional vector and ref + cleaned up transactional state hierarchy + rewrote tx state wiring
added .manager to .gitignore
added .manager by mistake, removing
added eclipse project files
1. buildr now works on mac. 2. rudimentary cassandra persistence for actors.
readded maven pom.xml files
initial draft of cassandra storage
second iteration of STM done, simple tests work now
rewrote the state management, tx system still to rewrite
deleted license file
added license
first draft of MVCC using Clojure's Map as state holder, still one test failing though
made netbeans ant build my default build (until buildr works)
added new scalatest + junit to libs
added state class with snapshot and unit of work
added immutable persistent Map and Vector
netbeans files
modded .gitignore
added jersey akka componentprovider
added netbeans project files
added some new annotations
fixed misc bugs and completed first iteration of transactions
serializer to do actor cloning
initial draft of transactional actors
initial draft of transactional actors
changed com.scalablesolutions to se.scalablesolutions
removed supervisor + changed com. to se.
moved supervisor code into kernel
added mina scala
added scala mina sample
added db module
moved lib
added runner to buildr
adding dataflow concurrency support
minor reformatting
fixed env path bug preventing startup of dist, now working fine starting up voldemort
merged all buildr files to one top level, now working really nice
backup of supervisor tests that are not yet ported to specs
added top level buildr file for packaging a dist
modified gitignore
added buildr file
cleaned up buildr config
added start script
added Buildr buildfiles
renamed test files to end with Specs
minor changes to pom
minor changes'
changed voldemort settings to single server
removed unused jars
removed unused jars
removed unused jars
removed unused jars
reM removed tmp file
added libs for kernel, needed for Boot
added bootstrapper
added config files for voldemort and akka configgy stuff
added the supervisor module to akka
added util-java module with annotations
changed package imports for supervisor
added basic JAX-RS, Jersey and Grizzly HTTP server support
added intellij files
added intellij files
completed Guice API for ActiveObjects
initial guice integration started
added Java compat API for defining up ActiveObjects
init project setup
init project setup
