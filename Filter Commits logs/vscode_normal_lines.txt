Check cancellation token earlier and avoid capturing resolve (#166416)
add command to toggle screen reader accessibility mode (#166412)
Reapply building of web server (#166391)
Remove duplicated interface (#166405)
Adopt @vscode/l10n for markdown language server (#165880)
Pick up latest jsonc parser (#166334)
refactor: rename userDataSyncProfilesStorageService to userDataProfileStorageService (#166397)
Pick up latest esbuild and parcel for building extensions (#166389)
Mark conflict as handled on first interaction (#166379)
Enable codicon decorations (#166358)
Comments view: add badge with the number of unresolved comments (#164743)
Revert "Copy webServer from Typescript to VS Code (#165771)"
fix button styling (#166362)
disposes text models in test
Avoid exporting symbols (#164940) (#166288)
bump deemon (#166349)
Regression with drag-and-drop and recently opened list (fix #166130) (#166341)
Editor state change, break after match (#166283)
cli: add service integration for systemd (#166328)
Use message as fallback, not key (#166323)
Edit Sessions -> Cloud Changes (#165877)
Ignore webserver for eslint (#166338)
add ActionWidgetService (#164096)
Adopt prefer-readonly in JS/TS extension (#165089)
:lipstick: move select kernel command to right file (#166319)
Move and rename `webview.ts` files (#166313)
Fit typings for concrete version of `createInstance` (#166320)
Settings description edits (#166315)
Search for Andrea (#166312)
Add explorer.autorevealExclude setting (#136905)
Use the proper scrollbar, fixes #166171 (#166302)
Kernel picker MRU experiment (#166307)
Pass display language as a locale to Electron (#159958)
Try to end the input latency measurement in the very first task after the browser does layout and painting
onboard built-in debug extensions to l10n (#166300)
Mark `TransientOptions` properties readonly (#166071)
Copy webServer from Typescript to VS Code (#165771)
:up: distro (#166298)
Present kernel detection progress in kernel picker/status (#166294)
Update telemetry package (#166292)
:up: `@vscode/sqlite3@5.1.2-vscode` (#166290)
storage - do not eager parse extension storage (fix #163446) (#166281)
adds to `files.exclude` desc re: `explorer.excludeGitIgnore` (#165111)
Git - üíÑ Remove code duplication (#166263)
store manifest as is (#166260)
also store extension manifests when storing extensions (#166237)
store remote user data in last sync resource (#166229)
Change error message when launching a second admin instance (#166146)
Try computing windows paths correctly on markdown drop (#166077)
Don't fail to send notebook open perf when reopening the same notebook in an editor (#166235)
Pickup bundle.l10n.json (#166169)
CSS Highlight fallback. (#166156)
Tweak Continue On placeholder (#166152)
cli: skip glibc check for nixos
fixup! windows compilation
store last sync data in state (#166133)
cli: enable server message compression
Restore bracket match CSS syntax (#166109)
Use CSS variables over registerThemingParticipant - rulers viewparts (#165466)
Remove expired event (#166119)
Use correct icons for new and kill terminal
Register testAreaInput event listeners
Simplify measurements buffer/average
Git - Don't show progress for commands that support optimistic UI updates (#166124)
Change Logging Suffix (#166122)
Bump distro (#166117)
Folded decoration is rendered garbled (#166114)
fix initialzing profiles in web (#166112)
button: switch to theming by css variables (#165515)
Git - Optimistic UI update for discarding changes (#166099)
Update messages.es.isl to add context menu hotkey (#166010)
Reduce usage of `require` (#166051)
Use new Key Vault account (#166049)
Pick up latest dompurify and typings for vscode-markdown-languageservice (#166062)
Take advantage of platform features in Microsoft Authentication extension (#166066)
fix installing extensions in web (#166063)
fix profiles enablement in web (#166059)
Enable pasting of image attachments by default for ipynb (#166058)
Remove extra new line
Suggest install kernel extensions only when they are not installed.
Add reporting of input latency measurements
Add an input latency contrib that will do the reporting
Document inputLatency namespace
Make CodeActionModel an idleValue (#166053)
Make ParameterHintsModel an idle value (#166052)
Enable telemetry logging only in OSS (#166032)
Git - Add calcellation support for getRefs (#165938)
Transform `text/uri-list` mime values in data transfers (#165768)
Do not preprocess Unicode newlines in Markdown preview (#166026)
rename to Profile (#166030)
Debounce the kernel picker update. (#166027)
fixup! clippy suggestion
Git - Tweak git config parser (#166022)
Refactor indicators to use uniform interface (#165960)
fix title bar when transitioning to PWA (#165967)
activate remote fsp before resolving trust (#165941)
update panel input border logic (#165966)
Move css rules for #165169 (#165595)
Git - Improve branch publish prompt (#165949)
Git - get remotes from the config file (#165909)
clean up (#165990)
üÜô distro (#165965)
üéÅ Add `search` to file location methods in tasks (#165156)
improve Git Bash integration on Windows (#151105) (#165428)
cli: implement local download fallback
Depend on platform implementations for common features (#165950)
More telemetry cleanup (#165952)
üÜô distro (#165951)
Update overlay part position on cell layout change (#165948)
Lock SuggestOvertypingCapturer while suggest widget is active
Kernel picker respond to kernel and action changes
move create from profile template action to export group (#165939)
removed trace logging and normalized paths in search tree parent path checking (#165850)
üíÑ Include file system path in debug mode's URI/link hovers (#165709)
change how log channels are displayed (#165935)
Add supportsMemoryEvent (#165876)
#159892 Finalize (#165925)
always set selection and only control focus, some :lipstick: with selector logic
add (undocumented) option `editor.suggest.selectQuickSuggestions` which makes suggest items not be selected when triggered automatically (quick suggest and trigger characters)
tame the `start.timer.mark` performance event (#165923)
Auto Save by onFocusChange does not sync internal cache when direct quitting by 'X' button. (fix #163047) (#165918)
Improves performance of bracket pair colorization.
Queues and combines edits for bracket pair colorization and processes them on request.
:lipstick: - quick access (#165912)
Add a fast check to determine if a preferences renderer needs to be created (#165825)
Extract usage of `require` to separate function which can be tree-shaken by the monaco editor build and thus ignored by webpack
Revert "skip resolve (without backup) test" (#165886)
Web: Ctrl-click on tab should open context menu but not open tab (#165894) (#165895)
Unit test failures: Async#retry (fix #163619) (#165883)
Dirty window indicator goes away when changing a setting (fix #165798) (#165892)
feedback
Consume proposed telemetry API (#165862)
only apply non-empty class name (#165836)
Pick up latest TS for building vscode (#165875)
Use title casing for dialog buttons (#165874)
Allow trailing commas while minifying json resources (#165870)
Make link text regexp non-greedy (#165867)
Revert "respect auto-save setting even for single file edits" (#165832)
cli: allow handling control server requests in parallel
Change terminal profile service unit tests to integration tests
Split up terminal word link detector unit test
Switch to webhook (#165853)
Add launch/task variable completions to workspace file (#165842)
Remove extra usages of `Action` in release notes code (#164849)
adjust title bar appearance in web (#165076)
testing: reduce decoration work
Try to please webpack
Always use app root for resource URIs (avoid usage of `require`)
Use proper import syntax (avoid using `require`) (#165827)
don't disable the close button for peek (#165826)
[css/json/html] move to l10n  (#165725)
Only use string of the `remote/web/package.json` `browser` field (#165163)
Git - Tweak optimistic update (#165815)
Address code review comments
Update JSDoc on updateWorkspaceFolders when extension host will restart (fix #165010) (#165813)
Git - Stage/Unstage optimistic UI updates (#165716)
Git - Show progress while doing the initial repository discovery (#165695)
Set the `respectAutoSaveConfig` to false whenever applying workspace edit via code actions on save
prefix argument id with actual command (#165805)
:lipstick:
Bump loader-utils from 1.4.0 to 1.4.1 (#165770)
Ask for Continue On selection before auth (#165734)
Polish Settings editor styling (#165767)
Enable autoplay in webviews (#165784)
Don't assume file paths in tsconfigs (#165779)
Include JS files in XLF creation for extensions (#165774)
Track overlay part disposable
cli: pin rust (and clippy) version for builds
Exclude `@` from word pattern in js/ts (#165764)
:lipstick:
do not dispose mutabledisposble too early
resolve comments
cli: allow passing direct path to the vscode cli in --install-dir
:lipstick:
Use CSS variables over registerThemingParticipant - minimap viewparts (#165465)
Remove :root css variables in notebook find. (#165534)
Refactor preferencesWidget to use CSS variables (#165736)
cli: only build common platforms in ci
debug: bump js-debug
fix default output font size (#165731)
cli: fix install on windows arm64 not working
fix #164881 (#165722)
flush log channels if they are visible (#165718)
Add some more port forwarding logging (#165714)
- clean up deleted profile synchronizers (#165713)
Git - Optimistic UI updates for rebase continue (#165699)
Use the session access flow (#165567)
Implements #164574 for experimental diff algorithm. (#165136)
update distro (#165691)
Update bootstrap-node.js to check for Array.isArray (#165289)
Overlay part needs layout update in didRenderCell
Separate content and overlay.
Use CSS variables for findOptionsWidget
Add readonly to a few more properties (#165563)
Telemetry: log command execution time
Git - Only use `this.dotGit` when resolving HEAD (#165497)
Try passing offset to editors on layout (#164287)
CSS Variables refactor - untitledTextEditor
Partial CSS Variable Refactor - Inspector Editor Tokens
Use CSS variables for line numbers
CSS Variables refactor - find widget
CSS Variable refactoring-accessibilityHelpWidget
run auto tasks if trusted & on  (#165570)
Localize emmet using l10n.t (#165568)
Move list of trusted extensions to product.json & enable for Desktop (#165565)
Increase min-height to 100% (#165566)
adopt css var in lieu of registerThemingParticipant (#165561)
Refactor sash hover border to use CSS var (#165516)
Pick up latest TS for building VS Code (#165562)
check if a task run is in progress before running it  (#165560)
Use css variables for editor scrollbar (#165464)
treat editor tab ctrl+click as right click (#165558)
Remove executePrimary and notebookEditor proposal (#165532)
don't show title bar context on cmd (#165557)
Checkbox is hard to see in dark mode on selected file change node in tree view (#165556)
Update role and aria-label for the Hide button in the Welcome View  (#165505)
add task section to terminal dropdown (#165553)
Adopt l10n for npm package (#165527)
Adopt l10n for grunt and php-language-features (#165552)
Try to sort console history entries in recency order (#165549)
Comment widget doesn't work with inline diffs on deleted lines (#165547)
Adopt l10n for gulp (#165543)
More logs around SecretStorage (#165542)
Adopt l10n for jake (#165541)
Adopt l10n for extension-editing (#165523)
Move some keybinding editor colours to CSS (#165537)
Skip debug tree error in telemetry (#165535)
Adopt l10n for merge-conflict (#165531)
Adopt l10n for simple-browser (#165529)
Adopt l10n for media-preview (#165525)
Remove overzealous telemetry (#165524)
Adopt  l10n for configuration-editing (#165521)
better error message
Comment view filtering: incorrect count (Showing x of y) (#165517)
Also make button focusable
Progressbar: Use css variables for styling (#165503)
do not set appication extensions location for default profile (#165496)
Reduce unused exports (#165494)
Git - Optimistic UI plumbing (#165237)
support updating installed extensions (#165485)
Git - Add "OK, Don't Ask Again" button to the publish branch prompt (#165487)
Adopt l10n for ts extension (#165450)
Adopt l10n for markdown extension (#165448)
Use css variables for editor scrollbar
fix #165434 (#165440)
Add typings for webview messages (#165446)
Add accessibility role type to the checkbox in getting started step
Use CSS variables for settingsTree.ts (#165437)
use the actual extension id as the id in the language pack (#165436)
keybindingLabel: switch theming to css variables (#165426)
Improve command center hover colors (#165427)
adopt CSS variables in terminal (#165419)
Improve file dialog action button (#165417)
remove unused exports (#165411)
Refactor settingsWidgets (#165412)
Bump target for build scripts (#165287)
Contributed activity's busy icon fails to display after resetting containing TreeView's badge state (#165255)
Remove redundant CSS rules (#165401)
debt: move or remove `NullXYZServices` (#165397)
eslint: add a new rule to enforce `declare _serviceBrand: undefined` (#165396)
proper check for WCO (#165384)
last folding range not restored (#165390)
Reduce unused exports, ref #164939 (#165389)
Git - Remove localization from askpass-main (#165129)
Implement Add "Ignore" buttons #164425 (#165387)
Partially reverts 1b83b96a4658097d1939f0b6ec68823197340a00 (#165372)
Reduce loaded web modules (#165369)
Attempt to fix Rust clippy lint errors (#165377)
Align cache key across OSes (#165042)
stricter definition for what a trival snippet it (#165355)
combine all origin selection ranges when having multiple go-to via mouse result (#165349)
starting timings (perf machine) shouldn't complain about missing cached data (#165342)
joh/external marlin (#165336)
Move notebook editor widget theme to css variables (#165300)
Enable strict mode and bump target for test/smoke (#165296)
Reduce usage of invalid property overrides (#165293)
Bump targets for test/automation and test/integration (#165298)
Use ?. for property access (#165295)
Update quick pick placeholders and/or remove titles (#165267)
tweak quick pick pin conditional (#165285)
Remove ianhu from team github issue notebooks (#165281)
Duplicating Menu Actions when switching profiles (#165274)
TestInstantiationService in fileDialogService.test.ts (#165270)
skip resolve (without backup) test (#165277)
don't set quick pick items every time value changes (#165113)
Save all dirty editors before storing edit session (#165246)
Let opener service validate that only specific commands can be run in command uris (#165204)
Nit: fix Tip blocks case (#165223)
report perf marks whenever delivered (#165250)
adopt `vscode.l10n` in references view (#165245)
Switch to using CSS (#165185)
more test cleanup (#165233)
cleanup ipc integration tests (#165221)
use ID for quick fix telemetry (#165197)
Reduce theme participant for notebook diff editor
Diff overview ruler css variables
Don't clear the pause reason for other threads when processing a stopped event with allThreadsStopped=true (#165180)
Typo: folding controller. (#165211)
Cell comments css variables
Notebook find widget and toolbar css variable.
Remove notebook content provider api (#165195)
don't create and dispose submenus (#165206)
Pick up TS 4.9 rc for bundled VS Code version (#165205)
Prompt users to test with extensions disabled (#165203)
webview: ignore Ctrl+W and Ctrl+N in webview for PWA (#164981)
Markdown lang preview settings description (#165109)
re #164939. reduced unused exports in notebook worker. (#165198)
re #164939. reduced unused exports. (#165196)
use != operator instead of -ne (#165191)
Do not render synchronously when restoring the state, the desired `scrollLeft` is maintained even if the `scrollWidth` is small (#165193)
Limit shifting (#165141)
Use css vars for lightbulb (#165186)
prevent `.zshenv` recursion (#165174)
only renderBody when view is visible/expanded (#165187)
Use `_` for privates in webview code (#165183)
Bugfix
Remove unneeded `export` (#165178)
Remove a few `export`s (#165158)
use ctxt menu event for all actBar context menus (#165177)
Clean up some unused exports (#165107)
More unused exports (#165167)
a11y issues to Megan (#165166)
debt - use CSS variables instead of `registerThemingParticipant` (#165164)
lramos15/xenacious-bedbug (#165083)
Highlight label should not create extra span nodes (#164657)
api feedback (#164470)
fix Alpine builds with npm custom registry (#165137)
Update grammars (#165100)
bump version (#165133)
smoketests should not fail by bumping version in package.json (#165132)
skip flaky test (#165150)
add üöÄ build tag to builds which go through publishing (#165145)
fix inno setup build for non-insider qualities (#165143)
Update to current Devcontainer extension image link (#163557)
Reduce unused exports (#164935)
Pick up latest TS for building VS Code (#165104)
Remove the ü•ï since we have modes in the go to file (#164437)
Revert "Bump version for Nov. (#165091)" (#165118)
Remove a few `export`s (#165106)
add trace logs for search parent debug (#165095)
fix #154064 which was running the wrong taskgroups (#164983)
Pick up latest markdown language service (#165093)
Improve log message for aborting resuming an edit session (#165108)
Bump version for Nov. (#165091)
Adopt prefix private with _ in markdown extension (#165088)
Adopt notebook serializer for notebook document tests (#165081)
GitHub Enterprise Auth improvements (#165082)
Adopt notebook serializer for test (#165078)
Remove unused import for notebook background (#165070)
Pick up latest TS for VS Code (#165075)
use updated private API name (#165069)
improve title bar settings for web (#165068)
Updates custom menu borders and item styles (#164165)
Remove exports and unused types (#164939) (#165065)
update notebook milestones (#165064)
Show progress when storing edit session as part of Continue On flow (#164903)
Add email attachments are lost on Github (#165057)
Only export symbols that are needed (#165052)
Implements #164686
SCM - fix action button border (#165048)
unexport createDecorator (#165039)
üíÑ SCM - Remove registerThemingParticipant (#165038)
bump unique names generator (#165015)
Pick up latest markdown LS (#164945)
Don't export `SelectKernelReturnArgs` (#164944)
Remove exports of unused types (#164943)
Sort the keys in order to be more predictable (#164920)
Swap list/tree icons to reflect current state instead of target state  (#164835)
Defer creation of `monaco-icon-description-container` (#164659)
Use `IAction` instead of `Action` for search item action (#164844)
avoid object-spread in perf-critical code, use `Object.assign`-instead (#164892)
:lipstick: use event naming conventions for EmitterOptions (#164890)
üíÑ Diff decorators - remove registerThemingParticipant (#164889)
chore: update electron@19.1.3 (#164882)
debt - extract outline actions and outline interfaces into separate files (#164887)
perf - ignore new listeners when leakage threshold is exceeded by far (#164885)
* force the use of `InstantiationType` * mark all standalone editor services as eager * mark remaining extension host services as eager (#164883)
Commit Action button polish (#164746)
üíÑ Banner - remove registerThemingParticipant (#164879)
Engineering - adopt l10n for git-base/git/github extesions (#164566)
Use simple `IAction` instead of `Action`in quick input (#164842)
chore: update electron@19.1.3 (#164864)
Engineering - Add quality in the build name (#164855)
Engineering - Empty commit (#164850)
Skip clear if there is nothing in the actionbar list (#164839)
Disable markdown insert link commands in readonly editors (#164820)
Use posix path for markdown links (#164822)
Bump distro (#164821)
Quick check to circumvent regex in many cases (#164815)
make sure `startup.resource.perf` doesn't contain paths (#164812)
fix name of profile tmp-file (#164805)
Always patch the npm registry in `yarn.lock` files and compute the node modules cache key after having patched them (#164795)
Don't ship yarn.lock file with the markdown extension (#164794)
Store edit session before prompting to select edit session destination (#164780)
Rework markdown update link glob (#164766)
Clean up a few markdown setting descriptions (#164765)
Pick up latest markdown LS (#164763)
Shorten markdown link button titles (#164764)
Add min-height to work around clipping (#164759)
tunnel --name should rename previous tunnel (#164753)
Do not adjust y offset when the mouse is below the last line (#164750)
Use `border-radius: 2px` (#164747)
Re #164715. Better error handling of notebook opening (#164737)
Move log message outside of 'if' block so I have confirmation that smoething happened
Allow action labels to be long in comment header (#164614)
Transform ext host log URI on remote side (#164712)
fix #164458 (#164711)
tunnel: Generate vanity URL (#164710)
`collapseByDefault` for notebook should also honor new setting
Revert "Use Disposable in a few more places"
fix problems with html style comments in embedded code (#160981)
Do not interrupt if there are no affected cells
Pick up latest markdown language service (#164655)
Use dirname as default uri for md links (#164641)
Use newlines to separate inserted images (#164632)
Disable canSelectFolders in markdown link inserter (#164636)
update setting description (#164628)
Pick up latest markdown language service (#164625)
fix verifying signed extension (#164604)
Add note about built-in extensions (#164601)
fix example (#164595)
cli: static link the crt on windows (#164532)
Update DAP dts and implement new 'startDebugging' request (#164530)
Revert "Pick up markdown language service update (#164524)" (#164533)
move builtin terminal quick fixes to contribution model (#164099)
Pick up markdown language service update (#164524)
Pick up latest TS for building VS Code (#164523)
Use delayed instantiation for edit sessions (#164466)
Pick up latest markdown language service and clean up server package (#164516)
Adjust codicon CSS (#164511)
Remove experimental tag from markdown settings (#164509)
Remove old notebook editor api proposal (#164504)
Change focusedRowBorder colour for Settings editor (#164508)
Try to reduce size of completions DTO (#164087)
Let markdown strings specify a list of commands that they allow (#163915)
Third party notices and distro update. (#164502)
Remove liveshare specific registerContentProvider api (#164497)
change ‚Äúamount of‚Äù to ‚Äúnumber of"
`FolderMatch.hasFileUriDownstream()` and `RenderableMatch.name()` have performance overhead (#164077)
Print warning when trying to use _allOutputItems proposed renderer property (#164496)
Allow passing in a mime-type to `setModelLanguage` (#164495)
try hybrid model for editor features menu (#164493)
polish (#164487)
Cleanup tests (#164489)
Auto detect indentation when pasting on an empty file (#156282)
Add api to get all mime typed data for an output item (#163974)
Address misplaced cursor (#159325)
build: parallelize cli build
Wait for preload scripts before loading renderers (#164406)
debug: activate auto launch onStartupFinished (#164481)
cli: fix code tunnel on macos
Use the word "applied" instead of "effective" (#164478)
:lipstick:
also cancel RAF on dispose
Analyse profiles in worker thread (#164468)
Add placeholder types for fixing issues with `TestInstantiationService` (#164295)
Add max height to hover (#164093)
Clear characterSet instead of recreating it on every parameter hints update (#164195)
fix: preserve process.execArgv (#161853)
update distro (#164462)
ability to configure PPE Url (#164460)
Add keyboard shortcuts for scrolling horizontally (#162992)
Try to maintain the viewport start position stable when hidden areas change (#164456)
Run extractor on PR (#164457)
fix: Close #164414, correct transparent transmission folder-uri (#164415)
Engineering - Pin macOS build agent (#164455)
Git - getSCMResource() should also look at the merge group (#164450)
Don't dismiss hover by mouse movement if it is triggered from the keyboard (#164446)
Remove unneeded diff
Do not show the dialog if the dialog is currently being shown (#164441)
Clear pending layouts when hiding
Use MutableDisposable over plain IDisposable
Modify "*WordPart*" family of commands to respect kebab-case (resolves #158667) (#158672)
Parse lazily instead of in a timeout
Remove store from derived events
Improve Monarch types (#164432)
Prefer that quotes terminate links in ambiguous cases (#164431)
Revert "Git - parse config file for remotes (#164151)" (#164433)
fixes #157335 (#164430)
show profiles data in sync data views (#164429)
Bump distro (#164272)
enable experimental renderer profiling for us (#164418)
Skip `loadScriptSource` if we know the preload is already supposed to be a module (#164405)
Request semantic tokens again if a change event comes in during a request (#164396)
Allow custom npm registries at build time (#163629)
chore: cleanup inno setup for context menu install (#164411)
fix comma splices with semicolon
add commas to create subclause
change "shutdown" (noun) to "shut down" (verb)
change "amount" to "number"
fix four instances of comma splices
update `terminal.integrated.fontFamily` desc
Re-use disposable store while rendering scm lists (#163479)
Checkout specific branch during clone operation (#163705)
ci: use tunnelApplicationName (#164257)
Quick input lays itself out even when it is not visible (#164299)
feat: select the folding provider to use (#157434)
tunnel cli: fix windows build (#164141)
Make instantiation type explicit (#164332)
Rename StringBuilder methods
fix cross grid layout position propagation (#164327)
Update xterm.js
Support picking kernel after one of source command finishes
Add optional markdown occurrences highlighting (#164292)
Emphasize the setting value not being effective (#164294)
refactoring (#164286)
tunnel: fix tunnel command when running compiled
Do not retry during the initial connection attempt if the resolver throws a `RemoteAuthorityResolverError.NotAvailable` error (#164279)
use emitEventsForSubmenuChanges (#164271)
don't force update the menu when top-level changes (#164277)
Allow passing initial dom dimensions to lists (#164101)
feat: bundle sparse package to integrate with windows context menu (#151186)
auto profiling telemetry tweak (#164259)
use sidebar foreground for secondary side bar (#164268)
Missing background highlighting for folding (#164263)
build: use npm instead of universal for arm compatibility
Disable partial edit sessions matches setting (#164261)
cancel suggest model before inserting new text (#164247)
fix node-vsce-sign (#164253)
Remove leftover console.log (#164252)
merge editor telemetry
pwa-wco (#164067)
spend callstack without percentage values (#164250)
157410 Add Command to Fully Collapse Tree Items (#159728)
increase innosetup minversion to win8 (#163040)
Git - parse config file for remotes (#164151)
fixes #157737 (#164248)
Bump some action versions (#164136)
tunnel command polish (#164245)
Git - Add operation start/end trace log (#164242)
Hediet/merge-editor-append-apply (#164120)
debt - remove `_isFakeAction` again (#164240)
update playwright (#164238)
wrapped lines w screen reader (#163229)
add `application.experimental.rendererProfiling` setting (defaults to false) (#164237)
Lazily create notebook find widget (#163962)
bump deemon (#164224)
Lazily create the accessibility help widget (#164166)
Use `Array`.from for mapping instead of separate call to map in more places (#163912)
[folding] Illegal value for lineNumber (#164215)
command center colors (#164213)
Avoid extra html write on first markdown preview update (#164201)
Don't update webview options if they have not changed (#164202)
build: cleanup old cmakes
build: fix git auth with cli
build: fix
Add to emmet.triggerExpansionOnTab description (#164197)
Change pencil hover cursor to pointer (#164198)
cli: use packaged openssl instead of artisanal builds
cli: build the tunnel cli by default
Web API: remove deprecated tunnel options (#164193)
Update python grammar (#164191)
Delay external uri opener (#164190)
Mark exthost/main arrays in events as readonly (#164187)
Support configuring extension host affinity for web worker extensions (#164150)
Remove unused services (#164185)
DidChangeDecorationsEmitter should fire right away if it is not being deferred (#164065)
add vsce-sign module (#164182)
Remove resource scopes (#164158)
Bump azure/login from 1.3.0 to 1.4.6
Check for github actions updates weekly (#164137)
timeout and catch error (#164169)
Remove outline for light theme (#164176)
Avoid using dynamic stylesheet in FilesRenderer (#164104)
fix tests
Scroll webview to top if unmatched fragment is #top (#164070)
cli: fallback to system installs in the standalone CLI
Rename notebook text diff editor (#164149)
Remove duplicated link clicking handling logic for notebooks (#163371)
* simplify renderer profiling, no more heartbeat but just profile for a bit * ignore profilings that don't reveal much * include perf base in telemetry events * move perfBaseline-math into timer service
use fib(26) as performance baseline, not code loading
Git - implement cancellation for updating the model (#163926)
Git - Extract querying for status so that it can run in parallel with the other operations (#163990)
Engineering - Remove proposal that has been finalized (#164127)
Git - catch exceptions while fast-forwarding a branch (#164128)
Defer creation of parameter hint widget (#164112)
Codespaces: remove settings sync is off badge (#164111)
Remove unused property (#164092)
Adopt `DisposableMap` in mainThreadWebviewView (#164091)
fix #163525 (#164122)
more tunnel access commands (#164076)
Bump distro (#164089)
Ensure 'undefined' does not make it into tsserver.web.js (#164064)
Bump distro (#164079)
Support starting tunnel with a given name (#163818)
Update xterm.js
Skip code lens decoration update if there are no code lenses (#164062)
Move Event.defer into EditorStatus
Loosen types on data sent by telemetry API (#164047)
Remove unused import for lint
Add Event.accumulate helper
Pick up latest TS for building VS Code (#164044)
Remove references to finalized proposals in js/ts (#164040)
Pass through _store
Find input should not create default controls if they never used (#163877)
Move register to var declaration
Update comment to reflect current state
Lazily compute icon classes of quick input items (#163886)
Add CellPartCollection (#164037)
Avoid expensive markdown cell aria updates in non-screen reader mode (#163976)
Reapply and fix xterm update (#164019)
Move default dom purify to constant (#163975)
bump distro (#164027)
Have the ability to add `modelVersionId` to `IMarkerData` and `IMarker`
Move from immediate to timeout
Generate an object with input latency stats
Make keydown more accurate
Improve measurement, ensure render doesn't overlap input
Record the visible line count for the text in `value` before `selectionStart` in the text area state
Expose EndOfLinePreference to `getValueLengthInRange` and fix its implementation in cases where the text EOL wouldn't match the requested EOL
add `Iterable#wrap` and use it over `asArray` (safes an array object) (#164023)
Allow extension authors to set valueSelection in a QuickPick/InputBox (#157022)
Use css to center quick input (#163878)
update @vscode/test-web (#164021)
remove wiggle when configuring menus (#164018)
- when model changes race reset against real elements - some polish (#164017)
Revert "Newline in tree item label makes label unreadable" (#164005)
Revert "Update xterm.js" (#164002)
don't log the actual profile data... (#163987)
don't show banner in serverless web (#163959)
xterm@5.1.0-beta.35
update client builds to pull the right artifacts
fix missing sudo
set linker for armhf correctly
add quick fix telemetry (#163323)
Improve hover positioning by introducing a secondary anchor
Prefix immediate with window
Renames
fix loading cached remote icons (#163961)
tunnel cli: add --parent-process-id option (#163935)
remove notification on successful kill of process in freeing port (#163951)
if there are tasks to reconnect to, show terminal panel (#163598)
Run notebook webviews in consistent origins (#163956)
try using vcpkg for everything
Newline in tree item label makes label unreadable (#163345)
Defer bracket pair document parsing using setImmediate
Move rendering of suggest details to animation frame
Dispose of rendered markdown properly (#163944)
Run suggestWidget.showSuggestions' layout on an animation frame
[typescript-language-features] Add `removeUnusedImports` command (#161654)
fix #163210 (#163940)
Adopt a pattern that works with parcel (#163942)
Avoid extra spread / object copy and use `Object.entries` (#163941)
Allow to configure machine name for tunnel (#163812)
Don't use @microsoft.com in source code (#163933)
Improve jsdoc (#163883)
Avoid extra call to `Iterable.map` (#163902)
Test cleaning for telemetry API (#163885)
Add API to register global actions, commands, or keybinding rules (#163859)
Git - Get HEAD details in parallel (#163756)
Mark quick input button and classlist arrays as readonly (#163891)
add logging (#163882)
When "evaluate in debug console" is run without a selection, send the full line (#163904)
Remove extra casts and switch to use Object.entries (#163900)
Use dotnet/razor-tooling repo for razor grammar (#163898)
Re-use button definitions for quick input symbols (#163887)
rm debug code
Remove too many folding regions notification (#163854)
fix clippy errors
fix integrated cli check
make self-update work on Linux
add exclude from search in context menu (#163708)
Start cleaning up structure of code action code (#163875)
update prepare scripts, license, lockfile
Add open preview enabled context, part 2 (#163682)
Remove some old -moz and -webkit css property usages (#163874)
Mark keybinding parts array as readonly (#163868)
commented about notebook contributions
temporarily disable secret-service pending update
Don't re-compute keybinding labels all the time (#163861)
Pick up latest katex (#163866)
don't register the notebook editor for *.interactive
run cli tests on pr
Use linked list for storing Gesture targets (#163857)
Make sure we dispose of Gesture.ignoreTarget (#163855)
cli: fix linux build
Move TernarySearchTree to own file (#163684)
Add allow list of webview command uris (#163501)
Move all webview clipping logic into overlaywebview (#163853)
add more logs (#163852)
Set contain on monaco-list-rows (#163518)
Avoid extra uses of `Iterator.ts` (#163699)
Recognize stash merge conflicts (#163680)
Avoid extra work when lightbulb is already hidden
Improve `implies` implementation (#163841)
Do opt when a11y mode disabled and register timer
Defer editorStatus model content and cursor position updates
send heavy samples when auto profiling extension host
use (shared) profiling model in extension host auto profiler
Git - adopt log output channel api  (#163695)
Tolerate minor edit session identity differences (#163804)
Re-enable disabling inputbox/quickpick API (#163739)
Always require an extension id if you want consistent webview origins (#163711)
Bump dev container memory reqs, use latest props (#163713)
Add commands to insert images/links in markdown (#163706)
wip
Pass associated notebook document to kernel source command (#163701)
Revert "Make returned editor contributions an iterable instead of an array (#163309)" (#163689)
Simplify code
Use editor scope contextkeyservice for fetching kernel source commands (#163693)
Change `bottomLeft` to be under the last anchor line
Pick up latest vscode-markdown-languageservice (#163681)
make access to inspect props delayed (#163679)
Switch workspace restricted settings to use indicators (#163601)
Defer updating screen reader content when no in a11y mode
Move webview animation workaround to viewPane (#163675)
change search badge to show recursive match number (#163604)
cli: use openssl for all crypto-related activities
Move quick input list element cleanup to `disposeElement` (#163668)
Make sure we clean up viewItemDisposables (#163673)
add restrict search to folder (#163597)
Remove custom jupyter notebook migration logic (#163362)
fix https://github.com/microsoft/vscode/issues/147762 (#162751)
move banner above title bar in web (#163492)
Onboard GitHub & Microsoft auth extensions to l10n (#163662)
Load bundle for web from unpkg service (#163641)
Add some tests for extension telemetry (#163584)
joh/super quelea (#163642)
Command Center With Help (#163635)
reenable terrapin (#163622)
Don't interrupt when deleting pending cells (#163609)
Use consistent origin for webview views (#163602)
Handle error when module is unavailable
Add static preloads notebook contribution (#163512)
expand input if match is within a collapsed cell
enable find widget for interactive window
clean up logs (#163589)
Use ??= in more places (#163594)
Remove forgoten reference to typescript/lib/protocol (#163585)
cg: update cglicenses.json for CLI dependencies
fix empty check for json (#163576)
Add docs for runWhenIdle
testing: remove dead filter code
use size to check if any files were added (#163571)
support passing extension log level from cli (#163566)
make eager service registration explicit (#163558)
Implements #160292: diffing against base (#163553)
avoid using string and boolean as variable name (#163550)
Add commented out debug helper for logging an image to the console
hook up unhandled extension errors with extension telemetry (#163424)
 Add cli & command to run the code server on the desktop (#163546)
Log improvements (#163532)
Adresses #159178 (#163535)
Additional test for handling stream outputs in notebooks (#163502)
cli: apply lint fixes
Allow extensions to use new API and it get included in Language Packs (#163493)
Allow walkthroughs to specify icons.
Plumbing for desktop to pick up strings from language packs (#163494)
ci: fix wrong file in cli tests
Use for-of loop instead (#163491)
Re-apply: Clean up how the notebook renderer entrypoint is passed around (#163486)
Freeze the notebook kernel context (#163488)
Don't depend on typescript protocol.d.ts (#163365)
add accessibility setting tag (#163358)
Small clean up for terminal tab list rendering lifecycle (#163485)
Document more of lifecycle.ts (#163482)
WIP
add diff editor navigation tip to aria label (#163368)
Improvements to i18n (#163372)
Add multiple template parameters (#163191)
Re-use label listener when rendering explorer elements (#163474)
commit characters must check suggest model state before proceeding (#163467)
Initialize context keys a bit later to avoid triggering recursive instantiation (#163445)
Use `toggle` instead of dynamic call to class list add/remove (#163464)
Reduce event listeners created when rendering explorer items (#163394)
Re-use DisposableStores when rendering explorer items (#163380)
Don't create extra disposable stores when rendering settings tree elements (#163407)
Darken red colour in light theme for better contrast (#163335)
Link to vscode-discussions repo from New Issue click (#162643)
Git - Attempt to parse HEAD file before invoking git.exe (#162572)
Revert "Always dispose test editor even if a test fails"
Re-use disposable store while rendering elements (#163398)
Git - Show progress indicator while running fetch (#163425)
Git- get commit input template in parallel with other operations (#163423)
Implements #159027 (#163420)
add more logging (#163419)
Revert "Clean up how the notebook renderer entrypoint is passed around (#163373)"
Enforce ILocalizedString usage with f1 property via types (#162991)
Finalize notebookDebugOptions API (#163316)
Always mark notebook list rendering `elementDisposables` as disposed (#163382)
Clean up how the notebook renderer entrypoint is passed around (#163373)
Don't log this error (#163384)
Finalize markdown link updating on file move (#163378)
Remove .only and fix tests (#163376)
Send breakpoint init requests in parallel (#163250)
Pick up latest TS for building VS Code (#163375)
update distro to allow Jupyter access to notebookControllerAffinityHidden (#163369)
Inline factory methods (#163363)
Move html rewriting for old webviews to (#163367)
Align switch case style in service worker (#163364)
Use Object.entries for updating styles in webview (#163359)
Small clean up to mainthread and exthost custom editor code (#163350)
Remove unused method (#163361)
Make notebook singletons lazy (#162758)
Compress streams in notebook outputs (#160946)
comment is an array (#163348)
Telemetry API (#160902)
Finalize localization API (#163344)
Use `map` instead of objects for storing contributions and actions (#163342)
Document webview view service (#163341)
Start optimizing DebugService creation (#162879)
Normalize resources when checking valid roots (#163327)
Avoid * activating ipynb extension (#163325)
Add allow list of valid notebook command uris (#163322)
Also make getEditorActions return an iterable instead of an array (#163320)
fix #163317 (#163319)
update custom menubar to show toggle title info (#163315)
fix memory leak and switch to use disposableStore (#163022)
Make returned editor contributions an iterable instead of an array (#163309)
- add download api to ext mgmt service - support verifying signed extension in remote when downloading locally
Search Focus Cleanup (#162903)
pause/resume suggest widget events when doing splice and select/focus (#163307)
address pr comments
Add support for transparency in `editorOverviewRuler.background` (#163302)
Exclude code lens contributions from result merge editor (#163301)
change the default log format (#163268)
Toggle word wrap state (if defined) also on the other side when opening a diff editor (#163297)
Push an undo stop before committing an inline suggestion (#163296)
fix an issue with sticky scroll failing to pick an outline group (#163293)
review feedback
bring back switch output action (#163264)
Update language-configuration.json (#163182)
Revert "Debt - extract Continue On picker and contrib into separate class (#163002)" (#163251)
Run all webview panels of a given viewtype in the same origin (#163236)
fix build
Make sure we still clear DisposableMap if dispose throws (#163226)
Make debug start button wider to match other workbench menu buttons (#163217)
Allow kernel source command to throw (#163216)
Try out a new razor grammar (#163212)
move editor features to submenu in view menu (#163209)
Remove Snakefile from being classified as Python (#162749)
View badge extension API documentation wrong (#163202)
address pr comments
address pr comments
Remove unused field (#163199)
Adopt `trackDisposable` for `DisposableMap` (#163200)
Bump milestone in endgame notebooks (#163198)
Start enforcing the tunnels API (#163187)
fix command id for showing output channel (#163185)
Update xterm.js
Revert "Revert "update inno_updater to 0.9.0 (#162933)" (#163156)" (#163178)
use registerAction2 (#163174)
speed up tests (#163171)
Revert "update inno_updater to 0.9.0 (#162933)" (#163156)
Define classifier rule (#163146)
promote filter action to view pane (#163132)
xterm-addon-webgl@0.14.0-beta.20 (#163021)
Don't clear the texture atlas multiple times
Revert change to init renderer before open
Use for const of in onOsResume
Refactor DebugHover so it stays properly in place (#163012)
Lightly modernize quick pick styles (#163011)
Add DisposableMap helper (#163006)
testing: ensure discovery happens before "run at cursor" executes (#162980)
Debt - extract Continue On picker and contrib into separate class (#163002)
Use submenu for switch output action (#162966)
Improve precondition
Expose show texture atlas command
Polish walkthrough star icon styles (#162979)
Hide failed to activate message when it didn't try
Sanitize shell integration early
Load terminal renderer addon before open is called
Update xterm.js
Debounce event handler on notebook editor open. (#162975)
Properly implement disposeCompressedElements (#162972)
Update aria label to match explorer (#162951)
update distro (#162959)
skip processing if no filter (#162956)
Debt - implement Download command in core (#162781)
Move "H.264/AVC Video Standard" to cgmanifest.json and remove unused licenses from the store (#162955)
Treat removing keybindings with `when = true` as if they wouldn't have a when clause (#162945)
fix splitview scroll perf (#162941)
updating tree.indent should be reflected live (#162937)
Stip quotes when parsing `in` expressions (#162934)
update inno_updater to 0.9.0 (#162933)
delayed service shouldn't be created by early listeners (#162928)
avoid :hover styling when dragging from a list (#162918)
remove microtask delay when refiltering suggestions (#162744)
Add spaces to required fields (#162875)
align setting to search collapse/expand setting
Small cleanup of dispose (#162906)
debug: remove timeout connecting to renderer (#162899)
testing: use real test item instances if available in command args (#162898)
Pick up latest versions of eslint (#162896)
testing: make sure actionbar is visible on list row focus (#162891)
testing: focus to file when diff is opened (#162894)
Add documentation and clean up IWebviewWorkbenchService (#162792)
Align "Show welcome page on startup" checkbox elements (#162887)
Mark arguments to `WorkspaceEdit.set` readonly (#162888)
Update Get Started `h2` font weight (#162883)
no telemetry needed when task end event gets fired twice (#162861)
Developer command for reloading notebook webview (#162872)
log more info when tasks to terminate is not found (#162839)
Pick up latest TS version for building VS Code (#162786)
Bump version (#162864)
Update xterm again
Update src/vs/workbench/contrib/terminal/browser/terminalInstance.ts
update localize info to fix linter issue
Update column names in 'Feature Contributions'
are -> aren't
replace registerWorkbenchAction with registerAction2 in search (#162778)
Add subtle border radius to inputs and dropdowns to match buttons (#162795)
Update xterm.js
clear quick fix decoration appropriately (#162701)
Update src/vs/workbench/contrib/terminal/browser/terminal.ts
fix #161558 (#162574)
Document remaining ITerminalInstance methods
Add test for passing args through
Include args in fixed git similar command
Allow separators to have buttons (#162798)
#155990 add more logging (#162837)
simplify process kill (#162833)
fix `Extract Telemetry` step (#162832)
Support format2 (#162785)
#155990 Improve extension merging (#162829)
send telemetry about git-exec duration (#162731)
refactor show release notes action (#162823)
remove `quickSuggestions` team setting (#162811)
Remove unused "extensions" output channel (#162796)
üíÑ IWorkspaceTrustRequestService delayed insta (#162720)
Debt from previous save dialog file filter fix (#162799)
Adopt MenuId.EditorContent in debug (#162797)
Always show kernel picker. (#162790)
Minor quick pick style updates (#162789)
Remove console.log (#162784)
Re #162713. Keyboard Layout move to registerAction2 (#162780)
Pick up latest markdown language service version (#162777)
Remove unused "Extensions" output channel (#162774)
return `false` if `workspaceFolder` is undefined (#162746)
Switch to registerAction2 (#162768)
fix run task bug (#162753)
address pr comments
address pr comments
debt: remove usages of registerWorkbenchAction (#162762)
search performance improvements (#162405)
Comment button blinks while typing sometimes (#162755)
localize category string
fix leak and missing ctx-update after model change
improve search smoke test (#161652)
fix tests
remove usage of `registerWorkbenchAction` in update world (#162740)
Move to registerWorkbenchAction usage in terminal
manually set editor focus after returning from snippet-picker (#162735)
Enforce yarn version (#162610)
fix treeshaking failure (#162723)
track duration of `setContext` API command invocation
fix telemetry annotation for freeze event
have a toggle-title for toggle sticky scroll (#162717)
insta :lipstick: (#162714)
use common action categories in a few more places
move common action categories into its own file for better re-use
respect auto-save setting even for single file edits
finalize `WorkspaceEditMetadata` api
Don't show unbound breakpoint indicator when breakpoints are deactivated (#162700) (#162708)
API feedback (#162704)
use timeoutsec and log between irm and ea (#162695)
Bring new actions changes to recent quick fixes
centralize decoration hover code, add hover to quick fix decorations (#162248)
Add Close tab action and make it default
add l10n to notebooks (#162690)
Use `productService.downloadUrl`
add completion/failure task audio cues (#162350)
support multiple actions for git similar command (#162668)
Polish code actions widget styling (#162685)
Remove extra enums (#162686)
remove unused PNGs (#162683)
Update codicons (#162679)
Add vscode-dev-chrome-launcher repo to notebooks (#162680)
Disable Privileged ports for OSX (#162662)
Update grammars (#162673)
testing: fix breakage if item has same ID as test controller (#162620)
menu bar picks up toggle-title information (just like menu item actions) (#162672)
cli: point docs to the new RA extension ns (#162500)
Use canonical URIs for tab IDs (#162661)
Reference correct setting in property description (#162663)
use fakeTimers for extHostDiag-tests, https://github.com/microsoft/vscode/issues/134972
use fakeTimers for event tests, https://github.com/microsoft/vscode/issues/134972
fix rendering/UI for `./scripts/test.sh --dev`
make `registerSingleton` only accept `InstantiationType` or `false` (#162654)
# simplify response
clean up (#162649)
Add 'reopen with' to open editors context menu (#162623)
testing: remove redundant parent in InternalTestItem (#162621)
Allow better canceling of extension page rendering (#162622)
testing: show last message per line, simplify logic (#162617)
Update profile indicator font size and weight (#162616)
Refactor actions to allow returning command or uri only
fix: give focus to testing view correctly (#162606)
Add tests for git two dashes
Add did you mean with 2 dashes git quick fix
remove dead code
support `NoHide` mode for workbench toolbar
Filter testing tree when test items are updated by extensions (#162169)
Some Cleanup (#162593)
Add __vsc_prior_prompt2 (#156140)
Don't call super withing keybinding input matches (#162588)
Add extension signature verification service
Resolve `es5ClassCompat` performance issue (#162583)
update notebook milestones (#162579)
fix tests
use new, simpler way of showing context menu (fresh from the press)
Git - fix commitInProgress context key (#162562)
fix #162464 (#162564)
build: use swiftshader on macOS CI (#162568)
Engineering - Add reason filter to issue notebooks (#162560)
Enables experimental diff algorithm for merge editor. (#162559)
Engineering - Update setting (#162558)
make sure VSCODE_RELEASE works even if quality is frozen (#162556)
delayed IExtensionUrlTrustService, (#162554)
Update schema with new properties (microsoft/vscode-remote-release#7278)
fix debt/issue with symbol navigation for inline hints (#162545)
Properly fire selection change event when switching from a dynamic config to a configured config with the same name (#162501)
Use correct context key service in code action widget (#162478)
testing: add support for jumping to test messages in terminal output (#162406)
adopt `showContextMenu`-users that have been using `createAndFillInContextMenuActions`
add support so that `IContextMenuService` can open with just a menu identifier
StickyScroll to StickyScrollContext
Changing StickyScroll to StickyScrollContext
Breadcrumbs can now be toglled from the menu that appears by right clicking on the sticky scroll
Using StickyScrollContext instead of StickyScrollMenu
for disable renderer cpu profiling, keep long task telemetry (#162307)
# add standole service isApplied
CC enablement doesn't influence custom titlebar enablement (#162432)
# Provide correct response to applyEdit()
Git - Rename git.fetchBeforeCheckout to git.pullBeforeCheckout (#162303)
check artifact size after download and extraction (#162407)
IntelliSense in JSON keyboard shortcut editor doesn't work for non-default profiles
Accept merge with conflicts dialog (fix #162296)
Allow for a controller to be both selected and suggested as suggested items get specific UI precedence.  (#162365)
make sure tree renderers share indent guides collection (#162400)
list find: remember last input (#162398)
List find + breadcrumb fixes (#162394)
fixes #160272 (#162358)
Remove unused disposable in template (#162271)
Don't show account badge if user already actioned Edit Sessions via Continue On once (#162373)
for now disable toolbar animation (#162368)
add run code web launches (#162364)
Adding context menu on the sticky line
use max border radius to show like a pill (#162360)
Don't allow negative numbers in view badges (#162359)
#161791 better fix - use current profile (#162357)
Addresses #162191 by not hiding conflict markers in the result editor (#162355)
Improve wording in protocol url open dialog (#162273)
prevent hiding of actions of the global panel part menu (#162335)
Addresses #161587
set `git.mergeChanges` context key for all repos, not just one (#162339)
Remove unneeded if, clean up types
update distro (#162326)
Allow opt-in multi-line quick fixes
Adopt new Notices format (#162324)
Revert "Allow opt-in multi-line quick fixes (#162189)"
Edit for the slight ambiguity in wording when adding untrusted files to trusted workspace (#161168)
[html] Sytax Highlighting is way off with new line after event handler (#162319)
Addresses #162112 (#162321)
give menuIds to setActions, adopt for composite panes (#162317)
Revert "perf - log slow running workbench contribs (#159656)" (#162312)
Swap auto scroll lock/unlock icons (#162264)
Git - Use modal dialog after cloning a repository (#162306)
Update README.md
Update README.md
remove forgotten console.log (#162297)
Update devcontainer schema for `customizations.codespaces.openFiles` (#161637)
Search Tree - file order changes when switching from list to tree (#162270)
add to my-endgame (#162280)
Make sure we always reset the code action widget context when the widget is hidden (#162278)
Allow opt-in multi-line quick fixes (#162189)
bind `configure` function so `this` is not undefined (#162245)
add audio cue for terminal quick fix (#162226)
Update xterm
Search Tree Performance - FolderMatches and FileMatches (#162257)
bump distro (recommender-wsl update) (#162258)
Pick up final markdown language service 0.1 release (#162256)
Revert "stop shipping build-only dependencies (#162172)" (#162254)
Deprecated settings show up with undefined label (#162145)
Use correct theme color name (#162238)
fixed bug with collapsing compressed nodes (#162222)
Update Python source highlighting example to be more idiomatic (#154013)
Add explicit "inherit" setting for fragments links (#162231)
remove unused entry  (#162237)
rm length conditional from get output match (#162225)
experiment setting for nb overview (#162223)
- Add `_isFakeAction` as a workaround to noop-actions that are contributed to menus but that don't do anything (#162220)
fix #162044 (#162215)
fix https://github.com/microsoft/vscode/issues/161394 (#162213)
add logging for #162124 (#162202)
tweak animation for menu items that are currently being configured (#162193)
disable `EditorContent`-menu for embedded editors, ignore the `FloatingClickMenu`-contribution for notebook code edtors (#162186)
check basename, not separator and name (#162174)
Scan up 30 lines for free port quick fix
stop shipping build-only dependencies (#162172)
fix #161618 (#162171)
Install all outdated extensions action (#162170)
Making the stash visible by changing the CSS parameters
fix #161791 (#162158)
Changing the z-index of the find options widget so it appears above the sticky scroll widget
Git protocol handler improvements (#162144)
Add `$schema` to `cgmanifest.json` (#159779)
fix #161961 (#162136)
Revert "Engineering - use specific image version (#160878)" (#162052)
Rename image-preview extension to media-preview (#162093)
Don't prompt for auth if the auth session that the user previously used for edit sessions is no longer available
Various terminal quick fix fixes (#162083)
fix quick fix css (#162084)
Add terminal quick fix to commands to skip shell
Improve free port messages
focus on first item in quick fix menu (#162064)
Pick up latest TS 4.8.4 recovery (#162059)
Add playsInline to video (#162065)
tweak regex for git similar command (#162057)
tweak regex for create PR (#162055)
Update xterm
fix #161933 (#162029)
Change "load all" to "load more" (#162015)
show correct path for install dir warning (#161996)
badge should not allow decimal values (#162001)
Update inserted/removed diff character background (#161275)
show builtin extensions if the require an action (#161986)
File snippets for HTML and PHP (#161881)
Prevent exception in attachToElement
Auto releasing a build needs peer approval (#161981)
add Cargo.toml for inno-updater (#161976)
Badge value is not type validated (#161966)
update distro (#161957)
Run OSS tool (#161956)
debug: bump js-debug (#161898)
Unit test failure: TextFileEditorModel save() and isDirty() (fix #161886) (#161891)
Search tree in multiroot doesn't collapse to one below root (#161863)
Delay custom editor service (#161871)
`Show Edit Session` should always be available in palette (#161866)
Update inlay hints contrast (#161859)
Bind `isMobile` context key (#161854)
Search Tree Compression (#161546)
Need to spread the array for format (#161852)
[css] use findDocumentSymbols (#161847)
fix styling (#161844)
rearrange import and export actions (#161843)
Don't keep hover visible if it isn't sticky (#161839)
Not add '[' to ipv6 host when '[' exists. (#157009)
Ensure quotes are stripped from cwd
[json/css/html] update services / deps (#161831)
dispose of decoration on run action, not after click (#161813)
Make some more services lazy (#161827)
Improves merge editor code-lens (#161830)
don't try shell integration for winpty (#161821)
contextual action -> quick fix (#161638)
update initialText in reused terminal before showing it (#161818)
Allow free port to run on any command (single char+)
fix search unit tests using FileMatch createInstance (#161817)
fix: propagate log level to client
add create temp profile action to create picker (#161810)
rev vscode-nls to version that doesn't ask for vscode-nls-web-data (#161819)
enable syncing profiles (#161814)
skip test on windows  (#161794)
show the current short name in the input (#161812)
show the profiles menu like other menus (#161803)
tweak name to reset all menu hiding (#161801)
Push action required extensions to the top and allow to ignore updates (#161577)
represent default profile (#161799)
Ask for edit sessions auth when coming from Continue On (#160843)
for login shells, reset `zdotdir` to user's always (#161657)
do not delete extensions not installed by VS Code (#161781)
Move Edit Sessions commands and settings out of `experimental` namespace (#161739)
tweak command center rendering (#161773)
Include applicationName in zsh shell integration folder name
fix context (#161772)
The properties language uses a Java icon in the Seti theme (#161770)
Enforce all properties on output matchers
iterate through all providers before returning (#161649)
[folding] skip line number change test when restoring state #159032 (#161768)
Update xterm
Default to config icon for the property language (#158454)
Add schema for typedoc.json to default jsonValidation (#157592)
Add jsonc registration for TypeDoc config (#157362)
do not support installing remote extensions in a profile (#161765)
Enable auto-close of multi-line comments in cpp (#160357)
Lag/Freeze when running `workbench.action.openRecent` on not existing path (fix #161664) (#161742)
collect command and timestamp, collect timestamp on long task, collect visible views, collect editors
Allow filter widget some vertical movement (#158549) (#158583)
fix #161726 (#161759)
disable/remove the fib-freeze action
Engineering - Update endgame notebooks (#161745)
restore `separator` class for Separator item (#161746)
chore: update electron@19.0.17 (#161663)
tests - align tests on all platforms (#161696)
Invalid regular expression: /[A-Za-z0-9]{4}.c++/: Nothing to repeat (fix #161733) (#161740)
fix errors in unit test output (#161712)
Use profile scoped services in extensions sync (#161713)
fix #138815 (#161613)
fix web ext mgmt service to be profile aware (#161709)
Correct handling of ZDOTDIR variable to avoid crashing terminal (#161433)
Only show warning if edit session contents differ from local contents (#160464)
keep short record of commands that ran before a long task occurred, use better session id to correlate things
add detection for integrated cli, verify
fix turn on sync - sync remote profiles that do not exist locally
Implements command to show base at top/middle in mixed column mode.
cli: implement better self-updating
Tag existing events with experimentation info in typescript-language-features (#161463)
dispose of quick fix decoration when the next command is run (#161641)
cli: run ci on pr
cli: use hard tabs to align with vscode style
save/restore viewstate only when meaningful state changes (#161646)
reposition search tree button (#161632)
added IW commands to palette (#161533)
update extension model to focus on last cell added through input box (#161630)
Use IExtHostInitDataService to get the language (#161625)
cli: get builds in order
fix diff css
Tree Element Not Found error in search tree (#161626)
Update overview once per frame
Allow video attributes on rendered markdown (#161631)
hook up overview ruler with notebook diff editor
Expose scrollable element delegatePointerDown in List View
Expose data-vscode-theme-id attribute in webviews, fix #149661 (#154635)
web - only export types not interfaces (#161609)
Create terminal find widget lazily
Adjust tests to work with exitStatus
explore auto-renderer profiling
Ensure terminal view is open before calling setVisible
keep syncing profile behind a settings flag (#161608)
fix #161239 (#161600)
fixes #161528 (#161605)
Update xterm
fix compilation errror
Match quick fix on exit status instead of code
Revert "Bracket support for #if and #endif in cpp"
pin active editor when comparing with base (#161583)
Engingeering - Lazy initialization for ISCMService, ISCMViewService (#161578)
improve doc (#161575)
fix showing profile icon (#161569)
Adds hidden settings (#161568)
sync api to access extensions (#161519)
merge editor - address some issues around `save` / `revert` (#161557)
Only do top/bottom drag scrolling when the mouse is outside the editor to the top (#161562)
fix change short name command title
temporary profiles (#161553)
Display warning banner when workspace lies within appRoot (#138815) (#161534)
Disable test for ContextualActionAddon (#161549)
Search Tree (#161022)
Align list of supported tags in rendered markdown (#161544)
Rename codeActionMenu to codeActionWidget (#161540)
Show better error when rename fails in md (#161525)
Single primary kernel action should be executed automatically (#161535)
Add more clear message about webviews not being supported in non-secure contexts (#161531)
Reset visibility instead of explicitly making output elements visible (#161529)
add basic contextual commands (#160952)
update distro (#161524)
cli: get update endpoint from build
profiles syncing (#161523)
add l10n JSON schema (#161518)
Trace for notebook editor markup warmup (#161516)
Show lightbulb widget at consistent position (#161508)
add border to profile item (#161505)
comment icon rendered on newly added lines above comment (#161497)
fix npes (#161496)
Differenciate suggested kernels and fallbacks (#161448)
Bind the lifecycle of submenus (and listeners) to `this.menus` because that map gets cleared repeatedly
update distro (#161495)
point search to new url (#161492)
profiles ux feedback (#161488)
extract `MenuInfo` from `Menu` and let sub menu use the former only, no more mutable sub menus but no more create/dispose of them too
make `Separator` implement `IAction` and not extend disposable `Action`
Tree views always start with wrong size (#161476)
do not show default profile (#161472)
web - allow to specify a full editor layout as embedder (#161324)
debt - use `Promise` over `Thenable` (#161464)
use DebounceEmitter but this time correct
Return `IMenuChangeEvent` but don't use DebounceEmitter.
web api - stick to `import type` (#161459)
Improve Settings Profiles UX (#161422)
Revert "Add information about type of change to `IMenu#onDidChange`" (#161461)
testing: greatly improve decoration syncing (#161446)
Measure input latency and text render time
Pick up latest TS for building VS Code (#161426)
Allow CodeActionMenu to be reused outside of editor (#161425)
Allow _ in notebook markdown links (#161437)
Mark more fields in notebook types as `readonly` (#161428)
Finalize markdown diagnostics (#161427)
Use any for the args since we will stringify whatever is passed in (#161421)
Use hideFind() and showFind() when retainContextWhenHidden enabled (#161174)
Do not trigger the hover operation when decorations change because decorations change too often (#161416)
simplify CC rendering - use single item instead of two (#161417)
Keep hover visible when the mouse is getting closer to it (#161407)
chore: use plugin executable for utility process on macOS (#161102)
Inspect shall show the real values (#161327)
1 vs n extensions wording
fix badge
Indent using spaces ü§∑‚Äç‚ôÄÔ∏è (#161405)
small fixes
Decide on instantiation for `IAuthenticationService` and `ILanguageDetectionService` (#161366)
Git - Checkout command aria label now includes the branch name (#161385)
Add group to copy vscode.dev link in share (#161400)
Bump distro (#161401)
merge editor temp model (#161315)
fix more tests
diag - reduce trace spam from file resource locks (#161399)
- fix tests - clean up
Add information about type of change to `IMenu#onDidChange` (#161397)
move checkbox.ts to views folder (#161393)
tactical fix #161334 (#161389)
Only do the `/build/` folder check on OSS, where we don't mixin (#161381)
Retire basic checks GH action (#161376)
First scroll and then update the selection when dragging (#40890)
Build: bundle / concat entry points (#161161)
:up: `playwright` even more (#161374)
Add missing build file (#161373)
tests - update `playwright` (#161367)
Better handle moves of multiple markdown links (#161354)
rename l10nBundleLocation to l10n (#161364)
Remove unused methods (#161357)
Clean up code action UI code (#161356)
fix #159863 (#161353)
implement log api feedback (#161343)
set timestamp always when installing (#161345)
Bump distro. (#161346)
Pick up newer `vscode-tas-client` version (#161344)
Also re-search if target element not found (#161332)
on mac don't use `no-drag` for command-center (#161340)
Rename debugger uiMessages to strings, and document in package.json (#161326)
Don't fire empty updates when a pausable emitter is resumed (#161269)
Add types to editor core commands arguments
Allow escape sequence logging on web
cli: update problematic dependencies
ignore rust code when doing hygenie check
move cli to top level
Rename Extension Updates panel name (#161319)
notebookControllerAffinityHidden proposal to allow for hiding of notebook controllers per document (#161145)
`server-main.js` should respect the `--port` argument (#161254)
create events
honor window.title/titleSeparator customizations in command center (#161317)
restructure reload required sync
Disable merge-conflict commands for 3wm-editor (#161304)
Convert NotebookCellStatusBarItem test from integration test to unit test (#161274)
tests - do not `retryCountOnTaskFailure` playwright (#161299)
build: include the integrated CLI in product builds
Revert hiding some notebook toolbars (#161136)
Show execution order when it's present, and no kernel is selected (#161285)
Allow grouping of kernel source commands (#161281)
Surface machine name in edit session debug view (#161279)
exclude rust cli from linting/hygenie
initial import of code-tunnel/cli
testing: fix error when updating test items without URIs (#161272)
Show view always but collapsed if no updates (#161251)
Mark a few properties as readonly in proposal (#161262)
Try to unify notebook rendering (#161261)
Support log output channels for extensions (#161249)
Finalize view size proposal (#161244)
Enable WCO on OSS in main process (#161158)
tabs - only update `scrollLeft` when `scrollLeftChanged` (#34745) (#161240)
Make some services delayed (#161236)
Apply recent learnings about array `filter` (#161233)
add "Reset Menu" to editor and view/pane menus
add option for an inplace "Reset Menu" command
experiement with subtle config-mode animation
support to hide/show submenus too
Cannot read properties of null (reading 'getModel') (#161229)
Cannot read properties of undefined (reading 'commentThreads') (#161227)
Profiles: fix setting install time in metadata (#161222)
remove unused interface
Add `IMouseTargetOutsideEditor.outsideDistance`
Add `IMouseTargetOutsideEditor.outsidePosition`
Better handle markup rendering errors in noetebooks (#161153)
support syncing profiles (#161208)
Clean up structure of markdown extension (#161148)
Skip ul and ol when highlighting selected markdown element (#161139)
Adopt latest loader (#161129)
Avoid tweaking command arguments when they are already provided by extensions (#161154)
Allow underscores in rendered md headers (#161149)
Pick up latest markdown language service (#161142)
checkbox api event naming change (#161131)
Cell attachment cleanup tool improvement in diff editor (#161132)
Add Refactor.move and Refactor.inline to code action widget (#161134)
Pick up latest notebook renderer API typings (#161135)
Pick up latest TS nightly for building VS Code (#161127)
Pick up TS 4.8.3 (#161126)
Throw when invalid parameter hint label is passed in (#161125)
Clean up duplicate menu registration in cell run toolbar (#161124)
Introduce Conflicts view (#161116)
Revert "Use `esbuild` to bundle some CommonJS main files (#160957)" (#161118)
chore: update distro (#161117)
Update service registration (#161115)
small fixes
Set IWorkbenchThemeService as Eager. For #159178 (#161113)
update vscode-uri, fix links in untited (fixes #147788) (#161108)
show a disabled placeholder action when right clicking a none MenuItemAction, e.g the `...` button (#161101)
build - debug playwright install (#161099)
dev - fix user data path running out of sources (#161097)
Have createAsset not short circuit (#161030)
tweak hiddenItemStrategy for run toolbar
tweak delete cell toolbar
show a disabled placeholder action when right clicking a none MenuItemAction, e.g the `...` button
Revert "use `WorkbenchToolBar` in notebook editor toolbar"
use `WorkbenchToolBar` in notebook diff land
use `WorkbenchToolBar` in notebook editor toolbar
Enable git.fetchBeforeCheckout (#161092)
Cleanup
use `WorkbenchToolBar` in codeCellRunToolbar
web - align our html main files (#161091)
use `MenuWorkbenchToolBar` in BetweenCellToolBar
Use `esbuild` to bundle some CommonJS main files (#160957)
use `WorkbenchToolBar` in cellOutput but not `MenuWorkbenchToolBar` because some custom action things are going on
Use `MenuWorkbenchToolBar` in interactive editor
Small changes extensions updates view (#161077)
align details for input 1 and 2 to the left (#161082)
implement syncing profile and its data (#161078)
chore: update electron@19.0.17 (#161027)
preserve focus when self-replacing 3wm editor (#161076)
mark keybinding service as Eager because it reads extension points and because it installs "the" keyboard listener, (#161075)
Cannot read properties of undefined (reading 'fileOperationResult') (fix #161061) (#161067)
fixes #161056 (#161066)
adopt `WorkbenchToolBar` for composite-, panelPart, and viewPane fyi @sandy081 @sbatten
adopt `WorkbenchToolBar` in titleControl fyi @bpasero
some `WorkbenchToolBar` tweaks
Extension Badge represents also reloadrequired
split things into `WorkbenchToolBar` and `MenuWorkbenchToolBar`
add `WorkspaceEditMetadata` and use it for `applyEdit`, (#160996)
tests - remove `snippetWorkspaceEdit` usage (#161043)
xterm@5
Reapply JavaScript and Node.js walkthrough (#161003)
Ensure ExperimentationService gets disposed. (#161004)
Handle EACCES
Remove unneeded !
Update src/vs/platform/terminal/common/capabilities/commandDetectionCapability.ts
add audio cue for task end and terminal bell (#160828)
Recognise windows-controls-overlay display mode in isStandalone() check (#160696)
Polish clearing command before run on unix
Git - Add the ability to fetch a branch before it is checked out (#160181)
Send ctrl+c before running a command unless there is no input
support default `$ZDOTDIR` in `.zshenv` (#160928)
set items after entries are resolved (#160936)
properly listen/subscribe to run events, use more readonly in `ToolBar`
when setting an IActionRunner on the actionbar it needs to re-wire its events and disconnect from the old events
:lipstick: rename to `onWillRun` and add readonly to emitters
truely hide item from top cell toolbar
adopt `WorkbenchToolbar` for notebookTopCellToolbar
Remove string replace that didn't do anything
Git - Do not override SSH_ASKPASS for the terminal (#160935)
Button - Use single loop to set button content (#160933)
use `WorkbenchToolBar` in codeEditorView (3wm)
change default assignee for debug issues (#160974)
Clean up server-main.js (#160094)
always do keybindings, document options
Rework how markdown server works with documents (#160948)
Revert "JavaScript and Node.js walkthrough" (#160959)
Pass element to the JS preEvaluate renderer hook (#160851)
initial cut of `vscode.l10n` (#158328)
Disable notebook smoke tests again (#160942)
Don't report debug adapter error responses (#160940)
Remove requestAnimationFrame shim for old browsers (#159817)
We no longer support old versions of edge that use these (#159723)
Reenable a couple notebook smoketests (#159521)
change git.mergeEditor setting to be false (#160923)
Commit dropdown button uses text-overflow (#160834)
Set traffic light height differently for Catalina (#160919)
GHES oauth flow support (#160679)
pass mark properties in to create decoration (#160840)
Don't register git protocol handler till after git commands are registered (#160857)
GitHub - Tweak working of the GitHub publishing welcome view (#160916)
JavaScript and Node.js walkthrough (#157965)
Remove notebookEditorEdit proposal requirement (#160912)
Instantiate ExperimentationService in typescript-language-features. (#160877)
Pick up latest Markdown language service (#160831)
Support syncing profiles manifest (#160907)
Add envShellEvent to vscode-api-tests
üíÑ Improve style
üïµ Check extension has enabled `envShellEvent` proposed API
üî® Add `envShellEvent` to API proposals type
üî® Move new definition into a proposed `.d.ts`
Update src/vs/workbench/api/common/extHostTerminalService.ts
üî® Add `onDidShellChange` to the API definitions
üéÅ Add `onDidChangeShell` event to ext host
Add open preview enabled context (#160898)
make it easy to send the `workbenchActionExecuted` telemetry event
add `WorkbenchToolBar` which works with a `MenuId` and not with `setActions`
allow action- and toolbar to return action from HTMLElement
There is no need to pass in `nodeMain` when passing in `baseUrl` (#160893)
Git - Improve git fetch command for repositories with multiple remotes (#159644)
tests - forgot to move encoding test to integration (#160876)
Results for "Find all references" in untitled doc open new untitled doc (fix #160783) (#160873)
Engineering - use specific image version (#160878)
cleanup
fix terminal contribution schema
Removed erroneous references to PREFIX environment variable
Reapply https://github.com/microsoft/vscode-distro/pull/456
Unify Stop/Interrupt in core and jupyter (#160738)
Enhance IUserDataProfilesService to support settings sync scenarios (#160816)
Use better color theme vars in code action widget (#160820)
filter tasks correctly and more simply (#160574)
don't spam Main log with Errors that we can safely ignore (#160817)
Stop adding notebook-triage labels. (#160818)
Use Uri.Utils (#160780)
joh/insta print cycles (#160813)
renderLabelWithIcons improvements (#160814)
feedback - move profile storage serice into userdatasync layer - let storage service tells if the given profile is used or not
Closely align custom tree decorations to explorer (#160795)
Timeline: Codicons are off (#160797)
fix tests
No tree view with id 'github:compareChanges' registered. (#160782)
TreeError [latex-workshop-structure] Data tree node not found: [object Object] (#160784)
Use title case for "Open File Or Folder" (#160786)
look up alternative commands in the right map
checkbox state naming
added tests
fixes #160562 (#160775)
cleanup
update tests
feedback
Update src/vscode-dts/vscode.d.ts
Recently updated fixes
:lipstick: (#160763)
Better paired operators for R (#155882)
Reduce duplication around declaring code action groups (#160741)
more robust credentials service (#160725)
Another approach to stop language detection from stomping over changes (#159782)
Compress notebook output streams before rendering (#160667)
Add CodeActionKind.RefactorMove (#160730)
Cleaning up code action menu code (#160724)
Remove notebook content provider save and backup functionality (#160581)
Sync getting started and open recent (#160719)
focus on most recent IW input if not in IW (#160557)
don't add initialization edits to undo stack
more cases for restricting undo/redo
don't allow undo for read-only notebooks
enabled core cell delete for IW and undo operations
review feedback
xterm@5.0.0-beta.60
Update windows-process-tree (#160545)
Only persist session when icon update was user initiated
support pinning in `Run Task` quickpick (#160565)
support collections to UserDataSyncStoreService (#160660)
Write selection text to hidden textarea on macOS (#156717)
Add `isMobile` context key (#160676)
editors - log error from `revert` operations (fix #160610) (#160681)
perf - resolve paths in parallel on startup
perf - make window opening `async` and avoid sync disk access
Change type name for less confusion
Tooltip for checkboxes
undo change
use storage service if profile is same
fixes
clean up
:lipstick:
Use StroageService to read and write
Implement profile storage service - read and write profile storage data for a profile - listen profile storage changes - adopt it in global state sync
perf - avoid redundant `statSync` when opening files via macOS dock
debt - avoid sync fs in `registerWorkspaceBackup`
debt - avoid `statSync` when computing workspace identifier
perf - make resolving untitled workspaces async (#16381)
Remove dynamic config from "recent" when it is added to launch.json (#160583)
Support creating image in workspace when pasting image data into markdown (#160554)
Git - Disable git.init command, and a welcome view that uses the git.init command in codespaces (#160597)
Use selection border in code action menu (#160582)
Remove duplicate enter handler (#160339)
Update label assignments (#160579)
Suppress browser save events in webviews (#160563)
adding brace completion for snippet inline completion item
Pick up latest TS nightly for building VS Code (#160560)
Finalize the webview context menu api (#160561)
Disable WCO by default in main process (#160550)
discard filter and show all tasks when no matches are found (#160552)
notebook image cleaning automation (#159212)
GitHub - Disable command & view in codespaces (#160546)
Show custom keybindings in code action widget (#160449)
Render ThemeIcons (codicons) in markdownEnumDescriptions (#160496) (#160498)
Revert "Increment global activity badge if edit sessions aren't turned on" (#160537)
Remove enabledApiProposals badge from test ext (#160526)
Git - Add the ability to commit and not execute a post-commit command (#160527)
Sort installed correctly when some don'r have time
Sort By updateDate and local sorting
Engineering - Add timeout and retries to the task to download Electron and Playwright (#160490)
trace - allow to stop tracing via a command (#160489)
backups - fix `hasBackups` for empty windows (#160480)
backups - :lipstick: (#160478)
add wslFeatureInstalled context key (#160424)
Prepare for syncing profiles (#160455)
Allow editing properties on DocumentPasteEdit (#160469)
Add progress notifications for paste actions (#160468)
Add webm/VP8 support to video viewer (#160459)
Clean up video styling (#160461)
Add andrea to "search" label assignment (#160467)
Use global ZDOTDIR environment variable (#159783)
add command actions always (#160454)
ignore invalid parameters (#160458)
Revert "Delay PreferencesActionsContribution (#159719)" (#160333)
Add JS notebook renderer hook (#160453)
improve trust handling in tasks (#160362)
Allow passing in custom workspace/parser to markdown server (#160429)
Allow output renderers to be async (#160436)
electron - better handle window errors (#160427)
backups - fix missing `await` in tests (#160425)
fix compile errors
rename proposal, enforce proposal, remove `minResourcesToAutosave`
move `SnippetTextEdit` into vscode-dts
backups - use state service for metadata (#160406)
Skip tab getter tests on web because notebooks are flaky (#160403)
"Create Manual Folding Ranges from Selection" is not in Command Palette when use Chinese (Simplified) (#160400)
Get telemetry data only when it is enabled (#160079)
Update high frequency commands that are not logged. (#160356)
send uris for `git.mergeChanges` context as objects (#160390)
Undo context key service changes because of regression, (#160329)
Prepare synchornizers for profile syncing (#160354)
Update Groovy extension language contribution
avoid calling setContext when not necessary (#160297)
GitHub - publish repository (#160348)
backups - encapsulate empty window workspace id generation (#160378)
Use MD LS for resolving all document links (#160238)
Increment global activity badge if edit sessions aren't turned on
fix issues w run task args (#159632)
Show modal error when git protocol clone fails (#160350)
Add quickpick item button to easily discover and configure setting to disable edit sessions with Continue On
enable adding and navigating to custom marks in the buffer (#158313)
Sign Out -> Turn Off (aligning with settings sync)
Allow existing Continue On users to skip using edit sessions
factor in web to task execution context key (#160208)
Rename Continue Edit Session to Continue On
Make default JS renderer treat js as modules (#160347)
Use ids instead of indexes for resolving data transfer files (#160349)
Update multi select + focus handling (#160342)
Show account menu item to turn on edit sessions
bring back css tests (#160326)
Custom Settings for Search File Decorations (#160223)
Add extension bisect to caused by extension
Refactor code action menu to split up code more (#160249)
extract `SnippetParser#asInsertText` and use to preview snippet text edits
prepare for syncing profiles (#160298)
Git - implement SSH_ASKPASS handler (#159573)
Add `replace` and `insert` factory functions for `SnippetTextEdit`, add `WorkspaceEdit#set` overloads
Git - discover nested git repositories (#159291)
Git - Add merge abort command (#159753)
Add dialog to prompt for overwrite (#160291)
update my-work milestone (#160283)
add `content` property to vscode-dts-defined properties
Bump distro (#160277)
services - set more lazy in main process (#160273)
perf - no longer block for backup metadata writes (#160152)
also use SWC for extensions transpile
consume swc as libaray and wire up into the existing transpiler logic
remove swc as executable task
Support latest md ls (#160228)
smoke - fix log and retry `exitApplication` (#160244)
Vertically align codicons in custom tree view items (#160212)
Incremental naming add `disabled` (#160218)
Handled case with inline disabled breakpoint gets reactivated (#155403)
Re #134853. Support html headers in notebook outline (#160240)
Disable WCO by default (#160213)
testing: fix scrollbar on markdown messages (#159959)
Add code action menu ctrl+n, ctrl+p mac keybindings (#160199)
Using `once` in comment collapse state returns first value (#160192)
Remove reliance on sed -r
Revert "services - set more lazy in main process" (#160202)
:lipstick:
refactor handling profiles from CLI
Re-enable terminal profiles tests
make some more services explicily delayed or eager (#160194)
support `contents` option with `WorkspaceEdit#createFile`
Actually rerender TreeView (#160189)
fix #159577 (#160163)
services - set more lazy in main process (#160188)
Properly use comment API `collapsibleState` as initial (#160187)
fix API tests for new API
Use canonical uris when applying bulk edits (#159067)
add one more API todo tag
adopt lazy services (#160168)
Optional TreeItem Checkbox (#158250)
fix css tests (#160155)
have an explicit `SnippetTextEdit` and all to set them onto a workspace edit
fix tests (#160146)
disable context key event logging (#160145)
perf - cleanup `afterWindowOpen` (#160137)
Refactors merge editor. (#160116)
debt: lazy creation of services in config (#160082)
Git - fix telemetry comment (#160117)
services - prevent eager layout service use (#160103)
[css/json/html] update servers and services (#160108)
Git - Initial repository scan telemetry (#160102)
Remove `IContextKeyService.bufferChangeEvents` because `onDidChangeContext` is now backed by the `MicrotaskEmitter` which make this event drasically less expensive
Reintroducing View Title command arguments (#160092)
add ugly cast to avoid layering check
also set COOP and COEP from webview protocol handler
set CORP header on webview resources
services - adopt `InstantiationType.Eager` (#160087)
Bump distro (#160084)
debt - launch service should not deal with diagnostics (#159845)
Adresses feedback from PR
add more explicit `InstantiationType` to registerSingleton (#160061)
Build: Properly verify signed macOS application bundle (#160056)
debt - remove avoidMonkeyPatchFromAppInsights
debt - force all remote services to be lazy (#159178) (#159972)
Updated support for #if and #endif
use window.openedWorkspace (#159942)
fix #159755 (#159916)
Update xterm.js
Make options internal
fix: dynamic debug of node.js terminal types failing (#159935)
Simplify focusing of active instance
Remove MenuItemAction from terminalMenus
Avoid sync require for loading NLS configuration (fix #159894) (#159895)
Remove MenuItemAction usage in TerminalView
retain non existing view customizations (#159921)
Ensure primary backend is registered before view visibility is handled
Route user to download missing git (#159505)
wip
perf - more lazy services (#159178) (#159899)
Remove ITerminalInstance.findState
Integration test failure: openTextDocument, untitled closes on save (#157897) (#159888)
make timer and context key service lazy (#159882)
unsuccessful attempt to enable COI for desktop webviews
extract some COI handle into network-util, add `--enable-coi` command line flag and adopt in main handler
#149309 wait for tasks recursively (#159850)
improve DI graph (#159849)
Simplify code action menu building logic (#159776)
Extracts menu toolbar logic.
Cyclic service dependency: `TextModelResolverService` (fix #159754) (#159840)
debt - more `readonly` properties (#159841)
Introduces mergeEditorMenus proposal & fixes issues from PR.
debt - use new `EditorContent` menu for "Open Workspace" (#158741) (#159844)
Generate head links for Continue Edit Session (#159833)
Write markdown link setting change to correct scope (#159816)
fix #149309
Implement new behaviour
Default to workspace root when dropping into untitled md files (#159814)
Polish label computer
Make isDisconnected internal
Remove title ready
Make update/refresh property calls private
Doc getInitialCwd and getCwd
Remove ITerminalInstance.addDisposable
Use _register over addDisposable internal to terminal instance
Only use rename externally for changing term title
Simplify focus impl
Remove ITerminalInstance.copyLastCommandOutputNiche impl should live in command instead
Delay interactive window document workbench contribution (#159797)
Update test
Enable edit sessions by default in insiders
Disable resume edit sessions in empty workspaces
Bump version (#159784)
More tightly couple crash reporter and telemetry level (#159775)
Polish to file nesting description (#159773)
Add interaction state change reason logging
Log pty interaction state changes to diagnose reconnect problems
Adding a multi-line comment is jarring (#159766)
Activate RemoteEmptyWorkbenchPresentation on LifecyclePhase.Ready. For  #159675 (#159762)
Await restored lifecycle phase before fetching terminal backend
Delay PreferencesActionsContribution (#159719)
remove `getExtension` workaround (#159758)
add dev-question comment for issue trackers (#159750)
fix #159432 (#159746)
Finalize view badge proposal (#159679)
cleanup - rename (#159737)
Refactor code action widget (#159721)
Have running extensions use the issure reporter instead (#159707)
testing: wire up busy state in serialization (#159714)
small fix in logic
Add built-in video preview (#159623)
testing: improve decoration syncing (#159705)
Improve filePattern to reduce some irrelevant matches
Remove unnecessary file pattern
Distro bump (#159700)
Try fix vscode-zsh tests
Remove only
Open exact matches when a single search result's path ends with the link
inspect-brk main process with renderer process (#159695)
Don't store edit session if no Continue On destination is selected (#159691)
make service instantiation lazy (#159680)
Add expand/collapse all commands for comments (#159674)
references to GitHub discussions for extension authors (#159682)
Lighter weight matches (#159554)
deprate `registerWorkbenchAction` more but make it leak less (#159668)
Skip shell for closeQuickOpen keybindings
add missing JS file
Move almost everything out of the tree view constructor (#159553)
Tooltip doesn't show when hovering over tree icon (#159663)
perf - log slow running workbench contribs (#159656)
comments, todos
undo source patches that aren't needed anymore
Cover other variables too
Improve arg names in terminalIconsEqual
Move all terminal contributions to run on restored phase
perf - disable electron from setting a default menu (#159660)
debt - don't use appendMenuItems for goto commands anymore, also migrate to use `EditorAction2`
UI freeze when trusting/untrusting current folder (fix #159224) (#159258)
use `MicrotaskEmitter` to (drastically) reduce the number of MenuRegistry-change events
Allow ref checkout after protocol handler clone (#159481)
fix: polish windows 7 support eol notification (#159647)
Re-use plaintext markdown renderer (#159627)
Pick up newest markdown language service (#159619)
Pick up latest marked release (#159629)
Always use custom code action widget (#159614)
Bump api notebook milestone (#159615)
Extract default marked renderers to constant functions (#159630)
Update extension enabled tsconfig libs (#159631)
debt - remove outdated code (#159637)
chore: update electron@19.0.12 (#159634)
Move ITerminalInstance.runRecent into its own file
Finalize notebookWorkspaceEdit api (#159613)
Remove border radius on selected text in SCM view  (#159612)
Action lgtm.io alerts in terminal
fix #154090
fix: notify windows 7 support eol (#159546)
Revert "Queue all parts of debug start that can require user input (#‚Ä¶ (#159602)
Update xterm webgl addon
Delay the tooltip hover
Working OSC hyperlinks
Debt - do not expose an unregister method from service (#158641)
New File.. polish (#159570)
Using endLineNumber not startLineNumber, and implementing a custom comparator
Ordering the first set of outline elements in the function StickyOutlineElements.fromFoldingModel. Adding one to the end line number returned from the folding model (it turns out it returns the second to last end line number).
update .mailmap (#159565)
Some explorer commands should ignore nested children (#159563)
providerID has type string or undefined. Using Iterable.find() function.
perf - mark times for creating workbench contributions (#159548)
add perf-marks for handling extension points (#159549)
make to run `buildWebNodePaths` when using transpile-swc
update `swc`
bump `esbuild@1.15.5` (#159533)
:up: distro (#159545)
Registering the widget and the provider
Always dispose test editor even if a test fails
The `TestTextFileEditor` doesn't use editor contribution anymore.
Allow `showTextDocument` to open notebook cell URIs (#158477)
Git - Handle repository paths with a trailing \ character (#159461)
code lens cache can be created delayed (#159531)
perf - update window jump list in new phase `Eventually` (#159536)
perf - lazy create complex RegExp (#159537)
Reduce duplication for image/audio preview (#159507)
Use dedicated renderers for different list elements (#158986)
Re-enable running our eslint rules using ts-node (#159495)
Also apply max-width to videos in webviews (#159500)
Clear passwords that don't decrypt (#159506)
prompt for permission in trusted work space once per folder for auto run tasks (#159478)
get task reconnection to work in remote envs (#159316)
Add rounded corners to extension button actions (#159496)
up max url length to 7500 (#159491)
Update xterm.js
Update src/vs/workbench/contrib/terminal/common/terminalContextKey.ts
Revert "don't unset the terminal focus key after setting it"
Use AggregateError for errors while disposing (#159477)
don't unset the terminal focus key after setting it
Keep dialog open after user clicks on install link
Match SimpleFindWidget behavior with editor FindWidget behavior
Open Insiders install link when in Insiders
Remove
Run our custom eslint rules using ts-node (#157532)
Remove notebook editor edit api (#158988)
perf - avoid `IdleValue` for a feature that is not enabled by default (#159469)
remove unused code (#159467)
Adding additional update function
Changes from review
remove permanently removed composites (#159462)
[npm] package.json latest vue version incorrect (#159315)
Using iterable.first
Changing input to fromOutlineModel
support disposing keybinding registrations, esp when disposing Action2 instances (#159433)
Adding NullLogService into service collection
Update grammars (#159445)
TypeError: Cannot read properties of null (reading 'value') (#159449)
Update tests
Adding a test
Commit action button - do not add separator for an empty command group (#159439)
Engineering - Disable Terrapin (#159441)
Removing the check on the log service
Simple browser opener doesn't work with IPv6 hosts (#159276)
Add terminal instance scoped context
SCM - Enable text dnd for commit input field (#159065)
Align code action command ids with suggest widget (#159349)
Add built-in audio preview (#159345)
`--prof-startup` paths are slightly off (fix #158646) (#159410)
Makes some merge editor dev commands available in browser
Implements commands to recompute merge with git merge-file
Implements result menu
Pick up latest TS for building VS Code (#158420)
Update merge editor diff and word diff colors (#159216)
Pick up latest vscode-markdown-languageservice (#159341)
change -1 to previousStartLine
Pick up 8.0.2 for MD language client (#159319)
Check for unsaved editors before asking to save
When calling `registerSingleton` you must signal if you support (or not) delayed instantiation
Change order of cancellation of token with iteration over different providers
Removing unecessary if check
changes from review
let builds use `transpile-client-swc`
* tweak `createSwcClientStream` to have async exec * add `transpileClientSWC` and corresponding gulp task
chore: update electron@19.0.12 (#159285)
update to latest
don't use --copy-files options has it seems to break BOM
console logs added to be able to observe the origin of the issue
When VScode restart, the window which is fullscreen before should restore normal (fix #159229) (#159254)
tweak suggest status bar height (#159266)
Endless loop in "Open Next/Previous Editor" (fix #159251) (#159252)
Adding check on log service
use common task ID instead of map key (#159233)
Disable new Continue Working On and edit sessions for 1.71 (#159240)
Send a message every 5 seconds to avoid the underlying connection becoming idle (#159239)
Pick up TS 4.8 final (#159238)
Remove stringbuilder code for when `TextDecoder` doesn't exist (#157952)
Revert "Skip folded regions when computing relative line numbers (#155970)" (#159236)
return object, change placeholder
fix for attachment naming within notebook metadata
Transform schemes in remote windows when activating contributing extensions (#159218)
Cleanup
Test
Edit session filesystem provider should implement `IFileSystemProviderWithReadWriteCapability` (#159203)
Comment filtering only seems to work partially (#159185)
Markers - Better fix for #156186 (#159180)
Loop through views less in startup (#159177)
Addresses #158816 (#159164)
change default value of `editor.suggest.matchOnWordStartOnly` (#159163)
argh, still wrong EOL (#159160)
Remove --profile-temp from help section (#159147)
make sure we add offline_access when creating sessions (#159116)
debug: bump js-debug to 1.71 (#159109)
schedule clean up after 10s (#159169)
trigger only if there are listeners (#159166)
changing the check in the migration
removing editor. from the migration
Remove Title Command Arguments from August Iteration (#159076)
SCM - Ensure commit action button text is not bold (#159146)
work in progress
First kernel change not re-rendering markdown cells (#159115)
Look in Program Files x86 for git bash detection
Improve windows link space fix and add test
Revert "Simplify handling of local file links"
Simplify handling of local file links
Update xterm
focus terminal for run recent when alt is pressed (#159107)
don't activate task providers on request to reconnect tasks (#159090)
fix setting description for #159091
add logging (#159086)
Update list of team members in my-endgame notebook (#159082)
fix conflict demo
Rework whether to reuse auth for edit sessions (#159069)
_showChangeIconQuickPick is no longer called
focused element and selected elements as arguments for title commands (#158916)
move terminal decorator icon ids to terminalIcons
Update childrenStartLines with a for loop instead of a map
Add swift to supported darwin document types (#159002)
Updating the tests since the provider has changed
Initialize Offline contribution on Restored phase (#158261)
Improve language pack fetching for policies (#159048)
Changes from review
for test runinng, use `--dev` instead of `--debug` (#159040)
Removing space
Cleaning the code
Changes from review
work in progress
Update license text
update gradle workspace tags (#158742)
Add hyperlink to edit sessions output channel (#158987)
demo merge conflict
refactor with updated metadata properties
update xterm.css (#158989)
Mark that notebook metadata is `readonly` (#158960)
Make 'Collapse All' become 'Expand All' when tree is fully collapsed
improve conditional for persistent tasks (#158928)
Add jsdoc to IQuickInput (#154255) (#158907)
use common extension manifest string replacer for web and desktop (#158834)
run oss tool (#158934)
fix: remove debian dependency on libgcc-s1 (#158883)
update swc
work in progress
Refactoring the code
Using binary search in the function getCandidateStickyLinesIntersectingFromOutline to improve performance
TreeView - Tooltip markdown closing on pressing CTRL (#158922)
Refactoring the code
Inside onExecute checking the target.detail entry of the event
work in progress
Remove editor model existence check
Revert "clearNode should use `replaceChildren` (#157169)"
Revert "Try using AbortController for disposable dom listeners"
Removes accidentally committed css change to improve debuggability. (#158865)
Revealing the line before invoking the functions when there are several possible definitions
Enable exp for command center (#158851)
Update endgame notebook milestones (#158844)
reveal active editor / show panel when appropriate (#158802)
Expose enum item labels, fixes #117696 (#158823)
Instrument slow git status updates (#158325)
Tag useUtilityProcess for exp (#158811)
Take into account vertical scrollbar width when revealing horizontally (#158808)
improve profile `source` description (#158805)
support profiles in ext host debugging (#158806)
Use 1px borders for merge editor conflicts (#158796)
Use history in bash shell integration for unresolved aliases
SCM decorations are single pixel wide and sometimes not visible at all (#158786)
bump distro (#158779)
fix exthost language features test
fix #158498 (#158657)
task reconnection polish (#158774)
Not doing the call when we are on the same range and the element has already been underlined
Make fuzzy toggle handler more concise
additionalToggles -> toggles
:lipstick: - use `Range` and `equalsRange` over stringify
enable profiles (#158758)
Expose editor "blue button" as menu (#158740)
Engineering - Update notebook (#158751)
return args instead of profile (#158750)
implement feedback
Changes from review
Git - Clear global state if setting is not enabled (#158747)
add missing negation
rename setting to `matchOnWordStartOnly`
make sure to include mp3 files in our build
undo unrelated change
Git - Add setting to remember post commit command (#158449)
Improves merge marker presentation in merge editor. (#158738)
Commit for testing purpose
use .mp3 files for audio cues
Change made for testing purpose
Making sticky scroll not experimental setting
add test
introduce transient profiles
Make `outline.initialState` configurable per language
feat: windows: set rc strings for *.node files (#158590)
fix #158589 (#158601)
Prioritize PATH executables over local directories
Add an `outline.initialState` setting (#53262)
Bump milestone in endgame notebook (#158632)
Ensure remote backend command requests are only executed once
changed color token to match list widget
Update xterm
Force persist the process if detach was requested by user
added fix on light theme contrast and fix on settings id
Resolving comments from review
fixes `useCustomCodeActionMenu` setting #158617
wait for trust to be initialized before prompting in tasks (#158323)
removed experimental tag and comments
fix on settings and description
Support additional toggles in quick pick, adopt in terminal
Adopt FindInput in QuickInputBox
Address comments
Move showOptionButtons into IFindInputOptions.showCommonFindToggles
Change explorer filter icon to listFilter
Only persist terminals when they have had interaction
Check FullLanguage only
Don't run shell integration on unsupported LanguageMode
Implement and adopt edit session identifier API proposal (#157733)
Enable resource decorations for some tree tooltips (#158593)
build: retry policy generation (#158581)
Allow passing in a promise that resolves with the connection token (#158586)
fix: freeze Resource#command (#158579)
Resolving certain (not all) changes
Preserve whether comment body is markdown string in replies (#158569)
Adjust comment+diff gutter by 1px (#158560)
Add info logging for edit sessions auth (#158538)
Comments gutter improvements (#158501)
Copy Path and Copy Relative Path commands are only available when editor is not focused. (fix #137216) (#158556)
Removing the comment
Better matches for untyped editors (#158493)
create the profile on main side (#158525)
Added settings to disable headers in code action widget.
added settings for headers in code action widget
Added action bar to Code Action Widget (#158399)
wait for registration when terminals reconnect (#158533)
Make 'pinned' casing consistent
allow recent commands to be pinned (#158037)
wait for terminal reconnection to try to reconnect tasks (#158391)
refactor metadata into own fxn
Add icon for Open on vscode.dev command (#158519)
Add `search-fuzzy` (#158514)
Bump distro (#158513)
Add border radius to merge editor button (#158508)
Improves performance (#158502)
Include match word in log
Add debug logs around auto replies
chore: update electron@19.0.12 (#158486)
sync wordwrap transient state to input1/2 editors (#158484)
Checkbox style tweaking (#158487)
The quest to debug vscode.open continues (#158483)
The 3wm editor is not dirty by default anymore and therefore we can tweak the close handler (#158476)
Smoke test `driver.exitApplication` sometimes does not work (#157979) (#158479)
openIntegration test failure: openTextDocument, untitled closes on save (#157897) (#158482)
use "Incoming" and "Current" everywhere (#158478)
Improves experimental diff algorithm (#158472)
joh/unknown lemming (#158460)
fix sizing of label-only buttons in toolbars
macOS - detect fullscreen transitions (#158456)
Queue all parts of debug start that can require user input (#158439)
Add close button to SCM editor validation message (#143036) (#158131)
:lipstick:
rename
feedback: fix profile options
rename arg to profile
Add experimental setting to auto-store edit sessions (#158428)
Avoid redundant prompt to sign into edit sessions (#158427)
Add rounded corners to buttons (#158315)
Marking fields readonly (#158406)
Continue Working On options should include icon and source
Quickpick title should include workspace folder context
Limit cell execution update events. Shouldn't be needed for output updates. (#158398)
fix pasting image into newly created cell bug
Remove TODO
Patch matches
Remove EditorResolution.DISABLED (#158371)
window - still allow to restore multiple simple fullscreen windows on same display (#158390)
macOS - prevent issues from trying to restore multiple fullscreen windows on the same display (#158366)
Work in progress
Use own calls to localize (#158372)
Add filtering on user and check replies (#158356)
Further improve isTreeItem checks (#158364)
push workaround for https://github.com/microsoft/vscode/issues/157904 (#158368)
Code action widget accessibility for screen reader (#158301)
Renaming the stickyScroll to stickyScrollController
Initial refactoring
Removing stickyScrollController.ts duplicate file
work in progress
Removes conflict markers before diffing to improve dealing with conflict markers (#158283)
Keep conflict markers. (#158347)
Code cleanup (#158349)
Changing naming and cleaning code
Don't need the config file, accessing directly the editor settings
storedStoredFileWorkingCopy leak (#158038) (#158342)
Extend unresponsive extension host instrumentation (#158320)
check lowercase value on validExtensions (#158319)
:lipstick: and compile
fix accidental removal of desktop strings (#158330)
Debt - remove unused import (#158322)
Provide context on which repository is being cloned (#158324)
use correct setting value for auto run tasks (#158321)
Noticeable performance hang when dismissing a large number of items (#156963)
Enforce gc of nb cells (#158310)
Add `...` to a few missing places (#158296)
simpler commands quick pick
Some code cleanup (#158279)
Bump server version (#158297)
Do not preserve `editSessionId` on a reload (#158295)
Implements conflict marker folding in the merge editor result editor (#158288)
to `toAction`-util for messages API
improve task reconnection (#158298)
Move reviveWorkspaceEditDto2 (#157572)
use interface
Removes shifting in diff algorithm as it is buggy (#158284)
Formatting the stickyScroll.ts file
Use instantiation service to create WorkerBasedDocumentDiffProvider (#158280)
work in progress
`IAction` must not be disposable. Delete heaps of empty dispose-implementations and unneeded dispose chains. Use `Action` over `IAction` type if needed
chore: include notice for H.264/AVC (#158255)
add comment
CLI: support associating a profile to a worksapce
editors - fix API comments around `ViewColumn` (#158273)
Have FileSystemError adopt ErrorNoTelemetry (#155885)
Add flitering for comments (#158264)
Marker service handling of unsupported schemas (#158176)
Tests committed
fix: disable occlusion tracker on windows (#158260)
Titlebar overlay is not enabled (fix #158203) (#158251)
adopt `setValue` accepting `ITextSnapshot` (#158244)
Work in progress
Check whether WCO is enabled, fixes #158203 (#158214)
Remove pwa- from launch.json (#158234)
Implement getViewState, fixes #133444 (#158199)
Collapse 3+ spaces into middle ellipsis
Support toggleable selection during rename (#158190)
Support codicons in getting started (#158173)
Pull in web strings into Language Pack (#158053)
VS Code pre-release does not reload code on restart of the debugger (#157948)
Code Action Widget bugfix (items not showing up) #158129
better fix for complex debug traps (#158124)
Move `common.cli` to electron-sandbox (#158174)
reset user's ZDOTDIR if shell integration is disabled (#158132)
menus - show context menu in global activity like in views (#158172)
Include tunnel privacy in embedder openTunnel (#158166)
fix task reconnection (#158130)
Update multiline comment add UX (#158163)
Respect `workbench.tree.expandMode` in custom trees (#158160)
account for `fish_mode_prompt` like iTerm2 does
exit code is not restored when PROMPT_COMMAND is an array
chore: update electron@19.0.12 (#158025)
üî® Use RegExp to ensure correct URL format
Escape go to dirs with spaces properly
Code action widget style fixes and fix #158030
disable shell integration for complex debug trap (#157945)
‚öóÔ∏è Add tests to verify handling ITerm sequence: `OSC 1337 ; CurrentDir=<Cwd> ST`
‚öóÔ∏è Add tests to verify `parseKeyValueAssignment` function
Notebook diff editor memory leak. (#158041)
üî® Extract independent helper methods out of `shellIntegrationAddon` class
‚öóÔ∏è Remove redundent test suite
‚öóÔ∏è Add tests to verify handling sequence `OSC 9; 9 ; CWD ST`
‚öóÔ∏è Add tests to verify handling sequence: `OSC 7; scheme://cwd ST`
üî® Update handling of sequence: `OSC 7; scheme://cwd ST`
Bump distro (#158043)
manual treeshaking for notebook modules (#158029)
skip encoding so that users don't have to encode in Trusted Domains (#158032)
Add common property for VS Code cli (#158028)
Notebook cell execute in Interactive Window Test Fails on MacOS (#157963)
Taking into account the sticky scroll widget when revealing a range (#157916)
Improve dev commands (#158011)
Update view size proposal (#157996)
Enable conflict marker decorators even if merge editor is enabled. (#157982)
work in progress
fix imports
init default profile extensions on main
Initial skeleton of sticky scroll test
smoke tests mitigation for issue 157979 (#157980)
Tweaking the box shadow
Organize notebook related services (#157966)
Refactor package dependencies generators (#157845)
Pick up new TS version for building VS Code (#157962)
Pick up TS 4.8 RC (#157960)
Added Icons and Header Separators to Code Action Widget (ref #132109)
Bump webview fallback commit (#157959)
Use triage bot PAT for TPI validator so comments come from bot (#157944)
revert and still use PAT (#157955)
Allow markdown code blocks to contain data after language id (#157947)
try removing PAT from distro-build (#157950)
Use notebook document uri for drop / copy paste (#157939)
Automatically add `testplan-item` label to valid TPIs (#157929)
Update Interactive Window architecture doc (#157930)
don't expect a full URI object
Bump distro (#157921)
add parameter to Interactive Execute to specify resource
Make debug dropdown narrower to fit in narrow viewlet (#157922)
Add vscode.github to list of First Party extensions (#157917)
Native context menu does not support `AnchorAxisAlignment` (fix #157881) (#157882)
API command test fail on MacOS (for #157824) (#157885)
Simple file picker isn't showing directories when I clear everything except C:/ (#157899)
assert that `closed` is defined (for #157897) (#157901)
Swallow copy zsh script error to allow multi-user machines
Variable error proposal (#157788)
Update output items instead of output replacement if possible (#157850)
üî® Use verbose names and handlers for `OSC 7` & `OSC 9` sequences
Notebook cell debug menu sometimes disappears (#157853)
Pick up new markdown LS version (#157843)
use task map key (#157810)
since we do incremental update, do not reset the handle pool.
Remove console log from nb webview (#157832)
Update comment thread context menu proposal (#157800)
Batch hasOutput context key update.
avoid unnecessary layout change when output changes
Initial first run of telemetry output API (#157807)
Move more of the tunnels API into the tunnels proposal (#157806)
`donotRegisterOpenCommand` -> `doNotRegisterOpenCommand`
Proposal for updating commenting area for diffs (#157508)
TreeViewPane command context selected TreeItem
sandbox - mitigate native crash from `ipcRenderer` usages (#157765) (#157794)
Update xterm
Update grammars (#157773)
debt - mention our wiki when putting out layer errors (#157768)
UX - Remove !important for the opacity of the focused elements (#157764)
üéÅ Add support for unkown CWD seq: `OSC 7 ; scheme://cwd ST`
üéÅ Add support for Cmder CWD seq: `OSC 9 ; 9 ; <cwd> ST`
üéÅ Add support for ITerm CWD seq: `OSC 1337 ; CurrentDir=<Cwd> ST`
üî® Use `_parseKeyValueAssignment` to parse key-value pairs
üéÅ Add `_parseKeyValueAssignment` helper method
fix sticky scroll start line number (#157466)
üî® Extract `_updateCwd` method for further usage
Improves merge editor dev commands (#157706)
"input" variables prevent compound configuration from launching more than one session (#157596)
üêõ Avoid reading truncated property values having '='
SCM - remove workspace specific views (#157762)
ActionWithDropdownActionViewItem - add separator (#155166)
Use platform agnostic relative paths for workspace file (fix #148492) (#157507)
Create editor groups from `ViewColumn` as needed (refs #123270) (#157640)
Apply minimal cell replace edits when file changes.
notebook cell text buffer hash
Bugfix on preselected options in code action widget (#157694)
Polish header comment
Include .fish script in packaged build
Handle multiple key handlers in extended pwsh keybindings
Update close reason (#157677)
fix typo (#157703)
Add codespaces extension command (#157700)
Adds link to compute diff implementation.
Convert to async (#157698)
Send IsWindows when running bash shell integration on Windows
Update TS versions (#157550)
change dir of cellAttachmentRenderer (#157671)
Update src/vs/workbench/contrib/terminal/browser/media/shellIntegration-bash.sh
Update src/vs/workbench/contrib/terminal/browser/media/shellIntegration-bash.sh
Search message wrap (#157679)
followup to renaming fish script, redux
followup to renaming fish script
Update commands.json with new reason flag (#157670)
escape the commandline given to `633 E`
disable nls on the web for now (#157665)
Introduces diffing infrastructure & experimental diffing algorithm. (#157646)
`exit` instead of `return`
send just `633 D` (no exit code) when a command hasn't actually run
remove right-side prompt markers
rename file to align w/ zsh and pwsh scripts' naming
Add experimental support for update markdown links on file moves/renames (#157209)
Git - Upgrade file-type package (#156411)
Add .fish to shell script language
Finalize TerminalExitReason API
Bump distro (#157643)
Command enablement not enforced for TreeItems (#157642)
Context menu for comment threads (#157637)
Update src/vs/platform/terminal/common/xterm/shellIntegrationAddon.ts
Clarify 633 E sequence
`workbench.action.nextEditor` should work with empty editors group (fix #157178) (#157607)
Commit keyboard shortcut to honor the post commit command setting (#157617)
Show error when markdown preview restore fails (#157566)
smoke(electron): wait for page navigation to commit before using driver (#157106)
Iterating directly over the values of the children map
Cleaning the code
Finalize VS Code shell integration sequences in code (#157571)
skip task terminals when startup kind is not reload (#157560)
Error in editor when dismissing all search results (#157170)
Add check for language tag settings (#157583)
Use theme color for process explorer scrollbar. (#157579)
Update edit session view to show decoded working changes
Allow read operations for file system providers implementing `readFile`
Support images in edit sessions by base64 encoding file contents
Add readonly to notebookMessaging types (#157562)
Add offline_access to list of default scopes (#157453)
Support for pasting images into markdown notebook cells (#156847)
try exempting `*.fish` files from copyright requirements
Apply editor-font-family to all `code` in notebooks (#157554)
handle debug traps with `[[` specially (#157544)
Add comment for verification-steps-needed (#157518)
Use %s to format % chars instead of sed to sanitize
check if it is restarting before removing persistent task (#157531)
Rev built-in versions of vscode-nls to 5.1.0 (#157530)
Set color of label text instead of opacity
Enable translations for extension code for the web (#155355)
removing RenderLineNumbers
Refactoring the code
Polish #154913. Set current find match based on notebook selection. (#157337)
Changing stickyLineCandidates to result
remove persistent task key when task terminates (#157519)
Introducing fromOutlineElement to create a custom outline. Cleaning the code.
Add saved files to "Open Recent" (fix #153275) (#157503)
disable TreeItem
make store profile aware
Avoid null coalescing operator for pwsh 6 support
Changing the file containing the trusted policy inside of tsec.exemption.json
Add check for the case when user scrolled to the bottom of the file
Don't need to do the deep clone
react to @bpasero feedback
Disposing stores and cleaning code
"input" variables prevent compound configuration from launching more than one session (#157355)
wait for terminal reconnection to restore tasks (#157307)
Issue reporter fails to report when `sandbox` is enabled (#157368)
fix #157128
Simplified the code where the ranges are calculated by working directly on the outline model. Consider perhaps checking for the kind of the outline element.
Always throw when attaching to orphan processes
Change log level for reconnect related logs
Align Cell Markup/Markdown (#157289)
labels: fix caching of unintended formatters (#157313)
Don't show unbound breakpoint indicator for disabled breakpoints (#157319)
build: do proper hashing for built-in dependencies (#157295)
Don't try to reveal an element that doesn't exist in the tree (#157309)
Add delete and undo support for get most recently failed cell (#157032)
fix #155222. Adjust focus gutter indicator for markup cell. (#157286)
Don't re-render markdown cells on `initializeWebViewState` (#157173)
Better telemetry adblock check (#157279)
testing: ensure tests run in multiple profiles are in the same task (#157302)
2nd attempt at a valid copyright statement for `hygiene`
fix errors reported by `hygiene`
Remove dom.createEventEmitter (#157296)
Remove event.ts stopEvent (#157182)
add `--locate-shell-integration-path` CLI support
Also escape % in zsh
fix: parse errors in coverage command (#156837)
add shell integration script for fish
Send a disconnection message via the management connection before killing the local extension host (#157269)
Escape % in bash shell integration
Ignore shell integration script errors
Refactoring using the provider and the binary search
simpleFileDialog: ask user if we should create directory if it doesn't exist when saving (#152536)
Simplifying the rendering function, fixing the filtering in the sticky controller
actionViewItem - make sure to also set the aira-label on the label element
themes - disable window border on windows (#157223)
sandbox - log if sandboxed in telemetry (#157221)
Refactoring by adding _getScrollWidgetState function
Initial refactoring of the code. Enable the ability to set the state of the widget.
fix build (#157217)
Rename context to align with other webview context keys (#157174)
Remove IStandardWindow (#157181)
Remove a few IE8 conditions (#157179)
Handle edge case if fig is installed/activated
Add AbortController to core types
Changed the method in the indexTreeModel.test.ts (#148948)
Try using AbortController for disposable dom listeners
clearNode should use `replaceChildren` (#157169)
use consistent key for reconnecting tasks (#157126)
enable WCO by default (#157140)
Remove dom.getElementsByTagName (#157163)
Inline CurrentDragAndDropData (#157162)
üÜô distro (#157161)
Remove unused messages in nb webview (#157158)
We only need to wait on the input box for un-supported environments (#157157)
Remove decoder and LineProcess (#157150)
Remove skipped webview tests (#157155)
Remove SimpleSequence (#157149)
Use 'import type' for '@jupyterlab/nbformat' (#157153)
Move non-types stuff out of types.ts (#157145)
[fix oss] no call into update window controls when disabled (#157138)
Windows: some Firefox web tests are timing out randomly (fix #155760) (#157125)
product: bump version number (#157120)
Respect original ordering of quick fixes (#157104)
Use tabs to figure out when to report JS/TS diagnostics (#157117)
Added cursor pointer in monaco select box for consistency (#152976)
Escape bolding in name error message (#157108)
Have timeline excluded sources use storage service (#157099)
Downgrading spdlog and removing console statement.
find start pattern instead of getting all buffer lines (#157042)
updating spdlog
Mark showIfCollapsed as public API (#157093)
Remove shell decoration icon settings
chore: update to Electron 19
Comments panel title is not localized (#157090)
Move IReconnectionTaskData into contrib/tasks
update traffic lights on macos when title bar zooms (#155906)
Revert "Increase timeout of web unit tests" (#157065)
Windows: some Firefox web tests are timing out randomly (#155760) (#157066)
smoke - disable opening devtools on error (#157080)
chore: bump electron@19.0.11
Don't prompt to open launch.json when failing to start a dynamic launch config (#157049)
Clear queries if setting search failed (#157046)
RPM packaging: Use standard macros (#153247)
`task & reconnectionOwner` -> `reconnectionProperties` (#156926)
improve task setting description (#157039)
Update Codicons (#157036)
Add an action to delete all edit sessions
Add a welcome view when there are no edit sessions
Telemetry extraction should fail build (#157006)
Enable edit sessions by default
Use a better icon and tree node label
Don't register duplicate view container command
focus `No` option of task dialogue box by default (#157020)
Bugfix for code action clicking #157017
bring back kernel execute test
remove outdated test
Notebook Cells re-render upon changes to metadata (#156917)
Bump api notebook milestone (#157011)
Remove the resolvers ability to work with typed editors (#157010)
Inherit more settings during extension development (#151872)
Pass progress type along in notification updates
Add more logging when a protocol timeout occurs (#156991)
Clean up
Ignore bad canvas addon versions
editors - do not throw from `createTextEditor` (#156980)
Support inactive selection background in terminal
Add smooth scrolling setting
Piping into Code fails if data writes delayed (fix #155341) (#156973)
`window` => `windowImpl` (#156970)
use last active profile in web (#156966)
Replace the deprecated canceled with Cancellation Error in ipc.ts
Support `ILocalizedString` in `openCommandActionDescriptor` `title`s (#156921)
use raceTimeout to detect when waiting to resolve takes too long.. and ignore focus out (#156916)
Add `activeWebviewPanelId` context key (#156944)
Separate notebook kernel and api test (#156946)
Increase timeout of web unit tests (#156894)
Remove IDataTransfer type (#156934)
Remove ReadonlyMapView (#156927)
Enabled Code Action Widget by default + disabled action hovers
.then -> await (#156634)
enable task reconnection by default and fix for windows (#156909)
Use optional chaining for more method calls (#156938)
Remove types.isArray (#156930)
clear decorations on window reload (#156924)
debt: move insert command towards unit tests. (#156929)
build: apply built-in ext cache to the rest of the pipeline (#156939)
build: cache built-in extensions to avoid rate limiting (#156918)
Pick up latest markdown language service (#156933)
Turn on notebook document test. (#156932)
Provide valid markdown-specific default for `editor.quickSuggestions` setting (#156686) (#156689)
add separation to task detection notification (#156919)
Use finalized vscode-languageserver version  (#156910)
Support multiple partial registrations to resolver (#156672)
Clear markdown diagnostics when file is closed (#156912)
Add perf marks for auto resuming edit sessions (#156309)
Add patch for enabling new TS plugins on web approach (#149186)
Create a new API proposal to move `openTunnel` into (#155835)
skip flaky tests to investigate (#156906)
Issue Reporter: add link to guidance on wiki (#73512) (#156139)
[main]: Update list support find context key name (#156905)
Make sure non-matching characters aren't included in highlights (#154537)
Extracting the CSS to a separate file (fixes #156876) (#156890)
testing: clean up and compact test result storage (#156834)
fix task reconnection issues (#156699)
Increasing the character limit to 500 (#156880) (#156884)
ci: fix armhf debian dependencies
clean up vsixs (#156893)
Add telemetry comments (#156827)
debt - do not run long running ops in web on shutdown (#156735)
Correct initial window size on Windows secondary display with different scaling factor (#146499) (#155589)
Sticky scroll should not cover scrollbar and minimap (fixes #156570) (#156869)
Re #155587. Move undo/redo to unit tests. (#156849)
Present Continue Edit Session options in sorted order (#156860)
:up: distro (#156863)
Build VS Code using latest TS version (#156819)
:up: `playwright@1.24.2` (#156715)
ci: update armhf debian dependencies list
Sandbox: Enable on Insiders by default (fix #156440) (#156733)
ci: update amd64 debian dependencies list
ci: fix arm arch config for sysroot
Include directory of notebook in local resources roots (#156852)
Adjust margin in getting started (#156845)
up timeout to 5min (#156846)
Pick up new md grammar (#156844)
ignore query and fragment of trustedDomains (#156841)
Remove locale and include download count (#156823)
Pick up TS 4.8 for JS/TS extension (#156828)
Remove move cell integration test (#156825)
Show Issue Reporter window in taskbar (#130497) (#156141)
Make comment and owner required by default (#156822)
Move off asPromise (#155920)
Use flat and coalesce (#156817)
Include globally enabled TS Server plugins when reporting issues (#156510)
Tell users about enabled TS plugins on crash (#156514)
Skip collapsed state check for nested children when dropping files in explorer (#156759)
Cleanup disposed terminals (#156326)
üéÅ Add option to disable script hovers in `package.json` files (#156752)
Add canvas renderer addon
Support default icon/color in folder scope
do not report builtin extensions (#156793)
Bump distro + update labels (#156685)
ci: remove hardcoded chromium version and sysroot file
Update to xterm 5
use the profile from current or last active window
ci: don't restore stale cache
fix: use :hover pseudo class
Enable user-select for monaco editor on macOS
‚öóÔ∏è Update `sanitizeFishHistoryCmd` unit tests
‚öóÔ∏è Add unit tests for sanitizeFishHistoryCmd function
üî® Extract sanitizeFishHistoryCmd function for testability
chore: bump electron@19.0.10
Enable Wayland build for snaps (#156551)
Show Edit Sessions should focus view, not container (#156678)
delay title bar adjustments until after menu bar is updated (#156688)
Only use the commit in share link when upstream (#156658)
Avoid List View default find widget steal keybindings. (#156637)
Have padding on qp list not the whole widget (#156624)
add tooltip tech to dropdown buttons (#156621)
more checking for undefined objects, fixed bug casuing markdown renderer to entirely crash
allow context menu on command center (#156614)
fix another command to use ILocalizedString (#156615)
use `task` instead of `taskName` (#156603)
Bugfix on enter/arrow/mouse interaction for code action widget (fixes #156587)
Show quick pick when redirect fails to complete redirect to be more robust (#156515)
Tree keyboard navigation should not steal keybindings (#156575)
Make sure tree find widget can be moved using the keyboard (#156583)
Existing trees should react to changes to `workbench.list.defaultFindMode` (#156581)
Fine tune tree find widget layout (#156579)
Adjust tree find widget padding (#156577)
TreeView reveal fails to scroll to item when focusing and a different selection exists (#156572)
Make sure to use view line numbers when fetching data from the view model (#156569)
disable find widget for testing view
fix issue with multiple tree filters
Engineering - unify all Code OSS pipeline jobs (#156552)
Rename `getViewLineRenderingData` to `getViewportViewLineRenderingData`
Engineering - Add missing variable to cache maintenance job (#156540)
Engineering - Code OSS pipeline to use generic node modules cache (#156537)
Revert "Warn user when they open a file within the install folder tree (#138815) (#155443)" (#156403)
Revert fix for #150995 (#156516)
debug: bump js-debug and visualizer for 1.70 (#156508)
Clarify wording in api (#156500)
fix naming on hover
manual folding ranges: memento does not store all sources (#156273)
Default edit sessions to hidden for 1.70 (#156494)
Always log on tsserver exits (#156495)
Remove Manual Folding Range doesn't work (#156493)
Always log tsserver exit code, even for kill processes (#156378)
Create and remove manual folding range use the same shortcut. (#156490)
still allow system context menu in some cases (#156488)
devcontainer schema: handle deprecated properties (#156425)
Log when encountering invalid json in vscode-context (#156485)
Use clearer parameter name (#156479)
Don't link to deprecated `terminal.integrated.automationShell.*` settings (#156481)
Revert "Temporarily comment out tuple type annotations (#156213)" (#156478)
oh. had to run yarn compile from within the /build/ folder
show all tasks when no tasks are found for given filter and go back is selected (#156458)
"To" shouldn't be capitalized in the command "Go to Running Cell" (#156471)
Hide Continue Edit Session when not in a folder
Account menu to sign out of edit sessions should be specific to edit sessions
Hide Open in Local Folder on web
added `ipynb/esbuild.js` to the media scripts when building extensions
Quick Diff editor gutter decoration hidden by comment gutter icon (diamond) (#156448)
fix shell integration link (#156455)
Revert "Re-Enables bracket pair matching/colorization for monarch (#156450)"
Re-Enables bracket pair matching/colorization for monarch (#156450)
Set initial debug session pick and edit pick prompt (#156387)
Retry up to 5 times the initial authority resolving and also retry up to 5 times the initial connection (#156444)
Added hover on code action widget and better mouse/keys interaction
Create a `insiders.vscode.dev` link when I use insiders for sharing (#156436)
Updates model only if a sticky line is contained in a range of the model token change event
Iterating over all the ranges in the onDidChangeModelTokens function
fix the printed installed extension version (#156422)
Exclude esbuild files from build (#156362)
Calls onDidChangeModelTokens and updates when the range of update intersects with the line range of the sticky scroll widget
Only adjust changes when bracket pairs are completed.
fix errors in tests (#156420)
Git - fix edge case during rebase (#156410)
Electron Sandbox Workspace Setting (fix #156263) (#156404)
Rename editor.dropIntoEditor.enabled setting (#156381)
added global ID for documentation
code clean up and fix on documentation type check
Changing the color of the sticky scroll so it is of the same background as editor and on hover it has the list hover color from the registry
OnModelChange need to empty the stickyScrollWidget before rendering after a delay of 500 ms
fix accidental hits on js/ts, added hovers, added keybdinings for refactor w/preview, fixed domFocus and important tags
Set timetout to 500 milliseconds on model change in order to let the coloring be done before rendering sticky scroll (this timeout is also necessary for rendering upon control+z).
Changed the settings text to make the functionality of the sticky scroll clearer.
remove show X paradigm (#156359)
Remove Manual Folding Range doesn't work (#156278)
add notebook-out to .gitignore
fix package.json/esbuild.js for files in publish
Code scanning: deprecation of CodeQL Action v1 (#156271)
Force the line height to be correct, before was slightly larger than the line height inside of the editor
Git Comments: Edit Doesn't Work Always (#156318)
fixing != to be !==
If the brackets are removed, reduce the range. If the brackets are added, increase the range
Not sticking outlines which span only one line
Removing an import that caused an error
Hide edit sessions view until explicitly shown (#156238)
Allow msftInternal to be setting toggled (#156198)
Temporarily comment out tuple type annotations (#156213)
Enable safe inline  svg tags in trusted html (#156216)
Bugfixes on Code Action Widget (#156105)
disable task reconnection by default (#156217)
code clean up on pr
fix on disposable blocking div
minor fix on PR, pushing js/ts accidental to later PR
fix: typos (#155310)
Restore waitOnExit, type, hideFromUser, reconnectionOwner terminal properties on reconnect (#155346)
Add a view and actions for managing edit sessions (#156199)
theme-seti icon Laravel .blade.php lose php icon when installing blade related extension (#156204)
fix search selection bug (#156205)
Distinguish testing decoration labels (#155433)
Update label triage-needed (#156202)
fixing : incorrect indentation, needed to take into account not only spaces but tabs too
limiting the number of characters rendered on one line to 100 to avoid overflow on several lines
Added try catch block for the case when LineDecorations.filter returns an error
Export workspace for web (#156181)
Make some Emmet settings language-overridable (#156184)
debug: potential fix for unit test flake (#156177)
seperate out devContainer schemas for vscode & codespaces (#156170)
Add missing disposals (#155976)
cleaning the code with the review
Support --locate-shell-integration-path in server CLI (#155870)
Use loading for running tests window progress (#155957)
Update src/vs/workbench/contrib/bracketPairColorizer2Telemetry/browser/bracketPairColorizer2Telemetry.contribution.ts
Revert "Support multiple partial registrations to resolver (#155859)" (#156157)
Temporarily remove explorer expand all (#156162)
simplify fold merging (#155302)
Problems view - do not show markers for SCM input (#156151)
Explicitly enqueue files that only forward symbols (#156150)
SCM - Create dedicated schema for the source control commit input (#155894)
Problems view - remove custom code for SCM input markers (#156145)
Bump distro (#156137)
Allow CommentNode to change body text and enter edit mode at the same time (#155767)
:up: distro (#156134)
Provide trigger and documentation to monaco code action provider (#149937)
Add commands to scroll editor to top/bottom (#155861)
Adds commands AcceptAllInput1 and AcceptAllInput2 (#156047)
Allow to pass in a snapshot in `setValue` (#156128)
Remote workspace from Ports view (#156130)
Improves performance of bracket pair colorization
update licenses (#156124)
Move openTunnel in to workspace namespace (#156123)
editors - only warn for app root edits when running built product (#156030)
Added brace and bracket colorization
show remote indicator in web with websocket factory (#155734)
added shortcuts for quickfix menu
fixing #145058 and code clean up
Pick up new version of markdown-language-server (#156010)
fix build (#156113)
fixed more styling and dom focus on widget
Aligned the number in the margin, smooth scrolling attained, added lighter color onhover
Replace the deprecated canceled with Cancellation Error.
Adding digitarald owner comment (#155502)
Use white as editor background (#155993)
üî® Include `fish` shell in history fetch
‚öóÔ∏è Add test to verify `fetchFishHistory` function
üéÅ Add `fish` shell history fetch
Support multiple partial registrations to resolver (#155859)
Update codicons (#156009)
Add some additional logging to md server (#156007)
Update ipynb yarn lock (#156004)
fix api proposal generation EOL (#155991)
Solved the problem where duplicate lines were appear on sticky scrolling
rename `needs more info` to `info-needed` (#155992)
added fix on menu anchor on resize
Bump distro (#155985)
Use "Notifications" label for status bar entry when do not disturb is enabled (#155863)
Update typescriptServiceClient.ts, fix naming errors (#155946)
Tweak merge editor dev command names (#155978)
allow-list `stickyScroll` as tt-policy creator
unit tests - help diagnose test failure reason for web tests (#155967)
Cleaned the code
Refactor scope overrides indicator (#155912)
xterm@4.20.0-beta.20
Skip folded regions when computing relative line numbers (#155970)
code action widget styling to match context menu
fixed custom widget color theme to align with context menu
icacls: grant current user permissions (#155852)
Try to prevent update of user-type Windows installation when running as admin (#148428) (#155631)
remove "start with snippet" from new file hint until we have file template snippets, (#155961)
Warn user when they open a file within the install folder tree (#138815) (#155443)
Add .nvmrc (#152883)
Enhance settings profiles management (#155966)
Use actual return symbol unicode char for new line
Revert "install language pack when setting locale (#155954)" (#155963)
Cleaning code, work in progress
add `editor.snippets.codeActions.enabled` to control code action snippets, fyi @alexdima (#155959)
support removing multiple profiles (#155958)
install language pack when setting locale (#155954)
fix uninstalling extension version (#155953)
Added csp policy for the sticky scroll and theme coloring
Make treeshaking work on windows (#155952)
Moves the read-only message into its own contribution to enable customization in the monaco editor. (#155951)
(temp fix) detect when base, input1, and input2 become empty (#155941)
status - make color dynamic (#155944)
enable merge editor by default (#155937)
View size API proposal (#155710)
Skip unit test that's breaking the build
Make search tree context menu multiselect-aware (#154847)
Allow continuing on when term kill all doesn't succeed
Add npmignore to markdown server (#155898)
Ensure folders with spaces don't impact link line/col
Remove redundant styles for underlined links (#155893)
underline for hover of all links (#151499)
Debug sessions command (#153727)
fix WCO color updates with high contrast themes (#155886)
Closes #54285 adds webview/context contribution (#154524)
pipe workspace boolean for opener service validator (#155545)
bump distro to solve merge conflict (#155876)
Use bracketed paste mode when running recent commands
Send \n char instead of enter symbol
Visualize new line in run recent command
Add MD server tracing and update diagnostics on files changes (#155797)
Use fixed commit hash, ref #13089 (#155786)
bump distro (#155790)
update @vscode/test-web (#155858)
Add "Developer: Apply Update..." command (#155846)
tree filter: increase height in macOS (#155850)
remove unnecessary info message (#155851)
don't use opener service for `OpenResultResource` because that ends up using the code editor service (#155840)
Remove discussion icon from comments view (#155839)
Can now click on sticky scroll overlay to go to a specific line, and the overlay is added into the settings. It is disabled by default.
disable configurable menus again (#155830)
Engineering - Tactical change so that we do not run the Test stage for CodeOSS CI builds (#155829)
Contribute to html language server with a custom language. (#146731)
skip test & :lipstick: (#155826)
Documenting markdown LS (#155789)
Clarify that size is about the minimap's vertical size and remove rarely used scale (#155805)
skip flaky test (#152145) (#155809)
Git - Add telemetry comments (#155811)
Git - Enable action button while rebasing (#155744)
make system context menu code more understandable  (#155747)
Add file decorations to search results (#155549)
formatting
remove md-it dependency, added undefined check to attachments
Ensure extensions are properly deregistered from walkthrough (#155770)
Action button - remove button borders that are adjacent to the separator. (#155779)
consistent verb for show menu bar in titlebar context (#155784)
Update package.json
Add Settings indicator for application-scoped settings (#155212)
removed disposables unused, still shadowroot issue
removed commented code
fix on mutable disposables and context view
yarn.lock with yarnpkg instead of npm
rm package-lock.json
rendering of attachment images complete via tokens
added attachment and metadata support back in... rebasing is scary
added build stuff
okay now things are actually fresh and working
allow changes in shadow root for same context view container (#155771)
comment telemetry events (#155758)
Bump distro (#155754)
Comments panel: css issue causing the position of "Ln" to be shifted (#155751)
code clean up and addressing comments
fix on some theming, added experimental setting
sandbox - deprecate `process.pid` (#155750)
add menus for input1 and input2, render toolbar for them respectively (#155749)
Git - Use GIT_EDITOR environment variable to suppress the git commit editor during rebase (#155748)
Simplify bash PROMPT_COMMAND handling
AsyncDataTree: calling `getChildren` on collapsed element should not trigger `getChildren` (#155729)
Don't poll for parent process existance in the sandboxed case (#155737)
Adopt argsCanBeInterpretedByShell from DAP (#155663)
Update new file to create a new file (#155544)
[html] update service and fix url resolving (#155725)
add more GDPR comments, https://github.com/microsoft/vscode-internalbacklog/issues/2762 (#155724)
Configurations ${WorkSpace} autocomplete broken after update (#155713)
Adds missing semicolon.
, -> ;
use commit-icon for description, tweak codicon font-size (#155714)
Parse markers regular expressions like other regular expressions from the language configuration file (#155688)
also default to opening merge editor when conflict is about adding (#155711)
Renamed the folder from semanticScroll to stickyScroll
Also use the first line which has a begin state when tokenizing the viewport (#155698)
Skeleton of `editor.contrib.stickyScrolling` feature.
Bump terser from 4.8.0 to 4.8.1 (#155680)
editors - limit length of error message (#155337) (#155705)
LabelService - custom formatter function (#155641)
SCM - Add an authority to the URI of the SCM input's text document (#155624)
ignore `data` uri paths from breadcrumbs file path info
don't use generator function
use ResourceLabels in breadcrumbs control
Pick up latest version of TS for building VS Code (#155668)
Throw if webviewExternalEndpoint is not set (#155667)
Show loading for task building status bar icon (#155616)
Use object factory for editor resolvers (#155652)
Move MD diagnostics to language server (#155653)
Show progress indicator for long running file drop operations (#155664)
Don't clear execution order immediately when execution starts (#155357)
more code clean up
improve empty workspace detection in web (#155643)
delay center layout until editor restore (#155647)
more commits for code cleanup
more code clean up and fixes - also added better styling
Generate dependencies per package build for Debian (#147335)
fix on keybinding up and down, fix on keybinding for enter
Show shell integration tooltip regardless of setting
Batch all code block updates together and emit event ASAP (#155629)
Improve command navigation visual feedback
fix https://github.com/microsoft/vscode/issues/155572 (#155617)
merge editor - use `basename` when invoked from CLI (#155614)
joh/familiar sparrow (#155613)
Engineering - update Code OSS pipeline (#155610)
shell-integration -> locate-shell-integration-path
Don't fill in tasks type/labels
add telemetry comments for activatePlugin in workbenchThemeService (#155592)
Add comments to properties of telemetry events (#155584)
Remove --shell-integration from --help
remove unused PR template line (#155601)
editors - fix `--wait` support (fix #155595) (#155599)
add node-script to run swc
fix type issues in h() (#155600)
merge editor - fix regression with editor resolving (#155596)
smoke test - only warn when `treekill` fails (#155577)
speed up more unit tests (#149712) (#155576)
Button - fix style of the disabled dropdown button (#155581)
telemetry - document keys (#155563)
macOS - tweak traffic light position handling (#155558)
chore: update electron@19.0.8
editors - add capability to control centered layout (fix #154738) (#155565)
filter empty command for non-partial terminal capabilities
refs #153267 (#155546)
99% working widget!
fix system context menu handler is not registered (#155533)
fix on arrows
Respect wrapped lines when copying command output
Update classification property comments (#155526)
keybindings working!
update comments for telemetry events (#155525)
Set alwaysConsumeMouseWheel for suggest details and parameter hints (#153375)
Check if execution values are true, delay registered ctx key
fix from context view service, code cleanup, and working on keys and exp setting
bring zoomable title bar to macos (#155354)
Add shell-integration to isSupportedForCmd
Support "not in" context key expression (#155261)
introduce `--merge` to bring up merge editor (for #5770) (#155039)
Git - The git.sync command should use the git.rebaseWhenSync setting (#155511)
Bump distro (#155507)
Git - Do not show SmartCommit dialog when using "Commit All" (#155486)
Implements telemetry for bracket colorizer 2 extension usage
Add telemetry comments (#155503)
Support find widget in lists/trees (#152481)
h: type check attributes object (#155501)
[themes] When opening a new window, product icons don't load immediately (#155485)
mention `editor.suggestOnTriggerCharacters` from the quick suggest doc, (#155467)
Revert "check if values are true not just undefined (#155348)" (#155468)
Update breadcrumbs when workspace folders update (#154616)
chore: update electron@18.3.5 (#155452)
check if values are true not just undefined (#155348)
add focus title bar command (#155347)
Do not require a `group` in contributed command
Add ability to continue desktop edit session in vscode.dev
ButtonWithDescripiton - Remove tabIndex from the label and description elements (#155317)
formatting
system context menu on Windows
Button separator color on high-contrast themes (#155316)
code cleanup and adding experimental setting
Update diff color changes
Flexible-width Find Menu in Notebook (#154550)
Add "Go to Last Failed Cell" Button (#154443)
A11y bug: OS color settings are not respected (#155319)
add "start with snippet" to empty editor text, change things to use formatted text renderer (fixes https://github.com/microsoft/vscode/issues/155293)
dom: h should allow ids and multiple class names (#155311)
tweak label
set to udf after (#155304)
make snippet-contribution a proper contrib-file, remove local registration into contrib-file, move command into their own folder, have a command to populate a file from a top-level snippet
add concept of top level snippet and allow to get snippets without language filter
no hidden snippets as code action
surround with code action needs non-empty selection, uses active end of selection
Add syntax highlighting for .env files without extensions (#155298)
tests - speed up unit tests (#149712) (#155147)
send `workbenchActionExecuted` from CC to measure its success (#155297)
track usage of snippets to support snippet LRU (#155289)
deprecate es5ClassCompat and explain why
Revert "remove es5ClassCompat"
fix assumptions about action-bar title structure (#155292)
move custom hover logic into `BaseActionViewItem` (#155278)
Publish stage should wait for web stage (#155284)
* always show top N snippets and conditionally show action for all surroundable snippets
fix order
add context menu to hide/show CC and layout controls
rename `TitleBarContext` to `TitleBarTitleContext` because that's what it is
make sure execute in terminal is reached (#155254)
fix command not found warning (#155250)
resized widget, fits to with, fix on focus
Increase contrast for diff inserted bg (#154969)
Allow menubar to convert into hamburger below threshold (#155223)
remove terminal data when terminal is disposed of for reconnected terminals (#155233)
concat arrays instead of replace because we want all items in the array (#155228)
Disable chunking to prevent `importScripts` calls in web (#155226)
Add try-catch around call that throws in ctor (#155224)
Don't ask debug adapter for initial configs when opening launch.json to add a dynamic config (#155215)
Re #154948. No MenuItemAction in notebook (#155096)
read `REBASE_HEAD` when rebasing, swap yours/theirs (label, sides) as well (#155208)
switch default - use browser request by default (#155205)
Use a non-capturing group to fix group indexes
Move Web job into its own stage (#155193)
Settings editor - Boolean setting description should take up the full width instead of just 60% (#155195)
add clear display language action (#155194)
Sync Changes button - only show when local branch is ahead/behind the remote branch (#155192)
Polish New File... based on feedback (#155115)
xterm@4.20.0-beta.13
tweak message when closing dirty and conflicting merge editor (#155176)
`MainThreadHostTreeView: [createInstance] First service dependency of CustomTreeView at position 4 conflicts with 2 static arguments` (#155160)
add 'Open File' command to merge editor title bar (#155159)
Git - Add events to IPostCommitCommandsProviderRegistry (#155051)
electron - drop support for `disable-color-correct-rendering` (#155150)
üíÑ Improve field name for "Surround With Snippet" overflow code action
üî® Apply "Surround With Snippet" code actions via workspace edits
‚öóÔ∏è Add test to verify `SnippetSession.createEditsAndSnippetsFromEdits` resolves $SELECTION variable
‚öóÔ∏è Add stub implementation for `IWorkspaceContextService.getWorkspace` method
cleaning up code
add application to restricted settings (#155143)
fixed disposables, fixed css on focus, now focuses
Git - Use cloud icon for remote branches (#155140)
Throw error on legacy walkthrough (#155104)
Move MD references, rename, and definition support to md LS (#155127)
Forking from the extension host fails when running tests (fix #154549) (#155139)
Remove references to finalized drop api (#155128)
editors - clarify view state resource (#155136)
support watch task reconnection (#155120)
Add button separator color token (#155103)
Add configure decorations ctx menu entry
fix on slow disposable and focus
Finalize drop into editor api (#155102)
Move md path completions and document links to language server (#155100)
Double check IW is the notebook changing when handling scroll events (#155095)
allow more args in run task (#154854)
Add telemetry tracking edit session feature usage (#155084)
disable decorations (#154430)
update (break?) .swcrc file
update to latest swc
git - Add localization comment for Publish Branch action button (#155053)
Use TERM_PROGRAM conditional to activate
Revert code-cli.bat changes
Support --shell-integration in server cli
Add shell integration to options category
support to hide submenus too (#155063)
Closing dialog does not cancel (Manjaro Linux) (fix #154719) (#155049)
Use common path instead of node path
Support bash and zsh paths too
Explorer: cannot copy paste anymore to duplicate file with sandbox enabled (fix #154820) (#155044)
allow to reuse a menu id and only to create one when none with the id exists (#155042)
Remove accidental log
fix #155022 (#155025)
editors - do not check confirm again right after for custom confirm handlers (#155024)
`--diff` on workspace files opens the workspace instead of diff-ing them (fix #149731) (#155011)
update miletsone (#155028)
Add hot exit support for interactive window (#154974)
Escape query, fixes #153583 (#154990)
Clean up document link resolve (#154959)
Expand isButton to catch ButtonWithDropdown as well (#154987)
grab message from originalMessage as well as localized (#154989)
Shell integration CLI progress
Expose inputBoxUri and make IW Tab ctor private (#154979)
Update notebook events comments (#154952)
Clean up HtmlRenderingHook (#154961)
Export Interactive Window tab input (#154864)
Remove bracketed paste mode from sendText
Emmet: Add back trigger character arguments (#154940)
TypeError: Cannot read properties of null (reading 'value') (#154944)
Git - Commit action button extension api (#154555)
Move md workspace symbol search to language service (#154874)
add `vscode-coi` argument for nested iframe, add COI allow attribute for nested iframe
tweak allow rules
`Marked as resolved` marking has poor visibility with high contrast color themes (#154921)
make sure to allow COI on webview iframe
add `vscode-coi` query when loading webview contents
show set display language action for lang pack extensions
Re-enable profiles smoke tests
tweak event-naming rule and remove disable-pragma from vscode.d.ts, (#154914)
joh/issue154804 (#154909)
Add Makefile tests for upgraded grammar: comma, comment, shebang (#154625)
Git - fix edge case with Windows mapped drives (#154342)
deprecate observableValue in favor of IObservable (#154279)
fix: compilation of vscode-encrypt for darwin arm64 (#154762)
Commit Action button polish (#154908)
remove obsolete API proposal name from api-tests, fyi @Tyriar (#154902)
make sure to pass the right height to editors, (#154900)
Rename drop API interface (#154876)
Remove extra files from build (#154875)
use setting to switch between main and browser request service
safer check for `crossOriginIsolated` (#154907)
Adding keepLines feature to the settings (#154790)
fix CSP for webWorkerExtHostIframe and also fix URL construction (#154899)
Download policy translations for previous version if current version fails (#154892)
styled menu, minus width
update nls comment (#153743) (#154890)
added css
Update codicons (#154859)
do not scan web extensions in desktop (#154851)
Add Expand all button in explorer view (#153614)
Add installation context to install extension command (#154846)
xterm@4.20.0-beta.12
added dispose on offclick - slow response from offclick, optimizing in next push
Temporarily disable some profile tests
fixes #154840 (#154841)
add task quick pick smoke tests (#154532)
Remove todo
Improve tasks localized strings
Better TypedArray type checking (#153929)
broadcast profiles changes to other windows (#154782)
Pick up latest TS nightly for building VS Code (#154821)
Button - Do no change the style on focus/blur if the button is disabled (#154253)
Add hook for extending built-in html renderer (#154316)
update to latest swc
SCM - Commit action button accessibility improvements (#154817)
Move telemetry test from electron-browser to browser (#154805)
setExitCode -> setExitStatus
Remove onDidChangeName proposed API
fix tests...
Make hidden fold ranges independent of range provider, add manual fol‚Ä¶ (#139779)
use request service from main
make to react properly to storage change events
support to hide menu item from their context menu, have persisted menu item hide states in menu service, create `MenuItemAction` with an util that can hide itself and its siblings (from the same menu), some adoptions
sandbox - move tests to `node` layer (#154779)
make `MenuId#id` a string and a strict identifier
add `array#removeFastWithoutKeepingOrder`
chore: update electron@18.3.5 (#154795)
Update make grammar (#154789)
Git - Maintain spaces in the arguments (#154685)
TypeError: Cannot read properties of null (reading 'uri') (#154775)
ignore settings sync for `window.experimental.useSandbox` (#154773)
ignore syncing settings profile enablement setting (#154771)
chore: update cache
Ensure shell integration is enables for custom keys
Enable more pwsh keybindings via shell integration
update icon for settings profiles (#154712)
Allow deleting all edit sessions when signing out (#154579)
Add keybindings for search editor file filters (#153954)
Debt - Add execution id to edit session request headers (#154575)
Enable profiles in web
testing: persist empty history filter (#154573)
Don't use at() yet
Apply bracketed paste mode on text send to the terminal
Also set __vsc_status when there are no traps
Set status once, prevent preexec recursing
Update xterm
Don't relaunch shell integration terminals when killed by process
Add inTerminalRunCommandPicker context key
Use `idToken` for edit sessions (#154534)
Add collapse tilde tests, fix edge cases
Move test implementations into correct test names
Add tests, improve name
fix tests
Run recent command: Collapse $HOME into ~
scanner service: take profile as input
ButtonWithDropdown separator style update (#154109)
check application scope in abstract layer
Update src/vs/workbench/contrib/terminal/browser/terminalInstance.ts
add logging to understand why/how test sometimes fails, https://github.com/microsoft/vscode/issues/154237 (#154514)
Don't write initialText new line when echo is false
Including whitespace in query for contiguous search
Remove ability for terminal editors to be dirty
Add a specialized unhandled conflicts close handler (#154471)
only reveal first conflict when not having previous view state (#154482)
sandbox - log when enabled (#154469)
add `vscode-coi`-search-param when making requests for the webview and its worker
editors - let editors fully control confirmation on close (#152841)
Process explorer: indicate extension host better (fix #150820 on windows too) (#154454)
:lipstick:
slight copy change for display language dialog (#154402)
policies: skip languages which do not exist (#154395)
Hide split/kill when tabs never hide
Make contiguous search case insensitive
Bump distro (#154414)
disposable slow off click
cleaned up code and disposables
modified to use the context view service wrapper
Polish up restart dialogs and switch to using Language instead of language (#154382)
Git - Commit action button should use smart commit settings (#154169)
Check save settings before debug restart (#154206)
add allow automatic tasks setting (#154171)
trigger extensions change when profile changed
adopt extension installation in profiles in web
Bump version to 1.70 (#154371)
Bump api notebook milestone (#154369)
Only update storage `IS_NEW_KEY` once (#154313)
Move smart select and folding to md language server (#154334)
Use preexec $1 not history and send command
chore: update distro
Use BASH_COMMAND instead of history for empty command detection
fix compile issue
standalone theme service: improve detection, toggle (#154357)
joh/issue145374 (#154360)
make task setting keys into an enum (#154322)
show fit to content width in command palette  (#154325)
chore: update cachesalt
chore: update github workflow cache
chore: bump electron@19.0.7
Mention icon in terminal icon/color settings
filter application extensions from non default profile
adopt profiles in web extensions scanning
Revert "more specific setting names"
üî® Refactor "Surround With Snippet" editor contribution into workbench contribution
bump distro (#154344)
read extensions resource from userDataProfileService
focus last (not first) symbol enclosing position, refines https://github.com/microsoft/vscode/issues/154246 (#154340)
update yarn.lock (#154336)
Edit showFoldingControls to have a never setting (#153764)
Remove app insights (#154296)
use user's `.zsh_history` (#154300)
Correct conditional calling func instead of comparing
re #153743. Move codicon out of translation string (#154323)
increase barrier for available profiles to be ready (#154290)
more specific setting names
Update src/vs/workbench/contrib/terminal/browser/terminalProfileResolverService.ts
Update src/vs/workbench/contrib/terminal/browser/terminalProfileResolverService.ts
Switch extensions to 1DS (#154299)
Add command to copy output of the last command (#152097) (#153235)
only show output button when a command's markers haven't been disposed of (#154220)
Move some text out of localization string for integrated terminal settings (#154318)
Replace all Terminal codicon references with default icon
Scaffold out basic markdown language server (#154293)
Add icon in defaultIcon description
Commands for Navigating Call Stack (#154117)
Pick up latest TS for building VS Code (#154312)
Remove collections.forEach (#154314)
removed comments
fixed bad scroll error
re #153865. ICommandActionTitle for notebook (#154307)
Register commands correctly with original title, #153865 (#154297)
working with kinda styled menu
Move fuzzy/contiguous filtering into quick pick
Carry value over to new search
Allow use of contiguous or fuzzy search in run recent
Make run recent command use contiguous filtering
replace forEach in resolver service (#154286)
üÜô distro (#154292)
Debt - `sessionSync` -> `editSessions` (#154289)
debug/testing: fixup localized commands
npm: remove icon from localization
testing: don't make testing a workspace view
Add copy command to command decoration menu
Add separators to command decoration menu
Update xterm
Update distro (#154283)
remove application scoped extensions while copying (#154278)
remove `forEach` for tasks  (#154273)
skip application scope settings while copying (#154280)
joh/plastic fowl (#154275)
add `hide` property to configure which tasks appear in the `Tasks: run task` quickpick (#154166)
support vscode.dev link generation in notebook editor (#154183)
GitHub - Add translation comment not to translate the $(github) codicon (#154269)
stub `activationEventIsDone` function, (#154276)
üî® Move 'Surround With Snippet' from quick fixes to refactorings
Improve comment
Prevent unicode11 addon from loading in unit tests
Properly display the warning message
[html] unresolved import error in embedded JavaScript (#154261)
remove forEach usage (#154259)
Ensure exact match links are only checked on absolute paths
Include if client is in unsupported mode & include restricted mode in copy (#154209)
do not compute profiles always
remove totally unneeded hack that slipped through... (#154254)
fix using extension resource
remove CustomUserDataProfile type
remove `forEach` usage in my and some other places (#154252)
support `noSelect` for the `editor.action.triggerSuggest` command (#154251)
remove return type for setProfileForWorkspace
Relative -> absolute path
always include default profile in the profiles
select the symbol under cursor when opening quick pick (#154247)
Move resizable to base
remove migration
merge newProfile with createProfile
show error when action fails
extract default extensions profile init and uninit invoke it from main
move reset default profile to UserDataProfilesService
make sure document outline uses the code editor service from the current (code) editor
add `ICodeEditorService#registerCodeEditorOpenHandler` so that 3rd parties can influence opening, e.g diff or merge editor
File watcher stops working with malformed workspace file (fix #153881) (#154231)
storage - :lipstick: (#154230)
electron - log unexpected `setJumpList` result (#154228)
Detect terminal links with space, then line:col (#153957)
RPM: Make /usr/bin/code owned by package (#142907)
Debt - clean up edit session action option declaration (#154202)
Remove fakeroot wrapper, when building .rpm packages (#153249)
Debt - Add dedicated Edit Sessions output channel (#154190)
Remove use of forEach (#154196)
joh/theoretical quokka (#154157)
Remove reliance on document.lineAt (#154191)
Update UTC flags properly for 1DS (#154189)
Clean up in profiles land (#154188)
Support detecting eslint compact link format in term
Enable auto shell integration by default
Add ellipsis to recent command/dir commands
Comments editor should respect autoClosingBrackets (#154154)
Improves observable name.
Add a setting to enable `sandbox: true` for windows (#154062)
Update grammars (#154099)
Adresses #153865 (#154100)
status bar - prevent default of key event (fix #154071) (#154130)
macOS: adjust traffic lights when command center is visible #154131 (#154132)
Use DebounceEmitter
Git - Update commit button icon and tooltip based on branch protection (#154101)
set JS compile target to `2021`
enable `"ES2021.Promise", "ES2021.String", "ES2021.WeakRef"` as lib-dependencies as our runtimes have caught up
Improves observable tests.
Debt - Prevent icon translations (#154094)
completes observable refactoring (#154089)
make CC be two special `MenuEntryActionViewItem` instances and style them as one
make sure focus outline fits into CC box
push workaround for https://github.com/microsoft/vscode/issues/154083 (#154084)
SCM - More focus related fixes to the commit action button (#154087)
introduce immediate update (#154082)
use `ICommandActionTitle` over simple string (#154081)
debt - add `Event#fromObservable` to bridge between observables and emitters (#154069)
enable import/export profiles actions in no profile mode (#154022)
adopt #153865 (#154067)
Add a flag to honour the  config when calling applyEdit form an extension
Process explorer: indicate extension host better (fix #150820) (#154043)
Removes old observable test.
Improves 3wm observables.
Moves observables to base/common. Adds observable tests & logging.
Use middle click on a checkbox to toggle its state.
navigation now only considers actual conflicts.
Add missing register for onData listener
Cannot read properties of undefined (reading 'resource') (fix #153361) (#153960)
Move debounce onto onDidRenderAsync
use ILocalizedString in a few places (#153950)
update command title for better localization (#153940)
Allow to specify language id in command to create a new untitled file (#153872)
have edit sessions use ILocalizedString (#153933)
Disable inline completions by default for Emmet (#153926)
use simple SPAN elements over `IconLabel`
add an option to discard merge changes
Improve layout modes and workbench layout
be tolerant to other events happing but still enforce that the expected events are there
Share link from File Menu shouldn't include active file (#153911)
Git - Disable commit button while merge is in progress (#153890)
Update id of markdown-it renderer (#153876)
working dispoable menu
Re #153850. Add logs for iw creation. (#153862)
Don't include reference links that are inside other links (#153864)
Show both localized and original edit sessions command names in palette (#153870)
Handle fs error in markdown path completions (#153869)
Keep block cursor as wide as a typical character when it sits on a tab (#153859)
Allow quotes in links if the link didn't begin with quotes (#153857)
add `task.showDecorations` setting (#153851)
working menu item clicks
Store authentication session ID as machine specific data (#153846)
remove es5ClassCompat
testing: fix layout issues for long test labels (#153838)
Correct id type, inherit id/color individually from parent
Git - Do not show Sync Changes and Publish Branch action button when commit is in progress (#153821)
Adds menu separator.
Makes "Remaining Conflicts" localizable.
chore: update distro (#153818)
Git - Tweak the git.useEditorAsCommitInput setting description (#153794)
fixes #152430
disable profiles feature in stable quality (#153796)
Adjusts command naming.
Git - "Commit & Push" command now publishes the branch if there is no tracking remote (#153749)
Include comments exporting of translations (#153769)
Support removing and adding the same extension but at different versions (#153761)
Make tree view always write `text/uri-list` (#153758)
Allow tree to specify `'files'` as drop type (#153751)
Update seti for the gitcommit language (#153711)
Always ask the editor to layout when the hover contents change (#153740)
Git - Disable undo last commit command while commit is in progress (#153739)
Only inherit parent task icon if it's not set
Use English as the default instead of navigator.language (#153733)
fix find issue (#153732)
show icon/color in default build task quickpick (#153705)
Updates storage scopes for trustedDomains (#153723)
Udpate classifier.json for task ownership (#153709)
Remove State from Debug Console Quick Access (#153626)
Remove info icons from Settings editor indicators + other small fixes (#153621)
Shorten Settings editor aria labels (#153625)
durationSinceUpdate should be in seconds
calling `executeCommand` for a locally known extension cmd should fire activation event (#153683)
Adds precondition to merge editor commands, uses merge editor context constant.
Git - Add commands to the editor title to accept/discard commit message (#153692)
joh/issue150862 (#153677)
Don't show "Accept both" when not both can be accepted. Don't show "Swap" when it does not have an effect.
Removes NLS string concatenation.
 fix 153492 (#153667)
check version while switching profiles (#153672)
Share link shows with untitled document (#153671)
Git - Action button precedence (#153662)
Tweaks checkbox tooltip.
Git - do not add a separate after the last command group (#153649)
Make the guided git.missing welcome view default (#149668)
Deprecate `editor.deltaDecorations` (#153529)
Change "Show Loaded Scripts" to "Open Loaded Script..." (#153628)
set icon from configuring task on contributed task (#153607)
[typescript-language-features] Add setting for autoImportFileExcludePatterns (#153160)
Improve perf when dragging tabs (#153623)
addedn select parses out code action, need to convert into actual runnable item
reset to default profile if current profile is removed (#153609)
Notify when there are no edit sessions to apply (#153608)
Log when clearing cached edit sessions auth info (#153610)
polish message for watch task hover (#153606)
Git - commit action button does not appear on the initial commit (#153605)
Git - fix secondary action localization (#153604)
Do not store empty edit sessions (#153599)
add task icon description (#153596)
show icon in `Show All` tasks quickpick (#153595)
debug: bump js-debug for 1.69 (#153571)
fix menu bar flyout positioning (#153558)
Add support for angle bracket matching and colorization in Typescript
Disable code lens and gutter for input 1 and 2.
Don't export VSCODE_SHELL_INTEGRATION
added a widget on click, working on functionality
Polish shell integration failure hover
QuickPick - fix sorting when label contains an icon (#153475)
Extend IContextKeyChangeEvent as a better solution for #152775 (#153402)
Polish command actions messages
Save some time and skip installing packages that are already there only in the Basic Checks build (#153487)
Revert #151184 (#153482)
Support `Transform to Kebab Case` (#147956)
report when search is finished (#153464)
Save some time and skip installing packages that are already there (#153467)
Updates 3wm color ids.
Adds some merge editor tests & diffing bug fix.
Avoid `editor.deltaDecorations` (#153463)
remove old way of handling conflicts (#153456)
Git - Remove icons from branch picker to address regression (#153433)
Drag on + to leave multiline comment (#153310)
remove redundant telemetryService variable
Using NullTelemetryService instead of mock
merge editor - caller reverts (#153415)
merge editor - fix URI check for view state (#153416)
fix inlay hints being offset by 1px in some cases
chore: 1.69 OSS tool updates (#153399)
Add `notebook.editorBackground` color customization (#153255)
reenable localization smoke tests (#153397)
Only compute diagnostics for opened md files (#153395)
fix generic mark hover (#153385)
fix: cursorWordPart commands cannot handle camel case word with number (#147074)
Adopt import and export features (#153379)
move to APPLICATION for all auth usages (#153381)
Add config for disable arrows in diff (#153199)
fix: typo (#153187)
support profiles in empty window (#153371)
Use more standard values for scheme constants (#153367)
Adopt `createServices` utility (#153370)
fix: typos (#153229)
Ensure extension hosts terminate in reverse order of creation (#153364)
Initial contents for experimentation in typescript-language-features. (#153358)
Dispose in markdown tests (#153345)
improve confirmation when closing merge editor in the presense of conflicts (#153341)
update simple find widget to use modified search addon return result (#153264)
drop status for background tasks when process exits (#153337)
update xterm.js (#153354)
trim right when copying output (#153359)
Clarify label on source action (#153356)
Add classlist check (#153346)
show more link results  (#153263)
Quick Access For Loaded Scripts (#152680)
Enable commenting before revealing the comment (#153332)
Remove duplicate declarations in terminal (#153280)
implement `tracksEditorViewState` and `computeEditorViewState` (#153315)
Change view size to change term view by 4 cells
refresh extension view on profile change (#153302)
fix #153183 (#153313)
add icon, colors to settings profile status bar entry (#153308)
Sets max debounce rate for inline completions to 50. (#152747)
Add "Do Not Disturb" Mode (#149645)
joh/issue152834 (#153298)
Adopt `StorageScope.Application` (#153297)
enable merge editor for the team
rename setting to `git.mergeEditor`, no more experimental
assign 'VSCode-SessionId' header in marketplace.ts
fix transpile on windows (#153285)
when comparing suggestions then use their `textLabel` (#153283)
apply new language to all 3wm models (#153278)
Add a Share menu and a share vscode.dev command (#152765)
fix: rpm dependency on gdk-pixbuf (#153276)
remember view containers that aren't registered yet (#153150)
Engineering - Update notebooks (#153273)
Bump shell-quote from 1.7.2 to 1.7.3 (#152789)
Bump got from 11.8.1 to 11.8.5 in /build (#152788)
Bump shell-quote from 1.7.2 to 1.7.3 in /test/smoke (#152842)
Allow dependabot to make yarn.lock changes (#153240)
SCM - Use default cursor for the action button list item (#153107)
refactor: :stethoscope: use StorageScope.Application for update feature
chore: update electron@18.3.5 (#153231)
implement `IEditorInput#confirm`  (#153211)
- fix clean up logic - fix installing other versions do not uninstall in profile mode - add more logging
reset only map
reset when all profiles are removed
Improve extensions management in profiles - Make version property mandatory in extension profiles (like in web) - Extend extensions clean up to profiles - Add necessay changes in other services to support extension cleanup: - Introduce INativeServerExtensionManagementService - Extend profile change event to provide added and removed profiles
More granular TerminalExitReason
Proposal TerminalExitStatus
üî® Opt to newly defined `pickTerminalCwd` for picking new terminal CWD
üéÅ Add alternative CWD picker for temrinals (instead of workspace folder picker command)
‚öóÔ∏è Add tests to verify `shrinkWorkspaceFolderCwdPairs` function
üéÅ Add `shrinkWorkspaceFolderCwdPairs` to drop repeated CWDs
fix menubar visibility events when moving menubar (#153179)
use extension id as key not folder name which is more accurate (#153178)
Dispose quickpick after it resolves (#153177)
üÜôdistro (#153175)
force primary click on dropdowns (#153176)
Markdown path completions tests use mocked out fs (#153045)
Add `contribEditSessions` proposed API (#153165)
Better handling of text/uri-list in built-in extensions (#153163)
Improve hovers in title bar (#153166)
update storage scope from profile to application (#153169)
Enable angle bracket path completions in markdown (#153158)
Use `CancellationToken.None` instead of creating a new CTS (#153162)
debug: improve step in target UI (#152131)
Exclude empty links from md results (#153161)
fallback in else of loader & remove csp addition (#153148)
Add language overrides to Modified Elsewhere hover (#153041)
Disable shell integration if history erasedups is set
Markdown document links should reveal cell in notebook (#153147)
Git - Add icons to branch picker (#153149)
Match word links without the cwd if the cwd resolved text wasn't found (#153141)
Add aria telemetry preference to product service (#153146)
disable shell integration telemetry improvements (#153139)
Delete "set kernel as default" button which did not really work (#153053)
improve name
Update comment for allowMidWordMatch
Always show overview ruler decorations before command execution
retain profile while saving workspace as (#153128)
keep a stack of active alternative go-to command invocations and prevent endless recursion with that. (this needed a static cached because I cannot pass a "don't recurse" flag to the underlying editor action) (#153123)
Improve performance of CompressibleAsyncDataTree (#152961)
add progress reporting for fetching repos (#153082)
use APPLICATION scope for bisect state storage, (#153126)
Break at the start of multiple `BREAK_BEFORE` chars and at the end of multiple `BREAK_AFTER` chars (#153121)
Git - commit action button (#153031)
don't disable code editor contributions (#153119)
don't override `capabilities` and go with inherited capabilities for result-resource, (#153118)
Bump distro (#153117)
always `preserveFocus` when calling `_open.mergeEditor` (#153113)
Manually recover from a missing `mouseleave` or missing `mouseout` event (#153112)
Switch to newer `mouseleave` event (#153111)
add tests (#153106)
have two distinct command for "Mixed Layout" and "Column Layout", add them to merge editor overflow, persist the selected layout via sync'd storage (#153108)
[json] use language indicator for folding limit warnings (#153104)
SCM - Add MessageController to SCM input (#153102)
joh/issue151136 (#153101)
Dispose `UtilityProcess` listeners (#153096)
Problems table - Focus table when clicking on the empty space (#153097)
Forward `editor.accessibilitySupport` to the SCM input (#153099)
Comments: Wrap non-Markdown content (#152987)
chore: bump electron@18.3.5 (#153091)
add auto-hide option for minimap (default = false) which shows minimap only when hover over its region
joh/careful silverfish (#153089)
Moves helper function `h` to base/browser/dom
Git - Update git.terminalGitEditor default value (#153085)
adopt snippets with profile change (#153079)
adopt keybindings for profile change (#153077)
rev distro and only use nlsService when not using English (#153071)
tests - skip all flaky webview tests (#153066) (#153067)
fix #152854 (#153069)
Use ResourceMap (#153051)
improve simple find widget accessibility (#153058)
pass in fallbacktranslations for when there isn't a translation for a specific string (#153050)
Split up MD link tests (#153048)
Update extension telemetry modules (#153057)
donot register profiles enablement setting in web (#153049)
Leverage the unpkg service to get translations of built-in extensions package.json (#152506)
fix deleting profiles and clean up default extensions profile (#153047)
Enable settings profiles behind experimental flag (#153044)
Pull history from shell history files into recent commands (#152936)
add generic marker sequence and markers/decorations for problems (#152671)
fix #153033 (#153042)
Always add a fallback to the editor font family (#153043)
filter extension management events per profile (#153036)
Avoid `START_NATIVE_LOG` and `END_NATIVE_LOG` appearing in integration test output
Send telemetry data on the base data object (#153034)
support application scoped extensions (#152975)
Integration with bash-preexec
Improve edit sessions authentication usability (#153011)
Git - Remove git.branchProtectionIndicator setting (#153020)
Reuse `safeStringify`
Share console wrapping code
Add improved logging for edit sessions (#153016)
Change name of setting to allowMidWordMatch
Optimize NoLinkRanges lookup (#153010)
fix compact menu coloring in the title bar (#153007)
only apply text-transform uppercase to panet title (#153005)
skip flaky webview test (#150682) (#153006)
Use const enums for marker strings
passing test for https://github.com/microsoft/vscode/issues/152882 (#152998)
cleanup: initialize profiles when state is initiaized (#153002)
Debt - register setting from contribution file (#152996)
CLI: initialize state and profiles (#152994)
Clean up and disable command detection in common protocol
fixes #151892 (#152908)
Alt -> Option in open recent
Reduce duplication
Disable editor commenting in zen mode (#152983)
Allow modifying the recent command/dir in terminal
Adopts category for commands.
have `compilation#transpileTask` as a separate place for tweaks
Align duplicated code before merging
Configure if the regular console should also be used via `IExtensionHostInitData`
Extension host console forwarding always uses `VSCODE_VERBOSE_LOGGING`
Configure if console stacks should be sent via `IExtensionHostInitData`
3wm: Adds compare commands.
Set up console forwarding in the extension host separately of `bootstrap-fork.js` (#152980)
Implements checkbox context menu.
Update vortex web endpoint (#152981)
Command to toggle editor commenting (#152978)
use new logic around nls (#152761)
use a different _internal_ API to get the output file names for a TS input file and its config... way faster than creating a program and using its internal API but needs some massage...
Git - fix regression with creating an empty commit (#152974)
SCM - SCMInput should use StorageScope.APPLICATION (#152878)
remove defaultProfile from IUserDataProfileService (#152960)
Add VSCode session id to gallery extension query
theme service: adopt storage scopes (#152838)
Use x-forwarded-host when evaluating the remote authority (#152871)
fix default profile (#152915)
chore: update electron@18.3.4 (#152927)
Remove icons from debug consoles in quick access (#152918)
Refactor telemetry appenders to reduce duplicated code (#152877)
Rename types in the markdown extension (#152905)
üéÅ Add "Remove expression" as an action bar command to debug watch expressions (#152861)
preview themes also for built-in themes (#152885)
Add envMixin to in Windows
fixes #152509 (#152904)
Allow nls in the base worker (#152887)
SCM - Action button localization fix (#152903)
Add `listActiveSelectionFocus` color token (#152260)
Re-validate md files when a linked to file is created or deleted (#152520)
After running extension tests, it is not necessary to exit the extension host process with a specific exit code (#152870)
introduce application config model (#152889)
let app menu menus zoom out even though title cant (#152898)
allow focusing of next and previous page w PageUp/Down when in navigation mode (#152522)
Prefer the markdown description in the preferences page (#152860)
üî® Indicate "No snippet available" on the picker
Dispose custom hover after clicking link (#152800)
manually inline const-enum into webviewPreloads.ts because that file cannot have imports (#152880)
Tweaks command names.
Implements 3wm navigation commands.
When in between two columns, prefer the column which is closer to the mouse horizontal offset (#152866)
Close the message port when the extension host is disposed
Improve logging
Don't pass on CKS change events from parent, when all changed keys are overridden by the child scoped CKS (#152775)
cli - release `--wait` if opening fails (fix #152432) (#152856)
Standardize text/uri-list handling (#152756)
Add a context menu to show/hide the minimap (#152850)
Don't install keyboard layout change listener in CI (#152853)
SCM - Add capability to disable the SCM action button (#152849)
Some 3wm cleanup.
Git - add settings to control the branch protection indicator (#152469)
Use `AuthenticationSession.account.id` to dedupe sessions (#152774)
Enable md paste actions by default (#152810)
Halve the number of executions to speed up test (#152768)
Add envMixin changes to tests
Always emit command finished sequence
Better getting started experience for Jupyter (#152380)
Reduce recomputation of state in markdown extension (#152804)
Document experimental setting, `sessionSync` -> `editSessions` (#152808)
Clarify edit session command names (#152801)
Add quick access for debug consoles (#152505)
View menu access for debug consoles (#152406)
Use `StorageScope.Application` for edit session auth preference (#152798)
Allow manual install for pwsh
Support manual zsh shell integration install
Prevent recursing in the bash script
Allow bash shell integration manual install
Do not set `editSessionId` in source workspace (#152794)
Add logging for MD language features (#152792)
Delete edit sessions after they have been applied (#152530)
Enable translations of extension manifests on the marketplace (#152276)
update distro to pick up changes to jupyter proposed API (#152784)
Watch "not available" appears in the color of the last type (#152783)
SCM - Add action button tooltip (#152782)
Remove custom editor tests (#152777)
Cleanup pass for md extension (#152760)
Enable alwaysStrict for build scripts (#152778)
Tweak message/localization
Deduplicate account sessions when signing into edit sessions (#152772)
another fix for pty host logging (#152769)
Clean settings between suites
Keep selected kernel from untitled notebook when saving. (#152280)
tranform snippet into normal text whenever a snippet edit cannot be performed
check default flag while creating profile storage (#152763)
don't escape text edits as snippets
Scrolls to first conflict.
Change profile options to use defaults or not (#152737)
Adds title property to command. Renames 3wm editor default titles to input1/input2.
Add web command to request device access (#152310)
Try a compact/hamburger menu in the title bar when using the cmd center (#152523)
Progress on 3wm
Don't dispose model reference to properly set language id.
Show toggle size to content width in command palette
Addresses feedback from PR.
Create a regular profile to work better on CI
Move some term keys back to application scope
Implements block decorations feature.
profiles - adopt new scopes (#152679) (#152735)
üî® Take out core functionality class from SurroundWithSnippet action
Preserve `editSessionId` for protocol urls (#152669)
Remove comments/logs
Document and remove unneeded command
notification - rename `GLOBAL` to `APPLICATION` (#152734)
storage - rename `GLOBAL` to `APPLICATION` (#152730)
Introduce and adopt profile management events (#152724)
fix compilation (#152723)
Rename `StorageScope.Global` to `Profile` (#152703)
ensure layout controll flows with flex, give CC a min-width (#152717)
use z-index lower than quick pick z-index (#152712)
remove top/bottom margin from CC so that window can be dragged (#152710)
adopt to application scope (#152708)
Reduce number of times MD docs are re-tokenized (#152674)
Use same ID for reload to reconnect
Add note to description
Change modified in to use custom hover (#152401)
Expand paste controller to copy whole line on empty selection (#152689)
Skip diagnostics for non-open md files (#152687)
Ensure 1DS can load on the web (#152678)
adopt to application scope (#152683)
send start/end sequences for tasks with echo set to false (#152676)
Update src/vs/workbench/contrib/terminal/browser/terminalInstance.ts
fix test
Prefer third party renderer over builtin one. (#152670)
Be more descriptive
Address feedback to use options for anyScore too
Remove cosmetic change
Preserve properties and measurements (#152665)
Don't try parsing non-markdown files (#152661)
Always create DecorationAddon, synthetic data tests
ability to switch profile without reload (#152652)
fix
Create write data to terminal dev command
Gulp watch again to update monaco.d.ts
Update src/vs/workbench/contrib/terminal/browser/media/shellIntegration-bash.sh
fix exit code not showing up etc
Preserve spaces in testing labels using icons (#152630) (#152646)
chore: bump electron@18.3.4 (#152624)
Optimize markdown workspace scanning (#152563)
Improve markdown link regexp (#152533)
Self review cleanup
Get info from terminal editor
fix integration tests
fix missing horizontal bracket guides when editor.wrappingIndent == "same" (#149074)
Don't hardcode use of github slugifier (#152507)
Update codicons (#152516)
return after relaunch
Update codicons (#152512)
fixed tests in extHostLanguageFeatures
added fixes from comments and added required property on triggerAction
1DS appender for the web (#152489)
Add table of contents provider abstraction (#152504)
fix
Only reject promises if strictly necessary (in an attempt to reduce noise caused by `UnhandledPromiseRejectionWarning` always being logged)
Bump distro (#152483)
api - polish USB command (#152424)
Make sure _serializer is set before calling setTitle
add learn more action
check length of editor terminals
Use new method for settings in terminal split cwd smoke test
xterm-addon-webgl@0.12.0-beta.39
Disable terminal smoke tests on desktop/remote
Adopt the same export patterns in `vs/css` as in `vs/nls` and bring over tests (#152396)
Increase color contrast for list highlight (#152351)
json indent pattern: handle escape characters (#152475)
Avoid old import syntax (#152471)
Extract hover range computation to a separate method
No warning on unknown product icon name (#152468)
Turn on `UtilityProcess` by default
Improve env variable handling around extension host connection type (#152466)
add `cross-origin-isolated` to web-worker ext host iframe (#152462)
joh/issue150907 (#152447)
Try aligning tree view drop handling (#150468)
Pull in cpp grammar fixes (#152449)
html: observe insertFinalNewline (#152446)
fix: OOM crash with linux smoke tests (#152440)
update to latest swc/core
storage - add a test to assert that invalid path does not hang (#152441)
tests - skip flake (#152145) (#152442)
storage - do not attempt to `close` when path does not exist (#152438)
for now disable traffic-light updating
fix #152240 (#152431)
Refactor markdown language features (#152402)
debt - cleanup config migration (#152425)
move IUserDataProfileService to workbench (#152427)
Split IUserDataProfilesService (#152385)
storage - allow to migrate to a new profile (#152317)
Revert "fix smoke tests on linux (#152232)" (#152418)
chore: update electron@18.3.3 (#152410)
fix build: try not using utility proc by default (#152416)
Add experimental Continue Edit Session API command (#152375)
Stop removing app insights in the meantime (#152413)
Update src/vs/platform/terminal/node/ptyService.ts
Prevent terminals being attached to by multiple windows
allow for terminal arrow navigation when in accessibility mode (#152255)
Restore old buffers if no additional interactions happened
Update src/vs/workbench/contrib/terminal/browser/terminalInstance.ts
Update src/vs/workbench/contrib/terminal/browser/terminalInstance.ts
added telemetry tracking for quickfixes on hover, fixed import cycle error, and cleaned up code
Include more of the shims folder in attempt to fix build (#152398)
Add diagnostic manager enablement change tests (#152392)
add Focus word to debug console actions
Use `UtilityProcess` to spawn extension hosts and add a setting (#152344)
fixed some of the commented issues (naming, unused variables)
Edited shortcuts and cleanup for debug console changing
Add option to always reveal tests after state change (#152331)
Clean up markdown diagnostic tests (#152374)
fix on telemety on code action commands
fixed telemetry with code actions and git bug fix?
added telemetry and git fix
added teleemtry on codeactions
adding more code action telemetry
Bring the nls loader plugin into our sources (#152338)
add shell integration to tasks (#152242)
Split out VS Code reference provider from markdown reference provider (#152369)
shortcuts and command to navigate debug consoles #151772
apply to single tab as well
Refactor location of web app insights appender (#152358)
Update module ignores to include AI shims required by 1DS (#152367)
Revalidate linked files on header change (#152366)
Don't over-escape text edits (#152350)
Refactor Settings indicators to use custom hovers (#152359)
Splits up files of 3wm.
Refactors 3wm code.
Remove [Unsupported] annotation from title bar
xterm-addon-webgl@0.12.0-beta.39
Add readonly back in for _fuzzyScoreOptions
Avoid downloading builtin extensions (#152339)
Update settings.json
Add openTunnel embedder API (#152336)
Surface profile actions (#152332)
Avoid installing playwright (#152335)
fix: spawn calls from utility extension host (#152319)
Add command to toggle between light/dark color themes (#151554)
Dispose the management connection when the extension host exits after running tests or after a development session to avoid reconnection attempts (#152334)
Git - enable using the editor as the git commit input (#152158)
Git - branch protection (#152218)
Remove `getOrDefault` (#152258)
Improve screenreader alert when pausing (#152293)
Properly return a non 0 exit code in case a test times out and fix tests which used to time out (#152329)
`Keep Editors Open` -> `Disable Preview Mode` (fixes #152240) (#152322)
adopt to application scope (#152286)
Run shell integration tests a single time and revert timeout
Add an option to expose the firstMatchCanBeWeak as a setting people can set
Use more optional chaining in TS extension (#152271)
Disable windows shell integration tests only
Increase darwin timeout temporarily
Enable terminal tests on desktop
Speed up shell integration tests and improve reliability
revert quickpick changes, get to work for build task, and address fee‚Ä¶ (#152106)
updates for windows
Allow requestUsbDevice to take filters and return device data (#152257)
work on #151934
Adopt ResourceMap for MD diagnostics (#152264)
Switch to finalized TS protocol types (#152259)
Make `jsx: react` the default for implicit js/ts projects (#152256)
chore: bump electron@18.3.3 (#152236)
Implememts intra-line diffing & merging.
type check
add aria-description support for selectbox
Allow tests to run multiple times
after -> afterEach
Kill all terminals after each shell integration test
Simplify setting indicators (#152091)
fix smoke tests on linux (#152232)
Last pass using ?.() for method call (#152231)
adopt to application storage (#152224)
fix issues
Switch to std library Object functions (#152128)
Add Symbol.iterator functions for vscode.d.ts collection types (#151806)
Use `.?method()` in more places (#152112)
rename ref-viewlet's publisher back to `vscode` (#152213)
:lipstick:
don't wrap `menubar` inside the titlebar part
Deprecate collections.forEach (#152132)
Use dispose utility in commenting feature area (#152210)
Finalize data file reading API (#152127)
Bring the css loader plugin into our sources (#152205)
joh/ts transpile (#152199)
remove unused code (#152208)
Clean up outdated builtin extensions (#152207)
‚öóÔ∏è Prevent assertion helper method from altering args
Only show comment thread range when the comment is expanded (#152206)
update seti (#152157)
Run shell integration tests 100 times in CI
Setup remote pty host output channel
Create output channel for (local) pty host
SourceControlInputBox API finalization (#152171)
Improve error message when a module cannot be bundled and exclude vs/nls from bundles (#152188)
Localize 'Executing task' messages
tests - remote invalid proposed API (#152181)
Dispose overview rulers when the diff editor model is set (#152182)
use workspaceIdentifier while getting profile (#152177)
Revert "remove UpdateMode policy (#150357)" (#152155)
- implement profile CRUD operations - enable profile actions in dev mode
comment
dont create storage in default profile twice
revert experiment service change
:lipstick:
ux - dont use grab cursor (fixes #151918) (#152146)
fix imports
Reduce delays on test (#152129)
Set default icon for test tasks to beaker
Try prevent duplicate placeholder decorations showing
Build VS Code using latest TS nightly (#152130)
Add latex to markdown embedded languages (#151732)
Allow getting edit sessions by ref (#152116)
Check edit session schema version before applying it (#152118)
Disable copy/paste actions if editor is not focused (#152125)
Split markdown linkComputer from linkProvider (#152124)
xterm@4.19.0-beta.60
Cancel call to `deserializeWebviewPanel` if webview is disposed of (#152105)
Pass collection as third paramter to `DataTransfer.forEach` (#152101)
Mention history in terminal persistence settings
adding more code action telemetry
More clean up
Clean up
Move collections into attachPersistentProcess
Get environment variable collection status updating after reconnect
Git - add support for SSH Uri (#152051)
Add provides exclude for library files (#151043)
Mark FileSystemWatcher properties as readonly (#152098)
Switch to use objects instead of namespaces (#152094)
made parameters non-optional, fix on naming
Warn when applying edit session over working changes (#151999)
added telemetry for apply code action
Remove todo
Clean up comment
Allow messages to be subtle or loud
Remove extra `path` field in `FileLinksData` (#152004)
The previous value can be `undefined` in `applyUpdate` (#152068)
Problems view table - add dnd support (#152066)
Problems view table - reveal the selection when switching view modes (#152064)
set some main side storage things as application scoped
Engineering - standardize macOS support jobs (#151954)
adopt application scope
fix browser storage tests
No need to compile browser integration tests (#152061)
access current profile directly
Git - fix close all diff editors command (#152059)
adopt `isDefault`
remove need for profile on `WorkspaceStorageDatabaseClient`
:lipstick:
smoke - enable crash reporter (#152041)
- introduce isDefault property on profile - reuse application storage for global for default profile in web
Update fsharp grammar (#152048)
Icons missing from extension trees with resource uris (#152039) (#152050)
storage - add desktop support
storage - first cut profile support
profile enhancements (#152043)
Problems view - increase maximumWidth for Code and Source columns (#152040)
Revert "fix https://github.com/microsoft/vscode/issues/150293 (#151616)" (#152026)
Problems view table - remove left padding (#152022)
add compile configuration-editing to pipeline (#152020)
Adjust md external header link diagnostic range (#152001)
Tests for configuration editing completion providers (#151953)
Emmet inline completions (#151559)
debug: allow adapters to be deprecated (#151973)
Provide feedback on malformed JSON of argv.json (#151659)
support more external use in API
use task icon/color in quick pick  (#151990)
Clarify markdown validate settings (#151997)
Add web command to request usb access (#151795)
use name property for errornotelemetry (#151974)
allow setting icon/color for tasks (#151949)
Remove notebook editor decoration type (#151574)
bump style-loader (#151987)
Use classes for drop/paste edit types (#151980)
bump sinon-test (#151978)
bump file-loader (#151971)
update sponsor icon (#151972)
Skip encoding URI.toString in download service to avoid a malformed url (#151966)
Use `heart-filled` for sponsor icon (#151957)
Revert "rename references-view publisher to vscode so that NLS works, fixes https://github.com/microsoft/vscode/issues/142168 (#151696)" (#151969)
bump eslint-plugin-jsdoc (#151956)
fix compilation error (#151967)
fix state resource file name
comment
Introduces different colors for input1, input2 and result editor.
use default storage home location for extensions storage
use state resource from environment service
feedback: change stateHome to stateResource
Update sponsor colors for color contrast
pass StateMainService as dependency
update to 1.2.198
Bring back 1DS SDK (#151810)
Tighten up char level diffing
use local as base if not exists (#151944)
stripComments: remove trailing comma (#151941)
text editor - update `enableDropIntoEditor` according to `readOnly` (#151932)
json: use default word pattern (#151754)
fix issue with serialization, add todo for hacks
implement feedback
remove sample command
Engineering - fix macOS jobs (#151925)
add API proposal for `TextEdit#newText: SnippetString`
Improve extension hover (#151886)
Engineering - do not run SBOM tasks in macOSTest (#151915)
bump css-loader (#151899)
use fake timers to make tests faster (#151883)
Tests for char changes having enough information to reconstruct modified from original. Tests fail.
CharChanges now also report where text got inserted in original or where text got deleted in modified.
Problems view - Can't multi-select in table mode (#151788)
merge editor - enable editor settings (#150791)
text files - drop need for text editor control
text editors - push down readonlyness
text editors - :lipstick:
explore allowing snippet text edits as workspace edit
Derive enableDropIntoEditor from editorConfiguration.readOnly (#151777)
text editors - :lipstick:
text editors - more code sharing
Open file command does not start in relative to the current file's path (fix #151668) (#151819)
text editors - shuffle things around
text editors - avoid code editor dependencies for options
make sure ts-builder instance is being re-used
Bump distro (#151808)
Shell integration partially working for powerlevel10k
Revert "Initial adoption of 1DS Sdk (#151531)"
Adjust removable value, fixes #139175 (#151781)
Add more sanitization around the attributes in MD generated HTML (#149100)
Bump distro (#151782)
Initial implementation of Continue Edit Session (#151528)
Move sbom above publishing client (#151775)
Consistent terminal message style prototype
Initial adoption of 1DS Sdk (#151531)
speed up decorationService tests, https://github.com/microsoft/vscode/issues/149712 (#151761)
Use `any` instead of `unknown` for `thisArg` (#151762)
Arrows in side by side diff editor
don't override `env` when set for terminals w shell integration enabled (#151753)
Bump distro (#151751)
Allow '+' in authorities (#151750)
Wait for split to init before changing icon
Try to isolate failing ext host customers (#151743)
use const instead of literal (#151742)
Update C grammar locations (#151733)
Remove no longer useful and confusing `IKeybindingEvent` (#151735)
Call event-utils with a disposable store (#151731)
Add removeAllMarkers method in monaco api (#151237)
Polish PR template picker (#151415)
Cache/restore the node_modules folder in the build directory (#151725)
Improve keybinding dispatching logging (#151727)
update to new config name
Use info for duplicate submenu contribution (#151724)
remove `experimental` from command center setting, https://github.com/microsoft/vscode/issues/149445 (#151717)
update CC when keybindings change, fixes https://github.com/microsoft/vscode/issues/150897 (#151713)
Engineering - execute tests in parallel for the CI build (#151593)
chore: update cache key
chore: bump cache
rename references-view publisher to vscode so that NLS works, fixes https://github.com/microsoft/vscode/issues/142168 (#151696)
text editors - :lipstick:
fix formating
initialize state service
get back old import/export profile actions
fix https://github.com/microsoft/vscode/issues/150895 (#151699)
text editors - shuffle imports
fix compilation
disable profile actions
test: update vscode-test for error handling (#151698)
text editors - extract a `AbstractTextEditor`
Problems table - add tooltip for each cell (#151602)
ci - always publish log files (#151686)
Shorter label for "go to running cell" button (#151674)
allow excluding npm `install` script from the npm scripts view (#151647)
safer dispose of placeholder (#151646)
Also enable copy/paste API for cut (#151660)
Clean up DataTransferKind docs (#151656)
Add `thisArg` to `DataTransfer.forEach` (#151658)
Use optional method calls in more places (#151634)
Correctly resolve the icon asap when defaultProfile is null
use _ for private task vars (#151637)
[markdown] Ignore brackets inside link text (#151610)
1.68.0 -> 1.69.0 (#151635)
Ensure extension host errors get properly serialized (#151628)
Update src/vs/workbench/contrib/terminal/browser/links/terminalLinkOpeners.ts
Terminal search links: Prefer exact match against initial cwd
Improve terminal link debug logs
speed up the theme browsing from marketplace (#151622)
Removes unused symbols.
Set z-index of watermark (#151623)
reset terminal focus context key when panel closes or active editor changes and is not a terminal (#151618)
fix https://github.com/microsoft/vscode/issues/150293 (#151616)
feat: allow codicons in test labels (#151613)
tests - make some tests faster by smaller unit sizes (#151606)
missing compile output
Implement action to clear keyboard shortcuts search history (#151607)
add transpile only stream to tsb, using `ts.transpile`.
tests - make some tests faster by parallel writes and/or smaller unit sizes (#151605)
fix https://github.com/microsoft/vscode/issues/150811 (#151600)
add default label when having no workspace name (#151598)
recompile build folder with `const` over let
labels - help to resolve workspace folder in case resource scheme mismatch (#151591)
fix let vs const regression introduced by manual fix
manual fixing of prefer-const violations
split manual work into managable chunks and (again) disable const-destructuring unless all are const
Convert history commands to `Action2` (#151524)
matched naming convention and fixed issue with trigger.preview boolean:
Update to build using latest TS nightly (#151576)
Allow paste API to replace metadata on copy (#151572)
Show drag uis as soon as shift is released (#151569)
code cleanup, helper function on trigger
Adjust padding and outline of Settings editor scope widget tabs (#151567)
revert and fix on verification
fix on label and verification
fixed CodeActionTrigger preview variable and code cleanup
added refactor preview in command palette, refactor works as usual, refactor preview will pop up a preview
Finalize the notebook markdown renderer extension api (#151467)
Update text editor drop proposal (#151552)
Add user token to PR Chat (#151556)
Shorten name of separators (#151553)
set vars to `""` if the `no_unset` option is provided to `zsh` (#151542)
Iterate on paste edit provider api (#151477)
[typescript-language-features] Pass through all `typescript.unstable.*` settings (#151472)
Use notification instead for progress and ensure Language Pack gets synced (#151544)
dispose of marker first  (#151540)
[npm extension] exclude top level npm_modules when detecting npm scripts in workspaces (#150205)
Respect debug.console.closeOnEnd setting even when the debug console has been moved to another view. (#151535)
add condition for awaiting profiles in `createTerminal` (#151482)
debug: preserve scope expand state better (#151522)
use `:` separator for formulated  task name (#151440)
Switch deprecated editor.document -> editor.notebook (#151530)
add explict type-annotation after making variable const
auto-fixed prefer-const violation
use `prefer-const` default config
add a `transpileOnly` option to gulp-tsb
leverage the contribution to register the locale service instead (#151450)
Git - use editor as commit message input (#151491)
update notebook milestones
fix jsx text foreground in tomorrow-night theme (#151478)
prefer-const, ignore mixed destructuring statements for now
debug: enable crash reporter when running debugging (#151430)
add `prefer-const` lint rule
Engineering - macOS sign job optimization (#151120)
Engineering - Do not run macOSTest job if VSCODE_STEP_ON_IT is set (#150794)
ux - hide quick pickers from command palette (#151489)
debt - remove `getBaseLabel` (#151486)
Adopt ResourceMap in more places (#151475)
Use label service (#149001)
Simplify default override indicator impl (#151461)
Add resourceMap helper for markdown extension (#151471)
Debug breakpoint warning improvements (#151379)
wait for profiles to be ready before creating 1st terminal (#151452)
Keep webview from stealing focus from save dialog (#151391)
Add hc light class to webviews (#151441)
References view shows icons even though I have icons disabled (#151420) (#151424)
Adopt error no telemetry for filesystem providers. (#148832)
Document DataTransferItem (#151442)
fixes #144548 (#151448)
assign builtin flag for overridden remote builtin extensions (#151446)
Debug console items don't use cursor:pointer on windows (#151443)
Update grammars (#151383)
Use `I` prefix for task interfaces (#151350)
fixes #149366 (#151051)
Add DataTransferItem.kind (#151384)
Remote menu not showing when browsing marketplace (#151199)
disable interop, `noInterop: true`
push workaround for https://github.com/swc-project/swc/issues/4896
Focus editor for tab after dragged over for 1500 millis (#149604)
Clear tasks schema when there are new definitions (#151079)
Can't drag an item and drop it to an empty treeview (#151213)
Dragging multi-line `text/uri-list` from tree to editor results in error (#151224)
updates to latest swc
watcher - fix #151009, fix #148245 (#151407)
debt - ensure models are resolved (#151405)
electron - always call `window.show` (#151404)
debt - remove state migration (#151402)
Windows: piping from another process fails to update editor contents (fix #148952) (#151401)
debug: allow linking to ranges in debug console uris (#151335)
Watcher: allow to fully turn off a watcher for a workspace via `files.watcherExclude` (#150951)
Attempt post instead of get for endpoint (#151374)
move localeService to contrib (#151358)
Can't get tests to run with local bits, try submitting
Poor scrolling behavior after notebook model reset (#150306)
Add unit test
Increase config upload task timeout again (#151362)
bugfix on markdown underlines, addressing part of issue  #136073 (#151178)
Enable locale picker in web (#150496)
chore: update rpm deps (#151348)
testing: fix message being cut off on right size on sash resize (#151325)
chore: bump electron@17.4.7 (#151307)
Makes diff editor more reactive. Now, changes to inputs or base are handled gracefully.
chore: bump electron@18.3.2
Add `vscode.git` to proposed enabled extension for remote tests (#151253)
Add markdown to proposed enabled extension for remote tests (#151251)
Pick up TS 4.7.3 (#151246)
rev distro (#151233)
Git - Switch to using the remoteName context key (#151212)
Make sure PS1/2 aren't re-wrapped in bash shell integration
fix shell integration issues after clearing (#151223)
Add word boundary to bracket pair starting or ending with letters
Update telemetry events (#150363)
Validation not working in settings JSON (#151202)
Add initial support for `--socket-path` on Windows (#151174)
don't show shell integration tooltip for certain terminals  (#151172)
Remove debug mode comment
Update xterm
set overflow visible in safari for titlebar (#151162)
don't dispose of addon on relaunch of terminal  (#151139)
Git - Add minItems/maxItems for branch dictionary setting (#151132)
Don't allow links to end with `:` (#151122)
Sync builtin extensions with marketplace to update (#151112)
Git - branch name generation setting feedback (#151106)
Git log level polish (#151095)
Use `nls.localize` for user facing strings (#151094)
TreeDataProvider: iconPath is ignored for items with resourceUri (#151090)
Add test for #149130 (#151091)
Simplify computation of `charHorizontalOffset`
Rename `CharacterMapping.getVisibleColumn` to `getHorizontalOffset`
Add tests for character mappings
fix #151008 (#151068)
Adresses #149130 by not causing and endless-loop when token end-offsets are not sorted.
fix github push error handler regex (#151072)
Report sponsor extension action (#151070)
move wco behind an experimental setting (#151046)
add a comment for session.scopes (#151050)
Check whether cell is _entirely_ in the view, not partially (#151003)
Align auth scopes (#151045)
Add experimental tag to experimental extension settings (#151031)
Always set text/uri-list (#151028)
Also ignore star checkboxes (#151029)
Return scope array that was given to us so that account icon number goes away (#151027)
Better message for markdown reference links (#151018)
Disable shell integration smoke tests
Use EditorStateCancellationTokenSource (#151001)
fix #149371 (#150999)
Don't sync label formatters across machines
add ms-vscode.vscode-selfhost-test-provider to workspace recommendations (#150979)
Escape {} properly in bash terminal (#150933)
Rename absolute offset to visible column
Deleting .gitignore should re-reveal items (#150972)
better approach for codespaces `permissions` dev container schema (#150909)
Adds developer commands to easily share conflict examples.
Errors are not sorted by file path (#150962)
Reduce nodejs version >= 17 error to a warning in order to allow for smooth bisects in the future (#150969)
Accept capitalization in HTTP upgrade header (#150961)
fix compilation
change sponsor to object (#150952)
better type docs for validation message (#150923)
fix #150839 (#150922)
Don't parse checkboxes are links in markdown (#150914)
Quick spelling update (#150759)
fix wording (#150906)
Increase contrast for sponsor button (#150899)
rename (#150612)
Renames files.excludeGitIgnore -> explorer.excludeGitIgnore (#150848)
Updates distro
Don't save already submitted pending comments (#150847)
Disable shell integration error test
ci: fix 32-bit arm compilation (#150799)
update distro (#150751)
chore: update rpm deps
chore: update electron@18.3.0
chore: bump electron@18.1.0
chore: bump electron@18.0.0-beta.4
support keyboard accessibility (#150749)
retain machine scope while migrating (#150747)
debug: bump js-debug (#150733)
Run OSS Tool (#150729)
Add customizations.codespaces.repositories.permissions (#150555)
Use `IWindowsMainService` to find the response window (#150726)
chore: update electron@17.4.6 (#150727)
Update css grammar (#150724)
Always use node version 16 (#150722)
Ignore calls to open a tunnel when open is in progress (#150711)
Add onEnterRule for SassDoc documentation (fix #150598) (#150599)
bump vscode-policy-watcher (#150710)
get sponsor link from latest version always (#150708)
Implements tri-state checkbox, some scrolling bug-fixing and checkbox styling improvements.
review feedback - fine tune sponsor description (#150705)
Remove unused telemetry typings and fragment (#150222)
update distro (#150704)
set tooltip
change property name
Local history: Errors when restoring contents are silently swallowed (fix #149459) (#150681)
add sponsorLink property to package.json schema
chore: update electron@17.4.5 (#150676)
FIx #150252 (#150615)
#149712 make tests faster (#150611)
Remove Editor Drop Target Debug Overlay #149569 (#149570)
rename
New file opening error doesn't wrap properly for very long lines (fix #148968) (#150592)
update distro (#150579)
updating tas-client-umd to 0.1.6 (#150574)
Ensure access token comes from correct provider (#150473)
Lazy variable evaluation button causes problematic gaps and misalignments between nodes (#150572)
xterm@4.19.0-beta.56 - consistent overview ruler height
xterm@4.19.0-beta.55 - opaque selection in dom renderer
Allow debug extensions to show diagnostic information in the breakpoints view (#150558)
Clarify gpu acceleration off
Clarify gpuAcceleration canvas setting
`showTextDocument` is not respecting `preview: true` if user has `enablePreview` disabled (fix #149088) (#150552)
storage - remove telemetry for slow close calls but leave logging (#150550)
fix node version check
Update some milestones in notebooks (#150545)
Handle file:// uri links in terminal ending with :line:col suffix
show keybindings in quick open help (#150538)
Default the workspace name to the folder name first added. (fix #149531) (#150535)
Description is cut off when tabs are disabled and space is narrow (fix #150533) (#150534)
enable stable smoke tests (#150532)
remove sponsor action from header
show sponsor button in additional details
New window opens behind existing windows (fix #149394) (#150530)
- publisher sponship link from extension - show sponsor action in extension editor
Support TS's includeInlayVariableTypeHintsWhenTypeMatchesName setting (#150489)
Mark notebookContentProvider proposal as deprecated (#150493)
clip -> clipPath (#150492)
Update xterm
Disable notebook clipping (#150490)
Revert "A full editor can be used as git commit message editor (#95266)" (#150487)
Disable linux shell integration smoke tests
fix list view page up/down npe and add tests (#150476)
Don't autoselect a remote help item if there is more than one valid option
Skip error shell integration tests on Linux
Use debug trap mechanism inspired by starship command
Ensure selected font color is applied to list rows (#150461)
Enable grabbing translations from an alternate location for server distro/serverful scenarios (#150436)
improve configure display language & add clear display language preference (#150433)
Allow multiple entries with the same mimetype in dataTransfer (#150425)
Create cell execution beforehand (#150410)
Clear activation timeout if terminal is disposed
Adopt `setTimeout0` which doesn't suffer from the 4ms artificial delay that browsers introduce when the nesting level is > 5
show terminal find history placeholder on focus (#150409)
update endgame notebook (#150407)
re-enable terminal tabs test (#148966)
xterm@4.19.0-beta.52
quick draft PR for not throwing when looking for a chunked password (#150402)
don't add telemetry for feature terminals etc (#150224)
fix #150390 (#150395)
Prevent work for really long links
Clicking outline in notebook should reveal cell near the top of the editor (#150336)
update bash status correctly (#150322)
Ensure execution and kernel status visible when there are source commands contributed.
Code polishing
Implements synchronized scrolling.
make git "accept from merge editor" command save the document and close the merge editor (uses heuristic to identify merge editor tab)
A full editor can be used as git commit message editor (#95266)
add `git.experimental.mergeEditor` setting to enable/disable merge editor for conflicting files
use remote cli when in remote terminal (#150372)
titlebar with CC has same height as tabs bar
Disable Terrapin for OSS builds (#150374)
remove UpdateMode policy (#150357)
use fake timers (#150356)
Add PasteEditProvider (#107283)
editor gutter accept buttons bug-fixing.
Bump default JS target for scripts in html (#150240)
Engineering - Refactor cyclic dependency (#150343)
Enable file DataTransfer on tree views (#150328)
skip localization test until localized strings are present (#150326)
add telemetry comments (#150317)
More telemetry comments (#150303)
Rename LocalizationsService to LanguagePackService and misc moves (#150314)
Adopt TS 4.7 final (#150313)
Remove unnecessary interface addition
Use existing resize observer instead
Move "Configure Display Language" to Action2 (#150308)
Extract `NativeExtensionService` and register a real implementation based on `UtilityProcess` for the extension service in the sandbox case
Add owners to all telemetry events (#150296)
Remove empty line
show migrate action in extensions viewlet (#150301)
Extract `NativeLocalProcessExtensionHost`
Remove unnecessary changes
make sure page up and down goes to next page.
update layout troubleshooting
Add test for scrolling
Have the renderer side decide if it wants to use `UtilityProcess`
remove a bunch of casts
pass in registry
Extract connection strategies to two classes
undo `export import` workarounds
latest swc
SCMInput enablement proposed api (#150270)
Use an `UtilityProcess` for the extension host (#150167)
Don't run code review bot on draft PR (#150280)
move `USER_TASKS_GROUP_KEY` into tasks.ts, out of taskService.ts, and prevent cyclic dependency
make sure config listener is getting disposed
- Remove Show Extension button (#150274)
center align menubar menu buttons, don't assign fixed height to titlebar container
add missing CC rename
increase title part height when CC shows
show correct description for input2
use CSS variables for colors
clarify when/how setting is effective
rename `titleMenu` to `commandCenter`
Finalizes inline completions
well defined order for command center bwd/fwd buttons
fine tune message (#150251)
Show watch value in expression tooltip (#150237)
shim for menu service in more tests.
update tests
Add a test
Markdown ignoreLink should apply to paths in header links (#150223)
Finalize some interactive contribution points (#150234)
Cleanup data transfer types (#149774)
Finalize NotebookEditor api proposal (#149767)
Move out Settings editor indicator label impl (#150230)
Always watch resize so can handle post execute resizes
Add additional allowed tags in untrusted notebook markdown (#150228)
- Add Show Extension option to Install Anyway dialog (#150218)
Scrolling working
Update src/vs/workbench/contrib/tasks/test/common/taskConfiguration.test.ts
cleanup
rename
Update src/vs/workbench/contrib/tasks/test/common/configuration.test.ts
Update src/vs/workbench/contrib/tasks/test/common/configuration.test.ts
Close brace on redacted property (#150207)
- fix installing packs and deps in profiles - fix do not downloading same version
add tests
feat: inlay hints padding option
Bump distro (#150191)
Create bash explicitly on linux/mac in shell integration smoke tests
Problems view - add toggle to view problems in a tree/table (#149943)
adopt policy from configuration service
when temporarily showing/hiding inlay hints use the same "redraw range" that was used to compute inlays
change label to `Show Search Modes...`
switch bot assignment fro debug back to weinand
hide explicit IAction.
show install from marketplace only when there is no kernels and commands at all.
remove remaining kernel state.
- Save settings profile - Switch settings profile - Remove settings profile - Status bar entry
Format date strings with the right locale
update json schema (#150001)
polish names
DiagnosticsSupport for json and html
implement diagnostic pull
move globalStorageHome to userDataProfileService
Screen reader should read quick pick title field if set (#149992)
use current profile instead of default profile
support scanning, installing and uninstalling extensions in a profile
Bump php grammar, fix #142824, fix #116103 (#150067)
Ideas for tracking last output
:lipstick:
connection state in another pr
Add extension output label to url
Allow single source action to be executed without picking
Rename skipPaths to ignoreLinks (#150064)
Add scope resource (#150056)
fix task status issues (#149976)
Hide explorer entries based on git ignore file (#149967)
Normalize slashes on Windows to correct link URI
Use correct terminal dimensions when restoring a terminal
Re-enable shell integration tests for macOS
use css px increments for view size changes (#150039)
fix tests
Add "pnpm-lock.yaml" to the child patterns of "package.json" (#146869)
fixes #150034 (#150035)
better z-indexes for title menu and quick pick (#150033)
read tasks resource from profile
a bunch of ugly hacks to
update deps and config
Add an aria label to the checkall checkbox (#149994)
Run a job on `main` which only warms up the node modules cache (#150007)
Spawn the extension host directly from the main process because fork() is now fast again (#150002)
update distro
play (unsuccessfully...) with SWC
Inline webview main.js (#149983)
Allow reusing webview origins across reloads (#149950)
debug: bump js profile visualizer (#149981)
Render outputs a viewport above as well as below (#149879)
Pick up latest markdown-it-katex (#149978)
remote: fix wrong event name used for latency (#149973)
move user data resources to user data profile
Allow cancelling webview's readFileStream (#149964)
Changing dependency syntax for markdown-it-katex (#149962)
Improve Counter-Zoom Handling for Context Views (#149958)
Pick up latest TS nightly for building VS Code (#149959)
Align menubar hover background with rest of titlebar items (#149956)
Add indicator, fixes #148672 (#149294)
let -> const
build: :arrow_up: bump deemon (#149938)
dispose native policy service on shutdown
extract logic for title suffix and prefix computations and use it for title menu
css/html/json update to lsp 8 (#148715)
perf improvements
reduce roundtrps - send policies data to workbench and shared process
Add a basic check (#149832)
chore: bump electron@17.4.4 (#149896)
update loader (#149878)
Add WebviewInitInfo type (#149877)
Lots of bug fixing & minor improvements.
Expose outputItem in notebook markdown eve (#149870)
Remove unfinished test (#149864)
Add skipPaths option for markdown link validation (#149859)
Handle multiline commit messages when creating PR (#149426)
add ExtensionVersion filter in assignment service (#149845)
Enable strictNullChecks for implicit projects (#149844)
Update list of enabled APIs (#149838)
Clean up terminal xterm theme setting function
Support selection foreground in terminal
fixes #143887 (#149836)
fixes #149013 (#149785)
Report extension list (#147960)
update native policy service
add vscode-policy-watcher dependency, support registerPolicyDefinitions
update vscode-grammar-updater
Use the pointer cursor for links in the banner bar (#149738)
cleanup vscode-policy-watcher
depend on vscode-policy-watcher
Engineering - Exploration to run tests in parallel (#149698)
load source commands
Show the debug adapter label when hovering the type in launch.json (#149786)
Adopt notebookWorkspaceEdit proposal internally (#149778)
Workaround for the webview positioning bug (#137506)
Sort used debug extensions to the top when clicking "Run and Debug". Towards #146338 (#149773)
Reduce usages of `editor.deltaDecorations` (#149768)
fixes #149438 (#149761)
Annotate error fragment (#149760)
Skip shell integration smoke tests on mac as well
Polish notebook workspace edit (#149734)
add back running on close (#149751)
Add drop into editor option (#147049)
Revert running on PR close (#149747)
Adopt queue review bot behaviour (#149745)
convert to integration tests (#149744)
Revert "Adopt `setTimeout0()` which doesn't suffer from the 4ms artificial delay that browsers set when the nesting level is > 5. (#149723)" (#149742)
Localize "Suggested" (#149684)
make tests faster - remove unnecessary validations - group writes
fix layer break (#149735)
Rename to DocumentOnDropEditProvider (#149730)
Pick up latest Marked.js release (#149729)
Adopt `setTimeout0()` which doesn't suffer from the 4ms artificial delay that browsers set when the nesting level is > 5. (#149723)
revert the change (#149726)
use fake timer (#149725)
add additional telemetry for connection latency and duration (#149398)
Adopt `runWithFakedTimers` to speed up tests (for #149712) (#149724)
- faster unit tests use faketimer - little refactoring
make `getWordAtText`-config configurable and use lower budget for speedy tests
fix tests
Adopt `runWithFakedTimers` to speed up tests (#149712) (#149720)
Reduce usages of `editor.deltaDecorations` (#149718)
register policy definitions from policy configuration
Split up link computer cases unit test
add telemetry event comments and owner (#149070)
git should open merge editor with detail and description (tag and commit-hash)
show `detail` atop of code view
Engineering - Run PR pipeline for the main branch (#149700)
Add scope for settings (#149696)
update distro
fix wordings
Switch agent pools (#149691)
use FilePolicyService
Post old version comment as bot rather than "github actions" (#149687)
wip: registerPolicyDefinitions
delete policy removals
make sure policy init always returns the right values
fix policy ipc serialization
Add hasPolicy tag
Update custom menu styles (#149187)
Don't detect links in markdown code blocks (#149680)
Update markdown diagnostics when linked files change (#149672)
Update src/vs/workbench/contrib/terminal/browser/xterm/xtermTerminal.ts
clean up
Add bot comment on issues mentioning old vscode version (#149669)
revert more changes
Update src/vs/platform/terminal/common/xterm/shellIntegrationAddon.ts
fix compile error
figure out proper init
works!
remove enum
wire up policy service
fix bad rebase
Use maxTokenizationLineLength in monarch
add ability to provide detail and description for `input1` and `input2`. This isn't wire up yet because it requires bigger changes in git-land
Enable enabling js/ts.implicitProjectConfig.checkJs by default (#149660)
Add notebookWorkspaceEdit api proposal (#149128)
remove main thread proxy kenrel
Refine notebookEditor proposal (#149656)
Move to new bot name (#149658)
cleanup
define HC border colors, also suppress default dashed-outlined
do not support refresh for policies
wip: policy
Avoid using `deltaDecorations` in cases where it could recurse (#149644)
Sort already-activated debug extensions to the top when clicking "Run and Debug". Towards #146338 (#149517)
support deprecated extensions
Avoid symbol instantiation.
fire event when command center hides/show so that it can be relayouted
fix with-calc
use ellipsis when workspace name overflows command center
Implements gutter buttons.
use search-icon instead of "Search" prefix
Remove proxy controller.
Notebook state only.
Migrate test repo to service principal's account (#149510)
Force matching file filter to be added to save dialog (#149504)
Update xterm for contrast ratio luminance change
Add a high contrast border around simple find widget
Update foreground color of extension list item descriptions (#149485)
Update xterm and make term find styles consistent with editor
Disable shell integration smoke tests on Linux (#149376)
Git - Add trace level telemetry to repository discovery (#149469)
use custom hover for title menu aka command center
support custom hover for simple `ActionBar` and simple `ActionViewItem`
Add branch protection settings (#149437)
update distro to inclcude new rust recommendation
tiny css tweaks for title menu
render dropdown-like element with search command and invoke quick open help from it
remove `TitleMenuQuickPick` again
Only run arm64 server job if arm64 client job will be run (#149439)
Git - branch protection (#149360)
better default colors, wire in missing colors
fix word range in XML. For #149318
Implements glyph buttons, alignment and decorations.
snippet completion provide shouldn't rely on word at position but use actual choice range, fixes https://github.com/microsoft/vscode/issues/148976
Add client version information to `/web-extension-resource/` (#149370)
Add "Open Containing Folder" etc to file context menu in Git SCM view (#149150)
Update pr-chat.yml (#149411)
only match against notebook uri when document selector specificies notebook type, fixes https://github.com/microsoft/vscode/issues/149363
Don't treat escaped markdown reference links as links (#149407)
Tweak UI and fix hasPolicy detection
Add PR Chat (#149389)
Clean up the markdown document link provider tests (#149405)
Include `"` and '/' as puctuators for slugify (#149404)
Don't include leading `@` in JS/TS completion word range (#149400)
fix compile error
Rename "Select environment" to "Select debugger. Towards #146338 (#149377)
Add comments to notebook editor API (#149273)
up font size to 12px
define and use theme colors for title menu
* make `ILayoutService#offset` return general `top` and specific `quickPickTop` * improve ergonomics of `ILayoutService#offset` * Use new `quickPickTop` to overlay title bar part when title menu is enabled * hide title menu whenever quick pick shows to avoid unwanted overlap * extract title menu into its own file
Web: Support installing VSIX from local machine (#149364)
cleanup: no more need for keybindings service
show workspace title inside "input like button", move other quick pick options into normal dropdown menu
Reply comment is initialized with the last comment's text (#149354)
Add title to rating (#149348)
- change policy file location next to argv.json - introduce __enable-file-policy` flag to enable file based policies
mark the title menu region as none-draggable, use high z-index
Generate policies again (#149322)
Remove the textDocumentNotebook API proposal (#149277)
chore: update electron@17.4.3 (#149315)
Some terminal launch config args are double-escaped (#149307)
Pick up TS 4.7 RC (#149301)
Can't execute notebook cells (#149298)
prepare for removing proxy kernel.
Show policy info in Settings editor
Expose logger in web embedder API (#147035)
Remove PR trigger (#149265)
one -> 1, two -> 2
Avoid using CSS variables for background images because they aren't fetched through the service worker in Safari (#149259)
Drag & drop from tree item with no valid data still triggers editor drop zone and split view drop zone behaviours (#149261)
make tests roboust
refresh should not be throttled as it is requested explicitly
- add test for change event when policy value changes - fix the model. create model always
- add tests - fix scenarios causing tests failures - check for duplicate policy names
add toggle layout action - column vs 2 by 1
more instances
allow null in ICodeEditor.restoreViewState()
First draft of the model implementation.
Do not trigger the CI workflow automatically. One can still run it manually if needed. (#149246)
Engineering - create pull request pipeline (#149171)
show action to switch to release (#149244)
use git-fs to read base, ours, and theirs
use descriptive view sizing for grid
Enable random branch creation (#149241)
Add squash as default merge method (#149237)
allow createSerializedGrid to provide leaf node data (#149167)
fixes #148899 (#149182)
fix #148933
Bump distro (#149218)
Add request timeout to get info for #143967 (#149214)
adopt state variations of layout icons (#149200)
Use line count on textBuffer to select last line
Revert "Generate ADMX/ADML policy declaration files from static analysis" (#149194)
Make focusNotebookCell async
Update Codicons: Add state variations for layout icons (refs #148931) (#149196)
:lipstick:
handle custom context menu later.
git: validate URI for clone command (#149180)
smart/scoped update when policy values change
Don't repeat markdown link validation (#149169)
Specify tsconfig.tsbuildinfo is json (#149065)
expose source information for default langauge override settings
Add high contrast light theme on monaco editor (#149165)
Git - branch prefix + random name generation (#149069)
connect floating button to a menu and contribute to that from git
(prototype) use `_open.mergeEditor` from git extension for files under conflict
Add logging when `deltaDecorations` ends up recursing (#148423 #148893) (#149160)
refactor policy service
Use secondary buttons in Comments widget (#149159)
fix tests
make sure policy value is undefined if empty
- Introduce policy model with file policy - Introduce policy configuration using policy model - Use policy configuration while reading, inspecting and writing configuration - Adopt json settings editor
Generate ADMX/ADML policy declaration files from static analysis
implement `getControl` and `scopedContextKeyService` for better interaction with "outside", add `ICodeEditorViewOptions` and make yours/theirs readonly
add floating btn for merge (all fake tho...)
ensure default implementation of `clearInput` runs, make sure editor can be re-opened...
add title area above code editor, add css styles, little :lipstick:
add grid border color
dispose model listener
Add setting to assign PRs to self (#149139)
save and dirty state for 3wm
fix errors
Adjust cell output focus if webview blur.
add ShellIntegrationTelemetry
Add issue number (#149126)
add process property type
Introduce focus mode output
Use explicit empty authority for JS/TS resources (#149125)
Adds cancellation to md diagnostic computer (#149122)
Use `/` for md paths, even on windows (#149120)
VSCode -> VS Code (#149119)
Use click listener.
Use click handler to track focus other than focus tracker.
feat: allow using formatting parts in the workplace suffix (#148850)
Add action to ping when 1.999.0 tag pushed (#149112)
Re-skip smoke test (#149113)
keep dependency injection
rearrange properties
remove unused
shellIntegrationAttempted -> failedShellIntegrationInjection
add doHandleVSCodeSequence and update telemetry based upon that
Inform the user the actual branch name that will be used in the branchName inputbox (#148964)
Add owner and comment to telemetry events (#149097)
Allow undefined tunnel privacy to reach factory (#149094)
Synchronize scrolling of all three editors.
Creates editors & MVP of scroll synchronization.
Loads paths from command argument.
remove trace, resolve input to model, log model
merge editor kick off
ci: fix 403 when downloading ripgrep prebuilt (#149081)
report indexedDB errors
ci: fix 32-bit builds of native modules (#149062)
Prevent earger list container and webview re-focus
Run link normalizer against all links in markdown (#148971)
move invalidation to the commandDetectionCapability (#146563)
üíÖ
Reduce code duplication
clean up
Invalidate commands if the cursor stabilizes above the current marker
add telemetry for shell integration
use custom controls with OSS (#148965)
Update docstring for `resourceLabelFormatters` (#148963)
Finalize InputBoxMessageSeverity API (#148961)
Include `@` in JS/TS word pattern (#148962)
Prevent 'clear' command finished event on Windows
Dispose of cleared listener on capability remove
Use different method on Windows to clear decorations
Properly register command cleared listener
Include authority in TS in-memory scheme (#148940)
fixes #148862 (#148938)
fix #148926
fine tune shell integration messaging (#148856)
fix #148857 (#148923)
Re-enable retries
Add logging for terminal process input/onData
fix #146873 (#148848)
Add comment and remove some events (#148911)
invoke `fuzzyScore` with the options to allow first match to be weak
fix scm statusbar items order (#148909)
Adding owners and comments to task events (#148907)
Comments widget doesn't reveal nicely (#148897)
bump distro
fixes #148851 (#148852)
Reintroduce quickpick tests with a better way to wait (#148844)
add owner and comment to some telemetry events (#148752)
fixes #148824 (#148846)
Pull in latest markdown-it-katex (#148845)
Bump Distro (#148842)
No flicker anymore for output update (#148834)
Have forceNewSession behave like createIfNone if no sessions are present (#148819)
feat: add authoritySuffix for remote labels (#148841)
Improve a11y for Settings editor markdown links (#148748)
Bump distro (#148838)
Decode clicked uris in markdown notebook cells (#148830)
Normalize markdown links in notebooks (#148827)
Allow navigating for notebook links with fragments (#148823)
Bump package.json version (#148825)
Improve notebook language detection CPU (#148761)
Update classifier.json (#148817)
Upgrade tas client modules (#148796)
Better hide aria element for notebook cells (#148816)
clear decorations on relaunch of terminal (#148741)
testing: focus tree view instead of editor when opening peek (#148815)
Add empty href for markdown links (#148751)
Add newpromise snippets in javascript (#148755)
fix monaco editor compilation
Comments panel annoyance (#148806)
Deprecate publicLog and point people towards the 2 variant (#148804)
fix getRemoteServerRootPath reference
fix binding for historyNavigationWidgetFocus context
only allow primitive types in history navigation widget context - Remove setting history navigation widget in the context - Maintain a list of history navigation widgets - Remember the last focused history navigation widget - Use that while running navigation commands
use trigrid as role for cllastack view
Git - logging improvements (#148656)
remove old gdpr classification (#148754)
add more owner and comment tags, migrate to publicLog2
Added extension search text length to telemetry
move gulp-tsb into the `build/lib` remove as dependency
`let` -> `const`
Add editor monitoring methods in monaco api
add test
mark object as "closed", add more doc
Updates inlineCompletions proposal from inlineCompletionsNew proposal.
Ignore bulkedit previews for markdown references / renames (#148744)
Revert "Trigger product build on PRs to release branches"
feat: allow tunneling remote to be collected in telemetry (#148737)
Add API proposal for reading files in data transfer (#148596)
fix #147881. (#148730)
Don't touch ServicesAccessor after await
- introduce configuration migration util - adopt in editor and search land
Unfocus TOC tree if needed, fixes #146084 (#148654)
support setting custom `$ZDOTDIR` in `~/.zshenv` when shell integration is enabled (#148635)
format doc (#148671)
relayout title when enabling/disabling title menu
Improves doc comments.
add owner/comments types to some telemetry events
Remove themeService.onDidFileIconThemeChange listener from each tree item (#148708)
use `changeDecorations` to prevent reentrant decorations deltas, https://github.com/microsoft/vscode/issues/147472
make `quickSuggestions` settings just an object, no more anyOf, add editor-specific migration logic for this setting
Remove another TunnelItem from a context key (#148706)
remove console.log, simplify
server root path for websocket connection
Remove ITunnelItem from a context key (#148702)
Trigger product build on PRs to release branches
:liptsick: extract `WindowTitle` type into its own file, some renames
move title menu under `window-title` dom node. this enables reusing its layout tweaks, however translate cannot be used anymore for center aligning since the drop menu doens't like that
`let` -> `const`
Revert "Extract the hygiene check to a separate action"
Extract the hygiene check to a separate action
move the logic that computes the window title into its own class. This slims down `TitlebarPart` and makes it simpler to reuse between text title and menu title modes
Avoid that Azure Pipelines trigger automatically for all topic branches
Update Dockerfile fixture/result (#148688)
keep old publisher for now
Bump vscode-tas-client for CG (#148673)
fix #146377 (#148666)
on focusout, reset terminal focus context key (#148659)
do not block shared process startup (#148639)
No commit characters for string completions (#148597)
Update md grammar
Sort imports
commit in remote resource route
Hide the hover when alt is released unless mouse is over target
Listen to alt key on document as well
Allow mouse out to hide hover after being unlocked
Support alt locking of activity bar hover
Polish comments
testing: hide ANSI color codes in test peeks (#148594)
add nls module and externalize human readable strings
extract language strings from package.json
Remove incorrect comma
- Remove the pre-release indicator on the right - Installed pre-release version is indicated by badge on the left - Introduce an action to switch to pre-release version
spell check
align `package.json` properties, esp publisher.
move references-viewlet into `extensions/`-folder
return untyped editor input from saveAs (#148614)
remove readonly (#148589)
Comment loss when clicking "Go to review" (#148630)
queries/fragements are ignored in the tree
Inline CHARCODE_SLASH
use `crypto.randomUUID` if possible
Enable globs on tasks otherwise fallback to default  - fixes #88106 (#141230)
add owner & comment, https://github.com/microsoft/vscode-internalbacklog/issues/2762
Use simple regex for unit test
update API milestone
adding gdpr comments for owned events (#148595)
Spelling
Add diagnostics for markdown links (#148578)
Pick up new TS version for building VS Code
Pick up TS 4.7 for bundling with VS Code
Remove blank
debug: bump js-debug companion
use describe.skip for windows (#148580)
clean up simple find widget (#148575)
use ?? (#148577)
let-> const
add caching
Always suggest the only preferred kernel. (#148576)
Adopt WCO for Windows (#147947)
Don't cache keytar until we know it works (#148567)
Enable go to definition for markdown links (#148017)
fix #147603. Enable selecting line on line number. (#148459)
Pass one shared `macros` object into every call to katex renderer (#148006)
fixes #148363 (#148450)
fix #146749
prevent focus lost due to active focus steal
fix order inside title part
fixes #148414 (#148418)
fix comment
commit in route
debt - more registerAction2
debt - use Action2 instead of spread out calls to registries
fixes #146360
remove stale import
add "go to symbol in workspace", ordering, set title to window title
fix: close `create fork` message will create fork (#148438)
:liptsick:
Remove SCMRepository instances from context service (#148047)
tweak styles
#148410 Adopt to ILabelService.getUriBasenameLabel
- override extension type of extensions under dev from existing extensions - validate after updating the type
Add title menu quick pick as submenu and use special rendering for that, add some global and local commands and remeber the last picked
render keybinding
update distro
adjust widths
Update grammars
adopt `getUriBasenameLabel` for references tree, https://github.com/microsoft/vscode/issues/148410
rename setting to `window.experimental.titleMenu`
update my work milestone
use `fsPath` instead of `path`
Remember target directory when downloading files (fix #140358)
smoke - fail early if cloning fails
debt - bring `@types/mocha` up to date with version 9.x
Panel border hidden when in Notebook editor (fix #147534)
editor group model - fix index fo unstick as well (#145773)
labels - avoid workspace folder lookup if not needed
Windows connected to linux remote fails to ~ prefix paths (fix #148422)
web - figure out a better user home location
Path is not `~` prefixed for editors right on startup (fix #148420)
Adopt `ILabelService.getUriBasenameLabel` in window title (#148410)
Untitled file with associated path shows full path as label (fix #148409)
Paths with tilda are not properly shortened (fix #148407)
Adding some more tests for markdown references
Add `flags` to completions telemetry (#148313)
In addition to WebviewPanel, let WebviewView also support transferring of TypedArrays (#148429)
fix #147952 (#148463)
chore: bump js-debug
fix #148446
yield before opening quick pick
Add a title menu which sits at the window title location, add special rendering for quick pick action
Bump distro
Wrap deltaDecorations in changeDecorations to ensure that no decoration leaks.
Ensure no decoration ids leak or are double removed.
fix #148258.
include other zsh scripts in server resources (#148367)
simpliy the fix by fixing only order of keys
web client server: support x-original-host
Revert "ensure Safari goes through our clipboard service. ref #142057" because it causes #148154
make sure code://file uris also respect windowId=_blank
fixes #148326
ignore all filter settings when showing simple suggestions, https://github.com/microsoft/vscode/issues/75594
watcher - improve JSDoc and settings description
Some `files.watcherExclude` patterns cause flat watcher to not include certain events (fix #148177)
fix https://github.com/microsoft/vscode/issues/147940
use enum MD description, https://github.com/microsoft/vscode/issues/148151
merge toggle and enabled setting, fixes https://github.com/microsoft/vscode/issues/148151
Revert "What should happen when on a read-only filesystem? (fix #148304)"
What should happen when on a read-only filesystem? (fix #148304)
fix #148272
labels - also respect `noPrefix` flag
Update view positions cache when view containers cache change
improve consistency of terminal find with editor find (#148306)
refs #147748 - move os file command to always be first
more accurate naming of pages
add additional log statement
Source extensions properly, fixes #148192 (#148239)
update a few nls files with comments to ensure buttons don't get messed up
assign debug issues to rob
xterm-addon-search@0.9.0-beta.25 fix #148295
More improvements to default path label (#148293)
fixes #148152 - activity bar border missing in safari
missing part #148232
debug: bump js-debug
Inherit editor.letterSpacing for suggest widget (fixes #125622)
drop CSS-only approach and trigger a redraw for transient toggle, fix https://github.com/microsoft/vscode/issues/148215
Dispose thread earlier Part of #148216
Spelling fixes
fix #148241
update team list
:lipstick:
more `getPathLabel` tweaks
#135506 (#148252)
web - update unsupported disk file IO dialog wording
fix https://github.com/microsoft/vscode/issues/148232
fix https://github.com/microsoft/vscode/issues/148234
Improve vscode.dev local file system warning (fix #147025)
fix terminal find bugs (#148222)
remove log
Add perf telemetry to detection
Allow language guessing to work with suggested kernels in addition to selected
add plain text type to fix copy as html (#148205)
fixes #148162 (#148172)
Update codicons .ttf
Remove more traces of nesting experimentalism
labels - make `getPathLabel` aware of remote OS
logging :lipstick:
Remove unnecessary build step (#148081)
Add comments
split log web and native contributions
:lipstick: path labels
updating untitled text again
better handling of prompting and ensure PAT doesn't show up in supported products
Run OSS tool
Use Alt+Shift+D ref #148009
Close #148090
Bump distro
update distro due to adding jupyter powertoys to proposed API (#148086)
shell integration smoke tests (#148056)
Add suggestions for ext filter (#148076)
update html service
vscode property (microsoft/dev-container-spec#1)
Update scrubber regexes (#148073)
Make git-base a web extension
Add `aria-hidden` to the web worker iframe (#147036)
Minor light HC updates
Add subtle list background on light HC theme
set uuid while scanning
diff - no description when both sides have no description
testing: add action to unhide all tests (#148003)
update css service
add formatter conflict information (and ask to configure default) as language status item, https://github.com/microsoft/vscode/issues/148053
better handling of uris when remote is windows (#147803)
labels - fix regression with git labels
force that test editor for suggest model is always focused, fixes build failure, follow up for #147972
increase default audioCues volume to 70 fyi @hediet
fix https://github.com/microsoft/vscode/issues/147972, simplify reading/handling of quick suggest setting
darwin server scripts: apply shellcheck
allow for primitve arrays and primitive objects
Revert "add `StorageTarget.PROFILE` (#146729)"
- fix layering issue - remove id - fix namings
UTF8bom files do not open as UTF8 after fix in #39084 (fix #148025)
Update endgame notebook
:lipstick: - optional chaining ftw
macOS: show "Open Folder" as fallback too
Language identifiers are sometimes `string[]` and not `string` (fix #147284)
fix https://github.com/microsoft/vscode/issues/144555
add source to gallery query telemetry event
update progress after applying profile
- Introduce registry for storage for profiles - Adopt the registry
Display dialog when opening `vscode://` urls (#147955)
show progress while applying profile
git - use different icon for uncomitted changes (#145781)
Failed to save: Cannot read properties of undefined (reading 'logger') (fix #147929)
labels - `normlize` relative labels too
include this.logService.error in a place. ref #147760
Open the notebook editor find widget when opening a notebook from search results #95275
fix #147952 (#147953)
unset var after use in bash integration script #147946
don't overwrite IFS in bash shell integration script (#147946)
Don't give keybindingProvider to debugtoolbar stop menu #134412
clean up after test (#147941)
Adopt to Profile storage target
Implement export/import profiles - Introduce workbench profile service - Implement settings, global state, extension profiles - Implement import/export profile actions
Comments panel: do not truncate the author name (#147924)
API todo
Enrich Git extension's remote source provider API (#147613)
only allow primitive values in context keys
Comments panel: use the date of the last reply (#147922)
Bump distro
Address some grammar
Polish changes sorting (#147849)
SCM - surface sorting options in the menus (#147825)
fixes #147198
update distro
don't return duplicates from `vscode.extensions.allAcrossExtensionHosts`, add `ExtensionIdentifierSet` fyi @alexdima
Improve pause connection (#147318)
address heuristic when stage ranges act on same line number diff (#145899)
remove mentionings of tabs proposal,  fyi@lramos15
ci - only publish log files when there was a failure
debt - adopt new `options` support in `IPath`
skip markdown rename tests (#147896)
fix non windows shell type context key (#147884)
tests - mark quick input tests flaky (#147543)
Use un-encoded file paths are rename placeholder
Use uri instead of string
Try automatically adding .md file extension to new paths on rename
Add support for renaming files in markdown using F2
Differentiate md refs request on file path vs on fragment
Sort
add max threshold for find results for which to show decorations (#147879)
Disable a breakpoint on shift+click (#147598)
Support indexed base cell options.
only try to inject args when shell integration is enabled (#147872)
re #147183. Support editor options in IDefaultEditor (#147816)
Failed IPC communication with `playwright` smoke tests from preload script (for #146785)
`playwright` causes issues with our `ipcMain` validation (part one of #147301)
tests - improve exclusion handling for node.js tests
enable proposal for integration API tests
Add minimum visible count to open editors (#147771)
chore: bump electron@17.4.1
propose `extensions.allAcrossExtensionHosts` and related APIs, https://github.com/microsoft/vscode/issues/145307
fixes #147456
Comment API docs
Open Editors icon sometimes doesn't update when language is changed (fix #147733)
editors - do not eat error action results
:lipstick: dialog service in tests
Implement language detection for notebook cells (#147537)
updates to the the new file flow refs #145046
fixes #147644
fix #147780 (#147798)
Add online services option to the search funnel (#147643)
migrate non-encrypted strings in keyring (#147785)
Improve language filter placement, fixes #145711 (#147727)
Also escape pipe character in bash shell. #145265
use css selector that includes IW scrollbar
ci: fix downloading linux server dependencies
Smoke test fail on all platforms (fix #147749)
bump distro
include policies in win32
bump distro
rename
add policy admx/adml files
Remove left-over console log calls
Update the extension path tree after `$deltaExtensions`
Do fs calls in parallel
Don't ask for inline completions for certain suggestions.
Send all extension descriptions to all extension hosts (#145307)
update distro, https://github.com/microsoft/vscode/issues/144662
finalize `notebookDocumentEvents`-API, https://github.com/microsoft/vscode/issues/144662
Inconsistent font size in a comment with `code` blocks (#146542)
fix typo, https://github.com/microsoft/vscode/issues/144662
rename type, add jsdoc https://github.com/microsoft/vscode/issues/144662
use info instead of trace
fix https://github.com/microsoft/vscode/issues/147711
fixes #147757
fix two issues with notebookType and document selectors, (1) make sure that `notebookType: *` matches only when a notebook is around, (2) include `notebookType`-property when converting from extHost type to renderer type, fyi @dbaeumer
update min contrast terminal setting description to include excluded powerline chars
Add 'go to source definition' command
Better spelling  ü™Ñ
fix #146406
Revert "Provide emmet abbreviations via inline completions (#147387)"
xterm@4.19.0-beta.23
Use ‚áß for shift key label on mac
Provide emmet abbreviations via inline completions (#147387)
Mark setting as experimental again
fix #147717
xterm@4.19.0-beta.22 fixes #147602 fixes #147659
Pick up new TS version for building VS Code
Spelling
Add readonly to args
Don't encode paths
Update Codicons: Update eye icon (#143602) https://github.com/microsoft/vscode-codicons/commit/115660e11af24976db3fb474b0f67067f2d0462b
Polish RPM dependencies generator (#147336)
refresh inlay hints immediately after applying inlay hint edits, fixes https://github.com/microsoft/vscode/issues/147663
Improves code.
Update server telemetry
Improves utility classes.
Include opus files for web build
Revert "Workspace trust - add tracing to track down integration test failure (#142609)"
Polish comment line numbers in view Part of #146510
ci: fix 403 when downloading ripgrep prebuilt
macOS: declare folder support (#147686)
ci: build arm64 server with centos7-devtoolset8 (#147676)
add `{` and closing default brackets as boost/separator characters, https://github.com/microsoft/vscode/issues/147423
Confirmation of Clear Recent projects (fix #139392)
more sandboxed usages in ext host starter (#147666)
some jsdoc
smoke - support `retryWithRestart` in web too
storage - let main process deal with closing workspace storage
Do not attempt to reopen files that lead to a crash in previous session (fix #114844)
get zsh startup files to run in the correct order (#147434)
Remove tab rename todo
watcher - allow relative patterns for `include` (#146335)
add fallback auth server for github auth and better fallback logic
add favicon and nonce enforcement in microsoft auth
Settings editor search widget polish (#147521)
quick pick - hide input in more cases of quick nav (#147493)
Up distro
add note about legacy config
remove unneeded cast
Always encode paths dropped in md
Remove the concat text document api proposal
fix: compare origins in fetch requests against remote authority (#147467)
Update to build VS Code using latest TS nightly (#146933)
improve select a different editor command (#147479)
Polish language filter button implementation (#147461)
if resolve kernel failed, reset connection state
allow notebook cancel execution with proxy kernel.
Use keybinding style for `shift` in overlay
tweak install from marketplace entry on kernel quickpick.
Improving UX for drop into prompt
Use SELECT_KERNEL_ID other than string literal
:lipstick:
extract exthost/mainthread proxy kernels.
fixes #147468
Close #134566: Added settings for terminal tab default color/icon
notebook controller or id
Scope drop into editor to specific editors (#147425)
fixes #147458
try closing editor before running command
Keep composites open when last visible composite is removed (#147309)
local history - store entries periodically too
Change `TabChangeEvent` variable names
add `TabGroupChangeEvent`-event which is similar to the `TabChangeEvent` (#147443)
:lipstick:
when showing peek, reveal the range including the "after line" so that the whole peek view is visible, https://github.com/microsoft/vscode/issues/147448
retr (#147442)
lifecycle - show pending operations on shutdown in dialog
ignore text document version whenever that document is marked as being created, fixes https://github.com/microsoft/vscode/issues/146964
inline extensions scanner
docs
add macOSTest job
Web API change (#147392)
preload - revert retry logic which does not seem to help
add context menu to layout control
Start forwarding events from webview even before contents have loaded
Formatting
Focus the text editor after performing a snippet edit
sort by length first and then name.
get overview ruler color to upate (#147116)
Revert "Always use nameSpan for code lenses"
fix build
Check files instead of srcElement for dragging
update distro
xterm@4.19.0-beta.21
build: split darwin universal
update output style when font family changes
Better fix for #145996
testing: UI filter survives window reload
web: add telemetry api for embedders (#146931)
Remove legacy smoke test driver (#147393)
line height as ratio when < 8
added setting to override notebook output font family and size
added setting for notebook output line height
smoke - fix compile
smoke - restore workaround for #146785
timeline - add setting to bring back "Uncommitted Changes" (#147372)
bump gulp-shell
SCM - Source Control Repositories view sort setting (#147001)
update distro
More comment thread range polishing Part of #146510
disable codeql
remove setting, make hints always render compact, https://github.com/microsoft/vscode/issues/145191
preload - and and use `invokeWithRetry` (#146785)
explicitly set multiplpeSelectionSupport to false for suggest
small tweaks, some todos/questions
Improves documentation for proposed inline completions.
up distro
:up: 1.21.0 (#147348)
Move output service to workbench/services
#68410 disable updating builtin extensions in stable
Toggle Tab Visibility keybind is too similar to Close File keybind (fix #147310)
Add settings editor search funnel button (#147260)
controler id
Block pointer events on webviews when dragging from desktop into VS Code
address feedback by having concrete ValidationMessage type
Remove unused import
depend solely on icacls.exe for setting permissions (#341)
Git - Disable automatic repository scanning in the root of the HOMEDRIVE (#339)
win32 setup: disable app dir inheritance (#338)
Introduces InlineCompletionList.commands and improves documentation comments.
Use SuggestController to trigger suggest widget instead of command
Update md grammar
fixes #147042
standalone: toogle hc comamnd should check current theme. For microsoft/monaco-editor#3069
fixes #147070 (#147302)
Update shellscript grammar and add new test
add `StorageTarget.PROFILE` (#146729)
fixes #146658
UX for leaving a comment on a range Part of #146510
Add background and border to comments with a range Part of #146510
update distro
smoke - more logging for shared process
use `forceNewWindow` when `windowId=_blank`
web - improve unsupported file dialog wording (#147025)
feedback :lipstick:
:up: distro
smoke - more shared process logging
smoke :lipstick:
debt - improve ipc validation code
use cancellation error
Add context to notebookDebugOptions proposal
Partal revert of 21173541e165b0327c67bcaeac82a8a2fe44c949
Switch to signal quotes (#147261)
Make postMessage's behavior more sane
Revert "delay editor restore."
Remove property level owner from telemetry types
ensure GitHub Edu telemetry fires only per account not per session
Use `closeAllEditors` for `closeGroup`
Add move patching tests
smoke - log shared process config
Revert "`ipcMain` validation (#147071)"
Update typings
Support confirm before close/quit on desktop too (#147242)
fix #140612: toggle the Toggle Button when the context line number larger than 0 (#147141)
debt - deprecate raw `ipcMain`
`ipcMain` validation (#147071)
two kernel types
properly skip unit test (#137853)
editors - better implement error when opening a folder
Remove debug console log
Adopts bracket pair AST for bracket pair matching when AST is available. Implements #132536.
set aria-label on actions so JAWS also reads it
Review how accessible editor place holders are (fix #147107)
Match brackets case-insensitive
Adopt RelativePattern to watch the repository root
smoke - enable more logging for #146800
extensions: pull from github in OSS build (#146863)
Snippet instrumentation (#146874)
smoke - properly pick suite name
smoke - also screenshot on failure
smoke - try to fix terminal tests and partition logs path per suite
Don't show alt action in tooltip when not supported
supports supportSuspendDebuggee requires supportTerminateDebuggee. For #134412
Simplify #144285, use OverlayContextKeyService
Use more readonly in DebugModel
Update light hc theme name
Opening VSCode results in a mostly blank window with some GUI outlines (fix #147086)
Remote extension host does not respect trace log (fix #146897)
Update telemetry endpoint
revert
Expose progress in the web embedder API (#147033)
Enable more logging during repository discovery
Don't render guides of unclosed pairs.
bump to mocha@9 (#147091)
Bump distro
Add a few sample of the new typings
üíÑ
Update generated schema
Disallow trailing commas in devcontainer files
compositeBar: use role tablist
Removes seemingly dead code in getPreviewRangeBasedOnBrackets to unblock bracket pair AST adoption.
smoke - bring back ext tests with retry for now to have coverage (#146800)
update distro
bump versions
debug: offer configure action on debug task error
testresolver: set log level with TESTRESOLVER_LOG_LEVEL. For #146897
skip terminal tests (#147063)
smoke - remov `verbose` again
smoke - limit diagnostics to x64 platforms
editors - reload error placeholder when file is coming back
editor - implement error placeholder and drop toasts
fix(markdown): avoid considering link references/sources in code sections (#146826)
Enables bracket pair colorization by default.
Deactivate extensions after tests are run (#96090 , #146944)
Move terminate() to `IExtHostExtensionService`
Enable drop into editor for notebooks (#146966)
fixes microsoft/vscode-internalbacklog#2816
update distro
Revert "Update GDPR typings to allow for top level metadata. (#146943)"
Update GDPR typings to allow for top level metadata. (#146943)
Update to `vscode-textmate@7.0.1`
editor - placeholder tweaks
smoke - try to mitigate hanging close (#146803)
Update editor placeholder (#146997)
variables: allow resolving `extensionDir` (#146274)
make transient inlay toggle mode a pure UI operation, https://github.com/microsoft/vscode/issues/128162
üíÑ Remove console.log
Adopt `vscode-textmate@7.0.0`
Second attempt to fix #121914
Tweak URI search tree iterator to support folder-level query parameters (#146859)
Manually porting change from PR #127702
Update the colouring of links in banner markdown (#140581)
dispose model, editor, and services in test
Create an empty div.message-actions-container when no actions provided (#140578)
On content change, first update tokens, then bracket pairs.
Allow hiding tooltips on custom tree view items (#146713)
Show commment on last line of range and update internals (#146916)
don't do inline suggest completion inside words, https://github.com/microsoft/vscode/issues/146948
chore: bump electron@17.4.0
fix unit tests
Add language-specific scope widget indicators (#146343)
Adopts "containsBalancedBrackets" flag from vscode/text-mate.
Use limiter instead of custom batcher
update strings and editor
fix unit tests
Add 'Evaluate in Debug Console' and 'Add to Watch' to palette (#146775)
Add additionalScrollHeight to search tree, fix #146935
Use SELECT_KERNEL_ID other than string literal
smoke - skip flaky tests (#146800)
tests - reduce spam and work
more strict reuse of inline completion model
flash background with prominent color only and only for warning and error, https://github.com/microsoft/vscode/issues/145950
make fuzzyScore full match boost configurable and don't it for inline completions, https://github.com/microsoft/vscode/issues/146523
fix tests
tests - print diag also before smoke tests
Print diag after smoke test (#146920)
and add some todos
remove (!) API todos, add some doc
eagerly resolve the first N items, the rest lazy, https://github.com/microsoft/vscode/issues/146468
add "Toggle Inlay Hints" command to command palette and to View menu, https://github.com/microsoft/vscode/issues/128162
add command to reset interaction counter, https://github.com/microsoft/vscode/issues/145950
fix unit tests
use path for logging
tests - disable experiments in tests
add background color to language status animation, https://github.com/microsoft/vscode/issues/145950
smoke - allow to enable verbose vscode logs and enable for now
:lipstick:
fix leaking observer, https://github.com/microsoft/vscode/issues/146841
api - update watcher docs
smoke - drop legacy tests
api - update watcher docs
use input to check dev mode
do not use cache if obsolete are not excluded
Prioritize Text File in New File list Ref #144667
Don't show busy for JS/TS files not in workspace
Dont persist match ranges unnecessarily ref #145997
Correctly set webview active state on restore
Update remote prefs search query format
Auto create image links when dropping an image file into markdown
Add setting to enable/disable markdown drop into editor
Enable find all references and rename of auto links and http(s) links in markdown
Mark cached prop readonly
:lipstick:
re #146841. allow single action view item to be disposed properly.
Move fragment range down into documentLinkProvider
Use clearer logic
Update language status indicator padding
- Move caching into ExtensionsScannerService - Enable caching in desktop and server extensions scanning
Update window tests
Emmet reduce JSX array noise (#146757)
Don't expose undocumented API
Use word related methods always through `ITextModel`
Update variable misname
Rename .groups to .all again
Change onDidChangeTab event
Pass through CancellationToken
Add basic file references provider for markdown
Add a few more readonlys to notebook editor api
SCM - Add settings to toggle diff decorator pattern (#146724)
Adding readonly to a few more array arguments
Mark tree drag api arrays are readonly
Clairify that provider should not modify input positions
Mark that notebook apis don't modify input array
Flush local history before shutdown when connected to a remote (fix #146554)
smoke - cleanup some file names
smoke - better use of `tree-kill`
smoke - disable verbose for windows
More JS Doc comments
Refactor based on feedback
api tods
resolve completions when showing them inline, https://github.com/microsoft/vscode/issues/146468
Instrument extension view activation (#146789)
smoke - mitigate #146785
Remove tag check, fixes #139886 (#146269)
smoke - skip `install and enable vscode-smoketest-check extension` in remote (#146800)
unit - skip all tests for `test` component in node
smoke - adopt repo changes
Mark input arrays as readonly
feat(git): Added remote url type option (#146124)
add the git.fetch action to the frist header menu in scm in order to be easier to fetch the repo immediately (#137940)
Rename user facinging instances of SCM to Source Control (#146742)
Update telemetry-extractor
Bump distro
fix https://github.com/microsoft/vscode/issues/146405
Respond to UX feedback on resolved/unresolved comments (#146733)
more API todo tweaks
enable inline quick suggestions to force team feedback
todo update
Avoid using `ModesRegistry.registerLanguage` in tests
smoke - logging :lipstick:
ci: fix universal build
update references view
smoke - add refs to #146811
smoke - skip terminal tests in desktop
Addresses feedback from PR.
cleanup - rearrange
smoke - more verbose logging on windows
skip flaky terminal smoke test (#146796)
Show localized manifest for installed extensions in UI: - move translations into extensions scanner service
smoke - remove some unused methods from driver
Glob matcher fails to check on `Promise` for expression matching (#146304)
simplify scanning system extensions
use correct language
Instrument contributed extension commands
Remove leftover 'boolean' type See PR #146543
Adding deprecation message for concat text document
Better instrument walkthrough interactions
Switch to gender neutral terms (#146371)
Adding comments
Add ugly drop into hint
Move dropIntoEditor setting out of experimental and enable by default
Adding test for renaming the definition itself
Reuse references in rename requests
Use header text as placeholder for md rename
Add default drop into editor implementation
Add some basic cancelation
Create drop into editor contribition
Agressivly mark notebook concat text document as deprecated
:lipstick:
fix #146750.
faster CellFolding ctor.
group.closeAllEditors returns a boolean
fix #145917
Guard removeGroup
Implement group closing tabs API
Add comment
some API todos
Mark event value as readonly
use builtin so as to not break aliases in shell integration script (#146562)
chore: bump electron@17.3.1
Revert "Set aria-live on inputBox so that"
Handle some URIs in new windows (#146711)
API-todo
polish json schema language info
add `editor.inlayHints.toggle` option to quickly show or hide inlay hints, https://github.com/microsoft/vscode/issues/128162
smoke - try to use locator API for window ready
:lipstick:
layer checker: follow parent symbols
smoke - run legacy tests again, do not fail new playwright tests for a while to figure out flakiness
files - expose watch options
smoke - enable multi root tests in web
chore: bump distro
check with suggest memory when doing inline suggestions, https://github.com/microsoft/vscode/issues/146531
debt - make `URL` available as core type
:up: distro
Self register configuration resolver for web Part of #146027
:up: distro
fix #130527
:up: distro
:up: distro
:up: playwright
Use `playwright` for desktop smoke tests (#146692)
#146027 self register services
Typo
Update scm decorator width for modified (#146588)
_codeEditorService is optional in tests
Switch to provider based model for on drop
Adopt SnippetTextEdit for drop
fix #141377. 200 delay for async find.
re #141651. Disable find in preview/outputs in safari.
testing: re-enable possibly fixed tests
xterm@4.19.0-beta.20
update nb tests.
Remove active change events
Don't have space in snippet
Error on rename in bare file links in definition
fix layer check
change validations to tuple array
fix layering
rename
Update src/vs/workbench/contrib/terminal/browser/xterm/decorationAddon.ts
Update src/vs/workbench/contrib/terminal/browser/xterm/decorationAddon.ts
on move of terminal from or to the panel, hide find widget (#146568)
bump distro
sharing base cell editor options for the same language.
clearDecorations -> dispose
Moves tokenization logic from text model to its own text model part.
git - use same icon for comparing as core diff editor
use an interaction counter and reduce animations when users interacted repeatedly with the language status hover, https://github.com/microsoft/vscode/issues/145950
honor reduced motion flag for language status item, https://github.com/microsoft/vscode/issues/145950
experiment with a "wiggle" animation which shows when language status is available or has changed, https://github.com/microsoft/vscode/issues/145950
Ask user to select PR templates when forking a repository (#143733)
 Use TunnelItem object (#146513)
bump deps
start working on #145893 and #145816
undo changes for https://github.com/microsoft/vscode/issues/145960
143543 replaced true and false with on and off in debug.inlineValues
add `INotebookEditorModelResolverService#onWillFailWithConflict`-event, release extension held references when a conflict is about to happen, close editor when a confict is about to happen, handle closing while opening an editor, https://github.com/microsoft/vscode/issues/143412
editors - always open an editor placeholder in case of an error (#142875)
add tests
Reduce usages of `ModesRegistry.registerLanguage`
Allow null in terminal defaultProfile enum
text files - do not change encoding if explicitly configured by user
add integration tests for LiveShare specific notebook commands, https://github.com/microsoft/vscode/issues/125757
encoding - always resolve encoding when language changes independent of overrides
:lipstick: binary editor picking
fix `vscode.resolveNotebookContentProviders` command, https://github.com/microsoft/vscode/issues/125757
add commands `vscode.executeNotebookToData` and `vscode.executeDataToNotebook` to execute notebook serializers by type, https://github.com/microsoft/vscode/issues/125757
add test for automated encoding change on language change
model / working copy - go through managers when resolving again (#146504)
align extension scanning - Extract extension scanning, validating and nls replacement into `INativeExtensionsScannerService` - Use `INativeExtensionsScannerService` for scanning in Desktop and Remote extension managements and extension hosts - Represent invalid extensions in Extensions UI - Remove prompting for invalid extensions while scanning in Desktop Extension Host in Dev mode
Working on initial support for renaming refs in md
:lipstick:
remove optional param for notebook applyedits.
polish movecells and insert cell
delay editor restore.
Simplify code for dealing with link definitions
Trying to clean up md link structure by moving defintion up a level
Initial work on rename in markdown
testing: fix success indictor showing up before completion
fix #146397. Clear container for html and plain text renderer.
fix #146427 (#146447)
Don't block Pseudoterminal-based terminals launching without backend
Use more consistent method names
Add auto enum case for ts.locale
CodeEditorWidget leak
Delete built-in PowerShell snippets
testing: allow toggling whether tests use fuzzy match
testing: better approach to deserializing test items
Change a clickable cursor into a pointer on hint widget (#146449)
text files - don't auto adjust encoding if mode explicitly set
chore: bump electron@17.3.0
Improve UX for markdown snippets (#146431)
Remove the static `LanguageConfigurationRegistry`
Sync remote windows-process-tree to main package.json dep
text files - some encoding related :lipstick: changes
Address ben feedback
Reduce usages of `LanguageConfigurationRegistry`
Revert "respect auto save config when using workspace edit API"
Allow to set `files.encoding` as language specific setting for files on startup (fix #127936)
remove unused `$tryApplyWorkspaceEdit` function from mainThreadEditors
respect auto save config when using workspace edit API
add generic `files.refactoring.autoSave` and let users of the bulk edit service say if the setting should be honored
server cli scripts: node not found
update distro
make compact mode default, make inlay hints font size default to editor font size, https://github.com/microsoft/vscode/issues/145191
Update workbench.ts (#146364)
add find count to the terminal (#146358)
xterm-addon-search@0.9.0-beta.17
Update windows-process-tree and correct types (#146362)
Remove dup type
Mark methods private
Move function to method
Clean up link data structure
Extract getReferencesToLink and getReferencesToReferenceLink
Refactoring md refs provider to prep for re-use
testing: fix comp error
Make sure double click in md preview always reveals target line
Better comment
support label details (#146270)
Update markdownRenderer.ts path in docstring. (#146332)
workspaceFile -> workspacePath
Use joinLines helper
Add assertReferencesEqual helper
Compare normalized fragments for md references
Remove duplicate function
testing: disentangle test item collection from exthost for use in tests
Include invalid references as targets for find all references
Add support for reference to ref links in md
Mark event fields readonly
üíÑ
Update light HC terminal selection background color
Remove unused CSS from remote viewlet dropdown
Reduce usages of `LanguageConfigurationRegistry.register`
Make MdWorkspaceCache always store promises
Add test for open and closing tab patching
Improve markdown references
fix #146285 (#146306)
v1.67.0
Add disabledForeground token
Support patching for editor open and editor close
Reduce readers of `LanguageConfigurationRegistry`
Remove `LanguageConfigurationRegistry.getIndentRulesSupport`
Break up `LanguageConfigurationRegistryImpl` into multiple files
Uses null as default instead of false.
Do not overwrite new settings (#141026)
Represent each option migration as an `EditorSettingMigration`
Add tests for `migrateOptions`
Reduce usage of `LanguageConfigurationRegistry`
reduce usage of `arrays#flatten` util, use native `flat` instead
fix https://github.com/microsoft/vscode/issues/140331
fix 'option is deprecated' message, missing variable
add `saveWhenDone` option to bulk edit service, adds `ResourceSet` as sibling to `ResourceMap`
Implement badge API for webviews and treeviews (#144775)
Move ForwardedPortsView to Restored phase
API-todo and some jsdoc polish
Additional logging for git commands
check model version id before/after going to the extension host
add SnippetTextEdit, allow drop-handler to return them
fix parenthesis encoding in unicode highlighting
Update to latex-basics 1.3.0 (#146308)
update cdn domain for webview
When inserting a nested snippet into an existing snippet there is no need to merge them.
:lipstick: rename `ChangeLanguage` to `ChangeCellLanguage`
Update package.json (#146278)
Glob matching fails to preserve some metadata (fix #146296)
Allow `createFileSystemWatcher` to bypass `files.watcherExclude` for flat watching (fix #146066)
debt - move storage main into global storage
Revert "storage - add `vacuum` method"
Revert "storage - fix tests"
Respect `includeDeclaration` for markdown references
Initial work on md references provider
Extract MdWorkspaceCache
Remove extra await
üíÑ
Extract workspaceContents to own file
Clean up link provider
Revert "Nulling dom node refs to prevent leaks on detached dom nodes."
fix #138683.
Nulling dom node refs to prevent leaks on detached dom nodes.
notebook unref dom.
use URL class in a few places
testing: remove outdated auto run and invalidation code
Revert to older TS nightly
testing: ensure peek opens to first failed message
testing: fix test tags not serializing in menu context
Remove unnecessary escape
Better align language provider names and export styles
Organize imports
üíÑ
Extract markdown scrolling code to own file
Move files to better folders and add better name
Remove unused hash functions
Use padStart
Use string uri as key instead of `fsPath`
Use find instead of filter
Use `._register`
Move markdown preview files to own folder
Remove outdated comment
Pick up TS 03/29
Remove extra assertion
Add intial work to patch tab open and close
Fire responsiveness events only on change
if 'git.untrackedChanges' is set to 'hidden' ignore untracked files when running 'git status'
Add onDidChangeActiveTab
less use of notebooktextmodel.
update notebookcommon
update minimist in smoke tests
Have onDidChangeTab return an array
Pick up latest TS for building VS Code
Pick up TS 4.6.3
Add links to open in Remote - Containers (#146073)
fix #146227.
Avoid walking over the entire delivery queue when disposing emitters with private delivery queues and address stylistic feedback
base -> workbench
Update Settings editor events (#146222)
Remove terminal knowledge from dnd component
bump distro
add deprecation marker
Renames "Cycle Primary Cursor" To "Focus Next Cursor"
update distro
adopt tests to new notebook change event
Update grammars
some more API todos
:lipstick: - move file settings to same place
try to get build green
:up: sqlite3
update API notebook milestone
Bump plist from 3.0.1 to 3.0.5 in /build (#146212)
comment out override commit because we shouldn't need it
update test for empty cell.
fix #142756.
Use description over cwd
fix #143063.
update windows-registry module
#146048 - Remove dependency on IExtensionManagementService - causing cycling dependencies
re #123828. Reveal middle of the cell to the center.
don't try to refresh cwd for extension/feature terminals (#146193)
Pull key sanitization into a function
Ref terminal backends using lowercase remote authority
iw, layout npe
fix #142507. Add interactive editor to history.
re #142507. add notebook diff editor in history.
fix #142184.
Override/fix typings in windows-process-tree
Don't check lines too short for shell integration link
clear search decorations for all terminals in the visible group when find widget is hidden (#146199)
Avoid converting pre-encoded values in terminal URL links
fix #146057 (#146196)
have code-oss use device code flow
Deliver all outgoing editor events in order (#146174)
Have `group.closeEditors` return a boolean promise (#146188)
Copy tunnel information for context (#146186)
Remove unused commented code
 Add a setting to ignore dirty tabs in workbench.editor.limit.value. (#144545)
storage - fix tests
storage - add `vacuum` method
remove old notebook events from API proposal and implementation
some cancellation error :lipstick:
fix compile error
Add vscode.markdown-language-features to proposed API
don't use ghost text, make choice completion contextual
Log when `close()` on storage takes a bit longer (#146178)
don't fail when model version doesn't match, https://github.com/microsoft/vscode/issues/146171
actually foward cell content change events to extension host, https://github.com/microsoft/vscode/issues/145793
clean up
proper fix
debt - store `history.entries` more efficiently
debt - migrate `storage.json` into `User`
debt - drop legacy recently opened migration
:lipstick:
files - üíÑ interface name consistency
update my work milestone
pass and check model version when calling insertSnippet, https://github.com/microsoft/vscode/issues/145727
fix https://github.com/microsoft/vscode/issues/145960
#146161 - consider settings editor config
debug: bump js-debug
Bump plist (#146072)
Update milestone on verification notebook
Bump distro
Don't dispose of decoration addon when clear is run
fix #146053 (#146054)
:up: distro
Bump minimist from 1.2.5 to 1.2.6 in /remote (#145933)
Bump minimist from 1.2.3 to 1.2.6 in /build (#145934)
Bump minimist from 1.2.5 to 1.2.6 (#145935)
use suggest preview when editing/suggesting choice options
ups
Update tree dnd doc comment
make mooncake upload configurable
update distro
Revert "Again disable mooncake upload"
:arrow_up: @azure/identity
Go back to using buitlin `URL`
Again disable mooncake upload
update distro, https://github.com/microsoft/vscode/issues/145259
do not log if custom builtin extensions are not passed
chore: bump electron@17.2.0
don't proxy encryption service if we have a credentials provider
re #146009. dispose CollapsedCodeCellExecutionIcon
[typescript-language-features] Add includeCompletionsWithObjectLiteralMethodSnippets preference (#145941)
Avoid using buitlin `URL` because it is flagged by the layers checker
deprecate experimental settings refs #137633
Reapply parcel/watcher adoption
Expose `extensions.experimental.affinity` in settings schema
Avoid having so many newlines
Add "customizations" to unblock microsoft/dev-container-spec#1
Better respect theme colors for extension editor page
Bump distro
probable fix (#145783)
fixes #145991
use simpler `showSimpleSuggestions`-function for tab completion and remove the old one
blue print tests for #145846
Clear viewport commands in partial detection on CSI 2/3 J
xterm@4.19.0-beta.15
add `jumpToNextSnippetPlaceholder` as post completion command, https://github.com/microsoft/vscode/issues/75594
dynamically register and unregister a snippet choice completion item provider
history - prevent unwanted entries from move operation
history - limit "Create Entry" to specific schemes
Use reallink for all server cli scripts
Local history max entries not visually applied to timeline (fix #145721)
history - stop opening entries after creation
Revert "Temporarily disable mooncake upload"
Temporarily disable mooncake upload
telemetry setting wording polish
polish telemetry setting description
Two similar local history entries show up on renaming a file (fix #145881)
Revert e7fffbf1c9169087f1098aedfe54c59c079fa3ac
Revert "Add support for aria-label for the customButton in the QuickPick component"
format doc, fix build
fixes #145752
more sidebar to side bar refs #145863
more sidebar to side bar refs #145863
sidebar to side bar fixes #145863
fixes #145858
Use markdown description for a few more settings that use backticks
refs #145856
fixes #145864
addendum refs #145765
update max editor group and hide side bars refs #145765
update files: reveal in explorer view refs #145765
update search: Reveal in Explorer View refs #145765
update git: reveal in side bar refs #145765
update reveal active file in side bar refs #145765
xterm-addon-search@0.9.0-beta.15
Make `ILog` compatible with `ILogService`
Simplify code
Simplify `Logger`
remove leading / so that local dev would work
operateAsGroup by default ref #145665
Better colors for overview ruler
Terminal find HC support
Adopt new search addon colors, add new theme keys
xterm@4.19.0-beta.14
macos: high contrast when 'Invert colours' or `Increase contrast' is set. For #145616
Use parcel for watching esbuild build files
Remove test file
Update our cell uriComparison when the perCell undo redo setting is changed. (#145913)
update sounds so they are louder by default
fix log statements
use final DAP 1.55.0
Don't use synthetic diff id
chore: bump actions/checkout (#145891)
Improve description for default-folder/workspace. For #143580
Closes #135460 by introducing "Cycle Cursors" command
fix typo refs #145577
xterm.js -> terminal
Check lang id while filtering (#145756)
Add language filter language suggestions (#145754)
history - open diff for entry when file exists
Remove deprecated field
Deserialize shell integration messages in property and command line
don't log link detection in extension host language features, https://github.com/microsoft/vscode/issues/145882
Prefix all variables with __vsc_ to avoid conflicts with user scripts
don't log debounce info for `output` channels, https://github.com/microsoft/vscode/issues/145882
Don't warn when the shell disables builtin shell integration
history - improve support for non-standard resources (#145732)
add `NotebookDocumentContentCellChange#document`, https://github.com/microsoft/vscode/issues/145793
update distro
Makes filtering of inline completions more strict to reduce flickering.
Editor is improperly marked `isPreview` in tabs api (fix #145755)
:lipstick:
api - clarify progress location capabilities (#145722)
$(mark-github) in notification (fix #145722)
bump distro
remove uncommited changes (#145853)
Add "snapshot" button (fix #145815)
$(mark-github) in notification (fix #145722)
history - rename setting `mergePeriod` to `mergeWindow`
only return inline quick suggestions when typing at word ends, https://github.com/microsoft/vscode/issues/145586
Disable bash integration when PROMPT_COMMAND has space and semi-colon (#145430)
Update monaco comment
Move drop into feature to own file
Restrict which editors support drop into
xterm@4.19.0-beta.12
Use text/uri-list for drop into editor
rename shell integration script variables (#145799)
Make sure we decode path components for md path completions
Remove negative lookbehind in regexp
fix #145675.
Revert "Promote file nesting out of experimental" Will continue with experimental rollout in order to investigate potential alternative configuration formats
Dogfood file nesting in vscode
Revert "#145082 Use DistributeSizing option while removing pane"
Add the button role to the links with no href for helping screenreaders
Set aria-live on inputBox so that errors are annouced in real time.
Add support for aria-label for the customButton in the QuickPick component
Update dark hc theme picker thumbnail
fix querying compatible web extensions
trigger highlight all matches when find widget is revealed with input (#145651)
Update typing
Revert "Early exit event handler when disposing (#145407)"
add eslint rule to disallow look behind regex feature, ignore in git and markdown fyi @lszomoru, @mjbvz
catch npe (#145653)
@link-ification for tree dnd comments, https://github.com/microsoft/vscode/issues/145577
Uses underline instead of strike-through for inline replacements.
css formatting
Use `IFileService` in `ExtensionScanner`
improve docs
Expose `ExtensionManifestValidator.isValidExtensionManifest`
Use URIs in `ExtensionManifestValidator.isValidExtensionDescription`
english
Code server fails with Cannot find module 'original-fs'
#145082 Use DistributeSizing option while removing pane
:lipstick: lifecycle progress dialog wording
xterm@4.19.0-beta.11
Simplify diff
debug: reveal exception ranges more correctly
clear search decorations
polish
clearSearchDecorations
revert changes to script
Report model preference in general set as well
Add telemetry to help compare models
Remove outdated comment
Add declared experimental setting for language detection preference
Run OSS tool
145367 Added cwd to terminal name if present Show in quick pick dropdown the terminal root (if present) to help identifying the different terminals
Add query for test iitems without milestone
fix #145498.
Use prefix to avoid clashes with shell functions
Add VSCODE_SHELL_INTEGRATION
Unset ZDOTDIR before standard scripts run
fix #145497.
Adjust Settings editor narrow total width (#145358)
Remove forgotten console.log
comment model for editor should not be aware of notebook.
fix grammar
Finetune theme detection
Update coverage folder location
Mark a few fields as readonly
Set resourceurls for drop into editor from OS
Tabs API renaming
Automatically restart the remote extension host
update setting description wording
depend on stable vscode.dev for auth extensions
Allow disabling integrated askpass (#115455)
skip querying for builtin extensions not in Marketplace
Tweak source control repositories selection before applying the selection from the previous state
When the remote extension host disconnects, ask the server if it actually just crashed (using the management connection)
Postponing enabling bracket pair colorization by default to next release.
fix regular builds
SCM - Sort repositories by name (#145264)
fix missing compile
freeze notebook and notebook cell API objects
update telemetry setting description
use findNext/previous
even more shallow freeze, remove unused function, assert freeze, https://github.com/microsoft/vscode/pull/144868#event-6273470958
jsdoc all the way, https://github.com/microsoft/vscode/issues/144662
chore: update vscode-encrypt (#143616)
hm
missing compile
introduce distro private builds
ci: fix published server arhive name on macOS (#145509)
update endgame notebooks
feat: also expose repository.revert() (#145029)
forward additionTextEdits to inline completions, https://github.com/microsoft/vscode/issues/145537, #126375
some more jsdoc for `DocumentFilter#notebookType`, https://github.com/microsoft/vscode/issues/141143
tiny API todo
some more todo for the tab API
improve when querying for compatible web extensions
OK
forward commands from suggestion to inline completion
only load compatible additional builtin extensions
fix #144822 also for working copies
Save input box on a remote window has weird suggestion for file name when closing an untitled file (#145127)
chore: update license for electron 17
ci: fix codesigning universal build
add updated flag
fix typo
timeline - fix filter menu appearing over and over again
history :lipstick:
Revert "history - aggregate items of same source (#145294)"
history - aggregate items of same source (#145294)
add modified monaco.d.ts
feat: inlay hints displayStyle
initial proposal of InputBoxValidationSeverity
üíÑ Desktop -> Native
tests - reduce error spam
history - add an event for when an entry is replaced
Unsafe editor.resource access: timelinePane (fix #107649)
history - track renames for live models
history - add `mergePeriod` setting to merge entries
history - introduce a setting to exclude file patterns
timeline - set filter menu as `menuAsChild` to prevent actions from hiding when menu visible (#145381)
Promote file nesting out of experimental
Memoize file nester object per root
Grammar?
Simplify nesting config description
Use vscode.dev for GH auth (#145424)
use global URLSearchParams
Remove unnecessary return in tab close
Language filter initial draft (#145080)
Add active tab test
Shallow freeze the event properties
Early exit event handler when disposing (#145407)
Enable active tab integration test
Re-enable some integration tests
Implement align-nest-icon-with-parent-icon for input items
use configured colors or editor fallbacks
Revert switch cleanup, comma operator stikes again
Add link to setting
Drop into text editor api proposal (#143334)
add isPreview and group reference to tab
Added the g flag to the end of regex (#145415)
Clean up case
Implement $(dirname) substitution for nesting
FIX #144343. Update output items will re-render the cell output.
Surface executing command in run recent
[html, json] update services
add css formatter. fixes #19166
Renamed NotebookEditorDiffTabInput
Add current executed command to commands list
Evaluate command on executed on Windows when possible
useIndependentColorPoolPerBracketType -> independentColorPoolPerBracketType
typos
Move all Windows-specific logic into standard named functions
shellEnv platform/terminal -> platform/shell
Use more verbose function name
Update telemetry module
Bring back type import
Update object freeze pattern
fix error while scanning builtin web extensions in desktop
chore: replace plist with plutil (#145392)
Add better comment
tabs - add `onDidChangeTab` which fires when only a tab changes, don't fire TabGroup even for that anymore, go 180 and remove ExtHostEditorTabs again
add missing check for model
Unnecessary null safety
simpler check for diff editors
Up distro
Support zsh's RPROMPT
add API todo
tabs - move `move` into `TabGroups`
Allow more granular configuration of telemetry through product.json (#143406)
fixes #145397
Remove todo
history - fix tests
Workaround for conpty's resize behavior
Add aria label for comments and focus into thread Part of #110408
#68410 support updating builtin extensions in web
keep previous CompletionModel around and reuse whenever possible
history - speed up resolving all history entries
history - register reveal command only for `file` scheme
history - add `CancellationToken` to `store`
keep support for true/false values of quickSuggest setting
history - better handle cancellation on shutdown
history - fix hanging shutdown
add `on`, `inline`, `off` options to quickSuggest setting, remove/migrate boolean short hand for the whole setting but leave, use `CompletionModel` for inline completions, enforce always some prefix, use ugly tricks to brigde editors into single-provider-world
history - use `Limiter` for storing models on shutdown
Local history: add a button to open the backup folder of a given file (fix #145330)
history - avoid disk access when nothing changed
fix endless recursion
debt - avoid `uri.toString(true)` for logging
history - remove empty locations
fix update operation event
history - remove label from query in resource
history - drop custom formatter
lifecycle - print warning earlier when shutdown takes long
Generate rpm dependencies (#143415)
Document support for basename and extname in nesting config. Ref #141437
extract ListViewInfoAccessor
:lipstick:
Check the static line cache for markdown custom editors
remove tangle for cell parts
remove status bar part from notebookRenderingCommon
review feedback to move the check into the cell model specifically this keeps the change restricted to just the notebook scenario where we know the full document undo / redo stack will eventually get cleaned up.
Don't notify so harshly
update comment height only when needed
Tie in tab input, remove cleanup .d.ts
Load `vsda` on startup to get an early error (microsoft/vscode-remote-release#6300)
Tell webviews about a11y (#145179)
Serialize isWindowsPty
cell comments top update
Add support for references when no [] exists (#144781)
Rename command tracker to command navigation
Implement other tab inputs
revert change, fix build
fix #145227
Update tabs API comment
Remove extra type
Adopt filter text in proposed extension API.
Update notebook doc
Bump distro
Bump distro
Pass in codeBlockFontFamily
Pick up TS 4.7 for building VS Code (#145273)
move context key update into CommentThreadWidget.
auto update only in web
theme participant for cell comments part
If comparison key maps to something else, then don't clear the edit stacks
fix tests.
Show nothing for partial command
Skip flaky test
üíÑ
Implements filterText.
üíÑ
üíÑ
Removes console.log.
üíÑ
Extracts utils.
Add command for adding a comment to the command palette Part of #110408
Introduce themable colors for resolved and unresolved comments (#145230)
Timeline: make sources more prominent (fix #145232) (#145291)
Show cmd nav cursor in overview ruler
first steps towards `Tab#input`
Add logging for errors occuring when loading `vsda` (microsoft/vscode-remote-release#6300)
remove comment
Move close and add array support
Re-enable vscode.open tab est
check for targetplatform in equality check
clear properly
leave some todos
Make string array settings renderable (#145155)
get it working
register inline completion item provider
storage - stop creating sqlite DBs after app is killed (#145246)
history - when restoring, close associated editors
tackle a todo, implement vscode.TabGroups with the ExtHostTabGroups/apiObject trick, enforce and test readonly-ness, fyi @lramos15
chore: bump electron@17.1.2
use the correct `this` for active group and active tab
update foldedAreas.opus
ci: unify artifacts processing on darwin (#145226)
consider outdated targetplatform while loading extensions
move get targetplatorm to workbench extension management service
history - externalize icons
history - fix settings to appear in timeline
Update to latest CellPart API
remove unused commonRender
follow cell part api.
Move electron sandbox priv change
Move Cell Decorations to CellPart
Make CellContextKeys a CellPart #131808
Simplify CellPart API
Remove another block from cellRenderer #131808
seccop settings still required
Sandbox fixes
Enable history lang detection by default
Remove heuristics in favor of better confidence from model
Bump distro
allow creating comment threads on cell uri.
Respect workbench.editor.openSideBySideDirection when requested group > # number groups
Remove unused param
Clean up few more calls to object.freeze
Use correct casting when working with Object.freeze
Handle home not being set in CI
separate document and notebook comments.
Setup custom builder
Set buildkit
comment thread generics
Skip test
update overview ruler decoration color when theme colors change (#145262)
fixes #145180
xterm@4.19.0-beta.7
depend on redirect route within Microsoft auth (#145263)
history - tweak labels
Skip failing test
Show terminal overview ruler above scroll bar
history - update icon (#144823)
history - add a command to restore any history entry
Move more code out of cellRenderer #131808
Improve command navigation behavior
Improve caching
Abstract ExtHostEditorTabs
Ensure 2 command highlights cannot show at once
Add keybindings to terminal command navigation linux/win
Command navigation highlight
#68410 clean up
Enable updating builtin extensions
Linter problem
Only freeze event properties
Up the memory requirements to 8 GB
remove ColorDefaultsDeprecated
Bump distro
Poke github dev container CI action
Update permissions of the chrom-sandbox
history - adopt `code` property of stack elements
history - also track user data resources
#68410 support updating and loading builtin extensions
Don't write pwsh command finished when starting up
code -server scrip: apply shellcheck
Correct previous session recent command order
More work towards adopting unique tab ids
Add a `.code` property to undo redo elements (that is not localized)
history - use undo service to figure out good entry label if possible
Increased the host requirements when running in a container to 8gb
Tweak source control repositories state restoration
more readonly-ness for parts of the `NotebookDocumentChangeEvent`, https://github.com/microsoft/vscode/pull/144868
Update distro commit
deprecate old notebook events
fix https://github.com/microsoft/vscode/issues/145115
history - tweak editor labels
history - tweak compare command behaviour
history - add commands to compare any entries
history - allow to rename entries
history - add command to remove all of history
compute target platform on the renderer side
check target platform while handling outdated extensions
Move collapse-related code out of cellRenderer to a cell part #131808
Move more code out of cellRenderer and into cell parts For #131808
Align icons of nested children with parents'
remove overviewRuler
add OverviewRuler to the terminal (#145146)
update distro
xterm@4.19.0-beta.3
xterm@0.7.0-beta.11
fix #140673.
docs: more precise description for `exports` in `Extension` (#144947)
improve host label update host label to use authority if no workspace suffix is provided
Increase gap in modified decorator pattern (refs #142809)
Keep legacy zip file names for darwin x64
fix updating view and view container positions when updated in storage
Bump distro
adjust comment widget width.
Batch view size updates
Set repositories list anchor after closing a repository
fix indicator height
style update
fix layers checker to support `trace`
Have tab label use tab id
history - add more commands
use console.trace when injected services don't match static args
Support fetching cwd for the current partial command
Add gap above Settings editor split view (#145137)
Handle URI parse failure in terminal links
timeline - revert back to showing multiple sources
Improve Nest Rendering mk 2
output before comments.
history - enable tests again by setting increasing unique timestamp
update comment thread header on update.
move theme into comment widget
history - skip all tests
Add missing import
Add missing registrations
history - try to fix flaky tests
history - move emitters into model
Revert "Pick up new TS version for building VS Code"
history - allow to remove entry
history - try to fix unreliable test
Pick up new TS version for building VS Code
update `.js`
update distro
history - tweak commands
Add mapping for server darwin arm64
Inherit `isBuiltin` when overwriting a built in extension
history - fix commands
Reduce type duplication
history - store active timeline source in workspace storage
Update README.md
Add ocmment for preserveFocus
rename the method
more hcLight values
some more tab todos
history - rename `time` => `timestamp`
history - I do not want to talk about this
Update Swift grammar
tiny tweak and API-todo
Don't run certain steps in the universal build
change how `scheme` and `pattern` are interpreted when `notebookType` is present on DocumentFilter
history - add a version id to entries.json
Add some Settings editor event annotations (#144287)
Experiment comment thread component in cell part
Abstract comment thread widget.
lifecyle for comment thread disposables
Avoid recreating duplicate menus and hovers
Comment Thread Zone Widget.
Persist hasOutput/getOutput
extract comment reply component.
Serialize command, fix command history after reconnect
Remove TabKind.other
Use markdown for the timeline hover (#145038)
Add manual reset flag for settings update event (#144429)
dispose comment node disposable on comment node removal.
Move markdown renderer into CommentThreadBody
history - flip label and description
extract comment thread body.
Update getting started artwork and labels
Remove extra blank line
experiment cell comments.
Allow deepfreeze to skip elements
Add `.hc-light` rules
support Copy as HTML in the terminal (#144784)
fix #145044 (#145054)
fix  #145036 (#145040)
Add support for arm64 for server builds
undo the code move
update title
Do not hard-code `Typing` as the label for `SingleModelEditStackElement`
improve url handling
Update Seti theme
Sort comments in view by resource Part of microsoft/vscode-pull-request-github#3354
update Lua-grammar (#144975)
fix outdated targetplatforms in web
history - add command to compare with file
history - add command to restore
history - move commands to own file
history - store on add in web
history - limit long running shutdown handling to desktop only
history - implement cleanup on shutdown
history - fix max entries per file usage
history - first cut settings for local history
history - introduce and use `SaveSource` for replacing a file
history - introduce `entries.json` and `SaveSource`
smoke - disable trust
run all functions in PROMPT_COMMAND  (#144779)
fix typo
try out layout type both default
configure layout directly with both option
Handle other typed arrays too
Get current command working after reload
Take into account NOTEBOOK_WEBVIEW_BOUNDARY
Reduce indent levels for switch/case
Render affinity in the running extension editor
Revert "Revert "show reload button when extension with different targetplatform is updated""
fix reload required action
move TargetPlatform to extensions (resolve cycle)
Launch multiple extension host processes
Spelling
start working on fiind
Update Codicons: Adjust layout-statusbar https://github.com/microsoft/vscode-codicons/commit/4b27dcfb2f5068b06c9d329ca33300ccc273aea1
Compute affinity for extensions running in a local process extension host
SCM diff decorator - modified diff decorator with a pattern (#144906)
Revert "show reload button when extension with different targetplatform is updated"
Update comment to indicate why readonly
Update deepFreeze to handle freezing of Buffers
Serialize commands and send them over during replay
move secondary next to primary
disable workspace trust in web integration tests
history - always return something from `provideTimeline`
Add workspace trust to the web (disabled by default) and server distro (enabled by default) (#144852)
Correct imports
Move shell integration addon to platform
Move capabilities to platform
Run shell integration addon on pty host
Be a better user of deltaDecorations
Delay picking a running location until all desired extension host kinds have been computed
history - improve interop
history - implement interop between git and local history
history - renames
history - fix local history entry URI identity
history - first cut action in context menu
history - properly use provided label/description for diffs
Reduce usage of `ExtensionHostKind` to establish the running location
history - properly wrap around fs provider
Ask all local extension hosts to resolve canonical URIs
Reflect in `IExtensionService` methods that there might be multiple local process extension hosts available for inspection
for now, don't deepFreeze the onDidChangeNotebook event, https://github.com/microsoft/vscode/pull/144868, https://github.com/microsoft/vscode-jupyter/issues/9327
timeline - fix bad `uri` compare
history - improve display of local history entries
fix color contribution point warning
add `CURSOR_INDEX` and `CURSOR_NUMBER` snippet variables, https://github.com/microsoft/vscode/issues/144856
More removing of assumptions that there is a single extension host of a certain kind
Skip reading file content for undo when deleting a large file
extract comment thread header
Revert foreground change
Minor theme fixes
update comment node.
rename side panel (#144862)
Minor theme fixes
Update standalone theme
Update letterpress SVGs
Update debug color registrations
Update git color contributions
Update testing color registrations
Update settings editor registrations
Update welcome page registrations
Update extension icon registrations
Update peek view color registrations
Update terminal color registry
Update more color registries
Reduce assumptions that there is a single extension host of a certain kind
Update colorRegistry
sketch out inline completions provider for suggest
history - use `save` icon
Towards having multiple extension hosts of the same `ExtensionHostKind`
chore: update to electron 17 (#143223)
clean-up keybindings and menu registrations for accept suggestion command
history - more timeline label tweaks
history - tweak timeline entry labels
Investigate potential rst grammar to include as a built-in extension (#144680)
Convert `ExtensionRunningLocation` to a type
Check task uri when quick resolving dependencies Part of #144761
add PRs to my work notebook
Show hover feedback on commentable lines (#144834)
history - lazily resolve entries from disk
history - first cut timeline provider for local history
Adds inlineCompletionsNew and inlineCompletionsAdditions proposed APIs to avoid breaking changes when finalizing inline completions API.
fix tests
Use ext host comment value in commands (#144743)
add tests
history - first cut model and `getEntries`
history - introduce event for when entry is added
history - first cut tests
history - carry stat data in save event for history
Consider order fields when doing searches in the Settings editor (#144213)
Bump @vscode/ripgrep
DAP 1.55.0-pre.1
Use lowercase preserve for jsxemit
Use esnext as implicit js/ts module
include 'create notebook' in the command pallette
Revert "experiment running notebooks in dedicated process."
Move Monaco Editor checks to a separate GH action
show reload button when extension with different targetplatform is updated
consider target platform while installing, uninstalling and loading extensions
experiment running notebooks in dedicated process.
Add tests for `ExtensionsActivator`
Consider error-telemetry to be a type label
xterm@4.19.0-beta.2 fix #144142
update distro
history - only track working copies of `defaultUriScheme`
set hcLight for simple cases (null, color reference)
add trace logging for notebook serializer
Reveal comment threads in active diff editor from view Part of #143948
more fixes
fix tests
preferredHighContrastLightTheme setting and more changes
history - first cut `cloneFile` use from saved working copies
update distro
a little more jsdoc, https://github.com/microsoft/vscode/issues/144662
some jsdoc for https://github.com/microsoft/vscode/issues/144662
don't check feature registry if there are smart select providers, there is always the word based one, https://github.com/microsoft/vscode/issues/144297
#144671, fix some non localized strings in git extension (#144712)
history - fix `cloneFile` to create parent folders as needed
history - make sure local history home folder exists on disk
history - introduce a `localHistoryHome` environment
Add expected type for selectionLines property of editor.fold command
Add a `FileService.cloneFile` method (#144587)
Support @prerelease (#143540)
history - emit save event for working copies
Revert "Improve Nest Rendering"
Allow manually restarting TS Server even if it has crashed too many times
Try to have more explicit error when we don't have a server
Make sure we set html on markdown preview when it is not visible
Hook up watch properly for extension build scripts
Add notebook-renderer to hygiene filter
Format file
Update src/vs/platform/terminal/node/terminalProcess.ts
Adds token to make 403s less likely when downloading ripgrep. (#144686)
Remove legacy expand mode
Bump highlight JS version
Move simple-browser to use esbuild for webview scripts
Switch the markdown preview script to use esbuild
Use vscode-uri instead of node's path
Update distro
Remove extra spread
Avoid re-parsing uri
Adopt reduced motion in find (#144645)
Preserve path item details for JS/TS completions
Allow passing in strings
Bump distro
Encode webview parent origin in authority
Only allow webviews protocol in top level editor windows
update distro
Update wording to include "animation" for searching Ref #128595
Improve embedding the web worker iframe
Re-run -> Rerun
Observe reduced motion in pane split views (#144644)
Adopt reduced motion in notifications (#144643)
- store target platform in local extension - show update action for extensions with outdated target platform
finalize `DocumentFilter#notebookType`, https://github.com/microsoft/vscode/issues/141143
add tests, also an issue that the tests uncovered
Add badges extension API (#139225)
Add hc light theme kind
Update setting description for new default
Default terminal min contrast to 4.5 (WCAG AA)
Identify language tag settings (#144441)
Update distro
missing `throw`
update distro
fix https://github.com/microsoft/vscode/issues/144681
also popular and fix `executionSummary`
move/copy `onDidSaveNotebookDocument`-event into workspace, add `onDidChangeNotebookDocument`-event which fires for any notebook change: metadata, structure, cell output, cell metadata
Update `native-watchdog` also in the `remote` folder
`native-watchdog@1.4.0`
`native-keymap@3.3.0`
add failing/skipped test for https://github.com/microsoft/vscode/issues/144664
Add support for definitions nested in .devcontainer
more API todos for inline completions
Unblock CI (#144649)
some API todo updates
update jsdoc, https://github.com/microsoft/vscode/issues/141576
Add missing repo and missing label
Can't Save File (fix #144614)
Implement reduced motion in getting started
Simplify slightly
fix #130724.
:lipstick:
Add initial reduce motion service ref #128595
fix markdownDescription for javascript.suggest.jsdoc.generateReturns (#144486)
Center contrast border on lower activity bar items
Update light HC error tokens
Support shell type context key on mac/linux
extract notebook insert toolbar, status bar and title toolbar css.
no more scrollbar styling for builtin output renderers.
extract focus indicator css
extract notebook toolbar css
remove dup css import.
Update decoration colors to be based on new editor colors
Don't use language autodetect editors that have had a language set via paste (#144352)
Split out getting started renderers into testable component (#144447)
fix overlapping decoration (#144600)
improve doc
Better type safety for Envrionment in variable resolving
fix #144084
fix #144029
add page number to gallery event
Update grammars
fix #143540
Update Lua grammar (#144544)
files - update jsdocs
web - fix "open folder" in welcome
bump distro
glob - some :lipstick:
update references view extension
force move markers when applying additional text edits, https://github.com/microsoft/vscode/issues/143888
ci: fix rich-nav agent
add API todo
make sure "only once provider" isn't registered/unregistered while completions are computed, https://github.com/microsoft/vscode/issues/144362
glob - cleanup test
glob :lipstick:
mock delta cell decorations.
testing: fix comp error
fix test.
:lipstick:
Also add comments to deprecated api usage
support current highlight in overview ruler
render matches in one line once only
testing: fix explorer action tangle
handle zindex of overview ruler.
testing: make chords for messages and peek more consistent
testing: use better keybinding for test history
theme color for find match.
more accurate find match decoration height.
Dont duplicate telemetry events for setting language. Add telemetry event with to/from of manual untitled editor language picks.
menus: fix performance issues scrolling with lots of submenus (#144436)
Exclude 3rd party modules from scan (#144440)
Show metadata diff when output value is the same.
Add hidden config to skip refreshing explorer on window focus for debugging purposes ref #143867 #140418 #136258
Test for onDidChangeActiveTabGroup
Revert "Update distro"
glob tests with absolute prefix
Introduce onDidChangeActiveTabGroup
SCM - fix progress indicator bug (#144401)
Adopt setPointerCapture in the editor content (#140101)
Update distro
Rename additionalResourcesAndViewIds
debug: update dependencies
Add owner/comments to telemetry events
Pick up latest TS nightly for building VS Code
Convert to arrow function
Remove extra not-null check
Mark `arrays.insert` and `arrays.remove` as deprecated
Use [].flat and mark our flatten as deprecated
Use `[].flat()`
fix #143349.
Consolidate configuration
Bump version
Introduce default binary file setting (#144278)
viewId -> viewType tab API
notifications - render secondary buttons different (#144207)
glob - add skipped test for #142781
testing: update for compile error
Revert "Revert "testing: fix profile id reuse not working""
Revert "testing: fix profile id reuse not working"
fix decoration padding problems (#144261)
remove reference to vsonline. ref https://github.com/microsoft/vscode-internalbacklog/issues/2769
fix #143538.
Wait for extension contributions in `welcome.showAllWalkthroughs` (#135632)
fix #143966.
Scroll to top button not getting themed (#144224)
testing: fix profile id reuse not working
testing: fix rerun last not working for extension triggered runs
testing: fix icon skipped color not being used
Allow webp from vscode-file uri
Tidy up tests
Adopt official semantic tokens api for JS/TS in html (#144223)
Remove `GlobalMouseMoveMonitor` which does nothing (#140101)
Improve name of options interface
Move filesToCopy into zsh block
Adopt `setPointerCapture` in the color picker widget (#140101)
Remove unused terminal css rules
support more styles in ansi.
ensure Safari goes through our clipboard service. ref #142057
Adopt `setPointerCapture` in the minimap (#140101)
Bring shell integration injection tests back
Ensure shell integration works when PSReadLine is not loaded
Adopt `setPointerCapture` in the scrollbar arrow (#140101)
Adopt `setPointerCapture` in the scrollbar (#140101)
update distro
Introduces editorUnicodeHighlight.background to theme the background of highlighted unicode characters (fixes #139427).
Remove old shell integration inject impl
Debt: inline module ids instead of having some of them spread out
Debt: replace `ViewLinesChangedEvent.toLineNumber` with `.count`
Remove picker telemetry
Add more ext host editor tabs tests
Adds support for snippets in inline completions (fixes #138260)
update distro
Telemetry: annotate my telemetry events (fix microsoft/vscode-internalbacklog#2768)
update vscode-grammar-updater
[html][json] fix some missing dispose registrations
Opening file with same name but different folder appends a suffix to the filename (fix #143414)
ci: fix env configuration (#144229)
only exit zen mode by exitZenMode if its already in Zen Mode (#144217)
Move more update-grammar scripts to mjs
Migrate update grammar to mjs
ci: fix build with latest node-gyp
while -> for
Remove support for old plugin based semantic token responses
Cleanup semantic tokens provider
Remove experimental protocol stubs
update credential provider warning
Remove text mate highlighting of more JS/TS built-ins
Move update grammar script to mjs
Finalize markdownstring.baseUri
explorerConstants => fileConstants ref #142728
fixes #144180
fix #144137
Update SCM colors to increase contrast (#144191)
run zsh startup files (#144196)
update nbformat typings
Address #144206 by reverting parts of 6d04ed55c7
get more info for #144202
Increase nodejs mocha timeout to 5000ms to align with Electron and browser unit tests (#142545)
add more tab tests
use important in css rule, #144138
Annotate my telemetry events
Closes #135178
stub out some lightweight unit tests for `extHostEditorTabs` (#144192)
different color
use `appendMarkdown` instead of `appendText` because of escaping issues, https://github.com/microsoft/vscode/issues/144172
adding `InlayHint#textEdits`, https://github.com/microsoft/vscode/issues/141576
SimpleCheckbox -> Checkbox
initial rename of Checkbox -> Toggle
Copy requested files
Actioning feedback
Injection -> ConfigInjection
files - clarify comment
update distro
cannot use URL in /common/
update distro
use `appendLink` where we generate MD links, fyi @alexr00, @Tyriar, https://github.com/microsoft/vscode/issues/144172
add MarkdownString#appendLink, https://github.com/microsoft/vscode/issues/144172
Mark PixelRatioFacade as singleton for disposable tracking.
feat(jsonc): more interactive completion for "path" property
change internal API for InlayHint from command to textEdit, https://github.com/microsoft/vscode/issues/141576
update distro
Revert "vscode subproperty (microsoft/dev-container-spec#1)"
debt - remove all of `extensionAllowedProposedApi`
web - skip "Open Workspace" in temporary workspaces
explorer - native file import when supported even in web
web - limit workspace opening from drops to temporary workspace
web - enable dnd for local files/folders in more places (#141935)
fix clear, add 20px left padding (#144138)
Migrate postinstall script to use modules
add aka.ms link
update vscode-tas-client
Pick up real 4.6.2
Use TS 4.6.2 instead
Add type annotations in browser-main
Pick up TS 4.6.1
Bump default target for jsconfig template
Adding jsconfig for npm scripts
Move update-distro script to mjs
Experiment with using mjs for one of our build scripts
Enable type checking in more js build files
Adding type annotations
Get pty host injection working for local
Use .test instead of .match
Log when cannot inject
Update build scripts to target es2020
Bring most of injection over
Use ?.forEach instead of ( || []).forEach
Remove unused event
use ?.
null -> undefined
Remove extra check
Always use nameSpan for code lenses
update postcss dependency
server: exit with error code when license is not accepted
Start refactors to bring shell integration into pty host
Add jsonc to markdown embedded languages (#144003)
debug: allow uris to be given in launchVSCode
Use error no telemetry in create xterm
Add owner and comments to telemetry events
Mark workbench.editor.historyBasedLanguageDetection experimental
Force using `x64` when running `yarn` on the `remote` folder on macOS
Add first pass at reducing non-confident guesses
check if instance is disposed before updating icon/title (#144098)
Custom editors implement untyped save
Use ErrorNoTelemetry in pty service
Improves #132021 by using `column` over `column - 1` to reflect the actual column the message should be attached to.
web - tweak workspace label when temporary workspace is opened
Revert ":up: playwright"
working copy - `trace` error when `ignoreErrorHandler` for less log spam
dnd - assert we have a `HTMLFileSystemProvider`
web - allow a folder to open when dropped onto editor area
handle dirty model before saving
ci: update node-gyp for VS 2022 support (#144056)
update milestones in notebooks
update distro
Update ci.yml
This will look for Visual Studio in the Correct directory. (#143479)
dnd - simplify code a bit
dnd - move web transfer handling into common reusable place
tabs - implement drop parity to editor drop support
working copies - ensure initial value is used for backup if working copy is unresolved
chore: hasfocus -> hasFocus
web - support `FileSystemHandle` when dropping into editor area
clarify `window.openFilesInNewWindow` setting
editors - add context key for active editor being first (#141625)
editors - allow untyped editors from save/saveAs (#143526)
Add match media change listener in browser ts (#143287)
:lipstick:
add -label:unreleased to the my-endgame notebook
Disable new model by default
don't dispose of previousCommandMarker
fix #143905
Ignore pointer events in terminal link highlight
Evaluate term proc remoteAuthority in ctor
adjust command decoration font size and margins based on terminal font size (#143939)
xterm@4.18.0-beta.15
Get zsh shell integration working again (#143963)
web fs - properly await `isSameEntry` (#143414)
Opening same file appends a suffix to the filename (fix #143414)
Update distro commit
Add +1 to the visible textarea width to avoid flickering that might be caused by accumulating rounding errors (#141725)
Updates audio cue sound.
lifecycle - dispose main process IPC when being killed
lifecycle - remove unused `onBeforeUnloadWindow`
update distro
storage - further tweak lifecycle behaviour
text editors - cleanup view state handling
workspace editing - move path normalization into service
:up: playwright
Update Codicons: Adjust eye position https://github.com/microsoft/vscode-codicons/commit/5467ce91da1e7ec1f84cc0ccc73000ef530ebe1f
Clean up logged messages
Clairify what being a directory means for baseuri
Change deprecated message to use markdown
Restore 'follow link' text on tsconfig links
Don't encode label for md path completions
Use decodeURIComponent instead of decodeUri
fix #141159 (#143909)
Change to proportional layout
fix #143696
only show output button on focus of item, part of #14396
Revert prettier formatting
xterm@4.18.0.beta.13 fixes #143014 fixes #143784
add css to fix issues (#143908)
Maintain order when registering language configurations (#143187)
Reload language configurations for a language if the configuration files change (#143187)
fixes #142570
update DAP to final 1.54.0
chore: revert to electron@13 (#143851)
remove unused import
server cli: print server bound address
Losing a history entry for "go to definition" in same file (fix #143833)
server cli: add aliases
server cli: sanitize string args
fix compile issue
remove `InlayHint#command` for now, https://github.com/microsoft/vscode/issues/141576, https://github.com/microsoft/vscode/issues/143740
show hover message for label parts that have command or source location, https://github.com/microsoft/vscode/issues/143740
Audio Cue Help: Play sound even if audio cue is disabled.
Remove warning since we still use `FileAccess.asBrowserUri` for creating new web workers from the web worker extension host
skip flaky test (#139960)
editors - conflict when `viewState` and `selection` provided (fix #143878)
web - offer "Open Folder..." also in F1 list and as keybinding
audioCues.debuggerStoppedOnBreakpoint -> audioCues.onDebugBreack
web - change "Open Folder" to replace folders (fix #143857)
lifecycle - allow to force close a window (fix #134180)
update distro, https://github.com/microsoft/vscode-internalbacklog/issues/2461
lifecycle - prevent multiple overlapping window unloads
lifecycle - show progress also for `onBeforeShutdown` phase
Remove ref to langdetect
Revert "Increase impact of biasing"
Increase impact of biasing
Imporve logging for language detector
Also add in webview offset to cell top computed for markdown
Add hidden config to prefer historical languge detection model
Better workaround for safari loading check
in -> of
bump distro
Bump distro
Present recent dirs in last access order
focus on list when inputbox isn't shown. fixes #143782
Revert max width back to 1200px
Update xterm.js
bump distro
fixes #143820
Update distro
Delay registration of command start marker
sort markers always by resource first, only then by problems.sortOrder, fixes https://github.com/microsoft/vscode/issues/143070#issuecomment-1049223498
fix the incorrect title in PrevMarkerAction
Update HC letterpress colors
reduce number of times classes are changed for command decorations
Remove limit to keep cache consistant
add xterm decoration class
update distro, https://github.com/microsoft/vssaas-planning/issues/6276
debug: bump js-debug
fix stale underline decoration, always show pointer when inlay hint has a command, https://github.com/microsoft/vscode/issues/143740
delete placeholder from decorations when command finishes
remove unneeded code
remove unneeded code
Remove debug log
terminal decoration config improvements (#143802)
fixes #143674
Don't use gutter colors for terminal decorations
address comments
Reduce left padding, fixes #143775
fix layer breakage
Markers introduce editors with query and fragment URIs (fix #143686)
Improves keyboard accessibility in hovers.
Implement Error object which doesn't get logged in telemetry
Mention restarting in shell integration setting
fix layer breakage
improve pii path logic
Workaround history entry merging on Linux
fix #143708
tests - only have one `TestProductService`
De-duplicate commands in run recent
tweaks (#143714)
Call out exceptions in multi line paste config
Drop exclamation mark in shell integration msg
update distro
Correct description of bracket guide setting
tests - restore test coverage for #139786
Remove unused...
Remove IDiagnosticsService until a web version is available
scale instead of zoom
Revert "Improve language detection biasing"
Improve language detection biasing
Also use relative pattern for watching markdown resources
Use matchesSomeScheme
update distro
xterm@4.18.0-beta.10 fix #142983
Revert padding for now
Run OSS tool
testing: standardize inline vs context menu command visibility
Restrict command links in notebooks to trusted workspaces
api: fix broken link
testing: fix comp error
testing: fix performance issue on large numbers of test outputs
Update dark HC theme name
Allow stack frame without source as top stack frame when using disassembly view
Reduce logging
Only ship woff2 fonts for math support
Use relativepattern for file watcher
bump keytar to 7.9.0
:lipstick:
experiment notebook scrollbar
resolve comments.
[html] update service
update
bootstrap: fix failing on trying to write to process.stdout/stderr
revert fix for #143638
Add debounce, fixes #141680
fix #143421
Bump distro
update distro, https://github.com/github/codespaces/issues/5563
Switch to isSticky
re-comment test line
refs #142851
fix #143638
Updated light HC editor contrast issues
use command start marker instead of prompt start marker, part of #143421
fix #143400
storage - reduce logging again
update/add API todos for inline completions
Remove console.log
Add tab pin status
Make enum not uppercase
:lipstick: async-await and others
Temporarily disable that remote extensions can run in the local web worker extension host (#141322)
don't have `_modelTrackers` has map and inn parallel `_modelIsSynced` as set, https://github.com/microsoft/vscode/issues/143609#issuecomment-1047812721
untangle notebook document, editors and their truth, https://github.com/microsoft/vscode/issues/142724#issuecomment-1034889758
Allow getWorker function to return a promise
Update distro
Replace languageId by languageSelector in all language feature registration functions
Handle the case in which the git command is not the first argument #132778
fix https://github.com/microsoft/vscode/issues/142727
Don't do a word selection when double clicking on injected text.
Add support for running remote extensions in the local web worker extension host (#141322)
extract marshalling id into its own file and untable uri from it, https://github.com/microsoft/vscode/issues/142476
inlay - show underline on hover and link on modifier+hover, https://github.com/rust-analyzer/rust-analyzer/pull/11445#issuecomment-1047632180
Updates folded area audio cue.
üíÑ
update distro
autoCreateQuotes: Mention attributeDefaultValue
smoke - retry stable code download (fix #143386) (#143592)
prevent default on dbl-click on inlay part, https://github.com/microsoft/vscode/issues/143555
Crash from sqlite3 module with remote integration tests (fix #143186)
dont swallow keytar errors on desktop
refs  #137633
fix action category (#142911)
fixes #142464
fixes #142134
fixes #141426
Update distro
Imporive small-document language prediction Closes #137104
#141322 - show status when installed on remote and web
Add parens to lazy button text
Simplify, remove redundant property
#141322 - Enable ui extension with browser entry point in web
Send `remoteConnectionSuccess` when the remote connection succeeds
Do not expand an empty range to a word if the range is at the end of a line (#66482 #142810)
Update light HC theme name
status - enable touch on status items (#125686)
Editor commands do not honor preserveFocus context (fix #143558)
Adopt `IFileService.stat`
Avoid using `process.env`
Be sure to define more services when creating a test code editor
eagerly create stacktrace value, avoid creating stacktraces, ignore the first 30 listener for leak checks, some lipstick, https://github.com/microsoft/vscode/issues/143111
Revert "Temporarily disable emitter leak monitor (#143111)"
storage - add verbose logging when running in CI (#143186)
vscode subproperty (microsoft/dev-container-spec#1)
fix typo
updates
Observable cleanup.
Revert "Add keybinding for custom tree hovers"
Bump follow-redirects in /extensions/github-authentication (#142891)
Bump follow-redirects from 1.14.7 to 1.14.8 in /build (#142892)
Bump simple-get from 3.1.0 to 3.1.1 in /remote (#142094)
Bump simple-get from 3.1.0 to 3.1.1 (#142095)
add tests for object and array merging
Adds quick fix audio cue for inline suggestions.
use audio cue to signal no inlay hints can be read
Make sure in the audio cue service that only enabled audio cues are played.
cap line length when reading inlay hints, https://github.com/microsoft/vscode/issues/142532
fix error message for https://github.com/microsoft/vscode/issues/143031
iOS - reduce usage of `isIOSContext`
better strict mode for insta-service, also cleans leftover from optional-dependencies, https://github.com/microsoft/vscode/issues/142913
Add close options to build tasks
Support lazy resolving for variable view #134450
native modules tests (#143505)
files - adopt `fileService.stat` method in more places (#143491)
explorer - add "Open Recent" to web serverless empty explorer (#143464)
files - add `stat` method (fix #143394)
Switch to 1ES windows agent
Remove unused file
fix #143330
Support line continuations on zsh
Support zsh skipped commands
Show codelens to ipynb json to open in notebook editor
re #142875. Add error actions for notebook.
Add Light High Contrast theme (#143398)
Add tab kind to the tabs api
Move files
show outline on command start and rename command icon colors (#143404)
Context menu no long pops up on terminalEditor
Add necessary fs methods to `IExtensionScannerHost`
Improve approach for checking bash history
remove unecessary files in build
avoid app-insights files in the build. For #143377
Support line continuations in bash
Add an `IExtensionScannerHost` for scanning extensions
Use `IFileService` instead of `pfs`
remove * from path
Allow context menu when terminal.integrated.rightClickBahavior is 'nothing' by holding Shift
Change milestone on endgame notebooks
Introduces Cache helper class.
Simplify `CachedExtensionScanner`
:lipstick:
fix #143389
Makes audio cue help command fully localizable.
Extensions that support running in the web worker extension host can be also served from the server, i.e. they don't need to be installed locally (in the browser storage) (#141322)
Makes audio cue name localizable.
Improves audio cue implementation.
Add new colors `diffEditorOverview.insertedForeground` and `diffEditorOverview.removedForeground` (#66223)
Bump distro
Add new `diffEditor.insertedLineBackground` and `diffEditor.removedLineBackground` colors (fixes #103207)
Rename colors (#66223)
Add new colors `diffEditor.insertedTextGutterBackground` and `diffEditor.removedTextGutterBackground` (#66223)
Add missing copyright
Polish command decoration hover wording
Localize session categories
Call out current session in go to recent dir
Save directories per remoteAuthority
Improves audio cue help command.
web - allow to restore opened local files/folders via history (fix #135559)
update distro
Tweaks
fs resource lock logging :lipstick:
Revert ":lipstick:"
Revert "fix #142239."
Disabled context menu when terminal.integrated.rightClickBehavior is set to 'nothing'
get shell integration to work for zsh (#143305)
debug: add frame name to context
guess notebook file extension.
log for reopen.
Support directory history
Update Seti to support Notebook.
Remove unused events
Add some basic tests for terminal history
Simplify textarea rendering flow
update terminal config helper
Add identifier to server distro
more setting name adjustments #143290
fix two more #143290
fix #143290 and add skipped color to setting
ensure getSessions also asks for email and openid scopes and fix #142776
Clean up
React to stale entries
Create a fast path for children that resolve sync (#143162)
Configurable history limit
Remove console.log
Change history approach, use LRU cache
web - add and use `isTemporaryWorkspace`
isActive -> isPresent
Renames "Audio Cues Help" to "Help: Audio Cues"
Only play audio cue when debugger stops on a breakpoint, not every time.
:lipstick:
File writes can hang when write locks are not cleared up (fix #142462)
fixes #142037
fixes #143153
chore: add disable-dev-shm-usage to known chromium flags list
revert terminal color registry change
ICodeBlockHighlightRequest
indentation.
Unify code highlight
Remove unused debug console method
set defaults
fix #143194
Update Codicons: Add arrows w/ circle icons https://github.com/microsoft/vscode-codicons/commit/560bda6faef177d283928da5571343abbd732758
allow any codicon to be used for command decorations
Update Codicons: Add small versions of record and error (Refs #143017) https://github.com/microsoft/vscode-codicons/commit/3e4cd00b38a04be4a0a1ab5e2a6466fa3ac645cb
Support syntax highlighting in code blocks in markdown output
fix #143205
Don't break the position of the cell title toolbar on single-line cells
fix #143125
Add isDirty
Improve quote style setting display
Add note about quote style setting to jsxAttributeCompletionStyle
Re-enable tab getter test
re #142872. Contribute ipynb notebook to File -> New when no Jupyter extension enabled.
re #142872. Default language to python.
allow legacy settings to use workspace storage fixes #142852
xterm@4.18.0-beta.6
fix #143125
Mitigate #135910
Delay getting workspace uri until tests are running
Stop notebook subs
fix #143221
ci: fix linux system services
fix #143205
The path environment variable is `Path` under windows, so read it in a case insensitive manner
fix #143215
Create clear command history command
Implements #140960
Improve performance of unicode highlighting by not stopping on every whitespace.
Show recent commands before command detection is registered
Don't add to previous session history if in current
Don't add empty commands to command history
Revert "Revert "remote-cli not being added to PATH with `"terminal.integrated.inheritEnv": false`""
Revert "remote-cli not being added to PATH with `"terminal.integrated.inheritEnv": false`"
Dont wait for file system providers #143053
layout :lipstick:
Make tree dnd handleDrop optional
editors - rename `EditorOpenContext` to `EditorOpenSource`
revert log workaround given electron update
Bump webview commit
chore: bump electron@16.0.9
remvoe jupyter(json)
re #142872. Ignore whitespace only content error.
add math snippet (#142697)
Add fast path for synchronously resolved children (nested children) ref #140883
Add `notebookKernel` contextkey
Route webview requests to remote authority back through VS Code
debug: allow multiline objects at top level in repl
Modal alert on file open error ref #142875
Replace editor upon saving (#143144)
improve decorations (#143130)
Polish splitview behaviour some more
remove todo
Add modal error as part of #142875
polish
testing: disallow moving from higher to lower terminal states
Temporarily disable emitter leak monitor (#143111)
Revert "linux: disable crash reporting in CI (#142572)"
Revert "linux: disable crash reporting in CI also in smoke tests (#142572)"
web - remove legacy main build file
Remove telemetry upsetting GDPR tool
Swallow error we if updating cwd after process is killed
address Event.map leakage
Don't sign ps1
Add command to close all diff editors
Implements audio cue for when the debugger pauses.
Audio Cues: Ignore line changes caused by non-explicit position changes (e.g. navigation)
Comments view refresh (#140979)
linux: disable crash reporting in CI also in smoke tests (#142572)
linux: disable crash reporting in CI (#142572)
Revert "Pass renderer locale to exthost, fixes #85675 (#141095)"
Add extra timeout for safari webview loading checks
native-keymap@3.2.1
Handle skipped commands in bash
native-keymap@3.2.0
Localize command decoration hover and handle exit code -1
Show 'skipped' command decorations
Ensure pwsh tab completion commands are registered correctly
Polish command decoration hover format
Ensure pwsh exit code is evaluated asap to fix failed commands
Add shell integration scripts to server package
Correct shell integration script execInstallFolder
Bump webview commit
testing: fix tree view inconsistencies on nested child updates
tree: fix error if focused element is spliced out and then parent collapse state changes
fix typo in filter for pdb/node
Update Codicons: Add `indent` (Refs #142081) https://github.com/microsoft/vscode-codicons/commit/ab285ffd13cc17b49582ac976eff5bdfe4913b90
tangle - extract `platform/action` (fix #141154)
Ignore multi-line paste warning in bracketed paste mode
Use custom sequences for shell integration
Implements audio cue for warnings (off by default).
Introduces more audio cue settings, adds audio cue help command.
Listen for cursor moves to more reliably find command on Windows
Bump distro
WIP command history
Close stale diff editors while stashing changes
Don't show an empty quick pick to remote explorer users
fix: simplify regex expressions in tasks/common (#142899)
debt - move more window things to `window` layer
fix valid layers checker
tangle - extract common window (#141154)
tangle - extract common backups (#141154)
history service :lipstick:
Have a history per editor for in-editor navigation (fix #36634)
Have a history per editor group for in-group navigation (fix #45233)
smoke - remove `only` usage
smoke - open a different file for #142745
Don't try creating markup previews of folded cells
Only remove margin on last child of preview
Escape spaces in file  names for md suggestions
update xterm@4.18.0-beta.5 fix #142859
command decoration improvements (#142866)
Put cells in pending mode immediately when the user clicks run. Remove them from the pending state if the controller does not create an execution immediately inside the execute handler.
add filter for prebuild node files
search all the issues
Unify and fix Solarized token colors
debug: close memory views before shutdown to avoid restoring
Pick up TS 4.6rc
typo
Don't use CSP in outer webview for firefox
Don't use CSP in outer webview for firefox
Remove unused var
Remove unused param
update .gdntsa
:lipstick:
Update subscribers.json
Remove extra console.log
Add border to status bar items on keyboard focus (#142665)
Make cell toolbar sticky scroll as well
Bump emmet-helper, fixes #123399
fix #142847
finalize icons contribution point (for #119101)
improve icon extension point descriptions (for #119101)
remove contribIconFonts proposal (for #119101)
Remove unused GDPR fragment
Up distro
VoidFunction isn't as useful
improve `SafeDisposable`  and move to lifecyle
extract `_addLeakageTraceLogic`-util
add usage-warning to debounce-util
Revert "add `Event.debouncedListener` as replacement for `debounce`, https://github.com/microsoft/vscode/issues/123487"
add TRACE_LIKEY_SNAPSHOT_LEAKAGE flag to trace leakage
swap deprecation note with explainer
use latest references view viewlet
#136301 - support whenNotInstalled for config based and exe recommendations
Tree dnd feedback
some jsdoc for https://github.com/microsoft/vscode/issues/141143
Gets rid of NodeJS type dependency.
Iterates on audio cues.
add command and logic to start/stop reading the current line with inlay hints, https://github.com/microsoft/vscode/issues/142532
update distro
fix editor service tests
Move cell execution label under the drag handle so it doesn't block dragging
fix  #142537
Show folding indicator on collapsed markdown cell. For #141581
update to latest seti-ui version (#141931)
Add terminal shell integration decorations (#142538)
Update tabs model to utilize the new API shape (#142668)
Always show mouseover markdown fold buttons for a focused cell
Make cell collapse button draggable
Hide focus indicator while dragging cell
xterm@4.18.0-beta.4 Adds decoration API, fixes  #140308
don't attempt to update a document that doesn't exist yet when pre selecting the kernel
Bump distro
add test for notebook scoring, https://github.com/microsoft/vscode/issues/141143
do away with score-refiner and add pluggable notebook type resolver, https://github.com/microsoft/vscode/issues/141143
Don't allow clicking invisible cell focus indicator
refine score-refine logic, https://github.com/microsoft/vscode/issues/141143
add an API proposal for `DocumentFilter#notebookType`, https://github.com/microsoft/vscode/issues/141143
update css language service
remote-cli not being added to PATH with `"terminal.integrated.inheritEnv": false`. For /microsoft/vscode-remote-release#6289
Localize preview text
Allow trailing new line paste without showing warning
debt - do not depend from services to core (status bar)
Add new commands to command to skip shell defaults
add `LanguageFilter#notebookType` and allow notebooks to score against that
add logging for url handling (#142685)
update to DAP 1.54.0-pre.1
relax vscode.Range#contains and Range, Selection, and Location construction, https://github.com/microsoft/vscode/issues/129528
bump distro
replace all dots of color identifiers into hyphens, https://github.com/microsoft/vscode-remote-repositories-github/issues/119
history - introduce and use new `JUMP` source
pfs - update cmment
add Snippet#isTrivial
file move changes "Date Modified" (fix #142652)
workspaces - document `raw` property (fix #142418)
fix tests
editors - provide `editorIndex` from all group events
restore logging closer to how it was
:lipstick:
Better explain file nesting config
chore: disable clang toolchain for arm
Add VS 2022 to supported versions (#142667)
chore: bump distro
Also freeze markup cell output items
Use 'vscode-notebook-renderer' types for our webview prelaods
Remove `bytes` field from IOuputItem and add link to official typings
Freeze the `IOutputItem` we give to renderers
Avoid recomputing the data for a markup cell on every call to `data()`
Mark field readonly
Marking events readonly
Remove unused properties
Format switch using braces
Adopt busy for TS intellisense status
Pick up latest TS nightly for building VS Code
additional handling of the panel position with panel alignment
testing: fix non-error outputs not being clickable
update references viewlet for https://github.com/microsoft/vscode/issues/141585
reuse `DisposableTracker` to count leaked disposables
#142040 fix storing preRelease flag in web
#142040 show preRelease indicator only for extension running preRelease
#142040 show preRelease indicator only for extension running preRelease
#142040 fix storing preRelease flag
Add SplitView to Settings editor (#141195)
history - if we have a filter enabled, maybe go current
move "UI error utils" into `errorMessage.ts` and thereby untangle `errors.ts` from `IAction`. fyi @bpasero
Sign ps1 shell integration script on Windows too
Remove logging from pwsh shell integration script
chore: fix linker flags for linux build
Use Get-History to determine when a command is run
bump distro
prepare tests for license terms check
serverGreeting is optional
Add more logging to workspace trust
Show an error if node version is less than 14.17.4 (#142627)
Comment resolved/unresolved proposal (#142634)
serverGreeting is optional
Leverage command cwd in local links
fix #142633
finalize inlay hints provider API, https://github.com/microsoft/vscode/issues/16221
Adresses feedback inline completion API discussion.
cleabn up
Force update title API source when staticTitle is set
history - fix navigation stops being added when navigating
fix for icon definition
Skip environment variable collection tests only on Windows
icon contribution point: new format (for #119101)
#142040 rollback to install another version action
workspace - make most properties readonly
history - let every text selection be a navigation
clean up opener and introduce withSelectionFragment method
fix console filtering after E16 update
Workspace trust - add tracing to track down integration test failure (#142609)
Git - close diff editors on operation (#142513)
fix compiler...
debt - untangle `notebookEditorService` from `notebookEditorWidget`
proper cleanup from `_installLinkGesture`, https://github.com/microsoft/vscode/issues/16221
print hanging event subscriptions only at next tick
Add variable for macOS stage
no country for old standards
debt - switch protocol handler to a string based solution
fix hygiene issue with web file system access
Commands display both translated names and original names in command palette. (#142524)
Deal with build failures related to FileSystemHandle changes with TS@next (fix #141908)
:lipstick:
tests - skip some, enable some
:lipstick:
-forceBreakStreaming
:lipstick:
remove main frame renderer.
exthost: fix selection not serializing correctly
Pull in latest TS nightly for insiders
Surface TS code action desc in completions
Use test instead of match
Mark properties readonly
Avoid cast
Update distro
testing: fix test locations not updating
testing: finalize sortText and refresh apis
use 127.0.0.1 instead of localhost
Update distro
Attempt to fix the remote install path resolving
styling update and link handling for show more outputs
document colors: adopt ILanguageFeatureDebounceService. For #140557
linked editing: adopt ILanguageFeatureDebounceService. For #140557
ci: fix default gcc choice for remote (#142554)
Revert "Revert "Revert "Add CI tracing in workspace trust"""
pass line limit setting to output renderer
Move stream renderer to extension, support merging.
bring back panel position (#142551)
Revert "Revert "Add CI tracing in workspace trust""
Revert "Add CI tracing in workspace trust"
Add CI tracing in workspace trust
fixed settings sync has duplicate logins (#142340)
Web error telemetry
:up: distro
Add content security policy to top level webview
:lipstick;
use `extUri` for normalizing paths
protocol handler - normalize paths
chore: update to electron 16 (#137241)
More logging for CellExecution
debug: avoid listening on all interfaces when debugging a remote ext host
use ILanguageFeatureDebounceService; fixes #140557
don't warn, just inform, about missing/unknown/malformed menu identifier, https://github.com/microsoft/vscode/issues/140463
finalize `LanguageStatusItem` API, https://github.com/microsoft/vscode/issues/129037
remove check box in accept btn, https://github.com/microsoft/vscode/issues/141065
add doc for padding-left/right, add doc for inlay hint kind but also remove InlayHintKind#other, https://github.com/microsoft/vscode/issues/16221
add API-todos
:lipstick: todos
debug: bump js-debug
Spell fixes in comments
Mark AccessibilityInformation props readonly
Adopts ILanguageFeatureDebounceService#for for inline completions. See #140557.
Update Linux agent pool
more API tweaks for inline completions
fix #142418
support related information resource dnd
support dnd for markers and matches
history - fix issue with selection event when restoring view state
Ping windows agent version
add todo for mime type format
dto-ify arguments of proxied types
GVFS: can't open file (#142481)
Revert the agent pool
Update agent pool
Engineering - bring back SBOM tasks (#142487)
Update distro.
Removing console statement.
Update agent pool
Update agent pool
api-todo for inline hints and inline completions
tiny todo-api for tree dnd, fyi @alexr00
Enable merge-conflict extension in virtual workspaces (fixes #142447)
Switch agent pool
safeguard init exthost message
#142027 listen to file operations
debt - untangle side by side and diff editors (#141154)
debt - untangle platform/environment (#141154)
#142027 enable preferences smoke test
#142027 #142020 listen to file operations
Unit test for #142466
Execution object should be able to be returned by getCellExecution at the time the change event is fired #142466
fix menubar visibility changes
re #142429. error output w/ dup ansi handling
Preserve whitespace inside parameter hints code blocks
testing: refactor to avoid complex object in ext host comms
testing: remove deprecated use of extpath
history: fix layer breaker
Add "pnpm-lock.yaml" to default file nesting patterns (#142375)
Change hover backgrounds, fixes #142047
re #142429. javascript renderer
re #142429. html/svg renderer
re #142429. Image renderer moved to extension.
Remove title from webview iframe so it isn't read by screenreader #141903
Disable auto replies by default
debug: fix memory leak on repeated file reads
fix #142247
Update ARIA label when clearing search Ref #142064
Remove deprecated canceled() usages
Properly await #142050
refs #142146
refs #142146
refs #142176
NotebookEditorWidget implements INotebookEditor
debt - untangle workspace (#141154)
Decode header suggestions in Markdown path IntelliSense, https://github.com/microsoft/vscode/issues/142330 (#142392)
debt - untangle workspace <=> workspaces (#141154)
debt - untangle workspace <=> workspaces (part 1, #141154)
Refactors audio cues
Add user home variable (#141902)
scratch an itch
history - cleanup navigation actions
history - implement more tests around in-editor selection changes
Use regexp from stripComments.
have mechanics in place to warn about public snapshotted events
allow to pass disposable store into Event-utils
history - actually fix navigation stack
web - drop retoring previous folder
Comment out SBOM tasks
Add conditions to the SBOM tasks
ci: fix server package folders
history - support navigation history stops (#27112)
improve logic around auth server
Engineering - update pipeline (#142326)
Respect searchScope column in multicursor selectAll
history - first cut notebooks support (#101779)
history - add commands to navigate edit locations (#42617)
history - track editor moves
fix typo (#142281)
move accept/discard btns into refactor panel, https://github.com/microsoft/vscode/issues/141065
some more API doc, https://github.com/microsoft/vscode/issues/129037
history - :lipstick:
support double click gesture on inlay hints, API polish, https://github.com/microsoft/vscode/issues/16221
history - implement flattening after removals
history - drop history entries for removed groups
history - add first test for editor group awareness
Reveal last selection on notebook editor cursor change
history - more tests for navigation stack
history - extract reusable methods into helper
history - simplify for side by side editor
smoke - bring back keybindings test
move Auth types to a better location
:lipstick:
fix #142239.
testing: fix output automatically collapsing during run
ensure interface in extHost doesn't have any functions
add an auth test
align terminal link commands with internal link types (#142216)
fix #141314
fix #138322.
zsh hide welcome
Support linux/mac pwsh hide welcome
Remove bold after shell integration welcome msg
testing: reduce /api imports
Enhance logging of open editor queries ref #140198
Revert most changes in #142211
Hide welcome message in bash
Update build gulp file
Change "here" links to be more descriptive (#142106)
Adapt cell ranges for #141687
Related to #140731
debug: fix action bar input being hidden
re-skip notebook integration tests for web
Improve additional args handling in win pwsh
Huge telemetry reduction üéâ
Hide the welcome message on pwsh
Clean up indentation style
Shell integration hide welcome setting progress
Move Settings editor colours into own registry file (#142049)
Improve shell integration welcome hover
files - add a `FileOperation.WRITE` (#142020)
Make the shell integration welcome message a link
smoke - retry fetch to update service (fix #142188)
`a is the proper escape char for BELL
first doesn't need new line second does
shorter
this is shorter
don't update cwd if not in a filesystem path
Remove direct operator for settings-tree-container (#142128)
fix exception being thrown
Store generated connection tokens
Call out restart vscode in auto replies setting
Set fallback dimensions for xterm.js if the view isn't visible
remove extra new line
Consolidate link caching, remove old unused providers
fix psreadline not working with shell integration
better fix for https://github.com/microsoft/vscode/issues/142204
code web script fix
fix https://github.com/microsoft/vscode/issues/142204
Simplify uri transformer creation
make sure unicode stream emits files again
Add setting for git commands to be logged in the git output
Move server telemetry service code to `platform/telemetry` (fyi @lramos15)
Rename `nullMode.ts` to `nullTokenize.ts`
`modeService` -> `languageService`
Renames
code web script refine playground handling
Change cookie SameSite to Lax to have it sent with navigations / redirects
history - extract a reusable navigation stack
Update Lua Grammar (#142107)
Update code-web.js
extract Listener and Stacktrace as types in the emitter land
tweak disposables order...
better logging when extension host is being profiled
Update vscode-proxy-agent (#136874)
fix issue which causes extension host to be profiled forever
Update distro
fix precommit hook, fyi @joaomoreno
Remove duplicate imports
Adopt `ILanguageFeatureDebounceService` (#140557)
:lipstick:
:lipstick:
code-web: fix handling of `--playground`
seti: default file icons not shown
remove tangle between extHost.protocol and extHostTunnelService, fyi @roblourens
race providers against cancellation so that cancelled requests dont reply with a full result but with a cancellation error. fyi @hediet added external error handling to inline completions
history - rename methods to reflect intent
Support history navigation for split editors (fix #133166)
fix: Hovering fixed positioned hover widget will hide them
history - some more :lipstick:
finalize terminal disablePersistence API (#141898)
add splitCwd smoke test for linux/mac (NaiveCwdDetection) (#141974)
Make sure we pass along windows style paths to pluginProbeLocations
fix #141687.
re #141921. -workbench/api in notebookService.
re #141921. -workbench/api in editorStatusBar.
re #141921. -workbench/api in commentService.
Allow bare math blocks with nested begin/ends
Allow bare multiline math equations
Remove now unused telemetry on math rendering
improve result of link search for directories (#142119)
Show multi-line paste warning for selection paste
Remove id from thrown exception
enable migration parts
Add space
Add actual IWorkspaceFolder to terminal instance
Update 4.18.0-beta.2
Move js/ts language configs to json file
Mark readonly
Bump version
Transfer webview resource buffers (#139145)
Modify click-here link on type init fail msg
Use --browserType as fallback in code-web
Strip `webEndpointUrlTemplate` from `reh-web` builds
Split up the two web content patchers
Remove no longer necessary `webEndpointUrl`
Pass renderer locale to exthost, fixes #85675 (#141095)
Don't try tacking on a tsconfig.json if the file already has a json ext
üíÑ
Improve grammar and fix typos in a notebook api
Remove .only
Update yarn lock
Resolve correct link path for tsconfig.extends (#141062)
when disposing an emitter make sure that listeners (that theoretically shouldn't be there anymore) are unset so that they don't keep the emitter alive
Add MarkdownString.baseUri proposal (#142055)
history - add test for "Go to last edit location"
Use latex as language mode inside markdown math blocks
history - add some tests for `TextEditorPane`
unify eslint filters (#142063)
revert bad change, unclear how that happened...
refactor: build x64 remote modules with same toolchain as binary (#142023)
more cancellation handling on the ext host, https://github.com/microsoft/vscode/issues/140557
untangle part of platform https://github.com/microsoft/vscode/issues/141154
let -> const
polishing
Add stripComments to the vscodeResources
history - improve stack entry merging
Task terminals with a failed `process` task aren't always reused properly (#141939)
history - align closer with previous solution
Move strip comments into own module and write tests
history - properly compare based on reason
history - move text editor dependencies out into text editor pane
Enforce import rule to avoid new imports (#141921)
update @vscode/test-web
fix indentation (#141997)
Improve comments
Address #140970
fix #142046
Remove most SyncDescriptorN forms (#141976)
Remove unneeded TODOs
Put resolved link rate limit protections in place for local links
Reduce duplication
allow creating a terminal in an empty workspace (#141971)
Removing todos, fix multiple extension link providers
Improve safety in ExternalTerminalService tests
Center first selected line when focusing on notebook editor cell
fix missing semicolon
remove no longer needed prebuilds action
smoke - skip test (#142020)
code-web fix --help
code-web forward to @vscode/test-web
Tweaks to preinstall script
:lipstick:
smoke - skip #141054
Add some comments to the preinstall script
bump distro
Add value to TreeDataTransferItem dnd API
Add cancellation token to tree dnd
Add dragMimeTypes to tree dnd
update `.git-blame-ignore` after eslint change, https://github.com/microsoft/vscode/issues/140391
enable `@typescript-eslint/member-delimiter-style`, https://github.com/microsoft/vscode/issues/140391
remote cli: improve error handling over the pipe
smoke - more logging
update todo-tag for https://github.com/microsoft/vscode/issues/141993
make sure to use `.eslintignore` when running `yarn eslint`, this will ensure that cli failure and editor squiggles are always equal
fix https://github.com/microsoft/vscode/issues/141981
dispose cancellation token listeners
fix jsdoc
smoke - more logging
smoke - log workbench config only in CI
Clean up no-op regex string replace
Avoid import from workbench/contrib/debug to api See #141921
Remove import from workbench/contrib/debug/ to workbench/api See #141921
Enable ipynb serializer tests in web integration tests and reenable NotebookSerializer test in non-web
large refactor including new secret storage wrapper and overall code clean up and organization
Bring back cwd word tests
Change click-here link in contributing doc
Remove extra DomEvent type
Use variadic version of IConstructor signature
Try simplifying `GetLeadingNonServiceArgs`
set terminal alignment to top when panel is vertical (#141972)
Ensure parameter hints z-index is lower than suggest
Adjust fallback value in Settings ToC
Move webview shared code to workbench/common instead of workbench-api
Remove vscode type import
Move `coreCommands` out of `/controller/` (#141174)
Move `view.ts` out (#141174)
Move more types to `viewModel.ts`
Reduce `IViewModel` methods
Reduce `IViewModel` surface
Use disposable store and avoid double registering disposable
Clear _editorResolverDisposables when contributions change
Use `dispose(...)` instead of `forEach(x => x.dispose())`
Use ?. in a few more places
Use ?. for calls
Mark a few more properties as readonly
Make markdownStringEqual aware of supportHtml
Local link detector tests
Add simple origin check
TODOs
Filter out links based on count and length
tweak bold regexp (#141968)
bump node-fetch version in smoke tests
Polish fixSettingsLinks match code
Add word detector tests, fix trialing colon case
remove specific TS version for RichNav task
tweak vscode.open command and its test, https://github.com/microsoft/vscode/pull/141944
await toggle dev tools
remove unnecessary or
Tidy up
code web script: improve help
code server scripts: use realpath
remove the last typescript-vscode-sh-plugin references
Defer file in search to local file opener
fix: remove python usage in macos cli wrapper (#138582)
Get hovers working for external links
Avoid circular dependency with external links
Remove unused function
define commands converter interface and untangle extHostCommands and extHostTypeConverter, https://github.com/microsoft/vscode/issues/141922
use version provider indirection to untangle type converter and notebooks/documents, https://github.com/microsoft/vscode/issues/141922
Polish multi-line paste code
test that vscode.open supports string in addition to URI
:lipstick:
smoke - more logging
allow `vscode.open` to be called with a string in additon to an Uri
Extract `EditorTheme` to its own file
Reduce `IViewModel` method count
Renames
Extract `CursorContext` to its own file
Updates monaco.d.ts
add test to assert buggy opener behaviour, https://github.com/microsoft/vscode/issues/140907
fix build
Revert "fix https://github.com/microsoft/vscode/issues/140907"
smoke - add logging for #141054
avoid API types (#141921)
smoke - simplify line number test (#141054)
#141054 check line numbers in settigns file
#141766 change the label to Marketplace Info
:lipstick: workbench history service
Smoketest timeout (fix #141918)
fix #141568
fix #141733 (#141914)
SLC description -> type (#141913)
Allow using language override for more js/ts settings
Mark some JS/TS prefs as language-overridable
Use markdownDescription
Pass in doc instead of doc uri
External link detector progress
Pass language desc around instead of modeid
Pass around language desc object instead of ids
Align name of languageIds with vscode api
Scope JS/TS inlay hints settings per-resource
Use URLSearchParams
Prevent the image preview transparency background from being affected by scaling (#141667)
Update extensionsRegistry.ts (#141752)
Get modifiers working again
Use link detectors in new link commands
Use xterm, not the wrapper
Throw when matching opener does not exist
Update src/vs/workbench/contrib/terminal/browser/links/terminalLinkManager.ts
Update src/vs/workbench/contrib/terminal/browser/links/terminalLinkOpeners.ts
Disallow importing `workbench/api` in `workbench/services` (fixes #141003)
Get the proxy to the extension host via `IExtHostContext` to avoid depending on `extHost.protocol.ts` (#141003)
search: fix newline search quantifiers not being preserved
Update src/vs/workbench/contrib/terminal/browser/links/terminalLinkDetectorAdapter.ts
enable disassemble for remote; fixes #141875
Create uri link detector and url opener
fix failing test
Bring work link provider back temp. to fix tests
fix #141597
fix #141775
Move `extHostCustomers.ts` to `workbench/services` (#141003)
support  'EnableMultiLinePasteWarning' dialog each line length limit
rename 'MultiLinePasteWarning' to 'EnableMultiLinePasteWarning'
update milestone for API nb
update for MultiLinePasteWarning code
update my work milestone
replace `CodeActionProviderRegistry` with service property
replace `DocumentSemanticTokensProviderRegistry` with service property
replace `DocumentRangeSemanticTokensProviderRegistry` with service property
Reduce imports of `workbench/api` (#141003)
replace `EvaluatableExpressionProviderRegistry` with service property
replace `InlineValuesProviderRegistry` with service property
Move extension host `IInitData` to `/workbench/services` (#141003)
replace `LinkedEditingRangeProviderRegistry` with service property
Move `ExtensionActivationReason` to `workbench/services' (#141003)
Move `menusExtensionPoint.ts` to `/workbench/services/` (#141003)
Update grammars
Move `extensionHostWorker.ts` to `/workbench/api/` (#141003)
replace `CompletionProviderRegistry` with service property
Rearrange files to better separate between `workbench/api` and `workbench/services` (#141003)
replace `InlineCompletionsProviderRegistry` with service property
Move `extensionHostProcess.ts` to `/workbench/api/` (#141003)
Use interface instead of implementation for the proxy identifier
Reduce usage of `IIdentifiedSingleEditOperation`
replace `LinkProviderRegistry` with service property
replace `ColorProviderRegistry` with service property
replace `FoldingRangeProviderRegistry` with service property
replace `SelectionRangeRegistry` with service property
fix tests
fix hover tests
Move `unicodeTextModelHighlighter.ts` to `/services/` (#141174)
Move `ILanguageService` to `editor/languages` (#141174)
replace `DocumentHighlightProviderRegistry` with service property
replace `HoverProviderRegistry` with service property
Extract `normalizeIndentation` to `/core/` (#141174)
chore: allow running universal build via rosetta
Remove `/colorPicker/` imports
replace `SignatureHelpProviderRegistry` with service property
Introduce and adopt `HoverParticipantRegistry`
replace `ImplementationProviderRegistry` with service property
Move `colorHoverParticipant.ts` to `/colorPicker/`
Move more interfaces up to `editor/common/` (#141174)
Move `modelLineProjectionData` out of `/viewModel/` (#141174)
Move `viewModel` interfaces out of `/viewModel/` (#141174)
Cleanup deprecated `IEnvironmentService.configuration` property (#141859)
replace `DeclarationProviderRegistry` with service property
replace `TypeDefinitionProviderRegistry` with service property
replace `DefinitionProviderRegistry` with service property
Add more logging for #141734
replace formatting registries for service properties
replace `CodeLensProviderRegistry` with service property
replace `InlayHintsProviderRegistry` with service property
replace `DocumentSymbolProviderRegistry` with service property
web - move exports into main file
:lipstick: test scripts (#141791)
Increased opacity in overload counter tooltip (#141828)
Implement multiLinePasteWarning in VSCode terminalÔºåfix the #122683
Trim characters off match instead to get key, fixes #141614
Add outside folder link opener
Hook up local file/folder openers properly
Create local link detector and local file opener
Feedback
Update src/vs/workbench/contrib/terminal/browser/links/links.ts
Update src/vs/workbench/contrib/terminal/browser/links/links.ts
Restart the local extension host automatically after a crash
Revert "support file llink"
Remove old word link provider
Create a search link opener
Introduce new terminal link detector concept
onboard rename to language feature service
move `ReferenceProviderRegistry` into new `ILanguageFeaturesService` service
Bump distro
Revert "fix #141686"
Check that the /build/ folder compiles and all `.js` is checked in (#141653)
tweak existing test to its title
dont use atob and btoa util
#141054 enable the tests and keep debugging
change the format of CellUri#generate and #parse
Revert
Temporary window shift
Disable windows adjustment for active indicator (Refs #140647)
fix #141686
üíÑ re #141582
Clean up unused method, re #139541
Avoid lookbehind in regexp
type -> interface
readonly
fixes #141471
Revert "create process in an empty workspace when cwd is userHome (#141660)"
Use fully qualified names in @link
testing: fix inline decoration overlap
refs #137633
tweak setting language
Update Codicons: Add modes and menu bar https://github.com/microsoft/vscode-codicons/commit/ee85be16f3ace94610210785b6f21cf6d592abdd
Update typescript-eslint/experimental-utils
debug: bump js-debug
Improve auto replies config more
Support null in auto replies setting
tty for ./scipts/code-server
--help should read better
Update shell integration config description
create process in an empty workspace when cwd is userHome (#141660)
Update src/vs/workbench/contrib/terminal/browser/terminalInstance.ts
Allow richer commands in get started entries
await open editor
fix #141633
fix typos
Update description (microsoft/vscode-remote-release#6184)
Update scripts to point to `tsc` one folder up
Better align simple options with `<input>`s
Use `display:none` when overview ruler is turned off
fix typo
server: port range is end inclusive, improve validation
Reduce duplication
Inconsistent single quotes use in --help (same for code --help)
Ensure quick pick is closed on view output
Reveal panel/editor when running a recent command/dir
Match z-index on parameter hints to the hover
Remove terminalLocation from api proposal list
fix #141299
Revert "always set aria-selected, even for listbox"
fix #141643
add a surround with snippet command, https://github.com/microsoft/vscode/issues/86397
cache resourceUrlTemplate Uri
- Check if URL is pointing to the right service - Set selective request and response headers - Update the scheme on the client
show error when inlay hints command fails, annotate error with source (e.g extension name), fixes https://github.com/microsoft/vscode/issues/141588
Startup dialog goes through the request service (#141592)
Remove stale comment #140878 is fixed
add customize layout icons refs #137633
Adding video tutorials to get started
Instrument watermark opening
fixes #141552
fixes #141432
refs #141426
Close #141555
Add link to sort description
unused import
fixes #141404
fixes #141398
Close #141465
update layout state prefix fixes #141372 #141376 #141374
Bumping eslint versions (#141121)
fix Terminal: Cannot refresh property when process is undefined #141288
fix #141294
feedback
compositePart should use createActionViewItem helper fixes #141399
Cell fold hint fixes Hide when in edit mode, simplify top calculation, fix height calc when in edit mode
Change notebook markdown fold hint to a CellPart
update doc
Only show link commands if a terminal has been created
make terminal output readonly (#141601)
Emit event with valid range
update terminalLinkManager's processCwd when cwd changes with shell integration on (#141595)
fix #141515.
Add setting to control repository scan
Improve names and documentation for `TokenizationStateStore`
Extract `ContiguousGrowingArray`
Rearrange methods
Move `tokenizationSupport` inside `TokenizationStateStore` (#140476)
update find unit test.
fix #141370. Update buttons on find match state change.
:lipstick:
fix #141371.
re #141368. disable replace all if the curr match is not model.
fix #141368. Overflow.
Bump node-fetch in /extensions/microsoft-authentication (#141536)
Bump node-fetch from 2.6.1 to 2.6.7 in /extensions/github-authentication (#141537)
fix #141367.
testing: add autosave before each test run
debug: bump js-debug
remove inlay hints config again, fixes https://github.com/microsoft/vscode/issues/140225
better warning when an extension depends on an API proposal that doesn't exist, https://github.com/microsoft/vscode-python/issues/18363
fix #141366. Safari does not respect input::placeholder rules, set line height explicitly.
update doc
Refactors unicode highlight options
formatting and clean up
support login args on linux too
Bump node-fetch from 2.6.1 to 2.6.7 in /extensions/github (#141538)
Avoid a lot of newlines when running from source
Only log server greeting to log file, not again to the console
Improve explanations
Improve comments
Adopt `TestInstantiationService.get`
handle extension resource
Avoid `[createInstance]` warnings in unit tests
:up: distro
Ambiguity in comments for createFileSystemWatcher (fix #141494)
Tweak CES survey assignment
fixes #141421
fixes #141384
Update Codicons: Add layout icons (Refs #137633) https://github.com/microsoft/vscode-codicons/commit/a2e80bf16c134c5d512e707dc8ddfb66c24917e8
remove unused import
fixes #141387
update with runtime key changes fixes  #141389
support case insensitive shell executables, add tests
handle bash login args (#141467)
Get rid of `null!`
Remove no longer necessary rule (#140989)
fully qualify kind
Remove export
Add back  ESM-uncomment
Prevent link highlight in markdown code blocks and spans (#140816)
Don't change target because `webpack` can't handle `es2020`.
Avoid `*` and spell out all allowed node modules to have squiggles when importing `vscode` by accident
Move common imports to `.eslintrc.json`
bold pwsh shell integration text
Run headless on CI
fix #141420
Remove redundant 0 from bold sequence
Install playwright deps
add shell integration message to pwsh, fix #141448
add shell integration message to zsh part of #141448
fix #141435
remove unnecessary async
Document how to unset auto reply, support null explicitly
Use `@playwright/test` instead of `playwright`
Add ellipsis to open detected link
Most recent -> last link
Install playwright using `npx playwright install`
web - use correct untitled workspace object (fix #141411)
web - only simplify `vscode-remote` workspaces (#141411)
Add check that the editor's ESM JS files can be loaded in a browser
fixes #141392
Bump node-fetch from 2.6.1 to 2.6.7 in /build (#141306)
Bump node-fetch from 2.6.2 to 2.6.7 (#141307)
cleanup @vscode/windows-registry
Enable resourceurls (#140709)
Run OSS tool
Resources lost their authority part (fix #141328)
debug: bump js-debug
proposed api for an idToken on AuthenticationSession. ref #140929
Ensure command is trimmed of trailing new lines
fix #141337
Ensure bash preexec is called once per command
fix #141099
Communicate from shell if it's a windows backend
fix telemtry tests
better panel preferred width
add close button to layout options quick pick
Add some basic command detection capability tests
Update marked
Treat / as relative to current folder for loose md files
remove machineidfallback
Adopt `ILanguageFeatureDebounceService` for invoking `DocumentRangeSemanticTokensProviderRegistry` (#140557)
Adopt `ILanguageFeatureDebounceService` for invoking `DocumentSemanticTokensProviderRegistry` (#140557)
[html/css/json] update services
remove cellTemplate from context.
fix bash script when PROMPT_COMMAND isn't set
extract notebook view model interfaces
Extract constants to `network.ts`
Add `cookie` as a dev dependency because it ends up being needed in unit tests
Remove one copy cat, been getting lots of rate limit errors
testing: fixup sortText pr
polish
Add a delay, mitigates #141053
New git welcome missing guide (#140293)
Better useragent cleaning
Update distro
Move connection token validation earlier
Move initial logging to `setupServerServices`
Extract service setup to a separate file
Add user agent cleaning
change tasks as file synchronizer
fixes #138143
Increase unit test timeout 7->15 on all platforms
Increase integration test timeout for all platforms
fixes #139519
fix imports
Only layout breadcrumbs when needed, workaround for https://github.com/microsoft/vscode/issues/139877
allow to pass max-delay to debounce info, defaults to min^2 millis, https://github.com/microsoft/vscode/issues/140557, fyi @alexdima
fix relative import
Tweak sync button style
show message if an extension has no other versions
wsl code: pass SERVERDATAFOLDER
Remove `server.sh` (no need for backwards compat in `reh-web`)
Remove `vs/workbench/workbech.web.api` (no need for backwards compat in `reh-web`)
Reuse `extensionHostProcess` entry point in the server case
Rename `remoteCli` to `server.cli`
Rename `remoteExtensionHostAgent` to `server.main`
Do not force that a connection token CLI argument is present
Replace path.relative with a helper function that factors in case sensitivity but preserve the casing of the resource path
Rename `workbench.web.api.*` to `workbench.web.main.*` (#141263)
remove unused telemetry events
fix https://github.com/microsoft/vscode/issues/139410
fixes #141067
missing terrapin usage
test-web-integration: install test/integration/browser & playwright
fix https://github.com/microsoft/vscode/issues/140907
bump min tree indent to 4
fix https://github.com/microsoft/vscode/issues/140138
Support --#region and --#endregion in SQL (#141257)
Implements #136452 by introducing the flag completeBracketPairs for inline completions.
Abstracts ITextModel to ITokenizerSource.
Lifts getMetadata & getLanguageId to IViewLineTokens.
Renaming & docs update.
use correct cancellation token type, fyi @sandy081
editors - understand untitled with associated resources for `--wait` (#141237)
debt - cleanup context key handling in workbench
tests - fix bad `vscode` import
fixes - do not wait for recommendation prompt - close recommendations view if empty
fix #140029
fix #139134
#139015 more refactorings - use getExtensions for querying by id or name - introduce getExtensions in IExtensionsWorkbenchService
Update milestone on endgame notebooks
#139015 more optimizations
fix sync tests
Cleanup package.json test scripts (#141210)
User-data file watching is broken in shared process (fixes #141176)
welcome - introduce dedicated top level folders (#141138)
Smoke test runner fails or hangs without error (fix #141148)
Hard to compare two files of the same name (fix #141132)
improve shellIntegration handling of arguments, add tests (#141197)
xtermTerminal -> linkManager (#141172)
add doc comments for new quick pick separator API
tangle notebook rendering common.
NOTEBOOK_EDITOR_ID.
Listen to instance capability change in tabs
fixes #140648
Move `languageSelector` out of `/languages/` (#141174)
First test for cmd detection
notebook view events.
Remove dependencies to `/languages/` in `languages.ts` (#141174)
Improve bash shell integration script
finalize quickpick API
Use `CursorColumns` directly
Reduce `/model/` deps in `model.ts` (#141174)
Avoid array ref check when injecting shell args
Pick up new minor TS version
split notebookBrower test.
CellReveal into notebookCellList
testing: additional fixes for last commit
Move `/model/tokens/` to `/tokens/` (#141174)
testing: fix slowness when changes state for large numbers of tests
Extract `IDimension` to `/core/` (#141174)
Move `renderingContext` to `/browser/`
Remove some timestamp code from test
Add start of cmd detection tests
extract notebook contextkeys
Move `overviewZoneManager` to `/viewModel/` (#141174)
Move `wordHelper.ts` and extract `EDITOR_MODEL_DEFAULTS` to `/core/` (#141174)
Move `IEditorConstructionOptions` to `/config/` (#141174)
Partial command detect unit tests, fix event
Move `IDiffComputationResult` to `/diff/` (#141174)
Remove unused keyboard layout fragment
Move `viewEvents` and `viewContext` to `/viewModel/` (#141174)
Ensure args check/warn only for pwsh on Windows
Correct get output by using cmd start and finish markers
Remove unneeded TODO
testing: remember tree state better, don't expand by default
testing: show total to be run when running tests
tangle: notebook folding.
with -> when
Adjust exemption path
Move editor base api to `/services/` (#141174)
Move `EDITOR_MODEL_DEFAULTS` to `textModel.ts`
Move `cursorColumns` to `/core/` (#141174)
Move `wordCharacterClassifier` to `/core/` (#141174)
fix tests
Move `prefixSumComputer.ts` to `/model/` (#141174)
Remove `/view/` dependency in `textModel.ts` (#141174)
move folding model into core.
Rename `editor/common/controller` to `editor/common/cursor` (#141174)
Move `token.ts` to `/languages/` (#141174)
Move `ISingleEditOperation` to `/core/` (#141174)
Remove `editor/browser/core` (#141174)
Move `editorState` to `/contrib/` (#141174)
Extract `StableEditorScrollState` to a separate file (#141174)
Move `markdownRenderer` to `/contrib/` (#141174)
fixes #140048
Get cwd word link tests passing
remove unused import
fixes #138653
Move change interfaces to `diffComputer` (#141174)
Move `editorColorRegistry` to `/core/` (#141174)
fixes #138350
fix #138128
Remove unused event
Pass word link tests
Move TerminalCapability into workbench
Register partial command detection capability in tracker test
upade distro
check type. fixes https://github.com/microsoft/vscode-internalbacklog/issues/2581
Debug log when capabilities change
Bump @vscode/windows-registry to 1.0.5 in remote (#140599)
Active partial command detection capability
use actual backend OS when resolving shell integration args
rename includePreRelease flag to preRelease for extensionInfo
tweak panel alignment command text based on feedback
move css file to media folder
test resolver: prefer connection-token over connection-token-file
always set connection-token
:lipstick:
debt - move `watermar.css` into `media` folder
server-cli: typo in compatibility message
fix paths
initial-telemetry-level -> telemetry-level
Move tunnel service to its own folder (#141154)
Tidy up shell integration addon
add missing semicolon
Test sequences get passed along to capabilities
Complete implementation of `--without-connection-token` (closes #136615)
use adaptive `IFeatureDebounceInformation` for folding, https://github.com/microsoft/vscode/issues/140557
Move virtual workspace functions to `platform/workspace` (#141154)
show localhost again in Web UI available message
SCMActionButton overflow improvements
Add initial telemetry server arg
Move `ExtensionKind` to `platform/environment` (#141154)
test terminal getLinks and open recent commands (#141119)
add test for link with relative cwd (#141101)
Use correct scroll settings on terminal init
Move contribution interface to `/extensions/` (#141154)
only call yarn gulp node when needed
fix typo
Play folded area sound only for folded areas.
Updates sound files by louder ones.
move remote and web tests to scripts folder
web - clean up web environment service
debt - introduce browser environment service with access to workbench options
web - lift some `browser` specific things to `browser` layer
Revert "Replace path.relative with a helper function that factors in case sensitivity"
web - cleanup factory
Refuse launching unless a connection token is provided
Comment detail should be timestamp Part of #139524
web - separate factory from API
adopt --server-data-dir
update distro
web - move some interfaces to their sources
document that async-dipose functions aren't awaited, https://github.com/microsoft/vscode/issues/140697
Add explicit layers for editor contributions (fixes #140995)
web - update layer rules
web - API :lipstick:
web - remove `workbench.web.main`
#91286 :lisptick:
no remote indicator for code server web
web - introduce `web.api.ts`
api - clarify path casing for file watchers
Update name description (vscode-remote-release#6143)
smoke - properly skip tests (#141054)
creating pr's section
When keytar fails to be used, use an in-memory credential store (#141120)
smoke - skip flaky one (#141054)
Delete build-chat.yml
Make sure we convert webview view columns if needed
testing: only reveal testing view for ui-triggered runs
add layout modes
hide menu option when using mac native
upper l
:lipstick:
partially revert 8000dc92.
simpler typings in NotebooKernelActionViewItem
IOutputRenderer.
no view ref in notebookBrowser
add customize layout quick pick
#91286 handle too many requests on the client
#91286 use throttled delayer for auto sync
correct the link scanning order
Reintroduce telemetry proposal
refactor credentialsmainservice and ensure the right one is used (#141100)
warn for custom shell args that shell integration won't be enabled (#141028)
Move capabilities back to common, fixing layering problems
fixes #141097
tweak wording
add notification
smoketests: use new extractSync option
Revert "no remote indicator for code server web" to fix web smoke tests which depend on the presence of a `status.host` dom element
Enable proposed api in vscode api tests
disable panel maximization with non-centered panel alignment
More granular telemetry API (#141086)
polish names
Temporary fix for remote integration tests
no remote indicator for code server web
missing rename code-server-web -> code-server
code-server dev script: fix open with connection token
update @vscode/test-web
Move getCwdForLine into CommandDetectionCapability
toggle the panels if view is already focused fixes #140760
Pull out old cwds
Move cwds into CwdDetectionCapability
Get multi-line pwsh command lines working
Move server code to `vs/server/node`
Add tests for `parseConnectionToken`
Build prompt progressively with comments
Partial refactor of capabilities
make sure random port is free; fixes #141071
Bump distro
Extract `parseConnectionToken` to a separate file
Avoid layer breaker import (#140856)
tests - adopt new URL syntax when web is connected to a remote
Remove leftover `console.log` statements (@lramos15)
api - clarify how deletions are tracked on watched paths
Please do not mess with my clipboard (fix #140397)
web - shorter URIs when connected to remote
For parts with location and command: give link gesture to location and append command to context menu, add more jsdoc for API, remove dead code, https://github.com/microsoft/vscode/issues/16221#issuecomment-264527520
:lipstick:
debt - fix bad import
Remove no longer needed exceptions (#140993)
smoke - log fatal errors
:up: playwright@1.18.0
fix #141060
Web: change `yarn web` to run with our server instead of playground (#139725)
move API tests (#140993) (#141056)
make window of sliding average smaller, https://github.com/microsoft/vscode/issues/140557
while typing use fixed and conversative update delay for inlay hints, https://github.com/microsoft/vscode/issues/133730
add trace logging for language feature debounce rates, https://github.com/microsoft/vscode/issues/140557
remove not used telemetry event
#138128 move pre-release icon to first
accessibility issues to Isidor
Replace path.relative with a helper function that factors in case sensitivity
layers - clean up top level workbench test folder
Add rules for server entry points
Consider moving ILaunchMainService.getRemoteDiagnostics to IDiagnosticsService (fix #141025)
cache inlay hints before switching files, https://github.com/microsoft/vscode/issues/16221#issuecomment-264527520
share inlay hints cache between editors, https://github.com/microsoft/vscode/issues/16221#issuecomment-264527520
web - show "Open Folder" in file menu too (fix #135561)
fix path to telemetry extractor @lramos15
Move code action contributions into browser
Update interactive window doc.
Revert #138222 (#141032)
Revert "Bump TS version for building VS Code"
add open recent web or file link commands (#141030)
Bump TS version for building VS Code
Implement opening for markdown custom editor
Move toc expanding for notebooks logic into toc
Simplify toc structure
Enable header completions for rest of notebook markdown cells
ref stable rther than main
Start of shell integration tests
Use markdown renderer for text/latex (#139154)
Move to @vscode/extension-telemetry
inherit split cwd for all cases (#141020)
fix #140504.
Enable path completions in notebook markdown cells
fix #140992.
fix #141005.
fix unused import
vscode-telemetry-extractor -> @vscode/telemetry-extractor
smoke - :up: timeouts
tests - disable Firefox on macOS again
cap link size (#140936)
support syncing tasks
value
less strict
skip flaky test (#141001)
tests: log progress as stable code downloads
adopt server script in integration tests
glob - handle path casing according to our platform rules (#140994)
fix layering. fixes #140983
update distro
server distro: Web UI message to use the specified host name
Layer breaker in ipc.net.test.ts (fix #140982)
server distro: host defaults to localhost.
server-distro help: fix application name
Move timeout to correct spot
Retry TerminalCommandTracker tests
use `Dto<T>` util in more places, some clean-up/alignment of caching logic
support label part tooltip in addition to item tooltip, https://github.com/microsoft/vscode/issues/16221#issuecomment-264527520
More tree dnd feedback
Unable to drop dirty untitled editor to target window if untitled exists (fix #140898)
publish node modules (#140966)
Update latex language grammar and configuration (#140801)
make sure to cancel inlay hint request when model is disposed
Revert enforcing argument dto'ing because it seems buggy with the compiler
make Proxied-type also enforce dto'ed arguments
incorporate API feedback, https://github.com/microsoft/vscode/issues/16221
update integration test docs how to compile
Revert
temporarily extend triage window
add more allow labels
Avoid not null assertion and use joinPath
Use more specific return type in provider
Remove extra assertions
remove toggle panel alignment setting
Use a div for the before and after on truncated output
fix #140942
fix #140939
#114640 change machine name format
Handle Mac file system as case insensitive when comparing paths in the git extension. #138090
Restrict vscode-file requests to main window (#139140)
Re-render terminal tabs when visibility changes
Polish shell integration setting wording
Enable shell integation after reconnect
Don't enable shell integration on feature terminals
NotebookExecutionStateService - createCellExecution returns an execution object. For #125668
Add `/~` as a layer template, adopt it, simplify and align code import rules (#140857)
For each target, allow importing itself
:liptsick:
have one Dto-type, drop functions, move into proxyIdentifier-file
make sure that proxied functions return dto'ed types
fix tests
wrap just path with quotes #140784
fix outline tests and api command test
fix compilo
do not throw compatibility error if installing a specific version
fix #140784
- Use IExtensionsWorkbenchService to install extension - Clean up
add more jsdoc and api todos, https://github.com/microsoft/vscode/issues/16221#issuecomment-264527520
make trace provider logging more minification friendly
remove unnecessary return
check for seen versions
clean up
drop outline model from cache when text model has been disposed, https://github.com/microsoft/vscode/issues/140661
don't clone outline model and simply share marker data, https://github.com/microsoft/vscode/issues/140661
add logging
fix default installed extensions view sizing
make token to race against mandatory optional, https://github.com/microsoft/vscode/issues/140557
on ext-host race selection ranges, workspace symbols, and document symbols against cancellation, https://github.com/microsoft/vscode/issues/140557
on the ext-host, race call and type hierarchy against cancellation so save bandwidth, https://github.com/microsoft/vscode/issues/140557
In the ext-host, race goto-symbol features against cancellation, https://github.com/microsoft/vscode/issues/140557
Add statusLimit telemetry
more bump
bump timeout
debt - simplify `EditorProgressIndicator`
move offline indicator
ensure snippet prefixes have overlap with word end (if available), https://github.com/microsoft/vscode/issues/140039
fold `createExtHostContextProxyIdentifier` and `createMainContextProxyIdentifier` into one, fyi @alexdima
remove unused code, remove duplicated code `isPromise` vs `isThenable` fyi @roblourens
progress - make scoped progress more generic
Typos (thanks gjsjohnmurray!) ref #6328
Add alternative explorer sort order: foldersNestsFiles ref #6328
Skip flaky 'link detector' test, see #140878
Restore animations when not paused in notebook cell. Restoring behavior that was there previously
remove confusing word
Hide the new notebook animations when debugging
Add affectsNotebook. affectsCell should take URI
Add optional languageId to window.createOutputChannel API (#19561)
Avoid leading `**`
#139015 set hasReleseVersion to true - avoids additional request to check if extension has release version - improve error handling when release version is not found
#139015 refactor gallery service - unify apis in IExtensionGalleryService
#139015 refactor gallery service - unify querying capability - get all compatible installed extensions for update in a single query request
Only play error cue for error markers.
Iterates on sound cues. Implements support for error/folded area cues.
Bump follow-redirects in /extensions/github-authentication (#140797)
Let `IRPCProtocol#getProxy` return `Proxied<T>` which enforces functions returning promises
Ensure all files are covered by `code-import-patterns` (fixes #140857)
Improve inline completion API docs.
Move `defaultWorkerFactory.ts` to `/browser/` (#140857)
`TestInstantiationService#get` should also be able to create instances, fyi @sandy081 @alexdima
fix build
fix statusbar style override priorities
web: offline ux
set fading transition for status bar background
statusbar: generalize style overrides
:lipstick:
fix tree shaking
Add rules for some missing folders (#140857)
window - revisit `ReadyState` (#140762) (#140846)
Cleanup `GlobPattern` handling in extension host (#140689)
Remove unused event
use `ILanguageFeatureDebounceService` for outline model, https://github.com/microsoft/vscode/issues/140557
update distro
Bump follow-redirects from 1.14.5 to 1.14.7 in /build (#140600)
add mixin --server
Better wrnings
First pass at file nesting ref #6328
Tweak git commands visiblity in the command palette
Disable Git Rename command if the resource is not under source control
chore: bump distro
tests - try to fix macOS GH CI
tabs - do not use `box-shadow` for hover border
smoke - log code download (#140769)
`window.withProgress: using location: { viewId: ..}` shows invalid progress (fix #140576)
:up: `playwright@1.18` (#140767)
support links w relative cwd (#140676)
Update PHP grammar
fix visible side bar with empty workbench
Enable completions in markdown defintions
allow overridding of client id and tenant for microsoft auth
Rendered Markdown
add maximized class to workbench
support file llink
fix vscode notebook links
remove panel location options in favor of new side panel behavior (#140742)
Unskip test, fix #140201 already skipped in browser
Unskip test, fix #140200 already skipped in browser
Clairify that font size is in pixels
a small layout control menu
Update interactive window setting id #130713
Disable telemetry when in extension testing enviornment
fix find widget focus
fix inlay hints flicker, make sure to not proceed with a cancelled result
Skip smoke test
Only allow shell integration in trusted workspaces
Re-enable auto replies tests with retries on Windows only
Move off deprecated getOption API in xtermTerminal.test
Skipped webview test
Bump distro
git - adopt new out of workspace watching support (#140691) (#140695)
Update SCMActiveResourceContextKeyController to handle remote scenarios
add trace logging for inlay hint adapter, ignore out of range hint silently
don't watch the same provider multiple times, this time for real...
fix https://github.com/microsoft/vscode/issues/140589
workaround `GlobPattern#from` issue, fyi @bpasero
always keep pinned items in hover, https://github.com/microsoft/vscode/issues/140241
do away with dynamic default value, https://github.com/microsoft/vscode/issues/140557
ipc api: MessagePort.start() needs to be called, so events start flowing
smoke - reduce log spam
update distro
:lipstick:
glob - document exactly syntax of patterns
update distro
tabs - adjust z-index to fix border top colors (#140685)
watcher - implement and adopt universal file watcher
debt - rename `iconv-lite-umd` package (#140650)
debug: add additional context to stack frame actions
Cache initial telemetry events to avoid wrong value assumption (#140651)
fix #139595
Bump markdown-it from 12.0.4 to 12.3.2 in /extensions/extension-editing (#140597)
Bump markdown-it in /extensions/markdown-language-features (#140598)
fix #140255
disable find in md source when find in preview enabled
Update Codicons: Update layout icon https://github.com/microsoft/vscode-codicons/commit/31c5a78462ca559f3d6eb6ac88e71f8e1fc73152
remove side panel setting
Add todo
update distro
Basic multi-line command support
Bump distro
Support pwsh shell integration on mac/linux
fixes #138991
up timeout to give time to build
Add TODOs to fill in capability implementations
Polish terms
Allow filter cell input
add filters
Remove unused events
bump keytar (#140654)
try swap panel view locations command
Add jsdoc to capabilities module
Use InstanceType<typeof> instead of explicit interfaces
Create capability implementation objects
Add logging to troubleshoot remote integration tests hangs (#140572)
add go to running cell to Interactive Window
More tree dnd renameing
Add tests for TerminalCapabilityStore
update distro
capabilities2 -> capabilities
Remove ProcessCapability
Simplify reveal logic
Increase timeout (for cases when the yarn cache is not hit)
Remove from Utility catagory
Emergency break endless recursion
"Save workspace as..." should put current workspace name as file name (fix #140626)
Update to `native-keymap@3.1.0` (#139291)
API: Allow to use the file watcher for aribitrary folders (#3025) (#139881)
move `LanguageFeatureRequestDelays` into `ILanguageFeatureDebounceService`, have better defaults, and adopt for code lens and inlay hints, https://github.com/microsoft/vscode/issues/140557
Move tunnel features (#140620)
Rename method
Add timestamps to comments proposal (#139849) Part of #139524
update distro
Remove bad `matchMedia` polyfill
Use generators
Support insert and replace completion styles for paths in markdown
Skip path completion tests for now
Adding basic support for reference link completions
tweak control layout order
add show menu bar to layout control
remove editor area from appearance menu
fix issue with control layout zoom level
Add basic markdown link completions
upgrade panel actions in control layout
bring in more actions
include editor layout actions in layout control
pass wholeWord/matchCase to webview
disable regex if find in md/output is enabled.
exthost: fix params not being passed correctly and debug title not being set
tidy scripts
open editors: sort by fullPath (#133790)
update distro after merge
exthost: define console methods as non-writable to avoid telemetry issues
testing: update welcome view text from feedback
testing: auto open testing view with option
testing: add cancelltion token to refresh action in createTestController
update distro
Attempt to fix unit tests
Use a better method to detect zooming that works in all browser
Eliminate `zoomLevel` from `FontInfo` because it is already reflected in `pixelRatio`.
#140088 - fix migrating storage twice
delegate encryption and credentials to server if we have a remote
add shell integration setting (#140436)
more regex
Add default override indicator (#140312)
fix #140430
enable find in md/output.
clear selections after find in webview.
exthost: allow aliasing required modules for back compat
#140088 - extension storage migration support while migrating to pre-releases
update distro to reflect new merge commit
update distro
refactor credentials service to main
make stopDebugging use disconnect for "attach" sessions; fixes #140560
use real cancellation token for format on type
format on type shouldn't listen to all config changes
Some more progress, fixing tests
use "sliding window" average for language feature delays, https://github.com/microsoft/vscode/issues/140557
Smoke Test: forcefully kill electron if exit doesn't work (#140570)
:lipstick: https://github.com/microsoft/vscode/issues/16221#issuecomment-264527520
Increase integration test timeouts
fix https://github.com/microsoft/vscode/issues/140565
Skip notebooks smoke test suite
allow to race against cancellation when invoking `_withAdapter`, never log cancellation errors, https://github.com/microsoft/vscode/issues/140557
smoke - further reduce log spam
Revert "Add timestamps to comments proposal (#139849)"
Tree dnd proposal renames
server cli fix app name
add raceCancellationError-util, tweak raceCancellation-util as well, https://github.com/microsoft/vscode/issues/140557
always set aria-selected, even for listbox
server cli: remove --exec, show warning when in compatibility mode
Add timestamps to comments proposal (#139849)
rename `isPromiseCanceledError` to `isCancellationError`, nudge folks towards `CancellationError` instead of canceled-function
server - even less server requirements for callback route
files - add more tests and fix `promisify` issue with `fs.read` and `fs.write`
:lipstick: simpliy typings around adapter logic
web: use mixin for additional product configuration
fix NPE
:lipstick:
Revert "Refactors injected text cursor stops. borderAffinity can be used to resolve conflicts when clicking between two adjacent injected texts."
make sure inlay hints are within range asked for, https://github.com/microsoft/vscode/issues/16221
api comments and todos, https://github.com/microsoft/vscode/issues/16221#issuecomment-264527520
Refactors injected text cursor stops. borderAffinity can be used to resolve conflicts when clicking between two adjacent injected texts.
server cli: polish message when using multiple connection-token arguments
editors - fix typo (#140320)
:lipstick:
nb find markup and cell output filter
Don't throw for invalid line numbers from a debug adapter, fix #140502
fix build
testing: persist collapse state more correctly
adopt css highlight api
remove unused import
Adopt @vscode/ripgrep
fix test resolver
#140088 fix tests
#140088 - migrate extension storage support - introduce migration list api in IExtensionStorageService - Use the list to migrate storage from main thread storage
Introduce terminal capability store
Revert "Remove platform check for search focus"
update distro
Always add dirname of current md document to localResourceRoots
Remove platform check for search focus
server distro: use 127.0.0.1 as default
server distro: cleaner package.json
fixes #139631
update distro
Remove split json resource counters
cleanup imports
consolidate stylings and fix color when item is active and focused
update distro
xterm@4.17.0-beta.7
use whitespace injected text instead of padding, fixes https://github.com/microsoft/vscode/issues/135955
Improve test checking for `createDecorator` or `refineServiceDecorator`
Swallow exception when resizing closed terminal on windows
validate inlay hint positions, fixes failing test
server bin cleanup
audio cues: webm -> opus
Improves sound error reporting.
#140088 - support migrating storage for additional builtin extensions in web
Enables to disable cursor stops between two injected texts.
don't send full ExtensionDescription when using message API
when not at a word, than try to bind an item to the next token range, https://github.com/microsoft/vscode/issues/133730
Use 0700 for creating directories
Set `VSCODE_INJECT_NODE_MODULE_LOOKUP_PATH` only when running out of source
remove console.log
progress - do not send entire `IExtensionDescription` around
Fetch native headers during preinstall phase.
watcher - throttle events at their source to also prevent IPC spam
tests - increase timeout for sequential test runs
tweak inlay hints logging
update distro
Remove delimiter rule since it causes lots of build failures
tests - add `--sequential` option and use in CI runs
server cli: add '--without-connection-token'. For #137658
server cli: refine start-server. For #137658
Renames
SymbolNavigationAction must validate its assumed argument, https://github.com/microsoft/vscode/issues/140483
Switch to using aka.ms links
drop and warn when inlay hint has empty label, https://github.com/microsoft/vscode/issues/16221
use `collapseOnReplaceEdit` for inlay hint decorations so that they are removed swiftly when lines/words are deleted, https://github.com/microsoft/vscode/issues/133730
Notify user when max folds exceeded, make max folds configurable.
smoke - reduce log spam
Enable passing TSServer plugins to TSServer on web
Remove extra newline for TS Server log on web
improved panel and side panel tab active indicator
Make cell gutter line interactive and clickable to collapse cell parts For #132690
testing: preserve expand state
disable markup dnd on search
check selection count
Pull in new TS version for building VS Code
testing: allow canceling test refresh
debug: fix broken trees in debug hover
Use node ipc for communication with TS Server (#135341)
Revert service worker usage of MessageChannel (#140351)
Use consistent git status limit
Add proper error message on getUserInfo (#140277)
add zsh/bash shell integration script
test resolver: create remoteDataDir
Prevent terminal find from triggering twice via enter
test resolver: adopt connection-token, polish
test resolver: adopt connection-token
correctly cancel requests when typing triggers more, https://github.com/microsoft/vscode/issues/133730
watcher - put recursive watching behind workbench file service
watcher - some cleanup
Use scmActiveResourceHasChanges in the when clause to show/hide command in the editor title
Revert "SCM - Introduce another open changes command got editor/command palette (#138293)"
add semi-colon, https://github.com/microsoft/vscode/issues/140391
fix merge issue
perform go to def as inlay hint link command, show (filtered) context menu on right click, https://github.com/microsoft/vscode/issues/129528
make sure InlayHintItem#resolve isn't affected by cancellation and happens only once, https://github.com/microsoft/vscode/issues/129528
dispose inlay hints when after retrival things are cancelled, https://github.com/microsoft/vscode/issues/129528
properly propagte cancellation, https://github.com/microsoft/vscode/issues/129528
don't show editor context menu on injected text, fyi @alexdima, @hediet
make sure dynamic css rules are scoped to instance fyi @hediet
update distro
:lipstick:
tests - enable firefox testing again with debugging
callbacks - adopt a client only solution (#140328) (#140329)
Includes *.webm files in vscode resources so that audio files are included in the installer.
test resolver: adopt new server cli: For #137658
cli: declare use-host-proxy as boolean
Allows injected text to customize cursor stops.
fix watermark icons
fix for describe '--start-server`. For #137658.
describe '--start-server`. For #137658.
server cli: deprecate --exec. For #137658
add tests
watcher - partition `ThrottledWorker` per provider
watcher - throttle all events
docs
tests should not write to my clipboard (https://github.com/microsoft/vscode/issues/140397)
- add todo to remove - fix awaiting for migrating storage
server cli: deprecate folder & workspace. For #137658
allow cli args to specify a deprecation message
server cli: exit on invalid port or range
:lipstick:
inlay - correctly apply whitespaceBefore
üíÑ Refactor pull request code
add SCM sort to storage (#123232)
chore: update copyright year (#139988)
Updates sounds.
Renames breakpointHit.webm to breakpoint.webm.
enable hybrid search in code
Make sure markdown refresh forces the preview to be updated
update on settings change
update panel position setting behavior
fixes #140287
smoke - add some logging (#140324)
fix compile errors
:up: distro
fix match update overflow
do not merge input and preview matches in markup cells
fix issue with svg icons refs #132893
polish run recent command quickpick
debug: mark debug memory as deleted when session resumes
debug: open hex editor to side by default
debug: add telemetry for users of the memory viewer
- move migration into a util function - extract extension storage methods to a separate service
update widget ref
Update label
experimental flag
add typings
add typings file back
use @vscode/windows-registry
Refactors to start transition from ProcessCapability to term capability
Report shell integration status in hover
experiment with InlayHintLabelPart and source location as "anchor action", https://github.com/microsoft/vscode/issues/129528
Simplify `ContentHoverController`
fix non-windows command tracking and add output button (#140290)
Add pwsh shell integration script
Ensure word links are at least 1 character in length
Disable all notebook integration tests in web See #126371
Remove unwanted event
Only re-write shell integration enable when reviving the buffer
Use write, not writeln when enabling shell integration
Remove shell integration plumbing between renderer and pty host
polish server cli new args: connection-token-file, file-watcher-polling. For #137658
tests - skip flaky notebook test
Don't pass capabilities to XtermTerminal
Simplify frequency increment
Treat -1 exit codes specially for pwsh
Convert `IMouseTarget` to an OR-type
Prefer Date.now over Date.getTime for simplicity/perf
Get basic Windows shell integration mostly working
Trim optional line endings correctly
improve handling of cwds
more server cli descriptions, and port simplification
Show remote cli connection error: For vscode-remote-release#6136
Bump copy-props from 2.0.4 to 2.0.5 (#140238)
fix webignore patterns for appinsights
minify svgs
Add debug log for tree drag mime types
Use LifecyclePhase.Restored instead of LifecyclePhase.Eventually
set media-src to self for webClientServer
Add command to drop all stashes
update distro
Remove code that was relying on 'ced-colorBox' (follow up from #132537)
Simplifications
Store results in `HoverOperation`
Let `HoverOperation` manage the result
Improvements to `HoverOperation`
Git - add setting to control repository scan depth (#140260)
more inlay hint range tweaks,https://github.com/microsoft/vscode/issues/129528
resolve item only once, https://github.com/microsoft/vscode/issues/129528
update distro
Simplifications
Avoid passing `ContentHoverController` to hover participants
Reduce interactions around color picker
Extract `ContentHoverController`
More cleanup
Remove broken workaround
Minor cleanup
Remove isPaused from internal cell metadata
clear selection at the end of search.
bump find match limit
if not terminal, return
remove eslint override
Remove unused messages
Move sw message registration before call to register
Adding more logging for webview resource loading
Return 401 for unathorized resources
Add field for split editor in default settings
Pull shell integration browser-side logic into an addon
shadow dom support.
fixes #140189 remove debug line
Experiment of js version of hiliteColor
use DAP modules from @vscode org
testing: add refresh action
clean up
use marker instead of listening to onData to track command value
Properly prevent same-page navigation
fix merge issue
merge
fix ago label the right way
add ago
fix errors
use time from common
on restore, restart shell integration
add abstract command tracker
enableWebglRenderer within xtermTerminal
some cleanup, also make sure to cache inlays with most recent range (as updated by the editor), https://github.com/microsoft/vscode/issues/16221
Remember valid absolute executable when resolving profile
Revert "Remember vlaid absolute executable when resolving profile"
Remember vlaid absolute executable when resolving profile
support to resolve inlay hints for hover and for future display parts, https://github.com/microsoft/vscode/issues/129528
Configures i18n for vs/workbench/contrib/audioCues.
Support diff editors.
smart -> auto
Adds test for runAndSubscribeWithStore.
Surface the maximum and minimum values for `editor.hover.delay` (fixes #140215)
add InlayHint#tooltip and wire it up with hover participant, https://github.com/microsoft/vscode/issues/129528
add mechanics for inlay hovering, https://github.com/microsoft/vscode/issues/129528
fix issue that causes inlay hints to get lost when using multiple editors, fyi @bpasero
fix #118617 use term 'remote' when referring to lack of upstream branch (#120467)
watcher - skip excludes when watching file directly
group server cli arguments (For #137658)
tests - skip flakes (#140200, #140201)
tests - `createRandomIPCHandle` is flaky
fix timeline
make time/date less verbose
get it to work
hook it together
Revert "Add field for split editor in default settings"
Add field for split editor in default settings
fix one more
bunch of errors
get CommandCognisant to work
improve terminal link keyboard navigation experience (#140121)
Adopt strike through for markdown
Add support for office-script virtual file system
Stub editor service in terminal test
Adding support for RTL languages for readme markdown preview. (#139644)
Remove SSH as it's part of host
Remove SSH as it's part of authority
Pick up new TS version for building VS Code
refactor: remove duplicate if statement (#140085)
add shell integration addon
debug: fix watcher on debug memory not working
debug: fix view memory action being obstructed by scrollbar
debug: better experience for installing hex editor
debug: rename view memory action
Corrected the regex to detect espaced percent symbol (#139437)
fix find async test.
fix #140128 (#140178)
Notebook find output filter
Don't include `[` and `]` as strings in markdown links
Add context key for editor tab visibility (#139336)
fixes #140175
design mode.
Web: publish web files.txt (#140163)
fixes #140164
only triage open issues...
Play a sound when the cursor enters a line with a breakpoint.
don't accidentially stop asking for completions because snippets happened, https://github.com/microsoft/vscode/issues/139559
:lipstick: use native endsWith, fyi @chrmarti
use extension linter to warn about usage of impossible proposals, https://github.com/microsoft/vscode-internalbacklog/issues/2461
Include root for postDebugTask (#140038)
Enable IPC API for web (#138054)
fix tests (watcher tests have moved)
watcher - more robust root path delete handling
updated error messages
watcher - more tests
use decoration for active inlay hints link, support cusor decoration fyi @hediet, https://github.com/microsoft/vscode/issues/129528
support open to side gesture, https://github.com/microsoft/vscode/issues/129528
Opening edt active when ctrl+tab without editors feels wrong (fix #140102)
Add `explorer.enableUndo` config to warn/allow/disable explorer undo (#140140)
debug: support inline actions on variables, show data inspector inline
update ob pipeline
debug: close memory view automatically when debug session ends
Skip flaky test
Update decoration async.
fix: do not lower the case of extension id migrate storage from previous id to current id
rename test
add flags info to query telemetry
do not show hover if publisher is not verified
apply target filter while querying
support rename in indexedDB fsp
üíÑ Side panel polish
Updating Layout State (#139043)
Move didPause from cell metadata to execution service
fixes #139903
Revert "fixes #139903"
fixes #139903
Use dash separated css class #137549
use ClickLinkGesture for inlay hint links, https://github.com/microsoft/vscode/issues/129528
Skip flaky tests
support to click on linked inlay hints, https://github.com/microsoft/vscode/issues/129528
Include injected text details in mouse click/hover event.
assume LinkedText from inlay hint object and create a decoration for each part/node, prep for https://github.com/microsoft/vscode/issues/129528
localize strings; fixes #139836
Add an undo/redo stop at end of snippet
Remove unnecessary import
Replace RegEx with trim()
:lipstick: main files
Add extra segment for file-name priority Make `folder/*.ext` selector lower priority than `file.ext`.
watcher - only stat root in some cases
smoke - fix `selectTab` to select tab?
adopt latest v8-inspect-profiler, use own utils and just write file, https://github.com/microsoft/vscode/issues/111211
`rewriteAbsolutePaths` should also check for urls, https://github.com/microsoft/vscode/issues/111211
watcher - fix `normalizeRequests` to take case sensitivty into account
Reimplement node.js watcher and add tests (#140073)
Adopt EditorInputCapabilities.Singleton Ref #139837
fix tests
files - use `fs.promises.rename` for `rimraf` to skip `graceful-fs`
Explorer file name validation hardcodes OS (fix #139800) (#139962)
Remove click here links for bot messages (#140066)
Add progress bar for output search.
update doc
Simplify unsupported natives module error message
Remove some "here" links to be more descriptive
Bump vscode-ripgrep in remote/
Correct settings group aria label
add issue URL to proposed API d.ts
add showLanguageModeIcons to schema
move things to electron-sandbox, https://github.com/microsoft/vscode/issues/111211
debt - lift checksum service client to `workbench`
switch to icons from uris for language icons
User data provider should not iterate over raw changes (fix #126660) (#139793)
move `v8-inspect-profiler` to shared process and wrap inside `IV8InspectProfilingService`, https://github.com/microsoft/vscode/issues/111211
:lipstick:
fix merge conflicts
add JSON schema for `extensionEnabledApiProposals`, fyi @aeschli
fix https://github.com/microsoft/vscode/issues/139910
Update ripgrep binaries to include ppc64le and s390x
enable typescript inlay hints for all for feedback
Add option to not pass --no-ignore-parent to rg
debug: support writeMemory requests
fix: :bug: update distro
Don't involve pure modifier keys when resolving if in-chord (#139254)
integration tests - skip flakes
Move getSelectedOrSuggestedKernel to kernel service
debug: open the hex editor when reading memory
highlight/clear/reveal.
substr -> substring in notebooks
prefer-const in notebooks
prefer-const in debug
substr -> substring in debug
debug: remove complex memory caching code for now
smoke - select tab over quick pick (#139944)
debug: initial work on memory support
Notebook doc copyediting
Show editor progress bar when executing cell is scrolled out of view #130611
Rename `modes` to `languages`
Split tokensStore into multiple files
Move `ITextMateService` to `/browser/`
`let` -> `const`
working copy - properly return `false` when `save` fails (#139764)
Improve documentation around `CursorColumns`
languages - move language associations closer to languages registry (#139921)
rename mode => language in many places (#139920)
unit tests - disable firefox on macOS
file watcher - support excludes for non-recursive watching
Delete duplicate declaration
Add "Go to running cell" button For #130611
Reference notebook icon types correctly
Remove runState from cell internalMetadata. Expose execution state data from service. For #125668
curr match restoration.
Dispose kernels in test
testing: don't mark test output as simple widget content
highlightCurrentFindMatchDecoration
Add stopPropagation call
Improve test utils
Remove workaround for #4271 since it no longer repros
Async compute of find widget.
tests: add support for stdout/stderr in the Node extension host
Use configurationService to retrieve values
tests: fix not exiting if tests rejected with undefined
testing: fix not resorting after tests run
mime - remove unused method (`isUnspecific`)
Remove no longer necessary composition case in `deduceInput`
smoke - more logging
Simplify code since `clipboardData` is now available in all browsers
smoke - log electron stdout into log file
explorer - indicate any error when upload/download (#139671)
Add a `GraphemeIterator`
Add a `CodePointIterator`
Improve type checking for `BaseEditorOption`
Renames
Renames
Extract `applyFontInfo` to a separate file
fs - clarify `watch` method
files - make watch options public on file service
Simplify `Configuration`
change `TestConfiguration` to extend `Configuration`
Extract `migrateOptions` to a separate file
Extract `TabFocus` to a separate file
Always use `ResizeObserver` (all browsers support it now)
Extract `FontMeasurements` to a separate file
Move `CommonEditorConfiguration` to `/browser/`
Also refresh ToC when resetting setting
More renames
Renames
Move imports up
Renames
Use `CodeEditorServiceImpl` in tests
Implement onDidChangeCellExecution and getCellExecutionState. Adopt for status bar item controller. #125668
Add test for new execution behavior
Split Execution and ExecutionState services
Improve NotebookExecutionService and cancel executions when closing the notebook, deleting cells, and changing the kernel
Better names
Group together standalone service implementation and registration
Adopt `registerSingleton` for standalone editor services
Always use the same services in all standalone editors
Move static services out of `DynamicStandaloneServices`
Simplify creation of `ITextModelService`
Update vscode extension telemetry modules
Minor renames
Remove `offsetDelta` from tokenization methods
Improve names
smoke - take screenshot when waiting long for window ready
Properly dispose emitter when last listener is removed
Remove `ILanguageService.validateLanguageId`
Reduce usage of `NULL_MODE_ID`
Use `PLAINTEXT_LANGUAGE_ID` instead of 'plaintext'
Remove `dynamicLanguages` from `EditorModesRegistry`
More renames
Renames
history - more use of async
Rename `mode` to `language`
Return `(id,name)` sorted pairs from `ILanguageService`
Use `languageId` to look up extensions
editors - no need for `revealIfOpened` for singletons
"Reopen with text editor" does not work (fix #139835)
Use `languageId` to look up filenames
Tweak enable preview setting descriptions
Clarify that `getLanguageIdForLanguageName` is case insensitive.
Create tokenizers for a language without activating the language
files - use `IPathService` to validate file names
fix(suggest): only show readmore icon in focused item
tests - coverage for #139713 fix
debt - avoid early native host service registration
isWebKit -> isSafari || isWebkitWebView
ripgrep: don't use deprecated flag for PCRE2
watcher - is wrongly using `realPathSync` on Linux (fix #139709)
vscode.open and vscode.openWith fail to convert ViewColumn in some cases (fix #139713)
smoke - skip flaky notebook test (#139672)
fix https://github.com/microsoft/vscode/issues/139580
smoke - improve app lifecycle (#139693)
Add an async `tokenizeToString`
Remove waiting in `colorize`
fix https://github.com/microsoft/vscode/issues/139690
Workaround Safari clipboard.writeText behavior (#139657)
mark current proposal as deprecated, https://github.com/microsoft/vscode/issues/102091
add overall triage-needed query to inbox
support terminal link keyboard navigation (#139620)
Remove lock icon and auto lock timeout
Use alt instead of ctrl/cmd and unlock on release
Increase auto lock timeout
Don't load xterm search addon until it's needed
xterm@4.16.0
Bump distro
Expand range of classifier
Tweak comment
Move service instantiation to `DynamicStandaloneServices` for services which don't need the editor instance.
Introduce and use global storage service in main process (#139632)
Finish adding support for `strikethrough`
tests - only skip watcher suite in CI
tests - skip watcher tests
fix https://github.com/microsoft/vscode/issues/139316
try`first` as default for `suggestSelection`, https://github.com/microsoft/vscode/issues/136864
smoke - drop duplicate compile task for smoke tests (#139582)
Set active group instance index when first instance is added
Update contentWidgets.ts
skip flaky test (#139572)
Cannot execute Save As... in git diff panel when failed to save (fix #139521)
Enable tree drag and drop across trees (#139567)
Add checkout step
Disable pipeline triggers
Change job name
Add OneBranch pipeline
re #139541.
ensure we treat scopes sorted and we only return a single session  since GH only supports a single log in
re #138666
Add cursor pointer style to hover
Apply new xterm pointer style in override style as well
xterm@4.16.0-beta.8
Add update-xterm scripts to vscode repo
check in compilation output from 70489f2c90fbd24ce8411c37a9e46b7b31e96f3e
support theme icons in pinned language status item hovers, https://github.com/microsoft/vscode/issues/129037
use a different value for Separator and make API check more strict
Implements allowedLocales for unicode highlighting.
Do not leak rpc proxies (#139498)
Resolve tree dnd nits
replace msft.com with example.com in docs and some tests, fyi @weinand, https://github.com/microsoft/vscode/issues/139451
use example.com url
fix https://github.com/microsoft/vscode/issues/139371
server - remove now unused cli argument
smoke - improve `runCommand` and disable more tests
Use unique id for extension page webviews
Skip test for now
`FontStyle.Strikethrough` WIP
problems: rm accidental code
Merogge/icon (#139411)
tree: fix tests
Improve textarea rendering when it is visible for IME input (#138704)
tree: fix performance issue when applying many updates to large trees
Increase TerminalCommandTracker timeout to 20s
Further reduce async writes in command tracker test
Remove write loop in terminal command tracker test
fix editor detach/attach bugs (#139388)
xterm@4.16.0-beta.6
Force single click open in terminal tabs list
testing: remember peek view size
smoke - more robust usage of quick input / access (#139367)
fix #13938501
Remove unwanted log
Share code between local and remote terminal backends
skip flaky notebook test (#139324)
Bump distro
remove log
Revert 205ec8c5f2d328a3b85c76de508b9ba5a50462ef because microsoft/monaco-editor#2358 no longer repros in FF on macOS
smoke - skip failing terminal test (#139366)
files - add a method to generate a random path name (#139364)
Adopt `vscode-textmate@6.0.0`
Editors that are Singleton can still be split via drag and drop (fix #139356)
smoke - skip failing terminal test (#139353)
tests - skip failing notebook test (#139350)
smoke - skip failing terminal test (#139349)
testing: adjust default size of output peek
testing: handle linefeeds better in inline messages
on revive of terminals, get fresh environment (#139245)
fix #139297
Have tab test retry 3 times
Re-enable flaky auto replies tests
Retry terminal font tests
smoke - use absolute paths for opening files (#139322)
Pull new emmet-helper, fixes #117648
Add separate hovers for language status indicator (#139318)
Clarify how semantic tokens interact with syntactic tokens (for microsoft/monaco-editor#2831)
use randomBytes for rnd file name generation, https://github.com/microsoft/vscode/issues/139217
smoke - disable flaky notebook tests (#139270)
Add `EditorMouseEvent.relativePos` that can be used safely with internal editor metrics
Use dom renderer for terminal smoke tests
Persist terminals after color/icon change
#139183 enable the test and add a log statement
smoke - remove doubleClick usage
smoke - actually retry quick access usage
Add comment
fix https://github.com/microsoft/vscode/issues/139196
smoke - move editor test into language test
dialogs - add tracing for locks (#139044)
editors - add test for `openEditor` revealing singleton typed editors
:lipstick:
:up: `@parcel/watcher@2.0.5`
Use device flow over PAT when we are running in a server full environment but not in a supported uri (#139255)
Enable no-case-declarations in codebase (#139243)
Handle pointer event, fixes #139250
Remove obsolete comment
fix flicker when first partially visible cell changes height.
Use pointer event for SelectBoxList
Run browser smoke tests first because we can get playwright traces for them
hasCustomMarkdownPreview disables markdown preview buttons in context menus (#139241)
Use async/await in env var tests and improve polling
Format
Add touch event for dropdowns
Adopt the model change events in favour of the group events (#139090)
files - make `localFilesystem` channel reusable
Implements actions to disable highlighting in strings and comments.
Adds option to include strings when highlighting unicode characters (default true).
#126376 remove user configuration file service and use atomic read
files - add logging for resource locks
Document that the VSBuffer backing store might come from the nodejs Buffer pool and thus might not be transferrable (See https://github.com/microsoft/vscode/pull/139145)
tests - do not add file to our workspace
Links to generator script.
Support untitled with associated resource in `vscode.open` (#139194)
files - write queues and atomic read support (#139059)
fix compilation
Basic LaTeX built-in extension (#138395)
move fileUserDataProvider to platform and use it in shared process
files - rename disk based file providers to make intent clear
skip bad test, https://github.com/microsoft/vscode/issues/139183
increase build timeout on windows
add `Event.debouncedListener` as replacement for `debounce`, https://github.com/microsoft/vscode/issues/123487
add triage-needed to personal inbox
try panel icons
Enable find widget in markdown preview custom editors
fix: use viewlet id rather than string
persist iw editor view state.
Re-enable notebook smoke tests (#139127)
Add workflow dispatch option to scraper
Remove extra client check and unused async modifier
Clean up `triage-needed` label on assign
follow up to caching of links pr (#139136)
add check in createTerminal (#139130)
Skip some flaky notebook integration tests - #126371
Remove unused cellBreakpointMargin notebook option
contain content would cut inner elements.
Manage default cell collapse config in NotebookOptions. And don't collapse markup cells
Skip env var collection should respect clearing entries
contain: content for notebook editor toolbar.
cache link results (#139122)
Retry test
Strip meta http-equiv tags from webview content updates
Strip out unsupported http-equiv tags
Do not enable the git extension in restricted mode (#139124)
testing: probable fix for test decoration desync issues
testing: show markdown test messages in markdown preview
testing: debug test failures
testing: update scrollable markdown message on resize
Revert "Don't allow tasks to be started too fast"
fix #134692
Wait for terminal to be ready before changing color
:lipstick:
avoid cursor move forward using a snippet cursor
Also log exception in itSkipOnFail
Add itSkipOnFail util
single AutoInsertRequest message for both autoQuote and autoClose
web - cleanup our playground file (#138731)
hide scminput from language selector
from the worker extension host allow to connect to localhost and 127.0.0.1 via http and ws protocols, https://github.com/microsoft/vscode/issues/138780
chore: bump distro
layers - add `trimStart` and `trimEnd`
Use up the entire alloted time indicated by `IdleDeadline`, while still yielding as often as possible (#138887)
progress - stop animation when a modal dialog is visible (#138396)
editors - fix regressions around finding the right editor group to open and mark terminal as `Singleton` (#138452)
progress - throttle animation after 10s (#138396)
better location for shared process env service
files - configure `pathCaseSensitive: isLinux`
testing: fix comp error
Revert "Revert "testing: better support for multiline output""
smoke - remove `only`
editors - hide progress when editors change (fix #138331)
Revert "testing: better support for multiline output"
Add dev trick to show webgl texture atlas
fix #138104 (#139039)
Some jsdoc
fix generates different html content for the same markdown (#138935)
Clean up terminal creation in smoke tests
Tidy up auto reply feature
Add auto replies test
testing: don't expand tests automatically when running
testing: better support for multiline output
testing: run all tests that match file
testing: clean up new run at cursor logic
testing: cap length of inline message
only show commands when relevant (#139028)
Throttle responses
1 -> TerminalLocation.Panel
Revert "Revert "be sure that terminal target gets set for the instance (#138875)""
Remove redundant localize call, fix spacing
Remove "Extension: " prefix from snippet picker
Add extension info per-group and sort extensions within snippets
Add extension source to every snippt
Pick up TS 4.5.4
Use run and subscribe
canceling duplicated layout requests
Add setCellCollapseDefault for NotebookTextModel
Progress on setting
add ProductIconTheme.getIcon
#126376 use user-data scheme for user data in shared process and use main process fsp
re-enable smoke tests, keep editor fix (#139012)
allow updating notebook editor selections even if it is not focused.
move cell editor options into code cell.
debug: allow deleting used dynamic debug configuration
Revert "Re-enable additional notebook smoke tests"
Revert "be sure that terminal target gets set for the instance (#138875)"
use friend items status bar item for pinned language status
Expose 'tag' and 'deleteTag' in git extension API (#123815)
Revert "check pre-release flag on local extension while syncing - to avoid multiple queries to get compatible extension"
remove bogus build steps, added retries to yarn install in new places
remove bogus build step
#138972 reload local user configuration explicitly
make api proposal names task play better with gulp
fix word-word case, https://github.com/microsoft/vscode/issues/138846
files - nicer error message when file not found
Queued text model resolve from file changes can end up disposing model (fix #138850)
Don't add href="#" to links
Use SerializableObjectWithBuffers instead of spread
:notebook: Event.runAndSubscribe
make cell part layout internal.
unnecessary decoration update on dispose
Re-enable additional notebook smoke tests
Re-enable notebook smoke suite
Switch webview service-worker to use message channel (#138811)
skip failing tests
disablePersistence for editor terminals
simplified md cell renderer.
change drag handle to cell part.
Create terminal auto responder concept
tweak proposed shouldPersist API
allow extension terminals to opt-out of persistence #118726 (#138884)
be sure that terminal target gets set for the instance (#138875)
Update notebook
Revert "Re-enable tests now that runCommandWithValue is more reliable"
Add "current window" command to testresolver. Seems like this is necessary to use the testresolver with normal extension debugging
support file scheme links (#138873)
Wait for host on web as well
Fall back to title if no id specified
Re-enable tests now that runCommandWithValue is more reliable
Wait for quick input to open again after runCommandWithValue
xterm@4.16.0-beta.5
:lipstick:
update doc
Bump distro
Bump ES build to latest version
fix tests
Set `monaco-editor-core` version to `0.0.0`
fix some recent test failures
check pre-release flag on local extension while syncing - to avoid multiple queries to get compatible extension
smoke - add test to verify an editor can be saved
smoke - more obvious tests setup
files - cancel reading when binary is encountered (#132771)
clean up extensions editor code
#138511 use new formatter
files - stop processing binary files if only text accepted (#138805)
fix #138834
Only probe directories during repository discovery
separate title menu update and layout update.
move cell status bar class update into cellpart.
extract cellStatusPart
slim cellRenderer#updateForLayout.
fixes #138110
Pick up TS recovery
Reuse searchParams
update `native-keymap`
updateInternalLayoutNow.
scm: one more fix
improve toFormattedString jdoc (for #138511)
fix broken SCM view
Remove looping of test
Only await a single time in TerminalCommandTracker setup
Add link titles, fixes #135677
revert the fix
move actions and widgets to template creation
refactor extensions editor - contribute theme actions as menu actions - remove async dependency for theme actions in extension editor
adds toFormattedString to use for formatting JSOn from an object (for #138511)
Ensure `forceNewSession` overload gets picked first (#138685)
Revert "Filter out file paths when discovering git repositories"
Filter out file paths when discovering git repositories
Clarify terminal.integrated.confirmIgnoreProcesses setting desc
Add timestamp and execution time to Git log
Only get view line data for needed lines.
from,to -> from,count
üíÑ
html: update constants in typescript mode (for #138677)
Underscore
Minor renames.
improve scm input history storage
update notebooks
disable failing smoketest, https://github.com/microsoft/vscode/issues/138748
smoke - mention playwright trace website
Correct the description of `screencastMode.keyboardShortcutsFormat` setting (#138644) (#138645)
be more strict when suggesting snippets at word ends, https://github.com/microsoft/vscode/issues/138707
improve comments around codicon and icon themes
More adoption of language configuration service.
smoke - bring back stable smoke tests
smoke - always create screenshot on failure on desktop
smoke - reimplement test handlers
smoke - always have a logger
smoke - align killing
smoke - rewrite killing
cleanup automation
Reenable notebook integration tests
Remove timeouts in search smoketest. Improvements came from waiting for search to complete before clicking buttons, clearing previous results before starting the search, and adding a retry around the clicking.
Bump version
Enable expand/collapse cell commands to be called programmatically
Up distro
Add title, fixes #107748
Replace codicon.iconRegistry with Codicon.getAll()
Terminal: Don't use codicon.iconRegistry, use platform/theme/common/iconRegistry
DecorationService: use theme/common/iconRegistry for ThemeIcons
Move away from codicon.iconRegistry. Use theme/common/iconRegistry
add IconContribution.getDefinition
CompletionItemKinds.toIcon & fromString
add SymbolKinds.toIcon
include detected profiles in getProfiles, use configured icon (#138628)
Remove unnecessary listener (the initial reason the listener was added is now covered by `IModeService.onModelModeChanged`)
Change to use correct event
Split `ILanguageService.create` into `createById` and `createByMimeType`
Renames
Symbol reordering.
check if model is dirty
missing parens
Remove `ILanguageService.getModeId`
smoke - more logging
Improves docs in cursorCollection
fix EOL for generated extensionsApiProposals.ts
we check in /build ts output to the repo
fixes #138605
Skip failing tests
Rename some `ILanguageService` methods
Await process exit from remote on terminal kill/kill all commands
Split `isRegisteredMode` into `isRegisteredLanguageId` and `isRegisteredMimeType`
Renames `ModeService` to `LanguageService`
Debt: Rename `IModeService` to `ILanguageService`
smoke - reimplement logging
Remove resolved TODO
[...x] -> x.slice(0)
findMaxBy -> findLastMaxBy
Uses a single array to describe all cursors in CursorCollection to simplify code.
Improves variable naming in findMaxBy.
Improves findMaxBy.
Removes unused minIndex/maxIndex.
Moves out Comparator logic from inline completions to arrays.ts.
smoke - always log with trace
ci - add name of browser to web tests
Playwright: record a trace per failing test, not suite (#138600)
always use extension id from package.json for extension descriptions
:lipstick:
backups - more shutdown tweaks
lifecycle - add tests for shutdown events
#138511 format only while displaying
#138511 format only while displaying
:lipstick:
Update webview service-worker invocation (#138258)
fix unicode
#138511 simplify check if remote has changed and use throttled delayer for triggering local change
Update filter when programmatically changing quick input value (#137857)
update flickering optimization doc.
Webview element fix up when it is beyond boundary.
fast dom node for webview element in nb.
avoid tweaking list view.
initial attempt
Add messages for rejected promises
Update webview bits version for tests
proper fix for #138515
#138511 use json stringify
Allow extensions to be able to make requests to the typescript extension's tsserver via commands  (#138279)
Remove ordering by value and description
Add match-type sorting to filterSettings
Refresh Emmet updateImageSize tests
Also skip notebook test temporarily
Temporarily skip webview tests
try remove timeouts in smoke tests for quickaccess (#138615)
Don't reject status indicator promise
Experiment with using message channel to exchange webview messages
update to windows latest in azure pipelines (#137691)
fix #128406
Remove only
Reject xterm writeP when it takes over 2 seconds
Disable TerminalCommandTracker
Add test for Linux - Hangul
Make all TerminalConfigHelper unit tests sync
Selective task provider activation using a new `onTaskType:` activation event (#137662)
Pull in req. packages
Adopts ILanguageConfigurationService where LanguageConfigurationRegistry was used.
Implements runAndSubscribe utility function.
Add trace logging to terminal task system Part of #134431
Don't auto lock after unlocking
Use lookahead in file icon directory regex
Lock button click action
No need for trusted types in extHost worker and worker extension loading, https://github.com/microsoft/vscode/issues/138588
Update grammars
Lock icon, fatter hover pointer
Start of lockable hover widget
Match icon theme directory with regex
:lipstick:
Use an identical CSP for both `https` and `http` (enabled by using 'self')
Always run the web worker extension host in an `iframe`
Extract indent/bracket guides logic from TextModel to GuidesTextModelPart.
Remove deprecated ways of configuring the web worker extension host iframe src
fix #138515
Revert "Extract indent/bracket guides logic from TextModel to GuidesTextModelPart."
Extract indent/bracket guides logic from TextModel to GuidesTextModelPart.
Reuse `httpsWebWorkerExtensionHostIframe` when running locally in the desktop (by allowing 'self'). This change does not relax in any way the CSP in the web case since `https:` was allowed before.
bracketPairs -> bracketPairsTextModelPart
Implements dynamic dependency check for both get and _read.
expose CancellationToken on onWill-file events
Implements dynamic dependency check (to address #138348).
backups - avoid timeout in test
backups - fix tests
add more API rpc tests, https://github.com/microsoft/vscode/issues/115679
backups - suspend/resume onWillShutdown
update API notebook milestone
editors :lipstick:
Update markdown grammar
Added theme image support to the markdown preview (#137820)
"Surround with" in TS/JS snippets (#138565)
Better name for method
Strip relative path prefixes when checking for validated links
Only restore terminal process name if source was api
Pass locale to exthost for process revive date format
Skip flaky updateImageSize suite
Refresh markdown preview on all file changes (#138301)
finalize terminal location API (#138530)
Use markdownDescription
fix #138359 (#138532)
:up: playwright & set trace names (#138539)
fix #138224 (#138538)
fix https://github.com/microsoft/vscode/issues/138284
Small improvements to types
Introduce `onDidModelChange` to the group (#137388)
Use a unique authority for desktop webview too
`ICodeEditor.getContribution` can return `null`
when view visibility changes, don't assume the panel should be focused  (#138419)
set shellType when it changes, fix #138388 (#138418)
wrap web worker inside iframe when running in desktop
Try removing timeout in checkWindowReady
smoke - allow 30s max for deleting test path (#137725)
fix https://github.com/microsoft/vscode/issues/138502
smoke - disable test that is flaky still
don't trigger suggest when composing characters, fixes https://github.com/microsoft/vscode/issues/132939 and fixes https://github.com/microsoft/vscode/issues/83428
revert changes to User agent header
revert changes to User agent header
storage - add `whenInit` property to join init phase
lifecycle - introduce and adopt `finalVeto` for backups (#138055)
backup - cancel pending operations on shutdown and handle cancellation better (#138055)
:sparkles: watcher - remove `vscode-nsfw` legacy watcher
editors - remove experimental `experimentalDisableClearInputOnSetInput` setting
sandbox - drop support for running file service in renderer
backups - prevent redundant backup on startup (fix #138497)
send file system info with dummy uri, https://github.com/microsoft/vscode-remote-release/issues/5714
update mywork milestone
editors - allow to close a dirty editor that is opened in another group split (fix #138442)
update distro
Remove browsing for file icon themes for security issues
Bump distro
input collapse should trigger view update as collapse is no longer metadata.
Removes unused field ComputedEditorOption.deps
Add `tarballProxyEndpoints` workbench option (#138283)
Add extension readme file
allowedCharacters: string -> allowedCharacters: Record<string, bool>
Allows editor options to override how new config updates are applied.
Address comments about ? operator
align with other settings and rename `problems.compareOrder` to `problems.sortOrder`, https://github.com/microsoft/vscode/issues/135249
Add cancel to typescript promise rejection (#138333)
Move to latest LSIF indexer
log prerelease query to telemetry
fixes #138274
SCM - Introduce another open changes command got editor/command palette (#138293)
use final DAP 1.51.0
debt - do not reject without reason
remove recommendation text for installed extensions
Update editor configuration only after extensions are registered (#138302)
Revert "smoke - :up: retry timeout"
smoke test tweaks
Update team list in endgame notebook
Improve Explorer welcome view (fix #137414) (#137475)
log layout
Improve positioning of native IME popup
#138271 fix tests
Increase timeouts (since now we run remote integration tests too)
#138128 remove bookmark when not needed
GH Actions workflows can use .yaml too
Cloud backup instrumentation
Disable Nagle's algorithm for web sockets
Emit `onSocketTimeout` at most once every 20s
Update Codicons: Add `layout` icon
fix #137333.
Add signature to telemetry regex
fixes #138153
Always send an ACK message after a reconnection
After a reconnection, let the other party know (again) which messages have been received
nb doc toc.
use theme icon
use openWindow with the correct remoteAuthority: use null for recents to make sure a local window is opened
fix #138238, skip failing test
fix #138239, skip test
fix #138223
use openWindow with the correct remoteAuthority: use null for recents to make sure a local window is opened
pass remote authority to addRecentlyOpened
store remoteAuthority for folders in backup service
use isEqualAuthority to compare remoteAuthority
reopen window on destroy needs to restore remoteAuthority
fix #136035
fix tests
Update user agent header of MP requests
log provider id
trueIfUntrusted -> inUntrustedWorkspace
deriveFromWorkspaceTrust -> trueIfUntrusted
invisibile -> invisible character
smoke - :up: retry timeout
fix #138121
add pre-release version property to extension install telemetry
fixes #138171
fix build
fixes #138136
fixes #138162
fixes #138172
fixes #138164
Add clarification to title schema
fix #137795
fix #137798
fix #138210
Setup terminal tests for 3 retries to minimize impact on build
fix #137722 fix #137808
fix #137799
set default profile to pwsh for only windows for #137225
fixes #137214
Update diagram bg.
set default to pwsh instead of bash for #137725
Update html-language-features to use doQuoteComplete
Support multi-select in process explorer's copy
fix https://github.com/microsoft/vscode/issues/137968
Limit directory icon syntax to forward slash
smoke - temporary bring back timeout
refactor - extract metadata type and use it in scanner
watcher - add test for atomic writes
Run OSS tool
fix frequent refresh of available profiles (#138096)
fix #137710
Add test for #119469
improve json cache log messages (for #101050)
Try to get textarea's cursor to line up with our cursor horizontally (improves #136097)
move to drawio.
tweak output size limit wording
html custom data: open external uris with openTextDocument. For #135459
Add latest Windows 11 recordings
set default to false for layout control with new setting
server cli: use deprecated option
Small tweaks to input handler
Remove unneeded logs in test
Remove timeout from automation terminal util
add experimental tag to layout control setting
Trim inner tag leading and trailing whitespace
Don't use empty lines when counting new indent
fixes #136805
Initialize state explicitly
Update model resolution.
make show more italic.
fix padding for web layout control
:up: @parcel/watcher (fix #136460)
fixes #136802
[json/html/css] update services
fix $ref's (json pointers start with `#/`)
Add `CompositionContext` to track how many characters need to be replaced and have the textAreaState always reflect the state of the textarea.
smoke test tweaks
Add Windows tests
#15756 fix outdated extensions
web: allow embedded to add commands to menus
Add more tests for `TextAreaInput`
fix tests
perf improvements - do not read cache if it does not exist - update cache only once eventually - revalidate cache eventually
Add more tests for `TextAreaInput`
Add a test for composition in `TextAreaInput`
fix errors
smoke - print more backup info
#15756 - migrate pre-release extensions in the background - enable the migrated extension only on reload
tests - print main process pid when killing fails
build: :construction_worker: give names to the api proposal tasks
smoke - always print tasks
workaround for https://github.com/microsoft/vscode/issues/136982
Update default webview commit
Simplify `TextAreaWrapper`
[html] clean up request service: add CustomDataRequestService #135459
update endgame notebooks
Add dom events to `TextAreaWrapper`
smoke - print running tasks after smoke test run
unit - exclude more tests for node.js runs (#137853)
smoke - diagnose failing backup test
do not show switch message for not installed
smoke - unique user data dir for stable tests too
smoke - do not fail build when unable to delete workspace folder (workaround #137725)
Revert "smoke - print task list when deleting workspace path fails"
Log only once (#137923)
smoke - print task list when deleting workspace path fails
fixes #136805
tweak layout control menu entries
add padding for layout control
fixes #136803
fixes #136851
 fix coloring of layout control icon
tests - exclude more for node.js (#137853)
Smoke test lifecycle changes (#137969)
Improve "Run Test at Cursor" command
#15756 adjust position of pre-release text
#15756 show pre-release text in extension editor
#15756 show pre-release indicator if extension is pre-release version
smoke - strengthen shutdown path
Disable highlighting ambiguous characters for plaintext.
Disable highlighting ambiguous characters for markdown.
rename
#46851 passing extension description breaks intellisense as it is not serializable. Pass only id and display name as extension info
fix smoke tests
#46851 pass extension description as source - adopt at other places
#46851 pass extension description as source
#134684 override default values from workbenchAssignmentsService for experimental settings
some jsdoc for language status items, https://github.com/microsoft/vscode/issues/129037
revert request changes & polish
allow to mark a language status item as busy, https://github.com/microsoft/vscode/issues/129037
:up: `native-keymap`
tests - really skip test (#137853)
Introduces interface to keep shortLabel alive.
Set height to 0 if domNode is null.
Moves reservedHeight computation into commonEditorConfig.
Shows a banner if a file has too many highlighted unicode characters.
smoke - wait for tab becoming dirty before exit
#15756 fine tuning wordings
Rename resolveShellEnv to getResolvedShellEnv (fix #137923)
#15756 prevent installing unsupported extensions in main service
update `monaco.d.ts`
smoke - switch away from potentially flaky `editors.selectTab` method
tests - skip flaky in node.js env (#137853)
ci: remove xcode switch step
ci: unset SDKROOT
#15756 - show warning for unsupported extensions - action to switch to prerelease
#15756 prompt users to migrate from old extension to main prerelease extension
Remove unnecessary `socket.pause()` calls
add previewColorTheme command (for #137289)
Ask the client to pause writing until the socket is sent to the remote extension host process, which then asks the client to resume (#134429)
themes actions: convert to Action2
Remove `KeepAlive` message and rely solely on unacknowledged messages as a trigger for timeout
add browse marketplace for file and product icons (for #137289)
add marketplace apis for file/product icon themes (for #137289)
#15756 support pre-release while installing through cli and commands
refactor extensions report to extensions control manifest
Make sure websocket frames are processed in order
Improves assertNever type.
Move draining logic to `ZlibDeflateStream`
Extract `ZlibDeflateStream`
#46851 add default value source & default default value  to configuration properties
Smoke test tweaks (#137809)
Extract `ZlibInflateStream`
take extension id while registering defaults
#46851 fix init
Add `traceSocketEvent` for fake socket
icon themes: fix duplicated marketplace item
#15756 fine tune labels
Add tracing to sockets
fix themes. linter errors
silently getting session should return a session (if any) regardless of preference. fixes #137819
Revert "trigger didChange event when you update inputbox.value. ref c1c103dee729b6f702c1c5272d25b24ea9664d48"
#15756 rename
#15756 sync prereleases
#15756 set metadata always and fix hadPreReleaseVersion
color theme picker: separate quick pick for browsing
Update doc
Clear Notebook Editor Cache
Polish
use regex, not Uri.parse, to detect custom scheme
Add script to prefetch headers for native module compile
Correction booleanRegex to properly match only 'true' and 'false'
Extract remote source provider registry into the vscode.git-base extension (#137656)
Trim categories for more cases
Skip flaky test
Skip flaky test
Skipping flaky test
Bump distro
Removes todo.
Run unit tests against node.js too (#137790)
Make FocusTracker shadow dom aware
Tweaks unicode highlighting default settings. They are now derived from trust state.
ci: :arrow_up: bump cache salt
Revert "builds: disable caching"
latest DAP
Integration test failure: Recursive Watcher (parcel) basics (fix #137732)
server license check: use readline
Use a fuzzyContains when matching labels from the Testing Explorer view filter.
Update output editor when output model is being updated.
show more style polish
show more output info at the top.
globalToolbarShowLabel can be false or never
Escape dirname CSS class This commit also limits the dirname selector to non-data resources.
More clean up of terminal smoke test init
Clean up terminal smoke test setup
Re-enable other smoke tests
#15756 rename to switch
Dispose preferences model when disposing renderer
add server license and server license terms
Add basic detach/attach terminal tests
Keep hover providers in a constant order
Stream hover provider results and re-render the hover widget as they come in
#15756 feedback
#15756 allow to install pre-release versions by default in non stable quality
open/close dev tools when escape sequence logging toggled (#137746)
smoke - enable graceful-fs (#137734)
Unit test flake: Async IntervalCounter - /CHROMIUM/ (fix #137727)
Have `getHover` return `AsyncIterable<Hover>`
Introduce `AsyncIterableSource`
tree dnd todos,  https://github.com/microsoft/vscode/issues/32592
remote cli: don't skip translating of paths (#137529 )
Try to restore `yarn mocha` and move browser tests to `/browser/`
macOS: Process explorer not put to front if minimized (fix #137598)
:lipstick: CI names
sandbox - remove `setImmediate` and `nextTick` (#133173)
fix https://github.com/microsoft/vscode/issues/136611
Implements #137004. When an inline completion provider provides a suited augmented inline completion, a preview will be shown even if editor.suggest.preview is set to false.
#15756 indicate pre-release in version entries
#15756 - handle incompatible pre-release versions
proper await exit
make sure to await remote file reading in vscode.workspace.fs.readFile so that error handling is correct.
Remove brackets from echo
:up: @parcel/watcher
Capitalize account signout button caption correctly (#137651) (#137652)
Add descriptions for order properties
ICON_ONLY_ACTION_WIDTH.
hide insert markdown action when all labels are hidden.
notebook toolbar rendering strategies
:notebook: doc.
ensure that labels are rendered initially to get a correct width cache.
update cell part doc
handle 4XX errors differently from others
#15756 - Pre-release support for extensions
CellExecutionPart #131808
simplify polling when getting a network error
Only allow a maximum of 2 seconds to persist terminal sessions
bump version
Disable flaky search smoke test #137195
Extract `LineSelectionAction` to its own file
Catch and swallow errors during terminal persistence (#136804)
The second argument of `setTimeout` is optional
make typings on `showInformationMessage`, `showWarningMessage`, `showErrorMessage` strict with items as strings
remove `enableProposedApi` from extension description, https://github.com/microsoft/vscode/issues/131165
Avoid conflicting scopes and commandIds in quiet logins from Accounts (fix #137601) (#137613)
fix https://github.com/microsoft/vscode/issues/137365
add contribViewsRemote-proposal to api-tests extension
chore: fix perf hook integration with node environment
Improves performance of regex by only breaking on invisible or ambiguous characters.
add --help and --version to server CLI. For #137658
improve json language indicator
* boolean -> boolean|DeriveFromWorkspaceTrust (with DeriveFromWorkspaceTrust being the default) * allowedCharacters: string[] -> allowedCharacters: string and allowedCodePoints: number[]
Add SCM contribution to manage context key for active resource changes (#137297)
Use `setTimeout` instead of `queueMicrotask`
Adopt `queueMicrotask` (#133173)
Don't force a tab refresh when doing a terminal tabs layout
Extract the workaround for `setTimeout` artificially being delayed by 4ms to a separate function.
build: :arrow_up: gulp-atom-electron
Check the active element also when 'focusin' or 'focusout' bubble.
Adopt `runWhenIdle` (#133173)
:up: web playground
Adds themable colors for minimap and overview ruler.
:up: iconv-lite
Partially revert 20fc98529f282cb3be34273773b4507c554c8653 due to failing integration tests
Adopt `queueMicrotask` (#133173)
update nb doc.
support dynamic label rendering.
Add singular form of bisect message
fix #137590
only focus when showing panel if active instance is not an extHost terminal
editors - `clearInput` before `setInput` (#34697)
debt - adopt more `DeferredPromise`
process explorer - improve detection logic of window kind (#137427)
fix #128289
disable local echo when local by default (#137588)
reset terminal name when empty title is provided (#137589)
Minor refactorings
Simplify logic dealing with the case when the character is already typed (the composition end case)
Add comments and rename variables
Reduce usage of `allow-any-unicode-next-line`
Update to Unicode 14.0.0
More RBAC usage (#137579)
Remove type hints
Improve running on `https`
Small tweaks
CellParts for markdown.
CellPart#renderCell.
progress bar listener.
Use `runWithFakedTimers` in more tests
Speed up tests with take timers
Reduce delay in test
Spelling
Reduce timeout
Improving ux for search in webviews on web
use set to store and lookup paths of interest
Update setting name to be more extensible in the future
Add separator for TS version quick pick
Removing gating for ts args
Don't send over npmLocation on web
Disable should update color of the tab
[json] use uri helpers
redundant layout change of cell status bar.
windowsMainServer: reuse doOpenEmpty & include arguments in traces
add verbose to remoteCli
Move progress bar to cell part.
fixes #137523
prepare layout.
:up: sudo-prompt
Add some detach/attach tests
call resolveWorkspaceSymbol when the provider has it, no more incomplete locations, https://github.com/microsoft/vscode/issues/69558
Don't render invisible characters in hover (including bidi control characters).
Bump distro
increase smoke test limits
fix snap
Adds SimpleWorkspaceTrustManagementService to provide IWorkspaceTrustManagementService to monaco editor contributions.
builds: disable caching
Disable should respect dimension overrides again
Use `dist` from `jschardet` and not sources
Implements highlighting of unicode characters.
fix snap build
Style::debug.contribution: change content of breakpoint+stackframe
glyphMargin: Reverted previous change
tests - enable crash reporter for electron based unit tests
Restore `Text Mate Syntax Grammar Logging` functionality (#117264)
fix snap build
watcher - mitigate #137430
hide _json.showAssociatedSchemaList command
Update `.cachesalt` in an attempt to help the build proceed
fix: loading unsigned native modules from Ext host
single state change event.
cell part respond to view cell state change.
move progress bar listener to codecell
cell progress bar update.
move hover and output focus into CodeCell
:lipstick:
move focus sink update to CodeCell
hook up cellPart.prepareRender
updateLayoutNow/Async.
ICellViewModel.editorWidth.
dedup.
abstract focus indicator.
:lipstick:
top insert toolbar is viewpart.
updateLayout for bottom toolbar.
cellpart
use condition to check for focus
move decorations out of cell renderer
Change Alt to Option only in the aria label provider and adopt change in tests
add terminal editor and tab smoke tests (#137393)
Set `display:none` on content widgets which don't want to be visible to avoid overflowing the editor's area with invisible dom nodes (see #122370)
clean up
Use RBAC for builds (#137473)
glyphMargin: Wrapped codicons inside parent div
Update to a newer `sudo-prompt` library (#137467)
Break circular dependency between term instance/instance service
Update/add docs for ITerminalInstanceService
Move preparePathForShell into TerminalInstance
missing;
Create ITerminalInstance.sendPath
Improve caching of previous find matches in the `SelectionHighlighterState`
specify output id in show more...
fix https://github.com/microsoft/vscode/issues/137415
Move preparePathForShell into terminalEnvironment
Consolidate convertProfileToShellLaunchConfig into instance service
Move get xterm ctor out of instance service
Remove unused interface members from ITerminalInstanceService
Remove the `localProcessExtensionHostStartupTimes` telemetry event
Cement launching the extension host from a worker on the main process
ci: :construction_worker: no need for yarninstaller task
Remove brackets from statements
 Regex check for file icon dirname (#137402)
fix tests
tests - merge keytar test into native modules test
tests - lift test to browser since it has no node.js deps
#131808 - Set up output collapsed part in cell template
Switch root file check from regex to Paths library
Add optional dir syntax in file icon themes
Add CellProgressBar fix issue where progress bar doesn't appear when collapsing input while cell is running. Also small cleanup to cell dnd in renderer #131808
DIsplay `Select Kernel` in kernel picker (#137380)
Split deprecation message first
Show focused border when output is focused
Simplify BetweenCellToolbar
Use injected contextKeyService in cell toolbar class
Refactor toolbars in cellRenderer #131808
remove debug log
Add terminal profile smoke tests (#137079)
disable auto update when installing a specific version of extension
Install extension with version using workbench.extensions.installExtension
trigger didChange event when you update inputbox.value. ref c1c103dee729b6f702c1c5272d25b24ea9664d48
Pick up TS 4.5 as bundled TS version
Notebook List View Cell rendering.
Change jupyter language name to make it more clear that it is for raw JSON, not a notebook
Clean providerId
Testing out panel alignment setting (#137009)
Remove only
Add unit tests for safeDisposeTerminal
Add terminal test services, tidy up terminal service test init
Setup unit tests for TerminalService, hide convert slc in class again
Next attempt to fix should respect dimension overrides in remote
Enable file dnd in tree views Part of #32592
Skip should respect dimensions overrides tests in remote only
Add comments to tree dnd proposal Part of #32592
Incorporate tree dnd API feedback Part of #32592
add note why spdlog is used in ext host
remove unused method
:lipstick:
-runButtonContainer
Extract Cell Run Toolbar.
cellParts.
-bottomCellToolbarContainer.
:lipstick:
extract nb top cell toolbar.
notebook viewparts.
#51935 suggestons for multi language identifiers
Update cell renderer naming.
fix nb test npe.
Adopt a pattern that works with parcel 2
remove title menu from template.
:lipstick:
Extract CellToolbars.
Add enable-render-process-reuse flag (#120952)
Add support for ungrouped settings in the ToC
Do not show the selected or suggested kernel unless just one (#137320)
finalize forceNewSession API
Add unit tests for convertProfileToShellLaunchConfig
Only serialize terminal sessions if data is written
#51935 support updating configuration for multiple language identifiers in configuration service
Remove IterableIterator from dnd API proposal Part of #32592
#51935 support multi lang specific settings
Add onWillDrop to tree dnd proposal Part of #32592
Update Publish Branch label
don't freeze copied object
fix compiler
update distro
dedupe workspace symbols results
api - update docs around `onDidChangeWorkspaceFolders` (fix #137263)
update distro
#51935 clone override contents
enable browser and remote integration tests (#137254)
Allow relative file links inside of markdown notebook cells
Update ts@next for building VS Code
Skip one more test on web
Skip html image tests on web
update png files
Add file to exception list
fix #133928
Change img hrefs in markdown from file to vscode-file (#136687)
Add proposedApi manifest to searchresult extension
Try avoiding bad calls to columnToEditorGroup
Require more explicit strict null  typing for `executeCommand`
Skip document link test on web
Use unique id for webview iframe
Initial cut of QuickPick separators (#137244)
Revert back to onStartupFinished activation event
diagram for notebook model resolution.
#51935 use overrides from the model
#51935 fix overrides keys in configuration model while merging
Update cell rendering.
Simplify markup cell renderElement.
Move decoration update to common.
#51935 fix configuration model to consider an override identifier can exists in more than one overrides
update distro
update distro
Remove unnecessary regexp escape (for #137166)
smoke - properly create screenshots and stop instances (#137220)
#136424 add to proposed api
Don't wait for 4s orphan check for just revived processes
tweak for https://github.com/microsoft/vscode/pull/135736#issuecomment-968528741
Tidy up
Use optional chaining in ExtHostPseudoterminal
Move other extension terminal tests to async await
Use async await in pty terminal test
extension dev - do not delete empty window sqlite DB
smoke - retry quick open search (fix #136499)
:up: @parcel/watcher@2.0.2
update diagram
update focus tracking doc.
remove unnecessary check for monaco-editor class in qp focus handling
Clean up port range regex
Move terminal editor registration to contribution
differenciate onFocusWidget and onFocusWebview.
main thread nb listen to nbEditor.onDidFocus.
Move terminal label register into a contribution
bump distro
reduce redundant focus update.
bump vscode-windows-registry version
webview focus
bump node-pty versions
Remove .only
Polish exit code messages
Move exit code message handling into a tested func
ensure notebook toolbar takes focus
Remove instance id common property
Ensure `--pick-port` range is "<num>-<num>"
Hide terminal panel-specific commands from cmd palette
fix #134418
 Word missing from setting description (fix #137027) (#137028)
Instrument accepted suggestion contributions (#136922)
update markdown cell listener
focus cell list container when active element is removed from DOM.
Bump distro
typo
add mini readme for how to consume/add proposals, https://github.com/microsoft/vscode/issues/131165
#136424 Initialize remote with user synced extensions
regexp: Unnecessary escapes of `-`
remove unnecessary escapes for '-' in regexes that go into schemas (for #137054)
[json] update service (for #137054)
Remove cgmanifest.json from git extension
Extract git syntaxes/grammars into a separate extension
 Add progress indicator to SCM in activity bar while QuickDiff is preparing (#136968) (#136969)
reduce `enableProposedApi` usage further, https://github.com/microsoft/vscode/issues/131165
Remove test only
Copy and use IWindowDriver in PlaywrightDriver
tweak error messages when API proposal isn't available, https://github.com/microsoft/vscode/issues/131165
docs: :memo: better docs for views welcome content, group property
`checkProposedApiEnabled` and `isProposedApiEnabled` must be called with proposal name, add proposals for `package.json`-based API, https://github.com/microsoft/vscode/issues/131165
lifecycle - emit `onWillShutdown` even when using `app.exit`
temp restore all enabled proposed API for test resolver, depends on some contrib-extensions, https://github.com/microsoft/vscode/issues/131165
create stand-in declaration for contribViewsWelcome and adopt for git-extension, https://github.com/microsoft/vscode/issues/131165
fix https://github.com/microsoft/monaco-editor/issues/2366
Do not brutally kill extension hosts in the abnormal shutdown case to unblock the build
Extract git static contributions into a separate extension
use `enabledApiProposals` instead of wildcard property, also update compilation units to only include d.ts-files that are needed, https://github.com/microsoft/vscode/issues/131165
make sure proposal name generation is sorted, https://github.com/microsoft/vscode/issues/131165
Extract diff language into its own extension (#136967)
watcher - stop sending out delete events on workspace root (#136673)
extract auth#session into its own proposal file, make isProposedApiEnabled and checkProposedApiEnabled more strict by forcing them to be called with undefined or a proposal name, https://github.com/microsoft/vscode/issues/131165
extract notebook controller kind into its own proposal, https://github.com/microsoft/vscode/issues/131165
split vscode.proposed.d.ts into a file per proposal, https://github.com/microsoft/vscode/issues/131165
move fsChunks into it own proposal file, https://github.com/microsoft/vscode/issues/131165
Remove code duplication by using existing utils function
group cell listeners.
separate listeners.
ensure focusMode is always accurate.
cell editor focus border focus-within
rename TransferQuickPickItems
refresh more often based on clock skew
Bump axios
rename commandExecuted
Unskip test
fix https://github.com/microsoft/vscode/issues/136955
remove codicon.registerCodicon: codicon are the default, built-in icons
Use widgetClose icon in banner part
add failing/skipped test for https://github.com/microsoft/vscode/issues/136955
tweak wording of log message, https://github.com/microsoft/vscode/issues/131165
extract editorInsets proposal into its own file, https://github.com/microsoft/vscode/issues/131165
simplify `extensionsApiProposals`, https://github.com/microsoft/vscode/issues/131165
watcher - harden test for unexpected events
move languageStatus API proposal into its own file, adopt TypeScript usage, https://github.com/microsoft/vscode/issues/131165
feed all "vscode-dts/vscode.proposed.*.d.ts" into tsc, https://github.com/microsoft/vscode/issues/131165
docs(list): :memo: initial documentation for the ListView and List widgets
docs: :memo: add documentation for the HighlightedLabel widget
externalize icons for the workspace trust editor
Make debug run icon themable
Move extension host spawning to a worker thread (on the main process)
fix #136895
clean up
#136732 cleanup
docs(grid): :memo: add documentation for the Grid widget
docs(grid): :memo: cleanup
docs(grid): cleanup
style: :label: connect grid types
docs(grid): :memo: refer to the grid docs
tweak generation of propsal file a little bit
Clean up debug API in vscode.d.ts; see #124362
only warn about unavailable API proposals when extension wants them, allow diff'ing proposals for product.json-listed extension but only when the extension is being developed. add very explicit log messages
docs(grid): :memo: add documentation for the GridView widget
docs(splitview): remove unnecessary docs
docs(splitview): :memo: shift things around
ThemeIcon & LinkedEditingRanges: Use `| undefined`. For #124362
sandbox - clean up some todos
git - make integration tests agnostic to file watcher issues (#136933)
Tempoary skip sometimes flaky tests
Make `--port` lower priority in case of port=0. But use port if in pick-port range.
Add option to server for port range to connect within
Make alt+enter render markdown and insert cell below
Mark a few more arrays in vscode.d.ts readonly
Revert "First cut of quick pick separators as `kind`. ref #74967"
Revert "widen try in quickpick"
re #133928.
experiments: allow using custom experiments url
widen try in quickpick
log when actions are executed from custom menu bar
Adding logging to test
add layout control support on macos
add layout control to title bar
Also compare other attributes for md preview updates
Remove eslint disable comment
Add proposed api region name, #131165
Pass terminal profiles test
Allow numerical objects in the Settings editor
First cut of quick pick separators as `kind`. ref #74967
Allow hover to work in the interactive window cells
Add more information to Inspect Key Mappings
Revert "fix #133761."
tweak comment
clean up
add logging to ProposedApiController
remove unused DAP stand-in types
fix #128406
Convert `Inspect Key Mappings` to a workbench action
Use suggested kernel if we have only one kernel (#136548)
fix #133360
Use handles in playwright driver
build: :poop: arg
fix: parsing of --ms-enable-electron-run-as-node flag
add `product#extensionEnabledApiProposals` and tweak how the proposed API controller works
build: :poop: fix ci
generate `apiProposalNames` as ReadonlySet
refactor(grid): :construction_worker: make Grid.addViewAt private
docs(splitview): :memo: add documentation for the SplitView widget
hiddenRangeModel: Track line changes (for #132784)
:lipstick:
Clean up tasks API in vscode.d.ts Part of #124362
deprecate enableProposedApi, add and use `IExtensionDescription#enabledApiProposals`
declare proposed API properties for package.json and link them with actual proposal names
docs(sash): :memo: add documentation for the Sash widget
use `ApiProposalName`-type for proposedApiEnabled-utils
move `isProposedApiEnabled` and `checkProposedApiEnabled`-util back to workbench-layer
Removes unused import.
add generated file api proposal names, add compile script that generates this file
- clear formatters while creating the spdlog logger - fix name of the logger
editors - add a test for the fix of #136684
Parcel update and CI improvements (#136830)
Call stack items aren't opening tabs with correct contents (fix #136684)
:up: product
add additional logging and awaiting
Remove now unused ext host method
Remove scm.focus proposal
:lipstick:
Add unique names to most proposal regions
Adding readonly to some disposable properties
Remove empty constructors
Adding readonly in a few more places
Spelling
add output diff info when the visual change might be invisible.
Align some font size setting descriptions
Render numerical arrays in the Settings editor
Removing more duplicate types
üíÑ
Align ext host name with internal name
Adding documentation and cleaning up types
Remove console log
Use object.entries in a few more places
Force update the md preview when a file on disk changes
Use inherited font size for markdown codeblocks
Spelling
Remove html helper function
Extract duplicated type
Toughen validation for numerical objects
Add unit tests for numeric arrays
Move `--ms-enable-electron-run-as-node` to a later location (#136786)
Increase default markup font size
Move notebook setting keys into a namespace
Pull out and test TerminalProfileQuickpick (#136680)
Add notebook markup fontSize setting
build/npm/preinstall: fix error message for node version
Marking a few types/objects readonly
Use Object.entries
Mark array readonly instead of property
Remove built-in markdown output renderer (#136696)
finalize quickpick APIs
fix #133741 (#136763)
fix #135798 (#136776)
finalize silent option for getSession
update distro
Write basic terminal default profile test
`monaco-editor-core@0.30.0`
Implements #136764 by not triggering inline suggestions on undo/redo.
Move playwright driver impl to class
fix #132183 - finalize api
Tidy up smoke test imports
Stub out some terminal smoke tests
Document --headless in smoke tests
#133201 add more logging
Deprecate `connection-token`
Update xterm
Ignore errors when terminal is disposed during fetching xterm ctor
Only use isWrapped workaround on Windows
use tsconfig.json#include for vscode.d.ts and vscode.proposed.d.ts, enables to remove most ref.d.ts-files
Don't stop wheel event propagation
Bump distro
fix #136734
remove unused import
refactor: :coffin: remove dead code
Further clean up
Clean up css
Tweak z-index so split pane sash is above everything
Use base _rows not rows when setting fixed
fix(scm): :bug: do not await git repo status, just give the repo straight up to scm
fix(table): :bug: double clicking sashes should restore column's size
style: :lipstick:
move vscode.d.ts and vscode.proposed.d.ts into `src/vscode-dts`-folder, https://github.com/microsoft/vscode/issues/131165
fix #136731
add isProposedApiEnabled-util, move checkProposedApiEnabled-util, use utils instead of reading the enableProposedApi-property, https://github.com/microsoft/vscode/issues/129037
use nullExtensionDescription in more places, https://github.com/microsoft/vscode/issues/131165
:lipstick:
Uses Array.map.
Improves comments.
fix(git): :bug: git api commands should be registered as contributions
hiddenAreasIds -> hiddenAreasDecorationIds, fixes leaking decorations when lines are reconstructed.
_reduceRanges -> normalizeLineRanges.
Moves modelLineProjectionData into its own file.
Renames LineBreakData to ModelLineProjectionData
model line projection cleanup.
Improves prefix sum computer docs.
update log message
debug error name
use fileService.activateProvider instead of extension service
refactor(table): align table colors with keybinding table
Move error handling code sooner in the extension host process lifecycle
Refactors color detector to use injected text.
Makes DynamicCssRules reusable.
Adopts injected text for debug inline values.
Adopts injected text for debug-top-stack-frame-column spacer.
Adopts injected text for breakpoint space decoration.
Remove artificial 1s delay
clean up
lifecycle - adopt the `onWillKill` event
lifecycle - emit `onWillKill` when `app.exit`
web - make shutdown return a promise
Allow non-word character after inline math code block
Add matchesSomeScheme helper
Add vsls to openers
Document webviewPanel scheme
133348 fix oom when search opened in editor (#136554)
Pick up TS@next for building vscode
Pick up TS 4.5 RC
Use editor font for markdown codeblocks
:lipstick:
Initial support for syntax highlighting md code blocks in notebooks
clean up
- Use logger service to create output appender - Unify output channels and services in ext host - remove unused main output service methods
editors - await closing of editor before opening to the side (fix #122363) (#136602)
use allow opener on non-Safari
web - properly ignore shutdown when expected
introduce logger service in ext host and use it to create log service
feat(scm): :sparkles: introduce `scm.diffDecorationsIgnoreTrimWhitespace`
Flatten out properties or measurements
Update telemetry module
fix(list): :bug: list/tree should show focus outline while context menu is open
style: :wastebasket:
feat: :sparkles: use `startIn` property for save and open dialogs
chore: :wrench: update conventional commit scopes
fix(table): :lipstick: alternating background colors for table widget
chore: :wrench: clean smoketest dependencies
#132183 clean up - Use FileOutputChannelModel for OutputChannelBackedByFile - Rename replaceAll to replace - simplify exthost output service and channel impl - enhance update api
fix(splitview): :wheelchair: up/down arrows should change focus between pane view headers
feat(grid): :children_crossing: 2x2 mode can be enabled by splitting
go back to fork
errors - do no log undefined rejection reasons
add shortcut between file system provider and consumer
fix(scm): :zap: dont create event listeners per scm row
cleanup proposed api
Remove initial text line skipping in tasks Part of #136585
Kill extension host processes immediately when doing extension test
don't show "Activating Extensions..." repeatedly
fix preinstall script (#136638)
web - rewrite how storage is handled on shutdown
:lipstick:
Stop parcel watcher on shutdown (#136569)
Remove unused fs import #133654
fix #131458
rename `connectionToken` to `connection-token`
- Do not send replace content from ext host - implement replaceAll in the model - cancel all model update operations on replace request - queue append operation after replace - clean ups
wait if there's a refresh in progress
Update to use nullExtensionDescription instead of undefined when no extension is available in Host Outpu `ExtHostLogFileOutputChannel` context
fixes #136451
Tweak markdown notebook header sizes
Remove searchApp, searchIpc And update search settings for local search removal #133654
fix: performance issues on large context menus (#136398)
Enable linkify in notebook markdown
üíÑ
Add order field to the settings json schema (#133484)
Update html-language-features documentation and tasks to yarn
Prevent standard browser find widget showing when inside webviews
Move line counting into XtermTerminal
enable experiments not available in shared process
Update telemetry extractor
Bump distro
replace ProcessPropertyType with generic T (#136469)
Create refresh scroll bar method, increase scroll padding
Remove scroll bar when setting fixed dimensions to dynamic
Polish fixed dimensions, remove scrollable when toggled off
trigger min height update when output height is non-zero
Remove externalURLOpener embedder API
Update Codicons: Add `newline` https://github.com/microsoft/vscode-codicons/commit/482a516fd42a0a0262725638300ba0fe0c106bbf
Add fixed-dims class
Progress on fixed dimensions sizing
fix(tree): :bug: allow navigating between breadcrumbs using arrow keys
Change log level trace to info in auto tasks Part of microsoft/vscode-remote-release#5309
Revert fix for #26425
Remove logs
Env var widget play nicely with scroll bar
Address no-async-promise-executor ESLint rule
fix(list): Escape should shrink selection first
Gets rid of registerDecorationType in inlay hints controller, as part of #132537.
:lipstick:
Honor setting show only shortcut keys (#136251)
_forwardMarkers must check for empty markerData, fixes https://github.com/microsoft/vscode/issues/136434
extract iconNameCharacter from doParseLabelWithIcons
fix https://github.com/microsoft/vscode/issues/133622
Don't show 'Sync Changes' button if auto sync or auto push are enabled (#134408)
fix (again) https://github.com/microsoft/vscode/issues/133210
inlay hints - properly dispose scroll listener
Update replaceAllCancellationToken cancellation to use optional chaining operator instead of if statement
Address some feedback from pull request: https://github.com/microsoft/vscode/pull/136402
Revert "user agent testing"
Clairify webview names
Initial support for the webview find widget on web
Use ?.
Bump browser TS version
Unmark preview as experimental
Ensure is mirrored is set
#fix: 108459 (#108666)
user agent testing
Update collector++ endpoint
include ~ in possible icon name. fixes #136172
Better update of line numbers
Align to bottom using pos absolute
Change xterm layout to push scroll bar to edge
Wait for up to 6s for extension hosts to exit, then proceed to kill them
fix #135097.
update slack channel
try to fix publish types
restore terminal color, icon, and name on restart (#136454)
Editors - pathsToEditors should ignore folders (#136359)
notebook: remove debug code
notebooks: still prefer built-in renders, but add equivalence for 1st party jupyter ones
testing: allow selecting text from test peek
Update telemetry extractor
clean up
remove support for @optional service dependencies, https://github.com/microsoft/vscode/issues/119440#issuecomment-961164634
add ability for embedders to specify urls that should open in a popup with opener (#136383)
Update version
Include margin in layout, only trigger resize when settings changed
xterm@4.15.0-beta.13
Remove optional usage from external terminal
Mark `::before` and `::after` users as deprecated
Update web telemetry validation
polish
send an event per mark
Share common code for the ExtensionResourceLoaderService
if profile name is null return undefined  (#136438)
send telemetry for resource performance marker
Move disableWorkspaceTrust to the workbench layer
Gets rid of "config.editor.useInjectedText" in ghost text widget, as injected text is now considered stable.
:lipstick: min column of peek arrow is 2 because at column 1 it gets cropped
up scrollbar size from 3px to 6px, https://github.com/microsoft/vscode/issues/116338
chore -a little less registerThemingParticipant
Add logging around invoking the resolver (microsoft/vscode-remote-release#5811)
fix smoke test "verifies settings"  - problems view is not getting update when not visible.
polish _installedExtensions
:up: playwright
Improve morphing for vscode-docs
fix #125961.
fix #136362
don't show welcome view when web extension terminal is created (#136327)
fix #130669.
fixes #80767
Enforce that source code uses a small subset of Unicode
Replace Right Single Quotation Mark with Single Quote
Allow extensions to disable built-in markdown preview button (#136273)
Remove typescript-vscode-sh-plugin
Revert "Remove image stabilizer code"
Clear this._fileWatchersBySrc
Don't update icon path so much
Add readonly to iconPath properties
Remove image stabilizer code
clean up onDidChangeActiveTextEditor
Cleaning up code examples in vscode.d.ts
Update preview if text document is reopened
Improve `createCodeEditorServices` (#136380)
Improve `createModelServices` (#136380)
#135941 Use diffIdentityProvider while setting children
Update to latest seti-ui icon theme
Some terminal profile service test improvements
refactor
make renderer-side parts splash ready for web
one less usage of debounce, https://github.com/microsoft/vscode/issues/123487
Remote IOffProcessTerminalService
Remote RemoteTerminalService
Create RemoteTerminalBackend
extension configure button
Delete LocalTerminalService
notebook layout caveats
add theme color for suggest status, https://github.com/microsoft/vscode/issues/134326
Remove all @optional injections
Start replacing ILocalTerminalService with a registered backend
clean up
Force task terminals to be in the view Part of #134533
getPrefixSum(indexInclusive) -> getPrefixSum(count: indexInclusive + 1)
Remove no longer necessary license text
Remove console.log
Improves LineBreakData test
Exposes and adopts IViewLineTokens.getLineContent
chore - use real CSS theme variables in language status and kernel view item
chore - use CSS theme variables over registerThemingParticipant, codeLens, references, call hierarchy
#135935 move IUriIdentityService to platform
Refactors line break data.
web - adopt indexDB helper for storage
Browse themes from MP
watcher - use `type` property for crash reporter location
remove `ms-vscode.remotehub*` from proposed API allow list, https://github.com/microsoft/vscode-internalbacklog/issues/2431#issuecomment-950869327
Unable to resolve your shell pops-up instantly (fix #136272)
watcher - enable crash reports on linux (#136264)
Add replaceAll method to OutputChannel to improve render flickering for extensions with minimal output contents; associated with https://github.com/microsoft/vscode/issues/132183
fix #136318
fixes #127756
remove vscode prefix for exp name
add more terminalProfileService tests (#136308)
Add descriotion to walkthrough
Update collector++ endpoint
:lipstick:
fix #132101.
fix #133929.
Create TerminalProfileService (#136131)
Exp => Assignment Rename (#136253)
Revert "Remove unused search process code"
clean up
clean up
Ignore :in at the end of word links when searching
Move xterm core into XtermTerminal
Move terminal target management into XtermTerminal
Update grammars
Remove _xtermElement
Move xterm core into XtermTerminal
Move terminal target management into XtermTerminal
lifecycle :lipstick:
web - always reload when we detect persisted pageshow
web - refactor lifecycle service to always go through before, will, did shutdown phases
Reorders LineBreakData constructor arguments to better model their logical dependency.
üíÑ
chore - use CSS theme variables for file decoration colors
chore - use CSS color variables for suggest
chore - use CSS color variables for snippets
chore - use CSS color variables for in-editor messages
chore - for "workspace edit preview" use CSS color variables instead of `registerThemingParticipant`
add theme colors as css variables, fyi @alexdima, @aeschli
api feedback
Uses array queue.
Formats line.
IViewModelLinesCollection -> IViewModelLines, SplitLinesCollection -> ViewModelLinesFromProjectedModel IdentityLinesCollection -> ViewModelLinesFromModelAsIs
Moving some definitions around, mostly in splitLinesCollection.ts.
Extract IModelLineProjection into modelLineProjection.ts
handle case differences in remoteAuthority (for #136106)
workbenchThemeService: Use IExtensionResourceLoaderService
files - cleanup capabilities more
Replace all slashes 1a36e0b932eecd93ecbe6342be36f019672ea6a0
fix #120680.
Disable fuzzy links in md preview
Fire event when md content is updated
fix #133761.
Use morphdom to reduce number of full page updates to md preview
Move unicode addon to XtermTerminal
Move command tracker into XtermTerminal
Add special case for webgl not working in Safari
Move cols/rows to be owned by TerminalInstance
await storing of token data (#136236)
Add web issues notebook
Initial assignment service work (#136238)
use DAP 1.50
Add tags for interesting browser testing packages (#136116)
re #135834. better logs
fix #133555
avoid unnecessary focus editor and reveal the primary selection. fix #136012.
reduce viewCell.onDidChangeState listeners.
restore word wrap transient state. fix #136011
await storing of token data
specify scopes when getting auth sessions
Update md grammar
Support definition links with spaces
refs #134873
update milestone
Minor edits
add custom rule to prevent test.only
Revert "add mocha-no-only lint rule"
ISplitLine -> IModelLineProjection
More adoption of this.getViewLineInfo.
PrefixSumComputer renames, LineNumberMapper -> ConstantTimePrefixSumComputer
new Selection(...) -> Selection.fromPositions/fromRange
fixes #136034
Add trace for automatic tasks Part of microsoft/vscode-remote-release#5309
add mocha-no-only lint rule
no test.only, fyi @bpasero
Add setting to specify shellArgs for the automationShell (#131099)
fix https://github.com/microsoft/vscode/issues/134656
sketch for virtual document support for
pass capabilities through constructor
fix tests
fix https://github.com/microsoft/vscode/issues/136178
register remote fsp only when casing is known
web - reload workbench when we get restored after shutting down (fix #136035)
Rremove async from promise executors Part of #134873
fixes #136147
"Move to Next Change" and "Next Change" (fix #136059)
add comment to remoteCli
Add option: include command in screencast overlay (#126742)
fix https://github.com/microsoft/vscode/issues/136031
remove old code, some polish
update my assignments
:lipstick:
update areas
workspace history - introduce constant for windows jump list
editors - simplify setting editor to pane more
watcher :lipstick:
Make 'expandLineSelection' a proper action.
Update the current milestone
Support auto save when delay is 0ms (fix #135635)
watcher - implement support to restart watcher on unexpected termination
Properly fix #133687 (#136085)
adopt onDidChangeProperty (#135785)
Passthrough scroll/clear calls
Move find into XtermInstance
Add test for renderer auto detection
Remove old experimental protocol
Pick up TS 4.5 nightly for insiders
Pick up new TS for building VS Code
Remove duplicated language-config file
Include `<` as surroundingPairs in JS
fixes #135916 (#136126)
fixes #136022 (#136054)
Dont override my accuracy anymore
Prefer non-builtin output renderers in notebooks (#136079)
Test terminal view location change updates theme
Test terminal react to theme changes
Create xterm terminal test file and first test
Create xterm folder
Remove terminal instance service dep
Move more of TerminalInstance into XtermTerminal
Bump distro
Create initial XtermTerminal class
Add js version of setting too
add new 'includeCompletionsWithClasMemberSnippets' option (#136045)
debug: fall back to explicit provided config if no selected name
fixes #136021
add more perf marks for workbench initialization
Display selected kernel in kernel picker (#136042)
Migrate docker workspace tags to configfiles (#135993)
:up: `vscode-textmate@5.4.1`
Flip default value of `__uniqueWebWorkerExtensionHostOrigin` to `true` (#134234)
Style terminal background correctly in aux panel
Removes unused typescript tokenization file.
Moves bracket logic from text model into BracketPairsImpl (IBracketPairs).
tests - convert more slow tests to integration tests (#135075)
:up: `native-keymap@3.0.1` (fixes #135848)
watcher - enable parcel watcher by default
sandbox - enable sandboxed file service by default
:up: graceful-fs
editors - return `undefined` from `openEditor` when operation cancelled (fix #134786)
watcher - do not dispose when shared process gone
update distro
notifications - set aria label of toasts to match as if it was focused (fix #135638)
Statusbar - checks if 'Go to Line' works if called from the status bar: (fix #135962)
fix comment reference
Add a test for #61070
typo ref #135913
Add more tests for LineDataEventAddon
fixes #134679
Ceate prebuild dev job (#135924)
Bring back webviewContentExternalBaseUrlTemplate
fixes #135970
Improve LineDataEventAddon lifecycle
Move onLineData to an xterm addon and test
add doc
simplify range comparison
notebooks: fix built-in renderers not being preferred by default
Disable folding in the diff editor again (#116483)
Improve TS checking in `uriTransformer.js`
Keep the editor hover above by default
Replace `editor.hover.below` with `editor.hover.above` and have rendering below be the new default (#30797)
Crashing workbench process does not bring reopen dialog on linux (fix #135950)
Don't reuse bracket pair AST nodes that touch the edit, as brackets at the end could be extended.
Remove mixin-server task
Add needs-triage to endgame notebook
watcher - consistent restart behaviour on errors (#135954)
Read marker severities more efficiently
switch to enum
Remove usages of `mode` from `monaco.d.ts`
Tunnels in shared process should be per remote (#135937)
Don't count upper case bonus if the letters are consecutive (#135930)
force new window when reopening (fix #135906)
Try bumping webEndpointUrlTemplate again
fix #119578.
wrong index check.
fix #133739.
fix #134454.
fix #134456.
Try to use `spawn` instead of `fork`
Update markdown string docs
notebook: handle duplicate mimetypes in list
notebook: fix mimetype order list corruption if resorting multiple
notebooks: fix mimetype display orer always saving into workspace settings
improve theming for #134196
fix #135810
match activity bar positioning
debug: bump js-debug
Null check xterm viewport
Standerdize captilization of "Go to"
Implements #134932. Allows to theme the background of ghost text.
add options for jumping to next/previous problem
Add repository
Add more repositories
change -> Change
Try to fork the extension host process directly from the main process
Revert "Hardcode commit for webview endpoint in public product.json"
change how snippet completions are computed.
Change to capture groups for readability
Add support for eventing
Simplify regexp
Run OSS tool
Search editor go to location improvements (#135227)
Over-complicated single pass
rework logic of setting selectedItems in multi-select mode
fixes #75046 - ensure selectedItems is updated onAccept
fix #135516.
re #134600.
Add support for invoking multiple equal scored `DocumentSemanticTokensProvider`s
Polish verified publisher styles (Refs #127825) Updated Codicons https://github.com/microsoft/vscode-codicons/commit/aeba1103adc4bc8367e58c8bba4d6ed71145a979
debug: show warning in launch.json for disabled debuggers
Hardcode commit for webview endpoint in public product.json
Revert "Remove Jupyter specific loader special case (#126939)"
Note in all Pseudoterminal events that open needs to be called first
Add support for invoking multiple equal scored `DocumentRangeSemanticTokensProvider`s
change decorator fallback to ['entity.name.decorator'], ['entity.name.function']
fix viewport gets pushed up repeatedly when toggling size to content width #135804
notebooks: better handling of preferred mimetype
Use `CompositeDocumentRangeSemanticTokensProvider` only when having 2 or more providers with the highest priority
:lipstick:
enable opt-out of contributed profiles (#135791)
[css/html/json] update services
remove keytar fallback in keychain and add a ton more logging to microsoft auth. ref #133201
fix #134820
fix #133687
bump `native-keymap@3.0.0`
fine tune verified publisher changes
Clean up for workspacetags (#135746)
fix #133741
fix terminal reconnection on reload, rt of #135481
Categorize kernels in the notebook kernel picker (#135502)
Support ' surrounding validated links
connect nested grids absolute offsets
Remove the attribute `monaco-visible-view-zone` on view zones that are in folded regions (#121516)
chore: Update endgame notebooks
Create extension host processes from a node worker in the main process
#134909 queue writes and fix tests
editors - cleanup wording for editors/files with unsaved changes
Add vscode-remotehub repository
tests - more `runWithFakedTimers` usage (#135075)
backups - use fake timers in some slow tests (#135075)
fixes #123165
storage - use fake timers for clear test (#135075)
refine check for knowing if a view zone is visible, https://github.com/microsoft/vscode/issues/121516
make ResourceMap case preserving, even better fix for #128198, fyi @bpasero
Implements #134801 by introducing editorBracketPairGuideBackground{1..6} and editorBracketPairGuideActiveBackground{1..6}.
fix compilation
fix #88927
Add vscode-livereview repo
fix telemetry event
prevent unneeded re-render of breadcrumbs items
correct doc for `count` property of `SourceControl` (#117765) (#132242)
debt - do not use `| null` in editor service API
themes - improve window border color
Simplify regexp
Minor fix
Don't register twice
Window crash: "Reopen" does not work on macOS (fix #135572)
Handle apostrophes in TitleCaseAction
bump distro
Adds support for separate horizontal and vertical borders for side by side editor (#135181)
WSL1: Use parcel watcher for polling watch mode (fix #135691)
cli: treat /dev/null as non-existing file (#135645)
Revert "fix extension pty terminal test failures (#135672)" (#135685)
fix extension pty terminal test failures (#135672)
notebooks: better memorization of preferred renderers
testing: adopt optional value standard
fix #135649
Revert "migrate process properties to use generic onDidChangeProperty  (#135610)"
Revert "move listeners outside of onProcessReady block"
Revert "emit Exit via propertyChanged"
fix #121897.
Don't scroll terminal to top when hidden and shown
fix #135523
emit Exit via propertyChanged
xterm@4.15.0-beta.10
move listeners outside of onProcessReady block
migrate process properties to use generic onDidChangeProperty  (#135610)
fixes #128695
Make sure to cache result id and use the appropriate legend
refs #126614
make checked optional on IAction (#135605)
Rename `modeId` -> `languageId`
Tidy up call into pty service
Tweak access modifiers
Add tests for $ in validated links
debt - use |¬†undefined (#124362)
debt - use product service in more places (#135651)
Update distro
clarify doc, fixes https://github.com/microsoft/vscode/issues/126748
better document what default excludes are not, https://github.com/microsoft/vscode/issues/48674
Improve logging
Make the editor hover explaining tokenization problems aware of the current language (#135573)
Define 2500 chars max limit for javascript, not typescript (#135573)
Tweaks for #124362
use editor default font fallback, fixes https://github.com/microsoft/vscode-dev/issues/425
better fix for #135634
sandbox - share the same server side file system provider between main process and server
sandbox - enable sandboxed fs provider by default (unless stable)
fix hasSession by using silent: true
Update root container when panel is moved
Build using typescript@next
Add "NotebookCellExecutePrimary" menu, towards #132057
Double check called both providers
Add test for multiple providers
fixes #114329
fix #133680
testing: fix default click action=debug not working
Register onLineFeed only after initialText is written
fix #135585
fix no profiles showing up when useWslProfiles is false (#135498)
Put back old method for use in viewportSemanticTokens
fix #114768
Cache last provider for range token provider too
Cache last used provider for legends call
Build problem
Add keybinding table tokens (#135018)
fix #135476
editor: give default link provider access to all models
Multiplex providers into one
#135075 Use fake timers
don't assume command make a textual editor (at the completion itself), https://github.com/microsoft/vscode/issues/120070
Add -g flag for the open command (#135517)
Combine the implementations for `getAllOverviewRulerDecorations`
fix #135558
fix #135557
update distro
Allow building to continue despite a missing `remote/LICENSE` file
fs - use `onUnexpectedError` to prevent logging cancelled errors
fix tests
Add web kind only in web
fix windows build
files - align names of IPC backed fs providers
Error: disposed around DiskFileSystemProvider.doRefreshRecursiveWatchers (fix #135530)
update distro
Remove special rules for `src/vs/server`
Define a server greeting via `product.json`
Remove no longer necessary special settings for `src/vs/server`
sandbox - restore session based file watching (#132282)
editors - update settings description (fix #135185)
fs - some :lipstick: and enabling of `graceful-fs` centrally
fix #111723.
fix #79969.
Integrate Source Code into Disassembly View (#132541)
Try fixing some focus issues with webviews
fix #111724.
debug: make serverReadyAction multi-session aware
Make sure inline math is marked as markdown-math
Allow leading and trailing math on same line as math block
debug: deemphasize internal variables too
debug: prevent double clicking to edit readonly variables
testing: nominally request links in test peeks
Disable markdown math inside of raw code blocks
Silently fail when remote environment isn't available
Confirm when using tab inline kill action
refactored mainthreadauth with silent option and tests (#135503)
fix  #135424
part of #134907
fix #133968
fix #134596 (#135495)
show better messages for windows error codes (#135483)
update distro
Remove unnecessary scripts
Add server folder
Update to latest seti-ui icon theme
update distro
Improve handshake
watcher - diagnose flaky test
"Workspace does not exist" when failing to connect to ssh remote (fix #135331)
sandbox - enable `graceful-fs` in main process too (#132282)
sandbox - more reuse of sandboxed fs provider (#132282)
add skipped test for https://github.com/microsoft/vscode/issues/112362
Update the tracked repos
trigger quick suggest also when composition ends, fixes https://github.com/microsoft/vscode/issues/123672
fix https://github.com/microsoft/vscode/issues/131700
Handle async errors (#134873)
sandbox - implement non-recursive watch support (#132282)
Enable replacePattern
Try to avoid opening text documents just to  process diagnostics
Remove redundant comment
Take out nowrap rule in Settings editor
fix #131706.
fix #126475
fix #122563.
fix #120680
fix #128329
re #127177
fix #130239.
Bump distro
fix #135340
Dispose of language status items on dispose
intercept and improve terminal launch error message  (#135420)
enable terminal actions for web and when a terminal has been created (#135423)
Updating the TerminalInstance to only reigster link providers once. (#135419)
Add left/right quotes as terminal word separators
Don't try to hide untracked views in filter view
Update commands.json (#135319)
Refactors bracket pair colorization feature.
Expose `onDidChangeHiddenAreas` event (for #121516)
send telemetry when keytar shim is handed out to extensions, https://github.com/microsoft/vscode/issues/115215
Use null coalescing instead of ||
Rename KeyCode enum members to more closely resemble ScanCode enum members
Add more media keys (fixes #47115)
Explicit values are no longer necessary with const enums
fix https://github.com/microsoft/vscode/issues/135326
fix suggest widget details min width
debt - deprecate direct use of `product`
Add colorized bracket highlighting colours (#132494)
pass the correct cancellation token to working copy participants, https://github.com/microsoft/vscode/issues/135036
early exit when working copy handlers have empty results, https://github.com/microsoft/vscode/issues/135036
remove unnecessary dot from 'welcomePage.tileShadow
sandbox - first cut file service implemented by main process (#132282)
fix distro build vmImage
shared process - use a different event to dispose worker when loading/reloading
Group various key code related maps in one table
shared process - use correct hash function for config
when pinning language status prefer its command tooltip over its detail, https://github.com/microsoft/vscode/issues/129037
scm: bring back focus restore
Properly fix #134053 (#135347)
fixes #95994
fixes #123953
fixes  #134017
Exclude tr from markdown hover
fixes #93837
addresses #99054
fix #134623
Move event key code map to `keyCodes.ts`
Add terminal keybindings for NUL, RS, US
Move VK_ to KeyCode map to `keyCodes.ts`
Improve profile setting description
Move `ScanCode` to `keyCodes.ts`
Extract keybindings related types to `vs/base/common/keybindings`
Add more media key codes
fixes #135302
Changing port "privacy" to "visibility" to address Codespaces user confusion (#135193)
fix: the quick diff should respect `diffEditor.ignoreTrimWhitespace` (#135285)
shared process - :lipstick:
fixes #134792
shared process worker - document affinity
:smooth: shared process worker dispose
Remove `LanguageIdentifier` and ensure tests dispose instantiated `LanguagesRegistry` objects
fix spelling issues
shared process - fix worker dispose
shared process - rename service folder
sandbox - lift file watcher interfaces to common
shared process worker - more lifecycle tweaks
sandbox - implement affinity and lifecycle for shared process workers (#132282)
watcher - properly await unsubscribe (#135069) (#135209)
update distro
Add `IOptimizeTaskOpts.externalLoaderInfo`
fixes #112541
Remove backticks from word character fix
fixes #122902
fixes #122902
reduce indicator and apply to auxBarPart
Menu bar step in web walkthrough
fix for #134873
simplify css generation
Export FileIconThemeLoader and use in theme service
Use ${iconName) notation
extract IconContribution.getDefinition
Update seti-ui for Bazel icon fix
Add test for zh_hant2 (#112614)
fix #133459
fix #134053
Add triage label when notebook label is assigned
`let` -> `const`
add distro bump for @sana-ajani
Revert "update distro"
update distro
update monaco.d.ts
change ILanguageExtensionPoint.icon to ThemeIcon, ignore for monaco
use dom API directly so that the url is encoded properly
ext: pass cwd through when creating extension host
html: polish reading of settings
Bump emmet-helper
tree: fix visibility not being updated on refilter
product => productService
Scroll to the top earlier after search
skip failing test
Bump distro
don't escape dot as syntax token, fixes https://github.com/microsoft/vscode/issues/127097
web - allow registered commands to appear in F1
ci: update sdl-scan exports
chore: remove redundant build_from_source env
worker process :lipstick:
fix https://github.com/microsoft/vscode/issues/130838
watcher - skip test that seems to crash build (#135069)
comment out failing test (#135157)
debt - set `build_from_source` to match our CI (#135100)
remove stale label
watcher - rename type
fix https://github.com/microsoft/vscode/issues/118049
fix https://github.com/microsoft/vscode/issues/125194
First cut experimental setting to run file watchers from shared process worker (#132282)
Add embedderIdentifier as a context key
Update colorization test results
Revert "Improve logging"
webviews: add extension id to webview views url
Support theme-icons inside other markdown elements
Allow spaces in katex commands
Add transparent overlay while dragging
search: fix inconsistent regexes with quantified negated char classes
Update Codicons (Refs #54275) https://github.com/microsoft/vscode-codicons/commit/4d7a083443f3122a17c08f8363731fc1ec356509
Improve logging
fixes #130484
initial unoptimized hasSession API
hide terminal dropdown if no web extensions contribute a profile (#135115)
Given web steps unique id's
Respect whens on open first
Split getting started into web/non-web
Allow telemetry footer to open on main page via prodict config
add web label to web issue reporter
Update to latest `native-keymap`
Revert "Update to latest `native-keymap`"
debug: activate debugger post-resolution if its type differs
more web friendly keybindings for New Window and New File commands
fix compile error for unused type
just check if clear is defined
add extra data for web issue reporter
Speed up createFile unit test ref #135075
Add more specific check for lib files on web
improve watermark further
Include extension cdn in webview.cspSource
Simplify import path
Update to latest `native-keymap`
Add a test for #128602
Adopt latest loader
Don't allow context menu when no terminals exist
watcher - increase timeout to reduce crash likelyhood
fixed minimap slider width when page is scroll horizontally.
editor.guides.bracketPairs: 'active' | 'all' | 'none' -> boolean | 'active'
make `nonce` transferable
sandbox - requestChannel is optional
:lipstick:
sandbox - make acquiring message port from sandbox reusable
sandbox - make shared process service available on startup
Have web issue reporter be a little more useful
Remove .only and fix fragment used when opening file
Refactor document link opening
Try to clairify how md links are resolved
Scroll the tree to the top after search
fix strings
Update package.json
Add icon for deprecated messages in the settings ui (#135044)
Pass process.env using env flags
Update telemetry text
Reduce timeouts in tests
Update distro
windows-process-tree@0.3.2
Add focusOnlyEnabledItems to settingsSwitcherBar
Clearer Settings UI for new telemetry setting (#135028)
build schedule
web api: IExternalURLOpener
add new embed API for clearing credentials
Update Codicons Remove pinned-dirty-small and pinned-small https://github.com/microsoft/vscode-codicons/commit/1a9d49e68dedc934f40cc127357ce92d977bc7ae Refs #133422
Add "engineering" label to area label query
Move search tests that spawn processes to be integration tests #134972
remove async executor of Promise ref #134873
#134972 make tests faster
Update my work notebook repos
move file watcher tests to integration (#134972)
debt - no implicit any maps
Specific the Map generics in history.ts explicitly (#134896)
use small lock icon (#133422)
move ipc.cp tests to the integration suite
fix https://github.com/microsoft/vscode/issues/134846
force change MODEL_SYNC_LIMIT to low limit when testing ignore model too large for sync, https://github.com/microsoft/vscode/issues/134972
restore previous runtime behaviour, https://github.com/microsoft/vscode/issues/134979, https://github.com/microsoft/vscode/issues/134892
remove cron
add debug logs
consider only true value for donotSync option
Update extensions-web.svg
Update test case
add context keys to watermark commands
Decode fragment on links when looking up target
Use query selector to get base
Update getting started extensions for web
Add source map for every possible element in the Markdown preview (#134799)
Remove `electronAcceleratorMap` since it only contains 4 special cases
Do not pass OEM keys to Electron on Linux when having a non US Standard keyboard layout (#23706)
Add more logging to capture case when the menu asks to dispatch a keybinding
Avoid async promise executor #134873
set default value of process revive to onExit
Reference codicon duplicates
Finalize MarkdownString.supportHtml
Add missing change
Clean up types for Tab public api
Simplify _onDidChangeInlayHints firing
Adopt #134873
fix #134837
add localization to execution count label
Add cell_ids for ipynb with nbformat >= 4.5 (#134835)
Switch settings-editor assignee
have web issue reporter use same service as desktop one
support donot sync option for extension installation command
update distro
fix
more web changes
Give hints for navigation mode in terminal textarea aria label
Remove async promise executors
update vso allowed extensions
Remove async promise usage in externalTerminalService
Remove workaround for #101754
Remove workaround for #108880
Non US keyboard layouts: pass OEM keys as electron accelerators
fix https://github.com/microsoft/vscode/issues/134892
limit feature-area labels to vscode-repo
Move Electron duplicate modifier check to `BaseResolvedKeybinding`
Clarify that why we cannot pass numpad keys to Electron
Consolidate key code to electron label map
migrate editor.guides.bracketPairs: boolean -> : 'all' | 'active' | 'none'
Remove async promise executors (#134873)
fix https://github.com/microsoft/vscode/issues/130057
fix https://github.com/microsoft/vscode/issues/130910
Makes bracket pair guides aware of indentation. Implements #134267.
no async promise executor, https://github.com/microsoft/vscode/issues/134873
fixes #134638
Implements horizontal guides for bracket guides.
adopt #134873
Uses proper language configuration service for bulk edit.
ESlint: enable no-async-promise-executor (#134873)
Test Failure: Recursive Watcher (parcel) (fix #134865)
API NB, set milestone to October
Terminal editors are always marked dirty.
fix build
Enable rendering of bare math blocks in notebooks
Adding two more area labels
testing: fix duplicate run progress
testing: adopt queueMicrotask
Add language mapping as param to getEmmetMode
debug: don't active js-debug unnecessarily
Update desktop file cache in Debian package postinst
fix #134817
Disable dynamic routing when experimental project wide diagnostics are enabled
Further address #134660
fix #134828
Ignore detach process calls when they're not supported
fix #128049.
Updating peek title info color (#134821)
better height calculation on diff editor creation
Fail the build when webpack has bundling warnings (early prevention of issues like microsoft/monaco-editor#2691)
Darken banner background on light themes
web - remove "Download" from F1
merge `arrays#distinctES6` and `distinct` and avoid O(n2) perf in most cases
no hack is better hack
use biased extUri when feeding data into extensions tst, https://github.com/microsoft/vscode/issues/134602
fix typo
Incorporates feedback from PR.
mark expensive distinct for deprecation
Address #134660
collapse editor selection right before applying rename editor, fixes https://github.com/microsoft/vscode/issues/131357
bump version
remove obsolete notebook
use true casing rules when creating extensions tst, #134602
#132192 add some trace statements
show limited support as warning
watcher - understand more patterns as full excludes
fix MD formatting
add query for issue without area label
shell env - reject with error not string
Support terminal.integrated.cwd as a resource scope setting
storage - handle missing object store gracefully
Reduce likelihood of forgetting `LanguageConfiguration` members in various places
watcher - fix tests
debt - introduce `Promises.withAsyncBody` and adopt in a few places
watcher - fix tests
fix #134595
Add another limit to when we auto-dispose document references that have been created by extensions. In addition to a timeout and overall weight, we also check the number of document references we have and cap them to 60, fixes https://github.com/microsoft/vscode/issues/133325
getExtensionPathIndex indexes extensions by URI, not just fsPath, fixes https://github.com/microsoft/vscode/issues/134602
watcher - delete our windows c# watcher
:up: distro
Enable `parcel-watcher` as new default watcher (#132483)
change back onDidChaonDidChangeInlayHints, ignore events for model for which a request is currently pending, https://github.com/microsoft/vscode/issues/13043
fixes #134147
testing: allow updating expand state of existing items
tree: allow changes of existing diff IDs to trigger rerenders
testing: fix terminals not being reused correctly
testing: fix multiple overlapping messages per line
testing: fix letter spacing in test decorations
Close #133785
:lipstick:
avoid flash on output expand/collapse.
Add more aria labels to Settings editor
 Enlarge small markdown text size - trivial change (#134550)
Remove definition list snippet
testing: run all tests with equivalent range at cursor
fixes #134196
include insiders.vscode in nocors
fixup! missing bits
Don't fire telemetry change event if no change
TST rebalances on insert and delete
Use actual value
fix spelling of isAuthenticaionProviderExtension
Revert "Simplify external .d.ts"
update grooming queries
do not disable always enabled extensions
nit bit
show limited support message
remove unused parameter
Remove support for `@monacodtsreplace` since TS has gotten a lot better at emitting dts
check in compiled file
update distro
enable proposed api flag
enable proposed api for vscode.typescript-language-features
Update ThirdPartyNotices.txt
Set `define.amd` to true
Simplify external .d.ts
Enable markdown links with line numbers to non-md files
Rewrite logic for opening markdown document links
Add mjs/cjs and mts/cts to path based language mode checks
Don't collapse whitespace of code blocks inside suggest details
Use relative line height in hover/suggest/param hints widgets
fix #134059.
Add serializer for simple browser
Update emmet-helper dependency
Change emmet.extensionsPath to machine-overridable
refs #110083
re microsoft/vscode-dev#285
testing: better support controllers who don't parse unsaved files
Add an a for consistency
Update version
Include polish as a issue type
 #134595 minimal fix
debug: apply environment to remote extension host
Add > to Emmet expand suggestions
Use insiders bits when running tests
clarify how Memento#update can be used to remove values, https://github.com/microsoft/vscode/issues/134424
don't wrap link text, https://github.com/microsoft/vscode/issues/134554
Revert "Add model change events separate from group"
web - tweak wording
Codespaces: better handle invalid workspaces when opening (fix #133872)
Add tooltip for keybinding (#133655) (#134438)
web - fix wording of open dialog
Put s inside the `@link`
Use `| undefined` instead of `?` for some readonly properties on objects that we control
Assign Peng on notebook.* issues
Add update tag placeholder.
fix #133914
fix #133925
fix #134078.
Ignore Emmet test workspace
Change various Emmet settings to be resource scope
Register .cts and .mts as TypeScript files
Add model change events separate from group
fit terminal contents better
Add specific activation languages
improve wording
toggle terminal line wrapping beginning with last buffer line (#134521)
Don't show completion on comment lines
Add cells for older unverified issues
fixes #134262
add a comment
Show extension button in the extension pack install dialog in web
Revert "Switch to listening to editor active on group model instead of pane"
Switch to listening to editor active on group model instead of pane
Remove proposed api check in terminal state event
web - update wording
:lipstick: wording
Allows settings to override language contributed bracket pair configurations.
Revert "code cache - enable `code` option (over `bypassHeatCheck`) to align with browsers"
use TST#fill when resolving files
store decorations: `uri -> provider -> data` instead of `provider -> uri -> data`, https://github.com/microsoft/vscode/issues/134075
shared process - init config and storage in parallel (same as we do in workbench)
Not properly handling fs events for uris that are currently in a pending stat or readFile call (fix #132765)
Decrease opacity of execution label for accessibility contrast ratio (#134467)
Trigger inlay hints for all visible JS/TS editors when one changes
web - tweak wording for unsupported file system access
assign area "debug" back to weinand
Add tooltip for Execution count (#134416)
testing: fix performance issues on very large files
size to content width per instance and for proper viewport (#134393) (#134394)
üíÑ
De-prioritize builtin renderers in notebooks
Remove tanha from notebook topic subscribers
Update classifier.json
eamodio => JacksonKearl & lszomoru
size to content width per instance and for proper viewport (#134393)
code cache - enable `code` option (over `bypassHeatCheck`) to align with browsers
Use warning for partial mode language status item
Pick up new TS version for building VS Code
Remove angle brackets when checking the scheme (#133419)
Disable non syntax errors in files that don't have semantic capabilities (#134175)
cleanup, also use TST#fill for decoration change events, related to https://github.com/microsoft/vscode/issues/134075
files - adopt the new long running `canHandleResource` variant
debt - rename `IFileService.canHandleResource` to `IFileService.hasProvider` and make `canHandleResource` a promise that activates
simplify equalsIgnoreCase and startsWithIgnoreCase, let them use compareSubstringIgnoreCase
reduce chances to bail-out onto toLowerCase in compareSubstringIgnoreCase, https://github.com/microsoft/vscode/issues/134075
debt - do not directly use node.js `path` module
--wait released if split editor is closed (fix #134299)
adopt API breakage of onDidChangeInlayHints
allow to send onDidChangeInlayHints-event for specific uris, https://github.com/microsoft/vscode/issues/130430
fix https://github.com/microsoft/vscode/issues/120898
Auto save on window focus change still asks to save on close, triggering the save (fix #134250)
update mywork notebook to october
fix #134345 - 'workpsace' typo In addition to user-facing string, fix same typo in symbol names plus 'unwatedRecommendations' symbol name typo
Set wordwrap to on for testingOutputPeek
Bump telemetry module
Re-enable webview tests on web (#134300)
listen to both settings changes
fix #134295. Cell language update from UI is not applied.
Update language status icons
fix #134025
Check test plan items regardless of milestone
fix #133361
chore: bump electron@13.5.1
Bump distro
add better fill-method (for tuples) and adopt for file events
prepare code for icon arrival, https://github.com/microsoft/vscode/issues/134102
file watcher - handle `files.watcherInclude` properly via URI identity
add unkpkg repo
use label-or in notebooks
actually fix #134030
Note required TS version of JSX completion setting
Bump vscode-ripgrep
fixes #134037
fixes #134208
Use the default editor font family as fallback for Safari (#125968)
disassemble request fix off by one error
Add telemetry for local process extension host startup times
Only show git clone on Get Started when git is installed
update distro
fixes #133932
Reverts default change until next release Refs: #133974
Tactical fix #132657
add existing query value
add target query param
tweak team query for verification
update distro
Add web recommendations
Wording (microsoft/vscode-remote-release#5530)
Remove unnecessary field
Rename `STATIC_VALUES` to `CONSTANT_VALUES`
Remove manual license (LinusU/load-yaml-file#2)
add tag closing for tsx (for #34484)
"Deleted" double message in hover (fix #134115)
fix: avoid stack overflow when loading bracket guides for large files
Re-open with does not focus inactive editor (fix #134131)
Forgot to bump limit to 10K
Update to match new enum
Switch to settings.html.completion.attributeDefaultValue
Add doNotAddAttributeQuotes setting to disable automatic quotes
fixes #134042 fixes #134047
fix #129666
Add jsxAttributeCompletionStyle setting (#133920)
experiments: allow multiple activation events
Remove built-in latext output rendering in nb
Update monaco.d.ts
Limit forced Get Started page by product config (#134169)
Walkthrough items for web (#134161)
Revert "Add glyphMarginRightPadding as an editor option"
Revert "No need to call toLowerCase on tagName"
fix #120341.
update distro
fix #132306.
fix #134088.
Allow passing in labels (that might already be in the form `[...]`)
Revert "fix #133960"
wait on extensions to be registered before running any language detection
fix #134142.
fixes #133959
Disable autocomplete when there are inline suggestions by default so that we can continue discussing this feature.
Update link
Use correct project types for javascript projects
fix #133960
Remove deprecated use of replace in reopen with
More improvements to logging
Avoid throwing when the extension host process is already gone
Log errors coming in from the extension host to the log service
Increase logging threshold
fixes #131938
Missing await
gh issues - add another repo
fix https://github.com/microsoft/vscode/issues/122427
Revert "fix https://github.com/microsoft/vscode/issues/119406"
Add tunnel privacy comment
use check-all in status-bar and check, info, error in tooltip, https://github.com/microsoft/vscode/issues/134102
use check-all in status-bar and check, info, error in tooltip, https://github.com/microsoft/vscode/issues/134102
update mywork notebook
Clarify cases in `_singleModifierDispatch`
Improve logging
Clarify return type of `getSingleModifierDispatchParts()`
:up: distro
Show an error when resolving shell environment fails or is timing out (fix #133910)
get package nls file from extension resources list
web - tweak unsupported file dialog wording
Add "features" property to schema (microsoft/vscode-remote-release#5442)
Editor view state is too sticky for diff editors (fix #134098)
CLI on macOS with -w does not exit when running multiple times (fix #134030)
Recognize .pyt files in Python extension (#133546)
fixes #133582
Don't ignore the indent settings in advanced wrapping mode
tests - working copy backup tests are flaky because it accesses the disk
Outline cannot follow correct side in split editor case (fix #134008)
Editor inputs marked as deleted for virtual resources (fix #133947)
chore: bump electron@13.5.0
Update distro
Support only Big Sur, fixes #134023 (#134071)
Add consolidated IntelliSense status item
fix #131823.
Spelling
debug: bump js-debug
fixes #133997
fix #133966
fix #134005
fix #133988
fix #133970
fix #133962
reduce listeners registered.
:eye:
test for output fast equal check.
fix action casing, part of #133960
fix #134025
fix #133927. faster output compare
re #133927
Use editor worker module description rather then module description Closes #2408
Update distro
[html/css] update services
update distro
update distro
Revert "xterm@4.15.0-beta3 Diff:https://github.com/xtermjs/xterm.js/compare/50c5579...3a71b3f"
Revert "xterm@4.15.0-beta3 Diff:https://github.com/xtermjs/xterm.js/compare/50c5579...3a71b3f"
check if BroadcastChannel exists in window
Code editor service is not fit for split editors (fix #133986)
update breadcrumbs editor binding on control change (#133975) (#133985)
Add ellipsis to report perf issue, like https://github.com/microsoft/vscode-python/issues/17547
Open workspace from vscode:// url (fix #133976)
Add vscode-livepreview repo to notebooks
editors - improve file not found placeholder (#133829)
Adds proposal issue to proposed api
Adds git.showUnpublishedCommitsButton setting
Renames scm.showActionButton
Bump distro
fix: progress text in welcome page (#133812)
update `monaco.d.ts`
Remove unused import
Revert "Update highlightjs"
fix #132063.
Update highlightjs
Remove extra check for non-nullable param
Use globe codicon (#130905)
Move launching of extension host processes back to the renderer process for now
Improve timeout error messages (#133890)
Improve logging in `ExtensionHostStarter`
fix #129552
update notebook decorations typings.
Update monaco.d.ts for new TS version
Only show capabilities item when in single file mode
Show loading spinner while loading status of tsconfig for current file
Pick up new TS version for building VS Code
npe
Clarify with JSDoc comments that methods starting with `_` should not be used by customers of `IExtensionService`.
Have `_handleDeltaExtensions` wait for `_initialize` to finish before handling delta extensions
[css/html/json] update service
Never import app insights outside of testing
fix #132143.
Improve logging
re #132143. do not clear output min height during output update.
re #132143. merge clear and append edits.
Update the shared process tunnel address async
Remove use of setImmediate
Bump distro
create nulltelemetryserviceshape class
Third party notices
fix #133361
fix #133722
Removed mnemonic from Get Started, fixes #133873
fix #133552, switch off revive process by default
app proposed API checks, fyi @eamodio
Extract `MoveOperations.vertical`
fix https://github.com/microsoft/vscode/issues/130137
Log when communicating to the shared process takes longer than 20ms
web - stop encoding a UUID into workspace URIs
Remove `IMode` and `FrankensteinMode`
tabs - reduce the number of tab reveals that can happen (fix #133631)
_entries2 -> _entries
Make brackets readonly.
:up: vscode-nsfw@2.1.8
:up: vscode-nsfw@2.1.7
add telemetry points to ExtensionUrlHandler
update vsce
Update endgame notebooks
adjust color names, https://github.com/microsoft/vscode/issues/133673
use Date.now over performance.now, https://github.com/microsoft/vscode/issues/133173
Adds scm action button Refs: #110882
Enables scm.alwaysShowRepositories by default Refs: #110882
Update `nsfw` and watcher service (#133826)
update randombytes reference
Elevate walkthrough steps for sync/languages/clone
remove unused import
remove default shortcut
fix #133638
show folding indicator always when it is collapsed.
Support nbformat 4.5
Skip tab close test for now
Add close to tab model
add new line
fix #132306.
Respect RSV1 bit (which describes if a message is compressed or not)
Do not go to the extension host for a `$getCanonicalURI` when there is no resolver
update some command labels (#133745)
fix #133751
oops
Simplify notebookBreakpoints listeners, after 25867f924dfe119a4d683d4b9c4344f2494aee11
Update Codicons: Add `beaker-stop`, `graph-line`, `graph-scatter`, and `pie-chart` https://github.com/microsoft/vscode-codicons/commit/2dc824f7c23bfacf8da958c643c0a4f3983cdfd3
delete log
Make Help menu entries more useful for exploration (#133651)
Ensure nb cell source uses LF instead of CRLF
Revert "better polyfill of timeRemaining for idleCallback https://github.com/microsoft/vscode/issues/133173#issuecomment-926682209"
update insert toolbar position.
fix #133750
Update Codicons: Add 'debug-continue-small' (refs #133293) https://github.com/microsoft/vscode-codicons/commit/8ae6c4f7150c1efbc90f5ac323a2c3b7912bc45b
better polyfill of timeRemaining for idleCallback https://github.com/microsoft/vscode/issues/133173#issuecomment-926682209
Bump distro
undo bad change
Use `onDynamic*` instead of `onScoped*` for events that are returned from method calls (#133445)
Add more move tests
simplify signature of getExtension
Implement a TunnelService in `/electron-sandbox/` using an `ISharedProcessTunnelService` that creates the tunnels on the shared process
update distro
reduce font-size of status bar circle, https://github.com/microsoft/vscode/issues/129037
Group remaining node deps
watcher - track case renames (macOS, Windows)
fix https://github.com/microsoft/vscode/issues/119406
clarify limits of `editor.inlayHints.fontSize`, fixes https://github.com/microsoft/vscode/issues/129521
Revert "Only decompress Websocket frames that have the RSV1 bit set"
remove weird space character from sources
let type colors be default to "normal" color, https://github.com/microsoft/vscode/issues/133673
update to `playwright@1.15.0`
watcher - set a lower debounce delay
disable hot-exit in transient workspaces
watcher - always delay restart
note missing tests
bump distro
Persist fixed dimensions on window reload (#133691)
make sure we splice the sessions if they have the same set of scopes for github authentication
try side panel moniker
fix overflow actions issue in panel/auxbar
fix #132457.
fix #132314.
fix #131996
:lipstick:
fix #130790.
flip aux bar with side bar
Add tab move tests
fix #117169
correct actions in aux bar vs panel
lift additional panel-specific items out of basepanelpart
flip aux bar with side bar
Add move support to tabs
hide setting in stable
Àòfix incorrect naming of generated view containers
link to web extensions guide
Option to preserve focus while showing view
fix DnD orientation for Aux Bar
fix tests
Add some comments
Adds tests.
Update extension telemetry module
Only decompress Websocket frames that have the RSV1 bit set
Remove IE-support for clipboard data
fix https://github.com/microsoft/vscode/issues/126172
Allow tunnel providers to define port privacy options (#133677)
Simplifies bracket pair tokenizer test.
watcher - change to `vscode-nsfw@2.1.4` (#132483)
update distro
fix https://github.com/microsoft/vscode/issues/132981
Considers showIfCollapsed for injected text decorations.
Simplify code around picking the running location and add better logging
Use correct range for inlay hint decorations.
try out filled dot when overall severity is warning or error
watcher - :lipstick:
watcher - implement unexpected shutdown recovery (#132483)
Bump distro
Web Worker Search: Implement more complete .gitignore and search.exclude filtering algorithm
Simplify determining location logic and give precedence to the extensionKind defined in the local extension over the remote extension in case they disagree (#128573)
watcher - better disposal via cancellation tokens (#132483)
file watcher :lipstick:
TAS treatment for language recommendation prompt (#133494)
Set default value for glyphMarginRightPadding to fix test
xterm@4.15.0-beta3 Diff:https://github.com/xtermjs/xterm.js/compare/50c5579...3a71b3f
xterm@4.15.0-beta3 Diff:https://github.com/xtermjs/xterm.js/compare/50c5579...3a71b3f
Support fixed width terminals and toggle line wrapping (#133541)
add test for cwds with different slashes (#133627)
Misc
fix: correct submenu position calculation (#133596)
clear focused thread if it does not exist
Support cross-product FS-provided imports (#133116)
source maps are off in browser dev tools
last rendered height can be used as init height.
fix #133539
watcher - properly track for service shutdowns and show warning in that case (#132483)
Remove more editor input terminology
Remove more IEditorInput terminology
Tests for `nsfw` library (#133615)
transform>setTop
Skip tests to not block CI while I debug
Removes unused import.
add web only in web while inferring
Use DisposableStore in DebugService And add missing dispose for AdapterManager
Bump distro
Renames count to endOffset.
don't apply inlays when request was cancelled
Move appenders to be better controlled by services (#133465)
Update distro
xterm@4.15.0-beta.3
update distro
Moves registerThemingParticipant to view.
Ignore single line bracket pairs when computing the bracket pair to highlight.
Migrates editor.renderIndentGuides -> editor.guides.indentation and editor.highlightActiveIndentGuide -> editor.guides.highlightActiveIndentation.
make Link updatable for @lszomoru
bracketPairGuides -> guides
Disable process revive and confirmation on web
Use complete uri for cache
update distro
- scope config based recommendations to file scheme - show extension name in recommendation if there is just one
getStartPosition -> getPosition
watcher - introduce `files.watcherInclude` for explicit watching of folders (#132483)
update when description
relauncher strict null checks
web - use direct reload on fatal error
:lipstick:
polish and cleanup for auxiliarybar setting
FastDomNode.
avoid output height check during rendering.
fix cache for panel order
Up distro
only check offsetheight for output rendered in main frame.
include js change of nlsmetadata
Use flexbox to layout terminals
Update proposed.d.ts
run nlsmetadata on web output
fix #133539
Remove unused import
batch dom read and write
diff outputs test.
Re-enable cwd detection on macOS
diff editor outputs compare
improve title handling of sequence
Add index to tab
remove unneeded refreshTabLabels call
fix #133538
Deprecate crash reporter
Misc
fix #133118
Large Refactorings Pane Composite Parts (#133485)
add new decoration provider to the start of the list, https://github.com/microsoft/vscode/issues/133210
make sure to clear decorations, https://github.com/microsoft/vscode/issues/16221
* Reduces memory consumption of bracket pair colorization by getting rid of PairAstNode._children * Implements immutable lists that are copied on demand.
Improves performance of concat23Trees
Convert host to locahost in some cases Part of https://github.com/microsoft/vscode-remote-release/issues/5613
Revert "remove whitespaceBefore/After from InlayHint, https://github.com/microsoft/vscode/issues/16221"
manage decoration type ids with its referencing decorations, https://github.com/microsoft/vscode/issues/16221
have at least 1px padding, https://github.com/microsoft/vscode/issues/16221
watcher - enable `nsfw` by default on macOS and Windows and add a setting to disable that (#132483)
bootstrap - remove now redundant check
afterInjectedText is not used, fyi @hediet
add colors for inlay hint kinds type,  parameter, and other (default)
remove whitespaceBefore/After from InlayHint, https://github.com/microsoft/vscode/issues/16221
only update inlay hints of ranges that have been asked, keep other inlays intact, https://github.com/microsoft/vscode/issues/128159
remove InlayHintsData and use just InlayHint
sort language status by sev, source, than id
Use less intense colors for session restore message
Implements line scopes.
show severity icon with language status, fixes https://github.com/microsoft/vscode/issues/133456
Do not kill the extension host processes when the shared process goes down
Add logging to `ExtensionHostStarter`
show colors for pinned status bar entries, https://github.com/microsoft/vscode/issues/133456
status bar - focus hover on click (#129037)
Re-applying #125570
Adding SoutheastAsia PPE region (#133455)
Serialize only the normal buffer
Remote pty host debug port log
Setup pty host debug target
notebook: update pascal case re
notebooks: allow marketplace search for arbitrary kernels
Get last window on Linux/Windows reviving process
Remove debug logs
fix test.
:lipstick:
reduceCellRanges
Correct terminal cursorStyle setting
notebooks: add a button to search for a renderer
Allow undefined context for `notebook.selectKernel`
make output/webview delegate internal
-getCellById
move cell list typings into view.
-notebookEditor.getCellIndexByHandle
separate output and webview delegate
fix #133442
update distro
fix css linking.
Allow undefined context for `notebook.selectKernel`
Remove window keyword from serializer
notebook#viewParts.
ci: fix windows codesign (#133451)
:notebook: update comment regions.
Sort by view column
Add some comments
Adopt webworker search for local files in browser (#133366)
Spawn the extension host process from the shared process
do not check for extension pack check
Update devcontainer schema (#132047)
use neighbouring word range iff avialable, https://github.com/microsoft/vscode/issues/125995
set max request delay to 500ms, https://github.com/microsoft/vscode/issues/128159
#132549 tweak dialog
Whitelist comments in all JSON files. For #129206
extend request range when asking for inlay hints
Update C# grammar
:lipstick: also stop checking useInjectedText-setting fyi @hediet
:lipstick: also stop checking useInjectedText-setting fyi @hediet
cache inlay hint and use cached hint when switching between tabs, https://github.com/microsoft/vscode/issues/128159
status bar API - filter out number values that cannot be serialised (#133317)
catch esrp errors
fix https://github.com/microsoft/vscode/issues/133023
fix https://github.com/microsoft/vscode/issues/132697
-notebookViewModel.moveCellToIdx
- notebookViewModel.deleteCell
editors - shorten diff labels (#110694)
Allow colorized bracket pairs to share opening or closing brackets (#132209)
status - improve hover feedback for compact entries (#129037)
Revert commits intended for PR
Continue to move utils to common
Move utils to common
remove perf logging
Remove some dead code
Move search to webworker
local file search in web - renderer process impl
Make go to next/prev folding range more intuitive
Adding support for negated test tag filtering to the testingExplorerView.
Using ThemeIcon in more places when refering to the icon for a language contribution
Clean up new history keybinding input box hint, fix for findWiget See #129324
Append hint text to placeholder if input supports history (#129324)
allow type in dompurify config so that issue-reporter can work again (type="checkbox" & type="text") fixes #133281
only enable cwdDetection for mac if release allows
Bump distro
Re-enable notebook in tabs test
getCellsInRange.
hide view related helper functions.
Don't diff tab model
gzip and minify json
improve empty workpsace handling
Add resolveCodeAction to monaco registerCodeActionProvider
append suffix to pinned items, https://github.com/microsoft/vscode/issues/129037
use double-check when things are good, https://github.com/microsoft/vscode/issues/129037
extract and reuse DocumentSelector-transformer, https://github.com/microsoft/vscode/issues/133331
Remove titleMode setting
Align terminal font size validation with editor.fontSize
fixes #132645
files - document why we actually call `fdatasync`
Disable scroll terminal buffer when alt buffer is active
fix #129398
Update distro
Remove terminal.integrated.persistentSessionExperimentalSerializer
Initialize cursor settings in terminals when xterm is created
Make TerminalState.isInteractedWith stable
interactedWith -> isInteractedWith
remove accidental code change
Allow to split an editor into an existing group (fix #133260)
do not use dynamic event names
editors - adopt new `strikethrough` decoration option (#130526)
decorations - allow a decoration to set `strikethrough` and apply in icon label
editors - use decorations to indicate deleted and readonly (#130526)
decorations - make service available to `common` layer
fix constant of sortBy publishedData
Render word highlights in the minimap
editors - some :lipstick: for tab API related changes
re-add processSupportRegisteredCheck
fix #133128
add custom title/description tests (#133196)
Remove workaround cast
Extract duplicated constant
Add language status item for single file mode
Move project status items to a new ui folder
use package instead because language packs use package
Remove extra includes check
Remove todo comment
Add log for failing test
Update distro
Remote support for reviving processes
include package.nls.json in bundles
add a bundle property to nlsmetadata uploader
add metadata header files to upload
align to one format and include headers for extensions
Adding additional PPE environment for vscode prebuild testing. (#133276)
On the fly tab model construction (#133025)
testing: add toggle for test history
typo in upload-nlsmetadata
testing: recurse current document checks by default to show possible children
testing: fix crash if controllers were unregistered and reregistered
Update distro
include package.nls.json files in nls metadata
:lipstick: icon label hover cancellation handling
status hover - allow to update existing hover and tweak hover delay (#132963)
RemoveViewletPanel (#133207)
Update distro
Remote terminal revive support
Clean up
Tweak wording
Remove survey telemetry
Add cwd detection caveat to config
Add a revive setting, refine when it's triggered
editors - use previous label style for readonly/deleted
api: move test output association to stable
api: move test tags to stable
upload nlsmetadata
Use correct env/conpty/unicode for revived proc
Serialize only the normal buffer for session restore
Avoid handling an extension installation event too early by holding the registry lock during initialization
#133173 do not use setImmediate
editors - tweak indication of readonly/orphaned (#130526)
Locked groups: auto lock setting needs to suggest valid entries (#133225)
Moving an editor tab to a new group causes --wait to be released (fix #133124)
status - tweak margins and paddings more
#133222 potential fix
commands: allow transferring arraybuffers/uint8arrays over commands
fix: avoid creating unnecessarily long hover messages
remove unused service.
:lipstick:
insert with index.
remove notebookEditor.createCell
Add support for cross file JS/TS intellisense in yarn web
Include in-memory in same implicit JS/TS project
Add context key for notebookCellToolbarLocation
fix #132137.
Override icon foreground color for debug icon in notebooks
Remove unnecessary escapes
Update distro
fix #132815
Allow invoking kernel picker for inactive notebook given `NotebookEditor` in `notebook.selectKernel` command args (#132879)
xterm@4.15.0-beta.2
pse fixes - sort version target platforms - do not include same version again
avoid editor attachment when it is disposed.
update cell editor options only when needed.
fix #133178
debt - reduce some queues that seem not needed anymore (#133173)
remove unsed css-variable, https://github.com/microsoft/vscode/issues/129037#issuecomment-919785516
tests - remove `only` usage
editors - drop the `IEditorInput` interface
history - do not add entries to history on move unless present
history - special treatment for side by side editors
Improve session restore message format
support alpine arm64 target
Double save then discard closes the new file and loose all changes (fix #133142)
chore: bump electron@13.4.0
Allow to position status items relative to others (#133144)
storage - do not fail state access for extensions (#132777) (#133071)
Re-render notebook output cells when workspace trust changes
Move preloadsAndErrors into rerenderOutputCell
Move rerenderOutputCell into view model
Don't add multiple resize observers
Revert 75e1fa6c43356491c7f4484800385e15e0b46972
Move rendering into OutputNode
Extract outputNode class
Add output container class
extract into helper
Unskip two webview tests
Pick up new TS version for building VS Code
Spelling
Pick up TS 4.4.3
fix #133103
Stop looping over line content when the minimap width is hit
Improve rendering speed by avoiding looking at actual characters when rendering certain decorations in the minimap
Make sure the find matches are always on top of the selection highlights
Optimize rendering and respect the `zIndex` for decorations in the minimap
Update distro
don't show folder name for current workspace terminals
revert update distro
Tweak colors and only render selection highlights in the minimap when they are also rendered in the overview ruler
update distro
any -> IProcessPropertyMap[T]
fix #133102
fix #133104
Add single level of categorization #126089 (#126861)
Add prototype of mac open command (#131213)
Add missing await
Make sure markdown.showSource correctly awaits opening the document
enforce API as proposed, https://github.com/microsoft/vscode/issues/111371 fyi @chrmarti
Cache Color.toString() to avoid major GC pauses when painting the minimap
Update distro
update distro
fix #132897
fix #132888
Adopting langauge status api for JS/TS versions (#132015)
Minimap - highlight all instances of selected word #84151
Intial work to add error to telemetry setting (#132996)
split editor - behave more like a normal editor when both sides are the same
Group diff editor options
Update distro
xterm@4.14.0-beta.22
Improve styling of restore, don't start proc immediately
Clean up diff editor options and add `diffEditor.maxFileSize`
Allow files up to 500MB to be diffed
Recompute brackets when the language of a text model changes.
üíÑ
üíÑ
getTargetPlatform also handles alpine linux
labels - relative path separator not used when no formatting available (#132964)
Update distro
part of #132801
Add notebook output border color token (#133019)
Polish when cwdFolder is shown in terminal description and add ProcessCapabilities (#133037)
improve telemetry cleansing
update distro
use IProcessPropertyMap to ensure necessary properties are provided and rename Terminal -> Process
fire event in refreshProperty
don't return undefined
Update seti
update distro
fix build, update distro
add refreshProperty (#133010)
Encode actual and expected value as JSON to enable https://github.com/microsoft/vscode-selfhost-test-provider/pull/2. Only a proof of concept yet.
#126477 check if telemetry is enabled. Also add some debug statements.
Update distro
Improve conpty comment
Get buffers restoring
Layout restoring and reconnecting
statusbar - use model as only truth for sort order
unknown if alpine is not on x64
rename alpine to alpine x64
change kv filter
move TypeHierarchy-API to stable, https://github.com/microsoft/vscode/issues/15533
debt - extract classes into separate files for some parts
editors - fix compile error
editors - preserve view state in diff & side by side inputs
:lipstick:
editors - track focus and ratio
editors - further simplify view state tracking
editors - some renames
fix #132897
re #126880. listener on cell view model triggers mem leak monitor which slows down scrolling.
add alpine to createAsset
use correct qemu command
update distro
rename job
add product build alpine
add onDidChangeProperty to terminalProcess
follow up to TerminalProperty (#132892)
update distro
Revert "follow up to TerminalProperty (#132892)"
follow up to TerminalProperty (#132892)
Updated distro
typo in product-build-alpine
include in condition
add image name
rev distro
rev distro
make alpine build vscode_arch aware
fix parsing alpine target platform
better fix for https://github.com/microsoft/vscode/issues/128198
Ensure local terminals can launch before available profiles are ready
Bump distro
improve error message
Don't await profiles for custom ptys, ensure createTerminal returns
Bump distro
Implements #131940. The suggest widget is not being stopped from automatically opening anymore if suggest preview is enabled. Instead, the first inline suggestion is used to preselect an item in the suggest widget.
Bump distro
support alpine linux
Fall back to importScripts if eval is not available (microsoft/monaco-editor#2488)
Adopt latest loader
watcher - enable `nsfw` by default in insiders (#132483)
editors - add a test for fixing #132859
Editor without resource no longer open in the active group in some cases (fix #132859)
editors - first cut view state support for side by side editors
editors - more code alignments
editors - make more view state management reusable
editors - first cut base editor with view state
Revert "await terminal creation for exthost"
Proposed API for now (#111371)
[vscode-ext-api]¬†fix #111371: expose remote authority
Open recently closed tab auto pins it when the other group has a pinned tab (fix #132833)
Allow IW to override notebook options
Don't call asyncRenderCallback if result has been disposed of
Make sure we dispose of image load listeners
Show lightbulb when user makes a selection in js/ts
update distro
#132774 (#132808)
Use JS modules for kernel preloads (#132088)
Do not fold closing tag (#132316)
await terminal creation for exthost
Update monaco.d.ts
Support :row:col in single match word links
Roll back to last know stable TS version
add check for undefined
Go back to previous day TS
Use uint32 to store buffer count
Pick up new TS version
make terminal title and description configurable and distinguishable (#132691)
status bar hover should not flicker when moving back to item
Improve blending of the foreground opacity
Serialize buffer progress
change bot assignments for debug
Split editor: support to update status bar per focused side (fix #132650)
editors - rename `EditorControl` to `EditorPanes`
[css/html] update language services
#126477 add trace statements
Revert "@126477 do not poll if channel is not active"
Workspace trust - Add telemetry for workspace trust dialogs (#132530)
editors - fix commands for splitting/joining (#132651)
editors - fix side by side editor matching logic (#132651)
Terminal now supports linking local file paths containing '$'
gradually move towards cellAt index asset.
Log errors when loading markdown-it plugins
Removing support for old style markdown symbol links in vscode.d.ts
Add `minimap.foregroundOpacity` to define minimap's foreground opacity
Have the `minimap.background` not influence the opacity of the minimap text
Remove now unused setting
fixes #132652
Update tabs structure
Remove diff resource
Revert "Re-enable tab tests"
scheduler.
@126477 do not poll if channel is not active
add explict region-comment
Update description
Restore undo-redo elements for `IPathService.defaultUriScheme` (#132612)
macOS: application hangs when --wait is used with --verbose (fix #132611)
debug: bump js-debug
Re-enable tab tests
Bump distro
editors - track last focused side in side by side editor (#36700)
Simplify origin check in iframe.ts (#132577)
update distro
rename
#119440 do not use optional services
editors - fix broken side by side editor
editors - make getViewState non-optional
disable install action for extensions not supporting user platform
add API todos
editors - reuse existing side by side editor when identical input opened (#36700)
editors - preserve ratio when toggling layout in split editor (#36700)
Add comments on how fenced code block should not be localized
Skip tests
Set default aria role to `document` for webviews
Update to marked 3.0.2
Spelling
fix #132343
Try promise.race
add report issue to help menu as well in web
fix #132580.
:lipstick:
split cell operation
getViewIndexByModelIndex
Update gear icon class
update distro
- remove `extension-host-terminated` that is already covered by `extensionHostCrash` - rename a few error related fields and add a kind field to 'extensionHostStartup'
Remove old API
Point users more directly to prerequisites #131074
rever window widening
Temporarily bump window to cover lost time
Import Keyboard Shortcuts from -> Migrate Keyboard Shortcuts from
Udpates
patch fetch, XMLHttpRequest, and importScripts for nested web workers, https://github.com/microsoft/vscode/issues/132543
consolidate refreshAvailableProfiles
consolidate actions via doWithInstance
Update editor comment
Move to latest LSIF version
rename
Open terminal links using revealIfOpened
update distro
Switch to using a different kind of scheduler for the disconnection runners, one that does not use wall time, but rather process execution time (microsoft/vscode-remote-release#3454)
web - also add `mobile-web-app-capable`
split editor - tweak color name
fix hygiene
web - improve untitled filename for upload
web - offer to upload/download as fallback to missing fs apis
editors - keybinding for split/join editor and dedicated color (#36700)
fix: early return on cancellation
stray console.log
Remove colorized bracket pair for plain text files
Update to latest seti-ui icon theme
Linux: nsfw watcher crashes when inotify limit reached (fix #131957)
fix(html-language-feature): remove vague statement
call non-throttled refreshAvailableProfiles
fix bugs & polish (#132501)
smoke - disable search smoke tests on windows (#132218)
add target platform to vsix name
update distro
#119440 Remove optional download service
fixes #122141
Keymaps -> "import keyboard shortcuts from". Also remove keybinding
labels - fix disappearing decorations
Add .cff to the recognized YAML file extensions (#131323)
Global state is not updated in instances when more than one opened (fix #132084)
fix tests
#132322 Use broadcast channel
web - set `apple-mobile-web-app-title` property
side by side editor - change separator to match group border (#36700)
#131893 activate config based recommendations
side by side editor - allow to configure and flip layout (#36700)
bad workaround for https://github.com/microsoft/vscode/issues/132430
fix https://github.com/microsoft/vscode/issues/132179
statusbar - allow to show hover on click
bootstrap - fix loader paths for running out of sources
editors - fix one bad usage of `columnToEditorGroup`
verify uri is correct
ensure event comes from edit
revert test to unblock build
add additional logging
fix windows CI failure
add confidence correction for language detection
Add language_info to setKernelSpec
Remove use of createTextEditor directly
Avoid extra cast
Remove defaultCustomEditor types
Revert "temp fix for #132238"
Revert "chore: bump electron@13.2.3"
Add setKernelSpecAndLanguageInfo to ipynb ext
use gte or lt only
fixes telemetry levels
Add active tab test
Add MarkdownString.supportsHtml (#132182)
Switch to dompurify for sanitizing markdown content (#131950)
Skip tabs test
separate internal notebook editor api
Common notebook editor delegate
only run language detection of extension-less files if it has plaintext mode (ref #132173)
Add todo and remove test.only
temp fix for #132238
Add get tabs tests
remove side by side editor input.
loader - configure path to be `node_modules.asar` (#130302)
Up distro
disable flaky/failing smoketest, https://github.com/microsoft/vscode/issues/132233
:up: distro
tests - skip release notes
build
web - iOS tweaks for playground
fix https://github.com/microsoft/vscode/issues/132113
use latest version of references view,https://github.com/microsoft/vscode/issues/15533
web - fix welcome banner icon
smoke - ignore any failure from capturing screenshot
editors - deprecate typed `openEditor` and add `IEditorGroupService.sideGroup` (#127747)
editors - reduce deprecated method usages (#127747)
editors - less use of `EditorInput`, more use of `IEditorInput`
editors - tweak side by side matches method when editors are the same
editors - implement new text editor service and adopt (#126960)
Remove eslint disablement in file
:notebook: remove dup
remove unused typings.
reorder params
validate layers
fix #132150
readonly properties.
notebook editor widget eventing.
for loop on notebook editor widget.
notebookEditor.onDidChangeViewCells
hide notebookEditorWidget.viewModel
use for loop for view cells.
fix testNotebookEditor.
Introduce WebviewOptions.forms
Don't override saveBeforeStart default value See microsoft/vscode-jupyter#6898
don't use webgl on safari for now
Add side by side editor to tab api proposal
Correct syntax for indexing action
Run indexing on release tags
fix #132024
sort by asc so that you look at the oldest opened issues first
:lipstick:
Add DebugSessionOptions suppressSaveBeforeStart See microsoft/vscode-jupyter#6898
fix test
Remove redundant check for #130407
nbEditor.getNextVisibleCellIndex
Pick up new TS version
Product version bump
fix outline tests.
:notebook: :lipstick:
Prevent duplicate '(read-only)' suffix on window title (#132127) (#132134)
editors - avoid editor resolver when replacing typed inputs (#132035)
editors - document how side by side and diff get resolved (#127637)
Respect canHandleDiff optionality
Implements a starting tab reading API (#131998)
Tree dnd notes
Improve invalide port number message
forgot to add some more modules (#130302)
more stable sorting, add status items to aria label, https://github.com/microsoft/vscode/issues/129037
perf - ensure node modules are loaded via script tags and not node.js (#130302)
use link for command, https://github.com/microsoft/vscode/issues/129037
Revert "replace severity with needsAttention, https://github.com/microsoft/vscode/issues/129037"
editors - deprecate typed `openEditors` and `replaceEditors` (#127747)
editors - make view state text editor independent
testing: add new API `sortText` property to TestItem; if populated will be used instead of `label` for sorting items in Test Explorer tree and list view
testing: add sort by duration to test explorer
Clarify running remote tests
interactive window read notebook editor directly.
:notebook: use text model for uri, etc.
:lipstick:
undo/redo for pasting above.
no view model use in editor status bar.
make vscode.revealTestInExplorer an api command
notebook zindex.
fixes #132037
registry
testing: test tag feedback
testing: test tag feedback
Remove old comment
Add tests to new diff editor resolution
:lipstick:
adds a proposed API for keeping scroll position. ref #132068
notebookEditor.getLength()
notebookEditor.cellAt
reset scroll position in core in a few quickpicks (#132013)
runDeleteAction no longer uses view model.
Allow to open a diff editor even if passing more than 2 editors (fix #114568)
macOS - offer the action to open a folder and rename "Open Workspace" (fix #131793)
Update to latest playwright
Support untyped side by side editor input (fix #127131) (#132033)
Add `alert` to AccessibilityService (#131947)
tweak styles a little
enforce that extension uses locally unique identifier, https://github.com/microsoft/vscode/issues/129037
edit list of repos
Added close field in vscode.d.ts interface TaskPresntationOptions (#131127)
editors - surface side by side navigation commands in menu (#36700)
editors - show group split commands in menu (#36700)
Include interesting hosts in port label in Ports view Part of microsoft/vscode-remote-release#3450
remove web extension kind in builtin extensions
editors - allow to split/join active editor in group (#36700)
Allow portsAttributes to take a host and port key Part of microsoft/vscode-remote-release#3450
update distro
remove web extension kind from the setting schema
remove web extension kind
fix compile
push compilation output
Use relevant sections from `package.json` in the cache key computation
make LanguageStatusItem#detail optional, https://github.com/microsoft/vscode/issues/129037
tweak styles, https://github.com/microsoft/vscode/issues/129037
debt - reduce one `createEditorInput` call (#126960)
don't show dangling dash when not having detail
replace severity with needsAttention, https://github.com/microsoft/vscode/issues/129037
add AccessibilityInformation, https://github.com/microsoft/vscode/issues/129037
api note
debt - move `forceFile` into a dedicated untyped input variant
debt - reduce properties for untyped diff editor
debt - remove more `forceFile`
Enable FileSystemProvider to stat a file as readonly (fix #73122)
Update C# grammar
web - allow `URI` as icon for banner (#131977)
reduce viewModel.notebookDocument
resolves #83638
:lipstick:
testing: show node as skipped if all children skipped
testing: apply test message feedback
less viewModel usage.
no editor viewModel use in breakpoint and commands.
resolves #131977
Warn when using updateElementHeight incorrectly without dynamic heights
Allow calling updateElementHeight with undefined to prompt re-probing of dynamic height See #128563
:guard: change cell kinds.
extract cell operations.
cell commands contrib.
fixes #98860
api/edit actions.
Execute and Layout actions.
insert cell actions.
notebook action controller
change cell metadata actions to cellOperations.
more actions to cellOperations.
refactor multi cell selection actions.
Update idea
Enable `screenshot` option properly for smoke tests (#131982)
update distro
debt - change the implementation of `vscode.languages.getLanguages` to not send an IPC message but to read from a sync'd state which gets pushed into the exthost
editors - remove `forceFile` from custom editor input (#128209)
Update callback page
Update build scripts
patch XMLHttpRequest and (partially) fetch to massage file-uris into vscode-file
add missing compile file
:up: distro
add cmd+i (mac), ctrl+i (linux/win) as additional intellisense toggleSuggestionDetails fix: #131956 due to: #105207
fix https://github.com/microsoft/vscode/issues/130073
add deprecation to @optional https://github.com/microsoft/vscode/issues/119440
don't use optional in snippet land nor in telemetry service, https://github.com/microsoft/vscode/issues/119440
editors - reduce calls to `forceFile`
editors - some debt reduction for #128209
api comments
fixup! update languagedetection to 1.0.21.
fix test error
chore: bump electron@13.2.3
fix test error
fix #130699.
fix #131561.
fix #131489.
update languagedetection to 1.0.21. fixes #129005 fixes #131268
fix: GetSessionOptions -> AuthenticationGetSessionOptions (#131644)
fix #131551. Toggle Cell Line Number respects multi-selections
re #131551. Change cell to markdown/code respects multi selection.
use a hash of an object as a key for fuzzy scoring
Use link color for code inside of links
Add insertSpaceAfterOpeningAndBeforeClosingEmptyBraces to tsfmt
testing: fix run incorrectly ending if executed on multiple controllers
testing: fix setting states in a run with identical IDs not working
testing: default failure message to the test location if not already set
don't run language detection if files.defaultLanguage is set fixes #131912
Update distro
fix #131427 ignore extension contributions when populating Outline for markdown file (#131572)
Organize imports in contrib
Go back to older TS version to work around formatting inconsistency
Bump TS version
Use ActivationFunction
Use `@types/vscode-notebook-renderer`
Upgrade to Prebuilds V2 (#131920)
üíÑ code clean up in ld worker
grab only the first 10000 characters for language detection
Disable headers using new telemetry level
update path to 14.16 fixes #122669
remove optional tags for tasexp
centralize telemetry level (#131919)
Add telemetry to extension host startup success/fail
include flags to work around electron issues
update milestone
some todos for @lramos15
debt - clear up some deprecations
Update grammars
Only focus on new session when there is no currently focused session
fix for #131396
fix product name
persist pinned language status items
Revert ":up: version"
fix https://github.com/microsoft/vscode/issues/129332
update my-work query
:up: version
:up: distro
labels - avoid repeated `detectModeId` everytime label updates
fix #131783: apply installation options for vxis files
editors - use bulk operations for move/copy editors (#131506)
Added `ariaContainerElement` to `IStandaloneEditorConstructionOptions`
Update to latest seti-ui icon theme
Pick up new TS version for building VS Code
catch model errors
Update built in extensions telemetry
add test for cache hit fix in search by file name quick pick
make sure cache is different for quoted multi-piece queries
fix typo
Bump extension telemetry module
dispose things that are created on render
further alignments between LanguageStatusItem and StatusBarItem, add pin command that makes language status become a status bar item
web - properly filter out *.crswap
Revert "Centralize query parameter cleaning /cc @bpasero and @aeschli"
fix https://github.com/microsoft/vscode/issues/126187
make sure createDiagnosticsCollection doesn't leak RPC, https://github.com/microsoft/vscode/issues/115679
fix https://github.com/microsoft/vscode/issues/128198
editors - increase delay before opening a dirty model as editor
fix product name
web - make sure to veto unload for working copies pending to be saved
Only hide in serverless (fixes microsoft/vscode-dev#242)
:up: distro
Pick up TS 4.4 final
Add comment for #79339
fixes #79339
fix #131743 add menu separator only when adding 'Run to Line'
web - fix cancel id of warning dialog for local file access
more clarity in language detection setting
Restore uri-based terminal icons in editors
Retain viewColumn active group when passing contributed profile to exthost
Pass in active group to terminal + button command
Adds comments.
Differentiate between colorizedBracketPairs null and empty array.
fix https://github.com/microsoft/vscode/issues/129189
üíÑ
simplify "Go to Symbol in Editor" registration, fyi @bpasero, related to https://github.com/microsoft/vscode/issues/129189
Updates inline completion provider API docs and renames selectedSuggestionInfo to selectedCompletionInfo.
Bring back Windows smoke tests
more CSS trickery to get linked status bar items to work
Hide rename in web (fixes microsoft/vscode-dev#242)
web tests - mention how to enable playwright logging
add TST#fill, https://github.com/microsoft/vscode/issues/131648
web - offer to "Open Remote..." when local file access is not possible
Locked groups: inactive tab not revealed in locked group (fix #131520)
fix comments formatting
locked groups - change to object setting and allow `editorId` and `viewType` (fix #131536, fix #131533)
use .length as it will never be null
fixes #131148
make sure the controller is reset properly. fixes #131653 cc @chrmarti
Jackson/windows smoke test 86cc505c (#131661)
Pass existing editor group id when opening terminals via term quick access
Revert unuintended changes in ed3a2bb182a27dbd26cbfbe322317111ae7284d5
Close #131596
fix #131535 (#131630)
remove semicolon in innerText
accessibility auto assign to sana fyi @sana-ajani
Aligning Open Folder labels for walkthrough/explorer
editor toolbar: set debounce delay to `0` (fix #131584)
Validate if version does not match in Marketplace
Bump distro
use info, warning, error icons, no colors for now, remove padding (hack)
allow to set debounce delay when creating menu, https://github.com/microsoft/vscode/issues/131584
editor group column - improve early returns
editor group column :lipstick:
web - do not restore editors in `tmp` case
notebooks - properly convert `ViewColumn` when passed to editor service
update outside team list
Don't report leaking disposables if test failed already.
Dispose schedulerProcessor even if fn throws.
Locked groups: inactive tab creates empty group (fix #131557)
Comment out Windows smoke tests
crash reporter - fix runtime crash with invlid props (fix #130087)
Don't colorize brackets in markdown files.
Disable bracket pair colorization by default.
Locked groups: show lock icon even for inactive groups (fix #131559)
fix verification needed query
update settings description of locked groups (fix #131528)
fix test plan items query
Lock/Unlock commands should be context aware (fix #131585)
add python and jupyter repos endgame notebooks
Misleading lock icon in empty groups (fix #131586)
Locked groups: flip the lock icon (fix #131545)
Comment tweaks
Cleanup, use multi-stage Dockerfile to minimize size
Add API for setting kernelspec in ipynb files (#131219)
Skip webview test on web for now
Adding back open file/folder for web
Update distro
Unskip tests
Only log message if targeted webview is dropping the message
Don't skip webview tests
fix #131571
Update commit
:lipstick:
feat: add asWebviewUri test with port in name (#131447)
Add logging for origin mismatch
Close #125354
Keep `HorizontalPosition.originalLeft` (#131341)
Delay using `Math.round` as much as possible (#131341)
Pass in `lineNumber` to simplify debugging
Add missing region from terminal api
Editor that fails to load error message (fix #131509)
Editor error message alignment (fix #131511)
remove unused css
web - filter out *.crswap via `files.exclude`
Don't allow local open folder on web
Add Open in browser troubleshooting action
Add "Open Developer Tools" action when establishing a connection fails
skip packed extension if cannot be installed
Clarify extensions/commands can trigger interactedWith
Remove unused TerminalStateChangeEvent
editors - clicking "Try again" from placeholder should show error to user
add pythom to endgame notebook
Disable tests that hit the notebook webview (see e4a7f93ed3ffe016a61913a23e5ed34b35b181a8)
Also skip Notebook API Tests (see e4a7f93ed3ffe016a61913a23e5ed34b35b181a8)
Initial draft for web-optimized walkthrough (#131153)
fix #131439
Temporarily skip the notebook editor tests
Close #130153
Bump default webview commit
fixes #121094
debug: bump js-debug version
Don't transform data uris
Don't add to contentDisposables twice
Removes some flickering of inline completions.
Prevents cursor from entering injected text for good.
offer to auto detect ipynb cells
tweak wording
Disable parameter names hints by default
Remove log
Check origins on webview messaging
fixes #121201
Update distro
Update xterm
added feature to add keybinding to Copy Command Title(fix #131350)
fix #131404
Finalize #129053
update vscode-languagedetection
Have vscode.env.telemetryEnabled respect product config
move splitActiveTerminal into location
removed proposed API check for shortTitle, https://github.com/microsoft/vscode/issues/126457
Add notifications.hideList to commandsToSkipShell
action to open installed web extensions resource
Skip notifications.hideToasts in terminal
Implements language configurable colorizedBracketPairs property.
update distro
run oss tool
Properly duplicate TaskGroup
Update xterm-addon-serialize
update distro (fixes #131399)
Pass the desired remote host in `ITunnelConnectionStartParams`
No need to throw, `$setRemoteEnvironment` is only meant for the remote extension host
introduce undefined target platform
mime - parse file pattern to speed up matching
editors - introduce aggregated editors change event and adopt (fix #123864)
Log the extensions which cause the web worker extenison host to launch
perform shadow check if element outside viewdom node
update distro
Update mouseHandler.ts
pass promise to quickpick
Use existing property to avoid reacting to a model injected text changed event triggered via the cursor itself
Update jschardet package
Add comments
update endgame notebooks
Improve documentation (for microsoft/monaco-editor#2627)
re #128549
fix #125130.
History fails to show when first invoked on empty editor group (fix #131300)
More specific button label
Force EH search by default in Insiders
Don't hide Split Cell when editor is not focused. Other cell title actions don't work this way and it causes blinking
fix #131263
fix mime => metadata
Use `ContextKeyExpr` factory methods
Remove duplicated terms in OR and AND expressions (#129625)
Don't show panel when opening terminal editor
Improve order of terminal dropdown
Improve sorting of new with profile command
part of #131263
ci: update node modules cache
Edit status bar to fix grammatical issues
Web welcome banner support (#131179)
debug: do not show a modal dialog and a notification
Force new terminal editor button to create in active group
debug: use stride to try a wider range of ports
Only first group service active changed if changed group is active
render text and details, only detail supports mini-md
fixes #126210
Add more tracing for commands with multiple implementations
update distro
use donotIncludePackAndDependencies option when downloading remote extensions locally and install
tweak padding and position of button
update distro
tweak padding of button
support language status command, no more pin for now
Add support to list provided code action kinds when registering a `CodeActionProvider` in the standalone editor
don't call _resolveCodeLensesInViewport right after having added lenses because they still report "invisible" at that point in time, fixes https://github.com/microsoft/vscode/issues/131252
tabs - fix perf issue with opening many editors at once (#130634)
Allow HTMLElement as status bar tooltip
move statusbar from /common/ to /browser/
don't use 'services/statusbar/common/statusbar#StatusbarAlignment' from extension host, use boolean instead
Move extra `monaco.d.ts` content to the recipe file
Close #131095
fixed terminal settings point at invalid anchor (fix #130618) (#130784)
Add terminal location API (#131028)
Remove deprecated notebook output item fields
update distro
support universal target platform and web extensions
fix #125127
Update codicons: add `run-errors` & `folder-library` https://github.com/microsoft/vscode-codicons/commit/54359169075f29bbbbe11963b6744730436a45aa
Remove change state event interface
Make sure we dispose of one more disposable when rendering markdown
Register disposable
Register a few more disposables in notebooks
Use Disposable in a few more places
exclude extension pack from keymaps detection
no recommendation for now.
Make sure we dispose of CellOutputViewModel (#131146)
minimal support of quotes for ctrl+p file search
Update color structure
Remove unused variable
Register a few more disposable stores in notebooks
Make sure we register some more emitters in notebooks
More perf fixes after review
Ensure user can undo interactive.input.clear
use extUri to get extname
look at file extension instead of calling getModeIdByFilepathOrFirstLine and remove .txt from stdin files
only run on files without language mode association for language detection. fixes #131133
update distro
Extend `NotebookMultiCellAction` and move into contrib
WIP use html element as hover element, needs status bar adoption, pin in noop
no hover padding when showing html element contents, fyi @Tyriar
update xterm.js, fix #130967 fix #130406
Restore stats to search process telemetry
Change forceExtensionHostSearch strategy for easier testing
Keep search code sync when possible
Add a setting forcing search to run in EH
allows inline suggestion providers to interact with the suggest widget.
Don't restore selection from markers when there are no markers (otherwise a null pointer error is thrown).
adopt dynamic node module changes: avoid that loader config gets overwritten
Add logging
Have a `LazyStartExtensionHostManager` that starts the extension host only if necessary
Create -> Create New
Remove integrated from terminal commands, make consistent
support any HTMLElement has hover content, rename from text to content, update hover delegate indirection
Align terminal panel confirm with terminal editor
Introduce `IExtensionHostManager`
Change `extensions.webWorker` to be `auto` by default and add `IExtensionHost.lazyStart`
support universal target platform
use targetPlatform query param
asar - introduce alternative path to circumvent drive letter casing issues (#131161)
use latest version that is compatible with current target platform
improve workbench.editor.experimentalAutoLockGroups text (#131157)
file editors - use a custom language when opening binary files as text (fix #131076)
editor group lock - improve detection of editor already active in locked group
editor group lock - some final :lipstick:
editors - some :lipstick: to language detection code
Muted color for telemetry footer
Remove extra whitespace
Re: https://github.com/microsoft/vscode/issues/106679
Make sure we dispose of rendered markdown for notebooks
Introduce `typescript.tsserver.useSyntaxServer`
When an outputItems edit references an output that was created in the same batch of edits, look up the output id from the edit #130789
Update test peek view
Switch to dompurify
Rerender markup on trust state change
Allow images in md by default
Re: https://github.com/microsoft/vscode-jupyter/issues/7157
fix microsoft/vscode-jupyter#6582.
Add insane for notebook markdown rendering
Check that schemes match for resource loading
Allow empty extension location for internal notebook contributions
Adding compiled version of the electron.ts
Enable bracket pair colorization by default for insider builds to get more feedback.
Allow builtin ipynb serializer to override the cache in memento.
Update theme color strings
Update peek styles
update distro
introduce target platforms support
introduce validation for repos in trust table
update setting since we support non-untitled editors for language detection and clean up code a tad.
editor group lock - introduce a setting to auto lock groups
marketplace issues to isidorn
touch action none
editor group lock - indicate locked group when group empty
editor group lock - convert empty group menu to contributable menu
relax error handler after setting up the worker ext host, fixes https://github.com/microsoft/vscode/issues/129194
some :lipstick: and removal of conflicting keybinding, https://github.com/microsoft/vscode/issues/15533
add some more doc for shortTitle and call it done, https://github.com/microsoft/vscode/issues/126457
Updates bracket pair colors. Increases contrast for light theme. Makes blue color in dark theme more distinct from other tokens.
editor group lock - surface commands to manage locking in editor group
use hover instead of flyout
Implements #131033 (highlighting of unexpected brackets).
editor group lock - implement basic support for locked editor groups and add tests
Properly switch bracket pair trees even if tokenizeViewport already tokenized everything (and backgroundtokenization has no work left).
small API extension, experiment with pin-command
editors - use link widget in placeholders (#130971)
use obj "hash" for language features, fixes https://github.com/microsoft/monaco-editor/issues/2586
Improve dirty terminal editor wording (#130881)
fix(storage): fix method typo (#131051)
remove log
Re-introduce `Open a Walkthrough...` start entry
Tweak walkthrough ranking
Don't eagarly load getting started service (can cause workspace searches)
onNotebook:viewType required for serializer ext.
Add exploratory csp
Remove rhtml as deprecated type
Adding most frequently used file assocations
Welcome telemetry footer (#130641)
wait for extension register first.
resolve notebook serialize extension first and activate other extensions only on document open.
Guarantee frequent output updates #130789
Don't throw when an output item edit refers to a removed output #130789
Add hover feedback to editor find widget
make sure activeEditorLanguage is handled correctly
Optimize indentation detection
Support auto language detection for plaintext non-untitled files and add .txt back to piped in text
Actions for customize layout
fix menu build.
Update TS version for building VS Code
Perf improvements to the ipynb serializer
Inherit renderDropdownAsChildElement for toolbar action view provider.
Update distro
update distro
Introduce  `workspacePlatfrom: webworker` context key for serverless contexts
update distro
Add terminal keybinding for cmd+. ‚Üí ctrl+c to match macOS Terminal
Add workspace.isTrusted to renderer context
Better type webviewPreload argument injection
Transfer notebook output as VSBuffer (#130452)
[debugService #113742] variable display on debug session ending
move language status service to workbench
add fly-out UI for language status items, tweak API proposal
clean up gallery extension
Update distro
Sync unicode version with persistent terminal processes
Use serialize addon off npm
remove language status from editorStatus.ts
DAP: add memory event
simplify proposed changes
Update distro
Update xterm.js
fix margin for extension actions in extension pack view
When injected text changes, only call setCursors when the cursor position also changed. This fixes #130982.
move language status service to workbench
remove staticExtensions api
fix link
web - show a warning for unsupported browsers
typo
fixes #130909
:lipstick: editor placeholder
limit "Open Folder" to local/remote only
explorer - update context keys for workspace related actions
more workspace actions enablement tweaks
remove reference to "Experimental"
add overflow ellipsis fixes #130935
Close #121778
Pick up marked 3.0
Reduce number of listeners we register for webviews
Use more generic title for code action lightbulb
refactor github auth to be a bit simpler. Remove PAT for GitHub auth since Settings Sync doesn't allow for it and add timeout so that GitHub Auth is not stuck.
more notebook layout tags.
Make text links in panel visible on focus (fixes #130920)
peek type hierarchy
bot: zen mode issues to Jackson
use opener service to open link always
remove .txt from stdio files so that language guessing is easier (#130917)
add common.isTouchDevice
Do not auto focus on ios
update isWebExtension check in built script (fixes microsoft/vscode-internalbacklog#2295)
 We need to pass focus to other sessions / threads with a timeout in case a quick stop event occurs
update doc, fixes https://github.com/microsoft/vscode/issues/129513
Only show the error when showUser is either not defined, or is true
Move TaskGroup isDefault api out of proposed Part of #79188
fixes #110431
workspaces - properly set new `EnterMultiRootWorkspaceSupportContext` context key
debt - decouple empty workspace support from enter multi-root workspace support
electron - set `v8CacheOptions: none` when code caching is disabled
update my work milestone
debt - convert all workspace actions to action2
editors - fix tests
web - mitigate playground no longer starting
categoryDescriptor => descriptor
Lots of cleanup in to getting started. (#130892)
Adapt max supported size.
Ensure that reordering brackets does not force reparsing.
Keep editors open instead of closing them when loading fails on startup (fix #110062)
Support a dynamic amount of colors.
Don't enable bracket pair colorization for large files.
Adjust capitalization of "ID"
testing: add 'never' option to auto open peek
testing: add expected vs actual labels on output
testing: allow opening test output in separate editor
testing: correctly size test message, fix arrows not working when focused in nested editor
testing: fix duration computation being incorrect
testing: support ranges in test uris
testing: add gutterEnabled setting
testing: fix welcome not initially showing
testing: update search to use new category
:lipstick:
insert cell and focus container.
notebook.cell.executeAndFocusContainer
shift enter turn markup cell to preview.
Support clickable links between markdown cells
No need to call toLowerCase on tagName
Remove root path from local notebook roots
Remove unused and mark private
Bump distro
Move to "Auto Detect" in language picker and use smarts in Auto Detect for non-Untitled files
fix: maxResults config value is now applied to searchEditor (#130531)
Bump distro
Add expiration to typings
Avoid duplicating modules in worker bundles
Reduce duplication of `createModuleDescription`
:lipstick: formatting
explorer - disable empty view drop in web
Update distro
Dispose of terminal at end of onDidChangeTerminalState test
Register Code as an editor for supported file types default ON
Use a getter for onDidWriteTerminalData
Add listener to disposables array
web - better error handling with guidance
files - drop `query` and `fragment` from URI when using `findSuperstr` (fix #128151)
web - change handle ID to be part of query, not path
use Schemas.command constant instead of string
web - fs to use proper extUri
Suppress 'Open launch.json' command on error dialog if DA provided a command (#124020)
notebook layout optimization memo.
Ensure privs are correct
chore: bump distro
fix #130733.
calcuate index of visible viewport
Use correct assert import
testing: support for test tags in search
warmup viewport above will lead to more flickering.
Remove old not-null assertion
Don't hardcode inline code font size
Pick up TS 4.4 rc
Don't return trigger characters for ambient JS suggestions
Add test, finish piping through interaction event
Don't use `|` in `@link`
Implement Terminal.state and event
Start of change state event, clean up ext host events
rename language detection setting and ensure one worker gets created
Remove experimental serializer log
Update distro
explorer to Jackson
fix: build native modules with CFG (#130529)
Disables header eslint-rule for src/vs/server/*
Remove console.trace
Update distro
Add xterm-headless to remote
Use xterm or recorder based on setting, not both
Update xterm-headless
parameter hint: announce docs
Update xterm-headless
Bump distro
Update xterm-headless
fixes #127415
make sure to save launch config before debugging starts to have freshest content
:chore: sqlite3 module (#130654)
update distro
workspaces - :lipstick: action label
chore: bump distro
tests - try to make some tests more robust
chore: bump distro
avoid flickering with unitialized cell height.
Revert "fix missing markdown cell rendering on restore."
fix #130637.
nulling notebook text model properties.
fix missing markdown cell rendering on restore.
Remove logging messages
Remove unused
fix some typo in comments, renaming few methods (#130470)
Organize imports in ext tests
testing: allow toggling test output visibility
Pick up ts 4.4 insiders
re #128173. remove edit stack on cell dispose.
fix #128173.
revert undo/redo fix for scrolling. fix #130607, #130617
Don't hide "run above" and "run below" command while in a run-by-line session
Better cell execution lifecycle
Ensure final cell execution update is not delayed
show progress when cell input is collapsed re #130611.
testing: update tests
testing: update content provider
testing: initial output correlation
NotebookExecutionService should create execution objects Towards #125668
Add NotebookExecutionService Towards #125668
Bump distro
fixes #122775 fixes #128132
fixes #126746
Use the new loader format for web selfhost (#130592)
Disable telemetry in tests (#130591)
initial support of QuickPickItemButton API (#130519)
Bump path-parse from 1.0.6 to 1.0.7 in /test/smoke (#130540)
web - use `suggestedName` property for save dialogs (#130034)
Reconnect scrollback setting
Update xterm-headless package
web API :lipstick:
Only dispose TerminalInstance.onExit when it's already disposed
Bump distro
Don't make stopForceRenderingAbove create the widget.
debug: bump companion verson
Revert "Dispose of TerminalInstance._onExit only on instance dispose"
web - guard against exception thrown from picking file/folder when user cancels
Dispose of TerminalInstance._onExit only on instance dispose
debug: detect links in Variables, Watch and DebugHover
Screenreader prompt "Inline Suggestion:" -> "Suggestion:".
Complete the browser local file system provider (#130555)
Updates colors.
Update seti (refs #129894)
Pick up newest TS for building VS Code
Update api query
Enable contributing to cell execute dropdown Towards #130524
testing: run what you see
Revert workbench.html changes
Move webNodePaths to run on compile since we rimraf out
execution count misposition on expand.
tooltip for double click.
show hover background and tooltip for expand ... icons.
hide split cell button on input collapse
Bump path-parse from 1.0.6 to 1.0.7 (#130501)
Dynamically generate web package paths
refs #121089
Update extension telemetry module
üíÑ
expand/collapse actions order.
Finalize terminal color API (#130123)
üíÑ
Remove Map from Tree dnd API
Update grammars
fixes #126102
In case the debug toolbar is docked we need to make sure that the docked toolbar has the up to date commands registered
Await xterm writes before resolving reuseTerminal
Adds tokenizer test.
:chore: remove unused type
fix #119776.
testing: add support for test tags
fix #130432
re ##129781.
Remove only
Try to encode authority for asWebviewUri
Pick up newest TS versions
move add button out of trusted table
fix #130305.
Update extension telemetry module
remove extra ;
search editor - drop legacy backup migration
use ThrottledDelayer fixes #130315
file working copy - implement save participant support
add compliance pipeline (#130289)
update watch view when set expression
Renamings + more tests.
More fixes for #126408: Support changes in vscode-nls-dev that allow hint comments in package.nls.json
Renames ImmutableSet to SmallImmutableSet. Adds tests.
move run/debug contribution to debug; fixes #130385
Reference config file in rich nav action
editors - `findGroup` can return `undefined`
web smoke - guard against failing tracing
Mention building browser integration test code
delete commented out code
Add Jupyter language with JSON syntax highlighting #128495
unable automatic language detection by default
Copy URI authority from base when splitting terminals, fixes #127811
Add note about incognito mode
update seti theme
terminal: ignore parse errors from typeahead color
fix: delete lockfile asynchronously
update to languagedetection 1.0.18
part of #130192 move default profile to top of dropdown list
fix #130199.
update seti theme
re #128173. handle focus on markdown preview
no more undo command test.
fix #130230.
Improve performance of language detection (#130006)
re #128173. Only handle monaco editor textarea.
fix #128722
fix #128173.
code cache - properly support disabled code caching
fix #130268
web - implement delete for `file` fs provider
web - register `file` fs provider only when available (#24)
web - use underlying platform for determining case sensitivity (#24)
fix: CXXABI requirements for older distros (#129360)
Load telemetry module in an async manner (#130193)
Use new TypeScript LSIF indexer
dialogs - do not allow `cancelId` to point to a button that does not exist
web - fix dialog cancel id for failing to open a window
Registers bracket pair colorization as disposable child.
watch: cleanup setExpression calls
debug: Set Value should be disabled for readonly variables
fixes #127721
Adopts bracket pair colorization.
Implements bracket pair colorization.
Adds bracket pair colorization options & colors.
Adds flag 'backgroundTokenizationCompleted' to IModelTokensChangedEvent.
Relative path separator not used when no formatting available (fix #130019)
notebooks - use resolver for untitled factory
Update commands.json
chore: bump electron@13.1.8
chore: harder checks around universal build creation
notebooks - adopt untitled support in resolving for main thread documents
notebook - wire in file path association down to model
notebook - make resolver fit to for untitled resources
notebook - saveAs should not ask for file path if model has associated file path
document `IUntitledTextResourceEditorInput` better
editor resolver - allow input factories to return a Promise
fix: native module bundling in universal builds
fix #130187.
fix #124281.
Change exportNotebook API to return string
Mark embedded template expressions as other
Add organize to ignore list
fix #127576.
fix #124807.
fix #125235. Add zindex const enums
Organize imports in vs/platform
Persist KaTeX macros across render calls (#129747)
Remove strings.encodeUtf8
Update math fixture
Only include prod node_modules from extensions
Exclude a few extra build files from build
fix #127901
Support manual trigger for rich nav indexing
Enable Rich Nav logging
Add ipynb extension API to invoke the serializer. So the jupyter extension can implement custom Export functionality, and can dump an unsaved notebook #128495
Bump version
debug: use simple port attachment for launching main porcess
fix #130025.
update distro
workspaces - clarify docs around `workspaceFolders`
Implements #129053 (#130103)
debug: show set variable if set_expression is set
Update rich nav indexer
smoke - enable screenshot option for failing smoke tests
Send out a setExpression for debug extensions that do not support set variables
introduce setExpressionSupported context
smoke - fix web smoke tests
smoke - always create test folder
smoke tests - drop 'tmp' and try to deal with tmp path ourself (#130102)
feat: add .tpp and .txx as c++ extensions (#130101)
smoke - better exit application handling
dnd - only add out of workspace files to recently opened (fix #128925)
smoke tests - try to fix data migration test (#129279)
fix #115084.
Add entry to ignore
Organize imports in vs/code
Simplify preferencesService open code
Add remote (json) command, fixup folder settings more
Rename openGlobalSettings
Support settings openToSide and begin refactor #123282
fix #111886.
Make sure we always try rewriting domUris in markdown strings
Organize improts in webview / custom editors
Add organize imports PR to blame ignore
fix #122710.
Adds MarkdownString support to SCM validations
fix #115147
re #118039.
fix #121807. Turn notebook to dirty if the output changes.
allow setting contributed profile icon to a URI or URIs (#130139)
fix #129783.
Organize imports in vs/base
introduce "debug.console.acceptSuggestionOnEnter"
fix #121100. PausableEmitter
Reverting #125570 (#130126)
more terminal setting prefix usages
use terminal settings prefixes
fixes #127721
Refresh explorer when window gets focus to compensate for missing file events
Help emmet settings show up in settings editor
fix #121523
smoke tests - retry data migration tests on windows (#129279)
fix #129858
pass untyped terminal resource to editorService (#130113)
Centralize query parameter cleaning /cc @bpasero and @aeschli
combine splitInstance with createTerminal (#130106)
web - fix integration tests
storage - init workspace storage again on reload/load of window (#127421)
smoke tests - fix compile issue
debt - delete `apiCommands` (fix #110583)
smoke tests - try other ways of ensuring the editor is open for data migration (#129279)
cli - handle unhandled errors (fix #128854)
workspaces - do not offer to open workspace file from virtual workspaces
vscode.d.ts - clarify how to open an untitled file with associated file path (for #129060)
IntervalCounter flaky web test (fix #129774)
Remove dependency on node require for startup code path (#130088)
watcher - refuse to watch `/Volumes` to mitigate #106879
Remove old cast
Add katex style to root of notebook
Skip failing test
Hide notebook getting started commands from f1 when disabled
Make methods async in prefService
fix auth test failure
add telemetry for provider usage
fix #128391.
render command full title as tooltip.
optimize cell collapse dom structure.
Add support for rendering `@linkcode` jsdoc tags as code
Add on Error handler for ts worker
testing: fix clear results leaving progress text
main: address lockfile polish
debug: fix platform configs requiring unnecessary properties
delete extra afterTokenLoad
rename forceRecreate to forceNewSession and allow it to take in a detail
ci: fix keychain (#130068)
no longer call /user to verify tokens
Increase inputbox width, fixes #129469
add new label assignment
Organize imports in md ext
Organize imports in TS ext
debug: remove legacy debuggers and bump js-debug
Register disposable
Enable rendering highlighted code in the settings editor
Build ipynb extension before integration test
Enable param name inlayHints by default for TS
Revert "Revert "Update to build with latest TS version""
:lipstick:
Add integration test for opening a ipynb file
Port unit tests from vscode-jupyter to ipynb extension #129446
move run above and below (#130009)
pass ActionRunner into DropdownMenuActionViewItem; fixes #130059
Deduplicate decorations since same variable can appear in multiple scopes, leading to duplicated decorations
support SVGs with splitbutton; fixes #129599
yarn web fixups
Task spinner not showing in the status bar (#130050)
Only show run to line if debugger is in stopped state.
workbench.action.tasks.build no longer triggers build but opens a list of tasks (#130043)
debug session: respect lifecycleManagedByParent
Set context key on more than just the working tree
Implements run to line.
sandbox - enforce `file` URI for `DownloadURL` transfer (fix #128975)
storage - remove legacy state migration
bump distro
fixes #130026
web - guard against error from stopping tracing on tear down of tests
lifecycle :lipstick:
web - attempt to implement `ILifecycleService.startupKind`
web - back to awaiting state flush on reload/close
web - do not flush storage twice and leave reload/close sync
web - try to flush storage on reload and close
web tests - print page errors to console
chore: bump vscode-universal-bundler
Split up ipynb serializer file
Serializer cleanup
re #111769, dismiss only when scroll top changes.
fix #111769.
Hide non-functional walkthroughs in virtual workspaces
Remove import to missing html file too
Remove import to no longer present css file
Revert "Update to build with latest TS version"
fix #129914.
Don't use `| null` for ts config
Restore color definitions
Remove legacy welcome page code Closes #130005
Update to build with latest TS version
Bundle TS 4.4
debug: add indicators to differentiate debugged worker ext hosts
don't use webgl for ipad
fix: improve test explorer active document filtering to exclude childless peers
Bump telemetry module to fix packaging
Update lock
fix formatting
Add to remote dependencies
fix #129615
Start without debugging should not register breakpoints
fix #129296 keep authority, query, fragment when navigating simple file dialog (#129310)
classifier - restore my assignment
editors - document why we activate
Bump distro
Reset timeout
Bump distro
Makes eslint-plugin-header a dev-dependency.
fix typo in variable name
Revert product version bumps due to broken CI
Update opacity on hover on top insert toolbar
Bump product.ts product version
Remove python and jupyter repos from endgame notebooks
Set mime to markdown when changing to markdown language mode
Bump OSS version
Add livepreview repo to endgame notebooks
log status code on failure
Improves inline suggestions to work with screenreaders.
fix #127198.
fix #128770.
testing: fix test document filter not working with parent dirs on windows
fix #129791
Add help link to the dialog
Prevent loading at -1
Revert "Try to handling paths with encodes percent or slash"
Add full name for link
testing: improve wording for TestController.items
consistancy of label/body
Temp: swtich image rendering pref from svg to png
fix #128999.
Add a special entry when disassembly is unavailable
debug: fix alignment of breakpoint decoration
testing: include test context in gutter menus
fix test.
fix #129776 and fix #128301
no more diffing when it is simple replacing.
Try longer timeout
fixes #129510
fixes #128400
re #129738.
Close #127455
Clean up
Move event listeners to renderTemplate in disassembly view
fix #128499.
do not scroll when the first cell of the document update height.
Add open disassembly command to call stack and command palette
use correct service for detecting changes and up debounce
Open Disassembly View should be present but disabled
fix #129477.
Do not show file recommendation for .interactive (#129704)
fix #129318 capitalize editor Find tooltips conventionally (#129320)
Improve accessibility in disassembly view
fix #129587. Do not update the toolbar when dropdown is visible.
use csigs bot for L10N issues
Focused stack frame colors
fix insert code/markdown
add vba to extensions in the vb extension so that language detection works
remove (auto) because it shows up without the language detection setting being on and we planned on removing it anyway next iteration
clear this.threadIds on clearThreads
Add setting to hide title on notebook toolbar.
fix languageDetection throwing an error due to not handling empty array case
keep custom editor when editor assocaition is available.
remove unneded comment
Enable recommended:languages search by default
fix #129622
update endgame ghnb with python/jupyter
fix #129498
Update vscode-languagedetection to fix language detection crash on large file. fixes #129597
Add forcePosition hover option, restrict extension hovers
fix link colors in extension editor
do not show settings sync off badge if settings sync is enabled
log error message
fixes #129684
UX affordance when settings are only initialized but sync is not turned on - Show the badge on gear icon - Have an action in gear dropdown to explain and turn on sync
fixes #127959
debug: do not show debug quick access picks when there are no debuggers
fixes #129039
fix #129629.
update default profile in dropdown when set to contributed one (#129619)
fix #129551.
change seedSearchStringFromSelection to enum never, always, selectionOnly (#128659)
fix #126087. insert toolbar covered by output.
Larger initial view size in disassembly view
Revert "fix: preserve VSCODE_BROWSER_CODE_LOADING when launching external terminal"
Add jupyter and python repos to my-endgame notebook
Clairify enumMemberValues only applies to declaration
Add language to example code blocks
Add examples to inlay hint settings
Move "install renderers" prompt to the end of the list
add fallback for non-themeicons
debug: bump js-debug companion
ipynb: fix readme
Clone process.env to ensure source of truth is not changed
Filter out null values before they get rendered
Double clicking on instruction breakpoint passes focus to disassembly view
Use a better error message for #129584
fix switching to insiders when settings sync is disabled
increase the bottom toolbar height to 20.
:lipstick:
polish insert toolbar height and hover feedback.
update undo/redo.
debug: bump debuggers
Dispose newWithProfile before registering again
testing: show configure button by default on test config qps
Revert "Comment out smoke tests on windows"
Revert "Enable run button when a kernel extension is missing"
remove preview dialog
Comment out smoke tests on windows
fix: remove useless priority field in vscode.FileDecoration api
Cancel edit when leaving widget (take 2) (#129458)
Use readonly for event fields
Note that inlay hints require TS 4.4
Small comment cleanup
Remove deprecated lang param from privacy URL
update who to assign
Revert "Update webviewExternalEndpointCommit"
testing: make gutter menu contributable
Normalize mimetype select action name
Normalize mimetype string
assign csigs and I on L10N issues
Add troubleshooting step for tmp module
testing: don't apply un-clearable error to test root
testing: add explicit 'peek error' action to testitems
testing: docs polish
Update webviewExternalEndpointCommit
Use right bg colour, fixes #129453
chore: bump distro
Add validation for boolean values, affects #128429
Settings description typos
Bump distro
testing: fix label not applying to root by default
Don't show open-file entries on web
Update to the latest extension module
Init shell env in pty host service (#129275)
Ensure ipynb serializer supports node env and large # of outputs
fix 128354
Improve wording for telemetry settings
fix #129427
debounce change event in language detection
Enable run button when a kernel extension is missing
Add notebook context key for whether an extension that provides kernels is installed
Remove redundant comments
update vscode-languagedetection to 1.0.14
show recommendation only there is reason
enable extension install/uninstall stats in web
Update notebooks for endgame
node-debug@1.44.31
use DAP 1.48.0 final
Update endgame notebooks
fix yarn web
improve hover messages in remote workspace
Re-add task default API with fixes (#129397)
Revert task terminal line debouncing
use an unnamed inner class
decode output item buffer.
fix #128765.
chore: bump distro
workaround cyclic JSON issue in DropdownWithDefaultActionViewItem
[themes] code assist insided extended syntax, remove experimental
[html/css/json] update services
recognise .geojson as json, fixes #129329
Return `NotebookEditor` from `interactive.open` command (#129084)
Remove console log
fix: preserve VSCODE_BROWSER_CODE_LOADING when launching external terminal
Report correct locale for language pack recommendation
re-use text encoder
ipynb extension need not handle `NotebookDocument` and `NotebookCell`
testing: comp error
testing: peek and explorer ux feedback
debug: remove committed trace flags in js-debug debug
testing: add errored state
Migrate webview notebook editor backup to builtin serializer (#129211)
Add a bunch of logging to github-authentication
de-duplicate isSplitTerminal/sideGroup (#129272)
Add validation for objects, fixes #128429 (#129066)
change setting to workbench.editor.untitled.experimentalLanguageDetection
Update "renderer not available" message
update auth extensions to use packageJSON property instead
default contributed profile as editor terminals and make createContributedTerminalProfile private (#129261)
maintain promise instead in github-auth to ensure the exp service doesn't get created twice
ipynb: Prefer "workspace" to"ui" and "web" is inferred from the browser entrypoint
lazily load experimentation service in github-authentication
When injected text is added or removed, cursors in that line need to be normalized again - otherwise they could be positioned inside of injected text.
support editor selection in default layout
Remove unneeded disposable
fine tune the help link
Update a variable name
Update method name
workbench api: additionalTrustedDomains
fine tune cannot install message
await create terminal call
enable setting an extension contributed profile as the default one (#129197)
Remove inlined xterm headless
Node target and serialize addon wip
Remove EOL
Whitelist comments in all JSON files
Add explicit list of types
Don't include node types in markdown-math
remove unused variable
Rework github authentication extension to make less HTTP requests.
Show "Select Kernel" in jupyter notebooks without the jupyter extension installed
Add "source" property to commands for displaying in menus
avoid double toggle actions.
Don't include `@types/node` in image-preview extension
Remove `@types/node` dep for simple browser
Try adding browser specific tsconfig
Don't use custom tsconfig settings for markdown ext
testing: remove proposed check
Sort mimetypes to separate unsupported ones
Add "install additional renderers" prompt to mimetype picker
Naming Telemetry
Add telemetry to autoOpening
fix recommendation icon color
finetune recommendation text in extension editor
improve status representation in extension editor
exclude languages from language picker normal section if they are a detected language
fix ##125551. Move actions into overflow menu when the editor is narrow.
expose actions from toolbar.
fix #128999.
improve heuristics around language detection and show detected languages in language picker
Use TextDecoder instead of Buffer
update doc
Always consult exp service for . in walkthrough id vs #.
testing: pull autorun, for now
testing: docs polish
debug: bump debug packages
Update commands.json
Update commands.json
Update commands.json
Use editor service over command service to split terminal editors
fix @link-comment
acquire the mainLockFile asynchonrously
jsdoc :lipstick:
escape text before adding
:lipstick:
fix more info container
fix padding
fine tune hover and extension status
rename extension status action
show recommendation at the end of the hover
Create terminal editor to the side command
Remove any from terminal editor split
fix no type to filter in lists, web
Remove getdisassemble as it is not used from DebugService
check correct capability supportsInstructionBreakpoints
call sendInstructionBreakpoints for persisted breakpoints
Rename TestSnapshoptTaskState to TestSnapshotTaskState
Try to handling paths with encodes percent or slash
Remove unused class
Terminal profile enum tests, fix arg formatting
Provide intellisense for newWithProfile command
Throw when terminal profile isn't found
Update notebook cell collapse rules and work around class conflict with codespaces splash screen, see #129090
Add Auto to Language StatusBarItem and honor user Language Pick
fix comment for statusbarentry
Implement dnd for array settings (#128884)
testing: improve wording
finalize testing api :tada:
testing: api feedback
Simplify TextDecoder call
Clean up ipynb serializer
Rename serializer extension and set up build scripts
Serializer code
Prompt users to update TS versions before reporting issues
Use static list of commit characters
Use o for paramter names
Give min height to steps content
Revert "Revert "Remove telemetry appender from embedder API""
Revert "Remove telemetry appender from embedder API"
focus the terminal when it is touched (#129128)
Improve stepping UI
Delete unused cell renderer parts
Freeze notebook doc metadata
remove vscs_target for prebuilds
Test getInstanceFromResource
Only set active on last dropped instance
Test terminal drag event parsing
notebooks: renderer messaging feedback
Remove telemetry appender from embedder API
Freeze notebook cell metadata
report empty respone with 304 status
Use intervale in task terminal debouncing
use color constants, https://github.com/microsoft/vscode/issues/129037
turn language status API proposal into push model, https://github.com/microsoft/vscode/issues/129037
use default hover delay time
Use TimeoutTimer instead of node timeout
update distro
Add line data debouncing for background tasks
:lipstick: for NotebookRendererMessaging, fyi @connor4312
Remove postAttachCommand from waitFor enum
first cut for language status API proposal, https://github.com/microsoft/vscode/issues/129037
api todos
:lipstick: ResourceMap ftw, fyi @sandy081
Adds files to .eslintignore that are not linted by "yarn eslint" to ensure no CI errors => no editor errors.
fix logging additional builtin extension ids
Remove 'collapsed' css class
Better go to address
fix #129075.
Improve instruction breakpoint tooltip
Implement the auth test differently to not use assert.rejects
attempt to fix auth test
improve hash for uintarray.
testing: move apis to finalize into their own section
add proposed forceRecreate option on getSession. Related to #129064
bump distro
dnd terminals bw windows in panel and fix moving from editor to panel (#128875)
testing: update api from feedback
support title in interactive window.
Add run button to the interactive window input.
style iw input editor as a code cell and relayout per notebook option change.
Add description back to bool object renderer Affects #129059
Quick pick icons vertical alignment fix. (#128950)
rendering fix for new run/debug splitbutton
notebooks: update renderer messaging api to feedback
testing: improve test explorer context keys
set cors mode
new DebugSessionOption 'lifecycleManagedByParent'; fixes #128058
walkthrough: Update deprecated property name (#129041)
fix tests
add settings sync help command
Allow files to be open from browser
Use dirname instead of splitName
folding navigation: rename from jump to goto for #128450
support opting out of extension as web through settings and product
more API todos
add necessary headers to extension gallery resource requests
enforce compile check for proposed API too, ignore existing errors
üé®
not adding machineid header due to CORS error
add machine id header
Update css grammar
more API todos
Remove test equation
Omit background tokens for now
fix notebook content provider readonly
use prebuilds bot
Remove cell keybinding hint statusbar items
Add flag for "simple" debug UI (#128801)
Revert "Add cachedHeight and onDidLayout, fixes #128563"
Disable open disassembly action when a stackframe without a instructionPointerReference is selected
notebooks: stablize createRendererMessaging
handle output height update properly.
include model in web package
Check if process exists
Use better error code if webview resource load fails
Improve layout for narrow view markdown
fix themeScopeRegex regex
chore: bump electron@13.1.7
Add bind to resolve loss of this context
registerThemingParticipant
fix empty history.
Add cachedHeight and onDidLayout, fixes #128563
Step back
Pick up latest TS nightly for building VS Code
Remove now unused notebook markdown css
telemetry: include debug adapter telemetry in trace logs
auto scroll
testing: update test types for feedback
add web extension kind always if extensions supports web
update seti theme
foldingModel: fix eslint warnings
rename to `enabled`
do not show runtime status icon
listen on container to show hover
confirmOnExit default to never
support enabling extensions through environment
some more jsdoc for https://github.com/microsoft/vscode/issues/15533
:lipstick:
Add auto folding for imports spans
also add tsconfig.vscode-proposed-dts but don't enforce it yet
add vscode-dts-compile-check to ensure that vscode.d.ts is self-contained, esp that it doesn't depend on vscode.proposed.d.ts, and that uses es5 only
FIx #128844
remove title override in new file menu contribution point
Change location of Show More Walkthroughs link Closes #128860
define window.MonacoEnvironment
Update select to matching bracket direction
platform/configuration: add unit test for #128909
platform/configuration: fix empty keys being ignored by configuration parser
finetune extension editor
fix extension hover when activitybar is on right
testing: fix comp error
change setting to workbench.editor.untitled.languageDetection
Add transparency
testing: fix show only in active document not working
Initial support for language detection (#128708)
Add interactive cell color tokens
Remove the built-in markdown rendering for notebooks (#128806)
Revert a test change
Improve stepping
testing: lazily expand root level items, too
Ensure external terminal cwd is a local path, use canonical
testing: update more nits
Update distro
xterm@4.14.0-beta6
testing: make test ids locally unique, instead of globally unique
testing: clean up nits
notebooks: remove old renderer api
re #119776.
Support setting color in TerminalOptions/ExtensionTerminalOptions (#128856)
Don't use text link color on walkthrough close hover
bump distro
bump distro
clean up terminal dnd
Show * as bell in terminal dropdown
Add RequestStore helper, adopt in ptyhost and add timeout support (#128793)
Remove private field from constructor
no modern JavaScript for us
remove buffered output channel model
Remove debug logs
Update distro
fix compilation
respect donotUseFormatters option
Re-evaluate webgl terminals every session
Move gpu acceleration clearing to before updateConfig
Remove replaceAll
Improve ctx key names and documentation
Move terminal context keys into file/namespace
Ensure combined appenders respect product id too
Add product identifier to telemetry appender
smoke: fix vscode-test cache location
Move terminal storage keys into own file
Consolidate terminal storage keys
use loggers
Debug logs in test
Show hover immediately when moving from related icons
Make task _id readonly
Tree data transfer dnd (#128666)
Revert "skip failing tests - #128828"
Never pick local term service as primary if it's not there
:lipstick:
oops
fix screenshots in smoketests
skip failing tests - #128828
:lipstick: fix list startup scroll sensitivity
only sync if local exists
remove traces of web resources
:lipstick:
Failing test: Revert "Add isDefault to TaskGroup API (#128596)"
#128816 skip failing tests
Spelling
Make sure we register event listeners
Spelling
Don't create wrap in extra promise
Remove leftover cellBreakpointMargin ref
Always show breakpoint margin in code cells. Hide folding gutter
Show disassembly view when clicking on instruction breakpoint in breakpoints view
Don't reset visibility of cells on webview reload
Remove message subscription once it is no longer needed
Update Codicons https://github.com/microsoft/vscode-codicons/commit/8f7166e921484ef0a763ac7b0ca9f65b67e306d6
Update inlay hints when inlay settings change
Add missing word in comment
Update inlay hints default colors (fixes #128157)
fix #126259.
Revert "move off sidebyside editor input."
Also check instructionPointerReference to decide which editor to show
Pin the built-in interactive window on creation (#128789)
fix alignment
fix vertical pointer position
add startup activation reason
bump distro
drag and drop terminals tabs between windows (#128505)
re #128373.
bring back description
Improve hover - simplify it
remove tags
Update terminal command names with new terminal group concept
Add isDefault to TaskGroup API (#128596)
make sure to run eslint in ci
Remove child process monitor logs
much lower min debounce for inlay hints, https://github.com/microsoft/vscode/issues/128159
fix missing nls entry
Update distro
fix copy-paste issue
Document term config changes
fix tsconfig libs
Expand confirmOnExit setting to allow always or only on child proc
Have confirmOnExit check child processes
Handle confirmOnKill properly in panel
Add confirmOnKill setting, handle prompt special cases
setParentFolderTrust should use canSetParentFolderTrust
Remove redundant types
Handle remote dirty editor case
add type hierarchy API test, fix conversion direction for arguments, also fix call hierarchy
Use readonly over getters for process manager events
Get terminal editor dirty state tracking working
Create child process monitor
extract ref-counted disposable
fix https://github.com/microsoft/vscode/issues/128730
fix TypeHierarchyItem validation
test API nits
update issue reference in proposed api
remove unused data field
Use consistent method for checking whether trusting the parent folder is possible
implement isTypeHierarchyItemDto
check proposed api enabled status
do not render additional details sections if do not exist
remove max width
remove links
add type hierarchy provider
Disable suite instead of just test
Update README.md
testing: improve test children API
Disable env var collection test on Windows
Make the `openDefaultSettings` setting have the same behavior as `useSplitJSON`
fix width
Update quick pick
scrollable details container
Simplify split JSON settings editor
rename to last updated
fix label
- show tags - show more info - release and last updated - fix packs
Add terminalEditorFocus ctx key, remove dupe onfocus event
Make walkthrough svgs interactive (refs #128581)
Improve additional details
Resize terminal when it's shown
Fallback to 80x30 dimensions in terminal
Remove unused webview session registrations
Also allow clipboard-sanitized-write in webviews
Update to build using latest TS nightly
resolveExtensionHostDebugEnvironment: give precedence to payload
Simplify bool object renderer impl (#128696)
show license and repository links in separate lines
- show install and rating in hover
update request-light
show categories and resources
- bring back description - move back install count and ratings next to title - do not show ratings and install count for installed - introduce mini layout
Add a bit more space to the split dropdown
Sort threads in response order
Add telemetryAppender embedder API
upgrade DAP to 1.48.0-pre.0
When a decoration and injected text refer to the same model position, injected text is preferred. This resolves a conflict with gitlens.
fix preview color
do not render categories in hover
Clean query paramters from ext name
Improve hover: - Reviews link - Preview - Categories
IContextKeyService -> IConfigurationService
add missing semicolon
add runtime status section
Add lsifrc file
Adds afterInjectedText to IThemeDecorationRenderOptions.
Extends CodeEditorService so that rich decorations can be registered for injected text. Adopts injected text for inlay text.
Resolve all time-based snippet variables using the same time
add extension hover class
support opening extension editor tab
use setup customhover util
override `importScripts` with error-function so that web extension cannot use them, https://github.com/microsoft/vscode/issues/128080
fix defaultLayout with contributed fs providers
chore: update to electron 13 (#124666)
Decide focus based on stop reason and stepping granularity
testing: fix flat projection
testing: complete test run experience update
Allow overriding animatableness of welcome page via exp service
fix tooltip and status
Start to adopt "Reduced Motion" ref #128595
fix info css
improvements to extensions view - rich hover - simplified extension view - add extension runtime status info
Close #128581
IMprove filtering logic
Close #128579
Getting Started -> Walkthroughs Close #128580
More styling
Styling tweaks ref #128555
fix: parsing of no-sandbox flag
Add default value if it is missing For enum renderer, fixes #128367
Bump node2
Disables auto-fetch in untrusted workspaces
Improves¬†Git¬†security¬†with¬†untrusted¬†workspaces
Add getNonce function to generate webview nonces
Remove reference to electron-index
üíÑ
Improve defaults for dockercompose language
Revert "When a decoration and injected text refer to the same model position, injected text is preferred. This resolves a conflict with gitlens."
When a decoration and injected text refer to the same model position, injected text is preferred. This resolves a conflict with gitlens.
Refatcors LineDecoration.compare.
Don't prepare ghost text if using injected text.
fix #128044
sanitize process env for external terminals on linux/mac (#128501)
proposed API: better name lifecycleManagedByParent
Update cpp and objective c grammars
run localizations cache update as participants
Adds forgotten await.
Makes history public (readonly).
Use setTimeout instead of process.nextTick.
dispose in teardown, not setup
Don't bind functions that don't exist.
Implements custom time travel scheduler that provides more debug information.
update request-light
move off sidebyside editor input.
almost complete update for run configurations
Add workflow_dispatch
update distro
move to using an id token for settings sync
testing: add test configurations api
make dropdown arrow larger to meet accessibility requirement (#127839)
Resolve promise when workspace state changes (#128344)
Debt: do not store the trust state in the request service
Allow readme to be displayed if defaultValue is set (#128240)
fix #128044
fix #128301
Move context keys into a workbench contribution
fixes #128452
log the url
Preferences > Telemtry
Handle already running compound background task in prelaunchTask
remove `--stable-build`
smoke tests - automatically test against stable build (#127799)
#128375 add tests
Dispose disposables in tests
Remove default keyboard shortcut
Improves leaking disposables error message.
smoke: simplify localization test
remove deprecated api
return empty array when not supported
Adds inlineClassNameAffectsLetterSpacing to injected text options.
Add fold jumping
editor memento - make sure to dispose config listener
Default presentation of Explorer: Copy Relative Path Separator in Setting editor is confusing (fix #128345)
files.partcipants.timeout doesn't handle the undefined case (fix #128335)
added listener to hide hover on keydown
Add breakpoint UnitTest
Improve stepping and double click source will jump to address.
testing: increase debugger wait timeout
fix #128318.
Update distro
xterm@4.14.0-beta5
Allow rearranging instances within terminal groups
switch pat for codespaces prebuild
Don't switch focus when DisassemblyView is in Focus.
debug: raise the extension host timeout
main: add a lockfile, and set the user data dir while debugging
testing: fix duplicated test items if ext host restarts
debug: use icon for debug terminals
More parts of #125422
More parts of #125422
Part of #125422
prepare for vacation
Introduces editor.useInjectedText (defaults to true) and changes ghost text implementation to use injected text if not disabled.
Improves diffing for inline suggestions.
Implements render helper.
fix #128312.
Uses eslint-plugin-header to enforce license headers. Features quick fix to add license header.
Add assertions for first line
Add a setting or always restore the last editor state for editors opening in new groups (fix #102485)
rename some "base-xy" to "abstract-xy"
use esrpcli.dll
Bump distro
Ctrl+w close active editor instead of disposing active terminal
typescript: avoid global setImmediate
Don't fire an on change if the ghost text model did not change.
polish webpack configs
make IWindowIndicator.onDidChange optional. FIxes #128109
sandbox - cleanup unused methods and avoid context bridge issue with `process.env` (#128099)
Add scopes property to login telemetry (#128261)
Allow extension to control whether interactive window editor group is activated via options (#128274)
Add command to assign Peng to notebook issues
Moves moveViews command - re: #110583
Closes #128258: Adds ThemeIcon support
Preserve color from ThemeIcons in Timeline
Split service configuration for desktop and browser
Use service for loading service configuration
Use interface for service config
Build VS Code using TS 4.4 (#127823)
When converting an empty model range to a view range, it should prefer left view positions.
Revert "Removing more templated settings #125422"
fix vertx
Removing more templated settings #125422
Sets mightBeForeignElement to true when mouse is on injected text.
adopt web extensions to webpack 5
Move to file/newFile... contribution point Close #128136
set findWidgetVisible for find using regex  (#128144)
Make reopen with... act on selected #127083
debug: reuse the userEnv from the current window in debug mode
Revert "debug: reuse the userEnv from the context window if one exists"
Add "Open in Visual Studio Code" button
Enable automated smoketests on Windows (#128224)
Add warning about ILocalPtyService
Move local/offproc service interfaces out of platform
Add test for terminal.integrated.tabs.enableAnimation
Add enableAnimation terminal setting
Remove unnecessary async
Prevent panel from stealing TerminalService.activeInstance from focused
First part of #125422
Hide switch terminal from command palette
editors - simplify `IEditorInput.toUntyped`
Only update if ghost text changes.
editors - reduce some typed editor service usages
quick open - make sure to support opening to the side for typed editors too
Add more empty workspace tests
Add `LineBreakData.normalizeOffsetAroundInjections` which can deal with multiple touching injected texts and add a test with this case
Makes subwordSmart the new default preview mode of suggestions (was prefix before).
Suggestion preview mode "subwordDiff" is now "subword".
Binary diff editor UX is confusing (fix #128145)
Avoid converting to model position and back when hitting injected text
:lipstick:
first cut
Move term editor find under a new parent
editors - add test for `revealIfVisible` and `revealIfOpened`
Remove no longer necessary check (due to using now affinity)
Ensure canonical uri is file:// before using
editors - more removal of "override"
Validate the view state quickly, with few allocations
Add WorkspaceTrustEnablementService
new debug session flag 'managedByParent' (for #128058)
Add workspace available filesystems tests
Only fallback to running command against webview in specific cases
Inlay hints uses editor.fontFamily by defaults
fix: debug console variables output problem
Don't override copy/paste when focused on an input element not in the webview
Remove not implemented alerts for webview search
Avoid warning when acessing md setting
Clean up name
Remove duplicated implementation
fix #128166.
debug: reuse the userEnv from the context window if one exists
fix #123667.
Initial commit (#128167)
testing: remove unused testing-editor-contributions
testing: fix undefined not being reported correctly in results
testing: timing in explorer when results are cleared
Ensure no disposables are leaked in inline completion tests.
Revert "Ensure no disposables are leaked in inline completion tests."
Ensure no disposables are leaked in inline completion tests.
fix notebook file open perf mark
Remove extra host indirection for webviews
Remove useParentPostMessage
Add multiline text editors in settings editor (#127118)
fix #128165.
Remove empty notebook
WIP
testing: sort by status or location, not name
open the devtools for browser tests when debug is passed
Forgot to re-enable test
Add ContextKey when focus, step disassembly.
Show 'open disassembly view' option only when language in currently focused document supports disassembly
Add InstructionBreakpoint to BP View
wip
Current instruction line highlight
Reset disposables array after disposing
More to revert
Revert ext point changes in debugAdapterManager.ts and debugSchemas.ts
Properly dispose event listeners in breakpont renderer
Stack frame icon
Properly set CONTEXT_DISASSEMBLE_REQUEST_SUPPORTED
Added accessiblity provider
Add set and remove InstructionBreakpoint.
Switch to using Address + Count for offset.
Style changes
Some fixes and resolving some comments
Re-enable disassemble.
Add debug to view.
Add instruction to viewer
Improve breakpoints UI
Breakpoints work, but can still be improved
Infinite scrolling
First Compile
Support syntax diagnostics in partial mode
Rendering table, start to work on scrolling
disassembly view: initial commit
Parts of #124498
Update Codicons Add new GitHub icons https://github.com/microsoft/vscode-codicons/commit/0b42be87a015102e11219775fad34ffd4cf7d6e2
fixes #127981
More renames
Use resolver service for custom editor
DAP: add 'writeMemory' request to spec
Remove webview publish build stage
webview - remove more traces (#128128)
Add ts inline hints (#113412)
Update input decoration on keybinding update (#128100)
Unset active terminal group when last is removed
Remove unnecessary layout call
Dispose of emitters on terminal instance
Rename editorOverrideService closes #126603
Update distro
Respect var resolve requests only for the given workspace
editors - more renames
Don't dispose terminal editors when shutting down
storage - do not warm up sqlite on load of another workspace (#127421)
Don't remove terminal tabs on shutdown
Resize terminal when layout setting is changed
Update playwright to 1.12.x and enable tracing for smoke tests (#128061)
editors - fix cyclic dependency
Add themeable indicator to active terminal tab
Use canonical URI when opening local terminal
:chore: log configuration via `safeStringify`
editor descriptor => editor pane descriptor
Editors: revisit need for `populateEditorId` and `doResolveEditor` (#127787)
Re-enable enhanced localization tests
update mywork notebook
editors - make `resource` a required property of untitled untyped inputs (#127792)
update API notebook
sandbox - update for webview changes
Remove Jupyter specific loader special case (#126939)
Clean up refactored webview code
Remove baseWebviewElement
[typescript-language-features] Add suggest.allowIncompleteCompletions and pass trigger kind to TS Server (#127673)
Add post request for prebuild action
Update Codicons - Add `layers` and `compass` - Add `azure`
add useful readmes for the auth providers fixes #127688 fixes #127689
Create create-codespaces-prebuild.yml
fix #127157
Remove usage of non-standard setImmediate
Switch entirely to iframe based webviews on desktop
fixes #128051
introduce git-blame-ignore
smoke: ctrl-c should kill all processes
specify localhost for microsoft auth server
typo :) (#127893)
fix #126691 (#128067)
fix #127157 (#128066)
share openContextMenu (#128065)
easy to read
Avoid OffscreenCanvas in terminal sash reset
rename to title
fine tune
Disable locale info check.
editors - cleanup `matches` methods of side/diff editors
Improve localization tests
smoke - harden data migration test
editors - better `matches` for `diffEditorInput`
add 'rememberDefaultAction' property
#127693 add color to staus icons
Add setting to modify copy separator (#101197)
dedup, folding action args def.
fix #127758. de-dup mouse handling in comments.
freeze CommentController/Threadd through #value.
re #115679. hide proxy from exthost comments.
fix typo
run dropdown with default
re #115679.
re #127822
consolidate code
fix #127968
Debt: `IntervalNode.range` can be `null`
Refactor and clean up extension enablement - Do not roll up the enablement state for dependents - Ability to override workspace type (for extension service) - add tests - Enable extension status icon
Separate model syncing from file diffing
Notebook diff editor input matches method should consider both sides (fix #127997)
editor input matches  :liptstick:
Disposes source on cancellation.
Removes disposable store from createCancelablePromise and fixes leak.
Removes toNonLeakingDisposable in favor of toDisposable.
remove unused code
toDisposable should be once'd, fyi @hediet, @alexdima
update distro
move open, open-diff to their places, https://github.com/microsoft/vscode/issues/110583
Update C# grammar
remove canNormalize because String#normalize is now everywhere
update todo tag
open or focus editor
fix #127901
fix #126469
Add .ixx as a possible C++ extension
fix #127738.
fixes #127620
fix #126469 (#127889)
add perf tests for uri tst
maxModules has been removed
don't expose dom and worker to extensions
editors - improved `isEditorInput` check
Update grammars
modern libs/output for base tsconfig of extensions
fix tests
adopt webpack stream changes
editors - make the check functions more robust (#124222) (#127870)
fix json error in tsec.exemptions
:up: distro
Restrict allowed schemas for "Open Workspace" (#127876)
update distro, https://github.com/microsoft/vscode/issues/127760
remove extensionHostWorkerMain and use workerMain bootstrapping, https://github.com/microsoft/vscode/issues/127760
Donot log if the current window is running extension tests
update distro
editors - :lipstick: diff editor input original/modified name
only loop once over decoration data API
editors - :lipstick: `extractEditorResources`
update to webpack@5
Bump version
update v8-inspect-profiler
use async-await in extHostLanguageFeatures, stop using asPromise
fix
Improves cursor positioning for injected text.
Implements support for decorations for injected text.
use vscode smoke test check extension
Increase max file size for file comparison
fixes #126962
fixes #127716
Commit message
Disable math highlighting in markdown fenced code blocks
allow distrust button for vfs
debug: bump js-debug version
Add explicit initilization for void properties
Cancel start find delayer for empty query, fixes #127479
Revert "fix #126469"
Update completions.ts (#124822)
fix #123925
fix #126469
fix #127738.
fix #127807
fixes #124169
fixes #127773
#124169
workpace
always publish arifacts_prcessed artifact fixes https://github.com/microsoft/vscode-internalbacklog/issues/2250
Pick up TS 4.3.5
fix #127572
Add markdown math support readme
Add simple browser readme
Small doc cleanup
Set font-size:0 to improve rendering of hidden text, caused by multi-line inline ghost text.
fix #127619
fix #127653 fix #127114
fix #127634
update list of team members
More => Welcome fixes #127427
Add elipses ref #127428
Consistantly use Getting Started Page to refer to walkthroughs in UI
Add command to open a walkthrough from anywhere
Clarify which scrollbar options cannot be updated
update extension input on extension change
Actually ignore, don;t just say we do
Expose editor scrollbar options and react to them being updated
Add feature gate to startEntries until full API review
fixes #127687
web - allow integration tests to open a workspace
tests - align integration test scripts
Bump distro
fixes #127773
fixes #127772
Only add remote scheme to workspace save when remote Part of #127647
update verification notebook
override virtual workspace capability in web and enable web extensions
fixes #125144
Minor tweaks
pass context key service down to MenuEntryActionViewItem so that keybinding label picks up the best match
Caches ghost text to improve performance.
ci: update node version for rich-navigation.yml
chore: bump electron@12.0.13
fixes #127669
fixes #127716
File > Revert File should be disabled for untitled schemes (fix #126999)
fix #125275.
re #127483.
Use NotebookEditorWidget from context to put up kernel picker (#127733)
Update getting started artwork (#127713)
open iw without focusing it.
Don't block on fetchCallStack requests
Tune styling of badges ref #127379
debug: bump js-debug version
fixes #127620
fixes #127615
fixes #127623
fix #124918. preserve ipynb file type.
Pass explicit mime when converting cell to markdown
fix cell readOnly
Remove order from changeicon/color menu entries
history command should not activate when suggest widget is visible.
Improve type safety and add a comment
disable hot exit for iw
fix #127564.
use describedby and tabindex
update instances when an editor is closed
Remove default snippets
Add 'other' option
fix #127667
#125687 check if log file exists
#127328 force textual diff
Disable overrides in sync merge fixes #127328
do not encode request url
Revert "Get rid of `canHandleDiff`"
untitled override tests
Focus explicitly when creating terminals (#127672)
#108439
fixes #108439
update wording for #127471
mitigate hang on reload due to loading workspace storage before loading (#127421)
better keybinding rendering in suggest status bar
untitled notebooks - do not fail with an error when opening untitled with associated file path
Add test for forceUntitled untyped
Update untitled files to respect forceUntitled
Try to not indent the active debugging line
Reconnect panel terminals inside panel
Refresh theme on reattach
debug toolbar: reduce z-index to be below debug hover and suggest box
Adds tests for injected text events & fixes caching bug.
provide an option to ignore cross window changes - logs
Add default snippet to profile
storage - remove workaround for #116777
watcher - better document `files.watcherExclude`
fix installing an extension without syncing
make templated resource url mandatory
fixes #127418
update distro
- additional built in extensions override installed extensions - update installed extension - remove duplicates
double trusted types definition when create bootstrap blob
web smoke test: bump up port number
tests: hide output
fix getText(range) of concat document
Add setting to control hover position
re #127539. fix tests.
Add memory requirement (microsoft/vscode-remote-release#5268)
fix #127539
re #127539. restore iw input model on tab switching.
Error logged saving new issues notebook (fix #127484)
Pull in copied katex css instead of node_modules
Update endgame verification needed query
Fallback to terminal default location when no target
Prevent override of settings UI fixes #127554
Fill terminalId instead of type
fix #127518
improve editor terminal menu
open panel when terminal gets moved there from editor
bootstrap - log an error when window config cannot be loaded in 10s (#127421)
editor tests
fix #127502
Make sure active instance changed fires when switching groups
Pick up TS 4.3.4
Remove terminal editor from service on editor close
Terminal editor -> terminal in editor area
clean up
Removes exponential search in takeWhile as it is slower than linear search for small inputs.
Only show terminal commands if processes are supported
editor tests
Makes subwordDiff mode the default mode for inline suggestions.
move API address feedback in #127367
bump distro
Replaces filterSortedByKey with faster ArrayQueue.
more editor service tests
Run OSS tool
Longer description for remote.autoForwardPorts
Reenable German translation test based on new API
more stable integration test: onDidOpenNotebookDocument
Expose inlay hints api for monaco
Remove `New Folder...` UI for release
just return if the acceptedStates don't match fixes #126084
`preserveFocus: true` when reopening interactive window
Bump node for other platforms
bump CI to node 14
add additional logging around github auth
change name of default banner setting value
Tweak bottom margins
fixes #127304
Acquire a lock before using a certain workspace storage directory and fall back to other directories if necessary
Update VisualElementsManifest.xml (#127370)
Don't show cell animations/timer while paused
Remove "Show Breakpoints" menu entry
Support multi-select dnd in term instance
Support multi-select drag and drop in terminal tabs list
fix #127339
Update debug icon colors for docked toolbar (refs #127034)
Added self.
clean up
Add `wordPattern` for XML and XSL languages
Closes #87110: adds Memento.keys property
[css/html/json] update services
Update subscribers.json
simplify get notebook widget from uri.
kb service npe.
Fire group service instance change event when switching
fix #127307
Revert "Improve visibility of interactive window input editor (#127207)"
terminal editor context menu (#127344)
fix clicking install button
Ext point wording
Add ShortDisplayName (#127338)
fix auto updating web extensions
Don't show configure default if no file extension
Update distro
Closes #126887
Some renames and docs change.
Add bool objects renderer in settings editor (#126287)
Implements utils that can be used to ensure that all disposables are disposed after a test completes.
Ensure inline tab doesn't use terminal editors
Support drag and drop from terminal inline tab
remaining change for #118829
inline  (#118088)
Check collapse state of tree node when doing recursive refresh (#127071)
call loadedSources req only if supported; fixes #126924
Get rid of `canHandleDiff`
editor service cleanup (#127287)
respect user configured extension kind
Add onDragLeave to list and handle in tabs list
Clean up leftover PHP custom trust code
BrowserURLOpener.open should only handle !openExternal uris
Remove instances from term editor service on dispose
Update single tab label when active
Force group change event when active is removed
Update wording of find in files command id
Converge addFileSchema implementation
use debounce emitter for extHostDiag, https://github.com/microsoft/vscode/issues/123487
If the focused thread does get stopped in the next 800ms auto focus another thread or session
Startup timing should not complain about missing cached data when running with `--no-cached-data`
better snippet.md update
update snippet doc
Update endgame notebooks
Implements multi line ghost text.
follow up fix for #124770
debug console: do not dispose of the input model on every hide
show only web extensions in popular view
Improves querying of injected text decorations.
de-ref interactive input on interactive nb close.
update distro
Add support for unique web worker extension host origins
render outputs always if it is in accessibility mode.
disable extensions which are not enabled in web
Add a camelCase transform for Snippet variables
Improve visibility of interactive window input editor (#127207)
transient workspaces - reload should close workspace
transient workspaces - add to schema
editors - mitigate #127215
editors - some :lipstick:
Allow for themable SVG's in core contributed steps Ref #125877
sort entries in workspace trust table
add notebook to the text document of the input box in iw.
Improve marking walkthroughs no-longer-new
Align naming of detach/attach session commands
ctrl+w kill terminal editors on linux/windows
fix #127156
Untyped Editors within override service (#126918)
Ensure active terminal is tracked after focus in TerminalService
Update instance created event name
Implement contributed profiles in terminal editors
testing: update unit tests
testing: initial api side of test coverage
Close #126108
Close #122702
fixes #126340
#127178
fixes #127174
Remember chosen Environment per file
Add window duplication command to file menu (#127037)
hot exit - discard backups that have not been handled in empty windows (#126725)
fix #127160 and fix #126840
set value for variable and watch
Update distro
Document setCopyInstance
editors - remove `createEditorInput(input: IEditorInputWithOptions)`
Use getFindHost in find actions
Verify accessor isn't used after await
move terminal group count to terminalGroupService
list, tree: dynamic multipleSelectionSupport
Make panel alt actions split within panel only
Make split in panel only split panel terminals
update nodejs requirement, https://github.com/microsoft/vscode/issues/121144
configure esbuild with esnext. means no harm since TS already compiles with lower es2020, https://github.com/microsoft/vscode/issues/121144
Clean up resolved todos
list: fix npe
make sure to not focus session that is going down
Use default instance host for new with profile regardless of active
fixes #126964
Split in active workspace editor support
remove default tt-policy since https://github.com/electron/electron/issues/27211 is fixed, https://github.com/electron/electron/issues/27211
set vscode compile target to es2020, https://github.com/microsoft/vscode/issues/121144
Use correct instance host for split submenu
Better maintain original tunnel source
Simplify port forward parameters
Tidy up options or profile validation
adopt allSettled in AsyncEmitter and move back into event.ts, https://github.com/microsoft/vscode/issues/121144
Align lib-definition of tsconfig.base with supported browsers reality. The smalled common denominator between Chrome, Edge, and Safari is surpisingly large and except for Atomics/SharedMem everything up until es2021 is OK, https://github.com/microsoft/vscode/issues/121144
Make sure background images don't show on terminal editors
Add configure options to editor dropdown
Reset tunnel protocol when setting is deleted
Support splitting in editor with profile
Read correct value when adding port attributes
chore: disable sandbox on snap package
Change protocol to be written to remote settings
remove proposal check
fixes #126502
Let users pick from installed debuggers before sending them to the Marketplace
Bump color-string from 1.5.4 to 1.5.5 (#127045)
update distro
editor models - add missing `super.resolve`
transient workspaces - add tests (#119695)
set controller first.
select kernel for iw.
Create new default terminal in editor
Terminal editor + button
Don't unsplit when dragging to the bottom
Implement process orphan handling in local
Use optional chaining, remove ! assertions
history support.
Ensure icon change event is fired after process launch
move find out of terminal service and get find to work in terminal editors (#127100)
Move terminal dnd special case to tabs list
hide iw command from f1.
fixes #126614
Dont query the range of a node after it is deleted.
testing: remove `data` from TestItems
Add iframe search with debounce (#125856)
update comments
transient workspaces - do not add to workspaces history (#119695)
do not show download locally action in web
hmmm
Set active instance and ensure commands work (#126850)
snap: create it even when stepping on it
Removes forgotten import.
Repairs injected text for inserted lines & removes DecreasingKeyFilter.
- support unknown extension point in web - ability to override it from product
get changelog and readme uris from assets
update doc
Correct size of terminal editor icons
transient workspaces - prevent to restore transient workspaces (#119695)
some API todos for testing, fyi @connor4312
Use new helper
Move helper to get instance id into terminal service
Create helper for getting term instance by resource
Add terminal editor context menu
gotcha
fixes #126585
resolve working copy when load is called again, https://github.com/microsoft/vscode/issues/125211
hmm
fix #127039
Update distro
Update xterm@4.13.0
fixes #126339 third time's the charm
fixes #126339
fixes #126339
Add missing instance change event, reduce bad events
Move style to head element
Move editor tab styles into terminal service
Add terminal editor icon support
Remove unused import
Support label extra classes in anything quick access
Add extra classes to editorQuickAccess, remove undefined return
Use IEditorInput.getLabelExtraClasses in no tabs title and opened editors
Supports injected text for new lines.
Improve port restore so it happens less often
bump distro
editors - add a `isEditorInput` to reduce type casting
backup restorer - make sure to disable overrides (#125211)
history - populate editor history from opened editors
chore: bump electron@12.0.12
Update debug theme styles
Remove "New Window..." contribution point
Add extraClasses to editor input
skip tests checking active element
disable dnd if the document is readonly
Create `LineBreakData` when having injected text even if there is no wrapping
lookup kb label for execute.
allow open existing iw.
Resolve decoration ranges when removing only if really necessary
Add `TextModel.onDidChangeContentOrInjectedText`
Make checkboxes visible (Refs #126514)
isActive tests #126887
testing: update extHostTypeConverters
testing: update test item async resolving
More #126887
Add back descrioptions
üíÑ
use offsetHeight other than clientHeight.
Remove cell breakpoints when deleting the cell
Split out new item pick to new {file, window, folder}
install compatible extension
rename
Add untyped matches test #126887
backup always for notebook in iw.
docs
fix publisher while replacing in the template
remove assumeGalleryExtensionsAreAddressable api
support installing all web extensions
async - remove allSettled types (#126992)
gallery resourceUrlTemplate
add es2020.promise to compile options, https://github.com/microsoft/vscode/issues/126992
Adds more tests for withInserted.
Don't query the model to get the View Line Length.
File > Revert File should be disabled for untitled schemes (fix #126999)
some cleanup and polish in editors land - add `editorId` support to `IResourceEditorInputIdentifier` - cleanup `EditorInput.matches()`
Makes getInputOffsetOfOutputPosition more readable.
editor service: isActive => isVisible
Remove custom allSettled-utils (fix #126992)
update web extension rules
Only compute LineInjectedText for non empty injected text.
Adds ModelDecorationInjectedTextOptions to validate InjectedTextOptions.
better re-entrant protection for https://github.com/microsoft/vscode/issues/125211
Revert "prevent reentrant resolving of editor inputs, https://github.com/microsoft/vscode/issues/125211"
Documents InjectedTextOptions.
use onDidChangeRawContentFast instead of onDidChangeDecorations to react on changes of injected texts.
Additional test coverage
backups - only resolve editors that are not active (#125211)
Make sure process started via debugger is shutdown when quitting VSCode
prevent reentrant resolving of editor inputs, https://github.com/microsoft/vscode/issues/125211
history - invalidate closed editors based on `editorId` and `resource`
adopt gallery resource url
use web tag to check web extension
Makes affected injected text lines nullable, clears them after fireing, fixes range issue.
Improves withInserted.
editors - reduce use of `createEditorInput` (#126960)
"Create new github issue notebook" fails (fix #125211)
Support editor overrides in quick open editor history (fix #117579)
Editor override: opening same input does not pass options in (fix #126923)
overlay for overflow x
history - add tests for new untyped usages
iw input model should be non-simple
IW uri generator improvement
testing: compilation error
testing: pass test item in context menu actions
protocol: refactor to use enum for marshalled object ids
testing: don't try to go to test when alt-clicking in explorer
testing: correctly no-op when running a test outside inclusions
testing: fix autorun items if state is only set immediately after creation
debug: bump js-debug version
testing: fix zero duration not showing
testing: fix duration missing unit
fix iw editor input leak.
Update search.maxResults setting default to 20000
Re-map notebook breakpoints so they go to the right place after reordering cells #126431
ci: update newer binaries for electron@12.0.11
focus iw.
pull.rebase merges
Disallow edit mode for readonly markdown cells (#126870)
fix #126907
improve extension kind computation for web - include web kind if extension supports web - support multiple extension kinds for contribution point
fix smoke tests
fix: setuid helper permission (#126798)
Markdown hover in status bar: not working without specified command (fix #126753)
clean up
Make terminal textarea selector more specific
Support editor overrides in quick open editor history (fix #117579)
history - stop operating on heavy typed editor inputs (fix #126728)
Use margin instead of padding for decoration spacing
remove builtinExtensionsFilter api
FIx #122448
Update term editor title on status/icon change
editors - allow undefined as group for `asResourceEditorInput`
Support split local terminals in remote workspaces
adopt API changes in tests and extensions
merge CompletionItemLabel into CompletionItem#label, https://github.com/microsoft/vscode/issues/39441
Add padding to edge of pointer hover to allow mouse to hover
Ignore pointer events on the hover pointer
use label, detail, and description for CompletionItemLabel, tweak rendering, https://github.com/microsoft/vscode/issues/39441
Improve wording for failing test case
history - stop using heavy typed editor inputs for reopening closed editors (#126728)
rendering tweaks for complex completion labels, https://github.com/microsoft/vscode/issues/39441
windows - do not break watcher loop (fix #126813)
Add cacheFrom (microsoft/vscode-remote-release#3245)
api tests - do not kill process on load errors (fix #125733)
Add support for `transient` property in workspaces and prevent window reloads (#119695)
Remove `useActiveIcons` list option (Refs #126514)
fix #126875
Split cell execution statusbar item contribs into individual contribs
Revert "dispose restored editor input."
Move to "See More" model for category list growth management
disable contribs on interactive cell inputs.
set top level stop reason
fix compile
Optimize format range merging
bump distro
Support terminal editor -> panel dnd
dispose restored editor input.
Refine move terminal command names
Remove log
Add move to editor instance command/ctx menu
View -> Panel
Add move to editor inline ctx menu entry
proper lifecycle for interactive input
refactor: update to new testing API
fix #126842 clear Explorer root folder error indicator when refresh succeeds
Close #126816 Close #126820
Update ordering of new items
Remove duplicate "new"
fixes #126133
Cleanup
Adds support for injected text to domLineBreaksComputer
Adds line break data test.
non file based hot reload
Removes unneeded injection widths.
Add untype editor support to findTargetGroup
Use trusted types for nested web workers
Make localization smoke test DOM independent.
file watcher - have a interface for raw events (maybe #126813)
Uncomment empty workspace tests
updateRemoteUserUID, overrideCommand (microsoft/vscode-remote-release#2228, microsoft/vscode-remote-release#1200)
Adds test for line max column with injected text.
Get rid of unncessary cast
Move DEFAULT_EDITOR_ASSOCIATION
Move UntypedEditorInput
tests - rename to proper test name
Hide terminal editor textarea
Don't throw on joinInstances when <= 1 instance selected
Focus term instance on editor focus
Update term inline tab to work on groups only
Dispose term editor input when instance dies
Don't detach instance on serialize
Add overloads to group service createGroup
Fire active changed event when it changed but the index remains the same
Improve localization smoke test
clean docs
Throttle file events (#126811)
file watcher - give explicitly watched resources higher prio
inline variables
Reverts launch.json change that got accidentally committed.
fix compilation
enable custom hover for view containers by default
Improve strings in confirmation dialog
update doc
file watcher - provide an event for raw changes access
file watcher - implement some render side throttling
file watcher - some code :lipstick:
Add search.maxResults setting
Remove unused imports
cli - improve fix for #126399 by unsetting `VSCODE_CWD` early
Command line code . not working (fix #126702)
Remove unused config
fix isNoCorsEnvironment (#126718)
Remove description requirement
do not reopen notebook when it is opened in composite editor.
add terminal editors to quick access (#126695)
Reconnect to terminal editors on reload (#126693)
Polish new contributions #124304
Update default commit for webviews
Fire hideFromUser terminal dispose events
Use group service for instances in tabbed view
Have tabs list only deal with terminal groups
Resolving feedback
Disallow setting active instance to undefined outside services
increment index to stop infinite loop reading credentials on windows fixes #117362
Invert if statement to reduce indentation
Fire active instance changed in editor if index is the same
Fire active group changed event
Change matches to support untyped (#126410)
Revert exclusive only for openTextDocument
refs #126365
Move getGroupForInstance into group service
Reconnect orientation change
Remove doNotSuggest from welcome entries.
creationTarget -> defaultLocation
fixes VS Code asks about trust even when the remote is trusted #126542 (#126611)
Make some group service members private
moveinstance to group service
Move unsplit, join to group service
Move groups out of terminal service
#126015
Move instance change into editor service
Tests getViewLinesData - with wrapping and injected text
Tests lineTokens.withInserted.
Make set active instance a setter
Track last active instance in term service
Track active instance in editor service
update doc
Forward host events helper
Introduce term instance host interface
use DebounceEmitter in deco service, https://github.com/microsoft/vscode/issues/123487
Bubble instances changed event
Update tabs list on dispose of single terminals
Remove some code
Remove more null and public
Return undefined instead of null
Move active ids into group service
scm: better menu disposable code
fix leak
Move more into group service
Bump distro
Move more into group service
Add createGroup to group service
deprecate all leaky Event-utils, https://github.com/microsoft/vscode/issues/123487
fix compilo
Revert "don't use an emitter for debounce-util, use simple event "transformer","
Create group service
Use / in path to work with editor override service
fix https://github.com/microsoft/vscode/issues/126658
Always compute breaking data if there is injected text.
Renames afterContent to after.content, introduces before.
Rerender if injected text decorations change.
fix orthogonal sash hover feedback
Empty workspace memento initialization
Remove more unused
Remove unused
Modify treeDataChange event (#125214)
Tune new list ref 124304
remove unused stopwatch event util, https://github.com/microsoft/vscode/issues/123487
polish dialog
try to fix build (#126648)
process - stop supporting VSCODE_CWD for setting the current working dir (fix #126399)
Show entry sources ref #124304
Start to implement New... entries Ref #124304
Get dragging from editor to splits working
Remove override service from term editor service
Move input creation into term editor service
Clean up
Correctly dispose of input after drag
Add math grammar/language to markdown math blocks
Extract multi init to caller
Remove console.log
Get dragging uris working
Register terminal editor override properly
Improve rendering of search result provider messages ref microsoft/vscode-remote-repositories-github/issues/17
fix mime.
minimal changes.
fix unit test
register interactive toolbars
fixes #125785
no delete button from the core if it's readonly
Remove placeholder sysinfo markdown cell
fixes #126495
remove cellMenu.
upate distro
:up: web playground
Refresh xterm theme when reattaching
Align custom hover pointer with target element
Add protocol to tunnel API Part of #124816
move compile step to another pool
remove fromPromise-util and adopt single user
Add missing standard transform css prop
#123661 fix active link
Compute wrapping after taking injected text into account, fix issue in `getViewLineData`
"Do you want to open it anyway?" in diff editor no-ops (fix #124222) (#126449)
Improvements & clean up - Deprecate static extensions - Introduce additional builtin extensions - Install web extension from location
Start of editor override registration
build: scope logs to job attempt
don't use an emitter for debounce-util, use simple event "transformer", https://github.com/microsoft/vscode/issues/123487
Bring back split and kill terminal buttons for single/narrow
Increases weight of "inlineSuggest.commit" keybinding to precede tab completion.
Revert "When having details for non modal, show more which shows modal... https://github.com/microsoft/vscode/issues/125750"
Revert "keep promise alive when continuing in modal dialog, https://github.com/microsoft/vscode/issues/125750"
akv: use filter
untitled - allow to resolve with initial contents but not mark as dirty
untitled - isEmpty => isInitial
swap out menu ids for interactive window
Use quotes not inline code block
Bump ripgrep, remove UTF8 BOM workaround
execute cell auto reveal
Auto Scroll
override getName for interactiveInput
Add terminal creation target setting (#126516)
notebook extensions should activate on onNotebook*.
fix notebook editor readonly context key
Adds GhostTextVisible precondition to ShowNextInlineSuggestionAction/ShowPreviousInlineSuggestionAction. This also fixes an issue whith Czech keyboards.
testing: update wording for appendMessage
testing: clarify duration in setState
padding for input box
Adds prefix and subwordDiff modes and settings to control them.
add syntax highlighting for the input box
Show error if renderer is not found
Use Array<MarkedString | MarkdownString>
Require passing in mime
Give more explicit name to method
Preserve cell.mime when changing cell kind
Simplify logic for getMimeTypeInfo
Switch back to repeated contribution
Split MarkdownString out of MarkedString
Support open interactive to the side.
Use `this._register`
Dispose embedded NotebookEditor when InteractiveEditor is closed
Add `ModelRawLineChanged.injectedText`
Settings editor: Change Cancel button to secondary
Add "show cell breakpoint margin" command
Return notebookUri and inputUri to extensions
fix #126469
Update commands.json
shell env - dispose in finally
fix kernel picker
test resolver: simplify pause/unpause
Ensure TerminalEditor cannot access already detached instances
Check port auto forward setting after waiting
Support editor -> terminal view dnd
shell env - kill child process after 10s
support gallery extensions as static extensions
keep promise alive when continuing in modal dialog, https://github.com/microsoft/vscode/issues/125750
When having details for non modal, show more which shows modal... https://github.com/microsoft/vscode/issues/125750
Cancel second disconnect runner on proc attach
Test that inline completion providers are not ask twice within any 50ms.
Update distro
Support detach from process in remote
relax supportThemeIcons
extract MarkdownString from MarkedString type, fyi @mjvbz
refactor and align web extensions scanning with desktop - translate the manifest always - remove additional scanned extension types and reuse IExtension - expose separate apis for scanning system, user and dev extensions - dedup web extensions by reusig the existing logic from desktop
Use editor bg color for terminal editors
fix https://github.com/microsoft/vscode/issues/126460
Add todo for joinInstances
Correctly reattach when moving term from editor to view
Start of move to terminal view command
make leaking menus less severe, https://github.com/microsoft/vscode/issues/126365
untitled - encode working copy type id into URI when generating untitled resource
Remote test specific code
editor override - fix exception when opening picker
fix: do not ignore changes to the node_modules folder itself. (#125801)
editors - remove delegating editor service
free composite notebook editor widgets.
dispose input editor on clear.
handle input/widget lifecycle.
Slim notebook contributions for interactive window
Add placeholder to interactive input editor.
testing: avoid duplicated calls to workspace root if document tests are not provided
Format
hide action behind interactive.experiments.enable.
adding basic folder info to dialog fixes #125984
scoped context key service.
disallow edit markdown cell when document is readonly
:lipstick:
support multiple interactive window.
shift enter to execute
fixes #125094
Workspace trust - emit telemetry if workspace trust is disabled (#126372)
Workspace trust - improve settings discoverability  (#126362)
Close #126419
Initial work adding NotebookCellData.mime
Clairify
Support https links as jsdoc target
Make sure we encode generated markdown links in jsdoc
clean up
init commit
Do not auto-trigger suggest when typing exactly the inline suggestion
Rename terminal localize key
migrate createTerminal to use CreateTerminalOptions everywhere
remove iconManager
delete iconManager for now Co-Authored-By: Daniel Imms <daimms@microsoft.com>
Squashed commit of the following:
notebooks: restore --theme colors for notebook webviews
terminal: expand the pane when showing the panel if not expanded
testing: fix tree overflowing when running first test
Clear all notification is not working (fix #126363)
:table_flip:
use correct GITHUB_TOKEN value
:chore: - ignore unhandled promise cancel rejections
.
fix emmet test integration path
Use custom hover for all status bar entries
MarkdownString for StatusBarItem.tooltip. For #126258
Revert "switch to generic pool"
fix https://github.com/microsoft/vscode/issues/125942
fix integration browser tests
- move writing user configuration to main process - safe guard read from writing in parallel from other windows
finalize terminal iconPath (#125783)
skip the entire notebook test suite so Code isn't even launched
üíÑ clean-up workspace contribution
fix https://github.com/microsoft/vscode/issues/126054
Add better checks for start index and length
Add jsdoc for terminal profile/link APIs
Convert TerminalLink to class, add TerminalProfile validation
Ensure processes are supported as a precondition for attach/detach
fix(window.ts): unresponsive window popup message (#126351)
build - only publish log files when tests run
:up: distro
shell env - timeout after 10s of trying
support detail for modal messages, https://github.com/microsoft/vscode/issues/125750
some jsdoc, https://github.com/microsoft/vscode/issues/39441
rename parameter to signature, https://github.com/microsoft/vscode/issues/39441
web - disable welcome in smoke tests (fix #126221)
switch to generic pool
Pass cell metadata and execution summary
Produce logs during test runs (integration, smoke) and publish as artefacts (#126065)
dialogs - fill in proper options used elsewhere
Update codicon Upgrade to fantasticon https://github.com/microsoft/vscode-codicons/commits/main
chore: bump electron@12.0.11
Simplify pattern input widget options
testing: improve cancellation, and allow test runs to be individually cancelled
testing: use inherited state is a test is updated into an unset state
testing: fix error if a test state is updated synchronously on a detached test run
separated editor scroll info by type and consume entry on access
Support detaching terminal processes manually
#125970 move user configuration writes into separate service
Scaffold editor overrride test. Part of #124496
Increase notebookcell run gutter
Update notebook output padding
fix touchbar icons; fixes #126195
Debt: move open file trust request dialog into the contribution (#126062)
finalize terminal iconPath (#125783)
skip the entire notebook test suite so Code isn't even launched
Extract injected text decorations reading to separate methods
üíÑ clean-up workspace contribution
fix https://github.com/microsoft/vscode/issues/126054
Ensure processes are supported as a precondition for attach/detach
Add better checks for start index and length
Add jsdoc for terminal profile/link APIs
Implements token correction.
fix(window.ts): unresponsive window popup message (#126351)
build - only publish log files when tests run
:up: distro
shell env - timeout after 10s of trying
support detail for modal messages, https://github.com/microsoft/vscode/issues/125750
some jsdoc, https://github.com/microsoft/vscode/issues/39441
rename parameter to signature, https://github.com/microsoft/vscode/issues/39441
web - disable welcome in smoke tests (fix #126221)
switch to generic pool
fix #124231: use separate event loop for opened tabs
Produce logs during test runs (integration, smoke) and publish as artefacts (#126065)
dialogs - fill in proper options used elsewhere
Update codicon Upgrade to fantasticon https://github.com/microsoft/vscode-codicons/commits/main
chore: bump electron@12.0.11
Simplify pattern input widget options
testing: improve cancellation, and allow test runs to be individually cancelled
testing: use inherited state is a test is updated into an unset state
testing: fix error if a test state is updated synchronously on a detached test run
Support detaching terminal processes manually
- move writing user configuration to main process - safe guard read from writing in parallel from other windows
#125970 move user configuration writes into separate service
NotebookDiffEditorInput extends DiffEditorInput.
Scaffold editor overrride test. Part of #124496
Make focus icon themeable
separated editor scroll info by type and consume entry on access
Pass cell metadata and execution summary
Increase notebookcell run gutter
Update notebook output padding
fix touchbar icons; fixes #126195
Debt: move open file trust request dialog into the contribution (#126062)
share test compilation output across agents
Better active editor check logic
Don't show tasks error when in a virtual workspace
More #124762
update distro
Scaffold injected text
Filter canddiate ports to localhost and all interfaces
#126057
Method to clear memento static map (#126092)
Add files via upload
Log exit signal for desktop TS Servers
more vm to textmodel
Support Content-Length and Last-Modified for webview local resources (#125994)
Pass in explicit language mode when converting cell to markdown
Also log viewType
use vm from test helper.
Add note that autoGuessEncoding is not supported by text search. Often confuses people, e.g. #124806
:notebook: use viewmodel from test helper directly
less use viewModel on NotebookEditor.
remove nbvm.setSelections.
:notebook: differenciate editor focus and list view focus
always hide quickinput on iPad when focus is lost fixes #125284
fix: use inline sourcemaps in watch task
update `monaco.d.ts`
use text/x- prefix
Make editor override service only operate on untyped editor inputs (#125779)
extensions/github-authentication: fix typo (#126072)
support setting the canvas renderer (#126068)
Pass config to external terminal service
remove console.log
fix tests
notebook: fix duplicated domEval
testing: simpler, better format for tree view
testing: give queued higher priority than passed
files - keep plain text mode if renamed to txt (fix #125795)
Add text/x-javascript renderer
* Cursor -> CursorsController * OneCursor -> Cursor
Skip flaky test (#126054)
Don't register in process manager if already disposed
:up: distro
Convert TerminalLink to class, add TerminalProfile validation
:up: distro
PrefixSumComputer renames.
:up: distro
fix trailing comma
Prevent other extensions registering terminal profiles
macos - restore Cmd+W to close window when no editors opened
When there are no debug extensions, open the debug viewlet when F5 is pressed so the user can read the limitations
untitledHint: remove experiment code
üíÑ Rename class
Workspace trust - refactor workspace trust calculation (#125835)
Show error notification when profile fails
doc cleanup
Use a class for TerminalProfile
enable smoketest on linux
storage - inmemory should register storages properly
Update grammars
dispose code renderers on delete
Don't cache HEAD requests for local resources
MarkdownCellViewModel -> MarkupCellViewModel
Don't hardcode markdown as editor language for markup cells
markdown -> markup
Hardcode the keybinding to "stop editing" markup cell. Otherwise it might pick ctrl+enter by default which is confusing. And escape should not change.
Rename *status* contribs for clarity
fix test.
support split streaming outputs
fixes #125113
fixes #125721
Skip posting resize updates if only the width changes
Always use clientHeight
Back `ack-height` messages
cleanup
Undo test setting
Add initial draft of enum array searchbox
Make ackHeight take an array
Address code review
fix error from rename
Ensure there aren't any duplicate code renderers
Add generic code renderer for all installed languages
Auth session API fix (#125792)
Avoid using Date.now() when deciding to give up reconnecting
update rich nav node version
Close #125900
Add split json warning #125952
Change settings color names from "notebook" to "settings"
test stream output reuse container
Update dataframes output (fixes #125299)
Make notebook output bg transparent (refs #125549)
iPad: cleaner solution for passing focus, do not pass focus on tap
Use plaintext language mode for log messages, otherwise respect underlying editor mode
trial #125904
Disposes the model after each test.
Smoke tests - run each suite in its own user-data-dir (#125670)
#123851 Increase the hover delay
Implements multi part ghost text.
Improves test of inlineCompletionToGhostText
Refactors ghost text widget to use a fixed model. If the model changes, the ghost text widget needs to be recreated.
Extracts logic from ActiveGhostTextController to a GhostTextModel.
Implements tests for inline completions.
do not show Add Folder in Explorer for iOS
Removes unused Workspace import to fix CI.
Add stubs for more tests
file watcher - avoid array creation when iterating over events (#124723)
fix build
Add first basic tests. Remove old stubs.
move INotebookKernel type into kernel service file
remove unused symbols of notebookCommon
watcher - code :lipstick:
update v8-inspect-profiler
change IOutputItemDto to use real bytes, add many dedicated dto-types for transporting output (which cannot be bytes), remove metadata2 from renderer
Bump tar from 2.2.1 to 2.2.2 (#125879)
debug: render keybinding for start debugging
optimize CellOutputContainer splice.
notebookDocument -> viewModel
Move update-scroll into notebookDocument
Move show and hide and ack-dimension into model
Move clearoutput into notebookDocument
Move outputContainer into OutputCell
Move code into outputCell cell
More explicit names
Use cellId for focus-editor
Make sure we clear markup cells on clear
Move remaining terminal menu registrations to terminalMenus
Use templates for markdown styles
Move toggleDragDropEnabled
Format terminalMenus
update distro
Action code review
Reduce impact of fix for #125303 to standalone editor only
Ensure hover gets disposed when icon label is removed
Do not use unsupported feature names in Firefox
testing: allow running tests from RHS of diff editor
Do not rely on `console.log` for exiting tests
Handle canceled error to reduce console.log spam in browser tests on Firefox
testing: scope context more strictly
tests - disable getting started in integration tests and smoke tests (#125808)
add workspace trust docs label
Comment spelling
Events should be readonly
:lipstick:
Log more information to track down reconnection cause
better but verbose output container creation.
Get mime from cell instead of hardcoding markdown
Extract createMarkupCellInitialization
Use Mimes.text where possible
Add markdown mime
Add mimes as a namespace
:lipstick:
Add WASM MIME type (#125782)
fix: areLanguageDiagnosticSettingsEqual always return true (#125365)
no index for renderOutput
accessibility issues also to sana-ajani
remove console.log
_renderOutput, move off index and beforeElement.
Make off proc service name var more explicit
fixes #116777
Remove old terminal.types contribution
update `glob-parent` to `5.1.2`
clean async tests
Remove proposed API check
Finalize terminal profiles contribution
remove `domEvent`
Terminal profile contribution feedback
Finalize Pseudoterminal.onDidChangeName
Cover kill short string
Move common term strings into shared file
touch events: context menu support across workbench
Bump telemetry extractor
Stop / disconnect of child session should always respect the parent session
Bump glob-parent from 5.1.1 to 5.1.2 in /build/lib/watch (#125832)
Bump normalize-url from 4.5.0 to 4.5.1 in /build (#125829)
remove old, backwards-compat API
fix https://github.com/microsoft/vscode/issues/125771
clarify nls comment
fix localization strings with `command:`. For  #125786
use notebookCommon import to see where notebook "leaks" into IPC/protocol
:lipstick: renames
rename test file
fix compile error
use unique translation id
towards https://github.com/microsoft/vscode/issues/125668
Updates sinon from 1.17 to 11.1.
Dispose items no longer visible
make output on cancel/interrupt unit tests instead of integration tests, https://github.com/microsoft/vscode/issues/125665
Resolve pr comment
Reuse statusbar helpers and dispose properly
add hover css to the hover element (#123384)
temporary fix for large splice.
testing: improve support for lines with multiple tests in gutter decorations
testing: peek failure message for any child of tests in open files
onDidChangeOutputs: NotebookCellOutputsSplice
markdown -> markup
MarkdownCell -> MarkupCell
Register emitters
Markdown -> markup
Move MarkdownRenderer creation into MarkdownCellViewModel
Move selection logic into MarkdownCell
:lipstick:
Optimize english please actions (#125154)
:bug:
re #122017, merge cell output append edits.
Use interpolation to keep special syntax out of strings to be translated Ref #125786
Dont use exp service for choosing first content behaviour
add newline
Move show/hide/unhide into markdown cell
Avoid getting the cell again when updating dimensions
Move show/hide/unhide into notebootdocument
Move markdown rendering into markdown cell
Don't require passing element to updateMarkupDimensions
Move the markdown cell creation logic into `MarkdownCell`
Introduce the concept of a notebookDocument to hold all markup cells in the webview
Require passing an output item to updateMarkupContent
trust the empty window by default
Move notebook empty markdown cell logic into markdown extension
Move notebook markdown styles and shadow root to markdown-it extension
Remove unused css
Factor out font size integer constraint
Mark most webview message properties are readonly
Extract webview messages to own file
Renaming notebook -> webview messages to be more about markup instead of specific to markdown
Working to make markdown cells less special
Close #125577
'vs code' -> 'the editor' in d.ts
fixes #125722
revert to reapply safely
fix: web typescript extension can not found definitions (#125279)
 fixes #125722
Document startupEditor: readme being not resource-scopable. Closes #124689
windows integration tests - use `--no-sandbox` (#125733)
Enable math in markdown preview
Use monospace for code in notebook inline code
Rename `notebook-markdown-extension` to `markdown-math`
üíÑ remove debug message
allow a 3rd character for first part of language id
#125576
Skip logging for high-frequency keybinding commands (#125570)
api notes
Move to dev version of LSIF tooling to support TS 4.4.0 dev version
Adopt latest `installBrowsersWithProgressBar`
Revert "Include sinon-test in renderer.html / index.html"
Include sinon-test in renderer.html / index.html
Update to `playwright@1.11.1`
Improve description for the lineHeight setting to reflect the proposed changes
Make sure the `lineHeight` is always an integer
remove empty notebookDocumentMetadataDefaults
default kernels uses cell text as output
editor drag and drop mitigation for resources without scheme (#124946)
scripts/code.sh: disable gpu on wslg
Deselect breakpoint in breakpoint view when no longer stopped on it
Correct another case of resolving not using remote
Resolve variables in profile correctly on remotes
Resolve variables for remotes in sendSequence
Re-enable environment variable collection tests
Set terminal title in ctor for custom pty terminals
use more showNotebookDocument, less activeNotebookEditor
have only one kernel by default, bring in other kernels per test and use the assertKernel util to ensure the selected kernel is the wanted kernel
Update DocumentFilter docstring
make IOutputTransformContribution accept a single item only
storage - implement clear() properly and add tests
:up: distro
pfs - make more methods available via `Promises`
make sure to transform notebook data metadata
code cache - do not configure our loader when using `vscode-file` protocol
code - enable vscode-file protocol and `bypassHeatCheck` caching (#98682)
sandbox - implement `didUseCachedData` when node.js code loading is disabled (#98682)
update api notebook for June
code cache - cleanup in prep for chrome based code loading
:lipstick:
Remove `:emoji:` support in markdown notebooks
Be more explicit how when we call `decodeURIComponent`
Bump target to es2019 in extensions
consolidate move cell commands.
Move editor tests to notebook.editor
fix #125702
fix(workbench-credentials): add missing await (#115338)
support links that begin with a root folder (#125615)
chore(typescript-language-features): fix spelling of deprecated (#125693)
Pick up TS 4.4@next for building
Spell
add option to not show link hovers for terminal (#124926)
testing: improvements to autorun behavior
status bar test suite setup.
statusbar suite.
move document event tests into notebook.document
Clone object before applying migrated setting
start separating tests.
multi tabs and custom metadata.
more showNotebookDocument for workspace edit tests.
fix code.sh script in wsl2+gui
move towards openNotebookDocument.
remove join cell test covered by unit test.
Replace map with forEach (#115378)
#125687 - Add settings sync troubleshoot view
testing: fix go to test not working
better context key for run menu
remove only.
Closes #124762
make getEditorById strict
extract ExtHostNotebookDocumentsShape into its own thing
make NotebookEditor#selections writeable, https://github.com/microsoft/vscode/issues/125275
clear storage when reset user data action is called
remove unused types
Skip failing tests
extract ExtHostNotebookEditorShape into its own thing
electron - include exit code in window error events
Bump ES build to latest version
Revert ESBuild updates and fix #125518 (#125574)
custom editors - emit capaibility change event if they changed after resolving model (fix #124860)
remove old mime types, `application/x.notebookABC`
Don't wait for the explorer when restarting
telemetry - avoid sync fs APIs for building CLI telemetry message
fix https://github.com/microsoft/vscode/issues/125581
don't use recursion for _entries, https://github.com/microsoft/vscode/issues/124723
default themes: colorization of string placeholders
Update to latest seti-ui & add ReScript to icon theme
fix test failure
drop links with paths longer than 50'000 characters, https://github.com/microsoft/vscode/issues/124942
Refresh task state more often when folders change (#125390)
:up: distro
Use path service in configuration resolver
re-throw and dispose reference when resolving failed
file change event - remove some unused methods (#124723)
AsyncReferenceCollection<T>
debt - access some of our versions of fs APIs via new Promises class
Revert "print trace for potential cycle, https://github.com/microsoft/vscode/issues/124723#issuecomment-850674813"
Update distro
fix https://github.com/microsoft/vscode/issues/125545
update my-work notebook
Reverts debounce timeout to 50ms.
Use --disable-workspace-trust for the test runs
Revert the change to calculateWorkspaceTrust()
Do not run yarn install as part of the smoke tests
web - implemented indexedDB based storage service
Accept editor line height as multiple of font size
#125527
Only use the empty window setting if it is set to true
re #125369. remove use of delete command
handle focus/selection update from applyEdits.
Add Copy Command Label to Keyboard Shortcuts.
Always create loading message
Add "hostRequirements" to schema (microsoft/vscode-remote-release#5144)
bump vscode bersion
don't involve terminalService
Async import only once
only show notification once per window reload
fix issue reporter unit tests
notebooks: more accurately detect old style of renderers
update distro
add restricted mode to created issues (#125537)
Pass profiles, defaultProfile, isWorkspaceTrusted from renderer to shared process (#125450)
Switches to new RemoteHub authority separator
remove untrustedWorkspace search for now
Hide "Customize Notebooks" in getting started behind setting
Update lock file
Bump distro
remove virtual workspace information from banner (#125512)
update notebook layout default values.
trust vfs (#125523)
Bump es build
Close Remote Connection shows up in local windows
notifications - silent workspace notification when workspace is known
Renames InlineSuggestionActions back to InlineCompletionsActions.
Puts EditorOption.inlineSuggest to the right spot.
Reverts menu rename.
Hide terminal menu if no process support is registered
restricted mode hover: added a link to manage trust. For #125408
* Renames command ids, context keys and command titles to Inline Suggestion. * Renames menu item, makes it proposed API.
* renames editor.suggest.showSuggestionPreview to editor.suggest.preview * renames editor.suggest.showInlineCompletions to editor.inlineSuggest.enabled
fixes #115535
fix compile error
startup timings uses now `exit` and not `quit`, fyi @bpasero
empty space should be root context also in MR workspace
run menu: more precise context keys
inline `NotebookExecuteHandler` type
files - fix pfs#Promises to not capture fs methods
:lipstick:
fixes issue with asExternalUri API
Make sure we layout editors in sideBySideEditor after they are created (#125445)
electron - adopt some newer APIs and :lipstick: main code
Add `CharacterMapping.setColumnInfo`
Add `CharacterMapping.getColumn`
Properly complete notebook profile step
Track opening notebook separately from showing notebook GS page
fixes context keys with menubar
improve messaging with remote
switch to a switch for localization edge cases
uppercase h in localization
fixes #125406
fix #125458.
fix #125234.
disable notebook layout getting started.
fix #125452.
fix #125027
Simplify tests
don't show status bar entry until files are opened
add settings links to improve understanding of workspace trust
fix #124405
fix #125444.
Minor renames
Remove hashes from override
Pass in column to `CharacterMapping.getAbsoluteOffset`
Needed localization changes for converting xlfs to json (#125442)
Remove codespaces walkthrough from Getting Started
icon hover: add pointer for element hovers
Improve `CharacterMapping` API
Refine `CellInfo` type (#125351)
Flip positioning of steps and media in narrow layouts. Closes #125246
Check to see if there are any artifacts that haven't been published (#125428)
notebooks: fix default selection of untrusted renderer
#125395 Improve the prompt
Switch loglevel to trace
Close #119722
Focus contributed profile terminals after creation
:lipstick:
Revoking trust in the remote scenario will reload the window
fixes #124051
rename onDidChangeNotebookAssociation to onDidChangeSelectedNotebooks
Disable workspace trust during tests
file editor - path service for default URI scheme
Workspace trust - add --disable-workspace-trust flag (#124998)
dialogs - do not require `buttons` property
debug: update js-debug
debt - remove unncesseary lifecycle phase awaits
fix build again
build - unblock lauching
Removes RemoteHub
Update notebook getting started images
revert a change
fix build errors
Try setting gettingStarted as default editor (#125321)
fix cell top/bottom border always active.
fix #125339.
Move notebook getting started walkthrough to its own section
fixes #125047
fix #125338.
fix #125334.
fix init layout interrupted by editor group resize.
Migrate profile setting and fallback properly
register the extension request handler once workspace is resolved fixes #125342
fix #125175.
fix #125176.
remove unused import
skip flaky window test.
notebook.insertToolbarLocation
add singleTerminal argument
add safeDisposeTerminal to terminal service
tweak wording
fix #125069
update the layout based on treatment.
remove backwards compatible tests.
Fallback to active editor if no webview is focused
fixes #125247
fix #124849
fixes #125319
fix #124854 Co-Authored-By: Daniel Imms <daimms@microsoft.com
Improve terminal drag feedback
fix #125067 fix #125039 Co-authored-by: Daniel Imms <daimms@microsoft.com>
Revert "Try fix getting started as default crashing integration tests"
Try fix getting started as default crashing integration tests
Don't commit inline completions on tab when "tabMovesFocus" is active.
Add henning to my-endgame notebook
Vertically center notebook profile list
Resets context keys properly when editor is disposed.
add closing tags
Reset context keys when Ghost Text Controller is disposed.
make IHoverDelegate.placement optional
adopt terminalTabList
Revert "icon label hover: allow element placement. FIxes #125090"
ios: trigger list/tree/table context menus
tree viewer hover delegate: command handing now comes from hover service
icon label hover: allow element placement. FIxes #125090
Convert vscode ThemeIcon to internal type
Workspace trust - calculate trust before extension host starts (#125283)
fixes #125272
bail on standard start when workspace isn't trusted
make sash work better on ios
sash: use DomEmitter
Revert "use associatedResource instead of untitledResource, https://github.com/microsoft/vscode/issues/125028"
remove deprecated notebook-namespace, notebooks is the future
Allows to directly return an array of inline completions instead of an InlineCompletionList.
use vscode.notebooks not vscode.notebook
Set icon for custom pty terminals
more api polish
use associatedResource instead of untitledResource, https://github.com/microsoft/vscode/issues/125028
Sort content of XLF files
adopt viewType everywhere and drop support for it, fixes https://github.com/microsoft/vscode/issues/125163
fix https://github.com/microsoft/vscode/issues/125163
(re)move NotebookCellOutput#id into proposal, also remove ctor overload that allows to set id
editor trust - limit trust validation in `openEditors` to the places we want
tackle more todos, change ctor of NotebookCellData
editors trust - support opening diffs into new window (#124618)
editors trust - make sure diff editors bring up trust dialog too
macOS - workaround fullscreen window regression (#125122)
updated todo search file
move file'ish things into workspace namespace
dnd - only add file system resources (for #125187)
remove deprecated API
rename notebookViewType context key to notebookType
fix https://github.com/microsoft/vscode/issues/125138
make sure appendOutputItems and replaceOutputItems return something
missing adopting for end-call
safari - disable clipboard error notification
Show a confirmation notification when installing/uninstalling shell commands (fix #125145)
Workspace trust - extension enablement (#125179)
skip view column test.
Add "move cell up/down" to the cell context menu when drag and drop is disabled
show notebook profile the first time when a notebook is opened.
select notebook layout action.
Add undo/redo per cell for jupyter profile.
Update QuickPick api doc (#124485)
Group startTime and endTime into a single object
Inline parameters to execution task start and end
Update NotebookCellStatusBarItem constructor
Update provideCellStatusBarItems
Add 'notebookLayout' tag to suggestions
Make registerWalkthrough public
tweak fix
Disable "consolidated run button" in Jupyter profile
fix #125121
fix #125045
Enable consolidated run button by default, now that Jupyter has caught up
fix #125125
fix: update colors
colors: add support for exporting colors
Add import to pull notebook getting started content into build
notebooks: restore renderer messaging generic
Revert "fix #125137"
fix #125137
Revert "fix #125137"
fix #125040
notebook: messaging api polish
Remove extra notebook images
fix #125137
editors - more tests for capabilities
fix #125124
notebook: fix mimetype switcher not working between custom renderers
update todo search file
fix compile issues...
update/tackle todos
remote indicator: remove vscode-vfs workaround
Focuses the editor after showing next/previous inline completion.
Sets user-select: none to the hover actions so they cannot be selected anymore.
Add a protocol property to tunnels that corresponds to the attributes for that tunnel and is reflected in the UI.
Forwards the isUndoing/isRedoing flags to the extension host and introduces TextDocumentChangeReason.
update todo@api search file
bump versions
fixes #124850
Settings: remove notification that changes are saved (fix #69349)
remove dedicated types for notebook and cell metadata
remove NotebookCellOutputItem#metadata
Revert "fixes #115535"
small jsdoc and todo tweaks
fixes #125026
update distro
Run OSS Tool
notebooks - tweak description for untitled files
Don't hide suggest widget when expanding ghost text
[json/css/html] update services
Move vscode.newWindow & vscode.removeFromRecentlyOpened out of apiCommands. For #110583
update my-endgame notebook
Removes g flag from wordPatterns.
more todos
Adds leftTrim function, fixes bug in inlineCompletionToGhostText.
The replaced text does only need to be a prefix of the insert text after removing all leading whitespace.
polish remote menu control actions
readonly [] over ReadonlyArray...
Expose the inline completions provider in the monaco editor.
more todos for notebook API...
updated code search file
:lipstick:
rename hasExecutionOrder to supportsExecutionOrder
rename viewType to notebookType, https://github.com/microsoft/vscode/issues/122922
Remove default support from  vscode-translations-import
Update descriptions
jsdoc and todos
Remove handling of Default inno setup file
notebook API finalization part1
more API todos
move renderer script and IPC into proposed and merge with general renderer IPC, https://github.com/microsoft/vscode/issues/123601
jsdoc :lipstick:
remove resolved todo
rename namespace to notebooks, https://github.com/microsoft/vscode/issues/122922
update untitled hint to work, use the correct setting name
fixes #122402
move onDidChangeNotebookCellExecutionState into proposed, https://github.com/microsoft/vscode/issues/124970
Only trigger session when typing, not when the model context changes.
Disables rendering visible whitespace due to feedback. This makes ghost text less real.
Swaps previous and next inline completion actions in the hover menu.
Add prebuild commands
custom hover for remote indicator
support custom hover on status bar entries
don't use console.trace for all...
print trace for potential cycle, https://github.com/microsoft/vscode/issues/124723#issuecomment-850674813
don't use console.trace for all...
print trace for potential cycle, https://github.com/microsoft/vscode/issues/124723#issuecomment-850674813
Call adjustWhitespace on snippet.
Don't compute ghost text that is not supported. Thus, no space is reserved for unsupported ghost text.
refactor for cleaner initialization (#124904)
Revert change in default due to build failures
Uncapitalise theme scope regex
Change executionState to state
Remove API todo
jsdoc for notebook cell statusbar API
Tune getting startred color picker
Remove "primary" in favor of alway opening the first applicable walkthrough
Enable getting started as default startup editor
Try to match shape and shadows
editors - more alignments across editor inputs
Open getting started the first time a notebook is opened
Finish getting started content
Don't include our loader in notebooks (#124864)
Correct dev container info in README
Refresh dev container content
Add notebook profiles to Getting Started
Bump TS build version
Improve hover stability and handle case where mouse is directly over inline ghosted text
update distro
Workspace trust explainer in getting started
Avoid scaling down SVGs in Getting Started
Include import ref to markdown so it gets included in bundle
fixes #115535
Typo
fixes #124850
update classifier
Get expected service worker version from renderer instead of main.js
Use unique id for releaseNotes webview
Remove unused code for rewriting endpoint
Disable consolidated run button by default
refactor codeExchangeProxy to use same route and use it for refresh token as well
editors - unset preferred mode/contents before attempting to resolve
send Output metadata, not just OutputItem metadata, to renderer
Show hover over multiline ghost text
add api-todo code search file
Introduce `HoverAnchor` to allow hovering on something other than a range
rename NotebookCellOutput#outputs to #items
Tweaks the effect of showSuggestionPreview and introduces showInlineCompletions. Explicitly triggering inline completions will now work even if settings are disabled.
fix #124842
more API todos
more jsdoc, also more API-todos...
Remove padding left (#124823)
do not use shadow dom for editor context menu for iOS
add jsdoc placeholder everywhere
Add `mightBeForeignElement` detail for `CONTENT_TEXT` mouse target types
Adds menu 'editor/inlineCompletions/actions' that extensions can contribute to.
Changes shortcuts of next/previous inline completion to Alt + Open/Close Square Bracket.
Keep track of the span node used for hit testing
Remove `IHoverPart.equals`
Reorder participants to improve stability
jsdoc for NotebookController
update jsdoc for `NotebookCellExecution`
smoke: trust dialog should appear in 5 seconds, and we can ignore if it doesn't
Use loading + spin codicon for task terminals status Part of https://github.com/microsoft/vscode/issues/121659
refine output modifications of NotebookCellExecution
editors - add tests for capability change events
files - need to track individual readonly stats everywhere (#124524)
files - provide access to stat object from not modified error
fix https://github.com/microsoft/vscode/issues/123570
Removed unused MarkdownString.
fix smoke tests (#124814)
set max zoom to 8 (#124769)
Refactors inline completions model.
Do not accept suggestion on tab if indentation is suggested.
Use explicit context when the user cycles through suggestions.
fix post-merge hickup
fixes #124809
editors - more tweaks to dnd behaviour
Dont center markdown content
Implement run button with extra actions, and "run above"/"run below" actions
Add first pass of color theme selection markdown content
Remove ansi escapes from localized string
Re-enable skipped test
Ban trailing ws in token color settings schema
Update color customization interfaces Introduce concept of theme scopes in the theme setting types. Template literal types are broken in vscode repo, so we dupe interfaces.
Clean up profile provider api
Disallow custom profiles as default
Support launching contributed profiles from dropdown
Add undocumented always syntax only TS server mode
Add an `InlineCompletionsHoverParticipant`
Bump sw version
Use @types/vscode-webview
update left aligned plus button margin.
fix #124774
fix regex escaping
testing: move back to proposed
testing: hotkey for opening output peek
Support contributed profiles in dropdown
enable workspace trust by default #wt
fix build.
Tweak remote workspace trust calculation
support editor options override.
Tweak wording, fix #124724
Update distro
Support for @recommended:languages search (#124546)
Migrate users from shell -> profile settings (#124615)
editors - log error when opening fails
support context keys in menu bar (#124726)
fix https://github.com/microsoft/vscode/issues/122376
Add a `description` field to decorations to be able to find leaks
rename NotebookKernelPreload to NotebookRendererScript
remove NotebookCellOutputItem#value, https://github.com/microsoft/vscode/issues/123884
Support workspace trust in terminal
use isVirtualWorkspace
Minor tweaks
Small tweaks
Move parts of the triggering logic into the widget
Wait for listen when making tunnels
workbench API: assumeGalleryExtensionsAreAddressable
Show default profile on top of term dropdown
Improve editor DND to work with untyped resource editor inputs (#124749)
editors - use preferred content only once
some jsdoc for NotebookCellExecution
editors - input :lipstick:
editors dnd - more :lipstick:
rename NotebookCellExecutionTask to NotebookCellExecution
dart: fix language configuration location
fix build
fix isNoCorsEnvironment
editors dnd - fix dirty contents in files diff
editors dnd - enable diff editor transfer
editors dnd - fix untitled transfer
editors dnd - towards allowing any untyped editor input
fix config default value.
editors dnd - some more cleanup
editors dnd - rework to allow to set contents to untyped editors
fix typo in files.ts (#124693)
smoke test - disable experiments
Remove keymaps from getting started walkthrough
Call post message to all parent clients
Rename keys and support full context key expressions for check offs
fix build.
fix build.
notebook options respond to view type specific cell toolbar position.
try showing the banner only after some files have been opened
Disable additional token color props
testing: fix hidden tests not being un-hidable
update context based on outputs.
notebooks: update state of messaging spec internally
testing: fix terminal being shown inappropriately, use beaker
Remove `instanceof` check
fixes #124692
Keep the `ColorPickerModel` alive between repaints in the `ColorHover`
Help TS understand the code
fixes #124702
add notification if tsserver logs are left on for more than 7 days (#124149)
bump distro
testing: additional actions and better theming for peek
Extract more color picker related logic to `ColorHoverParticipant`
Extract pieces of the Color Picker logic to a new `ColorHoverParticipant`
:lipstick:
update compact view default value.
Pick up TS 4.3 final
:lipstick:
Workspace trust - remote workspace (#124617)
Show clear outputs only when there is kernel.
distro
Removed unused member.
distro
refactor getCallbackEnvironment to return authority by default
Properly support splitting ext profiles
Pass object instead of unwrapped args for term create
move buildExtensionMedia to lib
missing build
Simplify terminal creation
Get split terminals working
Adds proposed API for window.getInlineCompletionItemController(...).onDidShowCompletionItem.
Revert "Allow extensions to create multiple sessions from the same provider (#124640)" (#124705)
Set suggestionPreviewExpanded to true by default.
Add theme scope validation in tokenColorSchema
Make notebook renderer activate potentially async (#124647)
Modified markdown preview nested list styling (#124445)
Remove `HoverPartInfo`
Add `IHoverPart.owner`
bump distro
Update commands.json
Activation event, register api
file working copies - do not throw from ctor anymore when schemes are unexpected
disable fullscreen on ios
test: add test for event Relay (#119070)
remove old notification
remove old license notification
Check that the /build/ folder compiles
expose Grid.onDidScroll
fix naming
Web: "Open Folder" on empty workspace does nothing
disable welcome editor in smoke tests (fix #124674)
Color.Format.Css.format does not return null, so the return type can be made more strict. (#124568)
use actual object
fixes #124407
update node version in optimize
fix build compilation
some more jsdoc, https://github.com/microsoft/vscode/issues/124357
some enforcement of unique mime types in the extension host, https://github.com/microsoft/vscode/issues/124357
dart as built-in language
unnecessary space in in julia cgmanifest
some more :lipstsick: and simplifications
only pick the first occurrence of an item per mimetype, ignore others, https://github.com/microsoft/vscode/issues/124357
fixes #123543
Update README.md
fixes #124507
some :lipstick: for  https://github.com/microsoft/vscode/issues/124357
fixes #124576
editors - cleanup untyped editor interfaces for text capabilities
cleanup interfaces
Update classifier.json
webview - clear group listener when it gets disposed
sandbox - bring in iframe based webview service
Get rid of classes for workbench editor options (#124589)
editor options - more :lipstick: before merge
Allow extensions to create multiple sessions from the same provider (#124640)
Shift execution count label down just a bit
Explicitly convert properties to strings before uploading
Mark a few more props as readonly
ReadonlyArray -> readonly arr[]
Mark array params in vscode.d.ts readonly (#124599)
fix tests
testing: add clear test button to peek view title
testing: initial test message split view
Applied new style to first getting started walkthrough
Getting started layout polish
fixes #124619 #wt
fix weird border rendering on windows.
fix integration test
fix build
dropAndDrop -> dragAndDrop
vfs -> virtualfs
remote menu: sort entries of current remote first
Hide TestReolver.newWindow when in virtual workspace
test resolver: supports untrusted workspaces
fixed notebook focus indicator margin
fix missing markdown height update
update markdown height on options change.
fix pwsh profile test failures (#124613)
oops
Make showCellStatusBarAfterExecute not experimental
Add option to show cell statusbar after execution
wip
fix #124583
Support terminal renaming inline in the tabs view (#124533)
Add reset to default to terminal tab color selector
editors - more EditorOptions cleanup
Removes unused const.
editors - more EditorOptions cleanup
remove folding classes first when config change.
Enable notebook renderers on web (#124557)
editors - remove EditorOptions
Enable notebook renderers on web (#124557)
clarify that NotebookController#id should be stable, https://github.com/microsoft/vscode/issues/124535
editors - remove TextEditorOptions
editors - remove TextOptions#create
editors - remove TextOptions#from
editors - remove TextOptions#fromEditor
editors - remove TextOptions#apply
TestResolver, use 127.0.0.1, not localhost
Implements basic cycling through completions.
Clear inline suggestions cache on commit.
icon label: supportIcons implies LabelWithHighlights
missing validation for top-level token color object
Workspace trust - no need to call setWorkspaceTrust (#124566)
editors - start to remove typed editor options (notebooks, search)
editors - fix cyclic dependencies
editors - more cleanup of large files
Force inheritEnv in ext debug terminals
Default bash, zsh and fish to login shells on macOS
Add self to workbench-diagnostics
Removes unused import.
Adds option "editor.suggest.suggestionPreviewExpanded" to toggle whether suggestion previews are expanded by default.
update distro
rename trusted types CSP from notebookOutputRenderer to just notebookRenderer
rename notebookOutputRenderer to notebookRenderer, https://github.com/microsoft/vscode/issues/121819
validation :lipstick: https://github.com/microsoft/vscode/issues/121819
editors - extract input and side by side to own classes
more complete cell info for markup renderers
add ICellInfo#data to eventually replace bytes
NotebookCellOutputItem factories allow for metadata, expose "bytes" as data property, deprecate value-property, fix converter issues, https://github.com/microsoft/vscode/issues/123884
editors - more dnd code polish towards any editor dnd
fix tests on windows
editors - make dnd code ready to delegate serialisation to respective editors
editors - cleanup editor descriptors and :lipstick:
web - offer upload action only for editable folders
editors - introduce and adopt capabilities
more API todos
Bump browserslist from 4.16.1 to 4.16.6 (#124550)
:lipstick:
Fall back to existing published webview commit (#119295)
chore: bump electron@12.0.9
Preserve execution summary when converting dto
Add @feature/notebook
rename markdown layout section.
:lipstick:
compute position/width of output action bar.
remove kernel picker config in menu contribution
Update subscribers.json
testing: add default keybindings
Remove unused
notebooks: remove deprecated vscode css vars from webview
Add workspacePlatform context key for getting started items Closes #123824
fix unit tests.
notebook open layout settings.
üëã Rachel, üëã Tyler
Close #122570
move nb layout settings out of experiments.
Respect soft revert for custom editors (#115658)
Update distro
testing: improve support for markdown messages
markdown: add nbsp to unescaped sequences
added bottom spacing for table in markdown preview (#124385)
Resolve todos
Show tab prefix before icon is ready
Don't show icon until its resolved
Share profile property schema
Remove show all colors, add settings intellisense
fix scroll in table widget #wt fixes #124314
Support terminal link word wrapping (#124514)
update distro
Use remote reconnection constants  (#124517)
insert toolbar on the left.
testing: move apis to stable
Support any theme color
Dynamically generate terminal color css
Support colors in terminal profile setting
Remove overrides from editor service (#124375)
option to hide terminal tabs if there is only a single group fixes #122348
Add fallback webviewExternalEndpoint in code
Updated "Code - OSS" icon for macOS Big Sur
Close #119722
retry logic for setting password (#124390)
Increase timeout for webview focus change
return early
Move find file references into the search group
Set proper context on new cell output toolbar
Close #122795
fix zero height output height.
Updating pinning test
Split href before decoding instead of after
title for notebook label in notebook toolbar
Add image specific link normalizer (#124400)
Add types
fix #119214.
extract complex options parsing.
testing: improvements when running a previously un-run test
freeze layout config.
extract configuration update
Allow single line decorations that are not at the end of the line
Use better logic for getting scheme and avoid extra decoding for authority
fix tests
Implement dragAndDrop enable setting
Avoid double encoding authority
Remove unused type
Remove extra call to with
testing: fix auto run triggering test multiple times
Allow toSide #119725
Close #119725
Make sure we decode uri path
Remove unused member
testing: provide test IDs in menu contributions, rather than internal elements
Refactors the inline completion feature.
Try fix (#124384)
Tweak output toolbar position
fix incorrect links (#124203)
Remove a few instances of 'vs code' in d.ts
fix #124360
Remove uuid from webview resource uris
Rewrite webview urls to be more url-ish
update folding on mouse over
editors - some type :lipstick: around setInput
drop as-prefix for ICreateCellInfo
editors - simplify some serialized editor input
Improve guard against unexpected URI call
fix leaking of NotebookCellOutputTextModel and NotebookCellOutputTextModel#_onDidChange, fyi @rebornix
more jsdoc
Add `RemoteAuthorityResolver.getCanonicalURI`
Add `ResolvedOptions.isTrusted`
:lipstick: prefer `readonly` over `public readonly`
Use vendor-prefix for notebook specific mime-types, e.g application/vnd.code.notebook.stdout
Store conflicting defaults in storage service (#124366)
fixes #122653
builtin support image/gif mime type
consolidate SVGRendererContrib and HTMLRendererContrib - both were the same...
consolidate JSONRenderer and CodeRenderer
fix code renderer layouting issues
[typescript] add limited description
allow to signal limited functionality in virtual workspaces
Bump distro
jsdoc for factories, some unit tests, https://github.com/microsoft/vscode/issues/123884
:lipstick:
enforce proposed API for shortTitle proposal, https://github.com/microsoft/vscode/issues/124355
 Listen on local interface only (#124350)
expose output item bytes to renderers and provide util functions: asText, asJSON, asBytes, asBlob, fyi @connor4312, https://github.com/microsoft/vscode/issues/123884
SVG images are not render in the tooltip (fix #123688)
scm do not auto focus input box on iPad
editors - some :lipstick: and tests for workspace trust in openEditors
Renames Suggestion to Completion and cleans up API
handle workspace uris
try to use suffix for view type when creating untitled notebook, fyi @brettfo, https://github.com/microsoft/vscode/issues/121974
debug: properly read the debug.saveBeforeStart respecting activeEditorMode
move and simplify renderer registry
declare IRenderMainframeOutput#dispose and adopt it for builtin renderer
todo
first cut of "bytes only" output items
smoke test - disable failing search test
notebooks - add test for NotebookWorkingCopyTypeIdentifier
notebooks - fix type identifier compute
fix typo
fileworkingcopymanager2 => fileworkingcopymanager
file working copy => stored file working copy
Close #124325
notebook working copy - some cleanup before refactorings
editors - less group.openEditor usage
Generalize smoke text
Add smoke test for #124146
fix #124284
testing: show duration for test results, handle state computation better
Remove console.log
Switch to use vscode-webview.net as default webview endpoint
Mark properties readonly
cell toolbar overlap with notebook toolbar.
fire event when trust is change in empty window #wt
update text for loose file button #wt
Remove duplication around checking isRemote
add setting and checkbox for untrusted files #wt
Emmet identify CDATA for wrap, fixes #123136
Revert "Revert "Revert "Closes #122433"""
Dispose CKS
debug: finalize parentSession
Persist title source and set after reconnect
Short title for command contribution.
Use isRemote instead of remote authority to determine where to load from
Terminal tab icon API (#124004)
do not auto focus on ios extensions input and keybindings
Revert "Revert "Closes #122433""
Use untyped editors for workspace trust
notebook: address messaging api changes
Use extension location instead of remote for asWebviewUri
Apply Logan's suggested changes
notebook: fix certain kernels/output not working
notebook: fix certain kernels/output not working
Debounce invoking the inline suggestions provider
Add a command to hide the inline suggestions
Remove log
experimentalUseTitleEvent -> titleMode
Truncate Windows path from sequence, do title handling based on remote OS
Render only one line of ghosted text by default
:lipstick: less casts
Hide hover on target element(s) click
Render the suggest widget above when rendering a multi-line preview
Do not shrink the additional lines once a shorter suggestion is displayed
file working copy - avoid ugly casts
Hover hover when context menu is shown
Hide ghosted text when it wants to be displayed in the middle of a line
Create a `InlineSuggestionsSession` also when showing suggestions
Invalidate current suggestion based on cursor position
Only start a session after a content change (with debouncing)
Add `editor.suggest.showSuggestionPreview` to turn on/off inline suggestions
node-debug@1.44.28
üíÑ acceptsNonWorkspaceFiles -> acceptsOutOfWorkspaceFiles
fixes #123469
Do not force the instantiation of the `SuggestWidget`
Tweak loose file dialog warning
working copy manager - clean up some types add some new APIs on manager2 for unified access: - get(resource): working copy - workingCopies: workingcopy[] - onDidCreate: Event<working copy>
Introduces a GhostTextWidget model to enable data binding.
Workspace trust - empty workspace (#123811)
Implement consolidated output toolbar
Revert "Closes #122433"
Remove code allowing multiple ids for a command
Add sort imports command
Test using readonly[] syntax in vscode.d.ts
Simplify logic for webview resource uris (#123740)
Update simple service
notebook: initial renderer communication
Make `reload webviews` support webview-views
Extract isRequestFromSafeContext
Allow loading svgs from xhr
fix test suite.
use custom shield dialog #wt
Strict null fixes in webview
Check `defaultPrevented` before showing built-in webview context menu
removing more unecessary whitespace
removing unecessary spaces
improve banner for virtual workspace
pr feedback and combining prevEditor info for preview and non-preview
Pick up TS 4.3.1-rc
Update markdown grammar
Avoid listener leak warning due to reusing cancel token for many RPC calls
Add suiteRepeat test util
hide kernel status bar item if it is already rendered in notebook toolbar.
Avoid illegal line numbers in case of undoing a completion at the end of the file
Improve contrast
Do not invoke provideInlineSuggestions when just moving the cursor
notebook toolbar container display none by default.
Have the `InlineSuggestionsModel` listen to events directly
fix focus indicator default value.
Respect the suggest widget only when there are suggestions
Update list focus highlight color in standaloned editor Refs #123703
Rearrange actual group splits, not just instances
Add theme key for terminal dnd
notebook: include script url in back compat patch
Clean up
Reinit dnd observer after reattach
Avoid selecting accepted text
Give clearer names and add comment
Fallback to fetch if localhost resolve fails
Add explicit null typings
Use searchParams to get id
Throw error when trying to reload/navigate within a webview
Support dragging to unsplit
insertToolbarPosition
Support creating splits in different groups
Support rearranging splits
Close #123935
use dummy uri
Improved hover feedback
Remove custom height, use default from menu service #123869
Closes #122433
update actions column width #wt
Terminal dnd feedback
fix padding for table #wt
fix issue when not connected to remote #wt
Update according to suggestion
Replace flush with setFlushOn with loglevel info, fixes #123856
Partially implement terminal drag and drop
don't show action icons all the time wte
slightly better uri for untitled notebooks, https://github.com/microsoft/vscode/issues/121974
Honor the selection suggestion in the suggest widget (when it is visible)
fixes #123869
focus indicator border or gutter
added default editor override for symbol reveal
show extensions limited due to virtual workspace
tweak terminology for wt entries
use folder terminology due to windows/linux limit
Part of #122996
mark untitled notebooks as dirty by default, don't hold on to untitled notebooks eagerly, https://github.com/microsoft/vscode/issues/121974
wip
status - update description of `name` property
fixes #124085
do not include non configured deprecated restricted settings
add API to open an untitled notebook, https://github.com/microsoft/vscode/issues/121974
Add ending period to --sync
Add ending period fto prof-startup
Allow to show status bar entries with an id and name (fix #74972)
untitled - clarify resolve methods
fix #124102
fix ExtensionRecommendationsService test (for #124119)
Additional navigation keys
Additional details in the aria label
untitled file working copy - test :lipstick:
untitled file working copy - tests for new unified manager
untitled file working copy - add new manager that unifies file and untitled working copies
untitled file working copy - shared dispose handling
untitled file working copy - poperly resolve target
untitled file working copy - set visibility
untitled file working copy - some code :lipstick:
untitled file working copy - fix tests
untitled file working copy - wire in save support
untitled file working copy - add workingcopyservice#get
untitled file working copy - extract common super type for manager
untitled file working copy - extract reusable interfaces
untitled file working copy - :lipstick:
untitled file working copy - tests
untitled file working copy - first cut manager
untitled file working copy - first cut
valide URIs created via from, https://github.com/microsoft/vscode/issues/121198
update color registry names for inline values
remove excess whitespace
fix localization key/description for debugInline colors
add color customizations for inline debug values
fix #124102
fix ExtensionRecommendationsService test (for #124119)
Additional navigation keys
Additional details in the aria label
Add support for untitled file working copies (#124120)
untitled file working copy - test :lipstick:
valide URIs created via from, https://github.com/microsoft/vscode/issues/121198
untitled file working copy - tests for new unified manager
untitled file working copy - add new manager that unifies file and untitled working copies
untitled file working copy - shared dispose handling
Copy testRepeat helper to extension integration tests
remove hover bg color on notebook toolbar icon.
fix mouse click double background
adopt table widget for workspace trust editor
refactor: polish
fix notebook toolbar scrollbar
Remove disposing of editor input in override service
move showDeprecated suggest to be a CompletionOption option
Make notebook toolbar cell visible on click (change notebook.cellToolbarVisibility default)
allow the left toolbar to overflow.
contribute actions to the toolbar.
NotebooKernelActionViewItem accepts notebook editor widget.
keep ref from cellVM to outputVM for now.
Adds Memento.keys #87110
update color registry names for inline values
Adds Uri.from #121198
Move OpenIssueReporter api command registration out of extHostApiCommands (#124068)
debug: expose parent session on DebugSessions
Delay workspace recommendations as remote extensions installations are ongoing For #124119
Re-enable selectionNavigation in terminal tabs
debug: bump node-debug2 version
testing: bad rendering of inline decorations for markdown messages
breakpoints select on stop
use enum
Don't show join in command palette
Support join terminals
workbench web api: builtinExtensionsFilter
add requestOpenUris api
fix #124113
untitled file working copy - poperly resolve target
Polish for some workspace reuse (#123519)
debug: focus breakpoint on debug stop
Close and reopen tunnel when protocol changes
Reduce number of calls to get port attributes
explorer: do not remove dotes at end of filenames before validation
untitled file working copy - set visibility
Tunnel -> Port
install additional debuggers only when at least one debugger present
untitled file working copy - some code :lipstick:
Disable bell sound completely
remove todos about ipynb cell ids
Show status icon in tooltip
Show info terminal statuses in narrow view
Log errors encountered during deactivate
Add protocol to portsAttributes Part of #123750
untitled file working copy - fix tests
untitled file working copy - wire in save support
untitled file working copy - add workingcopyservice#get
better logic for "notebook open/close, notebook ready when cell-document open event is fired", https://github.com/microsoft/vscode/issues/123655
untitled file working copy - extract common super type for manager
untitled file working copy - extract reusable interfaces
fix #123816
add experiment global toolbar.
remove run all cells constraint
Store tab list width in global storage
Make default horizontal tabs width 120px
Move tabs list size constants into const enum
üíÑ
More accessibility improvements
Banner accessibility improvements
Add args to source profile schema
refs #123976
Explicitly flush OutputAppender #123856
Clean up decorations when hiding ghosted text
Pipe language edit counts into CES survey (#124006)
Change the order for ghost text decorations (use a class name that sorts before)
Remove try catch, clean up
Share code between dispose instance and remove instance
untitled file working copy - :lipstick:
Bulk-edit veto dialog use the correct reason
Unsplit terminals
Scaffold ghost text
untitled file working copy - tests
debug issues assign to Andre
untitled file working copy - first cut manager
Improve wording, separate for remote and virtual
sandbox - make CLI commands a native host thing (#123899)
untitled file working copy - first cut
Improve npm trust message
icon contribution: add requires (for #117437)
cleanup link styling
fix icon contribution id validation (for #117437)
untitled editor names :lipstick:
Refactors calls to languages.setLanguageConfiguration to declarative descriptions in language-configuration.json. This fixes #98621.
status bar - fix compile errors
status bar - use secondary priority as sorting criteria (#123827)
state service - do not log expected file not found error
add aria description for workspace trust editor refs #122537
fixes #122537
Add provider label in auth menus (#123922)
fix #123709
Mitigate #123856
allow managing workspace trust from extension icon
fix markdown editor position for compact view.
fix #123819.
fix #121056.
refresh styles after kernel is changed.
compact view.
fixes #123858
fix #123700.
Use Windows mode if build # is <= 19041 (#123725)
update markdown folding icon padding
Trim leading ../ or ./ from quick access query
simplify default view styles.
remove legacy comments.
Update distro
xterm@4.13.0-beta.1
Consistent casing for  `Install Additional ...` quick pick entries
Alt+click to split single tab
debug colors: compress css selectors
Middle click to kill single tab
added comment and removed empty lines
Replaced wmic call with windows-process-tree
Remove dialog in ChangeLocalPortAction Part of microsoft/vscode-remote-release#4958
Incorporate task terminal status feedback
Add drag and drop controller (#123542)
editors - wait for whenReady before accessing groups
[Object object]: Open Workspace Configuration File (fix #123837)
Update default image in README
chore: bump electron@12.0.7
fix #123831 handle command URL in ErrorResponse Message from debug adapter
use details message in UI
fallback to default wt value
undo random change
random change to pipeline
cleanup
update classifier integrated-terminal -> terminal
fix build
Update secrets doc string, fixes #115252
related to #123762, check for windowsExec in settings
Ensure data event is reused
addressed ! nit
Remove NotebookCellExecutionState.Idle
applied PR feedback
findList -> widget
fix #123710
fix #123776
fix #123762
Move disable extensions section higher in bug report template, fixes #110474
üßπ
files - validate readonly flag in some operations
Support default profile intellisense
chore: bump node-pty@0.11.0-beta7
Add exception label color for multithreaded
Support profile icon intellisense
Support overrideName in default terminals
Update distro
chore: bump node-pty@0.11.0-beta6
Remove getDefaultShellAndArgs from tasks
Don't go to ext host for task default shell/args
Log actual vs expected profile names in test
Reduce profile throttle time to 2 seconds
Clarify profiles ready barrier
Simplify resolving of text
Bring back TerminalSettingId usage in platform
Remove workspaceFolder from profiles, included in var resolver now
Replace configuredProfilesOnly with includeDetectedProfiles
Revert accidental change to git.png
Remote ext host ready from terminal service
Removing logs/comments
Change in the optional Custom Editor makes the raw file open (#123057)
workspace trust - remove async from showing editor pane
[Insiders] Throwing error when a file is edited and saved from a diff view (fix #123756)
Allow text search providers to give messages with links that trigger researching. (#123213)
First cut at unifying notebook renderers apis
use mode terminology in viewlet
Make metadata/internalMetadata non-optional
Clarify deprecation message
doneOn => completionEvents implement onLink, onEvent, onCommand, extensionInstalled, stepSelected ref #122570
improvements to unsupported workspace ext filter
:lipstick:
cell toolbar positions
Set default profile in exthost from renderer
fixing issue with static scroll alongside text editor
separate markdown and code cell margins
Update distro
Get remote profiles working
fix #123694
use editorErrorFg
use button theme colors for selected trust state
Wait for profiles before creating first terminal
scroll state persists while toggling between static preview and text
remove check for .debug-call-stack-title
update call stack label in css
update notebook contributions.
update notebook contributions.
update distro
Enable changing color of terminal tab icons  (#123596)
Remove todo comment
trying sync editor input api
update kernel view item when affinity or binding changes
Revert "workaround #123676"
wt enabled
remove old extension point for notebookProvider
Revert "wt enabled"
testing: improve current test filter and welcome experience
testing: use stop instead of cancel icon
testing: fix button size
wt enabled
Try better fix for loading mixed local/remote notebook resources (#123638)
Get profiles detecting on pty host (local)
more trace logging, https://github.com/microsoft/vscode/issues/123700
Remove leftover trusted metadata references
added logging for https://github.com/microsoft/vscode/issues/123700
wip
Log which extension creates what controller when, https://github.com/microsoft/vscode/issues/122409#issuecomment-833448914
kernel action view item shows icon _and_ label
Closes #123674
Better handling of escaped @ in monarch (microsoft/monaco-editor#2424)
Add JSError renderer, experiment with NotebookCellOutputItem#error-factory function, https://github.com/microsoft/vscode/issues/120063
Introduce `addMatchMediaChangeListener` with support for Safari 13.x
Resolve variables on renderer
Restore behavior of `BrowserWindow.setupOpenHandlers` (see microsoft/monaco-editor#2474)
Expose `ITextModel.isAttachedToEditor()` and `ITextModel.onDidChangeAttached`
Typos in tunnelView string Part of microsoft/vscode-remote-release#4958
fix npe
Use dialog for change local port mismatch Part of microsoft/vscode-remote-release#4958
browser url service: hook up to opener service
extension url handler: fix missing gallery
web api: expose uriScheme and openUri
Cannot drop a *. ply file into the window (fix #123496)
Clean up
workaround for https://github.com/microsoft/vscode/issues/123667
workaround #123676
fix https://github.com/microsoft/vscode/issues/123665
mark 'text/x-javascript' as always secure because we only render it
First cut of special action view item for kernel picker command
Update seti theme
Ignore the processing of inherit icon
tests - cover working copy backup discards on shutdown behaviour
tests - avoid real text editor in tests
rename latestExecutionSummary to executionSummary
Allow FileSystemProvider to stat a file as readonly (#73122) (#111237)
fix integration test
Make unsupported check case-insensitive
Dataloss when closing Code before it fully restored with dirty files (fix #123636)
Refactor markup renderer in backlayWebview to be more generic
cell editor bg color should not affect toolbar.
compute markdown indicator height
file working copy - fallback to backup when saving from destroy
Don't expand arguments
Extract theme id matching
Disable broken smoke test #123621
Add remote-authority to webview uri
dispose notebook options.
compute webview options.
compute editor padding.
move cell toolbar location setting into notebook options.
fix cell toolbar position for hidden.
extensions: don't use named regex groups to avoid build err
add cell status bar configuration handling in notebook options.
ViewContext for notebook options and event dispatcher.
bump distro
extensions: allow date-based engines constraint
compute editor width.
extract common layout calculation code.
:lipstick:
use stylesheet text content other than insertRule as the DOM node might not be attached yet.
move layout constants to notebook options.
skip test.
Notebook cell editor background color.
refs #123521
Update src/vs/workbench/api/node/extHostDebugService.ts
Alt click + terminal button to split (#123531)
Do not invoke `resolveWithInteraction` over terminal settings (#123590)
Change grunt, gulp and jake task auto detection to be off by default (#123588)
update seti contribution guide
update seti theme
Extension enablement fix
Bump hosted-git-info from 2.8.8 to 2.8.9 in /test/smoke (#123481)
Task terminal status tweak Part of #121659
destroy working copy manager when view type is removed
better isNotebookCellOutputItem-check
file working copy - let dispose unregister working copies (#123555)
working copy - add has(identifier)
Update spdlog, use lazy initialization in extension host (#123033)
:lipstick: working copy backup discards
Update distro
Include useShellEnvironment in shell dto
:lipstick:
Remove loading icon from task status Part of#121659
close notebook editor when extension goes, e.g extension host restart, https://github.com/microsoft/vscode/issues/123563
Add terminal statuses for tasks Part of #121659
Simplify transition code
Move banner theme colors
simpler onDidChangeDiagnostics-event
make sure to invoke onLastListenerRemove when disposing an Emitter, https://github.com/microsoft/vscode/issues/123487#issuecomment-837160646
fix state tests
:lipstick:
introduce DomEmitter
more jsdoc
Add active editor to editor tabs and use in variable resolver (#123450)
fix tests
Workspace trust - restricted mode banner (#123110)
fix compile errors (our watch task is not reliable?)
state service :lipstick:
rename extension point to "notebooks", fix default value, https://github.com/microsoft/vscode/issues/121819
state - rewrite state main persistence
test that no RPC leaks via NotebookController
more :lipstick: for docs
add openNotebookDocument, onDidOpen-, and onDidCloseNotebookDocument to finaliztion list
Revert "Put authority into webview resource uri"
Remove only
[Getting Started] Allow for localized markdown files Closes #123538
Put authority into webview resource uri
Pick up latest TS nightly for extension
Don't hide tabs view until the mouse leaves it (#123500)
save tabs width in vertical and horizontal terminal panel positions (#123516)
Revert "Move bing settings to its own stage (#123504)" (#123523)
Only use --login for bash/zsh on macOS
add workspace trust required editor (#123181)
fire activeInstanceChanged when active instance is set and more migration from terminalTab -> terminalGroup (#123339)
Move bing settings to its own stage (#123504)
Remove container from instance ctor
Clean up
Add hide option
Improved terminal layout
[html] duplicated onDocumentRangeFormatting handler (#122994)
state service - harden the save code to try to prevent issues
jsdoc tweaks https://github.com/microsoft/vscode/issues/122647
remove unused function, https://github.com/microsoft/vscode/issues/122647
cache layout calls to grid views
grid: latch view.onDidChange events
jsdoc
file upload :lipstick:
Make PortAttributes API a class Part of #115616
Improve local shell wording
Much more aggressive setting conversion
web - upload up to 20 files in parallle to speed things up
Move split terminal back to terminalActions
validate NotebookCellData before passing it to renderer
Add test for C# grammar but Part of https://github.com/microsoft/vscode/issues/123333
Revert C# grammar Part of https://github.com/microsoft/vscode/issues/123333
implicit kernel selection upon: hover, notebook change, cell change, https://github.com/microsoft/vscode/issues/122647
Auto detect scoop git bash paths
let getMatchingKernel return selected and suggested kernels, https://github.com/microsoft/vscode/issues/122647
Revert "Add an "always" options to port source setting"
file editors - move the input to the editor (`browser`)
API :lipstick: for NotebookCellData
explorer - have "Download..." first
remove notebook selector because it isn't needed anymore
:lipstick: use {}-syntax instead of Record, https://github.com/microsoft/vscode/issues/122495
Removes „Ää, „Äã, ‚Äú and ‚Äù as well, as there are urls using these characters.
rename cell kind Markdown to Markup, https://github.com/microsoft/vscode/issues/105933
explorer - consolidate upload/download code and provide a "Upload..." action (web)
editors - adopt working copy handler for files
editors - adopt working copy handler for untitled
Bump hosted-git-info from 2.8.8 to 2.8.9 (#123320)
code editor - move untitled hint contribution
editor group - inline `doOpenEditor`
adopt working copy editor handler and remove custom editor input factory (#123308)
Use asterisk wildcard
fix diff editor reload on content editing.
Add support for eslintrc.json icon
Workspace trust transition participants (#122727)
Add showDeprecated option to suggest, filters out deprecated options
Handle onDrop within TerminalInstance (#123329)
Adopt @ link inside mode.ts (#123198)
always create the artifact file
Rename onDidChangeNotebookCellExecutionState
update artifact name
Keep process explorer window on top, fixes #120391
allow focusing links in custom dialogs refs #122537
handle multiple retries in publish stage
more diff tests.
Error if trying to create a markdown preview that already exists
Don't send execution requests to running cells. This is only a basic best effort
fixes #122655
fixes #122527
Implement GitHub Enterprise authn provider (#115940)
üßπ
notebook: make markdown cell initialization idempotent
fix #123062
use title for terminal selection
:lipstick:
support multiple cell ranges.
handle shift+enter in core.
Update Codicons: Add `inspect` https://github.com/microsoft/vscode-codicons/commit/40014cd4f4415cd8aca14c50370c32346473cf6f
increase width threshold
Hide the inline actions when the width is below a certain threshold (79 pixels)
server-ready: support debugWithEdge as well as debugWithChrome
fixes #122520
Adopt EditorOverrideService for split editor #121668
WIP to move fetching profile out of exthost
simplify changes
Add cancel button to manage trusted extensions quickpick, fixes #113347
working copy - add a working copy editor handler for complex notebooks
remove isIpad flag, use a more generic isIOS
fixes #121206
Put constants into enum.
fixes #122390
update distro
update to latest `vscode-oniguruma` and `vscode-textmate`
Use virtual workspace scheme in path service
Render terminal dropdown on right element when updating
Allow default profile at workspace scope
Bring back select/reveal active tab on instance change
bootstrap code :lipstick:
Remove logs
Select a fallback profile as an existing profile if possible
some jsdoc for NotebookCell, esp for https://github.com/microsoft/vscode/issues/123269
Have defaultProfile show up in terminal dropdown
hide breadcrumbs at start, https://github.com/microsoft/vscode/issues/112630#issuecomment-834363944
even more strict assertions in flaky integration tests
:lipstick:
add unit test for cancellation and interrupt
fix notebook unit tests using willRemove event
move NotebookCellExecutionTask into extHostNotebookKernels, fyi @roblourens
output should be readonly
:lipstick:
check that a cell is still "alive" and only iff so start executing it, fixes https://github.com/microsoft/vscode/issues/123269
fixes #122048
Remove duplicated editor actions
fix https://github.com/microsoft/vscode/issues/123268
skipped/failing test for https://github.com/microsoft/vscode/issues/123270
run saveAllFilesAndCloseAll in setup and teardown and don't have it in each and every test, avoid usage of 'vscode.openWith'-command and prefer `showNotebookDocument`-API
Avoid having two contributions or two actions with the same id
Clear maps in `dispose()`
fixes #121989
fixes #123036
working copy - introduce generic resource working copy that can track orphaned state
store extension identifier with NotebookProviderInfo
fix bad yml name
Bump underscore from 1.8.3 to 1.12.1 (#123206)
Bump lodash from 4.17.19 to 4.17.21 in /build (#123211)
Bump lodash from 4.17.19 to 4.17.21 (#123212)
resource editor input - add tests
editors - introduce a `AbstractTextResourceEditorInput` for some label sharing
fix #96715
fix #123116 (#123196)
fix #123156
remove excess whitespace
fix #123203 and fix #123117
Force shell env for tasks
Clean up
:lipstick:
Render KaTeX errors in notebooks
Revert "Defer awaiting the service worker until we actually write content into the webview"
Workbench statusbar cell counter should show total cell count
Cleanup - don't use execute action for putting markdown cells back in preview mode. Instead, created a separate ctrl+enter keybinding for markdown cells
Set access control header on service worker resource responses
Enable markdown notebook extensions in untrusted workspaces
Enable notebook markdown-extensions in virtualWorkspaces
Adding documentation
Ensure terminal icons don't flicker when launching
Support vertical separator for primary groups in toolbar.
Delete dupe cell statusbar provider
Add release stage back (#123204)
Allow "revert file" to revert search config too
Adopt @ link in few places internally
Use shell environment based on setting
Adopt @ link in a few more places
Defer awaiting the service worker until we actually write content into the webview
Use arguments instead of string replacement in the preload script
Remove unused
Remove unneccesary matches
Remember instance of check
debug.saveBeforeStart should be overridable by language
fix #121359.
Improve utility function names
exclusive => default Ref #121668
Remove extra newline
Remove unused
Properyl dipsoe of unused editor input
Finish fixt for #120221
[Search Editor] Adopt new editorOverrideService Ref #121668
testing: refactor actions to allow multiple running, contributions
testing: make uri optional
testing: avoid jumping number
WIP fix for tasks/shell env
combine publishing of blobs
Switch priority of shell/shellArgs and defaultProfile setting
fix #123040
Better fallback logic
Allow to pass `NotebookRegistrationData` when registering serializer or content provider, https://github.com/microsoft/vscode/issues/122733
Remove hanging import
use assertType, add isICellRange-util
Reduce editor association setting verbosity. (#123017)
fixes #123041
Add close option to several tasks Part of #112230
make sure EditorEditTask modifies the wanted model, https://github.com/microsoft/vscode/issues/122883
add leak test scaffolding
editors - move decorateFileEditorLabel to common place
editors - make closing a non-resolved editor on file deletes work with any editor
suggest detals widget leaks sashes, https://github.com/microsoft/vscode/issues/122668
remove memoize.clear
sandbox - more lifting of extensions related management contributions
sandbox - move some files to electron-sandbox that are ready
Allow rapid render in sandbox (#122828) (#122830)
:lipstick: shutdown wording from backup tracker
:lipstick: comment
fix #123024.
fix localization key/description for debugInline colors
add color customizations for inline debug values
re-add web
fix #122227
fixes #122598
match notification button styling fixes #122522
pass in accesstoken into build
Try to block print keyboard shortcut in webviews
Add explicit menu item order for webview context menu
show trustReq exts when an untrusted workspace
notebook: use initializeMarkdownPreview to avoid flickering
notebook: reload backLayerWebView when kernels change
Add basic copy/paste/cut context menu actions to webviews
Remove custom latex css rules
:lipstick:
more #122668.
rev distro again
rev distro
Initial move to a Publish stage (#122886)
Update nb symbol highlighting for new dom structure
Make code in comparers.ts a bit more concise
un-ref CellDragAndDrop.
Add missing _register and unref on dispose.
rev distro
Prevent listeners circular ref each other @jrieken
rev distro
first attempt
Don't insert link element into the markdown cell preview body
update distro
use square not curly brackets
Revert "Update spdlog, affects #121513"
Update Codicons: fix refresh icon https://github.com/microsoft/vscode-codicons/commit/54745ba98510f372bd7dd1098cf5b43ab49d95f7
removed duplicates from the python tags (#122952)
update terminalService
update distro
Update spdlog, affects #121513
Add checks for notebook.cellToolbarVisibility
Persist terminal tab icons and titles on window reload (#123010)
Update logic for toolbar visibility on click
Add setting to toggle notebook toolbar visibility
Pick up new TS nightly
Bumps RemoteHub version
Only run upload-vscode-configuration when publishing
fix compile errors
Combine build ext and build ext media tasks
clear breadcrumbs when closing last editor, https://github.com/microsoft/vscode/issues/122668
Improve creation of launch.json JSON scheme
unset notebook widget from borrowable references, https://github.com/microsoft/vscode/issues/122668
Make port auto forwarding more sequential
more :lipstick:
:lipstick:
remove stickys
dispose all emitters of resizable, https://github.com/microsoft/vscode/issues/122668
fix another notebook widget leakage, https://github.com/microsoft/vscode/issues/122668
fix notebook editors that leak via duplicated contributions
fix leaking execute menu
file input - lift some code up that is only specific to files
slim-down NotebookProviderInfo
Adds link to unicode emoji spec.
dispose working copy manager when disposing serializer, fyi @bpasero
push a workaround for #122990
hot exit - turn progress on shutdown to a modal dialog (#122774)
api todos
fix region comments
Make state service async (#122977)
remove vscode.notebook.createNotebookCellExecutionTask
perf :lipstick:
automatically convert notebook range to its internal type, https://github.com/microsoft/vscode/issues/122877
throw error when creating an execution task for a notebook that the controller isn't associated to, https://github.com/microsoft/vscode/issues/122877
less openWith-command, more editor asserting, https://github.com/microsoft/vscode/issues/122851
get context menu to work for selected tab
Extended theme customisation syntax Multiple scopes per customisation Wildcard scopes using `...`
Remove usages of deprecated assert methods. Have to deal with null proto objects vs normal proto objects #118667
trust the workspace file directly
Select the active terminal - not the focused one and allow right clicking to apply context menu (#122958)
Dont override parent's instantiation service, use our own scoped one when creating query editor widget Closes #120699
Revert "fix search editor (#120699)"
respect vscode open cell text document with selection.
Scope standalone quick pick focused highlight
Remove typo
Support standalone editor quick pick changes
Add codicons in custom quick pick color inheritance
Remove unnecessary character from ces survey url
Make sure we actually update the local resource roots
More deprecated assertion cleanup
notEqual -> notStrictEqual
QuickPick now fires the `onDidChangeValue` when setting value manually (#122948)
notebooks: improve renderer message passing
remove old asserts from git tests
Remove assert.equal from custom editor tests
Simplify condition
109216 Sanitize Process Environment before spawning terminal instance
Remove textarea listener, element is enough
Remove duplicate listeners
Update API tests to strict equal
initialize pty host log level (#122943)
show modal only if window is focused fixes #122450
Update deprecated html language features
Update deprecated typescript tests
Removed deprecated assert from css-language-features
rename externalTerminal contrib
select environment quick pick polish
Remove imagePreview.border
get desktop externalTerminal menu entry working again
Remove any from xterm theme method
Update focus highlight color on light theme
fix #118405
terminalTab -> terminalGroup (#122891)
Removed unused telemetry.
tests for https://github.com/microsoft/vscode/issues/122927
Remove shell environment patching from shared process (fix #121947) (#122846)
invoke notebook serialize with data that's to be persisted only, https://github.com/microsoft/vscode/issues/122927
[json] update service
structure notebooks API along planned finalization,  https://github.com/microsoft/vscode/issues/122922
Finalize TerminalOptions.message API
Extract nested functions.
Remove explicit public from platform terminal
Remove explicit public from contrib/terminal
Relax const rule
Use pascal case for term enums
Change casing of terminal command id enum
use showNotebookDocument instead of command, maybe https://github.com/microsoft/vscode/issues/122851
Lint progress
Add some eslint rules to terminal
Initial implementation of drag and drop api (#122239)
sandbox - remove terminal related simple services
fix smoketest
Update grammars
Update distro
Remove `--no-sandbox` (#122909)
chore: bump node@14.x in devDependencies (#122905)
Finish removing terminal from electron-browser
:chore: more action2 adoptions
Remove native delete from terminal native contribution
Add getWslPath to pty service
Remove native dependency on shell setting registration
Move electron profile resolver service to sandbox
Remove electron-browser instance service
Remove onRequestDefaultShellAndArgs
api for may
at a way to confirm a suggested kernel, https://github.com/microsoft/vscode/issues/122647
only load preloads when kernel is selected
Update distro
Rename getShellEnvironment to getEnvironment
fix search editor (#120699)
Remove inheritEnv, don't use shell env
Add listFocusHighlightForeground
Update quick pick focused state
externalTerminal renderer -> main process (#122871)
Update md grammar
Spelling
testing: improve display of line numbers and markdown messages in diff peek
peek: use title instead of aria-label so truncated text is visible
peek: fix text not truncating in peekview title
Name all notebook action classes
Remove notebook.trust command
Pick up TS 4.3 nightly
Remove 'trusted' notebook document See #118584 for more
Use @ link in vscode.d.ts
Update TS version for building VS Code
search: fix bad crlf normalization for negated character classes
search: fix bad crlf normalization for negated character classes
allow trust editor to shrink better fixes #122523
fix scroll bar in trust editor refs #122523
remove padding trust editor refs #122523
fixes #122302
fixes #120923
Emmet fix #122231
:lipstick:
Remove a11y service
Remove comment
Convert some references to tree/widget with list
Convert tabs to use list instead of tree
remove unused import
fixes #120946
Update all usages of full setting to use const
Move terminal settings into const enum
Change the configure default picker (#122863)
Add simple override tests, part of #121792
fix #122668
notebook: convert NotebookKernelPreload to a class
Block windows/iframes from preventing the unload (#122835)
fix #121216
Register .mak extension for the Make language (#122614)
Menu migration (#122599)
fs - preserve previous error when moving to trash throws
:up: distro
windows - :up: dependencies (remote)
:up: web dependencies (jschardet)
:up: remote dependencies (jschardet, graceful-fs)
:chore: - adopt some action2 over deprecated workbench actions
:up: windows-mutex@0.4.1
:up: windows-foreground-love@0.4.0
:up: jschardet@3.0.0
:up: graceful-fs@4.2.6
Remove shell environment patching in the renderer (fix #108804)
:chore: - adopt some Electron 12 API
ux - convert some notifications to dialogs
electron - stop delaying the quit method artifically
:chore: some code cleanup
fixes #122834
compare with - stop using editor override hack
web - stop using window.localStorage
state service - allow multiple setItems at once
Expand capabilities of canSetWorkspaceTrust
move constructor to one line
fix #122332
ThemeMainService: update window background color
Only disable onbeforeunload if using iframe based webviews
Cleanup modal property from proposed api
Remove workspace trust soft notification code from core
Cleanup code
Improve docs for TextEditor.setDecorations
Enable infer function return type for 4.3+
Add Reload Window to disconnected remote indicator menu github/codespaces#2659
Document new behavior of postMesage on VS Code 1.57+
fix #120284
fix navigate previous on start.
extract notebook find model and support content update research. fix #112748.
fix #122589
Remove debug attr
Try to block webviews from cancelling unloads
don't escape quick input validation message (#120593)
Ensure that notebook cell URIs work (#122746)
update my-work to May
add 'notebookKernelSelected' context
Update package.json
:lipstick: don't use object as map
Ensure inline action applies to terminal out of selection
more inlay...
Revert "Use a menu instead of hard coding actions in tabsWidget (#122461)"
rename InlineHint to InlayHint, make it InlayHint only and keep OverlayHint as a future, separate feature, remove hover message
more insights when execution integration tests fail
fix #122699 (#122712)
fix: use addListener instead of addEventListener to observe media query lists
fixes microsoft/vscode-remote-release#4970
remove workbench-web*html
debug: update companion version
Bumps RemoteHub version
Use single quotes instead of double quotes (#122703)
fix #121647
bump builtin modules
fix #122608 (#122616)
Add missing scope to settings
testing: propoagate timeout option for unit tests
Re-enables Git extension for virtual workspaces
pass configuration in from processManager -> remoteTerminalService
fix #120848.
Updates endgame notebook repos
re #120545
revert change to hide condition
fix #122334
fix integration tests
testing: fix welcome view being shown if tests were synchronously available
change wording back to kernel, https://github.com/microsoft/vscode/issues/122415#issuecomment-829329529
Add noop command (fixes #122518)
Add flag on whether a contribution can support a resource (#122658)
fixes #122656
fixes #120828
fixes #121392
Revert "chore: bump electron@12.0.5"
fixes #121425
fixes #121503
fixes #122289
fixes #122353
Add extension support completion provider to core
allow controller picker with single item, https://github.com/microsoft/vscode/issues/122415
Drive users to picker when having multiple potential notebook controllers, https://github.com/microsoft/vscode/issues/122415
Revert "do not auto open pasted file"
fixes #122354
fixes #122079
change vs select wording tweaks, https://github.com/microsoft/vscode/issues/122415
update distro
show placeholder text for kernel picker, https://github.com/microsoft/vscode/issues/122415
update doc
Improve capabilities.untrustedWorkspaces contribution (#122603)
improve virtual workspace disablement wording
tweak setting config
Don't label custom editors are readonly if the editor is not editable
Add some links and small cleanup for JS/TS settings
Improve auto-fetch setting display
Make adding overrides an preferred quick fix
chore: bump electron@12.0.5
Remove no implicit override task
Adding JS and PY Azure SDK packages (#122468)
fix unit tests for web
fix #122548.
fix #122359.
remove trust from web
Remove extra padding on h1s in markdown cells
Update distro
xterm@4.12.0-beta26
fix #122329 (#122576)
testing: fix welcome view being shown incorrectly
Reapply markup renderers change
Avoid cell execution icon flickering due to rerendering spinner
API TODO
debug: use category instead of tag for search
Even more port forwarding logging
fixes #122520 fixes #122393
fixes #122310
Set tunnel factory earlier (#122557)
fix #122452
testing: mark runs complete if trust is not given
Resolve profile environment when launching default
Add explicit dispose calls for `DiskFileSystemProvider` in tests (#121857)
Add enum descriptions to tabs settings
Rename hideForSingle to hideCondition
Revert "better fix for https://github.com/microsoft/vscode/issues/119943"
Revert "remove unused code after changes for https://github.com/microsoft/vscode/issues/119943"
requiresTrust -> restricted
Reinstall sash listener after view swap
remove unused code after changes for https://github.com/microsoft/vscode/issues/119943
better fix for https://github.com/microsoft/vscode/issues/119943
Bring back workspace shells via setting
fix disposal of extension-triggered document references when file is deleted, https://github.com/microsoft/vscode/issues/119943
Remove no longer relevant comment
fix https://github.com/microsoft/vscode/issues/122270
update jsdoc for NotebookController#viewType
more jsdoc for supportedLanguages, fixes https://github.com/microsoft/vscode/issues/122372
fix #122510
make sure to return options from override handler (or existing options) https://github.com/microsoft/vscode/issues/122480
fix #118423
Add missing padding-bottom
Make sure empty cells clear previous rendered contents
Register config
Bumps RemoteHub version
Use a menu instead of hard coding actions in tabsWidget (#122461)
fixes #122310
fixes #122306
tweak wording for disabled extensions fixes #122394
use label service to provide tooltip fixes #122411
use authors always fixes #122382
add setting to configure trust prompt fixes #122304
Add build extension media tasks
Align single tab status size with tabs
testing: trigger relayout on welcome view visibility change
fix #122218
update distro
Set aria label and include split number/total
fix #122340
fixes #121148
Another asWebviewUri fix, use the authority of the root that we found the file in.
Ensure an invalid icon ID is not used
fix #122150.
Terminate in case of ext host IPC timeout
Task name updates
fix https://github.com/microsoft/vscode/issues/122328
Use markdownDeprecationMessage
Add deprecation message to shell and shellArgs settings
Ensure tab rerender happens after layout
Show keybindings in inline actions
text files - automatically save when reopening with encoding (#122301)
Make inline actions multi-select aware
disable edu telemetry on nocors
Set active and focus new terminal on double click
adopt editorOverrideService for compare (#121668)
Don't cache the text editor as it doesn't require the ext host
Add telemetry events for pty host
web: use tmp as inmemory scheme
update distro
Set focus/selection to new term on dbl click
Add ... to rename and change icon
Remove console.log in test
Hide terminal tab hover on mousein, unless actions
Use the latest LSIF version for indexing
can change enablement when disabled by trust
window.title ${remoteName} seems to be "vscode-remote" when not in a remote (fix #122213)
shared process - also log lifecycle state when window errors
update distro
log when using in memory data provider
Revert "Comment out failing integration tests (#122269)"
fix https://github.com/microsoft/vscode/issues/122269
:chore: allow to use node.js 16 for developing vscode
Comment out failing integration tests (#122269)
Bumps RemoteHub version
Updates endgame query
API TODO
Revert "Better notebook markup renderer api (#121882)"
do not block webview creation for fetch errors.
remove open editor on startup
 NotebookKernel test, another attempt
add skipped test for lcs diff.
testing: allow waiting for server before running unit tests
use parent folder instead of folder name
Better notebook markup renderer api (#121882)
minheight
swap button and text
cleanup styling and wording in editor
Build using newer TS nightly
testing: allow contributing to test welcome view
testing: allow following running test
Return undefined if dialog is cancelled (#122234)
[json] update service
remove unneeded logic
fix #122161
Add telemetry event for failed extension activation
fix test. @jrieken.
Bumps RemoteHub version
web: drop authority usage
use prominent status bar theme color fixes #120455
fixes #120500
testing: rename testRunTask to testRun
fix #118073
Implement workaround for jupyter in codespaces for asWebviewUri issue #121981
fix #119678 Co-authored-by: Daniel Imms <daimms@microsoft.com>
Add js doc comments
Add a cache to the editor override service to allow awaiting ext host (#122067)
fix #121317
update distro
No longer force showing input box for screenreader (#122054)
browser: register inmemory fs provider
more renamed
extract INotebookKernelMatchInfo
Undo task queue change
Bump ssri from 8.0.0 to 8.0.1
update distro
Remove unnecessary entries
Add keybinding for split in tabs
Add keybinding for delete terminal tab
Clean up IEditorInput#copy
Add focusMode tab setting
:lipstick: renames
Remove short description for terminal split/kill
Set selection to what is right clicked if outside selection
Adjust active instance in tab on dispose
debug: restart should be sent to parent session
Render tabs on tab widget create
relax uniqueness requirement for controller ids, must only be unique per extension, not globally, https://github.com/microsoft/vscode/issues/121902
update distro
OSS Tool
make sure alternative goto-command is also a goto-command
remove todo
more test fixture adoption
add test and fixes for https://github.com/microsoft/vscode/issues/121904
file working copy - actually use elevated file service
add doc
round pointer poistion
web api - move log level into new dev options
:chore: some ReadOnlyArray => readonly
improve hover position logic
store associated notebook by uri _and_ type, send unselect event on kernel- or notebook-remove but keep the memento untouched, https://github.com/microsoft/vscode/issues/121904
file working copy - write elevated support
make sure "Open With..." actually works..., maybe https://github.com/microsoft/vscode/issues/121974 or maybe https://github.com/microsoft/vscode/issues/121904
win/linux: alt+f4 to close window (#54492)
fix notebook type bindings
adopt api changes
file working copy - provide "Save As" support and address some issues
Remove some finniky logic causing rendering glitches
Support multi select split/ kill in terminal tabs  (#122148)
notebook.navigation.allowNavigateToSurroundingCells
turn markdown cell into preview mode after hiding find.
fix output edit sequence.
[html/css/json] update dependencies
fix #122099
working copy backup - adress some issues before endgame
:lipstick: editor extension export
Improve terminal text shifting when icon is resolved late
Improve rendering of very long collapesed titles Ref #119766
Restrict space that can be taken up by extremely long contributed items Closes #119765 Closes #119766
tabs.enable -> enabled
Hide description in narrow tab view
Update tab sash reset to play nicely with new changes
Support new description in tasks
Add terminal description to single tab
Remove local title appending
Add terminal local description/initial text
Close #120122
No more mr nice guy
[Getting Started] Naming: tasks/items => steps Ref #120049
return terminal icon if one isn't resolved
Make sure we build extension media for integration tests
debug: bump js-debug version
Allow x64 macOS builds to be triggered alone
Show trust dialog when running a notebook cell #118584
Accept uid=501(daimms) gid=20(staff) groups=20(staff),12(everyone),61(localaccounts),79(_appserverusr),80(admin),81(_appserveradm),98(_lpadmin),701(com.apple.sharepoint.group.1),33(_appstore),100(_lpoperator),204(_developer),250(_analyticsusers),395(com.apple.access_ftp),398(com.apple.access_screensharing),399(com.apple.access_ssh),400(com.apple.access_remote_ae) icon format only
Don't autofocus search box in settings on ipad - #122044
Allow markdown content in getting started (#121960)
remote indicator menu: cache action groups
fix #122049 (#122056)
fix build
Tweak "switch to insiders" message
fix #121954
fix #122051
Refresh tabs on hideForSingle change
update edit mode with source
notebook find with match count.
Move service registration
fix #122039
Workspace Trust Prop Changes (#121779)
fix #122038
send event when affinities change so that status bar can update, fixes https://github.com/microsoft/vscode/issues/122028
add unit test to assert, https://github.com/microsoft/vscode/issues/122028
fix #122031
Have single tab act like a dropdown
Have single tab focus the terminal
Add context menu for single terminal tab
Remove todo
Namespace tabs settings
Catch showTabs = true legacy case
Hook up new showTabs enum
Add new settings to control visibility of active terminal
working copy - implement backup restore in tracker and keep non restored backups (#117873)
Add additional height to term tabs for dbl click
Initial single tab view
Bump distro
show selected controller in picker, don't say kernel in the UI
Update my endgame notebook
fix build
Workspace trust - multi-root workspace file (#121765)
Remove soft notification from extension enablement
fixes #111350
Remove soft notification badge
naming :lipstick:
Move extension settings for workspace trust
working copy - first cut of a backup restorer that works on new working copy editor service (#117873)
Ensure tabs don't get another split added
sandbox - fix running in sandbox mode
Show tab actions on focus/selected
show in tooltip if controller was auto picked or not
Localize empty tabs context menu labels
Add show tabs dropdown entry, remove others
Add the globe back to the Ports view
Remove bad } from terminal title
node-pty@0.10.1
Remove tasks from workbench.desktop.main.ts Part of https://github.com/microsoft/vscode/issues/118201
remove bad instanceof check
update distro
working copy - drop TestWorkingCopyService
add onDidCreateNotebookDocument in addition to onDidAdd.
remove kernelProviderAssociations but add a notebook-type 2 kernel association as shared/sync'd memento
working copy - more readonly arrays
editors - make findEditors more powerful
update ref viewlet
enable virtual workspace capability
refine prompts: using warning when file is too large for formatting, use model for installing formatter, https://github.com/microsoft/vscode/issues/119463#issuecomment-825434820
add skipped/failing test for https://github.com/microsoft/vscode/issues/121994
text file tracker - fix regression with untitled not being tracked
file working copy - provide some basic save error handling (#117873)
reset key on focus out and set focus if there was one
Add command and keybinding to focus terminal tabs view (#121978)
Enable noImplicitOverride
Rename
Add telemetry for rendering of markdown path
fix #121816 (#121957)
Create new terminal from profile in multi-root workspace (#121958)
Add custom editor telemetry
:lipstick: test
remoteIndicator menu point: double digit order number. For #121180
testing: show load errors in tree view
Add `php.validate.executablePath` to restrictedConfigurations
debug config manager: dynamic providers fix
debug: make sure to not show dialog when launch config content is being created
re #121140.
fix #121723.
Make narrow tabs show status color icon
some :lipstick: and a tricky todo
use DAP 1.47.0
node-debug@1.44.27
Support relaunch hover action
disable github extension in virtual workspace as it depends on git
Show relaunch needed details in hover
add NotebookDocument to executeHandler
refs #120675
include silent for notifications:actionExecuted
Incorporate task upgrade feedback
adopt virtual workspaces - not supported
update distro
localise workspace trust strings for exts
Use affinity over priority
todos about affinity vs priority
remove isPreferred as instance property, replace selector with only viewType, allow controller to set a notebook priority instead
Add tooltips to terminal statuses
Provide label formatter for terminal URIs
fix compilation
update distro
Removed unused code
Hook visual bell up to enableBell setting
Rever awaiting for ext host on open
Delay terminal bell shortly after creation
Add pattern matching 'in'
Change default for enable builtin extensions
Ensure primary status event fires when status is removed
Use Application scope for `keyboard.dispatch`
Add tab view empty context menu
add comment
Use constant for dblclick
Support double click to create new term
Expand terminal tabs to whole width
mark property readonly
mark supportedLanguages as optional, some todos
Remove deprecated sync methods from configuration resolver Part of #108804
Support defaultProfile in selection default profile command
assert that executing a cell send selection event, https://github.com/microsoft/vscode/issues/121904
Throttle calls to spawn/kill under conpty
debug issues should get auto assigned to me
add notebook instance to interrupt handler, https://github.com/microsoft/vscode/issues/121912
Finish adoption of IShellEnvironmentService in terminal
Update distro
Adopt bash terminal icon
Move dropdown with primary to base
send controller selection event when selection knowledge is restored from memento, https://github.com/microsoft/vscode/issues/121904
Reduce calls to getShellEnvironment
Move off deprecated resolve function
Only dispose on middle click
Remove old prompt from tasks service Part of #119463
fix UntrustedWorkspaces type
adopt to new capabilities api proposal
use UriComponents for extensionTestsPath. For #121734
export IDevelopmentOptions
Adds code lens on vfs files
update distro
fix compile error, fyi @rebornix
rename ExecutionHandler to ExecuteHandler
More removed unused
fix #121807.
Remove unused services
Remove notification ref #119463
consolidate tabActions code
Allow text search providers to give messages (#121528)
move separator inside
add hide tabs panel to context menu
fix #121744
re #121252. Add actions to toggle cell position.
add setting for specifying cell toolbar position per view type. fix #121252.
testing: fix test failures
testing: betterify view
Remove underline from h1s in notebooks
Bump fallback version for webview contents
adjust hover position for panel
show panel hover on top
remove NotebookTextModel._mapping.
align left and right positions
introduce hover position and align hover and pointer
re #121869.
fix #121818 and make terminalService manager/updater of available profiles (#121837)
update distro
Update Codicons: update "copy"
Remove deps from dropdown with primary
Await extension registration fixes #116259
Add styles to dropdown.css
Update Codicons - Add "wand" - Add "debug-line-by-line"
Update Codicons: Add "filter-filled" https://github.com/microsoft/vscode-codicons/commit/cdceb9f5fc38387c5c7dc3535bc6b528cd9cd4e1
typo
workbench embedder API: developmentOptions
async override -> override async
Move editor associations to override service
show hover pointer
Update Codicons - Add "swap" - Add "copy" - Add "person-add"
Update Codicons: add `terminal-bash` https://github.com/microsoft/vscode-codicons/commit/678b2158feae3d346916fd0a5db883c499376e5a
Move IEditorOverrideService to common
Clean up cell margins
remove virtual workspaces until onboarded
update ext manifest schema validation and built-in exts
Revert "Move editorOverrideService to common"
Don't lose cell toolbar when expanding the dropdown
Move editorOverrideService to common
testing: fix test wrapper not including ranges and not dealing with sync discovered root
Logging categoryDescriptor.id instead of [object Object] (#121850)
fix broken test
first pass to update workspace trust to capabilities
describe the context key for workspace trust
finalize basic workspace trust api
fix #121841
correct name of initial dropdown
Improve new terminal dropdown style
Remove tasks v1 Part of #118201
Don't expose change icon instance in command palette
Inline menu entries
Don't override keybinding for split
Create new command IDs for kill/split instance
Revert "fix #109765."
improve messages, web: showSaveDialog
web: pickFileToSave
web: showOpenDialog
fix compile errors
prefix api object with api-prefix, like apiCell
some more API todos
Remove has text log
Remove logs
editors - respect override option in openEditors
gh auth: back to prod auth
Action feedback
text file tracker - open editors without going through override
Remove old new terminal panel action when showTabs is false
editor service - cleanup isOpened()
Remove configure term, replace with change icon+rename
rename IMainNotebookController to INotebookContentProvider
remove some more kernel leftovers from notebook service
Handle cwd inside _convertProfileToShellLaunchConfig
notebook editor status must listen to kernel instance updates
editors - require typeId for some methods that are otherwise unspecific
relax NotebookCellOutputItem and NotebookCellOutput, e.g. don't enforce the member to be readonly
sktech NotebookEdit ideas
use serializer in NB integration test
remove ability to alter notebook output via WorkspaceEdit or NotebookEditorEdit
extension contributed kernels fall back to all languages when supportedLanguages isn't set, https://github.com/microsoft/vscode/issues/121329
move keybinding label computation to activity action item
editor service - :lipstick: API
fix build
gh auth: fetch json
distro
tweak kernel sorting
TestWorkspaceTrustRequestService
gh auth: fix staging server selection
disable compare action when no active file, no need for notification
notification updates: #119463
mac specific actions should not respect web
gh auth: don't reach out to product.json
Revert "Enable the notebook renderer on web"
Use clearer variable names
unique working copy type id, stricter view types
add enum-set for alternative commands and check the command type is a symbol navigation command
update ref viewlet
Move quick pick into editor override service (#121666)
unit tests (electron) - avoid sending circular structures over
Update debug-auto-attach ext icon (refs #81760)
Remove unused statusbar styles
fix #121655
Implement workspace trust for php-language-features
Allow running builtin php validation with a relative path configured to the php binary. This was previously allowed, but the fix to use 'which' was too strict
fix #121736
Use new cell statusbar for execution items. Support color and icon info on cell statusbar items.
remove custom metadata internally
remove breakpointMargin internally.
remove cellEditable internally.
tweak split view width work
fix typings.
fix #121631
move NotebookRange.
more jsdoc
testing: bump distro and make document polyfill work again
remove deprecated transientMetadata.
remove deprecated custom metadata.
Remove path from github-authentication
Avoid extra call to reveal if the editor is already active
Add requireTrust to comments.openPanel setting
Enable the notebook renderer on web
Allow ThemeIcons to be used as decorations
Consider updateOpen as signalling that project loading as completed
Update debug server ready ext icon
fix unit test
fix unit test
more staging detection (#121769)
gh auth: look at staging query param (#121768)
feat: add support for additional surrounding pairs for markdown (#119982) (#121698)
Add icons for built-in extensions (fixes #81760)
Make collapse/expanse cell actions apply to all selected cells
Add requiredForConfigurations for TS
Localize workspaceTrust
get rid of instantiation service
fix #119866.
fix #121288.
Adopt terminal ubuntu profile icon
update wording
split, configure, kill for the focused instance
initialize installed extensions before starting extension host
Max item width, style fixes for status bar items
Cell statusbar test
Test cleanup
Remove 'requireTrust' from search.exclude. Searching without excludes in an untrusted workspace would not be useful
Update Codicons: Add `terminal-ubuntu` (refs #121737) https://github.com/microsoft/vscode-codicons/commit/98b2fc81360d59ca195f00c16ff984121d4fe255
add jsdoc for NotebookSerializer
Revert agent pool name
Update build agent pool
add some api todos
Add experimentation service to github auth extension
Intermediate content for Getting Started (#120602)
Override original agent again (#117054)
add a comment
only fetch the profiles on window reload or if config has changed
pass cwd to convertToShellLaunchConfig
remove unused, make convertProfileToShellLaunchConfig public, rename MenuId
WIP style updates
#118731
more removal of unused interfaces
fix comparison bug when updating kernel bindings
simplify notebook kernel service
Add keybindings for navigating terminal groups
#118731
#119110
Move vscode-windows-ca-certs dependency (#120546)
Update distro
add extensionTestsPath to IWorkbenchConstructionOptions
restore integration test
Implement sash reset in terminal tabs
execute by cell-handle, kernel manager has only execute/cancel cells, also "fix" isNotebookCellData fyi @rebornix
Middle click on terminal tab to kill terminal
notifications - properly hash resource
move "execution" of markdown cells closer to command
adopt typeId for simple notebook working copies
some jsdoc for NotebookController
remove unused NotebookCommunication interface
notifications - introduce ID property to help detect duplicates better
remove kernel provider from core, adopt kernel service, merge kernel2 and kernel interface, extract context keys from kernel manager, make context key manager only for execution/cancellation
debug: update wording for safari dialog
file service - add test for `getProvider`
#118077 remove hover background
add supportsVirtualWorkspace to schema
fix tests
fixes #118731
#118077 move custom hovers behind experiment flag
extension tests - stop automated opening of devtools when running out of sources
:lipstick:
use new types for browser fs
exclude htmlfsp from monaco
Revert "Revert "use dom api to resolve file schema on web""
revert unneeded change
get rid of tabsWidget buttons
improve styling
stylize
refine conditional
only re-render dropdown
add comma
resolve disposable error
get rid of register
Revert "use dom api to resolve file schema on web"
Bump distro
Adding a few more override specifiers
fix output max height update for diff editor.
fix diff editor output width/margin.
Use ctrl for add to selection on non-mac platforms
Remove extra await
style buttons
get profiles to appear
fix #121623.
replaceNotebookCells with range.
Protect against exception when initializing terminal tree
Improve terminal tab setting descriptions
clean up
Allow svgs inside iframes inside webviews
Allow specific command uri in extension editor
node-debug@1.44.26
resize when tab location changes
use dom api to resolve file schema on web
IFileService.getProvider
add @types/wicg-file-system-access
fix: build
trust: make workspace trusted during unit tests
testing: adopt workspace trust for testing
Close #121395
Update aria label to include codicon names and wrap in spaces (#121496)
add CombinedButtonActionViewItem
debug: workaround to open new debugee window in Safari
trust: onboard debug land to workspace trust
Move scheduler initialization to the ctor
resolve -> reject
Addressed code review feedback
Addressed code review feedback
Cleanup redundant code
More effecient handling of changes
adopt notebookSelector in status bar API.
fixes #121621
Adds workspace trust setting
api resolves immediately trust state in non-modal
update jsdocs.
Remove code related to dangling files
setup menus
DAP: new option suspendDebuggee on disconnect request
Ben/workingcopy typeid (#121646)
backups - some more :lipstick:
remove NotebookKernelProvider API and its implementation
show disabled reason for extension disabled in virtualws
web api - remove types that are not exposed in any API
fix tests
working copy backup - more tests
fix build
add test for whenTextEditorClosed
Format code
Move workspace trust code into ExtensionManifestPropertiesService
change property to supportVirtualWorkspace
implement workspace requirements for extensions
adopt trust in github
make INotebookKernel2 extends INotebookKernel
working copy - do not allow VSBuffer for backups
add common.platformDetail in telemetry (#121264)
remove window.sessionId
more working copy backup cleanup
Set default tab location to right
working copy backup cleanup
enable noImplicitOverride in our codebase
text files - add a getDecodedStream method
tests - enable colors for windows (CI supports it and the new Windows terminal too)
add NotebookController#detail
:lipstick:
Bump ssri from 6.0.1 to 6.0.2 (#121576)
tests in web extension host
change extension kind controller to a service
File gets garbled characters when restored from backup (fix #121347)
jschardet 2.2.1 -> 2.3.0 (#121575)
backup - change to a buffer format (away from text snapshots)
windows - fix tests
Workspace trust - merge storage and management services (#121540)
working copy - extract a workingCopy.ts file
backups - rename to be working copy related
backups - introduce backup identifiers and adopt
testing: fix error for synchronnously discovered tests
Further tweaks to grid styling
Revert "add description to statusList"
Update renderings of getting started items based on overrides
skip failing test
add description to statusList
Dont clip steps unless needed
testing: rework running side to new apis
Remove onDidAddTask - categories now immutable
Close #119964
comment out tooltip causing build issues
show separator in filtered quick pick (#121075)
fix #121509 documentation error for two API command results
extract NotebookDocumentContentOptions viewOptions.
avoid stripping custom data.
use label instead of a custo name in terminalDecorationsProvider
try to fix the build
Revert "Revert "Don't block svg loading inside of iframe based webviews""
Remove unused
Set max tab view size of 500
Set correct layout when turning showTabs on
Hide dropdown when tabs are showing
debugAdapterManager: update wording
Remove Task prefix from tabs only
Reduce min tab size
Remove extrenuous injection
Make resizing smooth
Prevent wide tabs from being centered
use language name for labels
Focus newly created group ref #121395
Change configure terminal to pencil
Make status decoration padding consistent
Add change icon/configure terminal action
more binary editor cleanup
Remove * as platform from terminal
binary editor - remove file size check (fix #121301)
Update distro
require trust for cfg vals
tweak conditional
Make error message clearer (#121339)
modify conditional
Update replacing editors in editorOverride service
üßπ
chore: bump electron@12.0.4
Clean up
update configuration scope for tel,exp cfg
Address comments
Revert "Don't allow multiple tasks runs to start at once"
add scheme Co-authored-by: Daniel Imms <daimms@microsoft.com>
Respect resolver's trust options
Smooth the flow of installing new debuggers
only register workspace trust request handler when trust is enabled
revert change to a line
Bump distro
remove unneeded css
Try out another possible fix for safari tooltip Part of #111756
Disable pre-resolving icon in remote windows
Update distro
Use OperatingSystem over Platform in terminal
untitledHint: respect editor font
debug session: pass configuration as args for restart
Disable terminal workspace settings until workspace trust is on
Update distro
Update distro
Add more top/bottom spacing to features  boxes
Pass remote authority to context methods
remove NotebookControllerOptions and simplify createNotebookController-signature
Pass remote authority into resolver
Resolve default profile in remote slc
More removing workspace shell permissions
Remove todos
Update distro
Adopt requireTrust in terminal
check that notebook controller are unique per id
use default some delay
Remove only
Add trust prompt
some jsdoc and relaxed NotebookRange
render tree on trust / trust settings change
fix ExtensionRecommendationsService test
extract types for execute/interrupt handler, interrupt in not per document but per controller
Smoke test fix
reduce usage of extensionDevelopmentLocationURI
make preload a creation argument, no editor needed when calling asWebviewUri
:lipstick:
hook up execution task cancellation from controllers
#116731
:lipstick: in notebook service, also make sure to clean-up editor contributions when disabling/enabling extensions
do not show dialog if workspace trust is not enabled @lszomoru FYI
fix remote integration tests - do not show trust dialog when change is coming from cache @lszomoru fyi
move workspace trust service out of config service
Begin to allow extensions to contribute start items
re #121329. NotebookCellExecutionSummary readonly properties.
transientDocumentMetadata
rename transientMetadata to transientCellMetadata.
Add some NotebookCellStatusBarItemProvider jsdoc
Clean up cell statusbar keybinding tip placeholder
Remove old cell language picker item CSS
always show intro modal
update todos.
use terminal service's instance status changed instead of instance.statusList.changed
revert some changes
Add other platform settings
Resolve icon in terminal asap
Move cell language picker to statusbar API
only show widget for manual relaunch
Reduces validation timeout
Ensures that the validation message shows up
Calls focus method
:lipstick:
Update distro
Use icon of default profile
Add platform override to default system shell
Move new service to sandbox
allow for markdown dialogs and custom icons
Progress on single file scenarios
always fire ptyReconnect after relaunch
mostly working
NotebookCellRange is now NotebookRange.
Rename and move combined service
update integration test.
Guess synthetic profile icon
Simplify service context by moving into browser
Implement browser profile resolver
:lipstick:
Central service for notebooks and custom editors (#120426)
update comments.
flatten custom* metadata.
isReadOnly contributed by the file service.
remove cellEditable.
remove editable and breakpointMargin.
change to async
adopt to workspace trust storage service - create the service during initialization @lszomoru FYI
Revert "custom dialog for introducing workspace trust (#121326)"
Revert "adopt custom and shield icon for trusted workspaces"
Remove statusMessage from constructor
Adopt shell env service in TerminalProcessManager
Remove getDefaultShellAndArgs
Use new service to resolve local process paths
Partially implement resolve shell launch config
adopt custom and shield icon for trusted workspaces
custom dialog for introducing workspace trust (#121326)
Skip failing tests temporarily
pass icon directly
merge renderer IPC into notebook controller, remove global renderer IPC
implement decorationsProvider
Add workspace trust property to auth extensions
node-debug@1.44.25
Use workspace trust signal when adding a folder to a workspace (#121197)
Turn on showTabs by default in Insiders
Resolve todos in profile resolver
add support for isPreferred for notebook controllers
add preloads to notebook controller, fyi @connor4312 NotebookKernel will go out soon
Register the new service
Recognise commonly sourced files as shellscript (#121373)
Inject last active workspace
actually remove fileName from the notebook document implementation, https://github.com/microsoft/vscode/issues/121329
remove NotebookDocument.fileName, https://github.com/microsoft/vscode/issues/121329
add cancellation to NotebookSerializer, https://github.com/microsoft/vscode/issues/121329
rename to serializeNotebook and deserializeNotebook, https://github.com/microsoft/vscode/issues/121329
workspace is virtual if all folders are virtual
Inject context, convert functions to async
editors - move some code out of common/editor.ts
editors - move some code over to browser/editor.ts
Implement resolving default/synthetic profile
editors - remove whenClosed from editor service and make a standalone helper specific for text files
Extract isWorkspaceTrustEnabled into a function (#121385)
Reveal active terminal on change
Center +v when collapsed
working copies - first cut typeId support
no more need to dispose ExtHostCell
pass cells and controller to execute handler
NotebookControllerOptions instead of NotebookKernelOptions
print cycle of dependencies when instantiation service alerts for loop, fyi @lszomoru
Switched to using Restored instead of Eventually for the extension enablement soft notification
Tweak dialog based on feedback
startup code :lipstick:
"Help us improve.." notification is displaying language IDs (fix #121216)
Adopt `requireTrust` for my configs
Update js/ts grammar
Configure workspace trust for simple browser and image preview
Add workspace trust for markdown extension
Only try to scroll to element when the target path exactly matches the base path of the current page
Remove statusMessage metadata
Support markdown styling in task descriptions. (#121338)
Use es2020 as the default target for js/ts implicit projects
Change execution duration to startTime/endTime
Do not run code actions on auto save
testing: rework discovery side of testing to new apis
DAP: add a missing comment
DAP: pass launch config to restart request
add colors to css
adjust opacity
incorporate UX feedback
fix styling in wt badge
add statusIcons to terminalTabsWidget labels
Move back to min-width for hover hr
Add a very basic hover for the terminal tabs
terminal: fix swapped cols/rows
#118077 introduce delay option
only show workspace scoped configurations
Remove TerminalTabs from tabs, polish selection/focus
Cell statusbar API (#121215)
fix build error
modal false by default
Add override in notebook code
Add override modifiers in a few more places
debug: start debugging requires trust
add statusIcons to terminalTabsWidget labels
Set title when reused terminal slc has name
fix #121140.
typo
Add telemetry for import statement completions (#121243)
add status icons and listeners
simpler storing of ExtHostNotebookEditor
no nested DOM.schedule.
update scrolling.
set maxheight and overflow hidden for output container.
make createNotebookRendererCommunication independent of controller, make it renderer first
Comment out unused prop
Add override to tasks and tunnels Part of #120675
Add padding to terminal plus button
Workspace trust transition improvements (#121173)
Disable escape sequence logging by default
Add new terminal with profile button
Mark server ready extension trusted
Implement custom hover for activity bar and panel
fixes #120981
Correctly align plus button on load
Clean up terminal tabs widget ctor
Improve plus icon position, style
rename NotebookKernel2 to NotebookController
add Kernel2#createNotebookRendererCommunication
polish remote menu separators
Include virtual workspace check for task type enablment
node-debug@1.44.24
Change action order in tunnel view order in tunnel view
Do some magic to pick best label action for ports Part of microsoft/vscode-remote-release#4826
backups - explicitly wait for editor group to signal restored when deciding to drop backups or not on shutdown
Empty workspace is untrusted
perf - change lifecycle phase restored to work differently
fix #121270:¬†race between terminal create and initial resize
fixes #120637
Moved telemetry into a contribution
remote: unnecessary separator
fixes #121248
fixes #121162
fixes #121156
fixes #121117
fixes #120840
perf - fix issues with how layout restore is handled
editors - whenCreated => whenReady
github auth: improve test env detection
editors - some :lipstick: renames for editor group model
prefix terminal CSS rules (#121258)
fix #120485 hide `Open Timeline` from Explorer context menu when there are no timeline providers
replace vars to fix build in terminalActions
more todos
some API todos.
Use markdown for link contributions. Ref #120050
Only await for worker ready when setting content
Don't wait until getting content to register service worker
Remove __leftMargin__
Use clientHeight instead of computing the size ourselves
remove workspace trust grant/deny actions from gear
remove confusing elements from workspace trust editor
Only enable pointer events for the folding indicator itself
Make sure we focus the markdown cell on contextmenu
Don't trigger notebook.find when focus is in another editor Partial fix for #121242
Simplify redundant context keys
üßπ
make private readonly in constructor
change type of icon to string | undefined
Update src/vs/workbench/contrib/terminal/browser/media/terminal.css
fix hideText
snap right or left based on midpt
Boolean Trust State (#121141)
Adopt workspaceTrust
Remove git-ui extension
get rid of unused menu
align button
get button to stay on the page
notebook: cache preferred mimetypes for renderers
use tab instead of terminals
add instance connectors
Theming for keybinding label (#120727)
update distro
finalize #77423 (#121213)
Add allowCommands option (#121211)
Explicit remote CLI commands (#121212)
get text to show or hide appropriately
Change proxy scope based on `useHostProxy` flag (#121207)
Use CSS variables (#121208)
php: use which (#121210)
npm: use which (#121209)
localize action names
add rename  Co-Authored-By: Daniel Imms <daimms@microsoft.com>
set min width  Co-Authored-By: Daniel Imms <daimms@microsoft.com>
fix css
hide label text when min view Co-Authored-By: Daniel Imms <daimms@microsoft.com>
Move windows mitigation comment into terminal process
Remove redundant call
Speculative fix for unresponsive pty host
api todos update
add onDidChangeNotebookAssociation-API and wire everything up using the glue adapter
adopt to trusted configurations
add ability to bind a notebook to a kernel, add events and forward to ext-host
Disable flushing of output
cleaner setup
add missing block
align kernel and kernel2 a little more
[json] fix for workspaceTrust
move all views under removed view container into default view container
fix compile errors, evolve internal API about kernel selection
[css/json/html] add workspaceTrust property
rollback distro temporarily
wip
bump distro
:lipstick:
default supported languages is plaintext
relax NotebookDocumentContentOptions
always show notebook status bar entry
update distro
editors - do not expose raw group from editor group view
editors - cleanup editor restore logic
add doc
Extension workspace trust request using product/settings files (#121021)
Reduce callers of createEditorInput when not needed (#121098) (#121099)
Hook up basic context menu for markdown cells
fix #120955.
fix #121032
fix #121115
notebooks: add initial kernel/renderer constraints
NotebookDocumentShowOptions#selections.
Use more standard name for shared extension tsconfig
Enable noImplicitOverride for extensions
Use `Array.from`'s map directly instead of a second call to `map`
Remove override
remove NotebookEditor#selection.
Add override
Pick up new TS nightly for building VS Code
Remove duplicated code
Use URL instead of regexp for getting webview id
Load webview scripts async
Use javascript modules for webview host script
Use ?. for accessing webview
Remove `getInnerWebview`
reformat
only show rows on hover
only show actions on terminal isntances
Bump vscode-ripgrep
fix build
testing: polish up test output terminal handling
add actions to items
re #119599. Avoid flickering when outputs are cleared.
debug: display error response from invalid exception filter conditions
review feedback
terminal: standardize on customPtyImplementation
update untitledHint, remove button
always allow split cells in cell toolbar.
get rid of twisties
some jsdoc
add (bring back) NotebookKernel#createNotebookCellExecutionTask
fix #120906 panel issues
DAP: setExceptionBreakpoint optionally returns breakpoint array; related to #117789
untitled hint: do not render keybinding
add rename to context menu
test 2
test commit signing
try to make monaco ESM happy
api todos, remove unused type
change to warning
vscode.openFolder: forceLocalWindow
fix web dev builtin extensions
add NotebookTextModel#reset which allows to re-init a notebook, use when reverting notebook editor models, https://github.com/microsoft/vscode/issues/120771
vscode.openFolder: allow to open a local window
improve TestResolver command names
adopt to workspace trust
#120675 adopt override
editors - supportsSplitEditor => canSplit
split workbench-web from dev
code-web: /builtin
editor input getTypeId() => typeId
move defining configurations requiring trust to workspace trust property
some more "no implicit override" work
editor serializers - only allow 1 factory per type id
editors - :lipstick: a few assumptions around editor resources
Expose stop/start methods and have start wait for all pending delta extensions to finish
fix yarn lock
Problems in no-implici-override-watch
Add all valid hosts to simple browser (#121080)
task for no-implict-override-watch
fix #120911
autodetect settings: add reference to preferred colors
Resolve unix shell env when default shell is PowerShell (#120769)
add to suggest list
add code actions for untrusted settings
- update schema in non trusted workspace - decorate settings requiring trust
fix when there are no untrusted workspace settings
fix compilation issues
update trust label
- show settings requiring trusted targets as readonly with action to manage trust - command to filter settings require trusted workspace - Show the number of settings requiring trusted workspace in workspace trust editor
Remove IWorkspaceTrustRequestModel
Split WorkspaceTrustService (#120974)
Getting Started: Allow click to toggle completion Closes #120996
Close #119964
#119964
Clean up details view for small windows.
wip
add snap when in no-man's land
switch tabs when instance is clicked on in tabs widget
Getting started details page scrolling
move + button to the top
fixup scrolling of categories page
Revert "Don't block svg loading inside of iframe based webviews"
Revert "chore: bump electron@12.0.2"
Update to use new webview url for permissions check
Don't block svg loading inside of iframe based webviews
load show more action only when necessary.
use custom icons on reconnect/reload üòÑ
change to async
#120860 Improve untrusted settings shape - define requireTrustedTarget on property - add tests
Adds proposed api checks and splits proposal
Simplify the trust editor (#120964)
ci: disable exploration branch sync
Onboard search-result to workspace trust.
Jackson/getting started grid (#120958)
remove one command via consolidation
fix typo
Bump windows-process-tree, fixes #120570
make private readonly vars
removed font classes with hard-coded font stacks
add check for show tabs and return min_width isntead of 0
remember split across sessions and set sane default
add context menu groups
removed mention of user modifying CSS with extensions, added further explaination of the font support and font stacks to allow developer flexiblity in logging to the debug console.
custom editors - implement save retry properly
Bump distro
Add all valid hosts to simple browser (#120929)
fixes #120934
Update seti icons
Ensure tab widget doesn't resize on workbench resize
file working copy - prolong shutdown for pending saves
:lipstick:
add some override https://github.com/microsoft/vscode/issues/120675
remove/disable selected and onDidChangeSelection from new kernel world
:lipstick:
add some deprecation marks
update notebook editor status when kernel "instance" changes
Onboard task extension to workspace trust
Improve type safety around terminalTabbedView
Consolidate tab tree creation
backups - move tracker and restorer out of contrib into service
Adopt workspace trust in the tasks service
backup restorer code :lipstick:
Add Windows pwsh detected profile, remove cygwin source
remove NotebookEditor#onDidDispose
remove hasExecutionOrder from notebook metadata
add and adopt implementsExecutionOrder
chore: bump electron@12.0.2
perf - warm up canvas in idle callback (#120916)
bring back accessibilityPageSize from deprecation, it is still needed due to upstream issues
layout code :lipstick:
debug: Variable do not override ExpressionContainer type
Debugger: Add option to allow disconnect and stop/terminate UI elements
Update no commandline message in ports view
fix quick input title
Improve logging (#4813)
Update distro commit
fixes #120905
fixes #120871
perf - more fine grained window counters
make executeHandler readonly
update ref viewlet
tests - ensure preload promises are all resolved
ts - fix some override errors (#120675)
Remove log
Pick up new katex version
Don't scroll to top when removing entries from recently opened (#120404)
Polish getting started layout
Remove unused import
Pull in newer markdown-it katex version
Remove commented code
Move shared webview focus implementation into base class
Use cloneNode to inject default styles
Avoid calling `applyStyle` again if the style has not changed
Add typings
Remove unused function
Cancel resource load when the webview is disposed of
Use transfer for sending resource buffer from webview to service worker
on create, focus active instance
Inline `rewriteUri` into `loadLocalResource`
Remove extra indirection around `loadLocalResource`
Move webview resource loading from `platform` to `workbench`
Remove vscode-webview-resource path normalization logic
Don't use 'self' for image editor csp
Make sure we use the webviewResourceRoot on for computing cspSource
Pass in correct project root for notebook cells
turn off logging for notebook.
revert a change
Adds new proposed api for scm input validation
get context menu to work
get profiles to appear in context menu, not working yet
april.
try to modify tabsMenu actions
add plus button and terminalTabsContext
Remove extra whitespace
testing: fix explorer view
precalcuate cell editor height: guess if the editor will render scrollbar.
Temporarily restore vscode-webview-resource constant
#120860 Implement trusted workspace settings
Mark Emmet trusted
Don't warmup markdown preview when input is collapsed
Add icon to terminal tabs
change terminal tab height for uniformity
fixes #120786
fix #120776 remove stray words from `contextualTitle` description. (#120777)
Add script to run build with noImplicitOverride
Adding a few more overrides
Add a few more overrides in codebase
chore: info.plist => Info.plist
Add override keyword in codebase (#120755)
Reapply badclient commit
fix #120824
üêõ FIX: Typo (#120816)
file working copy - getAlternativeVersionId() => versionId
add NotebookKernelOptions so that createNotebookKernel is simpler
remove createNotebookCellExecutionTask from NotebookKernel2 because exec-handler is called with executions
execute handler gets notebook cell execution directly
fixes #120188
Update color for port wtih running process Part of microsoft/vscode-remote-release#4826
Types, polish
perf - wait for dom ready when waiting for services
Add hover underline to port address Part of microsoft/vscode-remote-release#4826
process explorer - fix window title
Add ctrl+click message to address cell in ports view Part of microsoft/vscode-remote-release#4826
perf - delay notifications for extensions disabled to a later point
fix speling error
perf - add marks for crash reporter and window creation
node-debug@1.44.23; fixes #120762
startup perf - load NLS module conditionally; add perf mark for main IPC server
debug: better launch schema updating
multiple action hover feedback fixes
log error when vscode.workspace.applyEdit fails, https://github.com/microsoft/vscode/issues/120760#issuecomment-815602556
add extension identifier to kernel 2
make auto-referencing of dirty notebook models simpler and lighter
fix: skip sha comparison for info.plist
Windows: --user-data-dir argument no longer supports relative paths (fix #120269)
sandbox - properly await fs creation
sandbox - wire in paths from main side
Revert "Add badclient telemetry property"
remove empty line
copy directly from master
üßπ
revert more changes to settings
revert some changes
find widget
add a bunch of stuff from terminalView
add or remove view depending on showTabs
create issue to track indent guides todo
use TerminalTab
Add badclient telemetry property
Don't overwrite perf value
Update JS/TS grammars
better perf marks.
Improve tabbed view size ranges
Simplify instance node
Rerender tabs on title change event
revert to node-debug@1.44.20
Prevent disposable store exception
feedback
Use service workers for loading webview resources on desktop (#120654)
add some more checks
Pick up TS 4.2.4
Make splitting respect supportMultipleDocument (#120263)
Pick up electron 11.4.2 (#120670)
Build with latest TS nightly (#120690)
üßπ
revert some changes
get widget to work
Support env in terminal profiles
get terminal container to show up
fix code cell output offset flickering caused by wrong font update.
debug: update debuggers, fix node not activating
adopt toggled.title.
fix #120603.
Remove processBinary from localTerminalService
Update distro
Remove optional reduceGraceTime arg
fix title for toggle line numbers.
add Tabs Location
extensionEditor: focus only on enabled items
Rename initialText to message
make execution and interrupt callback instead of commands
status bar: focus improvements
sash working!
wire push-kernels into internal kernel provider API
call TerminalTabbedView.layout
styler - optional chaining ftw
Add green to running process circle in ports view Part of microsoft/vscode-remote-release#4826
Add command line regex for port attributes provider Part of #115616
css is awful
add local resource root and cancelCells so that Kernel2 is very similar to Kernel
accessibiiltyPageSize default down to 500
don't forward changes for disposed kernels
fix compile error due to missing mode service, fyi @roblourens
sandbox - delete "Code Cache" folder on startup for now (workaround for #120655)
extensions: more CSS fixes
add test for extHostNotebookKernels
Update port attributes api to not use array Par of #115616
add kernel push to proposed API
fixes #120698
fixes #120706
chore: use bundled node-gyp (#120683)
extension view: CSS layout tweaks
window - make sure all perf entries are there
window - more aligned window config handling
hmm
fix yarn lock check
window - create a proper window config
build - push missing compile artifacts
Set new language on TextModel, and listen to mode changes on existing cell text models #120284
more splitView work
Update JS/TS grammar
Don't call node-gyp anymore (#120673)
clean up a bit
take 2, sash still disabled but otherwise working
update markdown cell heights synchronously on init.
Remove nextTick usages
track notebook file open perf.
Hook up actual icons
fix error, sign off for now
revert some changes
bump distro
Workspace trust not enabled in web
delete comment
sandbox - disable vscode-file:// again (#120655)
more migration
The Great Migration of code from terminalView to tabsView
Revert "fixes #120166"
Polish and fix #120245
package.json completion: fetch on every key (always incomplete)
Update Codicons: Add terminal icons https://github.com/microsoft/vscode-codicons/commit/27e4b9b87ef8b558f301834f09ac2abdea513597
try more stuff
a little closer
update wt static declarations (#120443)
fix #120641
add createNotebookCellExecutionTask to kernel object
correctly use outputs
fix syntax error
bring back task output
use this.
more yarn lock changes
add debug to yarn lock task
Make sure yarn.lock changes are allowed for committer PRs (#120642)
more cleanup
clean up
Move icon to side in term quick access
better fix for #117095 and also fixes https://github.com/microsoft/vscode/issues/119086
Use tools icon for task terminals
ignore focus dependent test also on GHA, fixes https://github.com/microsoft/vscode/issues/120355
fix actions margins across workbench
Hook up bell status
xterm@4.12.0-beta.20
:lipstick:
add kernel service and add extension host logic for it
shell env - change to ipc invoke/handle to speed up resolution
fixes #120166
lifecycle - onShutdown => onDidShutdown
:lipstick:
fix test
Add resolveWithEnvironment to config resovler Part of #120328
update cssnano
fix logging zip path
#120545 remove <any> usages
fixes #120518
:lipstick:
node-debug@1.44.21
node-debug@1.44.20
Refactor worksspace trust setting
remove obsolete todo-tag
sandbox - enable vscode-file// protocol by default (#98682)
Better action hover feedback (#120247)
integration tests - revert changes for commands test
remove NotebookDocument#cells in favor of cellsAt, getCells, and cellCount
tests - increase leak warning threshold for #119968
Make easy adoptions of async configuation resolver service (#120326)
tests - easy on the timeout
integration tests - use async test (#120225)
fix tests
sandbox - prefer sandbox types over node.js types
use NotebookEditorInput to work around https://github.com/microsoft/vscode/issues/120284
Make product configuration available to non node.js environments (fix #120243)
add splitTabsPane
fix #120513.
prompt user for reload with wt tree changes
disable step* buttons rather than hiding them
Remove only
still not working
Move to quick pick for configuring welcome page item visibility
take a break
cleanup unused var
Add unit tests
Expose on did change primary status event
Hook up disconnect and relaunch needed statuses
get instances to focus on click
Show line number for current cell.
Docs, remove old timeout
Create status list
:lipstick:
fix using ref before initialization.
testing: store results in separate files to fix ui slowness with large results
Prototype side by side commands for getting started (#120436)
context key checks for cell line numbers.
rearrange code
fix-120578 don't offer callstack step-in/over/out when not stopped
more improvements
Remove icon from title
Remove todo
Create terminals using only profile
Remove unused "walkthroughs" section. Closes #119946
move show line numbers into editor title
Remove task icon, maybe status is enough?
Hardcode js-debug using id
add showTabs setting
skip failing test, delete console.log, remove reduceGracetime call for local terminals
fixes #120462
fix get embedded css util (#120480)
children now work
support action through keybindings.
toggle line numbers for notebook or active cell.
notebook line numbers.
cleanup access to process.env; fixes #108804
Update PHP grammar (#120339)
Correct detected separator condition
Add contributed to create with profile
Support icons in terminal type contribution
Add a placeholder icon for tasks
Add source/profile icon schema
Support icon in source
Add icon to create with profile
Add terminal icon to quick access
Add terminal icon ext api
Add icon to launch config
working pretty well
add to terminal view
Update notebook.inactiveSelectedCellBorder for HC (refs #117705)
push terminalTabsWidget
Update distro
fix: only add readonly attribute to textarea dom when editor is readonly
Calls new fork repo command in a codespace
Improve reporting of extension config schema validation errors
update distro
rename channel action processBinary
void -> Promise<void>
update distro
make reduceConnectionGraceTime and processBinary return promises
render outputs for viewport.
wrarmup outputs.
:lipstick:
Emmet polish and updateExtensionsPath changes
Restructure outputs in notebooks to use relative offsets
Remove extra not-null assertions
update distro to include ptyService async method processBinary
make processBinary async
fall back to dom if webgl loses context (#120400)
tweak api based on conversations (#120397)
update distro
remote processBinary
Improve descriptions, fixes #117516, fixes #117518
Update distro
Ignore shutdown pty host messages when already shutdown
Correct Windows PowerShell path
Remove only, describe
Use profilesEqual helper
Test pwsh source fallbacks
Improve fs provider in windows tests
Validate /etc/shells and findExecutable in unix tests
Add create with profile to term quick access
avoid flush cached focus mode.
Add slight right padding to markdown cells
Update distro
xterm@4.12.0-beta.15
Use a single resize observer instead of one per cell
Batch together a few more notebook change events
update distro again
more üßπ
markdown editor model might be disposed.
Flatted structure of preview nodes in markdown back layer webview
Clean up interface for dimension update apis
update distro
üßπand store isBinary in writeBuffer
notebookEditorWidget.layoutNotebook is still the better place.
compilation error
move layout cell into cell list.
move layout cell into cell list.
testing: some api polishing
wsl -l -q, removes header and default mark
fix #119661.
Add initialText proposed API
bump distro
Hide outputs with visibility instead of display
Reduce the number of times we fire updateSelectedMarkdownPreviews
Batch dimension updates from backlayer webview when possible
Avoid running content height update multiple times per frame
Use for/of loop
Remove unused values from webview messaging
Remove extra conditional
Use for/of loop
Use single call to add/remove for classlist
Add guards to updateMarkdownScrollTop
Skip sending updateViewScrollTop if there is nothing to update
Use for/of loop
Use for of loop
Extract duplicated code
pull reduce grace time into ptyService method (#120195)
fix compile error.
cut aligns with delete cells.
fix #120187.
fix #120348.
Update language service call for 4.3 protocol
JSX self-closing style should default to XHTML, fixes #120356
debug: update js-debug
`ILanguageSelection` should not be `IDisposable` (#119968)
Update to vscode-proxy-agent 0.8.2 (#120354)
Revert to vscode-proxy-agent 0.8.1 (#120354)
Adopt `assert.deepStrictEqual` (#118667)
Emmet: Select next/previous item does not work with script tag. (#118842)
Add emmet self closing abbrev support (#120311)
Adopt latest loader (fixes #120150)
Use optional chaining in MainThreadTerminalService
Add comment explaining Process->Api event change
Bring emitTitle back
Workspace trust API polish
Refactor requireWorkspaceTrust to requestWorkspaceTrust
Factor in workspace trust when installing/enabling an extension (#119069)
Set up scroll width even when width has to be detected by the list (#120281)
Update PHP grammar
Add telemetry for task engine version Part of https://github.com/microsoft/vscode/issues/118201
Add IShellEnvironmentService to configuration resolver Part of #108804
Adopt async configuration resolver in Tasks Part of #108804
refactor npm extension to only use npm
:up: distro
product - move the interfaces into base layer for reuse in sandbox
bootstrap - some more cleanup around types
sandbox - add additional arguments also to test runner
revert addition of events
add onProcessBinary to ptyService
add onProcessbinary to ptyhostService
:lipstick:
cellAt can actually return undefined.
avoid offsetHeight check on monaco-editor output/
fix #119732
Enable setTextDocumentLanguage (#119429)
first resize of the builtin renderer can clear the minHeight.
switch mimetype with minheight.
bump distro
debug: call to native console methods in web worker ext host development
Add events for when the active webview changes
Avoid extra casts
:lipstick:
update coreActions getContextFromArgs.
:lipstick:
replace slice with getCells.
getCells in range.
adopt cellAt in tests.
cellAt.
Update distro commit to include REST Book enabled for insiders (#120265)
use viewModel.length.
fetch focus from view model other than list.
use existing func for wid
auto show mgmt editor in unknown state
fix #119205.
check if type === createInstance
Profiles via command pallette (#120141)
update trust parent language
Hides context key
update notebook editor view column when moving editors, https://github.com/microsoft/vscode/issues/115704
assert that we have static view columns
change the label
simplify auto update options to boolean + onlyEnabledExtensions introduce configure auto update action
extract createTestNotebookEditor to testing outside of with-util
Make async versions fo configuration resolver methods and deprecate the sync versions Part of #108804
remove unused service
Remove depreated assert.equals from configurationResolverService.test.ts Part of #118667
extract separte interfaces from ExtHostNotebookShape but not  change anything yet
rename
split mainThreadNotebook up into logical pieces
Revert mkdirp resolution
Revert node-pty update
Revert "skip failing terminal tests."
sandbox - ensure to validate vscode-window-config ipc call
add some logging to ipc object channels
fix issue with finding required node handles (#118091)
Revert "Add resolution for mkdirp"
Add resolution for mkdirp
add notebookEditorModelResolverService.isDirty and use that when forwarding events
:lipstick: bootstrap types
cellCount and cellAt API proposal so that notebook aligns better with text document
sandbox config - add forceEnableDeveloperKeybindings
Add resolution for mkdirp
:lipstick: bootstrap types
preload - apply zoom level after resolving config
Add next/prev conflicts (#97613)
Add next/prev conflicts (#97613)
add NotebookSelector which is like DocumentSelector
IPC object URLs - make it generic and use ISandboxConfiguration in all windows for proper typing
Remove unused dependency
window - use IPC to transport window config and drop URL query param (#120096)
Swap cpx for cpx2
#118667 adopt to deep strict equal
add some todo-tags
try bigger timeout awaiting events
chore: add media and apple event entitlements
do not block svg for webview resources (#120156)
skip failing terminal tests.
fix browser integration test timeout.
Use forked markdown-it-katex version
Finalize CodeActionTriggerKind
testing: remove total tests indicator
testing: clean up 0% label running tests
testing: fix test welcome being shown at inappropriate times
testing: fix active style overriding checked in filter
search: use strict equals
check if localPtyService is defined to avoid throwing in web playground (#120144)
Remove vscode-webview-test from electron csp
Don't use `dataTransfer` for cell drag and drop
Render markdown preview cells inside a shadow dom (#120137)
Bump documented min version for new postMessage behavior
Build VS Code with latest TS nightly
Replace -1 constant in keycode with enum value (#120126)
Add output.inlineBreak parameter, fixes #119088
Bump dependencies, affects #119088
Remove notDeepEqual, part of #118667
Remove unnecessary condition, fixes #119120
skip showNotebookDocment.
:lipstick: Emmet tests
:up: distro
Remove use of assert.equal from the code (#118667)
platform#IProcessEnvironment is badly typed (fix #119046)
fix #119322 (#120143)
Switch to deepStrictEqual part of #118667
re #118108. separate selection and focus.
re #117623.
fix #117670.
fix powershell profile source (#120138)
Adopt ITerminalEnvironment in external terminal
node-pty@0.11.0-beta4
Remove process.env from tasks Part of #108804
Debug view should show when a breakpoint is hit
Debugger: Add option to allow disconnect and stop/terminate UI elements
Update distro
xterm@4.12.0-beta.11
show "no elements" for empty breadcrumb case, https://github.com/microsoft/vscode/issues/56327
Remove notEqual part of #118667
Update Github issue for workspace trust proposed api
Increase timeout for browser integration tests
Revert "Increase timeout for browser integration tests"
Update markdown-it (#120161)
Increase timeout for browser integration tests
Update tests to use consistent version of mkdirp
better working copy uri for complex notebooks, https://github.com/microsoft/vscode/issues/117899
use INotebookEditorModelResolverService#onDidChangeDirty to drive notebook file tracker
make sure dirty state of notebooks from simple content provider is reflected in extension host, add integration test
:lipstick:
Add cuda-cpp lang id, grammar and problem matchers (#119444)
no more usage of assert.equal, https://github.com/microsoft/vscode/issues/118667
Remove unused static functions in grid (#120123)
update y18n
use assert.strictEqual
Exploration: Better transferring of TypedArrays used in Webview.postMessage (#115664)
zoom - always set it early on (fix #108920)
Add placeholder for empty markdown cells
Don't call updateOutputRendering if dom not has not been set
fix #117670.
Adopt workbench.hover.delay in the terminal (#120134)
Handle error in getting wsl distros (#120124)
rendererType -> gpuAcceleration
add trusted parent button
fix #115432.
testing: fix name of view container
testing: add run/debug actions to context menu
testing: s/re-run/rerun/
testing: be more consistent about focus actions, add context menu to reveal
testing: improve test item labels
debug: fix rare(?) cannot read property of null error when debugging
fix: don't open peeks when tests are retired
testing: remove peek if showing for removed test
testing: tear down app if renderer crashes
testing: toggle all visibility when reselecting the same test filter
re #111663.
Enable iframe based webviews on desktop for webviews that don't need search
Enable webview developer tools command for iframe based webviews
Enable useMarkdownRenderer by default again and document this experimental setting
Skip environmentVariableCollection suite
feat: add typographer option for markdown preview (#119641)
Change rendererType to gpuAcceleration
chore: bump electron@11.4.1
Revisit webviewExternalEndpoint in environment (#118950) (#119780)
Remove explicit assignment
Add type for constant
Update telemtry extractor
:lipstick:
cut cell without selection update selections correctly.
First round of getting rid of deprecated asserts (#120125)
allow authority in wt (#120059)
unify copy/paste cell from ui and kb.
[typescript-language-features] Support import statement completions for TypeScript 4.3 (#119009)
Add include for ms-auth extension (#119219)
Try fixing leak of backlayer webviews for notebook diffs (#119372)
Add support for JSDoc link tags  (#119358)
fix(notebook): redo cell creation does not re-select the cell
Update git test for integration tests, fixes #120116
remove (inline) INotebookEditorModel#isUntitled
Update to vscode-proxy-agent 0.9.0
remove unused NotebookTextModelSnapshot
remove default cell for empty, untitled notebooks
:lipstick: throw if cancelled
Moves extension prop out of proposed
Open Editor refactors (#119274)
update typescript-vscode-sh-plugin. For #120103
Respect viewtype for reopen with in notebooks (#120101)
allow wt description in widget (#119291)
also :up: jschardet for web
:up: nsfw
:up: sudo-prompt
:up: native-is-elevated
Inline values provider isn't called with new view port when scrolling editor content
:up: jschardet
Update grammars
Automatically show inline values if an inline values provider is registered
Show current DataBreakpoint access type in "Breakpoints" view - Append debugViewlet.css for "access-type" element - extend IBaseBreakpointTemplateData when rendering
cli - set VSCODE_CLI earlier (#119660)
zen mode: do not keep pointer to editor. Just reset line number visibility for all visible editors
debug: update inline values when variable is set
fixes #119825
remove NotebookContentProvider#resolveNotebook
debt - provide common method to load renderer with config param
:lipstick: remove extra comment slashes
remove overflow action when there are no overflows
editors - do not wait for editor to resolve to signal restored phase (fix #119059)
debug: always show top call stack column
debt - align editor model closer to file working copy
debt - less explicit any
fixes #120066
don't save outputs anymore
debt - improve emmet integration tests
file working copy - better cancellation support
debt - onDispose => onWillDispose
chore: allow vmodule switch for debugging
Add confirmation for workspace trust state transition
Workspace trust - extension enablement (#120028)
 Remove code that is not needed (#120005)
Recommend Quick Open when a workspace is open.
Allow 100ms for terminal container to become available before spawn
Enable terminal event batching from ptyHost (#117268)
replace one additional displayDetectedWslProfiles
allow terminal profiles w a source to have args (#119967)
iPad OS ctrl + c in terminal  (#119979)
displayDetectedWslProfiles -> useWslProfiles
Workspace trust - multi-window improvements (#119483)
Reload window on workspace trust state transition
debug: double check that launch is defined
Remove quick launch terminology from code
new file => new untitled file rather than explorer's new file ref #119882
debug: fix stop on entry not working after launch.json change
Bump version to 1.56.0
fix optional service typing
Use ThrottledDelayer per review feedback.
ces: use ThrottledDelayer
Applied review feedback and tweaked heuristics
RunOneScheduler and code cleanup for CES
More CES heuristics work
Prompt within 1-8hrs heuristics
CES experiment treatment
Draft for ces survey
Ignore extension that is being installed
Update distro
Adopt writeSync maxSubsequentCalls
xterm@4.12.0-beta.7
don't save outputs anymore
debt - improve emmet integration tests
file working copy - better cancellation support
debt - onDispose => onWillDispose
fix #119885.
:lipstick:
fix(notebook): redo cell creation does not re-select the cell
chore: allow vmodule switch for debugging
Change auto update extensions behavior in UI
Add confirmation for workspace trust state transition
Show update all extensions only if auto updating is disabled
Workspace trust - extension enablement (#120028)
 Remove code that is not needed (#120005)
remove test import
add a few array operations
Recommend Quick Open when a workspace is open.
re #119561.
Move terminalRemote and parts of native contribution to sandbox
Remove unneeded impl from browser/terminalInstanceService
:guard: folding+cut
Allow 100ms for terminal container to become available before spawn
Allow undefined in terminal env map, unify interfaces
re #119771.
Enable terminal event batching from ptyHost (#117268)
replace one additional displayDetectedWslProfiles
tests for #119773.
extract copy/cut/paste actions.
allow terminal profiles w a source to have args (#119967)
iPad OS ctrl + c in terminal  (#119979)
displayDetectedWslProfiles -> useWslProfiles
Workspace trust - multi-window improvements (#119483)
Reload window on workspace trust state transition
debug: double check that launch is defined
add tests for undo/redo with invalid ranges.
out of boundary replace should not throw.
undo/redo tests.
new file => new untitled file rather than explorer's new file ref #119882
debug: fix stop on entry not working after launch.json change
Bump version to 1.56.0
Remove quick launch terminology from code
Ignore extension that is being installed
Update distro
Adopt writeSync maxSubsequentCalls
xterm@4.12.0-beta.7
add `NotebookDocument#isClosed`
add `NotebookDocument#getCells(range?)`, https://github.com/microsoft/vscode/issues/119602
update labels for break commands
fix optional service typing
showQuickLaunchWslProfiles -> displayDetectedWslProfiles
Slide to first category for new users
Update distro
Surface pwsh as a profile on mac/linux if it's installed
update distro
Roll back to `vscode-textmate@5.2.0`
Avoid rolling back `vscode-textmate`
update distro
update distro
notebook toolbar init display be none. fix #119910.
update to latest `vscode-oniguruma`
Use ThrottledDelayer per review feedback.
localize info message
fix #119854
Optimizing newly add getting started images.
fix #119803
Adding light and hc getting started images. Closes #115325 and #115327
Allow null in profiles config
remove default value for overrideName
Remove extra space from error message
fix #119672
Setting descriptions typos and formatting
Re-enable measuring
Accept array or single item for output items methods #119601
Move proposed api piece into stable typings
fix #119852.
fix scroll cells from bottom view.
use app scope
updated notebooks
add visible flag to notification
always (re)load notebook editor model resolving notebook input
implement saveAs and better resolving/loading, move some files around, split some files up
ces: use ThrottledDelayer
Reenable localization tests.
fix #118442
update verification members
don't store output in GH issue notebooks
testing: remove unused contributions
bring notebook actions back to editor title bar menu static.
re #119706.
fix #118996.
remove displayOrder and fix #119830
fix #117937
fix #119561.
fix #119767.
Hide select terminal profile in yarn web
testing: polish wording of testing.autoRun.mode
Check PATH when validating non-absolute paths
skip test and remove unused code
Make drop shadow much more subtle Closes #119633
don't emit events when splices are empty, fixes https://github.com/microsoft/vscode/issues/119608
fix https://github.com/microsoft/vscode/issues/119363
use APIs over commands, fixes (?) https://github.com/microsoft/vscode/issues/119437
Aadd messge when getting started empty closes #119496
clean up statProvider, use existsFile, fix #119807
contribute editor toolbar actions by checking active editor other than focus/blur. fix #119706
testing: fix list view not working
fix: items from results being added to collections and breaking decorations
clean-up validateProfilePaths
fix #119672
fix #119728.
fix #119775.
fix #119677
fix #119774
testing: fix exclusion filter in view
testing: fix results disappearing or not showing for new files
testing: fix test appearing on first line, remove location from TestItems
fix #119773.
Revert "extract _assertWebviewForMarkdownPreview"
Update README.md
Set explicit mode for markdown preview code
Build simple-browser media during watch
Maybe fix bug where sync task doesn't get checked
Add back old getting started flow as "walkthroughs"
extract _assertWebviewForMarkdownPreview
avoid markdown preview removal when it is disabled.
fix #119771.
Polish select default profile quick pick
Applied review feedback and tweaked heuristics
Use 'terminal profile' instead of quick launch profile, change icon
use final DAP 1.46.0
node-debug@1.44.19
do no change selections if the action is from toolbar.
fix #119769.
debug: update js-debug
debug: bump node-debug
snap-build-linux.yml: use "snap pack" to get LZO (#119478)
fixes #118660
fixes #118045
fixes #118852
fix code-cli.bat
fix #119073
Add a placeholder for already forwarded root ports (#119792)
fixes #119487
Pull common unix/win parts into shared function
Only set when win profile is non-null
fixes #119488
fixes #119580
fix #119384
window indicator: based on workspace config file location. For #119752
Add schema to profiles settings
window listeners handling
scm: add trace logs for #113803
update verifications notebook
Don't create a terminal on panel show without proc support
API feedback (WorkspaceTrustRequest -> WorkspaceTrustRequestOptions) (#119658)
Be more specific when listening for marker events
don't emit events when splices are empty, fixes https://github.com/microsoft/vscode/issues/119608
Clear data written flag on manual relaunch
fix https://github.com/microsoft/vscode/issues/119363
workspaces history - proper check for untitled
remote indicator - fix npe
shared process - also log if window visible
file working copy - update test to account for events
skip flaky tests.
Remove unsued var
Disable markdown renders by default
fix #119724.
handle invalid ignore options and avoid early dispose. fix #119638
fix #119708
hide all outputs (builtin and renderers) fix #119690.
Don't enable the new markdown renderer if accessibility mode is enabled
Only show selection if there multiple cells selected
Add a special editor option to control the readonly textarea attribute
html: add vscode-languageserver-textdocument as dependency
html: fix compile errors
update distro
RunOneScheduler and code cleanup for CES
update distro
Add sequences to type ahead comment
include source.id for progress notifications
update distro
Only set detected profile if value is non-null
notificationTelemetry: id should always be a string
[html] update service
update remote indicator on workspace change
Update README.md
update distro
Improve resolveTask documentation
update distro
update deps
Add a trace statement to be able to track down which implementation handles a `MultiCommand`
Update endgame notebooks
use APIs over commands, fixes (?) https://github.com/microsoft/vscode/issues/119437
fix(search): preserve case when match start with lowercase char
Add feature flags to control availablity of getting started extension contributions
update distro
Open to getting started page on extension install
ignore optional dependencies when webpacking
Allow tests to be loaded asynchronously (#119537)
debug: update js-debug
diff editor output decorations fix.
Improves behavior for #114945
Don't validate non-absolute paths
Pass event modifier data when clicking on markdown cell
add quick launch profiles for unix
updating telemetry module for built-in exts
fixes #117782
Terminal profile fixes (#119352)
update distro
Disable select for notebook preview cells in webviews
Exclude DSR from type ahead
Removes proposed api check
auto layout for editors in output container, fix #119048.
Build getting started service at startup in order to init event listeners
Improve getting started response to slow network conditions for content overrides
Move override delay to conver all exp service usage
fix #118615 'scm/resourceXXX/context' extension point descriptions were muddled
Move getting started service to workbench/contrib Closes #118603
run oss tool for 1.55
Use shellEnv (#108804)
Bumps RemoteHub to 0.1.2
update tas-client-umd
Change auto update key to allow not updating disabled extension
update diff output height properly (using closure) on resize.
move more logic into abstractRenderer.
add options for controlling outputs/metadata in the diff editor.
Bump vscode-emmet-helper, fixes #112675
Implement Execution API (#116416)
Adds codespaces lookup via command for desktop
Provide more specific file type descriptions
Add darwinBundleDocumentTypes
Refactor darwinBundleDocumentType
Make darwinBundleDocumentType accept a darwin icon
Add notebook.inactiveSelectedCellBorder (refs #114156)
fix #117691
tweak
Bumps RemoteHub to 0.1.1
Implement Delete Duplicate Lines -command
handle view in terminalView
file working copy - clarify onDidChangeContent
Update VSCode icons
Ensure relaunched processes get shutdown
Improve profile order, remove profileName from config
file working copy - better document resolve() method
some code :lipstick:
Ensure config service is optional in external terminal
notificationsTelemetry: change id to be string
Add tsec exemptions
file working copy - resolve returns void
file working copy - add save as support and a lot of tests
chore: bump distro
avoid duplication.
fix action context detection.
remove todo tag
Remove unused argument
Adds RemoteHub as built-in
More tweaks to geting started category
Update getting started category styling
replace more pathOrPaths with path
pathOrPaths -> path
Adjust notebook cell multi-select colors
More CES heuristics work
Allow creation of quick launch profiles via select default shell command
Remove log
alternative version for notebook document.
alternative version for notebook document.
feat: add option to control scm font size (#115494)
Adding the 'delete branch...' function to the source control > branch section
Improve GitHub repository search
Revert "Use rmdirSync instead of rimraf"
Reduce default tas override delay to 0
Make sure we ignore compiled media files
Automatically relaunch terminals when pty host is restarted
Rename experiment override settings Log when experiments have been overridden for purposes of excluding data from scorecards
update the layout since editor toolbar height changes
experiment service for nb toolbar position
Trims url to avoid issues
Prompt within 1-8hrs heuristics
notifications: send telemetry for silent notificatinos, smarter spot for hide event
Update distro
Try to find ports with a root process (#119341)
notifications: add source to notification:hide and also send events for silent notificatinos
Change files to include/exclude placeholder to tooltip
:lipstick:
file working copy - make resolve not return "this"
refine NotebookCellData converter
no more file watching in notebook diff editor, remove lastResolvedFileStat from notebook editor model
Make UI progress indicator clearly visible in the quickpick (#119293)
fixes #119331
Fire onExit for feature terminals that lost pty host connection
file working copy - first cut tests
Properly join string[] profile args
Move comment to the right place
exec with the right encoding
pimp up workbench-web.html
Properly decode wsl.exe -l output
Prevent seamless relaunch triggering multiple times
file working copy - use IDisposable not Disposable
no more double dispose needed in _onWillDisposeDocument
remove NotebookService#destory
Use widget.shadow for custom hover contrast
Update distro
file working copy - dispose model when working copy disposes
xterm@4.12.0-beta.3
remove todo
Show args in profile selector
fire event only when save succeeded
adopt name change
Also exclude docker-desktop terminal profile
move notebook save event into notebook editor model service, remove resolve/save/backup from notebook service and let editor model use content provider directly
fix #119261 filter also by description in Insert Snippet
#38607 Handle uninstalling extensions
implement load of the notebook model
file working copy - rename `forceReadFromDisk` => `forceReadFromFile`
file working copy - remove getStat() that is only used in tests
Update to align log level constants
add withNotebookDataProvider as strict variant of getXYZ, sends activation event, throws when no provider found
#38607 Separete installing & installed state
:lipstick: window error telemetry
add test
Add support for `"log": "<level>"` to the argv.json (fixes #118824)
:lipstick:
flaky suite for #118969
build
Give room for border
Allow for exp modifications of getting started content
Extensions => Command Palette
Small tweaks to styling.
Add "copy cell down" to toolbar
terminal profile fixes (#119267)
Add task to build extension media (#119294)
handle blur from other browser events.
more padding for global toolbar.
no layout if not visible.
polish css.
Update padding for notebook toolbar & folding icon
fix duplicated actions on reload.
cell output domNode npe.
schedule task should check disposable again.
keybindings for actions.
swap notebook toolbar and editor toolbar.
Revert "fix profile tests, path -> pathOrPaths, and  exception"
path -> pathOrPaths in terminalConfig
fix profile tests, path -> pathOrPaths, and  exception
Increase bottom padding for card
Adds support for fork on push for Codespaces
Polish getting started items
#38607 make renaming extension aware of other sources
Allow extension authors to set the title of a QuickPick/InputBox in Options (#119144)
Simplify removal of (Default) from distro name
Improve encoding workaround for wsl.exe
Don't name quick launched terminals
Add logging around port notification Part of #117790
worker eh: wrap console and send to renderer
add workbench-web
Don't attempt to create term in yarn web
file working copy - update todos
adopt latest working copy changes
first cut of IFileWorkingCopy adoption, misses saveAs and backsnapshot are improper...
add notification:hide event
file working copy - remove _backupSnapshot
Replace "Favours" with "Favors"
Replace "Favours" with "Favors"
file working copy :lipstick:
Unix profile selector (#119213)
pick up notification source ID properly
Cancel packagejson search in npm after 1 second
Check for extension updates on extension enabled
file working copy - dispose working copy when model disposes
Initial file working copies (#119233)
Add change update disabled extensions behavior in extensions context menu
file working copy - self register to working copy service
file working copy - add onDispose
fix #118945 validationMessage on extension InputBox lacked Severity.Error
file working copy - more cleanup and alignments
file working copy - some cleanup in working copy
Don't include build files in repo
Make sure we exclude ts files from published build
Try cache busting on reload in simple browser
Rename CodeActionKind.Manual -> Invoke
Scroll the notebook while dragging a markdown cell
Remove typings for unused package
Use rmdirSync instead of rimraf
Add missing change session events to ms auth provider
improve pwsh logic
Exclude compiled notebook files from hygine
debug: stepOver should be alt+F11 on windows browsers
Update test associated to DataBreakpoints
Support for DataBreakpointAccessType condition #117835
file working copy - first cut manager
tweak grammar
provide extensions sync state version api in web - reset the resource sync state when the version changes
debug: do not de-dupe same named variables
file working copy - make sure to bubble up errors
file working copy - first cut extraction from text file model world
Make "Set Port Label" an inline action only Part of microsoft/vscode-remote-release#4624
Add new unconfiguredPortsAttributes to config edit
Add more docs to PortAttributesProvider Part of #115616
fix https://github.com/microsoft/vscode/issues/119157
Get correct candidate for checking port attributes providers
Allow for manually/programmatically checking/unchecking tasks
comment out failing notebook smoke tests, https://github.com/microsoft/vscode/issues/119164
api notebook update
Increase spacing between tasks
Clean up formatting
Relocate keybinding rendering closes #119113
Tweak getting started to look more like welcome
fix long description 50%
chore: update distro
Remove experiment (#110330)
fix #119130
Make sure katex styles are shipped under root of
Update markdown notebook scripts
Skip multiple tabs test for now
Update walkthrough contribution api to single object model Ref #119097
 Terminal profiles  (#118790)
typescript: enable built-in 2020 semantic token support
Enable markdown renderer by default on desktop
Don't try to relayout markdown cells if their height has not been set yet
bind mimetype switcher later.
finalize InlineValuesProvider API; fixes #105690
Improve terminal key dispatch message
support appending per mimetype.
add extension id to source of notification
notifications.test add tests for service add and remove events
delete cell handles multi select.
clipboard actions handle selections around the target.
move copy,cut,paste into clipboard contrib.
Include community in README.md (#119105)
aria alert for cell index changes.
join with next cells through multi selections
support both selections and ui actions.
join cells with multi cells (single selection)
add tests for joining single cell.
move join/split cells out of coreActions.
tests for moving and duplicating cells.
make notebook unit test easier.
Add unit tests for TerminalRecorder
polish
Allow terminal recorder to avoid initial resize event
api notebook snapshot
Prevent process ready log firing multiple times
Recalculate trust when workspace folders change
:lipstick:
react to feedback
Ignore testWorkspace tasks.json
Await task config updates
Update src/vs/editor/standalone/browser/simpleServices.ts
Update src/vs/platform/notification/test/common/testNotificationService.ts
Update src/vs/platform/notification/test/common/testNotificationService.ts
Update src/vs/editor/standalone/browser/simpleServices.ts
keep notebook serializer locally
Improve task test layout
Regression test for #118256
more deprecations
ignore file events while saving, more logging, https://github.com/microsoft/vscode/issues/118992
Ports: service -> application, defaults ->unconfigured
Update types
add INotebookSerializer interfaces and wire up IPC calls
Pick up fix for #117054
new debug setting for clearing a terminal before reusing; fixes #116699
add notification:actionExecuted telemetry event
add notificationsTelemetry
notificationsService: onDidAddNotification, onDidRemoveNotification
Workspace trust changes (#119017)
custom editors - make conflict resolution actions appear (#118949)
mark APIs as deprecated
fix build
Adds RemoteHub to api allow list
debt - use product quality instead of probing for name
debt - some more process and platform :lipstick:
Enable vscode.Pseudoterminals in web worker ext host
format modified: format lines with whitespace changes
update list item height on markdown cell ctor as we might already warm up the viewport.
adopt multi select in drag and drop. drag the focus or selection around the focus.
share drag impl for builtin and custom md renderer.
test view/model range convertion with hidden cells.
update seti theme. fixes #118912
unHidePreview should also update dimensions
Don't create markdown previews if cell is in edit mode
fix: typo
Remove only
Remove unused
better aria label for the remote host status bar item
untitledHint: introduce default for workbench.editor.untitled.hint
firefox: do not use ctrl+shift+P for show all commands since it is taken, make sure F1 is rendered
Do no install repo on Raspberry Pi OS (#118826)
accessibility: 1000 page size as default
fix #118970
:lipstick: process use
debt - consolidate process usage
multicursor aria polish
no indent after 'source' tag: for #118902
explorerModel: add toString to explorerItem for more precise error message
Don't show select default shell when proc support not registered
Add "Copy As..." core submenu to editor context and Edit titlebar menu (#118212)
fixes #118951
skip failing notebook test
:up: distro
use %~1 in bat files
:up: distro
environment - depend on product service
sandbox - extract IPC based file service (client) and improve runtime behaviour
debt - inline deprecated amd.ts methods into tests
sandbox - allow to reuse environment service in sandbox
environment - consistently handle VSCODE_CWD in all our node.js processes
path - never use fs.promises.realpath
Use "%~1" instead of "%1" in bat argument parsing.
debt - use product service in more places
fix integration test
make notebook integration test more stable, fixes https://github.com/microsoft/vscode/issues/118889
Improve getting started page - Allow clicking checks to dismiss items - Allow hiding categories
Clean up styling when contrast borders are defined
fix build
try out multiline extension view
fix scrolling body for workspace trust editor
fix css for extensions grid view and settings
Ensure editorContextKeyService on markdown cell gets disposed Related to #118782
fix tests.
optimize scroll view from bottom.
copy cells with multi select.
extract clone cell.
sort numbers.
Clean up
Mostly working seamless relaunch
tests in webworker EH
move cells with multi select
copy paste with hidden cells.
Try restoring ports more often Part of microsoft/vscode-remote-release#4551
change back untitled hint default to be hidden
run filename through realpath because it seems nodejs isn't always doing that, https://github.com/microsoft/vscode/issues/118812
:lipstick:
Lift native text file service to electron-sandbox (#118815)
debt - provide groups merging from service and add test
Change portsAttributes others to be its own setting
explorer: use findClosesRoot in select()
fix #117093 update Filter on Type indicator after 'list.toggleFilterOnType' command (#117099)
replace openOnFocus with selectionNavigation
sandbox - share most desktop.main code
sandbox - use actual workspace and config service
replaceCells as a single edit.
update prefix sum always when edits happen
false negative hidden ranges test
enable async tests.
delete folded cell would not change other folding states.
cut multi cells w/ folding.
Comment out a few error logs for now
Remove content version logic from webview
Make sure we update cached version when cell changes
createMarkdownPreview should only create previews, not also update them
Log errors and remove unused method
NotebookEditorWidget should not have to know if a markdown preview already exists or not
Remove extra log
Add version to MarkdownCellViewModel
Revert move change and disable debug flag
Avoid re-rendering markdown cells if they have not changed
more polish and re-use extension grid
Notebook custom markdown renderer optimization (#118288)
:lipstick:
selection tests.
configure extension kind of extensions under development
adopt selectionNavigation.
align selection and focus if they were both empty
Don't include css in main katex bundle
sort indexes in cellIndexesToRanges
Handle extension test execution on the UI
add Education extension to category constants (#118589)
Smooth relaunch poc
remove duplicate code
Add comments to add java workspace tags to GDPR inventory (#117740)
Prevent double attach to pty host listeners
Remove logs
mark isEmpty as readonly
sash: workbench.sash.hoverDelay setting
:lipstick: sash
add stdout and stderr mimetype, add renderer for stderr
fixes #118694
Move to writeSync instead of writePromise
sandbox - move platform limits to common
don't mixin default metadata when "replacing" notebook metadata
fix configuration caches - respect scopes
Remove unused
First cut of moving to hybrid getting started/welcome editor
Reduce size of Katex bundle
Avoid extra postMessage call for iframe based webviews
Speed up mac builds (#116984)
use new icons
CES experiment treatment
update connection state before reconnections
Update Codicons: add trusted workspace icons https://github.com/microsoft/vscode-codicons/commit/1f495f5857eb4ea11e00ca41289157d0ed7ca2c9
Avoid some calls to `.then` for iframe based webview post message
Add an untitled document data property (#115790)
move trust color tokens and update values
remove border, use color icon, use link button
Add back custom editor test workspace
introduce customEndpointTelemetryService
fix #118578. offsetHeight to include padding and scrollbar.
notebooks: update output to match NodebookCellOutputItem api
add ExtensionKindController
remote authority - update comments
#101995 extend tooltip of menu item that defines 'alt' command (#116211)
Remove icon from input row in ports view
list: anchor trait
cleanup debugHelperService
list, table: selectionNavigation option
fix https://github.com/microsoft/vscode/issues/118609
:liptstick: deep freeze notebook events before emitting them
polish, avoid classname.split('')
refine NotebookCell API
Show Open Preview in Ports view for public ports
remove `viewType` from openNotebookDocument call
polish
sandbox - move performance.contrib to sandbox
fix https://github.com/microsoft/vscode/issues/118369
implement review comments
Update src/vs/platform/windows/electron-main/windows.ts
Update src/vs/platform/windows/common/windows.ts
refactor perf contribution so that they can be inside electron-sandbox, https://github.com/microsoft/vscode/issues/111211, fyi @bpasero
shell env: add more logging
prefer ReadonlyArray<T> over readonly T[]
build
Bump elliptic from 6.5.3 to 6.5.4 (#118478)
update distro
debt - more layering fixes
debt - layering fixes
more jsdoc around workspace concept
better docs for #118566
fix #118591.
fix(typescript-snippet): fixed "newpromise" snippet
reduce grace time of remote terminals (#118571)
Try to avoid extra promise chaining for posting into a webview
Lock to commit rather than tag for Azure login action
wt editor stepping stone - make extensions list better - centered header style
testing: show progress in status bar, minor refactors and cleanup
testing: show total number of tests to run
testing: add more logical default autorun behavior
Remove notebook document runnable metadata #106747
Update test for api
Begin eliminating cell runnable metadata
Add back top margin for webview cells
Updates proposal for #116906
Use TS replacement span if returned
Remove log
Create a new pty ready promise on relaunch
Directly expose environmentVariableInfo
Move some ptyProcessReady usage inside proc manager
fix #117718 fire onDidChangeResources event after unregistering group
Update distro
bump distro
Move label about for #115244 after more tests are failing
Revert "chore: bump distro"
Skip search tests while diagnosing flakeyness
Adds logging
xterm@4.11.0 Diff: https://github.com/xtermjs/xterm.js/compare/a73fe62...4.11.0
Revert "snap: set compression to lzo, #117852 (#118116)"
chore: bump distro
fix https://github.com/microsoft/vscode/issues/118569
finalize telemetry enablement api refs #110267
finalize isNewAppInstall api refs #117058
Add 'Marketplace' as option for file on and remove as top-level type, #118473
api work snapshot
Queue file operations
update cache on reprocess
remove NotebookDocument#contentOptions
debug: do not bind F10 to step over when on web
Update distro
Set distro back to that in main
untitleHint: use expereiment service
Update README.md
Some Ports view cleanup
allow null for remoteAuthority in IBaseOpenWindowsOptions to force local window
Update distro
Revert "Comment out notebook compile error"
remove skipped test
todo-tag
Comment out notebook compile error
Update distro
Remove resolved comments
Breakpoint inline edit button should be a submenu
Remove preconnection terminal concept
Properly dispose everything in tunnel view cells Part of #118544
remove onDidChangeCellLanguage-event in favor of the existing document closed/opened event sequence
Simplify RemotePty, revive shell config cwd
revert unnecessary change
Remove remote test failure comment
add comment for remoteAuthority
Add SECURITY.md
declare cancellation support for openNotebook and wire it up, exempt notebook content provider from provider naming rules
Improve filtering of disabled extensions
assert unsetting of active notebook needs null, https://github.com/microsoft/vscode/issues/118470
unit test for https://github.com/microsoft/vscode/issues/118470
on fire active notebook change event when something changed, https://github.com/microsoft/vscode/issues/118470
Add a compose language (#118042)
Add configuration key for updating disabled extensions
fix: 76879
#118443  - change name
change nls ids
Make underlined link buttons blue to match the styling of similar buttons
move to IProcessEnvService where appropriate in default shell logic (#118271)
Revert "Reenable smoke test to see if still flakey" #115244
Remove broken part of test
inset -> output.
Update distro
Re-enable task and term test
remove markdown preview only when it is hidden or deleted.
Update terminalProcessManager.ts
Uncomment in test
Skip the failing test for remote only
recent entries with authority
revealView should scroll a little to reveal items below viewport.
Handle undefined extension publishers in issue reporter, fixes #118480
revealView should scroll a little to reveal items below viewport.
Log acceptTerminalOpened
Bump vscode-emmet-helper, fixes #118363
Add outline offset for view actions (fixes #117349)
example of notebook specific navigation commands.
Add 'Marketplace' issue type to issue reporter, closes #118473
Change messageDisposables to DisposableStore
Clean up SearchView link button code
Better "Open Settings" option in search view
set remoteAuthority in NativeHostService.openWindow if not yet defined
reduce selections.
debug: allow passing partial config to start debugging command
Re-enable, add some more test logs
debug: fill in selected configuration by name if not provided
move cell up
Oops
Bug
add notebook navigation commands
improved comment for InlineValueContext.frameId
Include ms in shutdown constant comments
Skip the failing task test
fixes #118006
Update distro
snap: set compression to lzo, #117852 (#118116)
Update distro
Bump distro
Don't force create a terminal on no reconnect
API proposal for PortAttributesProvider (#118446)
Update distro
skip failing test (#118443)
Move proxy resolution to vscode-proxy-agent (#117054)
Pin windows-process-tree@0.2.4 to match main package.json
Disable terminal tests in remote again, fix settings for tasks
Add windows-process-tree to remote deps
fixes #118214 (#118425)
Reminder to compile between tests
bump distro
editors - fix mergeAllGroups (#118268)
allow debug textmate in sandbox (#118219)
fix tests
sandbox - migrate backups from md5 to our hash algorithm
sandbox - make signing and integrity available
add ui flag to mocha tests
Re-enable process unresponsive checking
Disable unresponsive create process
Disable pty host listeners temporarily
Try enable remote terminal integration tests
Add more OCaml related file extensions to the OCaml group
remove unused setting
Reenable smoke test to see if still flakey Ref #115244
Add defaultSnippets to getting started contribution point Closes #117476
:lipstick:
expect commands to set selection and focus for us properly.
accept focus from the list view.
fix #118279
Don't setup pty host listeners twice in remote
Trying to clairify how webview options are used and passed around
Document new fixedChunkSizePolling ts watch mode
Mark field as readonly
Pick up latest TS 4.3 for building VS Code
Disable relaunch in tests
Bail out of create process if it's been disposed
fix #117699
Update distro
update betweenCellToolbar actions per context change.
Remote shell type support
fix #118273.
More test logs
update shellType when it changes for local windows terminals (#117998)
Update distro
Support pty host management in remote
fix #117684.
Add logs to test
üíÑ& localization
Revert "fix visually background flash of cells."
kill terminal process on ipad (#118247)
Add Julia indentation rules
fix visually background flash of cells.
Pick up TS 4.2.3
Update distro
Better fix for #118235
fix #118248.
fix build
dedup ansi color rendering.
:lipstick:
DOM.show/hide.
use resize listener for all main frame outputs.
Support term cli commands
Update distro
ctrl+c on ipad (#118243)
Revert "fix #114009" (#118242)
Increase local grace time to a minute
Support attach to session in local
fix #114009
Support orphaned processes
Check if VSCode runs serverless (#118233)
Share IOffProcessTerminalService
Make setTerminalLayoutInfo interface consistent
Clean up, bring local remote interfaces closer
fix typo in comment
Simplify channel comm
clean up, some ground work to support viewColumn, $acceptEditorPropertiesChanged must update all state before sending events, remove active notion from notebook editor
use TS typle naming feature
look up editor by id, slimmer dtos
Remove `_wrapWebWorkerExtHostInIframe`
Progress towards sharing local and remote term impl
Remove start-up timeouts
bump version
Align `MultiEditorAction` with `MultiCommand`
Prefer using TS constant defining the context key
#118222 skip failed test
sandbox - move workspace tags to sandbox
#118199
NotebookEditorSelectionChangeEvent should contain selection ranges, not cells
explorer tests: use strict equal
debug tests: use strict equal
fix smoke tests
debug console shouldn't collapse messages when they have different source locations
api todos
make NotebookCellData and NotebookData classes, rename NotebookCellData#cellKind to NotebookCellData#kind
remove todos
Do not check for settings sync enablement while initializing in web
-add bg color to even child - clean up
add showNotebookDocument overload or uri
streams - add test for using error as data
comment :lipstick:
streams - require explicit end() after error() and remove error support from end()
stop the code bunny, reuse the createAndFillInContextMenuActions-util, fyi @sandy081 @rebornix
remove one more occurence of '1_run'
Revert "Remove authentication provider package.json declaration"
bump distro
Extract proxy agent support (#117054)
use CSS for odd styling
multi cursor: announce cursor changes
more :lipstick:, more strict typings
:lipstick: in mainThreadNotebooks, return types, more private, dispoable store, duplication removal, etc
fixes #118006
Open window with authority
#62531 clean up
Remove arrays#mergeSort because by now browsers support the refined sort spec which mandates `sort` to be stable.
remove NotebookDocumentMetadata#displayOrder, https://github.com/microsoft/vscode/issues/117684
remove displayOrder from NotebookDocumentMetadata API, https://github.com/microsoft/vscode/issues/117684
:lipstick:
:lipstick:
shell env - introduce a service to resolve shell env as promise (#108804)
debug: update js-debug
Reduce padding of new markdown cells in notebook
Slightly reposition the folding indicator for cells
Improve drag and drop indicators for custom markdown cells in notebooks
Disallow dragging the outer markdown cell for rendered markdown cells
Make markdown cells span full width of editor
Update dimensions of webview element when it is shown again
Mark property as readonly array
Improve documentation for WebviewService
Make the webview icons manager disposable
Move webview icons from generic webview service to the webview workbench service
Throw error if a webview is double registered
Don't  require lazy webview to be passed to WebviewInput
Make reviveWebview take an options bag instead of parameters
gate on feature flag
workspace trust telem
Update Codicons https://github.com/microsoft/vscode-codicons/commit/7e0f377891aa3bc6bf57c192d63f93d73b4f6bf3
Mark selected markdown previews in notebooks (#117947)
Add offset to button focus (fixes #117909)
add warning log if webgl cannot be loaded
Update src/vs/workbench/contrib/terminal/browser/terminalInstance.ts
move disposal to end so measureRenderTime gets called
store suggestedRendererType to avoid retrying webgl if it's thrown an error unless the setting gets changed
use storageService
measure render time if webgl throws and canvas set
use canvas if webgl throws
after webgl is disposed, don't retry to enable it unless the renderer type gets changed
Update src/vs/workbench/contrib/terminal/browser/terminalInstance.ts
part of #106202, make webgl renderer default, using dom if loading the add on throws
testing: fix unit test err
testing: move types to classes instead of interfaces
testing: improve RequiredTestItem api
Rename localPtyService to ptyHostService
Move localPtyService to node
Enable search in open editors checkbox by default
fix overflow in command column
update distro.
fix layout - do not consider header height
Adopt to use new table widget
Update issue scraper to use standard bot PAT and run every month
Use safe process env from electron-sandbox
Register ILocalTerminalService
Move responsiveness check to local terminal service
Move terminal instance service methods to local terminal service
more context key doc
remove notebook dependency from build edits
add frameId to InlineValueContext
Update distro
improve comment
services - use refineServiceDecorator for environment (#117881)
fix exception breakpoint padding
Update distro
services - use refineServiceDecorator for layout service (#117881)
Recover on pty host reconnect
files - address #118060 on master
lock file-changes-action
Don't use an icon on the Port add row
Allow quick input to show info severity (#118032)
fix IThemeService decoration ids. For #117881
add refineServiceDecorator, https://github.com/microsoft/vscode/issues/117881
context key doc
remove "getter" wrapping for proposed API types (classed, enums). These checks needed to be disabled because of an TS issues
api todos, remove long outdated proposal
todo goes issue
move undo/redo and clipboard support out of notebook service so that it slims down
no graceful, throw errors when trying IO on notebooks that have no provider, move notebook model things together
mark `displayOrder` for removal, https://github.com/microsoft/vscode/issues/117684#issuecomment-790019754
fix https://github.com/microsoft/vscode/issues/118103
revive URI when receiving them, fixes https://github.com/microsoft/vscode/issues/118085
fix some area labels in extensions and scm
Renaming a folder adds it to history (fix #118080)
Allow ripgrep search provider to work for files backed by file scheme, but not file scheme themselves (vscode-userdata) (#118069)
Ensure that PrefService calls openEditor with a proper options object and add tests Better fix for #117952
Revert "Ensure that PrefService calls openEditor with a proper options object and add tests"
Ensure that PrefService calls openEditor with a proper options object and add tests Better fix for #117952
Remove incorrect command
Mark disposableStore property readonly
Use `_register` for disposable
Make sure context key listeners are disposed of
Add `CodeActionTriggerKind` api proposal
Clarify docs on CodeAction return type
Use generic type for CodeActionProvider
fix #118043
:lipstick:
Bump vscode-emmet-helper, fixes #118008
Update diff editor with new webview options
Make the backlayer webview span the full width of the notebook editor (#117948)
add basic workspace trust unit test
fixup! fix microsoft/vscode#117095 de-duplicate location results
testing: update to more proper provider api
Don't label non-editable custom editors as readonly
Use correct new context name
Update grammars and fix julia update script for Windows
debt - remove unneccessary indirections from notebook service
Avoid double dispose of pty host client
More forwarded ports trace logging
fixes #118006
debug debt: remove unneneded check
call stack: get rid of actions, menus everywhere
Deprecate editor.accessibilityPageSize setting
Use Promise instead of event
Workspace trust api feedback
Use "(Settings) " as a prefix for userdata paaths in web Closes #114979
Focus first uncompleted category rather than whole document on start Closes #117540
Disconnect in debug toolbar should dispatch to root session
debug: simplify registration
:lipstick: comment
wrap perf stuff in iife, https://github.com/microsoft/vscode/issues/116546
make sure local dispoables are disposed and cleared, https://github.com/microsoft/vscode/issues/117675
one class, one variable style, https://github.com/microsoft/vscode/issues/117675
add todo-tag for InlineHint, https://github.com/microsoft/vscode/issues/105690
Mitigates #118008, better fix TBD
more enforcement of readonly nb doc.
absolutely no polish POC feature list
do not prompt for confirmation in editor
allow text selection of description
move webview resolved state internal.
re-organize notebook editor widget methods.
remove notebook editor widget methods not used.
:notebook: move decorations out.
testing: fix up wording in api
testing: make workspace test hierarchy required
testing: make runTests required
testing: make hidden state more clear
Don't relaunch extension owned terminals (#117987)
Don't force kill ptys on Windows on window exit
less exclamation
de-dup: uri.
de-dup, NotebookEditorWidget#willDispose, didScroll.
Add activeCustomEditorId context
rpm-spec: fix the wrong claim about working on EL7
Add 'prune' option to fetch in git extension API (#117923)
Emmet: Change the type of emmet extensions path (#117946)
testing: fix NaN if 0 tests ran
testing: close error peek view when test run starts
testing: fix tree view overflowing container
testing: fix 'run in current file' running all tests
testing: fix run at cursor discovering indefinitely
testing: adopt new autorun icon
Move kernel/execution code out of NotebookEditorWidget for testability
Bump Emmet yarn, fixes #117154, fixes #97632
fixes #117968
Make sure we use the cannonical uri for file move target
Use case-insensitive check for file extensions
Mark properties readonly
Reuse generic open with logic for custom editors
Extract BaseToWebviewMessage interface
Update distro
Persistent terminal id -> Persistent process id
Rename terminal id to instance id
Refactor second task test
Refactor first task test
Ignore terminal events not related to task test
fixes #117575
use one element for focused/active item in actbar fixes #117584
Add shouldPersist terminal tests
fix extension readme not rendering img width height (#117961)
refs #117960
March for API issues
add region markers to isTelemetryEnabled proposal, https://github.com/microsoft/vscode/issues/110267
add telemetry enablement api (#117944)
increase accessibility page size to 2000
Update vscode.d.ts
cancel parameter hints when editor blurs, https://github.com/microsoft/vscode/issues/115265
fix https://github.com/microsoft/vscode/issues/117431
change anyScore so it repeatedly run fuzzyScore on substrings of the pattern, https://github.com/microsoft/vscode/issues/116683
more details in explain dialog,  https://github.com/microsoft/vscode/issues/116683
do not auto open pasted file
Return early on promise reject.
Support empty messages during location import
Debt: descriptions/hide context keys (tree, ports, tasks)
simplify  $tryShowNotebookDocument further
use label service to infer name of notebook input
notebook - simplify group/viewColumn handling when opening a notebook editor via API
api todos for notebook cell
disable failing test (#117446)
fixes #117910
fix tests
:up: distro
services - distinguish environment services (#117881)
services - distinguish layout services (#117881)
de-deup: getContextFromEditor.
Extract decorateFileEditorLabel to a common function
re #114554.
Draft for ces survey
Pass 'data' to completion details request (#117092)
fix #116751.
Splits clone/docs welcome Allow GitHub Browser entry in the middle
tests for selections for navigation and hidden ranges.
consolidate index/handle update api.
wrong use handle/selection
Aggregates welcome view registration by view id
debug: bump js-debug-companion version
Remove authentication provider package.json declaration
fixes #117924
testing: fix tree not updating if nodes are replaced with same id
Use method instead of event
actionBar: home and end should navigate to first and last item respectively
remove actionBar.reverse orientation
seti: use CONTRIBUTING
add failing, skipped test for https://github.com/microsoft/vscode/issues/117899
Implement shouldPersist for all terminals processes
Use initial instead of unset
update gulp-tsb
Some Ports view clean up
Remove extra check that is not needed
tests - enable color output for integration tests
support to make N outline entries from 1 cell, https://github.com/microsoft/vscode/issues/115200
notebook - make outline entries use the heading text has preview text
add tests for notebook outline
debt - make withTestNotebook easier to use
better focus for select boxes in action bars
Reverting the top margin to avoid a regression
Add line height for title
Remove duplicate tooltip
backups - consolidate web and desktop strategy for backups when auto save is on
Revisit loose primary group check , use string instead of isPrimaryCheck
missing await
untitled.hint let's go back to the button as the default
debt - tackle an old todo
debt - use CompletionItem#textLabel in more places
use CompletionItem#textLabel
tabs - track last tab in row for wrapping
text files - open an editor that fails to auto save (#115840)
View: Maximize editor group" doesnt work with dragged file between editors (fix #117686)
my work for march
don't pass model service to applyEdit but check model version for edit that come from extensions, fixes https://github.com/microsoft/vscode/issues/117683
Factor in workspace trust when switching versions (#117774)
:up: distro
:up: nsfwatcher (#117871)
Update seti-ui icon theme
Label custom editor as deleted if the backing file is deleted
Allow single line comment after `{` for auto indent
Port the desktop iframe webivew focus improvements to the web
Enable semantic features (such as error reporting) in JS/TS notebook cells
Add helper for tracking active js/ts editor
Pick up latest TS version for building VS Code
Only show `infer return type` refactoring when refactorings are requested
fix altClickMovesCursor setting description -> markdownDescription (#117793)
Update distro
bump version to 1.55
fix #117792.
delete comment that is covered by #117088
re #117449. add default color in code.
ipc - allow to configure proxy
Disable overrides in settings and keybindings (#117770)
chore - cleanup registerSingleton service usages
Remove flow control setting
chore - have a single display change listener
ipc - adopt utility methods (#114418)
Remove exthost terminal processes
fix: only use the readonly attribute on the IOS
text file model - drop custom touch method and just go through normal save code
fixes #117746
more fixes for #115840
file service - add a atomic read option
no explicit call of setFocus/Selection outside of notebook cell list.
re #117725. setfocus uses wrong handle for selections.
fix #117725.
Scope down querying getting started service to only cases where it'd affect the outcome
Update marked to 2.0.0 (#117714)
force async to resolve in exp service
Use button foreground on hover
call saveMemento in exp service
Add details about what to do if createSession fails, fixes #117409
Remove focus handling on the xterm element
chore: add crash id for windows and mac arm64
Adjust bottom cell margin
Tweak cell toolbar position
Adjust top cell toolbar position (fixes #117676)
chore: bump distro
Exclude z-author-verified from issues to verify in endgame notebook
Bump distro
debug: update js-debug
cancel disconnect runner on attach
Revert "Add shadow to custom hovers"
check if enablePersistentSessions before updating remote or local state
leaks across notebook/contrib, fixes https://github.com/microsoft/vscode/issues/117687
pfs  - copy should preserve dangling symbolic links
fixes #116083
anything quick pick - only restore editor view state in certain cases
list: fix #116788
fixes #114933
fixes #116883
notebook updates
also support when in viewsWelcome, https://github.com/microsoft/vscode/issues/9303
fix https://github.com/microsoft/vscode/issues/117640
node-debug@1.44.17
upgrade to final version of DAP 1.45
fix https://github.com/microsoft/vscode/issues/117594
workspaces - use recursive mkdirSync
update milestone
storage - rename storageservice2 => storageservice
storage - drop old node based storage service
smoke test - remove code only needed for stable january release
Revert "Revert "chore: bump electron@11.3.0""
Adjust markdown bottom cell toolbar (fixes #117626)
fix #117367 Co-authored by: Eric Amodio <eric.amodio@microsoft.com>
Revert "chore: bump electron@11.3.0"
fix #82587.
Actually use the tasExperimentService
fix #116713
Update authentication provider doc strings, fixes #117409, fixes #117411, fixes #117414
clear terminal layout info on window close (#117496)
Check to see if widget has been disposed of while actions are resolving
fix #115209.
fix #114936.
Make added, removed, changed, optional in auth session change event, fixes #117469
Pass scope directly when signing in to other account, fixes #117510
Add feature flag for opeing to first incomplete section Closes #117533
fix build.
fix selection after multi cell cut
Cancel disconnect timer on attach
fix #117458
Revert to link styling fixes #117539
fix #117449.
Only record layout info for shouldPersist terminals
fix #114031
Make terminal test less strict
Pass should persist to pty service
Add shadow to custom hovers
shared process - further delay spawning
#114031 fix error
fixes #117256
debug: document context keys
Adds force option to defaultLayout
fixes #117348
support when suggestions for keybindings and views as well, fyi @bpasero
fix splitview glitch
fixes #117205
fixes #117391
fixes #117478
untitle.hint: default should be hidden for this milestone
fixes #117480
more tests for https://github.com/microsoft/vscode/issues/117273
fix https://github.com/microsoft/vscode/issues/117456
add skipped test for https://github.com/microsoft/vscode/issues/117273
Inform pty host of detaches
Update enablePersistentSessions docs
Consider enablePersistentSessions when shutting down
Shutdown terminal immediately on last listener remove
icon contribution: make consistent with icon themes (fixes #117492, for #114942)
fix #117549
Simplify handling of pty host ID after restart
fix compilation
Save old cell paddingn in ports table
#117391 get view by id
shared process - spawn it when first connection kicks in (#117422)
Tweaked open issues query
perf - make it clear that shared process connection is after workbench ready (for now)
web - remember last used workspace for extension debug
calm down integration tests
:chore: consistent event names
Notifications and feedback should not be visible at the same time (fix #101376)
Pick up TS 4.2 final
Reducing padding for markdown cells
editorType => viewType (fix #117451)
Update z-index for notebook left focus border (fixes #117528)
chore: pick up latest electron v11.3.0
fix #117503
re #117451.
testing: don't go to source location when expanding/collapsing nodes
testing: show hidden tests if reveal is requested for a hidden test
testing: show retired test glyph margins as dimmed
testing: fix overflowing lines causing misalignment in peek
testing: make auto run hover indicate current state
[getting Started] LogService: info => trace Closes #117443
debug: bump js-debug
dedupe identical inline values; fixes #117419
Use grab cursor for rendered markdown cells
Polish sign out dialog, fixes #117473
fix typo in sorting; fixes #117375
Focus editor when switching to notebook cell
Add completion for 'onAuthenticationRequest' activation event, fixes #117421
Improve handling of connection timeout limits
Use registered auth providers instead of declared for getting label, fixes #117463
Show provider label instead of id in sign in prompt, fixes #117461
Don't confirm on exit on reload
fix smoke tests with stable build (fix #117420)
Remove proposed API check for registerAuthenticationProvider, fixes #117427
Don't clear accounts badge on cancel, fixes #117357
fix microsoft/vscode#117095 de-duplicate location results
testing: fix potential leak of projection instance
testing: fix MainThreadTesting disposable fishiness
leak of not used monaco editor in cell template
fix #117300.
Removes extra command
Add better narration for + row in port table
Remove debug logs
Improve fix for #117246
enforce segments in contributed icon names (for #114942)
window - log crash reason too
untitle hint: add telemetry from
Document context keys
Remove code added to diagnose test only (#117244)
exempt AuthenticationProvider from provider-naming rule
Bumps version of github-browser
fix #117254
check if configuration is disposed
Add manual override for getting started treatment opt-in
Add markdown emoji for testing in notebooks
Add logging to better understrand getting started experiment rollout.
fix kernel cache and add unit test for kernel reg.
Update test for api
testing: better documentation in .d.ts
testing: fixes if no document hierarchy is provided
chore: bump electron@11.3.0
Remove leftover "runnable"
Begin eliminating cell runnable metadata #106747
Move kernel/execution code out of NotebookEditorWidget for testability
Rename markdown math extension to notebook-markdown-extensions
Possible fix for #115918
Changes welcome views lifecycle to Restored
Add authentication provider registration to stable API, closes #88309
Handle promise cancelled for codeActionModel
Allow issue service to display a bug report window when remote extension host is crashed (#116896)
Encode pty host id into terminal id
:lipstick:
selection handles are only used in edits.
fold element should focus the cell.
Remove editorOpenWith (#116856)
Allow Markdown-Rendering Without Providing an Env-Parameter (#117041)
reduce use of handles when possible.
Update Codicons - Update debug angles - Update `new-file` icon object - Add `debug-rerun`
update workspace trust status bar visibility
feat: allow excluding tests from runs
fix #117087
fix focus/selection after cell deletion
fix #115740
Update warning icon color to meet CC (refs #115799)
embed primary into selections.
Update `breakpointCurrentStackframeForeground` icon color (refs #115799)
fix output on pastedcells
Hide badge if trust state changes
Emmet: add support of multiple extensions path (#117105)
Bump vscode-emmet-helper
fix type of getValue in debugService
improve descriptions of debug.saveBeforeStart
fixes #117225
change options for debug.saveBeforeStart
workaround for stoppedLocation.column being 0
fixes #117223
selections[0] is primary.
Closes #116361 - adds select/compare ability
move comment related to resizing terminal panes from code to issue
Update go home contribution (#117097)
perf - add a mark for how long it takes to connect to shared process
new install proprosed api (#117059)
Cancel mouse down operation when the editor height changes (#113818)
Remove Edge Legacy workarounds
Remove support for MSGesture
unwrap the actual command id when a command that required indirection fails, fixes https://github.com/microsoft/vscode/issues/116932
word navigation: on windows let the native chrome word navigation take over
textAreaInput: respect the selectionDirection from native text area
dispose models that aren't needed anymore
:broom: remove unused disposable store
builds - same timeout for all tests across OS
fix data loss issue #116600
Removed optional message, and added modal parameter (#117241)
remove colon from git host in askpass arguments (#117230)
fixes #117237
publish vscode-json-languageserver@1.3.4
JSON Language Server 1.3.3
JSON Language Server 1.3.2
oss tool
work against layering check...
:lipstick: event usage
add nls message for icon property (for #116198)
Update distro
use browser crypto when it is available
Right align actions in ports view
don't trigger snippet completions on any whitespace trigger character, https://github.com/microsoft/vscode/issues/117194
use `null` to unset metadata properties, fixes https://github.com/microsoft/vscode/issues/116956
Make env var tests more resilient to other terminal events
Disable conpty in integration tests again
Use less aggressive create process timeout
Ensure pty host is shutdown when shared process goes down
Prevent env var reload when attaching
Update distro
Remove log
Use + for port forward action in table
Show table row to forward a port
Add "Forward a Port" to Ports Context menu
bump repo
fix compile error
editor memento - remove fallbackToOtherGroupState (#102485)
bump distro
Update endgame notebooks
:chore: address some todos
limit editor title bar action to 9, https://github.com/microsoft/vscode/issues/115198
Update README.md
enable tsec tsserver plugin
update tsec
fix tests.
fewer changes.
file cleaning.
shared process - drop the 3s delay for spawning
some code :lipstick:
editors - replaceEditors should take care of dirty editors
keyboard - document my contextkeys
support setting selections with either handle or index.
reduce use of selection handles.
map handles to cellrange in UI.
unnecessary null -> undefined.
differenciate selection and focus.
Remove escaping whitespace characters
Don't scroll when clicking on a markdown cell
Extract the generic message out from FromWebviewMessage
Add more specific contribution for notebook markdown renderers
Make new markdown renderer better match old one's styling
Note that __vscode_notebook_message can only be true for webview messages from webview
Convert to switch/case
testing: unit test err
Pull from exp service to determine defaul startup editor value
notebookeditor.selections
testing: remove duplicate extension and internal IDs
fix powershell 7 64bit not showing in 32bit vscode on 64bit Windows (#116986)
add debug.saveBeforeRun setting
Hide markdown preview cells when they are folded
Remove unneeded event declaration
Flow control constants to platform
Remove duplicate interfaces from workbench
testing: comp error
Handle shutting down all window processes when not a reload
testing: make reveal in test explorer work
testing: do not show test decorations in diff editors
Group common pty service interface methods
Improve ptyService side log format
Consolidate `wrapWithAbbreviation` and `wrapIndividualLinesWithAbbreviation` in one command (#116603)
testing: test feedback for decorations
Clarify layout obj is not referencing pid
Correct reconnected active terminal restoration
Pty service better title handling
Add ! as stylesheet trigger character for Emmet, fixes #117020
Simply onExit handling
More ptyService clean up
Tidy up persistent term events
fetch -> attach
Return Promise<void> from fetch proc
Clean up
linkDetector: fix tests
Update src/vs/workbench/contrib/terminal/browser/terminalInstance.ts
skip test to unblock build
Azure DevOps build task to download built-in extension details (#116938)
Improve seconds logging
Update smoke test README (#115582)
fix cursor position when at the start of RTL syntax tokens
debug console: better hover text for tunneled uris
tabs - do not trigger relayout from updateBreadcrumbsControl (#112630)
assert no RPC leakage in notebook tests
separate vscode.NotebookEditor from ExtHostNotebookEditor
tabs title - :lipstick: height compute
remove console.log
fix tests
fix smoketest
improve link hover in debug console
cleanup, NotebookEditorInput#viewType is actually never undefined
Add period to list item for consistency
debug breakpoints: remove breakpoint inline action
support setTextDocumentLanguage-api for notebook cells, fyi @rebornix
open editors: new unititled file in title area
use document directly, not editor.document, for $acceptDocumentPropertiesChanged, fyi @rebornix
:lipstick:
:axe: remove unused $acceptDisplayOrder-RPC and everything around it
strictness (fail fast) in extHostNotebook
don't bind notebook document to a provider/extension, do then when calling backup, fixes https://github.com/microsoft/vscode/issues/117035
:lipstick: more supportsBackup removal
views: fix buttons width
untitled hint: change default to be button for the user study
tests - more logging for #117032
sandbox - document issue with #116829 in code
add doc for what workspaces are supported
fix compile errors
remove unused cast
cleanup, all notebooks must support backup
update distro
use keys for sync from product
tabs wrap - allow for up to 1px overlap of last tab to action toolbar before disabling wrapping tabs (fix #116385)
Move Ports view into the panel
joao/table (#117026)
extensionsList: focus only enabled items in actionBar
tabs - allow badges when tab sizing is set to shrink (fix #115908)
remove doc
Add icon column
revert default value for workbench.tree.expandMode
fixes #117006
tests - a lot more detailed getUntitledWorkspaceSync test (#116288)
actionBar: allow to go over disabled items
files - make save error actions context aware (#115840)
editable changes in notebooks
Oops
Make jsdoc completions text kind instead of snippet kind
Handle normalized absolute file paths on markdown preview link click  (#116649)
Allow welcome page to not be active on account of focus potentially going to a getting started item.
log something in ptyService
testing: fix unit test
use persistentTerminalId instead of pid
testing: add method to publish extension-provided results
Add 'deny' option to account access prompt
set minHeight on outputs when rerendering outputs to avoid shrinking.
remove stuff from process in platform
Enable extensible markdown notebook rendering in VS Code workspace
Null out webview on dispose
Remove extra info from onDidChangeSessions event
Update src/vs/platform/terminal/electron-browser/localPtyService.ts
testing: allow contributing menu items to test view
return terminal launch error
Remove unused
Contriburte extension items at top-level Ref #116414
move stuff back to workbench and remove log statements and use pid
Update src/vs/platform/terminal/common/terminalDataBuffering.ts
fix #115722.
align InlineValuesProvider with EvaluatableExpressionProvider
Move notebook markdown cell margin to its own const, tweak margins
Update src/vs/platform/terminal/common/terminal.ts
Update src/vs/workbench/contrib/terminal/browser/terminalInstanceService.ts
untitled hint: polish
untiltedHint: introdcue button option, use it as an editor contribution
enable flow control for local terminals
add NotebookDocument.save().
fix #115596.
fix #115326.
fix #113381.
remove attachedEditors.
testing: fix comp error
Open first section if no items completed Closes #116570
Back => More Ref #116570
testing: fix show in active file not working when first turned on
testing: show discovery progress when finding tests
move terminalDataBuffering from workbench to common
:lipstick:
revert focus tracking changes and use it to set focusable on actionBar
Support remote images
Oops
fix initial terminal title Co-authored by: Daniel Imms <daimms@microsoft.com>
Cell output metadata to be added to Notebook Model
removed unneeded events and fix reconnect title
only start process once Co-authored by: Daniel Imms <daimms@microsoft.com>
fix #116722
send event when removing a kernel, https://github.com/microsoft/vscode/issues/115698
send correct delta after restarting extension host, https://github.com/microsoft/vscode/issues/115698
fix tests
Add tooltip to icon in ports view
Emmet: add css.color.short setting (#116912)
Bump Emmet version
Add padding-right to port cell icon
dispose more things, https://github.com/microsoft/vscode/issues/115698
debt, copy-paste police
Tweak title source, create proc timeout
Mark disconnected terminals and disable stdin
Handle non-responsive pty host process
table hover feedback
table: optional tooltip
reload non-dirty notebooks when their files change on disk, https://github.com/microsoft/vscode/issues/114263
merge NotebookController#reloadNotebook into notebook editor model, remove NotebookServce#resolve and add create and fetchData "primitives", https://github.com/microsoft/vscode/issues/114263
:lipstick:
add IResolvedNotebookEditorModel and use that in most places so that we can remove non-null assertions
More clean up and fix icons
use product name
Simplify events in LocalPty
Use column weight in ports table
Add port header tooltips
Add tooltips to port cells and some cleanup
table: column size constraints
table: column header tooltip
table: fix weights
Update distro
Update distro
Re-enable pty host restarting
Remove logs from test
Source -> Origin and added a menu
Show detected ports and add input box
Some clean up in naming
Hide privacy column
Use container in renderTemplate
privacy and source columns
remove unused imports
update comment
tunnel view: enable context menu clicking
reenable tunnel view list options
reenable more tunnel view functionality
cleanup workbench lists
More actions on cells
update distro
move IActionViewItemProvider and IActionViewItem into its right place, https://github.com/microsoft/vscode/issues/116112#event-4345173898
treeItem.iconPath no longer works with files in globalStorage in Insiders (fix #116735)
debt - remove IActionViewItem from composite (#116112)
chore - consistent imports
Improve notebook toolbar overlap of markdown cells (fixes #114730)
Add postNotebookMessage helper function (#116909)
Take `string` kind in `_executeCodeActionProvider`
Mark events fields readonly
Revert back to old node-pty
Ensure tests run to completion
Adds id & version to extension context - #116906
testing: update test results api to spec
testing: fix not being able to type spaces in filter
testing: show placeholder text if providers don't discover any tests
Ensure runState is updated correctly
chore: enable compression for crash reports
reconnect processes Co-authored by: Daniel Imms <daimms@microsoft.com>
Update copyright year
add debug logging for configuration
Add back support for reading from clipboard in webviews (#116597)
move cell output tests to document.
remove unreached code.
Update Codicons
First cut of allowing extensions to contribute getting started content. Closes #116414.
Return from getSession earlier when requesting session access
Update telemetry classification type for isEdu check
add trigger replay
untitiled hint
üíÑ class name fix
Localize terminal context key descriptions
update distro
support switching settings sync services in web synchronise setting sync service type in web show necessary prompts when services are changed
Rendering for local address and label
perf - init KeyboardLayoutMainService in parallel to window opening
make 'editor/title/run'-menu generally available
:lipstick:
InlineValues provide: merge and sort segments per line
adopt WorkbenchTable in tunnel view
Add editor input factory
workbench table
table: rename
Adopt description in terminal RawContextKeys
shared process - log errors properly
refine completion provider for context keys, https://github.com/microsoft/vscode/issues/9303
:up: distro
Update terminalView.ts
Disable keytar in our integration tests (#116852)
Remove old workspace trust editor
Improve tunnel label and process description
tunnel view: start to adopt table
make notebook and cell metadata classes, https://github.com/microsoft/vscode/issues/116333
table: styles, domFocus
Tweak input field width
Add workspace trust banner + UI polish
shared process - log errors/crashes also to active window
table: use getSashOrthogonalSize
splitview: getSashOrthogonalSize
further TunnelViewModel simplification
simplify ITunnelViewModel
outputs in notebooks
expose context key info command, add first version of completion item provider for package.json and keybindings.json files, https://github.com/microsoft/vscode/issues/9303
add NotebookCellOutput#metadata, also use API type internally and translate dto sooner, fixes https://github.com/microsoft/vscode/issues/116792
Let Remote extensions set port source (#116838)
table: css
table: fix initial cell sizing
storage - more consolidation
table widget: fix overflow behavior
table: layout
storage - some :lipstick:
storage - lift more things up to abstract impl
add prefix to main errors when logged into renderer
Delete notebookTestMain
Select the first search row when initially focusing it from the search inputs, now that the coloring is easier to differentiate
change cell language with cell change events.
Add onProcessReplay to LocalPtyService and forward the event to PtyService
add onProcessReplay to PtyService
add onProcessReplay to PersistentTerminalProcess
fix #116808.
add test for #115855.
monaco: fix conflicted file
testing: run test on enter press
testing: improve labeling in peek for accessibility
testing: improve labeling in peek for accessibility
fix: hide debug/run actions if no tests are applicable
testing: filter focus on view visible
testing: tweak autorun icon checked state
fix #116598. broadcast output items change.
Update monaco.d.ts
don't re-create a persistent terminal process
Also bump build version and run formatter on all files
Pick up latest TS version for building VS Code
rename remote -> persistent
Remove bundling changes
testing: add contextual commands for running tests
Re-enable all tests
Allow conoutSocketWorker in unpacked asar
Recursively include lib
Show tailored notification when paste isn't supported
Include lib in node-pty
Clean up focused cell styling (fixes #116797)
remoteAttach -> attachExisting, remove logs, fill in args
tests - enable workspace tests again for now
startDebugActionViewItem: fix focus navigation within ActionBar
Keep misspelled property name in timerService
testing: fix event listener leak
Log more in test
storage - implement first cut migration support
Log all lines in failing test
first draft editor (#116599)
use nls#localize for context key descriptions
more table progress
add description to some RawContextKey-instances
allow to exclude a context key from registry, allow to provide type eplicitly, https://github.com/microsoft/vscode/issues/114867
first cut of proposed "inline values provider" API
:lipstick:
actionBar: always respect orientation, so only left / right navgiate in horizontal and up/down in vertical
table: intro
set output and editable properties
storage - bring back tests for close on shutdown
:lipstick:
workaround #116691
rename: resolveNotebook is openNotebook
storage - let renderer close workspace DB
storage - skip failing test
update editable state
update my-work notebook
remove unused ui tests
storage - test all storages closed when shutdown
Revert change
Specify sourceScanPath
window - type win as null if disposed
Move component governance to compile stage
storage - fix unused storage variable in tests
before removing cell documents capture its API objects, after inserting cell documents capture its API objects, fixes https://github.com/microsoft/vscode/issues/116711
storage - use inMemory storage for tests
storage - let service own lifecycle in main and implement storage warming when window loads
workaround for https://github.com/microsoft/vscode/issues/116751
don't assert rpc strictness yet
actionBar: adopt respectOrienationForPreviousAndNextKey option in lists and notebook
&quote; is ", re #115391
fixes #116663
debt - consistently refer to main services
debt - consistent event names in main
storage - move more things into abstract storage service
storage - remove unused onWillSaveState event (main)
button checkbox and menu: do not automatically remove tabIndex from disabled items
actionBar: allow to focus disabled items
actionBar: do not eat up the arrow key if there is only one item in the action bar
storage - add first cut lifecycle controlled from main side
refine precondition so that markdown cells always "execute"
increase default timeout for event waiting, fixes https://github.com/microsoft/vscode/issues/116704
add precondition to exec'ish cell commands
storage - move lifecycle into service
use metadata classes for cell and notebook document implementation, https://github.com/microsoft/vscode/issues/116333
customSelectBox: do not buble key down and key up events to not conflict with action bar
action bar: In case an action got disabled and it was last focused in the action bar We need to reset the tabIndex to be set on the first enabled item
Revert "use metadata classes inside NotebookCell and NotebookDocument"
make `vscode.NotebookCellRange` a class
fixes #116700
fixes #115212
improve list settings docs
tree: remove bogus expandOnlyOnDoubleClick
cleanup imports
use metadata classes inside NotebookCell and NotebookDocument
more API todos
remove unused event
explorer:  click in empty area -> create a new file
make SubmenuItemAction dynamic again
fix suggest widget styles
adopt focus border across all core themes
fix quick input inactive focus background color
remove twistie hover feedback
unescape characters that marked escaped, fixes https://github.com/microsoft/vscode/issues/115391
cells are editable
missing recursion break
fixes #116558
fix #116523
storage - bring back logging support
assert no rpc in notebook doc test
storage - do not init at random (fix tests on windows)
fix terrapin failures not reporting
update (restore) language test for new cells
reset dirty state when reverting a notebook, update extension host when dirty state of a notebook (working copy) changes
run active editor test only when having focus
storage - implement workspace storage and fix tests
storage - some :lipstick:
storage - introduce shared class for storage in main
main rename
storage - wire in close()
storage - add test for storage main service
storage - fix layers to be able to use native storage service in sandbox
storage - change main storage service to support global and workspace storage (stubs)
Send a file path text to the dropped terminal area
storage - add tests for all services
Update node-fetch (#116560)
consolidate some code
Make sure we focus inner iframe contents if the webview itself is already focused
Skip echo test again
splits persisting, still some issues
testing: commands to run tests at current cursor and in file
testing: allow filtering to only executed or failed tests
Simplify echo works in the default shell
use checkmark instead of toggle lang 4 diff editor
Add github session telemetry event
Remove ps tree logging
fix classic menubar safari
Revert "Bring ptyService into shared proc"
Revert "Register ptyservice in localptyservice"
Revert "Move ptyService out of shared proc temporarily"
Try conpty in integration tests
Revert "Re-enable most tests"
Revert "Skip all but 2"
Add potential top level command entries
Skip all but 2
testing: show peek link in hover
testing: automatically open peek view on failures
testing: close peek view when associate test state changes
Re-enable most tests
Skip echo works in the default shell test
clean some things up
Emmet: add output.reverseAttributes option (#116088)
use TerminalInstanceService to access localPtyService
Enable 3 tests
Move emmet to emmetio/emmet npm dependency, fixes #110697
Enable ts check for service-worker
Add some aria roles ref #115896
Enable terminal tests that deal with ptys only
Re-enable tests, disable terminal suite
Move some additional focus fixed from electron webviews to iframe webviews
Make sure the webview gets focused even if the actual webview content does not yet exist
Make sure webview editor has not been disposed before claiming webview
Revert "Support the new 4.0 definition of isArray (#102413)" (#116571)
Remeove "Skip" link, ref #114964.
Disable api tests
Move ptyService out of shared proc temporarily
wip - move notebook integration test into our normal API test extension
disable extensions when debugging API tests
while resolving an editor input it might get disposed
some :lipstick:, some API todos
remove node-pty from web
Update freshExecArgv comment, fix #116422
Make scopes parameter optional to getSessions and remove getAllSessions
fixes #116395
testing: add tests for and fix bugs in test result service
Register ptyservice in localptyservice
Bring ptyService into shared proc
Unrecognized variables with arguments getting truncated (#114474)
Make user data path a AMD/CommonJS compatible thing (#116530)
tabs - no need to lookup editor index
Log process tree after test suites
actionBar: use up/down as well to move focus
Disable ptyHost restart
Don't double dispose LocalPtyService
Improve storage key for stored tunnels
add notebookKernelCount context key, clean up non-null assertions in notebook editor, modernize contributions store
Tab lists should only occupy a single tab stop
sync enablement keys and service key
:lipstick: fyi @rebornix
more disposing when dispose main thread notebooks, https://github.com/microsoft/vscode/issues/115698
Call shutdownAll on ptyService
:lipstick:
Setup tunnels for syncing
:lipstick:
skip failing test, https://github.com/microsoft/vscode/issues/116535
Accessibility: Shift+Tab gets trapped in debug and problems panes.
use registerSharedProcessRemoteService to register
add devcontainer associations to configuration-editing
wip: update list ux
rename CellKind to NotebookCellKind
add tsec to CI, https://github.com/microsoft/vscode/issues/116459
:up: distro
update tsec to 0.1.3
setting editable metadata
:lipstick: more main.ts cleanup
Always intercept file protocol (#116522)
remove storage service, try to hook up layout info communication, bad layering also
Add disable checkbox to getting started. Closes #114964.
Try different workaround for rewriting localhost resources for remote webviews
Add back build-notebook script
Enable inline html tags in notebook markdown
[Deep clssifier] Lock dependencies
Rename login/logout to createSession/removeSession
allow for tiered trust (walk the tree)
Add comment about localization string
move more stuff into/out of platform/terminal.ts
Update src/vs/platform/terminal/common/terminal.ts
fixes #116142
Remove account caching from MainThreadAuthenticationProvider
Pass scopes through to authentication providers
Update indicator height for collapsed cells
change import for terminalContributionsDescriptor
undo move of lines in test files
remove unneeded stuff
revert terminalTab change
remove unused imports
Make notebook scrollbar transparent
move things back to platform and delete duplicate code
remove get*Actions on container
Dispose localPtyService on shared proc
Dispose client on exit
Update src/vs/platform/terminal/common/terminal.ts
Update src/vs/base/common/async.ts
testing: implement base autorun
Clean up terminals when ptyHost goes down
move things back to the workbench and leave only necessary items in platform
sync resource enablement keys & service key in web
Make onDidChangeSessions event for auth providers fire complete session
Use DAP's new "StackFrame.canRestart" property to enable the "Restart Frame" command
compositeBarActions: hasPopup: true for consistency
Accessibility: Accounts and Manage items role
app.ts - clearly distinguish node.js and electron servers
:lipstick: more app.ts cleanup
:lipstick: app.ts cleanup
Adopt registerSharedProcessRemoteService
Don't remove node-pty/lib
:lipstick: main.ts
update distro
Show DAP's new "ExceptionBreakpointsFilter.description" property in a hover
post merge clean-up
Show DAP's new "ExceptionBreakpointsFilter.conditionDescription" as placeholder in condition text box
move ipc services back to e-sandbox
registerMainProcessRemoteService & registerSharedProcessRemoteService
fixes #116334
add description property to RawContextKey, all registry to collect all info, add command to print, https://github.com/microsoft/vscode-docs/issues/3039
List all tsec exemption explicitly
Updates tsec to 0.1.3
#116084 fix reporting unhandled errors
isolate IMainProcessService and ISharedProcessService into common
add more wordings to settings sync dialog
more IPC cleanup
cleanup update ipc code
Update distro
Set up proper logging in pty host
Resolve todos
TerminalProcessMainProxy -> LocalPty
Handle ptyHost exit gracefully and restart
Remove languages property from NotebookData and NotebookDocument
ILocalPtyService -> IPtyService
paneView: make actions in view title visible when focus in pane
stop using `resolvedLanguages`, only use kernel languages or all languages
move INotebookKernelInfoDto2 to protocol, separate kernel from dto, renames
file watcher: show start watching info as debug
debt - less any, more unknown
use web overrides while reading
have a clear separation between KernelProvider and Kernel
:lipstick: jsdoc
wire up `supportedLanguages` from extension kernel
some unit tests for metadata classes, https://github.com/microsoft/vscode/issues/116333
fix #116419
do not turn off settings sync when quality changed
Revert change to startupEditor until smoke tests are fixed
Enable getting started page as default startupEditor. Closes #116414
Aria-label the image alt text ref #115896
Remove old import.
Make cell focus indicator more noticeable in large cells
Add back icon to getting started tab
Remove unused template file
Remove getting started opt-in's
Batch of getting started accessibility changes ref #115896
add to do
adjust resizePanes
add log service
Support drag and drop copy for markdown cells
Add support for markdown notebook renderers  (#115191)
Move ptyHostMain into the node folder
Remove unneeded file, document channels
Clean up
Create ptyHost, bidi communication
testing: implement retired test state
create PersistentTerminalProcess and move terminal and environmentVariable files from workbench -> platform
update distro
file watcher: show info when start watching
Move pty to shared process
IIPCOptions: clarify freshExecArgv
ipc client: fork must not inherit --inspect(-brk)=
testing: add 'show in active file'
fix workspace trust badge priority
remove get*Actions from view pane
Add setting to enable/disable returns generation in jsdoc
update distro
remove web overrides
- disable auto sync when default service changed in web - donot prevent turning off sync
show selecting settings sync service as a separate dialog
file picker should only reveal files, not folders nor workspaces, fixes https://github.com/microsoft/vscode/issues/116297
Workspace trust refactoring (#116354)
make NotebookDocumentMetadata and NotebookCellMetadata type-equal with current proposal, https://github.com/microsoft/vscode/issues/116333
Bring back "debug: select and start" to the command palette
fix metadata complile error
remove CellOutputKind type
allow custom id in NotebookCellOutput
Create no accounts menu on demand
actionBar focus: make sure to setFocusable first enabled item
action bar: only one tab stop
some trying for https://github.com/microsoft/vscode/issues/116333
Change blocking behavior for auth extension activation based on if request is from core or extension, fixes #116295
upgrade DAP to 1.45.0-pre.0
use weights instead of when (#116277)
Let extension contribute to ports context and return useful info from port label command Part of microsoft/vscode-remote-release#4433
add check box to use insiders settings sync service while switching
fix https://github.com/microsoft/vscode/issues/115779
more api todos
:lipstick:
sandbox - use electron directly and not preload for postMessage calls
filewatcher: allow to specify path globs for polling
:up: distro
streams - introduce and adopt listenStream
fixes #116036
prepare for KernelInfo#supportedLanguages, https://github.com/microsoft/vscode/issues/116314
little prep for https://github.com/microsoft/vscode/issues/116314
refactor change to fix fault and reduce diff
:lipstick:
repl: no need to use toString() for diffIdentity computation
rename createChannelReceiver into ProxyChannel namespace (#116308)
fix https://github.com/microsoft/vscode/issues/116094
Revert "tryActivateProvider should not blocking"
structure FilterOptions.textFilter to hold negate flag
sash: add hover feedback delay
position run-submenu further to the left, https://github.com/microsoft/vscode/issues/114123
set settings sync logger name
sandbox - receive message port via postMessage
cell execution API sketches
fix: CreateFile ERROR_FILE_NOT_FOUND from crashpad handler (#116252)
debt - prevent vs/code dependency from vs/server
debt - do not allow platform layer to reach into code layer
:up: distro
debt - move shellEnv to platform
unknown metadata value.
Pick up latest TS insiders
Use npm for building markdown preview
Use shared webpack version instead of installing locally for simple-browser
debug: replace element when appending text to ensure updates in repl
testing: refactor to new runState API
Try wrapping IPv6 host for webview resource loading with`[]`
Relayout search view when message visibility changes #116182
awaiting-insiders-release => unreleased
Removes dead code
Adds another of my email addresses
Move isAccessAllowed to authentication service
did save event listener is not hooked up properly
send mimetype specific metadata to webview
style polish
diff editor compare outputs should ignore outputid
resize observer does not count padding.
[renderer] fix string conversion for numbers
implment getCellViewModel for side by side diff editor.
node-pty@0.11.0-beta1
Adjust message, fix icon color
add changes
tryActivateProvider should not blocking
off by one...
Move extension icon color to a theme color token (refs #115799)
do not render if there is no mimetype at all.
Revert "notebook diff editor handle empty mimetypes."
fix notebook worker dto
fix tests
fix compilation
fix compilation issue
- introduce trusted api - disable settings sync in untrusted workspace
Improve guidance commentary in GH Bug Report template (#116183)
update distro
Add portsAttributes to devcontainer.json Part of microsoft/vscode-remote-release#4445
debug console: diff identity provider should take the string content into account when computing ids
add InlineHintKind to InlineHint-type
fixes #116155
move to sandbox
fix layering
#116112 remove dependency on IActionViewItem
add `editor/title/run` menu id and expose as proposed API
Improve trace messages
Remove terminalFocus from create new term keybinding
"inline" empty submenus in editor title bar
ts - no implicit any
Only show port notification in last window Part of #116058
shared process - move all settings sync related services to sandbox
sandbox - move user data sync contrib to sandbox
sandbox - move extension management and tips to sandbox
sandbox - move telemetry service to electron-sandbox
windows does not support symbolic links
Remove log
Get 2 way communication working
Get one way communication happening
only ask to inline when there would be enough space, https://github.com/microsoft/vscode/issues/114123
add support to automatically inlining submenus (when rendering), adopt in editor titles for the len(submenu)=1 case
improve hover feedback for sash corners
sandbox - move localizations service to sandbox
sandbox - move diagnostics service to electron sandbox
shared process - move service to electron-sandbox
shared process - delete sharedIPCHandle
pfs - improve symbolic link test for windows
:chore: extra comment
action2 in explorer and debug: make sure to use original to preserve english title in command palette
allow gear~spin
status - update background color (#115886)
always fallback to plain text (#115860)
Only match exactly 7 equals (fixes #95040)
#116152 enable smoke tests
#114901 revert partially - do not scope view pane container context to its domnode - only use target while creating the menu actions
Also skip 'before', #116156
Change disabled tests to .skip
Try to disable caching in the simple browser's iframes
Handle 304s for remote resources
notebook diff editor handle empty mimetypes.
handle append/replace output items.
disable smoke tests that time out
builtin renderer handles OutputItem.
new output type shape only.
auto save ...
fix outputs loading
Add default color for sash hover border color (refs #114636)
Use node script instead of 'cp' command
remove legacy typings.
Copy codicon files directly into sources instead of taking a non dev dependecy on the entire package
Mark simple browser as a UI extension
Use white background in simple browser by default
chore: bump electron@11.2.3
relative sizes persist
touch up
active instance working for each tab
focused view context key should be set at global context
Pass executableEnv to other side
Create createProcess ipc interface
Rename pty service to local pty service
update yarn.lock
fix home menu items not appearing
Create pty service main <-> renderer channel
Move remoteterminalservice reg to contribution
remove log statement
persist local terminals - not yet setting active instance or relative sizes
Extension management - refactoring workspace trust signal (#116118)
testing: adopt new state icons
NotebookDocument#metadata is readonly
update vscode-grammar-updater
:lipstick: strict assertions
#114901 associate scoped context key service to target
debug: update js-debug
after fix for grammar importer
add name attribute, https://github.com/microsoft/vscode/issues/115746
Update gulp-atom-electron (#116119)
update and fix grammar
add colorizer test
add search support
RPM: Don't generate build_id links (#116105)
Improve ports view welcome text Part of #116058
remove used code
fix https://github.com/microsoft/vscode/issues/116104
remove getActions*2 from view pane container
Don't show browser preview action in Ports view web Part of microsoft/vscode-remote-release#4436
move interface to its sole user
remove unused types
add todo-tags for API feedback
fix compile errors
move convert logic into extHostTypeConverters
logger shall log always when created with always option
use logger service for output appenders
Properly check for FuzzyScore.Default value. This was a regression from 37a4b96ae1820d21d215b460006e0baab471d6cc
Remove 'grant access' badge when done, fixes #115950
append or replace mimetypes.
append/replace output items
testing: avoid showing 100% if any test failed
add tests (#115944)
RenderType.mainframe
rename.
rich mimetype renderer refactor
allow \closedWith comment to add unreleaded label itself
Remove unused trigger
Bump actions (for the last time! moving to `stable` branch vs release tags)
convert output exthost/main. not optimized.
fix  #115931
Update .mailmap
Add self to mailmap
Add name to mailmap
Update distro
xterm@4.11.0-beta.3
no error and stream output anymore
:lipstick:
OutputDto always has id
internal output types always have id
enable diff decorations first.
fixes #115810
BreadcrumbsControl#update should know when something changed, https://github.com/microsoft/vscode/issues/112630
register open explorer command with container
move window logging to main
todo-comment update
Set the remote ext host pid and name (#115891)
wip: support overlay context key service
Update distro
appFolder -> execInstallFolder
Use weak shell quoting for npm tasks with -- Part of #115876
Resolve some todos
add deprecation tags,  remove unreferenced types, add more todos
fix unused import
Revert "remove used dto interfaces"
remove used dto interfaces
remove need to massage ids onto output items
:lipstick:
Avoid deprecated assert methods
`self.trustedTypes.createPolicy` is undefined in web workers on Android
add NotebookCell#output2
update distro
rename log service to logger
debug: when focusing sessions from drop down give priority to stopped sessions
make extHost only send ITransformedDisplayOutputDto (convert error, text output inside the ext host)
Don't leak RPC objects from API (#115679)
fix yarn lock changes names
naming
more API proposals
Supplementary function parameter types
Supplementary function parameter types
Add back logging to open service.
Add logging to help daignose. github/codespaces#2248
Revert "Revert "Don't modify _resolvedUriTargets after first set.""
Revert "Don't modify _resolvedUriTargets after first set."
fix smoke test typings.
fix tests.
Don't modify _resolvedUriTargets after first set. Maybe a fix for github/codespaces#2248
Update commonEditorConfig.ts
Extensions do not update cell outputs/metadata directly.
tweak settings for macos web
reuse display output as the single output type for rendering
updating web menu behavior refs #114200
onload => addDisposableListener Ref #115325
Move configure terminal settings to registerAction2
Add terminal view item to view file
Make switch terminal action use registerAction2
Hide copy when no selection (disable would be ideal)
Select default shell
Use object-fit: contain to keep image at proper aspect ratio. Ref #115325
Split terminal in active workspace
remove install extension
Remove editor from preview on interction.
Use rmdirSync instead of rimraf
IRawOutput -> IOutputDto
Paste getAction
output always contains id
Compress images (ref #115327)
Terminal getActions: Create terminal
Scale images down under assumption they're exported at 1.5x Closes #115325.
Allow for dark/light/hc imges. Closes #115327.
Terminal getActions: Kill terminal
rename menubar visibility default to classic refs #114200
Fill in context menu more
testing: fix locale string
npm: move debug script lens into npm, clean up parsing logic
re #115717
remove unused self size monitoring.
fix #79692, re-enable test
debug: store debugUx state key to reduce flashing
build - increase timeout for integration tests to 10min
Add context menu copy back
only update terminal dropdown options if they've changed (#115720)
polish task name message in debug anyway dialog
debug: propose to debuAnyway if the problemMatcher is not defined
Update Codicons: add 'git-pull-request-create' https://github.com/microsoft/vscode-codicons/commit/686357b7174e7b3113640fea20db7efc84d8d1d4
Terminal getActions: Select all
Terminal getActions: Copy selection
fixes #114914
fs - still return child even if unknown (#115645)
more API todos, NotebookCellOutput#id
Only getPackageManager once per folder Part of #115384
Rename appDirname -> appFolder
iconExtensionPoint: improve descriptions and nls keys
remove NotebookCellOutput#metadata
:lipstick:
fixes #115677
base icon regexes on shared expressions
Use role 'none' for some parts to make screen readers less chatty
update distro
fixes #114908
update package json
fs - provide a fallback when readdir with filetypes fails (#115645)
fs - use our readdir method everywhere
enable the test
fix https://github.com/microsoft/vscode/issues/115746
test not running - enable remote check
fs - do not log an error when watching results in ENOENT
integration tests - disable minimap to reduce error output (#115747)
Rename "Existing Tunnels"
check only extension
fs - :lipstick: symbolic links handling
:up: distro
fs - fix leftover todo
Modernize pfs file system library (#115695)
use PersistKeySet
remove unused buildunit-files, fyi @dbaeumer
fs - fix tests on windows
update distro
add remote server cli test
fs - add test for symbolic link handling when link points to source
limit editor title bar actions to 7 entries, https://github.com/microsoft/vscode/issues/115198
fix build.
:lipstick:
chore: bump electron@11.2.2
fix missing total height change event.
merge stream output in rendering
Don't show a modal on 'getSession' for access requests if 'createIfNone' is false, fixes #111529
enable extension tests in web
fix build.
:lipstick:
chore: bump electron@11.2.2
add server cli test
scm: hide actions when no repos are open
enable remote smoke tests
scm: collapse all menu item
fix missing total height change event.
merge stream output in rendering
:lipstick:
scm: sort actions
scm menus: RepositoryVisibilityAction.precondition
enable remote smoke tests
Don't show a modal on 'getSession' for access requests if 'createIfNone' is false, fixes #111529
update distro
Bump Emmet to fix #115623
xterm@4.11.0-beta.2
fs - preserve symlinks properly
Remove min-height from input box message Looks like the 34 here is just an old leftover
scm menus: RepositoryVisibilityActionController
Add appDirname variable
fs - provide an option to `copy` to preserve symlinks or not
scm: more menu refactorings
fixes #115625
:lipstick:
Use relaunch function instead of reuseTerminal
scm menus: view mode toggles
Debug Console, Copy All (to clipboard) do not include source file name
Introduce setting debug.console.collapseIdenticalLines to disable collapsing identical lines in Debug Console
status bar - don't leak RPC objects from API (#115679)
fs - preserve symlinks when copying them (#114881)
fix compilation error
fixes 115685
Add open preveiw action to port notification and setting (#114572)
fs - fix compile error for now
fs - merge readdir functions into one
add appendCellOutput API proposal and implementation
fix: prevent scroll when list focused in zone-widget (#114912)
:lipstick:
fixes #100151
fs - more removal of promisify utility
add support for `application/x.notebook.error-traceback` mime type
fs - remove promise based methods from pfs and replace with fs.promises
fs - some polish around file services
debt - use a native private property in ExtHostQuickInput
fs - retry async rimraf unlink
fs - remove custom rimraf solutions
debt - don't expose MainThreadNotebookShape from NotebookEditorDecorationType
#115590 More tweaks
fs - drop our custom rimraf solution and use node.js
Azure DevOps - Add global variable for VSCODE_QUALITY (#115636)
Move action microsoft/vscode-github-triage-actions
do not register open command for generated view containers
clean up and add some doc
"Select for Compare" is available for WebView tabs (fix #113703)
Dont contract item on reload
Make sure contibuted openers are cleaned up if they are renamed for an extension that is not uninstalled
Support anyOf for rich settings editor (#115648)
Change click on selected item to deselect it.
fix #115099
Enable rich settings object editor for schemas that use anyOf (#115642)
Mark functions abstract for settings tree (#115643)
Get started color polish (#115331)
#115289 fix show explorer command
update seti & add preview page
#115289 - register view open action - use view open action id if view container open action is not registered - do not register view container open action for panels and some viewlets
improve terminal title sanitizing, fix #115291 (#115634)
support running active files with filenames containing parenthesis (#114946)
remove unknown content change in nb text model.
Ensures icons are contained
Prioritize import quickfix over spelling
yarn watchd does not detect interface change again.
smoke test
fix build in exthostnotebook
Prevent decoding URI the user is trying to open externally (#115615)
Update Codicons: add type hierarchy, table, and variable-group icons https://github.com/microsoft/vscode-codicons/commit/6e29ef1dae9c8aca8311a1ac433ee86a6ab873cf https://github.com/microsoft/vscode-codicons/commit/39a2dd5bba2725c426a9fb03d0ddfb40fe0719a2
Revert "Add a dialog box when opening unsaved files in a custom editor (#114947)" (#115627)
Add a dialog box when opening unsaved files in a custom editor (#114947)
fix tests.
fs - avoid one exists() call
fs - sort pfs and introduce SymlinkSupport namespace
debug: mark terminal as free when the associated debug session ends (#115573)
Simplify logic
Allow moving to blank lines also by model lines
browser tests - fix regression from updating playwright
validate yarn.lock changes in PRs
Convert to use PrevBlankLine / NextBlankLine in the "to" argument.
No need to create aliases
:up: deps
Upgrade Playwright to v1.8.0.  (#115241)
fs - modernize `move` and add comments
#115590 tweak wordings
remove ext.ts
Env var changes will restart terminal automatically
Minor tweaks
Minor refactorings
Revert do not show compare for markdown preivew
fs - drop pfs.mkdirp in favor of node.js
fix hygiene
ext: extract to disk
Simplify code
Also handle single modifier keybindings in `StandaloneKeybindingService`
Add tests, some renames & refactorings
more notebook API todos
fix update-grammars script
:lipstick:
improve ext ci output
update notebook milestones
fix https://github.com/microsoft/vscode/issues/115353
#115522 adopt to settled promises
ext: allow anonymous access
Custom editors: improve the generic save error notification (fix #115598)
#115289 show only default containers in view menu
editors - make sure to always remove pending confirmations even in error case
backup tracker - wire in cancellation token
backups - show cancellable progress for backup/revert too (#115028)
fix smoketest (#115586)
Include closed issues too for verification found.
transient metadata should be used to control the content change and dirty state.
we should only use comm object to communicate.
Added a new "blankLine" option for move units. This option will move the cursor to the next/previous line which consists only of whitespace, skipping over folded or otherwise hidden lines.
Add intellisense for onOpenExternalUri activation and rename event
Set permission handlers for webviews
Make sure we always apply TS auto imports, even if VS Code applies the completion before it has been resolved
Use `test` instead of `match`
Use `?.`
Inline object map type
Remove stubs file reference protocol
Uses background flag for better perf/mem usage Filters out deleted resources
adopt icon descriptions fixes from vscode-docs
Pick up latest TypeScript 4.2 nightly
Add more explicit implementations of ICustomEditorInputFactory
fix extension categories sort order
Enable 'Install Additional Product Icon Themes'
Plumb etags through rest of the webview resource pipeline (#115360)
notebooks: add generic colors for renderers (#109412)
typeahead: line wrap improvements
added unreleased fixes to endgame notebook
chore - group notebook specific api proposals together
Update grammars
test more results of create-functions
:lipstick:
ext: ci command
hide proxy from TextEditorDecorationType
more API todos for notebooks
Limit to 8ms (120fps)
Better hiding of custom hover in icon label
debt - adopt some ? operator
:lipstick: dialog main service locks
add tests for createXYZ functions and skip most of them...
simplify map creation, fyi @bpasero
add proper yarn.lock files
adopt built-in extensions
Use label as tooltip fallback properly Part of #115337
more notebook todos
Avoid the CSS general sibling combinator ~ for perf reasons
debug console menu action polish
add some notebook API todos
hide terminal proxy
don't leak proxies in editor land, also remove indentSize property which isn't API
hide tasks in TaskExecution
a bunch of failing tests
add todo
hide rpc proxies
clipboard changes
mark rpc protocol and proxies with symbols and try to find them from an API test (with success...)
debug: do not render checkmark in view menu for the debug console
for now remove isSaving() implementation from custom editors (#115526)
adopt Promises.settled
event - adopt Promises.settled in async emitter (#115522)
Promise.allSettled - use native variant if it exists
Revert "event - adopt Promises.settled in async emitter (#115522)"
event - adopt Promises.settled in async emitter (#115522)
backups - catch errors on shutdown and don't show modal dialogs in extension development (#115028)
Promise.all() does not await all promises when one throws (#115522)
history - make sure to track file renames properly (#113277)
:up: chokidar@3.5.1
debt - fix some types in bootstrap JS files
Improving performance of tree traversal getViewState function (#115387)
Unit tests cleanup (#115377)
Remove unused import
Remove hasReceivedResponseFromRemoteExtHost check
Implement Pseudoterminal.onDidChangeName
Add "overflow: hidden" style to split-view-view within integrated-terminal
bump version to 1.54.0
add repository field to extensions package.json
run prettier over extensions json files
add my paper cuts
fix https://github.com/microsoft/vscode/issues/115402
Make term config tests await config
Revert "fixes #114908"
fix mixed cells
:up: vscode-gulp-watch (fixes high CPU on Apple SI)
liberate papercut usages
Update working for default external opener
Center notebook actions (run, stop, renderer, collapse, etc.) fixes #115087
simplify negate logic in filterMarker
update version
fix #62531 support negation in text filter of Problems
Add "overflow: hidden" style to split-view-view
üï∫ One more time (refs #114219)
Add vscode-emmet-helper and restrict some labels
Add `onDidChangeMarkers` (fixes microsoft/monaco-editor#313)
Don't exclude all unless there are no includes at all
fix(workbench): add forgotten escaping in regex
Also apply #114709 to the extension editor
Skip failing test #115244
Remove console log
add other duplicate label to my endgame notebook
fix #115293, #113933
Update color name for 'notebook.inactiveFocusCellBorder' (refs #114219)
Use unix style paths in includes always
Update color token name 'notebook.inactiveFocusedCellBorder' => 'notebook.inactiveFocus'
fix #115290
fixes #114914
fic unnecessary import
update distro
update milestone
fix https://github.com/microsoft/vscode/issues/115207
comment out arm snaps
fixes #115219
add Julia grammar
fixes #114908
#115294 also handle medium exe tip
remote cli: show host label
more polish
make sure to cancel continuation of `_handleEditorChanged`, related to https://github.com/microsoft/vscode/issues/115219, fyi @joaomoreno
Do not use the global `monaco` inside the editor
fix https://github.com/microsoft/vscode/issues/115301
have a separate setting code cells in breadcrumbs, hide code cells in outline by default
Squashed commit of the following:
fixes #114804
:lipstick: clean nuget.config file
node-debug@1.44.16
use final DAP spec 1.44
polish
fix #115050 flickering tabs when wrapped (#115273)
fixes #113703
web - fix compile
change remote cli to manage only remtoe
web api - expose env as API from facade (#115295)
always on trusted-types for yarn web, fyi @bpasero
Revert "fix #113933."
d'oh, forgot to adjust anyScore to new data format of FuzzyScore, fixes https://github.com/microsoft/vscode/issues/115250
Not requiring NPM for typings (fixes #115228)
fix typo: ResourcEditorInput ‚Üí ResourceEditorInput (#115208)
fix: disable rosetta option for universal build (#115280)
fix #115107.
feat: add identifier for universal app in issue reporter and about dialog (#115277)
fix #113933.
re #115012.
Update codespace-related getting started images & wording
Implement onDidChangeTerminalName #114898
feature insights for notebook.
fixes #115267
update distro
Remove unused variable
Add 'notebook.inactiveFocusedCellBorder' color token
Add missing class to fix view items For microsoft/vssaas-planning#2286
fix #115169.
Give a higher priority to language configuration set via API call (#114684)
fix #114225.
Save only open editors toggle state
path => fsPath again
fixes #112347
fixes #115121
path => fsPath
Test fix for #114795
fixes #115073
fixes #114869
fix https://github.com/microsoft/vscode/issues/115201
Forward arguments when click is invoked via `makeContextAwareClickHandler` (fixes #115026)
Remote smoketest timeout (fixes #115159)
Expose a `TestCodeEditor` that could be used by the workbench tests
cap notebook outline elements at 64 characters, fixes https://github.com/microsoft/vscode/issues/115199
use marked lexer to find headings, render MD as plain text before, fixes https://github.com/microsoft/vscode/issues/115205, fixes https://github.com/microsoft/vscode/issues/115206, fixes https://github.com/microsoft/vscode/issues/115118
Revert "diffReview: use insertAdajentText instead of insertAdjacentHTML"
bugfix - fix macos not working because scan code was removed - add isModifierKey() logic to scanCode.ts, consistent with windows keyCodes.ts
minor commit - fix comment inconsistency - rename function camelCase
diffReview: use insertAdajentText instead of insertAdjacentHTML
fixes #114990
fixes #114914
tabs - let the overflow gradient not draw over borders (#115129)
chore: remove universal build from its separate stage (#115203)
PR template - remove pull requests link full stop (#115090)
fix https://github.com/microsoft/vscode/issues/115124
fix git askpass
cleanup #113562
log source
fix comments
pfs - workaround broken reparse points on windows (fix #115113)
fix PR Layers check
Fallback to default opener when selected
comments
Log exceptions and continue in calls to ExternalOpener.canOpen
New method to avoid regression, found via unit test, related to modifier keys being ignored in getDisptachParts()
working on fixing unit test regressions
Error if registering an unsupported scheme for external opener
Improve documentation for ExternalUriOpenerPriority
fix #115150.
re #115018.
Don't write preferredLocation into workspace settings for find file references
Reword multiple external opener error
remove attempt at fixing shift+[shiftleft] binding - better solution to be commited later
macos implemented double shift keybind windows initial implementation
Revert "hack to make double shift possible in widget"
Add new icon for open editors view
throw an error with a clear message when a notebook document is missing, https://github.com/microsoft/vscode/issues/115018
tree: do not break fully when you can not collapse an unexisting node
callStack view: set callStackItemType context properly
:lipstick:
Log individual events because `extensionIds` gets clamped sometimes
fix #115011.
minimal changes
update notebook
Add `_debugComposition` flag
related to #115037
fixes #115037
Use ;; instead of ; for line comments (#115036)
add unit test for #114971
#114031 fix user data sync tests
fix enablement handler
Reduce getting started for codespaces
Don't error out on unknown provider.
debug: update js-debug
Revert test changes
Refactor searching in open editors logic
fix build
Cut keyboard shortcut support mutli selection
multi selection in notebook
fix #108950.
fix: update `isUri()` to compare `fsPath` as `string`
run oss too 1.53, update distro
testing: accessibility round 2
Add fall back to default option for when external uri opener fails
Documentation clean up for ExternalUriOpener
Use object instead of array for `workbench.externalUriOpeners`
:guard: tests for selecting kernel.
Remove `#` from typescript deprecation warnings (#114787)
fix #114959.
fix #114048. do not update active kernel if kernel is executed.
fix #106362. Keep runstate when undo/redo cell.
fix #114171
chore: bump electron@11.2.1
Reduce arbitrary event limiter from 16ms down to 4.16666 (support for monitors up-to 240hz) #107016
update distro
update distro
testing: accessibility in explorer round 1
fix test-product icon
Limit spin to sync and loading (for #112298)
testing: add test result to proposed api, ids for correlation
testing: fix not subscribing to first open workspace document
testing: add line background decorations
[microsoft-authentication] Extend authentication session to return id tokens (#114675)
fix #110936
[html/json/css] update services & dependencies
Update Codicons version
reset template display when switching models.
fix #111587 Apply enablement to command links in welcome views (#113841)
Improve glob module to support OS separator agnostic matching (#114810)
Revert "fix #114171."
Move `workbench.startupEditor` to RESOURCE settings to allow setting to gettingStarted on a per repo basis Make sure to disallow setting to readme via workspace settings to prevent tracking attempts.
Do not reveal `FindOptionsWidget` all the time (fixes #114630)
feat: add macos universal build ci config (#114446)
fix #107239, set terminal dimensions
files - document file modes we use
Add telemetry in the area of reconnection
Restore extensions in core (#114921)
update distro
update jsdoc for #114908
tests - only use 'junction' for folders
fix strictEqual problem
some more strict asserting tests
fix build
rename notebook outline settings to `notebook.outline.showCodeCells`
fix `breadcrumbs.symbolPath` setting
tests - enable symlink tests for windows again via 'junction' that do not require admin privilges
Cleanup some file related unit tests (#114895)
fix mock, fixes tests
rsource -> resource (#114837)
perf - suggest status shouldn't listen when hidden
fix https://github.com/microsoft/vscode/issues/114798
make SubmenuEntryActionViewItem not eagerly fetch/create the actual actions
Update endgame notebooks
Copy function fails over dangling symbolic links (fix #111621)
Do not attempt to open a workspace/folder that no longer exists when reloading window (fix #110982)
windows attempt at "shift shift" - still bugged
Add empty problem matchers to build tasks so they don't ask me questions
chore: custom protocols will also be intercepted by webRequest
chore: cleanup webrequest filter for svg files
hack to make double shift possible in widget
Updated Getting Started images with transparency instead of blur
only create processEnvironment once, now tests pass Co-authored by: Daniel Imms <daimms@microsoft.com>
Make sure altClickMovesCursor gets refreshed
Open Language Mode picker for new file (fixes #110330)
Open Language Mode picker for new file (fixes #110330)
fix #114233.
testing: initial implementation of test decorations
testing: move test filter to action bar
fix integration tests.
fix #114782
Remove unused constant
Rename `isEdge` to `isEdgeLegacy` (see https://support.microsoft.com/en-us/help/4533505/what-is-microsoft-edge-legacy)
Remove IME special cases for Edge Legacy
ok I'm out
extract menu entry view item creation logic, fyi @joaomoreno prep for https://github.com/microsoft/vscode/issues/114123
logging - put storage tracing behind a flag to reduce spam
add some docs for workaround for #114227
better default for PeekViewWidget#_getActionBarOptions
maybe this is it
test all extensions if system/builtin
debt - use css variables instead of dynamically injected style sheets
:lipstick:
web - editor context menu sometimes wrong (#109166)
upgrade gulp-atom-electron
debt - adopt some strictEqual in tests
remote cli: do not sync installed extensions
testresolver: support server extensions
workspaces - shuffle some code around
workspaces code cleanup
repl: on debugConsole.wordWrap change recreate the tree, do not require a restart
:lipstick:
Ports attributes open -> openBrowser
add setting `outline.showNotebookCodeCells` to control if code cells should show or not
revert
simplify FuzzyScore structure, fix high, low match
debt - use main in main side services consistently (workspaces)
debt - cleanup WebFileSystemAccess#supported
Open Language Mode picker for new file (fixes #110330)
fix workspace tests on windows
Add workaround for #114227
Link names
:lipstick:
web - remove old API interfaces
Add mock support for public ports to test resolver
workspace - more tests for identifiers
bulkEditService: dispose of listener in finally
When a tree resource has a tooltip it takes precedent
explorer: when new file system provider registered set whole explorer input
parseUri/Path => resolveUri/Path
fix tests
workspaces - some final :lipstick:
drop gulp-cssnano, use gulp-postcss
distro
Retry downloading playwright when hitting ECONNRESET
upgrade dev dependencies
bulkEditService: veto shutdown if bulkEdit is in progress
upgrade build azure-storage
Allow svg files to load from Schemas.vscodeRemoteResource
fix nls problem, fyi @JacksonKearl
remove unwanted #region comment from vscode.d.ts
workspaces - reduce stat calls
mark secretState field as private
fix #114727. load preloads when switching kernels.
Enable searchInOpenEditors by default when not in stable
Search In Open Editors (#107756)
support kernel id and extension
testing: polyfill test heirarchies (#114601)
Make sure we dispose of the open with picker after an item is selected
Move schemes to opener metadata
Remove test math formula from readme
fix #111889.
Update elliptic and nwmatcher (#114670)
Improve doc wording
improve setting description and make setting true by default and add ===
fix #111885. avoid duplicated execution placeholder status bar item on split editors
revert "Open" to "Focus Terminal"
add api lint rule for region comments
:lipstick:
@ for CI failures
update distro
Simplify local port logic in test resolver + OS check
(for now) have tab decoration off by default, https://github.com/microsoft/vscode/issues/49382
chore - a few more strict assertions in tests
Use random port if privileged in test resolver
Add more to test resolver tunnel factory and fix port filtering
:lipstick:
:lipstick:
cleanup types
Update showCandidatePort for test resolver
:lipstick: getFolderId
workspaces - actually use workspace
Don't await remote env before setting up process manager
Hook up alt buffer active ctx key
testresolver: start a test server
:lipstick: isCurrentWorkspace
Create terminalAltBufferActive ctx key
electron - need to check if window is destroyed before accessing webcontents
polish
testResolve: more tunnelservice fixes
testResolver: fix for tunnel server
CI notifications
test resolver: add tunnel server
workspaces - compute workspace ID and check for existance in window service
chore - strict asserting in snippet tests
decrease repl refresh timeout
Even more tunnel provider logging
Trigger CI
workspaces - move id computation to main
Create .build directory
distro
no double reveal of notebook symbols
Create our own node modules archive (#114516)
workspaces - drop duplicated payload interfaces
window - merge workspace and folderUri into one
bust node module caches
add notebook for notebook paper cuts
get marketplace extensions in `yarn web`
formatting
window - reduce to one property for opened workspace
move build/dependencies.js to typescript
workspaces - add identifier to single folder identifier
further remove single workspace identifier traces
workspaces - remove ISingleFolderWorkspaceIdentifier requirement from workspace service
fix: allow svg from devtools scheme
workspaces - remove ISingleFolderWorkspaceIdentifier requirement from history
:lipstick: regions
:lipstick: workspace payload
Closes #111210 - adds openRepository api
:guard:
re #114583.
pin notebook editor when execution triggered.
only handle override when id is provided.
execute notebook with args
fix #114674.
testing: make filtering work correctly
testing: add hover titles for items
testing: show stats about the last test run
testing: show badge for running/failed tests
testing: show test progress, implement result service
testing: fix swapped run and debug actions
set false by default and consider multiCursor
fix #114583.
allow reopen notebook with another view type if not dirty.
fix active notebook editor in repen with quick pick
Update gettingStartedContent.ts
update distro
polish
repl and explorer adopt diffIdentityProvider
async tree pass on diffIdentityProvider to regular tree
Bump concat-with-sourcemaps from 1.0.4 to 1.1.0 (#114648)
Bump fstream from 1.0.11 to 1.0.12 (#114649)
Bump macaddress from 0.2.8 to 0.2.9 (#114647)
Bump sshpk from 1.13.1 to 1.16.1 (#114645)
Finalize secrets API, closes #112249
Bump hoek from 4.2.0 to 4.2.1 (#114643)
Feedback on secrets API #112249
Bump stringstream from 0.0.5 to 0.0.6 (#114618)
Support git-cmd.exe as a git bash shell
Correctly resolve mapped drive on Windows
Bump mixin-deep from 1.3.1 to 1.3.2 (#114619)
Rename `OnEnterRule.oneLineAboveText` to `previousLineText` after API call feedback (#58440)
Catch errors in tunnel providers and log
fixes #114616
shared process - check for destroyed webcontents before calling postMessage
Properly call dispose in tunnel factory We really need a lint rule or something for awaiting/not calling functions
More tunnel logging
some initial :lipstick:
:up: distro
Modernize CLI main (#114623)
#114627 complete fix
:lipstick: strict assertions in extHost, mainThread tests
don't expand outline tree when just updating, fixes https://github.com/microsoft/vscode/issues/114386
add new rule to enforce Thenable over Promise, adopt in vscode.d.ts and vscode.proposed.d.ts
comment-out console.log fyi @connor4312
some API proposal for open editors
fixes #114607
Move `onEnterRules` to `language-configuration.json`
debug dynamic configs: Use the type of the provider, not of the config since config sometimes have subtypes
Add logging for tunnel creation
fix https://github.com/microsoft/vscode/issues/114621
'Resolving your shell environement is taking very long' shown in every window (fix #114622)
state service - actually implement interface
code catchup
update distro
update distro
use real tsec instead of vscode-tsec fork
more clarifying comments for shell env resolve
better fix #114564
testing: fix run all tests command
Close #114342
Refresh Images In Markdown Preview On Change (#114083)
testing: clean up actions, add run/debug all, rm duplication
testing: unify testing view
Revert "window - do not send IPC messages to destroyed windows (fix #114563)"
Update Codicons: Add 'combine' icon
fixes #114199
Disable contributed openers by default in calls to openExternal
Add link opening getting started task action. Closes #114582
Remove unneeded mapping from cintainers to disposableStore
Allow splitting gettingStarted editors fixes #114321
spacing
:evergreen_tree:
push it real good
update distro
open in new tab
ci: disable exploration sync on PRs
remove "so far" from Problems message (which assumes you'll have problems later)
trees: rename option to diffDepth
add clearUnacknowledgedChars flow control
navigationActions: remove dependency to notebooks
trees: don't use diff identity provider for resort
fix https://github.com/microsoft/vscode/issues/114576
make trusted types policy strict
update mkdirp
Use correct value to enable port finding
Use port auto forwarding setting to disable port finding (#114574)
add grammars scripts
Change "Requires Sudo" to "May Require Sudo"
ext (un)link
promise :lipstick:
show a modal dialog when no default formatter is configured, https://github.com/microsoft/vscode/issues/113903
Change aria label when attaching
oops do not have .only
window - do not send IPC messages to destroyed windows (fix #114564)
update ext types
update tests
wip
exception widget: allow to tab over each link, enter to navigate to link
fix hygiene
ext each: allowUnknownOption
add open tunnels to test resolver
bring back vscode-colorize-tests
Revert "remove colorize-tests extension usage"
fix region comment
cleanup native modules test
fix https://github.com/microsoft/vscode/issues/114537
stream - some cleanup of observer
Bump sshpk from 1.13.1 to 1.16.1 in /build (#114534)
Bump stringstream from 0.0.5 to 0.0.6 in /build (#114533)
InlineHint#hoverMessage becomes description (maybe better tooltip?) and support string OR markdown strings
FileService improvements (#114428)
inline hints: tweak colors, react to theme change, add rounded corners to hints
editor status :lipstick:
And again bump distro
Bump distro again.
Bump distro
remote install-extension with VSIX
Avoid `ERR_STREAM_WRITE_AFTER_END`
support vsix for install-extension
yarn ext
dev: ls
create extension workspaces
uninstall-extension should remove both local and remote extension
add API command `vscode.executeInlineHintProvider` and some end-to-end tests
fixes #112045
clamp font size at editor font size, don't go bigger
use all of context decoration as decoration type key
explorer: download report progress in the explorer due to rich download progress to not get double notifications
padding should depend on font size too
simpler decoration type management (rely on internal ref counting)
extManCliService: Sort listExtensions, fix output
:lipstick:
less state inside InlineHintsController-type, only have one type of decorations, and much :lipstick:
explorer: adopt confirmBeforeUndo
update distro
remove hover (should come via decoration) and action/menu (should be self contained if at all)
rename remote commands to _remoteCLI
don't propose new API on ThemableDecorationAttachmentRenderOptions
dev script
Add `confirmBeforeUndo` option on the undo redo element
Save file dialog: sort file types alphabetically (#114487)
cliProgressMain: add LocalizationsService to ServiceCollection
missing build output
Migrate to new deb repo (#114527)
fix web extensions
Remove plug icon from ports view Part of https://github.com/microsoft/vscode-internalbacklog/issues/1689
explorer: if you can not undo, pass undo to editor
update distro
fix toString
:lipstick:
:lipstick: move all scoring logic into _doScore
Add support for npm scripts with a space (#113840)
update distro
use URI for VSIX paths
Avoid extra fields
Avoid conflict error
Avoid ts changes (#2)
fix https://github.com/microsoft/vscode/issues/114518
Bust node module cache
inline collapse all actions
Trigger GH CI
:up: distro
telemetry - lift some helpers to electron-sandbox
sandbox - lift remote agent service to electron-sandbox
notifications :lipstick:
editor title - no need to update menu onDidRegisterExtensions
debt - push more window related things to window helper class
fix #114273
shared process - consolidate services
shared process - drop management service
:lipstick: path labels
Remove instantiation service accessor
Add 'key' to onDidChange of secrets API, #112249
Create issue directly if signed in, fixes #95165
Disable on enter test
Move jsdoc completion tests to smoke tests
Split ts into unit and smoke tests
Leave the local extension host running when connection is lost to the remote extension host
Adopt new vscode-userdata path format
fix: remove unnessary asar files from mac arm64
expose altClickMovesCursor as setting (#114429)
Emmet wrap update, fixes #113930
fix #114416 LabelService.getUriLabel bad relative path if in root workspace (#114419)
workbench.action.debug.start => workbench.action.debug.selectandstart
Potential new formatter for userdata in serverless. (#114296)
Skipping unreliable test
Update built markdown preview code
Make sure ts extension has loaded before running on-enter tests
Downgrade simple browser to prompt instead of being the default on web
sort notebook content providers in the list.
testing: polish and unit tests for the test tree
turn on flow control by default
adopt useCustom for permanent connection failure
implement useCustom in dialogService
Move sync-enabled trigger to gettingStartedService
Do not wait for the first reconnection attempt in the reconnection loop
Scaffold `MessageOptions.useCustom`
add editor command, fyi @dbaeumer
fixes #114203
Also run the output based auto port forwarding (#114424)
wip: sync-extensions dev script
extensionsManagement for remote CLI
smoke tests are tests too
fixes #114420
shared process - adopt toggle method from management service
remove devops ci badge
remove devops continuous build
get grammar extensions from marketplace
breakpoint polish condition context keys
shared process - basic message port tests
Azure DevOps pipeline artifacts (#114405)
remove colorize-tests extension usage
remove grammar extensions
Include tunnel service canElevate check
Notification for elevating when using privileged port from openTunnel
shared process - fix --status invocation
:lipstick:
shared process - introduce a separate service for management
update distro again
update distro
Update Linux publish script
Update distro commit
shared process - introduce platform/sharedProcess
shared process - rely on "close" event for disconnects
shared process - :lipstick:
Revert "Publish scripts update (#114375)"
Publish scripts update (#114375)
shared process - move the shared process back to IPC folder
Expanding Getting Started text based on first round of feedback.
Update image ref
Clean up settings sync entry
Move defaultExternalUriOpenerId into configuration to avoid cycle
Allow using 'default' to force fall back to VS Code's default opener
Remove enabled setting and try to open simple browser to side of current editor
Continue work on url opener api
Only show "Open in VSCode..." when isWeb.
Don't use getActions in search view #92038
Github Login => Setting Sync
:lipstick:
fix #114171.
Remove emptyWorkspaceSupport when conditions
`remoteName == codespaces` for codespaces section
Bust the node module cache
update distro
Getting started content (#114305)
Add performance marks to `IRemoteAgentEnvironmentDTO`
Revert "fixes #114203"
Small tweaks
fix #114215
Enable forceConsistentCasingInFileNames flag (#114334)
remove unused file
#114144 fix remote explorer icon flickering
fixes #114203
update distro
add flowControl to terminalConfig
breakpoint widget: use same mode for coloring as the underlying editor
allow execution against a hidden notebook editor.
Reworking external opener implementation to allow configured openers to be called directly without a canOpen check
explorer: hide open editors for new users
update distro
part of #114214 serverSpawn=true
Saving an untitled file closes it (fix #114272)
update distro
fix #114192
Refactor code to use `await`
shared process - implement message port connections and wire in
Polishing/fixing/addressing feedback for portsAttributes Includes: - fix in json schema - use object instead of array - change label of already forwarded ports when setting changed - fix for merging ranges
No need to store scores
Move to log service
Add flow control setting, remove fake latency
Auto forwarding fix
wip: adopt menu actions in scm
breakpoints: inline action to edit condition. Render conditions for function breakpoints. Allow to edit conditions for function breakpoints
Extract `TestTextResourcePropertiesService` to its own file
format
fix list drag affordance
Add test for case to assert that fetch should be scheduled again when a text buffer change occurs while the provider runs and the provider returns null
fix peek view alignment
shared process - document electron IPC
shared process - add error handler and graceful-fs
shared process - extract more cleanup helpers to contrib
chore: bump electron@11.2.0
update collapsible when children change
Activate extension on simpleBrowser.api.open
Allow passing viewColumn to simpleBrowser.api.open
smarter depth selection
Polish, also fix #113930
testing: add full json reporter to show more complete output
update distro
Wait for outstanding zlib flushes when draining a WebSocketNodeSocket (#114314)
Enable image preview for avif images
fixup! make it work for compressed trees, recurse
Make default text editor replace existing editors for resource (#112848)
Add a 30min cap to CI jobs
Remove enabledHosts setting
Continue work on opener service
Add mechanism for snippets to overwrite Auto-closing pairs in some cases (#114235)
:lipstick:
fix #114289. notebook.selectKernel takes kernel id.
check and ignore not found error
Add command to kill server and trigger handled error
Allow theming getting started page progress bars closes #114303
Do not show "Cannot reconnect. Please reload the window" if the cause is a handled RemoteAuthorityResolverError
move to browser namespace
Update Codicons: increase gap around plus icon (fixes #114016)
fix https://github.com/microsoft/vscode/issues/114220
Azure DevOps - publish Windows artifacts (#114285)
breakpoints view: render edit action inline for exception breakpoints
MenuItemAction: make sure to respec item.icon
shared process - some :lipstick:
remove undefined from outline data source
allow to clear input of data trees, fyi @joaomoreno
shared process - more cleanup
Add icon for public vs private ports
Improve `fuzzyScore`
Have single outline config and let outline creator know for what they create outlines
mock a label service to avoid breaking layers in tests
Allow tunnel providers to support making a tunnel public
fix https://github.com/microsoft/vscode/issues/114266
:lipstick: some region-comment polish
debug console: fix error in console, do not bind to same htmlelement a scoped context key service
shared process - introduce platform/sharedprocess
fix https://github.com/microsoft/vscode/issues/109658
refresh the remote indicator when actions change
shared process - avoid payload IPC roundtrip and enable console based logger
update distro
callStack: do not use getActions()
finalize CancellationError API, fixes https://github.com/microsoft/vscode/issues/93686
fixes #114137
shared process - more cleanup
adhere to DAP spec; fixes #114229
fix --builtin
Use menu
shared process - more cleanup
use in-mem fsp
shared process - more renames
shared process - clean up some types and imports
shared process - expose methods for message channel API
use in-mem fsp
include error into startup error dialog (#112846)
List still dirty files when backup fails (#114064)
skip failing test on win32 (#114248)
Update wrapper class name for paramter hints
Adds ability to pass remote/refspec to pushTo cmds
Adds force push mode to push api
Removes repo hint from args
Insert new code cell should always use available languages.
:lipstick:
languages in notebook document metadata.
trees: add diffIdentityProvider for efficient setChildren updates
Remove unused import
Rework opener api proposal
fall back to homepath if home unset. closes #112775
Update PHP grammar, fix #113185
fix #114233.
testing: peek diff test outputs
setImmediate => setTimeout
Add new external uri opener service
Batch ack events coming from client
Only resume if it's paused
Delay animating until content is prepared to prevent weird flying elements.
pull themes from the marketplace
Rename ackId to charCount
Remove ackId from data events going to client
Use char count instead of ack ids
Start of low-high watermark flow control
#113757 show panel move and hide actions only for panel views
#113757 show panel move and hide actions on view context menu
#113757 allign reset location action
add tests for RELATIVE_FILEPATH snippet variable
Basic flow control for ext host processes
don't auto insert semicolons
fix tests
Adds onDidPublish to Git api
Closes #110881 - adds possibly rebased warning
#113757 show sidebar actions only on sidebar views
Property preview text wraps lines in debug console
remove some tests
Azure DevOps - Move release into a separate stage (#114205)
revert wsl and distro
textFileService make getEncodedReadable public
Support to define additional attributes for ports Part of microsoft/vscode-remote-release#4046
throw nice error (and prevent stackoverflow) when instantiating services recrusively
Do not instantiate hover widgets in the `onModelDecorationsChanged` event
fix #37570 add RELATIVE_FILEPATH snippet variable
filter perf marks that don't start with 'code/'
debt - remove duplicate drive letter implementations
Revert "use PerformanceObserver in node's perf-util"
use PerformanceObserver in node's perf-util
remove test dependency on theme extensions
debt - use provider extUri in file service
:lipstick:
reuse stats collector for EchoRunner, fix missing titlePath-property, fixes https://github.com/microsoft/vscode/issues/114190
activity bar - use IAction in more places
activity bar - show a "Hide" entry for accounts and home indicator (fix #113757)
activity bar - consistently show right click menu everywhere (#113757)
fix #114028
activity bar - remove "Hide" from left click menus (#113757)
activity bar - update order of entries to reflect visual order (#113757)
Activate onStartupFinished (#110031)
activity bar - change visibility of entries to checkboxes (#113757)
:up: distro
testing: fix error when test view is hidden after showing
testing: start of diff peek view
resolve kernel providers and kernels.
Make PowerShell 7 default if available and show in choose shell menu (#112768)
do not use file scheme
use in-mem fsp - remote folder config tests
use in-mem fsp - multi root workspace config tests
fix tests - do not use file scheme
use in-mem fsp - workspace folder config tests
Update Codicons: Update '+' modifier location (fixes #114016)
use in-mem fsp - workspace init tests
use in-mem fsp - workspace editing tests
use in-mem fsp - workspace tests
testing: add filter box
Adopt strict assertions
debug: use mnemonicTitle and avoid dupliacte registration
use in-mem fsp - workspace folder tests
Set override to false when reopening editors after dragging them to a different editor group. This fixes #109000. (#114093)
activate search result extension onLanguage:search-result #110031
minor polish
bulkFileEdits: use textFileService only for creating empty files
Move id, label, and options to authentication provider registration
use in-mem fsp in tests
Add boundary for right arrow typeahead and fix bug with resetting Terminal (#113863)
Adopt proposed `CancellationError` (#93686)
File name in editor tab reverts casing on save (fix #114096)
More UX feedback
Render remote name when reconnecting
Prefix all `performance.mark` calls with `code/`
:lipstick: unit tests
Allow logging FS access with stacks
tests - improve ext path tests
tests - extpath tasks are flaky
Can't open, rename or delete files that contains ":" on linux (fix microsoft/vscode-remote-release#4227)
#114144 revert showing cached theme icons
#114144 - Do not cache only uri icon
Tests must be compiled even when `yarn` is executed
cache icon paths in web
Make lint happy
:lipstick:
make SubmenuAction strict: don't allow changing its properties, make it not disposable
- Make cached configurations not disposables - use workspace configuration disposables
:lipstick:
`yarn` is already installed (fixes #114140)
tests - more use of getRandomTestPath
Expose actions to duplicate editor groups (fix #114132)
webpack config typing fix
update tsec tool
Update src/vs/workbench/services/configuration/browser/configuration.ts
Dispose all Disposables from tests (fixes #114125)
Add a way to troubleshoot fs calls
Change reason for moveWordCommand to CursorChangeReason.Explicit
Add a mechanism to track disposables from unit tests
editors - cache previously used layout and return it
Dispose `PieceTreeTextBuffer` instances
Improve usage of Disposable
editors - copied group is missing to register editor listeners
fix #113620
tabs - improve logic of previously used dimensions and relayout
Revert "Enable webview tests (#114059)"
State of tabs is not fully updated when toggling workbench.editor.wrapTabs (fix #113808)
tests - selectively enable some previously skipped tests
Enable webview tests (#114059)
Retry idb tests. Ref #114025.
testing: improve projection logic, add state grouping
Add search.mode option to control default search experience (#114015)
Remove webviewHasOwnEditFunctions context
Add context for when the webview  supports find
Removed unused param
mnemonicTitle in native menubarControl
make menubarControl prefer mnemonicTitle, make MenuItemAction only implement IAction
options for getActions() are optional
fixes #114028
Removes trim & fixes regex
tests - use explicit skip over handling within test
more :lipstick:
:lipstick:
#115025 hash the uri and create css rule
Lift some tests to browser (#114041)
FS improvements for unit tests (#114026)
do not use mnemonicTitle for all action titles, #102361
typos
refs #102361 mnemonic as command model property
bulk file edits: make sure to use textFileService when creating files
Always elevate (if needed) for openTunnel API
suggest - add min height when persisting widget height
Add new terminal link text for tunnels (#114033)
Log when lsof fails and return initial
list widget should not remove rows from DOM when reusing
Improve `canTunnel` Part of microsoft/vscode-internalbacklog#1709
don't theme icon for MD elements
rename tsc config file for better intellisense
add tsec config and exemption file (defunct?)
:lipstick:
gracefull fallback for TrustedFunction
use TrustedFunction workaround when loading extension sources inside web worker
Add `canTunnel` to tunnel service Part of microsoft/vscode-internalbacklog#1709
remove duplicate step
#113757 show sidebar actions also on view title context menu
Clarify OpenDialogOptions note (#113831) (#113998)
tests (unit, electron) - set forbidOnly when running on build machine
Revert "refs: mnemonic as command model property #102361"
skip failing test (#113882)
Remove unused var
Make the external opener a two phase process
Change Emmet to onStartupFinished #110031
Show a disconnection dialog only after 40-50 seconds
Render "Reconnecting..." in status bar and use "Disconnected" only for permanent disconnection
refs: mnemonic as command model property #102361
testing: auto reveal selected tests
Allow registering additional external uri openers
Remove button background in simple browser
Make sure we also log event when creating a iframe based webview
Disable dynamic cwd resolution on Big Sur
Improvements to batched testing. Ref #113911, #109271
Support to start multiple debug sessions from a single launch config
reduce number of entires in test batch. ref #113911
Avoid hostname resolution in lsof
change default zenMode.restore to true
enable trusted types by keep a yelling default policy for a day to two, https://github.com/microsoft/vscode/issues/103699
#113975 use insance to remove svgs tags
fixes #113921
Do not compile `/test/` and `/build/` scripts during postinstall, the scripts get compiled explicitly during CI
update references viewlet
`monaco-compile-check` is covered by the GitHub CI
Add elevation message to ports UI (#113990)
remove unused eslint mocha
bust the node modules cache
fix #113781
tabs - polish how to detect that scrollbar needs update
Revert "better fix for https://github.com/microsoft/vscode/issues/113852"
update loader, event better fix for https://github.com/microsoft/vscode/issues/113852
make default policy strict, https://github.com/microsoft/vscode/issues/113975
refince CSP for trusted types but don't yet enable it, https://github.com/microsoft/vscode/issues/103699
use default tt policy to workaround electron webview innerHTML-usage, https://github.com/microsoft/vscode/issues/113975
Wrapping tabs: editor toolbar bleeds into tab when space is limited (fix #113926)
Tunnels from a tunnel factory can have async dispose
fix condition
add (disabled but almost ready) CSP for trusted types, https://github.com/microsoft/vscode/issues/103699
trusted types - loader should use trusted script url when using script tags, https://github.com/microsoft/vscode/issues/103699
fix path in tsec-compile-check
fix yaml
rename
only run terrapin on cache miss
parameters
add parameter display names
remove no-exclusive-tests
Sandbox: adopt forcefullyCrashRenderer when reloading unhealthy renderer (fix #112485)
window - focus() window that opens from protocolHandler
Revert "add arch to cached data path, https://github.com/microsoft/vscode/issues/113852"
better fix for https://github.com/microsoft/vscode/issues/113852
update distro
parallelize eslint and hygiene in product-compile
re-enable test for https://github.com/microsoft/vscode/issues/111867
isolate eslint from hygiene
fix typo
update test cases
support more unicode chars in isSeparatorAtPos
revert back using switch for isSeparatorAtPos, add several cases
testing: fix unit tests
testing: fix unit tests
testing: code lens and diagnostic information for tests
Adds userAgent to clone, pull, fetch - #111909 Changes to use env
Use cast instead of generic
better hygiene task definition
Added show options to simple browser open command
Adding settings to control which schemes simple browser is enabled for
Add more explicit type for TS 4.2
single compile job
improve hygiene glob patterns
:lipstick:
equal => strictEqual
make sure to not fire any events for empty opertaions array
minor polish
Skip batching test due to failing on build machines. Ref #113911.
fix: The git commit message field is cropped with negative zoom (#112316)
Update distro
xterm@4.10.0-beta.39
rename random_uuid to just uuid
remove console.error on commands for noisy tests
also filter before debouncing when menus change
:lipstick:
:perf: first filter and only then debounce event handling
use Date.now() in stop watch
:lipstick:
Set remote.restoreForwardedPorts default to true
workginCopyFileService: only one event for multiple operations
:lipstick:
fixes #113815
Azure Pipeline - Adopt pipeline parameters in favour of pipeline variables (#113902)
Revert "publish linux builds"
[html] update auto-rename-tag to linkedEditing migration
Use `nodeSocketFactory` for tunnels for now (#113914)
Adds support for gulpfiles using ESM. (#113505)
sandbox - allow to enable vscode-file protocol via argv or environment (#98682)
fix incomplete stub, fixes tests
Revisit how activity bar items and status bar items can be hidden by the user (fix #113757)
publish linux builds
adopt creation of N resources at once, https://github.com/microsoft/vscode/issues/111867
apply file edits in bulks of equal edits, https://github.com/microsoft/vscode/issues/111867
align source-map dependencies
remove deprecated settings sync settings
:up: playwright
remove unnecessary line
update esbuild
Revert "build on mac11.1: upgrade version of playwright to 1.7.1 (#113906)"
build on mac11.1: upgrade version of playwright to 1.7.1 (#113906)
Update problemMatcher.ts (#113834)
themes: add ThemeSettingTarget
workingCopyFileService: create and createFolder support multiple resources
:lipstick:
change create, delete, copy, and rename operations so that they can handle multiple files at once, https://github.com/microsoft/vscode/issues/111867
use vscode-tsec instead of tsec
yarn.lock leftover
chore: bump chokidar@3.5.0 (#113886)
add arch to cached data path, https://github.com/microsoft/vscode/issues/113852
Remove obsolete chrome debugger recommendation
empty
Show hover for comments, fixes #108396
Upgrade to latest Emmet (#113848)
fix typeahead regex for move (#113850)
testing: update old import
extension webpack: do not copy .ts files as resources
Add some recovery from a missing compositionend event (#112621)
testing: fix loading indicators, add progress during initial test discovery
testing: migrate from actions to menu contributions
Copy of translated errors for js/ts web build
Reenable test, fix #113768
Revert "extension webpack: do not copy .ts files as resources"
Sequencer.queue: support failing tasks (for #113661)
:lipstick:
don't leak emitters of context key services
add support for event profiling
Scope gitignore out* pattern microsoft/vscode#113823
file name incrementing for files without extensions
Secrets API feedback
add lint rule for missing cancellation token in resolve and provide methods, fyi @alexr00 please remove surpression comment
fixes #111413
IndexedDbFSP Perf/Correctness Improvements & Tests (#109271)
fix https://github.com/microsoft/vscode/issues/113829
api comments, fyi @RMacfarlane
Open Editor Sorting: fix issue when untitled editor changes name and list does not resort
fix #113404
extension webpack: do not copy .ts files as resources
new html settings not it in the settings UI
Relax worker.onerror after a successful worker start
test: add tests for #113403
no vscode-imports
fix minification target
:lipstick: remove appendChildren infavor of append, fyi @bpasero
add a RANDOM_UUID snippet variable
fix https://github.com/microsoft/vscode/issues/113819
Revert "revert pool"
fix compile and hygiene cache miss
:lipstick:
debug: remove enableBreakpointsFor since php-debug now moved to new api
fixes #113242
debug toolbar docked actions only appear in debug viewlet
fix hygiene as well
libs
pkg-config
revert pool
build-essential
use esbuild for minification
Make cancellation token in resolveTreeItem required Part of #111614
distro
skip flaky test (#113620)
debt - introduce and adopt flakySuite
simplify gitignore
missing compilation
css - less generic rules to prevent leaks
fix some spelling mistakes
use compile agent pool
Revert "parallelize hygiene"
parallelize hygiene
onDidChangePassword -> onDidChange in secrets API
Allow ResourceCommandResolver.getRightResource() to return undefined (#113364)
Move secrets API to extension context
Add simple browser extension (#109276)
Just kidding, keep proposed onDidChangeAuthenticationProviders API for now
Sort contribitions
Add find all references command for JS/TS
Remove deprecated parts of proposed auth provider API
Update ts grammar pinning tests
parallelize
use yarn task again
Update JS/TS grammars
update build pool
add provider naming rule
fixes #113725
use vscode build agent pool
#100700 remove the skipped test
fix #113217
list added view descriptors in ascending order in the event
fix type casts
update todos
update my work query
fix cr issues
Remove sync property
tabs - disable badge decorations for compact sticky tabs that have fixed width
move shared config key into workbench layer
simplify outline model again
fix tests
:up: distro
env - fully qualify our own variables
some :lipstick: and refactorings
move document symbols command to right contrib
Have condition of test publishing match the condition for test execution
debug console: to string of simple values should duplicate value for each count
Allow tabs to wrap to multi-line (#106448)
Remove duplicate 'the's
rename run to exec for consistency
Have `computeSync` return an array of results
Extract all MarkdownHover computation to MarkdownHoverParticipant
More cleanup
:lipstick:
Extract `MarkdownHoverParticipant` from the editor hover
Move more marker specific logic to markerHoverParticipant
Extract `MarkerHoverParticipant` to its own file
Extract marker related hover logic to `MarkerHoverParticipant`
revert webview preload changes.
Emmet flatten DocumentStreamReader (#113602)
Emmet remove dependency on vscode-html-languageservice (#113599)
:lipstick:
Increase timeouts
Add support for including line feeds at the end of lines (microsoft/monaco-editor#2265)
Add test for microsoft/monaco-editor#1235
Update rust grammar
Emmet polish
Emmet improve Expand Abbreviation perf (#113558)
Emmet refactor toggle comment (#113557)
Use blob urls instead of data: to maintain current origin
Better simulate real-life CORS in code-web server
Add a timeout to the editor tests step
Add `monaco.editor.setColorMap`
Emmet refactor reflect CSS and update image commands (#113550)
lazier loading of windowsProcessTree
no need to update api
turn on renderer view
avoid duplicated text model.
update height without scrolling the view
Allow tree item command to be resolved later Part of #110498
Trigger build
No need to use containers for compilation and hygiene jobs
Cancellation proposal for resolveTreeItem
update dom to use newer methods
Refactor Emmet merge lines and select item commands (#113516)
Emmet create new html-matcher override instead of using LS (#113508)
Empty output view style update and layout change
Skip webkit
Add editor smoke test (ported from `monaco-editor`)
force update metadata diff editor for the first time.
Update distro
Avoid installing typescript
Rearrange CI jobs
Add typings validation
Adopt latest setup-node action
Align all yarn caching steps
Hide auto forwarded port notification
Avoid touching passed in options object (fixes microsoft/monaco-editor#2210) and avoid deep cloning overflowWidgetsDomNode (fixes microsoft/monaco-editor#2184)
Tunnel factory can return undefined (#113232)
Test cached node modules
Avoid ts changes
Support whitespace options
Add style controls
Avoid changes
Adjust request schedule
Avoid touching continuous-build-*
Add Download Playwright step
add range WIP
rename to inline hints
Adjust hint label styles
Trigger a build to test caching
One more try
fix view state being stored after picking an element
Enable playwright debugging
remove unused context keys
naming: Outline -> DocumentSymbol when it's a symbol, some cleanup
fix some outline settings so that they are also language overridable
simplify filter updates
Use fast 7z compression level
properly implement `revealFocusedFromTreeAside` command
Start candidate finding later (#113377)
fix/workaround rendering issues with codicons and quick pick
change cell uri fragment format so that opener service doesn't interpret it as line number, also throw error when trying to resolve a cell as notebook, https://github.com/microsoft/vscode/issues/113307
modes hover must not bread fragments, https://github.com/microsoft/vscode/issues/113307,  fyi @sandy081
Adopt `Cache@2` for node modules caching
honour outline problems settings in notebook outline
Improve comments and code style
Avoid changes
Avoid generated file
Use utils type converter
also use outline view state for qiuck pick
breadcrumbs picker must restore view state when being dismissed
trim MD headings syntax from outline element
move more things into outlinePane-land
properly cleanup notebook outline marker
fix stale breadcrumbs issue
tweak (reused) rendering for breadcrumbs
fix and tweak sorting
update outline as soon as it becomes visible
add IOutlineComparator as concept, remove `outline.symbolSortOrder`
More tweaks
style tweaks
render markers with outline elements
Invoke `mkdir` with `-Force`
Compute node modules cache key in JS to avoid globbing
:lipstick:
breadcrumbs - make sure to dispose current outline when editor changes
protect breadcrumbs widget from rendering bugs
Simplify code
show a default entry when a cell is empty
workaround https://github.com/microsoft/vscode/issues/113333
Bust the node modules cache
Have a clear list of directories where yarn should be executed
notebooks quick pick should contain all elements
fix issues when user state changes
make notebooks outline a tree (using folding logic), also fix notebook outline icons
Add dummy support
Revert "Avoid generated files"
pre calcuate output height.
restore view state
avoid view state npe
update distro
style polish
update distro
indexOf
Load expensive node modules lazily
remove console.log
event dispatcher for cell layout.
retore awol feature and fix tests with that
Add controller
move deprecated style into IconLabel, move/rename outlineTree to outline
proper disposing of outline objects
replace IOutline#resource with #outlineKind
add setting: outline.symbolSortOrder
move sort order
properly layout tree
make sure outline is all expanded
Avoid gulp having to respawn
fix compilo
use outline service in outline pane
Exit immediately when a cycle is found and running on the build
Don't restore ports that are already detected Part of microsoft/vscode-remote-release#4112
Avoid generated files
WIP
add config per UX (breadcrumb, tree, quick pick)
move delay "after big change" heuristic to new outline model
Update task services doc link (fixes #112591) (#113170)
Add sorting to npm scripts (#112725)
move document symbols breadcrumbs logic into its own data source
Use the browser's WebSocket for remote connections
move outline view state into its own file
fix compilo
testing: forgotten push to enable debugging
revert outputs should trigger output rerender.
no outputs to render
vertical alignment
empty cell outputs placeholder
padding polish for mimetype switcher
mime type switcher
split point takes renderOverviewRuler into account
resolveNotebook API command takes no argument
Have the `TunnelService` use `IRemoteAgentService.socketFactory`
fix #112747.
Prompt when there is an AMD module cycle
update distro
fix #113243.
Add `permessage-deflate` support
also show cell-file icons in quick pick
use file icon (if applicable) for cells, otherwise use default icons
re-use css classes for better icon support
render highlights in breadcrumbs picker
remove onDidChangeActive-event
simplify model, add keyboard nav support for notebooks
add outline target and adjust sorting, filtering for document symbols outline accordingly
use identity provider, some cleanup
remove ITableOfContentsProvider, remove duplicated code, add quick picks to IOutline
delete old tocProvider
show a root element where there is outline-breadcrumbs but none are currently selected
reveal vs expand folder vs select folder...
better revealing and previewing
Temporary workaround for #112843
Only terminate after 3 EPERM errors
update distro
Revert "fixes #112750"
Have `/build/` compilation and `createAsset.js` be runnable independent of the root `package.json`
update nb breadcrumbs as you type
:lipstick:
Adjust node module path
styles for notebook outline elements
Avoid lookbehind (not supported in Safari)
Support open in background for 'open with'
Support open to side from the 'open editor with' quick pick
Give browser unit tests even more time, the build agents are having a bad day
Don't transform viewColumn used when creating extHostWebviewPanel programatically
Extract type guard
#27498 restore extension editor webview scroll positions (#85982)
fix #112778.
typeahead: fix invalidation on 2nd char in zsh
Increase macOS browser unit test time because it continuously times out
eng: avoid duplicate prelaunch task runs
dispose webview scroll event when switching models.
webview cover.
dispose webviews after switching models.
:lipstick:
finally fixed the OutputViewModel leak
fixes #112366
:lipstick:
cache metadata and output height.
fixes #112750
Keep only `@types/*` deps in `/build/` and share `terser` (#112718)
update distro
Emmet comment spacing fixup, fixes #112835
recompute output height in diff view model.
Emmet Toggle Comment HTML :lipstick:
Adjust references to --list-extensions option
Strengthen sameNodes check :muscle: fixes #112829
tricky selection listening
memory leak
wire up outline service with breadcrumbs control, WIP
fixes #112792
Adopt `ICodeEditor.executeEdits`
bust the node module cache
Leave sorting deps up to yarn
bring back css integration tests
update vscode-uri
fixes #112281
debug: Focus child session instead if it is stopped
Make sure to call done() from unit test
update distro
update distro
update distro
More tweaks to Windows cache exclusions
createFile and createFolder only allow single operation until there are more use cases
comment out css tests on windows
decorations - show them next to the editor label when tabs and breadcrumbs disabled
Adopt new mocha types
first version of outline service, outline creators, and implementations for document symbols and notebooks
Move /build/ dev dependencies to root (#112718)
Align `@types/*` dev dependencies (#112718)
fix #112805
configureCrashReporter should check whether we are on Electron
Tab decorations need to update scrollbar (fix #112799)
null guard
workingCopyService: create and createFolder also use IOperation interfaces
Revert 0d14d3e38a8aba6e2bcd6d5dd729c4d47b3d4f97
Avoid text flickering, just render &nbsp; to have a height
chore: bump electron@11.1.0
[css] revert changes to test runner
Use IFileOperationUndoRedoInfo
Log more details when exiting
trigger layout when resource labels have rendered, fixes https://github.com/microsoft/vscode/issues/112799
[css] update to vscode-uri@3.0
Remove all `yarn` warnings
Remove most of the `yarn` license warnings
Execute `yarn --ignore-engines` for extensions
Remove debug console log
fix #110982
don't disable the current remote resolve when bisect'ing extensions, fixes https://github.com/microsoft/vscode/issues/112473
Use the root typings for keytar since we are loading the root node module (#112718)
update distro
remove more unused code
only show render style switcher when the property is expanded
render outputs in text by default.
avoid plain/text being rendered multiple times
no transform for ITransformOutput
dedup.
:lipstick:
fewer weird as cast
no more casting for Single/SidebySide diff view model.
DiffSide enum to replace boolean.
Add `--prof-v8-extensions` flag (see #112393)
:build:
:lipstick:
Reduce height of notebook add new cell toolbar
Make notebook add new cell toolbar visible on hover/focus
Update removeTag command
Windows CI: Do not cache symbol files
Move away from deprecated 'vscode' node module (#112718)
renderers layout update
Share typescript node module (#112718)
Upgrade Emmet removetag perf + behaviour, fixes #104173
eng: update mocha 2 -> 8
load renderers.
hygiene: switch to terrapin
workingCopyService: take options alongside each argument
resolveNotebookContentProviders does not take arguments.
Output transformers take ICommonNotebookEditor
update distro
Move asClassNameArray/asClassName/asCSSSelector to CSSIcon
:lipstick: async-await
remove unused code
format js/ts on save
Use menuService across all views for context menus. Breakpoints.
fix https://github.com/microsoft/vscode/issues/112745
tweak wording for participants https://github.com/microsoft/vscode/issues/111878
debt - use localized string for bisect title
allow commands to specific a mnemonic title in additon to "normal" title
debt - tool tip never has a non localized variant
Do not share `terser`
don't show dialogs when running tests
fixes #112603
Adopt more breaking changes from copy-webpack-plugin
Do not upgrade mocha
fix tar
rename workspace action for duplicate
fix template usage
show diaglog when extensions participate in file operations, have "don't show again" option and command to reset choice, add logging
Adopt copy-webpack-plugin breaking change
ux - distinguish folders from workspaces when opening (#77718)
debug console: use menuService
build: tarball compilation output first
update distro
Avoid recompiling remote native node modules (#112644)
Share webpack related node modules (#112718)
Share mocha related node modules (#112718)
debug: move Debug Console action to the `...` menu
remove unused keybinding id
Use registerAction2 in markers view
`/build/` and `/test/` should only have `devDependencies`
don't suppress preview when handling onWill-events anymore, https://github.com/microsoft/vscode/issues/111878
timer mark sources must not be unique, fixes https://github.com/microsoft/vscode/issues/112708
merge last stages into Publish
merge macos jobs into same stage
build: compile smoke tests
fix hygiene
testing: structural and perf improvements
testing: improved test explorer, cancellation
testing: continued work on test explorer
diffBrowser.
private _
style polish
Check in additional file for uri opener api  change
Ignore case while checking pressed keys in webview
Escape backslashes in keybindings for release notes
Pass schemes to main thread
Emmet fix edit point commands #112691
adjust test for removed process env key
fix #112683
Add workspace tagging for java (#111303)
absolute layout for side by side output diffing
dynamic .artifactignore
finish compile artifact
debug: watch expression use menus
Update several Emmet commands (#112597)
Better side scrolling
fix: hover link encode unnecessarily
debug: more transition to commands, get rid of StartAction
Have TentativeBoundary trigger rollback (#112510)
Update isVSO check with new remote authority
move progress and cancellation of file operation participants into its only customer so that progress stop when applying a workspace edit and showing its preview
update original webview based on original text model.
fix cyclic dependency
rename setting
Update src/vs/workbench/browser/parts/editor/media/titlecontrol.css
update references viewlet
cleanup hygien
fix build
build
debug viewlet: use registerAction2 and restructure the whole debug toolbar
debug: move colors to debugColors.ts from debugToolBar
fix build
compile: use artifacts instead of cache
add proposal of CancellationError, https://github.com/microsoft/vscode/issues/93686
tweak padding-right for decorations
empty
fix https://github.com/microsoft/vscode/issues/112418
link webkit issue for missing timeOrigin support
spell out GDPR types instead of using mapped types
add logging for #112649
backup - move progress reporting into place where save actually happens
empty
codicons -> iconLabels
Show a clear dialog on web when the remote connection fails
explain why ::after "inherits" italic rendering
remove passing user target
Do not touch the perf marks names
Try to give a good stack trace in case loading code fails
Increase web worker extension host timeout from 10s to 60s
fix build
Allow strings as host name for port forwarding
Add logging for calls of `process.exit` in the extension host
don't show loader stats in perf view editor anymore
debug: preserve focus in editor when integrated terminal is shown so match debug console behavior and to make sense for accessibility
quick pick - use Alt as modifier to open to side
:lipstick:
Tab bar not rendered on first load of only a welcome editor (fix #112618)
Bump distro
hide inset and update layout for the left webview.
render deleted output
two webviews
output diff container css class clearing
:guard:
absolute positioned borders elements
More scrolling in getting started
Take ownership of workbench-welcome
Polish skip location
Adding proposed external uri opener API
Make sure we dispose of webview revivers when the main thread extension host is disposed of
Small formatting cleanup
grouping types in notebookBrowser
move genericTypes into notebookBrowser
single backlayerwebview!
share the logic for renderers in webview
:lipstick:
align backlayer 1 and 2
fix build errors
:guard:
move output layout update logic out of back layer webview.
IDisplayOutputLayoutUpdateRequest.
no need to pass in cell for updateViewScrollTop. it only talks about output and offsets.
link clicking in the output webview
support scroll position syncing.
Massage mark name to align
Collect and deliver perf marks from extension hosts (#112552)
add timeOrigin as implict mark whenever possible
:lipstick:
update output in webview position when list view layout change.
cell body height to 0 so I can click into the webview
Update codicons: use new loading icon and animation (fixes #112593) https://github.com/microsoft/vscode-codicons/commit/ca2658d7973430426109b97f9f57c9f50b4f1717
Update Codicons: Make circle-large-outline 1px outline (fixes #112310) https://github.com/microsoft/vscode-codicons/commit/7a530b493aadaaadee5ae62e33a90235795dfc09
:lipstick:
move output layout info into genericCellViewModel shared by notebook and diff.
support removing a setting from all targets
Cleqn up codicons
open editors: adopt registerAction2
clear static outputs when collapse outputs panel
absolute position of mixed static and dynamic webview
webview output first load
explorer: adopt registerAction2
:up: distro
API: finalize status bar backgroundColor (#110214)
Catch all localhost duplicates when forwarding a port Part of #112571
merge distro in a single command
debug: check if languageIds is there
breakpoints: use registerAction2
add test timeouts
Dispose a permanent failed connection and fail any further requests through a disposed `ChannelClient` (#112278 , #112568)
bump cache salt
remove CHILD_CONCURRENCY=1 for all except windows
build: remove postinstall script invocation
debug console: use registerAction2
build: use PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD
build: use ELECTRON_SKIP_BINARY_DOWNLOAD
add perf mark when file systems are registered, fyi @bpasero
do not restore theme if setting has changed
fix build
timer mark event should also include unix timestamp
remove migrating sync settings
#103869 remove user value if set to default and target is not passed
editors - show progress when waiting for auto save to complete to take long (fix #112278)
remove all usage of concurrently
concurrently -> run-run-all
Revert "debug: stop supporting enableBreakpointsFor"
web api - document some methods I forgot
in addition to file watching, use text file service onDidSave, fixes https://github.com/microsoft/vscode/issues/112477
add embedder API to retrieve (startup) performance marks
debug watch: use registerAction2
variables view: use registerAction2
add ITimerService#whenReady
update distro
Rename `Protocol.onClose` to `Protocol.onDidDispose`
windows - add helper method to know used window
in browsers perf util is just a wrapper around native performance
windows - cleanup hack for empty windows when restoring
Remove Build jobs for now
:lipstick: settings descriptions referencing other settings
add option for preview navigation behavior (#112389)
Remove unused import
config - careful with undefined/null config props
:lipstick:
quick pick - configure openEditorPinned properly
fix #112467
test
DiffElement
hook modified webview
chore: fix CXX export
Add scrolling to getting started page (#112500)
expose notebook text diff editor list row container
prep for webview renderers
no unnecessary as any
:lipstick:
do not restore default theme
output height calculation in view model by reading folding state.
positioning for dynamic height output
Add a slice to fix compilation
remove quotes since we don't spawn shell
use menu registry for sidebar actions
chore: bump electron@11.0.5
use menu registry for views visibility actions
Skip electron binary download
separate side by side and single side viewmodel
Align versions across `package.json` files
Use directly `yarn compile`
ext: log errors running contributed commands to the console for debugger vis
fix show view submenu in debug
fix #112217 by replacing look behinds
cursor and user select update for output
Bump distro
fixes #112415
Fall back on node API when $SHELL is not set, for user shell and shell environment discovery See github/codespaces#1639
fixes #112413
fixes #112417
[json/css/html] adopt lsp 316
simpler perf mark for didLoadExtensions
update distro
fix typo per #112437
Use panel title context menu for contextMenu actions
=revert changes to themes.contribution.ts
no trigger specification
enable master ci for production build
telemetry for raw timer marks
remove unused/duplicated perf.mark
- introduce panel title menu id - move view container menu acitons
Update grammars
prefix our performance marks with `code/`, e.g `code/didStartRenderer` etc
windows - move out more state code into separate class
remove dependencies stage
Revert "fix yaml"
fix yaml
faster dependencies check
split compile & hygiene
simplify continuous build
build: VSCODE_PUBLISH
Do not create issue on failure
Move actual gulpfile logic to `/build/`
Save 1.5 seconds from `gulp` startup time
Increase yarn's network timeout
Add a dedicated `Build: macOS Node Modules` job
Force cacheNodeModules to fail
Cache yarn cache directory
fixes #112410
remove unused measure `ellapsedTimersToTimersComputed`
add a way to read marks with source, adopt in perf view editor
Remove use of `getActions` from tunnelView.ts Part of #92038
name marks with source when importing them
Delete PR workflow stub
Split compilation job into core compilation and extensions compilation
Remove use of getActions in remote.ts
Bump ini from 1.3.4 to 1.3.7 (#112276)
Bump ini from 1.3.5 to 1.3.7 in /extensions/markdown-language-features (#112275)
Check in `.js` files from the `/build/` folder to improve build speeds
remove direct writes to `globalThis.MonacoPerformanceMarks`, use native performance instead, import native performance entries into timer service, fyi @bpasero
notebook: use icon names in  registerThemingParticipant
One last try at automatic issue creation
fix #112447
Attempt to avoid skipping steps on failure
fix #112448
Intentionally fail to test issue creation
Switch to using `github.sha`
Create issue on test failure
Skip compilation if the cache is hit
milestone update
windows - move state handling into own class
Split Linux Build, add macOS jobs
separate viewPane and viewPaneContainer
rework perf-util, only allow for marks, separate perf-marks from renderer and main process (and future other processes)
add perfEntries2
create and dispose menu for context menu actions
windows - shuffle state interfaces over
Re-enable build jobs
windows main service :lipstick:
windows - first cut cleanup of windows finding logic
bootstrap - add more typing info
web - show dispose dialog only upon user interaction
lifecycle - log long running operations preventing shutdown (for #112278)
:lipstick:
fix #112337.
testing: add to i18n
Use tree widget in the process explorer, fixes #104013
move layout info into diff cell view model.
testing: base test explorer
update distro
Convert to use `for ... of`
Add Windows
load static renderers
Add macOS
Run unit tests concurrently
Try `yarn concurrently`
Avoid respawning
Remove compile and linux build for now
Avoid "&"
Tweak combined step
Revert "Revert "Pick up offical TS build for web server""
Add more logging to resource loading for webviews
Remove unused function
Attempt to run things in parallel
Add a compile and a linux build step
Abandon composite actions since they cannot actually compose on other actions
Attempt using absolute path
Follow the expected naming scheme
Extract cached yarn logic to a separate file
Remove playwright caching
Revert "Pick up offical TS build for web server"
Bump markdown-it and highlight versions
Move valid layers check together with the hygiene check
quick fix for setting description typo (#112327)
Extract the hygiene check to its own job
Simplify caching strategy
Troubleshoot expression
Open Search Editor Action Bar item should clone search view's config Closes #112209
Push workflow stub file
feat: use baseUrl first
chore: remove git suffix
externalize remote icons
Cache the /build/ folder compilation
Remove the `linux-node-modules` job
Define `path` for the Cache node modules step
Add the key property to the Cache node modules action
Introduce a `linux-node-modules` job
enum all breakpoint icons, avoid css selectors with patterns
Gotta love yaml
Attempt to revive linux github action
Run compile on the `/build/` folder if the node_modules cache is hit
use tt policy for nested workers, https://github.com/microsoft/vscode/issues/108400
Convert to use `for ... of`
Add more frequently-used Ruby filenames to Ruby bundle (based on the actual TextMate bundle)
Attempt to cache all node_modules folders
Attempt to cache root node modules
remove extra separator
:up: distro
#92038 Move panel actions to use menu registry
clarify docs, fixes https://github.com/microsoft/vscode/issues/111686
:lipstick: remove commented code
adopt `actions/setup-node@v2-beta`
nuke getSecondaryActions from outline, https://github.com/microsoft/vscode/issues/92038
#92038 Create view and viewPaneContainer util actions
nuke getActions in outline pane, https://github.com/microsoft/vscode/issues/92038
#92038 dispose actions on change
#92038 Use menu registry
move suppress logic, https://github.com/microsoft/vscode/issues/111878
apply workspace edit from onWill-handler from within renderer, https://github.com/microsoft/vscode/issues/111878
feat: support Report Issue capability for built-in module
No need to install anything
Do not configure `xvfb`
Remove yarn `CHILD_CONCURRENCY` limit
Try newer `actions/checkout@v2`
Update commands.ts (#112222)
web - do not ask for clipboard access in ext tests (fix #112264)
add extra check to understand https://github.com/microsoft/vscode/issues/112263
web - tweak dispose dialog
make slow timeout event slower, fixes https://github.com/microsoft/vscode/issues/112262
Avoids triggering autofetch unless setting changes
Changing autofetch to a string config which has "current", "all" and (#111090)
Add missing file to commit
Observe the confirmBeforeClose setting for webviews
Remove extra lines
add explicit jsdoc types
remove !.
:lipstick:
Only prompt if input (#112113)
renders all deal with output view model.
#92038 Use menu to register actions - Extensions View
#92038 use menu registry to provide view actions
move picked mimetype to its view model.
chore: fix run-on values for snap build (#112248)
Erase types to avoid using lib.dom.ts types from `/common/`
refs #111463
[GettingStarted] Slow down animation when expanding/collapsing items on sublists
Avoid endless loop (fixes #110392)
Tweak getting started
Tweak get started detail pane (#111840)
change name back
yet another tweak to startup timer telemetry
use css variables for code lens font, https://github.com/microsoft/vscode-internalbacklog/issues/1674
Delete is no longer irreverisible
print nested worker errors onto console
support nested worker when running without iframe
add failing Worker ctor inside nested polyfill worker
support https-iframe
web - inform user if workbench gets shutdown
web - allow to retry clipboard access (#112089)
fix linux deb repo pointer
web - clipboard warning when failing access
restore and update CSP header
:lipstick:
some simplifications
fix setting --vscode-relp-font-family variable
web - fix window open
Updates tsec to latest version using TS4.1.2
web - register external opener to prevent unload on expected href changes
:lipstick:
[bot] make *duplicates link to a query for issues with matching tags. Closes #111903. Closes #49912.
fix yarn.lock leftover
Prompt web users when they try using ctrl+w/cmd+w when focused on a webview
Exclude dist from eslint and hygine
Use dispose directly instead of loop
Enable going to stdlib on serverless
Bump Static version of web TS version
Remove work around for TS not supporting paths on its own
Enable preferConst in TS project
Remove unused types
Pick up offical TS build for web server
Make sure markdown preview is updated if on disk file is updated
Re-enable *.integrationTest on windows
Pick up new TS version for building VS Code
fix #112178.
Assign rzhao271 to emmet tasks
:lipstick:
revert change to grooming notebook
delay cell text model disposing.
limit editor contribs in notebook diff view
fix: disable shm usage in container builds (#111787)
fix memory leak
feat: support open local file
notebook: adopt trusted types for renderer scripts
notebook: adopt trusted types for renderer
Use `trustedTypes` where using `new Worker()` (#108400)
#108793 check casing and use proper extUri
explorer: smarter handling of file events
debt - escape quotes
disable proposed API checks on top-level getters
repl: improve height estimate
:up: web dev
update my-work notebook
fix #112146
Use the future scroll position to compute the scroll top and reuse the current smooth scrolling animation (#104144, #107704, #104284)
up references-viewlet
introduce vscode-repl-font-family
notebook.selectedCellBorder: fix typo
update iconRegistry doc generation
Preserve whitespace in tree hover Part of #112124
Deduce secondary host from the request if possible
Remove unused import 'UriIdentityService'. (#112112)
exthost: use marker to avoid duplicating written log messages
fix: Param helper hover getting cut off at bottom (#112019)
no longer render overview ruler.
fix #110357.
Remove extra whitespace in dom.ts
refs #110392
Use uriIdentityService to compare uris, fixes #107779
fix: Debug Console Linker automatically decodes link
Log extensions query telemetry data
Add workaround for #101754
Improve `writeFileIfDifferent` logic
Move `getElectronAcceleratorForKeyBinding` to `WindowsKeyboardMapper` (#101754)
Uncomment test
bug fix, see  #112013 (#112015)
Add `wss:` / `ws:` to the CSP
tabs - partially take changes from PR 106448 to reduce diff
Debt: Test findPorts (#112092)
debug: show the hover not so eagarly (do it twice as slow as editor hover)
debug editor decorations: always decorate top stack frame, and decorate focused stack frame if it is not the top stack frame
debug console: color the debug group elements
Try to fix markdown tooltip for Safari #111756
fixes #112046
path lib usage :lipstick:
Remove duplicate (case sensitive) recent workspace/folder names on the welcome screen (fix #111954)
Wait for the remote configuration before creating remote terminal processes
retry all cosmosdb ops
multibyteAwareBtoa - add commented out failing test for #112013
:lipstick: layers checker
Include candidate pull requests
Rewrites Trusted Types sink assignements
Updates tsec
Unable to find the registered languages while saving the file. (fix #111788)
debug: update js-debug
Suggest a different description (#112049)
add log to createAsset retry
Do not ignore errors from $spawnExtHostProcess
fixes #111850
Tweak candidates notebook query
use proper repos for linux arm
Prompt to save untitled file before run/debug
more cleanup for #111177
Windows - Taskbar entry context menu is empty (fix #111177)
add exponential backoff
retry createAsset sproc due to ECONNRESET
#89559 Set logsPath in window configuration
Revert "build: create asset should still try to add asset"
highlightModifiedTabs and pinned tabs issue (fix #111641)
fix #111898 on master
debt - shuffle some electron-main code to better layers
proxy - rename proxy2 to proxy
proxy - remove old proxy auth dialog
:lipsticky: async
ci: avoid overwriting CC variables for arm arch
update distro
ci: fix condition for linux builds
chore: fix cache condition for native modules
chore: bump distro
chore: bump electron@11.0.3 (#111931)
Update version to 1.53.0
Remove console.log
wrap font faimly with quotes
fix #111910. Avoid notebook save race condition.
Only render `vscode-remote://` extensions as remote
nested worker in worker
fixes #111577
yarn gulp vscode
fix duplicate imports
Update doc comment for resolveTreeItem Related to #111715
suppress refactor preview from onWill-handler, workaround for https://github.com/microsoft/vscode/issues/111873
Revert "fixes #110353"
repl: font family
fixes #96264
:lipstick: code lens font fix
workaround for https://github.com/microsoft/vscode/issues/111871, fixes https://github.com/microsoft/vscode/issues/111666
build: create asset should still try to add asset
:lipstick: code lens font
explorerViewer drop await
search: fix handle empty results from ripgrep
debug: fix auto attach not turning on if reselecting current state
debug: bump js-debug
Allow using upper case hex characters for color
Bump actions
update notebook execute kb shortcut tooltip for windows.
notebook list view scrollbar should be below cell toolbar
Kill code processes after each integration test suite run (#111844)
Remove redundant when clauses
extJupyter
add log for save/saveas
update resolve time stats even if they are the same.
fixes #110775
fixes #111832
More üíÖ: adjust overall padding & sizing (refs #111753)
fixes #111583
Hide the editor's cursor when doing composition (fixes #106663)
node-debug@1.44.15
update DAP to 1.43
fix raw timers telemetry event
Exclude endgame-plan issues from query
fix query, remove commas
add verification query for issues from non-vscode team members
Slightly darken list active bg on light theme (fixes #111750)
Bring content closer to center vertical when space permitting Ref #111753
Polish getting started styles (#111774)
fixes #108712
fix #111735.
remove extrenouus log fixes #111759
Add jpg to vscodeResources in order to bring gettingStarted images into the bundle
Allow an `EncodedTokensProvider` to also provide a tokenize method
Update verification notebook milestone
tweak smart select test
fix #111714
explorer: update creation labels
fixes #111602
Prompt when hitting a different UndoRedoSrouce when undoing (#111640)
Extract `_undo`, `_redo`
string literal does not work with status bar item [background] color (fix #111687)
Avoid layer breaker
Update contextkey.ts
fixes #111710
workbench.tree.expandMode
fixes #111639
update distro
more fixes for #95697
Add GreaterEquals and SmallerEquals and fix implementations
chore: optimized code
feat: add the rename test cases of html-language-features
fix: check canRename before findRenameLocations
fixes #111581
fixes #111693
add install in browser action
fix https://github.com/microsoft/vscode/issues/111741
fixes #111657
fixes #111732 #111733
fixes #111617
bootstrap tweaks
fixes #111671
fixes #111601
add cancel-option to continue bisect model dialog, https://github.com/microsoft/vscode/issues/111667
fixes #111593
start extension bisect with all extensions disabled and stop early if problem reproduces, https://github.com/microsoft/vscode/issues/111672
align continue bisect messages, https://github.com/microsoft/vscode/issues/111667
Prepend `vs/nls` to `workerMain.js` (fixes #111599)
linux: disable integration tests
windows - prefer to focus window where files open in
Keep Editors Open menu choice in the editor '...' menu should be a checked option (fix #111668)
window.restoreWindows: preserve description polish (fix #111607)
Bad rendering of status bar item with error background color (fix #111618)
wip
build: fix config
build: disable exploration sync
build: exclude electron-11.x.y branch from continuous build
fix #111675 and #111673
re #109594.
fix #109626.
Update package.json
feat: add rename symbol within <script> tags
Tweak verification needed query
fix https://github.com/microsoft/vscode/issues/111604
fixes #110511
fixes #111496
Move ports veiw into remote explorer by default
Update distro commit
ignore already verified items
proxy - various login dialog fixes
Get ready for ports view experiment
#111573 also check for setting value type
column options in openWith-command can be undefined, fyi @mjbvz
unblock build
Revert "Make users save new file (#110330)"
Add jpg exclude to hygene
Add actual images for content
Dont let product icon overflow
Revert "fix: c++ exception in keytar module"
Styling tweaks to getting started
Better shape images in getting started
Prevent error when reopening markdown preview. (#107205) (#111449)
Focus on the content window for iframe based webviews
Make vscode.openWith a proper api command (#111006)
Bump highlight.js in /extensions/markdown-language-features (#111262)
Default strict null checks to off for implicit projects
Handle rejected promise in history delayer
fix html yarn.lock
icon doc
fix #108788.
Bumps version of github-browser
[css][html] update dependencies
[html] update dependencies
Enable persistance of getting started ui state
[css][html] Option to disable MDN Reference popups only (without effecting other functionalities). For #97979
Update 'statusBarItem.errorBackground' default color token (refs #110214)
Register `DeleteInsideWord` as an editor action
[json] update dependencies
Rename `editor.atomicSoftTabs` to `editor.stickyTabStops`
Define a label for `deleteInsideWord`
chore: bump distro
#111845 fix localization tests
chore: bump electron@9.3.5 (#111530)
more build fixes
update distro
support passing log level using query param
bump cache salt
:lipstick: format file
Update description of `remote.autoForwardPorts`
don't validate MessagePort inside iframe as safari seems to have trouble with that
Clean up defaultFolderPath
Run OSS Tool and make necessary updates
Use argparse 1.0.9 in npm extension
caching is HARD
move duplicated code into central place
spelling error in command name (fix #111455)
fix tests
chore - remove unneccessary non null assertions
fixes #108001
fix misuse of VSCODE_ARCH in builds
support font features, like ligatures, in code lens, https://github.com/microsoft/vscode/issues/16038
fixes #107651
:up: distro
update references viewlet, also no more proposed API usage required
Exclude testplan-item label
fix layer breaker
api - fix exception in status bar
sandbox - add SH1 to HEX utility using crypto.subtle with fallback to our own solution
tests - add test suite for native modules
fix https://github.com/microsoft/vscode/issues/110554
Improve quiet light diff syntax highlighting. For #107926
update to latest DAP
fixes #111410
fixes #111413
fix yarn retry logic
rename OnTypeRename -> LinkedEditing (for #109923)
Add condition editing UI to breakpoint filters
remove old logging API proposal, fixes https://github.com/microsoft/vscode/issues/85992
remove TreeItem2
fixes #104629
bump cache
:lipstick:
adopt latest loader, pass trusted types policy to loader, adopt in loader-usages
use createChannelReceiver, createChannelSender
github: get all branches
Always show the open view option in the open in browser command
Add a command for open port in browser Part of https://github.com/microsoft/vscode/issues/111402
fixes #44542
fixes #106664
fix keybinding smoke test after icon name changes
fix stopIcon name
success/error icons
externalize notebook items
fix retry
fixes #111366
#44542 ability to reveal setting
Exclude endgame-plan label
trusted ext urls: use 1 hour instead of 10 mins
adopt checkProposedApiEnabled
Allow status items with error background color (fix #110214) (#111353)
trusted extension urls
original urls get passed along with openUrl
support node 15
debug: load all stack frames text shuold have initial color when selected so it is readable
fix #110699
registerCodicon
update tests
add extension icons
fix terminal icons
dirty dff icons
terminal icons
download to temp location first and rename
fixes #111218
bulk edit service: Show infinte progress when there is only 1 item since we do not know how long it takes
some more cleanup, enfore proposed API checks, fyi @RMacfarlane
add preferences icons
:lipstick: discover and mark more proposed types
marker view icons
more icon work
externalize activitybar icons
:liptsick: sort API types and namespaces, enforce proposed API for types
support later node for building
Only show "Not Forwarded" when auto forward is disabled Part of microsoft/vscode-remote-release#4021
Add badge back to ports view Part of microsoft/vscode-remote-release#4021
add user data init markers
disable two comparer test that fail in latest safari, https://github.com/microsoft/vscode/issues/111368 fyi @bpasero
Change port language to "forwarded" and add icon Part of microsoft/vscode-remote-release#4021
Add open pull request query
add yarn lock file
:up: update playwright
Add extension source to forwarded ports Part of microsoft/vscode-remote-release#4021
add dropDownButton-icon description
fix unnecessary import
use codicon for openEditorWith picker
make viewPaneContainer twisties themable
add Codicon.dropDownButton
button: use CSSIcon
find completion item color in detail and at the start/end of documentation, fixes https://github.com/microsoft/vscode/issues/109794
Remove heading for forwarded ports Part of microsoft/vscode-remote-release#4021
read line preview when having symbol results, https://github.com/microsoft/vscode/issues/109523
Improve tunnelFactory doc and remove an escaping undefined
IEnvironmentVariableInfo: Use ThemeIcon
move file decoration API to stable, https://github.com/microsoft/vscode/issues/54938
:lipstick:
Ignore flush errors during dispose since the underlying socket might be already closed
add settings to toggle/tweak editor tab file decorations
Prevent unwanted concatenation of "null" to feedback URL (#111325)
tweak padding of file decorations in editor titles
Go to symbol in editor, open to side should reset scroll position in original editor (fix #111346)
apply no tab background style on container, not label
render file decorations italic when main label is italic
add try/catch for #111177
:lipstick: relative pattern
:lipstick: imports
perf - remove redundant performance usages
sandbox - move some changes from PR over to master
chore: update cache
fix: c++ exception in keytar module
more removal of non-null
Add GettingStartedService/Registry and initial getting started UI (#111175)
notebook editor widget always creates list in ctor.
core action active editor context should always have a view model.
less non-null operator in notebookEditorWidget
avoid memory leak of large text buffer from notebook cell text model.
update distro (and hopefully unstuck builds)
Use ThemeIcon & IconRegistry for custom icons
update distro
Add `ProtocolMessageType.ReplayRequest` such that missing messages can be requested again
Avoid layer breaker (using `process` from `/browser/`)
support installing web preferred extensions on web server
`TextModel` should not dispose its `TextBuffer`
avoid unnecessary deepclone
don't leak env vars into process.env; fixes #83187
Update codicons https://github.com/microsoft/vscode-codicons/commit/cbe2a17f2965d0f3ff363830fee4ebae5fee7c4d
Avoid using `innerHTML` (#108400)
Allow running `yarn tsec-compile-check` also on Windows
Add trusted types policies where `.innerHTML` needs to be used (#108400)
generate icon-css from theme.comon.IconRegistry
remove unsued code, fyi @roblourens, https://github.com/microsoft/vscode/issues/106741
Enable sandbox, contextIsolation and vscode-file for process explorer and issue reporter (#111304)
explorer: polish progress
explorer: hook in cancellation
forgot!
confirmed extension -> user trusted extension
Make `extensionKind: ['ui', 'web', 'workspace']` pick the web worker extension host if possible
progress: Increment by percentage points since progress API expects that
use native performance.mark when avialable
Bring Running Extensions to the web
add cancellation token to working copy service and hook it up with file operation participants
fix terrapin order
fix debug toolbar colors
update distro
update azure cosmos :shrug:
Extract `AbstractRuntimeExtensionsEditor` to separate file
Move profiling related state down from `AbstractRuntimeExtensionsEditor`
Extract `AbstractRuntimeExtensionsEditor`
remove startupPerf experiement, https://github.com/microsoft/vscode-internalbacklog/issues/1620
process explorer - prevent process loops
issues - check for sender being destroyed before reply
fixes #111191
#111291 fix tests
Do not include iteration plans into the open issues
Extract `SaveExtensionHostProfileAction` to a separate file
"undo delete" operation recreates file contents when intital create had contents, fixes https://github.com/microsoft/vscode/issues/111162
Extract `DebugExtensionHostAction` to its own file
npm: use project dir when using npm
Emoji characters in col 40 of an empty file causes crash (fix #111235)
fix esrp for arm64
Add tunnel creation options to web api
env - only show one notifications not two (fix #111246)
Make ports view flat when there're only forwarded ports Part of microsoft/vscode-remote-release#4021
Extract `ReportExtensionIssueAction` to a separate file
Move inline actions when ports view is in the panel Part of microsoft/vscode-remote-release#4021
Manually release reference to piece tree when disposing (#107999)
unify win32 build templates
fix darwin build
also check cancellation token in outer perform function, https://github.com/microsoft/vscode/issues/111281
add IBulkEditOptions#token, https://github.com/microsoft/vscode/issues/111281
build: - ENABLE_TERRAPIN env - .build/terrapin cache flag - fix alpine cache - enable web cache
debt - extensions path is always defined
add timeout to terrapin step
:lipstick: use linked list instead of array-remove gymnastics, fyi @bpasero
increate file participant default time to 1 minute, show notification progress which allows for cancellation, https://github.com/microsoft/vscode/issues/111208
More cleanup for armhfp and aarch64 rpm hardcoded dependencies (#111253)
bootstrap - move portable mode into bootstrap-node
sandbox - use IPC communication to read bundles
build: rebuild keytar for arm64
jsdoc :lipstick: for relative pattern
Update extension install button to match default button style
fix: appName in upload-vscode-configuration task
timeline icons: use codicon registry for now
update distro
Use codicons instead of string literals
fix: upload-vscode-configuration task for macOS
Link to ThemeIcon id reference
remove duplicate 'codicon' class (for #111240)
explorer file operations: show progress
wording for output show more.
remove layer breaker
fix: removed plugin helper entitlement
:lipstick:
showNotebookDocument.
:lipstick:
relative pattern - update JSDoc comment
api - test relative pattern with URI
#107999 Use disposable store and add onWillDispose listener
Add vscode.Uri to types for vscode.RelativePattern's base parameter (#111155)
fixes #111240
remove TS on-type-rename feature, https://github.com/microsoft/vscode/issues/109923, fyi @mjbvz
raceTimeout test failed (fix #111233)
Move ports view into the panel Part of microsoft/vscode-remote-release#4021
move down common icons
explorerService: consolidate bulkFileService apply in one location
#110721 pass action runner
#11123 more fixes
bump distro
startup util fixes
update cache salt
explorer: limit undo file content to 5mb
update the monaco.d.ts
add start function to explicitly start performance observer
:chore: bump distro
missing terrapin usage
retry yarn install
missing terrapin usage
run prettier over yml files
add tiny util to allow performance mark collection (via perf_hooks) independent of amd or commonjs usage
implement review comments
more fixes for #111221
fix dropdown position
add file decorations to editor titles (tab and no tab)
fixes #111221
bootstrap - expose preload process to base lib
rename doNotUseTrash to skipTrashBin
bootstrap - fix more compile errors
Move `runtimeExtensionsInput` to `/common/`
bootstrap - fix compile errors
add doc
do not support secondary option on menu
fix - pass the action runner
web - home indicator :lipstick:
debt - fix layer break with dependency to v8-inspect-profiler
Update Codicons: Add 'circle-large-outline' and 'circle-large-filled' https://github.com/microsoft/vscode-codicons/commit/7ddcbfb5f46e97691028f19b475d9183f43ac245
Updating Codicons: Add 'pass-filled' https://github.com/microsoft/vscode-codicons/
re #102503. allow open notebook on the side.
chore: bump distro
:lipstick:
ensure the editor has enough top padding when there is decoration ::after: { top }
chore: update to electron 11 (#110759)
Prompt user with info about terminal config, add settings search by @id, and add sendToShell setting (#110987)
debug: use native logging in extension host
Removed "duplicate" label
Tweaked endgame notebook, added my endgame notebook
re #108464.
DAP: add support for conditional exceptions
both custom and native hover showing (#111178)
fixes #110720
fixes #108073
fixes #109097
externalize debug icons
revert
revert onCancel
support menu with prompt choices
Consider to remove migrateFromOldCachedViewContainersValue (fix #109726)
Feedback from resolveTreeItem API proposal review Part of #100741
fix compile
web - turn the home indicator into a menu
Automatic port forwarding polish Part of microsoft/vscode-remote-release#4021
Delegate to the command service as a fallback (microsoft/monaco-editor#2195)
fixes #104793
:lipstick:
cache OpenURLOptions in ExtensionUrlBootstrapHandler (#110725)
update cache salt
Automatically forward candidate ports Part of microsoft/vscode-remote-release#4021
fix terrapin usage
Add running process info to tunnels Part of microsoft/vscode-remote-release#4021
fix #109104, #105884.
bump distro
readability and test improvements
Update milestone
update selection, better multiline support
snake case
env - tweak shell resolve experience on startup
Simplify changes from #108193
auto attach: allow temporarily disabling
Avoid walking whitespace twice when going left & small stylistic changes
Update CodeActionOnSaveParticipant (#108193)
updated javascript for in snippet (#111062)
Expose TS server tracing (#110534)
testing: tests and speed improvements
Temporarily only warn on duplicate scoped context
Error if a new ScopedContextKeyService conflicts with an existing ScopedContextKeyService (#110363)
`editor.atomicSoftTabs` can be a simple editor option
testing: smarter change event
Don't show complete command arguments in the native tooltips
support dropdown actions in notifications
Sort line decorations
give the option completely to notebook extension for now.
add trusted status bar item.
update execution button when trusted notebook metadata changes.
trusted notebook metadata
opacity for notebook cell status
fix mouse click on text status item
use status bar item for execute cell placeholder
Extract output container renderer
move cell output element to its own module
cellDnd
merge cell action view
trust notebook prep
WorkspaceFileEditOptions add maxSize
testing: initial api implementation
Preserve per-window environment variables between workspace changes (fix #108571)
window - cleanup reload() method
:up: distro
env - take window configuration into account when resolving shellEnv
yarn watch: save errors in separate files, make error regex multiline aware
:lipstick: bootstrap-window
env - move shell env into bootstrap-window and let user env win over shell env
explorer: pass the folder flag when deleting directories
perf - add ellapsedWaitForShellEnv to measure blocked time on startup
Revisit explicit use of ConfigurationTarget.USER when updating config (#109373)
env - also surface shell env resolve errors to users
Validate line numbers
bulkFileEdits: do not use file trash flag
:up: distro
fix tests
env - set timeout back to 10s but show warning when it takes long
use latest wsl
icons: remote polish
Pick up latest TS 4.2 for building VS Code
Copy createSettingMatchRegExp locally to fix cycle
Better note current version in TS version UI
Pick up TS 4.1 final release
update distro
Load `applicationinsights` lazily
Update marked cgmanifest entry
Cancel encodedSemanticClassifications-full on resource change
adds @features: settings search type and dropdown option to Configure Terminal Settings (#110874)
chore: bump keytar@7.2.0 (#110977)
named codicons for views  (for #92791)
fix #110750.
#110905 also optimise for builtin extensions arg
fix another variation of the "palette" typo...
Move LoaderStats down to `/base/`
Better loader configuration for nodejs processes
Update to latest loader
update distro
update distro
update doc
Introduce a server method to check if extensions are ready on server
bump distro
fixes #110800
fix https://github.com/microsoft/vscode/issues/110666
fix suggest explain mode for complex labels
add undo options (undo group id, isUndoing) to working copy service and bulk edit logic
Detect ports to forward more often Part of microsoft/vscode-remote-release#4021
Add tests and improve the implementation
editors - update readonly options when file providers change (fix #110854)
Docs for FileSystemWatcher limitations (#110858)
more jsdoc for #54938
debt - properly implement interface
sandbox - fix process in sandboxed environment (allow to run on Windows)
proper name for register function: registerFileDecorationProvider, #54938
Use label for "Follow link" command's tooltip
DisabledByEnvironment
fix tests
fix #110894
:lipstick:
debounce editor blur focus state update.
Add new codespaces extension id to allow list
rename to `DeleteInsideWord`, remove keybinding
Simplifications: substitute constant arguments
Scope toolbar visibility to when notebook is in focus (refs #110883)
Make notebook cell toolbar appear when not hovering over notebook (refs #110883)
damn builds
nbdiff. add menu to disposable store.
leaking disposables in notebook diff editor.
re #109549. Reveal the first change in notebook diff editor on open.
explorer actions: use bulk edit service
explorerService: add hasViewFocus and undoRedoSource
update my-work notebook
take local value when merging with conflicts
distro
use clientOnly for remote wsl extension
what the
use better name for async markdown rendering, https://github.com/microsoft/vscode/issues/67806
markdown renderer listens to img load and sends resize events, https://github.com/microsoft/vscode/issues/67806
Add `UndoRedoSource` as a means to mark and retrieve undo/redo elements based on their source
bulkEditService: support folder creation
improve browser extensions view
empty commit
distro
fix snapcraft x64
Reduce diff
add deleteWordEntire command
fix test
debug console: increase maring right of count badge
bump distro
 command for open external
enable web extensions in web + server
#100415 :lipstick:
#100415 have fixed height only for initial empty installed view
fix snap target-arch
fix wrong file decoration check
bulkEdits: add copy to WorkspaceFileEditOptions
simplify ITransformedDisplayOutputDto type
#100415 show installed extensions view always
remove transformXYZOutput
move orderedMimeTypes and pickedMimeTypeIndex out of the domain model into the UX (its sole user)
move git rename to command palette
fix buil
linux build: fix step condition
fix compile error
build snap packages for linux arm
make event optional, event naming, relax badge length a little, https://github.com/microsoft/vscode/issues/54938
Codicons in prompt (#96430)
Codicons in prompt (#96430)
Support greater than and less than
fix typos: pallete -> palette !!!
web - enable dnd to download in pwa (fix #83517)
:up: distro
storage - remove deprecated methods (fix #109967)
re #109549. undo redo should edit markdown cell.
fix #110826.
Preserve old showEmmetcommands ID #58600
Move Show Emmet Commands command to extension #58600
Don't use local server for signin in remote scenarios, fixes #104628
re #109549. hook notebook cell language picker into Change Language Mode.
re #109549. click on status bar focus the editor
Move management of `inDiffEditor` to the other editor context keys
Render "Extension" in Source column when the keybinding comes from a user installed extension (fixes #110653)
Add `ResolvedKeybindingItem.isBuiltinExtension`
update distro
`native-keymap@2.2.1`
re #110581.
cli server: add OpenExternalCommandPipeArgs
chore: bump distro
Bump vscode-ripgrep Now has pcre2 in arm linux build
chore: bump keytar@7.1.0 (#110815)
Try resolving URIs immediately from the tunnelFactory Part of https://github.com/microsoft/vscode-remote-release/issues/4012
reuse terminals only for unchanged config; fixes #81345
re #109967.
Backup location can change in same session (fix #109019)
remove console.time
add console log service to cli
include remote-wsl by default
provide a promise to wait until initialization is finished
Minor renames
Simplify handling of `diffEditor.codeLens`
editors - stop trying to be smart about default editor options in `vscode.diff` command
debt - onDidBeforeRun => onBeforeRun
Make users save new file (#110330)
Clone (#110333)
Add an elevate parameter to tunnelFactory Part of #110795
Add doc to resolveTreeItem Part of #100741
Inline allOf clauses for additionalProperties: false (fixes microsoft/vscode-remote-release#2967)
fixes #110768
Move usage of `native-keymap` to the main process
Move `IKeyboardLayoutService` to `/platform/`
fix tests on linux
fix tests - dispose
adopt latest API
fixes #110775
#109019 remove dependency on backup location
add node task to fix build breaks (#110762)
Support --diff parameter with reading from stdin (fix #110426)
Editors: consider to allow name/description for file based editors (fix #110738)
fix #110740.
Remove some unused issue reporter code
:lipstick:
use piece tree for size and line limit calculation.
re #110581. adopt text truncation in text/plain.
re #110581. truncate large simple text output.
prevent keyup of action baritem without keydown fixes #110745
set tabindex on submenu entry fixes #110765
Include experiment info in issue reporter data
[typescript-language-features] Update importModuleSpecifierPreference values (#110536)
Align `IKeyboardLayoutService` and `IKeymapService`
Move keyboard mapper instantiation to KeyboardLayoutService
Emit `IKeyboardLayoutService.onDidChangeKeyboardLayout` only in case of a change
expose current flights on exp service
Update distro
Extract usage of `native-keymap` into IKeyboardLayoutService
Update default styles and polish focus treatment
fixes Title: custom title zooms in #110716
rename to OnTypeRenameRangeProvider. For #109923
fixes #109603 for macOS web
fix showing remote extensions
Validate dynamic configurations only on launch
Git/SCM: Use vscode.open and vscode.diff for a better editor opening experience (#110733)
debug: add unit tests for repl output count
debug hover polish the tip
debug console: respect element.count in aria label
assign extension to menu actions
fix tests
debug: collapse identical lines in the debug console
introduce new variable ${fileWorkspaceFolder}; fixes #84162
also quick rename type parameters, ignore declare only things
use predefined constants
:lipstick: generate command docs
move commands to their locations (#110714)
fix invalid command converter behaviour
:lipstick:
https -> http in port forwarding view
clamp suggest line height between 8 and 100, https://github.com/microsoft/vscode/issues/110078
fix https://github.com/microsoft/vscode/issues/110707
Change search.actionsPosition default, fix #107163
üíÑ
Bump distro for merge resolve
Add vscode-regexpp to remote/package.json
search: intelligently normalize crlf in regex search
Small style changes
search: fix copy all containing extraneous crlf line endings
fix #110427.
increase titlebar height for macos big sur (#110592)
Handle error case for candidate ports Part of microsoft/vscode-remote-release#2776
:lipstick:
fixes #110430
don't attempt to convert API types inside the renderer, break up mainThread-api arguments (and plan future removal)
#109019 make fileSystemBackupsHome updatable
Properly call dispose on extension created tunnels Part of microsoft/vscode-remote-release#3961
Open command options are not mixed-in in the right order
Use vscode.open in NPM scripts view Part of #110497
Optimize code readability
add api argument stubs for strings and numbers
debug: make exception widget accessible
debt - move api command things into extHostCommand so that they can be contributed from anywhere
:lipstick:
modernize vscode.resolveNotebookContentProviders-command, fyi @rebornix didn't find a unit-test for this!
modernize vscode.executeColorPresentationProvider-command
modernize vscode.executeCodeActionProvider-command
modernize vscode.executeCodeLensProvider-command
deprecate old api command story
modernize vscode.executeSignatureHelpProvider-command
modernize vscode.executeCompletionItemProvider-command
Handle conflicting multi-char auto closing pairs (fixes #72177)
Allow ms-vscode.github-richnav to access proposed API
progress bar: report progress
Update classifier.json
debt - move contrib only service to contrib (output)
debt - lift checkbox to workbench
Add undefined to TaskProcessEndedDTO.exitCode (#110508)
respect user settings when creating terminals; fixes #109111
debug hover: show tip to show language hover
fix tests
#106348 Adopt codicon for npm view
tweak setting for #5312, fyi @usernamehw
storage - remove store2 (#109967)
storage - more target adoption (#109967)
:lipstick: editor memento
environment - add OS info (#106528)
Mark .ember-cli as jsonc instead of json
Adopt Action2 for more search editor commands to fix #110407
fix #87730.
handle last line of copying lines.
re #97497.
:lipstick:
fix #97497.
debug: fix compound integrated terminal launches breaking
:lipstick:
fix #110503.
rename 'dirSep' to 'pathSeparator'
Update seti
no double spread
:lipstick: no more homemade iteration
Typo: Uncommited ‚Üí Uncommitted
terminal: typeahead state management for verified lines
Stores the actual config object in the cache
üíÑ
Changes to use TernarySearchTree
Splits out loop & uses regex to improve perf Addresses PR feedback
Adds default context caching for objects Clears  all cached config context values for objects
use rename info instead of highlight info
explore on-type-rename for TypeScript
adopt latest references viewlet, https://github.com/microsoft/vscode/issues/85636
trustedDomains: loosen restrictions on what a * can be fixes #110501
Remove "files.autoSaveDelay" from Commonly Used
Adjust debug toolbar shadow (fixes #110422)
Remove unneeded constructor from TreeItem2
Add missing bit of TreeItemLabel API
Add open context to certain commands (#110475)
Add a setting to include word based suggestions regardless of the language
Tolerate strings again (fixes #110432)
fix cmd + down in open editors view
#67603 Add new extensions automatically to the list
open editors: introduce sorting
dispose list elements on list dispose
fixes #110429
tweak fix for #29210 and thereby fix https://github.com/microsoft/vscode/issues/106090
fixes #104061
window - fix undefined access
:lipstick:
windows restore - add a new setting choice to restore the previous session even when opening a file or folder
use 'enablement' instead of 'preconditions'
render activation events as code
editors - fix listener leak (#110336)
Don't show users a notification if a save is cancelled (#110344)
Add support for web TS Server logging over postMessage
Use toOpenedFilePath to ensure we don't ask TS server for projectInfo if a file is not open
Make sure we use the same path normalizer in a few additional places in buffer sync
Make ResourceMap treat the same file with different scheme as different
fix #40713.
terminal: update typeahead tests
fix #109765.
fix #74622.
insert a 1 sec delay before using a newly created integr. terminal; a companion fix for #38578
terminal: only start typeahead predictions after the first prediction for a line is valid
fix https://github.com/microsoft/vscode/issues/110420
config: disallow nested config resolver keys
#102906 add tests
#102906 tweak wording
Set StorageTarget in auth service, #109967
#102906 wording tweaks
clarify effect of command enablement
debug: fix integrated terminal not changing drive
fix #90897.
clear find widget reveal timeout
debug: normalize drive letter in loaded sources view
fix #84772.
update pattern and add to grammar
Update drop shadows (refs #92301)
fix #106570
insert a 1 sec delay before using a newly created terminal; fixes #38578
let CommandsConverter actually convert commands, make sure "magic" commands handle uri components
tweak throttle based on actual numbers
report `suggest.durations.json`-even only every 500th time
fix #110410
explorer: use EditorResourceAccessor
fixes #65188
update monaco.d.ts
adopt feedback for #109923
explorer: reveal diff editor
fix reading store from config
#109056 remove hack to use dialog service
preview - fix italic for description
do not remove from remote if key is not registered - compute unregistered keys from last sync state
do not remove key in cloud if it is not registered
add commit characters to explain mode, https://github.com/microsoft/vscode/issues/110382
layout code lens content widget when adding commands, fixes https://github.com/microsoft/vscode/issues/110332
don't resolve code lens when typing, immediately resolve code lens after receiving them, fixes https://github.com/microsoft/vscode/issues/96783
fix alpine build
Better compacting of URLs in ports view
fix sandbox
debt - make dialog handlers a workbench core piece
distro
cleanup linux alpine build
fixes #110353
remove old forUris, rename forUris2 to forUris, https://github.com/microsoft/vscode/issues/110241
Try to fix the build
surround match in zero-width spaces to avoid clobbering
Removes deprecated IDefaultLayout interfaces
Disable markdown smart select tests #110365
Extract getParentFlowToElement
Pass webview editors an explicit scoped context key service
Use UriIdentityService for #110241
reuse source code editor
notebook: echo complete error object on preload function exception
notebook: execute kernel preloads in series
make search editor ranges work for hidden text
make search editor ranges work for hidden text
Better support dragging and dropping with webview views
Hook custom editor backup cancellation into the extension layer
fix catastrophic backtracking when parsing markdown files (#109964)
allow init dimension for the diff editor and left/right side editors.
Support ctrl+v PS override on Firefox too
Update decorations synchronously when the wrapping info changes
Applied feedback
fixup!
Support character markup in mardown smart select (#110195)
fix build
Potential fix for microsoft/vscode-internalbacklog#1604
add no-drag to context view css in menu.ts fixes #110282
fix #105757.
Remove registered color for selectBoxCustom detail
fix #108950.
:lipstick:
Refactor DialogService to use model and contributions (#109980)
debug: add ability to close exception widget
Remove unused variable
quote powershell arguments properly; fixes #68151
terminal: fix typeahead edge case
#110241 fix tests
Remove participants list from comment headers
adopt latest references viewlet extensions, https://github.com/microsoft/vscode/issues/85636
Allow context view to align with anchor (#110277)
#110241 Adopt TernarySearchTree.forUris2
Style terminal scroll bar on Firefox
Force ctrl+v to not be sent to shell in Firefox
fixes #103031
clarify explorer.enableDragAndDrop setting
fix focus issue on list
Don't change LANG vars containing 'euc'
:lipstick: remove LinkedList#toArray which became obsolete with iterators
polish when selecting config
Allow word wrapping in diff editor
Make inline lightbulb aware of wrapping of changed or deleted lines
added GH PR extension to list of tracked repos
fixes #40295
word based completion includes words from other files of same language
fixes #110304
correct codicon size for code lens placeholders
Render char diffs in the wrapped deleted or change lines in the inline diff
:lipstick:
:lipstick:
debt - race more minimal edits computation against 1sec timeout
fixes #104945
fix https://github.com/microsoft/vscode/issues/109776
Adopt TernarySearchTree#forUris2 (#110241)
Push view zones in the original editor when the original lines are wrapping in the inline diff case
strict path casing in extension host profiler, https://github.com/microsoft/vscode/issues/110241
Diff editor: show path as description (fix #109224)
add IExtUri#ignorePathCasing, use forUris2 in decorations service, https://github.com/microsoft/vscode/issues/110241
make default not ignore path casing, https://github.com/microsoft/vscode/issues/110241
add TernarySearchTree#forUri2 which allow correct path casing handling, https://github.com/microsoft/vscode/issues/110241
restore old case ignore behaviour unless explicitly set
scmViewPane: do not render whitespace in commit message input field (#107913)
:lipstick: use async-await for code lens provider logic
fixes #110290
update code lens when editor gains focus, https://github.com/microsoft/vscode/issues/83363
Revert "Use editor base weight when contributing peek commands, fixes https://github.com/microsoft/vscode/issues/109727#issuecomment-720986472"
editor preview - ensure simple file dialog opens pinned too
fix build
show extension editor manage action always
Including ` as part of foldEndPairCharacters (#110108)
Enable IgnoreMenuShortcuts for iframe based webviews
search: fix freezing ui on long lines
Tweak shadow colors
Set explicit StorageTarget for webviews
fix #108765.
Improve rendering of view zones with changed or deleted text (inline diff editor)
fixes build break
Clean up drop shadows
Render inline diff view zones in batch
Do not store the original content in the diff information for inline diff margin actions
add setting for code lens font family and size, https://github.com/microsoft/vscode/issues/16038
:lipstick: code lens
Use Array.flat() (#110189)
Add `IViewModel.createLineBreaksComputer()`
terminal: allow excluding programs by name from typeahead
update language
fix #105920.
Adopt storagetarget in Exp services refs #109967
reduce work when menu is not visible fixes #108712
Update seti
Add color tokens for warning/info bg
fixes #109781
no max width for welcome buttons
fixes #105201 Co-authored-by: rebornix <penn.lv@gmail.com>
Push view zones to accomodate equal but differently wrapped lines
:lipstick:
:lipstick:
Be aware of line mapping when rendering diff view zones and diff overview decorations
feat: implement Git: Push Tags command (#110096)
group uninstall and install another version actions into same group
:lipstick:
:lipstick:
:lipstick:
Allow user tasks to run when no folder is open
Pass in actual editors
Small refactorings
remove duplicated context key expressions, fixes https://github.com/microsoft/vscode/issues/97381
improve message when files is too large for formatting, fixes https://github.com/microsoft/vscode/issues/105986
set line height for suggest details, fixes https://github.com/microsoft/vscode/issues/110172
window - some renames :lipstick:
tweak setting name `editor.suggest.showInlineDetails`, #109690
git.publish: do not await notification resolution related to #109977
Setting to Disable Split Editor on Drag and Drop (fix #71016)
:lipstick: let -> const
fixes #110012
fix https://github.com/microsoft/vscode/issues/97451
fixes microsoft/vscode-remote-release#3180
Renames
add vscode-test
:lipstick:
Rename option to `scrollByPage`
files - stop checking for BOM before writing
Keyboard shortcuts for switching focus between left & right sides of diff view (fix #95068)
debt - fix compile errors in bootstrap files
editors - add workbench.editor.enablePreview to most commonly used settings
Log number of loaded certificates (#91794)
only hide outputs when output is transient.
fix #89250.
Correct themeLabel in package.nls.json for "Tomorrow Night Blue" theme
hover info should not be broken within word (#106885)
feat: add setting for default stash message
fix: commit template appears as default stash message
feat: detect default stash message use commit message as default stash message if commit message box is populated
Add more logging to github auth provider
Unassign myself from the classifier
clean up code and remove unused methods
Bump actions & fix #109699
Use string.matchAll (#110074)
Adopt StorageTarget in searchEditorInput Ref #109967
Escape backslashes in issue reporter data, fixes #105494
explain why we modify textarea input handler in firefox.
add comments to clarify code
Use excludive selectors for search editor contributions to fix #91453. cc @jrieken
fix #105901.
disable submenus rendered as dropdowns (#109934)
Add vscode-encrypt to nativeignore
Bump vscode-ripgrep
debug: do not auto pick dynamic launch configs
Align configure task quick pick closer to terminal Part of https://github.com/microsoft/vscode/issues/93864
fixes #110077
debug: stop supporting enableBreakpointsFor
debug: remove legacy adapterExecutableCommand
fixes #96264
debug: split ConfigurationManager into ConfigurationManager and AdapterManager
remove deprecated debugAdapterExectuable debug proposed api
Only reset theme icon color in treeview once
Improve the dynamic launch config UI
Fallback to userhome when no "file" scheme folders open (#110066)
web - set version to 1.52.0-dev
fixes #92146
fixes #95599
fixes #40548
In case of multiple possible longest common substrings, try to give preference to the ones containing the most ammount of text
Add and propogate new sensitivity options
Add scrollable options to list view options
Add scroll options to list view options
Always use `vscode.open` to open markdown links
Allow cancelling GitHub sign in, fixes #109101
fix #93326.
Update JS/TS grammars
adopt StorageTarget in SCM #109967
debug: fix debugees blocking when writing stderr
removed unnecessary important  from outline-offset in checkbox
debug: cancel hover evaluate requests when hovering off dialog
Specify type of CodeLensProvider instead of using casts
Exclude definitions from js/ts references code lens
Finalize the isWritableFileSystem API
fix #74353
fix #70306.
added outline offset to checkbox to make focus visible.
Add Definition list to Markdown Snippets (#110026)
Add color token for error bg
fix #57197.
remote indicator :lipstick:
add git CommandErrorOutputTextDocumentContentProvider
Mention Inherit Env setting (fixes microsoft/vscode-remote-release#3030)
fixes #92034
:lipstick:
Remove focus when scrolling (#94280)
Added a warning before dropping a stash. (#94267)
fix typo
preview - pin an editor when a navigation starts to another editor (#109779)
Update grammars
Remote Host status bar entry has no max width (fix #107451)
explorer: Revisit explicit use of ConfigurationTarget.USER when updating config
updates
fix #7989
IconLabel markdown title debt (#109914)
layout - write to correct config target (#109373)
Added a grooming delta notebook
Remove unnecessary argument (#109373)
fix stray console.log
typescript - fix nls issue
Revisit explicit use of ConfigurationTarget.USER when updating config. For #109373
Revisit use of ConfigurationTarget.User in tasks Part of #109373
Adopt StorageTarget. For #109967
editors - add a menu item to keep editors open
Adopt storage target in tasks and remote explorer Part of #109967
editors - some preview tweaks
#109373 do not pass user target
storage - adopt more storage targets (#109967)
Storage service error in shared process console (fix #109985)
Loc comment #100941
Pick up latest TS nightly for building VS Code
Disable rename after refactoring in interactive playground
fix #105614.
Handle cancelled sign in when publishing to GitHub, fixes #96502
fix #27836.
Show dialog when there are no trusted extensions for account, fixes #96359
Clear trusted extensions on sign out, fixes #96616
php: revert break deindent behavior
terminal: unregister csi handler when not in use for performance
Rename implicit project settings and deprecate old ones
Use objects.equals for comparing configuration objects
Extract implictProjectConfiguration class
Add two new setting for strict null and strict funtion in js/ts that are implicit projects
Quote jsconfig and tsconfig in setting
#109896 Remove IStorageKeysSyncRegistryService and introduce new service for syncing extensions storage
Explicit fontLigatures description
terminal: clear typeahead after timeout
Extract adjustFoldingEnd
Show closing ) while folding JS/TS
Pick up TS 4.1-rc for insiders
add comment
#109967 Adopt to new storage API
Add splitLines helper  function (#109869)
notebooks: expose scriptUrl global to renderers and kernels
Remove unused variable
Update comments panel message text, fixes #91623
fix: run to cursor with multiple paused sessions
fix #54829
fix #109486 and #109489
Adopt IStorageService.store2 in terminal
fix https://github.com/microsoft/vscode/issues/103818
debug: adopt storageService.store2
adopt StorageTarget, https://github.com/microsoft/vscode/issues/109967
storage - avoid Object.entries in platform
fix tests
reverse the eye open/closed icons for hiding snippets
storage - adopt some StorageTargets
Update C++ grammar
add another test for https://github.com/microsoft/vscode/issues/96545
Explorer: move off iterating over file changes
sequencer for set and reload theme operations
cleanup for #89313
adopt storage changes in extension bisect
fix flawed comparison, increase threshold
Lint Spr√ºngli
[css/html/json] Randomize inspect ports to avoid conflicts
remove unused import
:lipstick:
storage - document enum better
storage - rename storage change event
don't presist little size changes
add command to reset suggest widget sizes
adopt to new storage api
:lipstick:
adopt using new storage service to sync storage
Add icon in Windows explorer window (#86283)
fix compile and tests
test name
some comments and more tests
workspace color theme setting not picked up
fix https://github.com/microsoft/vscode/issues/101870
another failing/skipped test for https://github.com/microsoft/vscode/issues/101870
add to #109818
test machine storage is not synced
store synced state in user scope
fix tests
make snippet prefix optional and hide snippets without prefix from IntelliSense and TabCompletion, fixes https://github.com/microsoft/vscode/issues/73635
- Use global keys with user scope from storage service to sync - Remove versioning of keys
storage - add target to change event and cache targets
tweak wording
bulk edit - respect sideBySide options from event
do not show sync icon when extensio is not installed
Supress marked logging for using sanitize
Changes to const enum
Moves newline handling into the hover Adds enum for parameter
Avoids paragraphs for newlines in string tooltips This better matches the native tooltip styling of newlines
[json] use links for $ref, not goto definition (fixes #101474)
Use `self` directly
1.10 is bad on macOS, revert this temporarily Revert "chore: bump vscode-ripgrep@1.10.0"
debug: allow serverReadyAction to run a launch config by name
Warning when invoking explorer.newFile (fix #100604) (#109905)
OnTypeRenameProvider API wording
:lipstick:
Remember History on Debug Console filter between vscode sessions
fixes #99709
format
update milestones in notebooks
fix markdown string integration test
Include description in custom tree aria label Part of #108480
fixes #64188
expose snippet enablement inside "Insert Snippet" picker
add persisted snippet enablement
remove unused label
:lipstick: more async-await
git: merge resources should return undefined original resource
:lipstick: async-await
Remove iframe around web worker in codespace case
:lipstick: snippets
appendText should escape leading whitespace, should escape leading quote character, also remove duplicated implementations, fixes https://github.com/microsoft/vscode/issues/68983, fixes https://github.com/microsoft/vscode/issues/109040
Throw useful error if task execution is undefined https://github.com/microsoft/vscode/issues/109861
Locally, but exported, constants hurt minification (a little) (fix #109899)
storage - let flush return a promise when done
fix bad JSON
Show current debug line in overview ruler
fixes #92709
Open to side: do not first use fileService for resolving, since item is already part of explorer model
Use editor base weight when contributing peek commands, fixes https://github.com/microsoft/vscode/issues/109727#issuecomment-720986472
use item labels for themes
increase job timeout
storage - adopt new API in one place
storage - introduce onDidChangeTarget event
fix message
storage - first cut target support (user, machine)
fix #106857
Strip newlines from the code actions title
debug: improve attach to vscode config
editor cmd+e find with selection.
Make it easier to override markdown table stylings
Update marked
Bump actions
terminal: fix typeahead eol naming
:lipstick:
terminal: cleanup typeahead tests
terminal: update typeahead tests
Remove unused imports
Bump distro
use mouse events for iPadOS instead of pointer events as iOS sometimes does not emit them
terminal: capture cursor position correctly in typeahead backspace
clarify activity bar action menu layout refs #40262
terminal: fix typeahead leaving stray characters with backspaces
terminal: restore old cursor style after failed backspace
add report issue to extension bisect, move issue service interface to workbench/services, allow to file issue against disabled extension if explicitly names, fyi @RMacfarlane
fixes #109849
fix terrapin step
fixes #95697
fixes #71994
:lipstick:
Update xterm.css
fixes #67685
Try new Rust grammar (#108254)
fixes #67315
:lipstick: async-await
debt - make editor smart select a "real" editor option
support ThemeIcon#color in workspace edit metadata, https://github.com/microsoft/vscode/issues/109460
:lipstsick: use underscore for privates
feat: Autodetect npm.packageManager #102050 (#102494)
use gh username for todo-tags, nuke some todo-tags
use label2 when  CompletionEntry#source is a path inside the workspace
do not allow editor override for walkthough inputs, fixes https://github.com/microsoft/vscode/issues/109595
fixes #109818
wording, show number of disabled extensions, option to keep bad extension disabled, towards filing issue
#107657 skip it unitl fixed
web - use unbuffered upload/download for small files to speed things up
Editors: revisit "preview" editors default behaviour (#109779)
[regression] Files served by readonly filesystem show double '(read-only)' suffix in titlebar again (fix #109733)
notifications - reduce weight of ESC for closing if toast has no focus
sandbox - bring in browser based keyboard service to enable basic keyboard usage
enable enableExperimentalProxyLoginDialog per default
storage - IWorkspaceStorageChangeEvent => IStorageChangeEvent
flush storage, some wording tweaks
add "editor.suggest.showStatusDetailsInline"-setting to disable/enable inline details, https://github.com/microsoft/vscode/issues/109690
Use `var` instead of `const` for the `global` variable
chore: bump vscode-ripgrep@1.10.0
Bump version to 1.52.0
Revert "fix #47400"
Revert "fix #109756."
fix #109756.
include common props in trace logs
rename variable to MatchRange to avoid argumentProcessor
Applied feedback
Added extensibility points for searchView/context
fix compilo
tweak wordings
add commands and logic to bisect extensions
fixes #71315
fixes #109700
Rename Symbol (#105154)
relax white-space wrap and allow unless extension has details with newlines followed by intentation (whitespace), fixes https://github.com/microsoft/vscode/issues/109717
Changed shebang same as code.sh (#109372)
Add command to list and attach to orphaned remote terminals
Improve spelling of items relating to nls.localize()
Fire onDidChangeConnectionState at the right time
terminal: fix typeahead move-by-word buffering too much
terminal: fix typeahead buffer being able to affect output when off
update distro
Set initial terminal focus based on connection state
update distro
Allow a resolver to provide the remote connection token
remove unused variables
Update distro
terminal: cover more password inputs in typeahead
save state frequently
fixes #108850
fixes #71315
Proxy auth dialog shown on hidden window (fix #109667)
undo sample change...
remove `editor.suggest.statusBar.visible` and add `editor.suggest.showStatusBar`, fixes https://github.com/microsoft/vscode/issues/109668
Linux Snap: Prevent GDK_PIXBUF env from leaking out (#109608)
proxy - change API to accept severity
fix https://github.com/microsoft/vscode/issues/109658
update outside list
update verify-notebook
fix https://github.com/microsoft/vscode/issues/109650
:up: web playground
typo: tanslations -> translations
web - try workspace scheme for default Uri scheme as last resort (for #109619)
fix https://github.com/microsoft/vscode/issues/109632
dont trigger quick suggest on arrow keys, only refilter, fixes https://github.com/microsoft/vscode/issues/109634
Terminal reconnection - Get rid of¬†awkward "empty tab" concept
fix #109629
terminal: increase default localEchoLatencyThreshold
terminal: improve typeahead naming
Reconnect terminals at startup instead of waiting for the terminal view to become visible
fixes #109566
terminal: more correct style parsing in typeahead
revert scroll to bottom line
fix #109566
add config option to disable whitespace select
terminal: fix typeahead tests
terminal: copy char attributes in for proper cursor maintainence
improve accounts icon submenu placement refs #109603
improve global activity menu placement refs #109603
terminal: fix typehead unit test error
fix #108629.
refs #109603
fix #47400
fix: don't predict git log/less
terminal: make typeahead style more friendly
terminal: fix wrong typeahead rgb codes
terminal: clear typeahead predictions on resize
fix #86929. Range starts at 1.
fix tests #109516
Bump vscode-emmet-helper to 2.0.8
fix #83580.
remove/deprecate the `editor.suggest.maxVisibleSuggestions`-setting, https://github.com/microsoft/vscode/issues/109478
auth - some cleanup
fixes #108046
fix npe
fixes #108641
proxy - :lipstick: jsdoc
Ask again if credentials don't work (fix #109495)
fixes #108444
:lipstick:
fixes #108067
proxy - ask for login again if it fails (via firstAuthAttempt)
proxy - always reply back to main, even if cancelled
proxy - always callback even when no credentials are provided
Scope proxy credentials to proxy host and port (fix #109497)
proxy - allow to use credentials for multiple requests
one more fix for the max list height
fix suggest details west alignment
more jsdoc https://github.com/microsoft/vscode/issues/95209 fyi @sandy081
some more jsdoc for `setKeysForSync`, https://github.com/microsoft/vscode/issues/95209
fix https://github.com/microsoft/vscode/issues/109578
clear details widget when ending suggest session
fix placement issues with details left and new padding, https://github.com/microsoft/vscode/issues/109447
Add border around suggest list and its details, https://github.com/microsoft/vscode/issues/109447
simplify resizable, https://github.com/microsoft/vscode/issues/109447
fix sashes
fix https://github.com/microsoft/vscode/issues/109569
set latest version while merging
message "Would you like to stage all chages?" (#109272)
Untitled file with whitespace causes placeholder title to shrink #109525
fixes #109145
:lipstick: perf
fixes #109573
Notifications no longer detect duplicates if rapidly firing (fix #109504)
:lipstick:
web - clarify window.confirmBeforeClose setting
fix: crash reproter arguments appeneded after '--' marker
#109255 Add encoding description to settings file encoding drop-down
fixes #109305
Rename new terminal setting
Bump distro
terminal: ensure output is flushed before predicting backspaces
terminal: flush terminal buffer before acquiring typeahead cursor
change ctrl/cmd to alt key
fixes #109436
refs #102954
fixes #109435
improve
wip
#95209 Move to final API
Also check "enableTerminalReconnection" when creating terminal
relayout when rendering code blocks
fix #109450
Run OSS Tool & Update Accordingly
fix #95866.
delete obsolete es6-search file, https://github.com/microsoft/vscode/issues/103454
remove unused code,https://github.com/microsoft/vscode/issues/103454
don't reposition details when resizing, fixes https://github.com/microsoft/vscode/issues/109448
follow up for  https://github.com/microsoft/vscode/issues/109461
Remove deprecated methods and refs in terminal
move CommentThread.canReply to d.ts.
fixes #109443
update endgame notebook.
terminal: remove broken line logic in typeahead
better preferred width of suggestions, https://github.com/microsoft/vscode/issues/109461
fix https://github.com/microsoft/vscode/issues/109458
drop userSize at session end, not when hiding widget, https://github.com/microsoft/vscode/issues/109462
web - fix to show no veto if shutdown reason is Api
details wrap normal unless they contain newlines, https://github.com/microsoft/vscode/issues/99370
chore(extensions): incorrect localize key
add TST#deleteSuperstr. fyi @eamodio
Suggest shouldn't trigger on all characters in comments (#109093)
implement PR feedback
add title attribute to details label, https://github.com/microsoft/vscode/issues/99370
Revert "feat: Autodetect npm.packageManager #102050 (#102494)"
fix: UI items are incorrect order when applying the language pack
web - use logservice to log why unload was prevented
proxy auth - use urlProtocol as partition
Register serverSpawn/enableTerminalReconnection settings
Update import
Use find-yarn-workspace-root over find-yarn-workspace-root2 (#109429)
Update viewWelcome documentation to make it clear it only applies to tree views
allow empty submenu rendering fixes #107147 fixes #105005
Verify GitHub tokens on auth provider start, fixes #108680
chore: bump electron@9.3.3
markdown smart select (#108818)
#91054 Show install and sync dialog when installing extensions
fixes #106083
chore: bump js-debug
Add missing semi colon
Error: base must be a non-empty string, or null/undefined.
re #108349. unbind only for macOS
fixes #109304
Firefox: avoid menu actions firing twice (#109374)
update distro
pack emmet including the vscode-emmet-helper (#109257)
[html] update service
send suggest duration telemetry as json raw data
upload-sourcemaps: fix typings
honor language overrides for config.editor.suggest.insertMode-setting
update distro
use uploaded node_modules sourcemaps
proxy auth - switch to warning icon
Do not use `process.env` directly in `findExecutable`
refilter completions when moving cursor inside word, https://github.com/microsoft/vscode/issues/3295
upload production node_modules sourcemaps
#80698 remove license content as it is accessed from repo
fix https://github.com/microsoft/vscode/issues/109362
debug: Do a late activation so extensions are not activated too early
fix git submenus order
update distro
fixes #109307
Git: Add tags to '...' menu (#109282)
don't reset textOffset when column is within first search window, fixes https://github.com/microsoft/vscode/issues/108892
fixes #107860
:lipstick:
Send `vscode.workspace.onDidCreateFiles` events for folders #109088 (#109294)
Reduce host service dependencies #108522 (#109295)
web - throttle upload/download progress update calls
Update SearchView#updateTextFromFindWidgetOrSelection to check seedWithNearestWord
fix https://github.com/microsoft/vscode/issues/108893
updated yarn.lock
fix compilation
inline syncedKeys and remove SyncedMemento type
fix https://github.com/microsoft/vscode/issues/108970
dialog - fix checkbox toggle to work properly
update distro
fix do not show builtin extensions as installed in web
fix https://github.com/microsoft/vscode/issues/108894
proxy auth - implement a way to remember credentials
enable version check
add failing (and skipped) test for https://github.com/microsoft/vscode/issues/108894
Forwarded Ports -> Ports
debugHover: keep position prefence stable while shown
add gulp-azure-storage to build
web cdn: gzip files by default
don't rely on GIT path sorting, https://github.com/microsoft/vscode/issues/108292
fixes #109250
:lipstick: update jsdoc
fix https://github.com/microsoft/vscode/issues/109266
keep authored line-breaks for details/type label, tweak sizing, https://github.com/microsoft/vscode/issues/99370
remove semver dependency
adopt latest version of ref-viewlet, fixes https://github.com/microsoft/vscode/issues/109293
separate global & workspace memento
proxy auth - introduce new login dialog behind a setting
dialog service - offer new input() method
dialog - add support for showing inputs
widgets - more focus related methods
Changes URI -> Uri
build: improve ignores in node_modules
notebooks: hide acquireVsCodeApi from renderers (#109273)
fixes - merge sync state always when extension is updated - compare version to update remote extensions with version property
set state while massaging outgoing extension
build: improve ignores in node_modules
fix calling registerExtensionStorageKeys in ipc
fix listening to extension storage keys in ipc
add syncedKeys to proposed API
:lipstick:
consider version while merging extension state
intrdouce ISyncExtensionWithVersion type and use it for local extensions
trigger extension sync when - extension registers sync keys - extension state has changed
sync extension state only if version matches
do not sync extension state when extension has not registered any keys to sync
notebooks: hide acquireVsCodeApi from renderers (#109273)
Enable syncing extensions storage - Implement logic to sync extension storage - Register keys to sync provided by extension
add apis to storage keys registry service to register extension storage keys
introduce IExtensionIdentifierWithVersion
Mark DocumentSelector as readonly (#109212)
Don't leave a danging "Starting..." empty terminal tab, and don't create one if there are other tabs already
Ensure that "starting" label shows up for all new remote terminals
Remove deprecated authenticationSessionId from embedder API cont
Remove deprecated authenticationSessionId from embedder API
terminal: fix typeahead error
terminal: improve typeahead handling for wrapped lines
Replace `map` with `forEach` (#109217)
Update README.md
add logging when running into event cap, https://github.com/microsoft/vscode/issues/108292
when capping decoration events pick somewhat smarter, https://github.com/microsoft/vscode/issues/108292
Don't reattach to a terminal that is already attached
Add feedback wiki link to readme #109087
Handle incomplete login requests gracefully, fixes #109102
fixes #107650
progress bar: set aria roles
fixes #108999
debug: use uriIdentityService for uri comparison
explorer: use UriIdentityService for uri comparison
disable explain mode when suggest widget hides, fixes https://github.com/microsoft/vscode/issues/80983
debug hover: respect editor hover delay
nuke unused import
debt - remove unused suggest widget telemetry
Wait for extension registration (fixes #108378)
:lipstick:
layout suggest widget when re-showing items
:lipstick: completion provider display names, https://github.com/microsoft/vscode/issues/109167
web - adopt modifier key emitter for shutdown prevention
move storage keys sync registry service to shared process
User custom hover at iconLabel level (#108403)
Do not insert iframe as child of `document.body`
fix tests
debt - adopt host service in extension host debug service
Consolidate ModifierKeyEmitter and AlternativeKeyEmitter
tweak snippets type label
keep custom size around until details closes, https://github.com/microsoft/vscode/issues/109160
log/telemetry for completion durations, https://github.com/microsoft/vscode/issues/29126
set cache control for web cdn
Add fallback when long host for auto port can be parsed
add trigger characters to extension id as a weak way to make providerNames more unique, #109167
log/telemetry for completion durations, https://github.com/microsoft/vscode/issues/109167
when merging suggestions use clipboard from previous set, better fix for https://github.com/microsoft/vscode/issues/102330
Move "Install VSIX" menu after the default menu groups
update distro
Remove readonly
Editor tab shadow is rendered on top of contrast border (fix #109117)
Also enable errors and warnings in interactive playground
Enable semantic features in interactive playground
Add insertSpaceAfterOpeningAndBeforeClosingEmptyBrackets formatting setting
Highlight branchs upstream if defined by placing item first in picker
Renamed rebaseOnto to rebase
Update description of why we're using posix join. Ref #108566.
Make indexedb tests work on windows. Ref #108566.
Add telemetry for terminal reconnection
Don't persist debug terminals #109084
fixes #109128
- use --install-builtin-extension arg instaed of --builtin flag to install builtin extension - speed up installing extensions in cli
SCM viewlet filter on type improvements (#109170)
:lipstick:
Skip windos
Initial scaffolding for indexeddb fsp testing. Ref #108566
move menubars modifier key emitter to dom.ts refs #109062
fix compile error
Add localization comment for authencationExtensionPoint, fixes #108971
Add localization comment for reportPerformanceIssue, fixes #108979
fixes #106505
fix compile error
Add "Focus Activity Bar" action
fix https://github.com/microsoft/vscode/issues/109149
remove console log
Deduplicate same decorations so colors do not stack
Boost extensions from formatting and programming categories for default formatter selection
update distro
Don't reconnect to task terminals
chore - remove decoration service logging, fyi @bpasero
add CompletionItemModel#durations, #109167
measure duration for completion provider from extensions, #109167
duration for word based suggestions, Perf telemetry for completions #109167
fix compilation
define CompletionList#duration and adopt in snippets provider, Perf telemetry for completions #109167
On Linux use a different example (fixes #18902)
Revert "super" (happens when you don't use VSCode for Git stuff)
super
sync extension if machine scope is not specified
Use dropdown action for extension install - introduce install with sync/donot sync actions
Introduce ignored extensions management service
introduce workbench extension management service
pass install options
Use split dropdown action
fix https://github.com/microsoft/vscode/issues/109159
Add enum key to description when there are labels
fix details hide-on-scroll issue, move before/after render functions...
:liptstick: suggest widgets, details widget
allow ol-tags in saferInnerHtml, https://github.com/microsoft/vscode/issues/109149
move content widget logic into its own class
Remove hardcoded URL
:lipstick: state handling
sync persisted color theme data
better status bar sizing when using custom font sizes andline heights
Cleanup typing
Use own domain
simplify labels, fixes https://github.com/microsoft/vscode/issues/108987
simpler action rendering, render enter as symbol
hide status bar overflow, https://github.com/microsoft/vscode/issues/88749
Add Git: Clone Recursively option
debt - retry sqlite tests
debug: adopt perScriptSourcemaps options for faster browser debugging
update distro
fixes #109100
update distro
Don't use `data:` as the src of the web worker extension host iframe (#108285)
fixes #108969
fixes #108980
fixes #108985
suggest ux - make sure details scroll bar is updated with each change
Handle simultaneous getSession requests, fixes #106014
fix tests
shrink right label much more than left
have preferred width based on suggestion labels
less flicker of details widget
git: improve status bar message
fixes #108972
Offer to open workspace in root even when telemetry has been disabled (fix #108669)
only show/layout details when wanted
better guestimate for details size
Show an error if the web worker extension host does not start in 10s
only persist what has changed (width or height), not always the full new dimension
place details at top or bottom of list
fix #108977
web - change window.confirmBeforeClose to check for keyboard press only by default
#108522 use ReloadWindowAction
extract UserDataAutoSyncEnablementService from UserDataAutoSyncService
findInFiles: excludeSettingAndIgnoreFiles => useExcludeSettingsAndIgnoreFiles Add args to intelisense registry Ref #107588.
Move to consistent naming for search args. Closes #108750.
terminal: format issue on linux?
terminal: add some unit tests for typeahead
fixes #107752
Only reattach to terminals when serverSpawn is enabled
Remove unused variable
Add background color to lightbulb widget
Server spawn by default
update distro
Add Remote Terminals Restoring
typeahead: update gdpr fragment
typeahead: comment out debug logs
terminal: move typeahead latency into predictor, add dynamic predictor toggle
fixes #102954
Tweaks to comment reaction styling
better resize/layout when showing atop
Remove some deprecated code in ./src/vs/base. For #103454
[themeService] avoid locations in storage
Use classList
add notes
accessibilty: always enable show accessibility help command
"manually" place widget atop or below the cursor
debt - lift resource identity service to workbench where it is used
fix bad import location
debt - lift lifecycle service to workbench layer
web - disable linear-gradient in safari for now (#108996)
position tweak, persist size per editor type
better presisting of sizes, simplify layout, fix issues with status bar
Move restoreForwardedPorts setting to common
Port display polish
call stack: show running when call stack empty and only one session present
Remove usage of dom.addClasses (for #103454)
web - allow to dispose the workbench
wip - resizable list and details
remove deprecated code usages
SCM: Support past commit message navigation (#107619)
trusted domains - remove console.logs
explorer - tweaks to upload/download
use try catch
Update OneSnippet#move method to fix #96545.
Use looser check for active element when re-focusing webview
Re-resolve webview views when extension host restarts
link protection - read remotes only once on startup (#108938)
fixes #102345
add period
fixes #99069
Don't show loading and project loading status for in-memory JS/TS files
Extract some functions in markdown renderer
Add title to commands in release notes
Pick up new TS for building VS Code
get into a dogfooding state
Rewrote logic
update
cursor moves for nix
add beforeRender and afterRender to IContentWidget
add dom.Dimension#with more modification, adopt class-vs-interface usage
polish
Update deps to include libgbm (#107611)
Use new helper extractAbbreviation function
Refactor Emmet abbrevationAction files
fix GDPR annotation
Settings copied only once (microsoft/vscode-remote-release#484)
Add hint (fixes microsoft/vscode-remote-release#486)
fix bad quick access when tabs disabled (#107543) (#108736)
#108548 do not apply padding for output
move assertions out of promise
add message to assertion
debug issues assign to Andre
fix typo; fixes #108339
Abort rebase command polish (#108919)
web - allow to download folders (fix #83579)
towards details as overlay widget
:lipstick:
Improve window.withProgress in status bar to use a static spin icon (fix #108657)
Implemented rebase onto
Update matchCase and wholeWord options when updating text from find widget in SearchView
Update callback url for ms authentication when not using local server
Trash/delete shortcut for forward delete on MacOS
left aligned values
closes #97890
backup - wire cancellation into backup() method
Cannot close tab opened by piping to `code -` (fix #108752)
Set extension on webview views
Cleaning up code
Migrate off of require.toUrl (#107620)
Remove deprecated API usage from search #103454
fixes #991
get it in a better state, support for more codes
update distro
code.sh: Prevent stealing of stdin (for #99815)
Bump vscode emmet helper to 2.0.5
fixes #108307
fix #107890
web - rename to window.confirmBeforeQuit and show in file menu for awareness
avoid publishing test results for non x64 linux
wip - resizable suggest widget
Remove unneeded extensions
fixes #108714
Increase the timeout of tryActivateProvider
update distro
add retries for test that depends on focus (#108727)
fix sash styling for monaco editor
backup - wire in cancellation token to implementation
backup - add cancellation token for more clever cancelling of scheduled backups
fix(git): fatal when adding, reverting files or cleaning repo on win32 (#108691)
Web: do not disable backups when auto save is enabled (fix #108789)
web - do not enable confirmBeforeQuit per default if running in kiosk mode
Add explorer context menu to install an extension from a VSIX (#108787)
Protect from throwing `IWorkbenchExtensionEnablementService.isEnabled`
use terrapin
web - allow to close workbench under certain conditions
wip
chore: bump electron@9.3.2
Update vscode.d.ts
chore: bump distro
chore: bump vscode-nsfw@1.2.9
update search file
:lipstick: insane options creation
updates
notebook for missing type, missing feature area, https://github.com/microsoft/vscode/issues/108472
fix https://github.com/microsoft/vscode/issues/90834
[json] increase rangeFormatting editLimit to 10000 (for #97138)
getting latest tsec, update yarn lock
use latest version of references viewlet, https://github.com/microsoft/vscode/issues/108726
debt - btoa/atob is not core
update references viewlet
Remove unneeded return
Add enumItemLabels to IConfigurationPropertySchema
:up: distro
fix build
:lipstick: dependencies of workbench
debt - add and enable mocha/no-exclusive-tests rule
Remove .only
Use previously active signature if sig help is retriggered while a sig is still being resolved
fix #108673 put thrown error message into notification
Only mark custom editor as non-dirty once save has completed successfully
Clear focus before when focusing on webviews
Correctly mark WorkingCopyCapabilities.Untitled for custom editors
remoteAgentTerminals: Only show "Starting..." for a terminal created before we have a connection
fix download issues in webviews (#108603)
Add force refresh case for #108670
Remove unnecessary interface
update distro
Introduce Remote Terminals
Update Emmet on save of snippets file #108670
Enable tsec language service plugin
link privacy statement in telemetry setting
re #108349. do not bind keybindings cmd+v in terminal on web.
Trust all of github if you're signed in to github. Closes vscode-internalbacklog/1492.
Update devcontainer cache branch logic
notebook overlay, relative top of workbench.
publish web bits scoped to quality
Always show ports status bar entry when remote
running applications -> running services
upload web to CDN
web - introduce `window.confirmBeforeQuit` setting and enable by default
Custom dialog: "Save Workspace As..." does not put proper name (#108313)
chore: bump distro
add arch for darwin publish step
Update ThemeIcon ThemeColor jsdoc Part of #103120
Port related string improvements
dialogs - make sure to put mnemonics for button labels
debt - adopt multibyteAwareBtoa and add tests
Update trusted domains to work with IPs. (#108634)
re #108349. Allow copy on text in static output.
vendor prefix for user-select.
refine notebook copy/paste when clauses.
add when clause for copy/paste command in notebook editor.
avoid awaiting for all extensions if possible.
Use multi-byte aware version of btoa
Use less strict regular expression for parameter hints
Restore injection grammar for multiline jsdoc types
Bump vscode-emmet-helper to 2.0.4
fix #108350.
[html] update services (for #108016)
Avoid needing the entire `IConfigurationResolverService` for variable resolving & more explicit typing for `fetchSetting`
re #108267. add trace log for window viewport resize
Update vscode-emmet-helper to fix #104962
[css] update service
Simplify language in automatic port forwarding notification
remove echos
ESRP Cert (#108366)
Update ThemeIcon2 proposal to expose themeColor
`relativeFileDirname` gives empty string when the Dirname equals to current working directory (#108588)
:up: chokidar@3.4.3
build - fix warnings in TS files
Pinned tabs need more prominence (fix #108211)
fix isValidNPMName
diff editor - guard against btoa failing
debt - clean up event names in native host
Pinned tab doesnt scroll to focus (fix #108561)
window - fix unhandled error in window tracker
debt - :lipstick: env service identifier
Update Codicons: shrink pin icons https://github.com/microsoft/vscode-codicons/commit/396f3fa9d31878481bca3b8a3e3ffee77cafae8f
revert unnecessary changes
Update distro
fix #69586.
Do not exceed credential manager length limit on windows, fixes #108411
fix #107154.
add revert button for cell input change.
Closes #91695 - adds emoji support
Polish onDidChangePassword changes
debt - no _ in my code
ipc test - remove unused code
add blur command
ipc - rename methods and add tests
update seti theme (fixes https://github.com/microsoft/vscode/issues/108185)
debt - move IPC handle methods into one place
JSON Language Server 1.3.1
fix compile
environment service :lipstick:
web - workaround #108522
debt - lift more environment properties to electron-main
debt - introduce environment main service to have properties there exclusively
fixes #108371
Update regular expression option when updating text from find widget in SearchView
Extract updateText method in SearchView
Add atomicSoftTabs in one place that I missed
Move mouse handling to a lower level to handle more cases
Add atomic tabs option
Revert "fix #105614. Show color picker on click."
:lipstick: 57dd72c09e98a2645cb6afe77701edfd51ed9d10
Typo hightlight -> highlight
Measure terminal echo latency
Move encryptionService registration to correct file, fixes #108230
ACCOUNTS_ACTIIVTY_ID -> ACCOUNTS_ACTIVITY_ID (#108384)
Removing polling from auth extensions, fixes #107480
Joao out of vacation
fix #94445.
fix #62619.
Bump actions
fix #105614. Show color picker on click.
re #105614. hover on color decorator should trigger color picker.
fix #108406. openNotebookDocument.
remove userdataprovider api
enable syncing extensions in web by default
support user built in extensions
Update distro
Tie Actions workflow to lock files so minor edits do not trigger it
more uppercase
Add updateTextFromFindWidgetOrSelection method to SearchView
avoid innerHTML in diff editor, fyi @alexdima, https://github.com/microsoft/vscode/issues/108400
Register command
update search file
avoid innerHTML in context view, https://github.com/microsoft/vscode/issues/106395
Persisten -> Persistent
dispoables -> disposable
Implement a selection paste action in terminal
Ignore LineDecoration order when comparing
use trusted html for playground, fyi @JacksonKearl, https://github.com/microsoft/vscode/issues/106395
some :lipstick: and reuse, https://github.com/microsoft/vscode/issues/106395
use trusted html in issue reporter, fyi @RMacfarlane, https://github.com/microsoft/vscode/issues/106395
feat: Autodetect npm.packageManager #102050 (#102494)
Disable `<iframe>` wrapping on Safari for now (#108285)
use async await
Revert "remove support for disabling syncing extension from cli"
Closes #97407, #93405
use trusted types policy and sanitizer for static authored help contents (#108332)
fix #108197. Filter empty undo/redo element.
fix #108168
Dev container cache image generation
CodeLens activated on mouse up #107736
updates search file
cell renderer tweak wrt to tt policy
tweak one more innerHTML-usage inside viewLayer, https://github.com/microsoft/vscode/issues/108240
use textContent for style-elements, fyi @alexdima, https://github.com/microsoft/vscode/issues/106395
use textContent to set styles, fyi @mjbvz, https://github.com/microsoft/vscode/issues/106395
less innerHTML in processExplorerMain, fyi @RMacfarlane, https://github.com/microsoft/vscode/issues/106395
text files - more tests for undo
Add Non-Wrapping EditorGroup-focus actions (#108071)
log - remove changes no longer needed
web - better resolve log level
:lipstick: for events
use tt policy when rendering html from markdown, https://github.com/microsoft/vscode/issues/106396
update distro
remove unneeded escaping
remote unused import
use startsWith
#108164 adopt to e.affects
Markdown reference links starting with ^ should not be clickable (#108015)
web - add support for setting log level (#108267)
fix #107917
canReply
Align all input heights (fixes #93022)
Update Codicons: add 'pinned-dirty' (refs #108211) https://github.com/microsoft/vscode-codicons/commit/b7e57c3ba9c3be119ca8f765d9ed6304c2c2ecb7
Remove "Escape" wording from search aria labels. Closes #100927.
debug: try to wait for a debugger before running extensions (#108141)
debt - clean up some deprecated context keys
adopt new file event api in snippet service, https://github.com/microsoft/vscode/issues/108164#issuecomment-705010296
files - add method affects() for file changes (#108255)
debt - use import type when referencing workbench.web.api
:lipstick:
debt - deprecate access to configuration from environment service
chore - allow to pass markdown options to render-call
debt - make updating backupPath in environment more explicit
chore - consolidate markdown rendering more, reduce innerHTML usage, related https://github.com/microsoft/vscode/issues/106395
debt - lift more configuration properties info environment service
debt - reduce usage of environmentService.configuration
debt - inline remoteAuthority into workbench environment service
chore - simpler code rendering
chore - prevent double markdown parse fyi @mjbvz
chore - remove duplicated markdown renderer by making one more powerful, fyi @rebornix
use trusted types policy in viewLayer, https://github.com/microsoft/vscode/issues/108240
Remove unnecessary model creation in walkthrough pages (#108226)
chore - todo removal
Update default color tokens for last pinned tab border (#108207)
test - check for dirty flag too (#107739)
text files - :lipstick: backup loading
add subscribers to notebook issues
Check token scopes for manually provided tokens
move output logic out of codeCellRenderer.
Make icons inherit color (fixes #85182)
Add getPassword, setPassword, and deletePassword APIs, #95475
Finalize test for #107739
Add test for #107739
Use original uri in display contexts. Closes #107776
:lipstick:
fix notebook extension compile errors.
ensure backwards compability.
fix: allow debugging unit tests in web/codespaces
text files - logging :lipstick:
text file model - track saved version ID only when file saved
fix https://github.com/microsoft/vscode/issues/108090
Update grammars
Finish clean up around optional arg in CKS updateParent Part of #107903
remove strings.pad
avoid innerHTML usage fyi @roblourens, fixes https://github.com/microsoft/vscode/issues/104661
update search file, remove unused functions, https://github.com/microsoft/vscode/issues/103454
Revert "cancel input before executing new command; fixes #106743"
support "@types" in treeshaker
fix https://github.com/microsoft/vscode/issues/108162
files - use ternary search tree for file changes events
file model - allow to load a model with contents and use it for working copy move/copy (#108115)
typings - remove manifest json that no longer seems to be required
Remove extra whitespace in the untitled editor label (#108039)
dev - stop proposed API console spam when running vscode out of sources
themes - add last pinned tab color to default themes
reduce redundant relayout in notebook diff editor
push diff editor relayout to next tick, to avoid height change side effects when updating original editor first.
:lipstick:
Move acitve/visible notebook editors to window namespace.
Removes deprecated calls - #103454
fix #107876.
fix #108010.
Update extension gear color
Make extension icon inheirt foreground color (ref #106963)
remove unused edit types.
join cells through workspaceEdits
Use the same undo redo group for notebook editing
Revert change to make CKS#updateParent argument optional Related to #107903
fixes #107903
make submenus static
update distro
debt - increase timeout and retries for #108113
add trusted-types to monaco compile
test - harden async test
no more emmet ignore
Don't allow remote explorer views to move out of the container (#108105)
Add new property to IConfigurationPropertySchema
Url finder for tunnel service doesn't always forward Part of #107243
add and adopt trusted types apply util, https://github.com/microsoft/vscode/issues/106396
don't stringify tt before applying it, https://github.com/microsoft/vscode/issues/106396
use tt policy in cell renderer, fyi @roblourens, https://github.com/microsoft/vscode/issues/106396
add trusted-types to types-enumeration
document require.toUrl use (close #107440)
use trusted types definitions from definitely typed, https://github.com/microsoft/vscode/issues/106396
Read file contents as stream in ChangeEncodingAction (#108052)
suggest :lipstick:
Move changes to scmViewPane
fix https://github.com/microsoft/vscode/issues/99370
update search file
update es6 search file https://github.com/microsoft/vscode/issues/103454
have all suggest styles in one file
ignore path casing for workspace folders, https://github.com/microsoft/vscode/issues/108095
map TernarySearchTree iterable
extract suggest widget renderer into its own file
fix close details position, tweak left,right ratios
fix #107935 by throttling notifications
config - adopt FileChangeEvent#contains
scm - adopt FileChangeEvent#contains
files - use file event methods to check for updating model
code :lipstick:
:up: version to 1.51.0
fix typo: eventLister -> eventListener
Update Remote-Containers command name to "Clone Repository in Container Volume"
setPreserveCase
fix https://github.com/microsoft/vscode/issues/88852
use flexbox for list/details layout, no more float and absolute positions, fixes https://github.com/microsoft/vscode/issues/90053 and fixes https://github.com/microsoft/vscode/issues/102089
chore - extract suggest status widget
more suggest label tweaks
chore - suggest status styles in one place
use title attribute when having long names
CSS tweaks for complex suggest labels
Initially hide suggest details
css formatting, fix line height issue
cleanup, also allow to untoggle details on every item, fixes https://github.com/microsoft/vscode/issues/90094
chore - suggest details move into separate file, some :lipstick:
debt - todo-tag removal
no more implicit path magic for UriIterator, https://github.com/microsoft/vscode/issues/107886
set the values to passed functions
:lipstick:
fix #107438.
fix: debug buttons in a nested package.json
update distro.
bot: debug issues to connor
Create empty commit with changed files #107753
JSON Language Server 1.3.0
fix #107850
debug: update js-debug
document ISchemaAssociation.schema
Made id_token optional in ITokenResponse
Add support for opaque AAD access tokens
Remove custom dropdown dev test flag checked in by mistake Get #107909 back to where it was in 1.49
fix #107893
added preserve case and excluse setting in FindInFile interface
bot: tweak js debug log comment format
bot: add js debug log commands
update distro
fix #106215.
Bump actions
fixes #107860
todo-tag
fix #107883
:lipstick:
Update distro
fixes #96293
Handle errors on sockets in tunnel service Part of microsoft/vscode-remote-release#3561
#107695
fixes #107520
editors - let the diff editor compute a good name
OSColorScheme: Separate dark and hc
fix #99492
windows - remove not needed and confusing disable-restore-windows CLI arg
fix https://github.com/microsoft/vscode/issues/106215
update ref viewlet
force .exe, .dll as binary to fix CRLF/LF problems (#107862)
Revert "more logging for https://github.com/microsoft/vscode/issues/100524"
fix #106847
Bumps version of github-browser
Revert "Allow updating the title of a composite even if it is not active (#106892)"
fix #107763.
debug: recover gracefully from a stuck auto attach pipe
#105622 Probable fix
#104626 Use extUri for resource functions
fix #107847.
fix tests
attach hidden notification with silent one
accept recommendation if recommended extensions are installed while it is open
revert unnecessary endgame notebook change
fixes #107580
add my test plan item in endgame notebook.
re #107011.
fix #107647
Make sure to return `Access-Control-Allow-Origin` header also in error case
Save text buffers before renaming to avoid unexpected undo/redo stack elements (#107739)
Add more debugging information to undo redo elements
Deduplicate ports auto forwarded on all interfaces and localhost
fixes #107377
fixes #103073
more logging for startup
disable ext host cached data when developing extensions, fixes https://github.com/microsoft/vscode/issues/105512
Wire up `preconditions` for viewsWelcome buttons, and use it
test-resolver fix prepublish
fixes #107728
Pass group to the undo/redo service even when there is a single text edit (#107739 , #107677)
Fallback to first remote task info when no folder is open Previous behavior was to fallback to local. It makes more sense to fallback to the the first remote details instead Related to https://github.com/microsoft/vscode-docker/issues/2350
log paths to open for #99492
fix #107675
editors - adopt uri identity in one more place
remove nvmrc
editors - more fixes around editor resources in "open with"
editor overrides - go back to canonical resource for now
search - use original URI for getOutOfWorkspaceEditorResources
search editor - go back to canonical URI for now
Update README.md
fix startup timings computation in timer service
editors - add a bit more clarifying docs
@sbatten keep the build green please
Initial 'Git extension is activating...' in SCM view
Switch to a image for the dev container
Pass executingFilePath to TS server
Disable TS plugins on web
Enable logging for TS Server on web
get contributed notebook provider with the right view type.
Remove extra constructor
Update README.md
- do not show more than one exe base recommendation - exe base recommendation should not hide current recommendation
rename
move endgame notebooke
update pkg json
debug: update js-debug
fix #107652
use time interval trigger instead of window open, also fix using correct maps
fix #106487 Contribute an "activating" placeholder message and button
remove console.log statement
fixes #107670
update inbox notebook
- CSP: force https only when outer page is on https too - bring back wrapping the web worker in an `<iframe>` by default
adopt a bit more uriIdentityService
final newline
try to fix build
Revert "debug: update js-debug"
debug: update js-debug
notebooks: show a more friendly error if preloads fail
remove support for disabling syncing extension from cli
add settings sync enablement handler
Replace strings.repeat
update distro
reset last prompted time if skipped
update distro
skip exe recommendations if they are recommended already
- introduce medium importance exe tips - recommend them each in every 7 days - do not recommend exe tip if a window has more than 2 recommendations
Revert "chore: bump electron@9.3.0"
Update tags for playwright packages
Bumps version of github-browser
Move toc outline color registration #106897
Remove toggleClass
Clean up tabindex hacking to control tab behavior on settings editor #106897
Settings editor üíÑ remove setting "index"
editors - more EditorResourceAccessor adoption
editors - more getOriginalUri adoption
editors - introduce methods to get canonical vs original URIs and adopt
fixes #107308
Bumps version of github-browser
Adds cancellation to children fetch to avoid timing issue on refresh (#107407)
Queue recommendations - show only one at a time - Priority: File > Workspace > Exe
Add keybinding shortcut for "Preserve case" replace option
some :lipstick: around URI identity method usages
fix startup perf telemetry
:lipstick:
debug: minor improvements to callstack aria labels
Wrap web worker ext host in iframe by default
history - adopt usePreferredResource
Remove abstract key-val fsp and make indexedDB fsp operate on Uint8Arrs (#107590)
fixes #107391
register UserDataSyncStoreManagementService
fix #107446
fixes #107394
editors - remove memoizer which appears to be buggy
initialize extensions in the background along with other resources
migrate last js files
Up / down and left / right navigation in actionBar only for activityBar since it is a tablist
Handle delta extensions also for the remote desktop case
Extract `ExtensionRunningLocationClassifier`
Move `_determineRunningLocation` up to `AbstractExtensionService`
update ref viewlet
:lipstick:
always get UserDataSyncStore from service
Add bottom margin to spans in hovers (#107442)
debt - adopt some preferred URIs across the code
update references viewlet
update ref-search extensions
workaround cyclic dependency issue
add new output to workspace edit
fix #107465
Bumps version of github-browser
:up: distro
1.50 license input
:lipstick:
Handle delta extensions on the web
Add "focus level up" command to clean up "escape" behavior on settings editor #106897
Prefs actions clean up, add to command palette
separate recommendation services - ignored recommendations service - recommendations prompt service
Update Remote-Containers command name to "Clone Repository in Container Volume"
diff outputs instead of replacing the whole outputs array.
saves SCM widget input on window reload (#107261)
Update ts server web build
update distro
Add `IScanSingleExtensionArguments`
FIxes #107335 - removes hex assumption
Toggle window minwidth depending on panel #89721 (#107257)
Move `deltaExtensions` related methods up to `AbstractExtensionService`
Update Codicons: add 'check-all' https://github.com/microsoft/vscode-codicons/commit/010d5a32290efc22ed9d6e894d7c62444c5e8ddd
fixes #107448
Return a types.MarkdownString instace to extensions (#107415)
fix #102665.
comment thread readonly
file access - merge asDomUri into
renames
add some todos
adopt changes after feedback round one
Shutdown exthost terminal processes gracefully
fix typo, https://github.com/microsoft/vscode/issues/54938
remove priority all togther, maybe add something like severity in the future, https://github.com/microsoft/vscode/issues/54938
adress API feedback https://github.com/microsoft/vscode/issues/54938
:up: distro
debt - more FileAccess adoption
debt - introduce and adopt FileAccess
Make sure the renderer received `$onWillActivateExtension` before proceeding to load extension code
new proposal for NotebookCellOutput, partial implementation
fixes #107235
explorer: improve aria-level computation of compact folders
fix https://github.com/microsoft/vscode/issues/107379
Update formatting for new TS version
clean up - remove unused source prop
create workspace extension config service
move API to final, https://github.com/microsoft/vscode/issues/106410
debug issues to isidor
update references viewlet
download service - add comment for scheme restrictions
debt - use network.Scheme.file in more places
Update to latest TS nigthly for building VS Code
add requirejs global var in rendering webview.
fix #107003.
re #103454. notebook/comments/find remove toggle.
re #103454. find widget, add classes.
re #103454. comments/notebook
re #103454. simple find.
re #103454. editor.
re #103454. notebook/comment/find.
Remove proposed check for webview views
Don't cache webview view title
:lipstick: more use of Schemas.file for easier reference
debt - use amd.ts in a few more places
Remove unnecessary interfaces
Reduce the number of folders where we use TS
Towards fixing `.gitignore` (see #107356)
Convert `build/lib/watch/` to `.ts`
Convert `build/lib/eslint/code-no-unused-expressions.js` to `.ts`
add enableProposedApi check
Convert `build/lib/builtInExtensions.js` to `.ts`
Clicking setting control should focus the row #106897
Clean up dead aria-label code #106897
debt - adopt more of the amd.ts helper functions
make enablement handler optional
disable the command in web
use getter - isEnabled() is accesed in the constructor
fixes #107053
Instantiate text models even if the undo / redo stack for a text model contains foreign elements (#101789)
sandbox - move keytar into native host service (#107292)
Removes unneeded defaults
Changes moveViews command to "preserve" view state When you move views via the command, they won't get expanded or made visible
Don't hide settings tree focus border under toc #106897
node-debug@1.44.14
Tweak coloring and spacing in new settings editor #106897
Closes #105667 - finalizes treeview description
Enable search editor in non-HOME envs
added additional colour options for differing git staging statuses
Remove deprecated DOM helper usages
Add modified and "also modified in" text to setting row aria label - #106897
Clean up settings editor aria label code #106897
Add platform to desktop webview url
Add issue link
node-debug@1.44.12
Update Codicons: add 'notebook' and 'redo' https://github.com/microsoft/vscode-codicons/commit/8ac9c9d422265aac5ae5f83bf9452baf4455cd8b
Only use custom hover in custom tree for markdown tooltip For now, we will go back to the native hover. The custom hover should be used at the resource label level instead of the tree level to avoid conflicts with resource labels. This is a larger change that will come later.
ThemeIcon ThemeColor proposed API changes Part of #103120
Be sure to execute grouped undo / redo elements in order (#101789)
Add an ordering for grouped undo/redo elements (#101789)
Improve debugging output
Introduce grouping for undo/redo elements (fixes #101789)
fix compile errors
#105562 remove unwanted service dep
fix https://github.com/microsoft/vscode/issues/105562
repl filter: update badge on repl change
selectBox: remove .monaco-workbench scoping
Command categories are repeated in many places (fix #106019)
#105047 simplify
fix wording into -> to
decorations todos
web - only offer "Save Workspace As..." when supporting empty workspaces
Remove strings.endsWith() (#103454)
Remove strings.startsWith() (#103454)
debt - memoize windows reg key entry
debt - do not reference workbench from base
Update dropdown font-size and border-radius for mac (#107266)
fix #107146.
bump tas-client-umd version 0.1.2
#105562 use instantiation service
fix #107210.
Revert "disable failing notebook tests, https://github.com/microsoft/vscode/issues/107210"
repl filter: polish
Remove some deprecated code in ./src/vs/base #103454
show 0 of n instead of hiding badge
distro
fix lint errors
set default formatter for js
update distro
fix continuous build
add context to extension commands
Revert "Dynamic layout"
Remove some deprecated code in ./src/vs/base #103454
Remove some deprecated code in ./src/vs/base #103454
Remove some deprecated code in ./src/vs/base #103454
Remove some deprecated code in ./src/vs/base #103454
https://github.com/microsoft/vscode/issues/103454
groups for viewsWelcome
add back file menu contribution
debug: remove debugAddBreakopint telemetry event, no longer needed
isEqualOrParent - rename params to make this method understandable
ignore all build js files by default
fix compilation error
disable failing notebook tests, https://github.com/microsoft/vscode/issues/107210
remove build compilation output
isolate hygiene
editors - restore offset for drop ops as it was
move settings sync options into single interface
sandbox - function scope for workbench too
sandbox - self invoke functions for shared process, issues and process explorer
sandbox - consolidate fileUriFromPath into one
Add chart color tokens
render outline from decorations even if cell is not focused.
avoid custom metadata update trigger wrong content.
fix content provider closure.
:lipstick: fix build.
allow content providers to update content options.
command for fetching all notebook content providers.
Add panel maximization setting for #94930 (#106967)
debug: do not announce breakpoint added when doing "Run to Cursor"
Implement the DAP Invalidate request
workbench web api for settings sync enablement
sandbox - move sudo-prompt out of renderer
update version
update editor version
Use an object url to fix cross-origin workers in Safari (see microsoft/monaco-editor#2110)
Update the loader (fixes microsoft/monaco-editor#2044)
Use `ConsoleLogService` as `ILogService` in standalone editor
Add a temporary implementation for semantic tokens styling (for microsoft/monaco-editor#1833)
Remove `monaco-workbench` for CSS rules needed also in the standalone editor (fixes microsoft/monaco-editor#2016)
fix typo
Remove keyboard support from remote explorer help Part of #107011
Explorer empty on startup (fix #107143)
remove deprecated activation event, fixes https://github.com/microsoft/vscode/issues/105496
remove removeNode, https://github.com/microsoft/vscode/issues/103454#issuecomment-695136569
editors - add and use preferredTitleHeight for groups
workaround for https://github.com/microsoft/vscode/issues/107143
Update distro
Dynamic layout Use fixed size when pane grows instead of flex to avoid flickering
Show filtered stats
disable syncing extensions in web
Reorder enum values in editor options
Pick up latest typescript nightly for building VS Code
Adopt resolveCodeAction for JS/TS refactorings
Remove custom typings for refactor trigger reason
null -> undefined
Simplify showQuickPick
remove dom deprecated refs refs #103454
Pick up TS 4.0.3
Extend disposable
Move exists to own file
Use enum
Use Promise.all to perform config finding in parallel instead of sequentially
Make getTsConfigsInWorkspace observe the TaskProvider cancellation
Add timeout for `vscode.workspace.findFiles`
Implemented fix for first parameter being a substring of the second p‚Ä¶ (#106432)
productize the dialog style setting for desktop
add DAP InvalidatedEvent
Allow updating the title of a composite even if it is not active (#106892)
Remove custom editor default editor override
multiple selectors
switch to node libs (#107040)
update lock.
fix build
remove ref to experiment service in desktop
support cell range in notebook.cell.execute command
Add (get) and (set) prefixes to JS/TS getters and setters in the outline
Move tas-client to umd version and adopt in web (#106904)
callstack improvements #106957
tune hover behavior to allow alt to switch from debug hover to regular hover and that the mouse move does not hide the regular hover
sandbox - expose `vscode-windows-registry` from native host service
sandbox - add pedantic comments to prevent electron-browser usage
Show custom tree hovers below and offset Part of #106095
use always default url when cannot be switched
sandbox - move userdata sync related services to electron-sandbox
sandbox - lift textmate worker to electron-sandbox
fix compile error
sandbox - lift themes.test.contribution
sandbox - lift extension workbench service back to browser
DAP sources are case sensitive on insensitive filesystems
Loader config for node modules when running with sandbox
remove isFree-check and rely on the renderer throwing errors
- Remove acitivating account extension as getSessions does it. - Add logging during initialization
Disable syncing extensions in Web
fixes #71315
fixes #84561
debug: smoother toggle between debug and editor hover
update search file
fixes #106439
:lipstick:
:up: distro
debt - more native environment service adoption
environmentService => nativeEnvironmentService
debt - introduce native environment service descriptor
pinned tabs - change sizing to normal by default
Implement generic invokeWithinContext for all editor panes (#104947)
debug: update js-debug
#106321, Don't retry token refresh if the response was not ok
Notebook document content options.
:lipstick:
fixes: - focus the first element by default - tweak wordings
update sync url on change
update distro
:lipstick:
content provider registration without static contribution.
fixes #106865
fix compilation
#106934 Clean up marking workspace complete code. - Do not validate if workspace was not initialized
fix tests
sandbox - make native workbench environment service a real one
sandbox - :lipstick:
sandbox - separate native host service implementation from interfaces
sandbox - rename electron service => native host service
sandbox - add electron service to layers checker
add ability to list fs provider capabilities so that we can sync them to the extension hosts
missing compile
#106934 log error while validating
Use lowercase microsoft
sandbox - move some types to electronTypes
revert line deletion in json CONTRIBUTING
sandbox - update electron types
sandbox - make platform.ts fit for sandbox usages
sandbox - make common/process fit for sandbox
add github.com link
fix m
more capital fixes
sandbox - clear TODO that is no longer needed
debug: when the alt key is pressed show regular editor hover and hide the debug hover
sandbox - add a minimal product config
sandbox - add note about support for get/set properties in preload script
debt - more use of product service over product.ts
update jsdoc for internal API
sandbox - workaround for exposeInMainWorld accessing properties
update doc comment and resolve logic
remove unused import
debt - let proxy IPC implement interface
debt - use utility for diagnostics IPC and introduce real workbench diagnostics service (#106836)
Make sure we create a unique working copy resource for each custom editor resource
Update distro
update distro
Add missing config entries
Define verified label
:lipstick:
resolve notebook without explicit view type.
Simplify sync quick pick
Add caching to Rich Navigation step to reuse node_modules
cell decoration polish.
Move switch settings sync service during turn on
Tweak quotes in setting description
Possibly improve logging on token refresh fail
debug: apply polish to auto attach switcher
Make sure we dispose/track disposed webviews in webview views
Remove extra awaits
Skip smoketest #105330
Finalize the WebviewView Api
fix wsl selfhosting in scripts/code.sh
nb decoration api first cut.
Update to use TS 4.1 for building VS Code
Adding more explicit typings for TS 4.1 new Promise logic
Use array.equals
Changes to use fsPath
Adds resourcePath & resourceFolder context keys Allows for more powerful use of the new in operator
don't declare a variable that isn't used
normalize eol for build folder
Remove unused import
Show terminal hover on top
Support IHoverOptions.anchorPosition
action bar: introduce respectOrientationForPreviousAndNextKey and by default respect both up/down and left/right for prev and next navigation
Remove some deprecated code in ./src/vs/base #103454
Remove some deprecated code in ./src/vs/base #103454
debt - remove some deprecated CSS method usages (#103454)
do not use strings.pad
Adopt new APIs (for #103454)
debug: use asCannonicalUri when opening editors
fileActions: polish how strings. methods are used
Don't update title area for filterview (#106775)
debt - remove array.first (#103454)
Allow executeCodeActionProvider API command to set the number of items to resolve, unit test to check that and the whole resolve machinery
Exclude LSIF files from Git
Update distro commit id
web - :up: version
:up: distro
remove deprecated builtinExtensionsServiceUrl api
debt - avoid node.js path module
sandbox - avoid direct use of node.js OS module
update distro
support web overrides for configuration sync store
control selecting settings service through canSwitch property
fix type
sandbox - make timer service available in electron-sandbox
sandbox - use preload safe process in workbench common props
proposed API for CodeActionProvider#resolveCodeAction and all the wiring
debt - move workbench telemetry properties to workbench
sandbox - lift configuration export helper to electron-sandbox
sandbox - lift UserDataAutoSyncService to electron-sandbox
sandbox - lift remoteAuthorityService to electron-sandbox
sandbox - lift ExtensionTipsService to electron-sandbox
sandbox - lift iframeWebviewElement to electron-sandbox
Add resolveCodeAction to internal API, introduce CodeActionItem which knows a CodeAction and the provider, adopt CodeActitemItem in codeAction-land
sync telemetry opt out key
Add color to ThemeIcon (#106491)
crypto - asyncify checkum method and add tests
Replace 'master' with branch head when publishing to github (#105878)
log error
debt - adopt IPC utilities for chokidar watcher service
[css/json/html] update service (use vscode-nls@5.0)
Allow empty tag message in git (#106751)
debt - adopt IPC utilities for nsfw watcher service
nowrap whitespace, trim code lens titles, fixes https://github.com/microsoft/vscode/issues/106718
debugging paused: first read file name and line number
:lipstick: tab colors
tabs - remove redundant options listener
Detect Jenkinsfile as groovy
Add unit test for ContextKeyService
bump windows registry version
Remove invokeWithinContext from notebook in favor of PR #104947
Update distro
xterm@4.10.0-beta.4
Add extra guard around when onDidChangeVisibility is fired
Hide webview overflow for webview overlays
Use Object.assign over our custom assign impl
Renames titleDescription to description
Adds titleDescription to TreeView
resolve the right view type of a cell when its containing document is already opened.
debug: update js-debug
When completions show, trigger completions when entering a new word but only from inactive providers, https://github.com/microsoft/vscode/issues/106573
fix lint
cancel input before executing new command; fixes #106743
sandbox - lift remoteExtensionManagementService to electron-sandbox
sandbox - move remote.contribution to electron-sandbox
sandbox - move issue.contribution to electron-sandbox
sandbox - some cleanup
sandbox - move extension management service into electron-sandbox
handle errors in backup tracker while writing backup
web - introduce context for empty-workspace support and adopt in some commands
Better variable resolve on remote Part of microsoft/vscode-remote-release#2619
:lipstick:
browser IWindowConfiguration.colorScheme: cleanup
If I switch workspace, focus moves to different VS Code instance (fix #106727)
add check no-op changes, https://github.com/microsoft/vscode/issues/105283
notebook - refine check for existing notebook of other type
fix #106732
fix ts41 errors in extHostDiagnostics, https://github.com/microsoft/vscode/issues/106358
web - hide "Reload Window" from command palette
Web - try to detect native fullscreen (#106479)
Only prevent default  for copy paste in webviews when on electron
Move webview editor into own module
fix #105735.
applyEdits.
Closes #106683 - adds view title tooltips
Add action to move sidebar to right from activity bar #101578
Defer all resize events for git bash terminals
remove unused import
fix TS 4.1 errors
refine test for https://github.com/microsoft/vscode/issues/106657 and document issue with fragments and the editor opener
remove web filter
enable web server only in server less
fixes #100172
fixes #86180
add regression test for https://github.com/microsoft/vscode/issues/106657
fix bad classList usage
notebook - when creating a notebook, check that no notebook with another viewtype exists
fixes #106406
debt - make class list utils functions so that @deprecated works for them
update search files
workaround, maybe fix for https://github.com/microsoft/vscode/issues/106657
remove deprecated function calls
use debian stretch images (#106656)
rename RunOnceScheduler#timeout to delay
fix delay issue for provideCodeLenses, https://github.com/microsoft/vscode/issues/106267
add NotebookCell#index, https://github.com/microsoft/vscode/issues/106637
adopt notebook integration tests, https://github.com/microsoft/vscode/issues/105283
WorkspaceEdit-api changes, https://github.com/microsoft/vscode/issues/105283
NotebookEditorEdit-api changes, https://github.com/microsoft/vscode/issues/105283
remove old renderCodicons-function, rename renderCodiconsAsElement to renderCodicons
don't use renderCodicons any more, https://github.com/microsoft/vscode/issues/105799
Skip formatting when during format-on-save, the configured formatter cannot be found (continue to show silent notification), https://github.com/microsoft/vscode/issues/106376
added libgbm1 for resolving in dev-container
- send auth session - prepare credentials from auth session
support auth in web playground
Revert "API proposal for tree item icon color"
Create webview.web.contribution
Use `Set` instead of array
use optional chaining
Add comment to WebviewViewResolveContext
Add optional typing for webview state in WebviewPanelSerializer
debug: use only js-debug auto attach, collapse settings
hide outputs if it is transient.
fix #106430.
debug: update js-debug
Add preferred_username to the list of msft token claims (#106511)
cell language should not be freezed.
notebook document data loss.
Remove unused 'SettingSearch' issue type
Update Codicons: add 'magnet' icon https://github.com/microsoft/vscode-codicons/commit/4c6115529dd1fa20b635f32f9271f50030b0722e
explorer: Should maintain row focus after deleting a file
adopt new amd loader with support for TrustedScriptURL, add typings for TrustedTypesFactory et al, https://github.com/microsoft/vscode/issues/106396
do not use deprecated dom helper methods
debug and explroer: do not use dom.addClass, dom.toggleClass
do not use hasClass and first
proxy authentication does not work on 1.49 (#106434)
argh
fix linux build
update distro
debt - remove some any casts from window
Remove Schemas.vscodeRemote from simple file dialog
Trusted types - don't use innerHTML for rapid render, https://github.com/microsoft/vscode/issues/106395
:up: web playground
update search file, https://github.com/microsoft/vscode/issues/106395
electron - set spellcheck: false again for windows
try to fix build (linux)
some jsdoc for https://github.com/microsoft/vscode/issues/54938
update distro
fix fonts in monaco menu
update exploration branch
remove spliceNotebook api from textmodel.
unit tests for batched edits.
Pin blob storage dep see Azure/azure-sdk-for-js#11187
Replace our arrays.find with stdlib find
Improve views contribution point
Document view.type contribution
fix build.
:lipstick:
do not copy execution related metadata
replace insertCell with applyEdit.
applyEdit supports begin/end selections.
private outputs slice and unknown change.
notebook text model initialization does not increment version
re #105735. batch apply edits.
- reload only local user configuration after initi - add perf mark up and logs
Use `@example` tags in vscode.d.ts (#106352)
use textcontent in menu css refs #106395
Use textContnet for style element
Remove arrays.findIndex
Bump yargs-parser in /extensions/css-language-features/server
Bump yargs-parser in /extensions/markdown-language-features (#106373)
refs #106358
some integration tests for notebook editing, https://github.com/microsoft/vscode/issues/105283
debt - adopt defaultUriScheme over hardcoded vscode-remote in toLocalResource
debt - adopt defaultUriScheme also for userHome
Adjust active terminal tab when active tab moves (#106413)
pathService - defaultUriScheme() => defaultUriScheme
fixes #106355
debt - REMOTE_HOST_SCHEME => Schemas.vscodeRemote
Avoid innerHTML (#106395)
Avoid innerHTML (#106395)
:lipstick:
Add defaultUriScheme to path service (#106400)
fixes #104047
Correct linux code-workspace path
Multi git executable paths (#85954)
Correct path to code-workspace.xml
web - fix bad credentials lookup
fixes #106334
add ExtHostFileSystemInfo which knows what schemes are reserved and which are used, https://github.com/microsoft/vscode/issues/91697
debug: return result of a msg to debug adapter can be undefined
debt - simplify metadata edit because we now have CellEditType.DocumentMetadata
update trusted types search
more TS 4.1 fixes (#106358)
trusted types
Adds commands for --no-verify commit variants (#106335)
pinned tabs - add a tab.lastPinnedBorder color
pinned tabs - closing pinned tab should open next non-pinned
fix ts errors
pinned tabs - flip default to "shrink"
fix TS 4.1 compile errors, https://github.com/microsoft/vscode/issues/106358
fix some TS 4.1 errors (#106358)
fix some TS 4.1 errors (#106358)
Cache webview view title across reloads
Add isWritableFileSystem api
Use destructuring to make code more clear
re #105735. no more udpateMetadata api.
re #105735.
debug: bump js-debug-companion
#106358
Enable webview commands for webview views
Mark property readonly
:lipstick:
initialize notebook text model data only through ctor.
Formatting
Add providerName option to git.api.getRemoteSources
Update Codicons: add 'graph-left' https://github.com/microsoft/vscode-codicons/commit/dd1edb245d2217efcfb931c293b77b78e634e59a
Add subscribers action
refs #106285
chore, simply notebook text model event emitter
move dirty state to NotebookEditorModel.
fix #105916. expand metadata section if modified.
replace changeCellLanguage to applyEdit
remove selections from nb text model.
:guard: polish nb tests.
do not need isUntitled.
debt - invoke resolve notebook when opening a notebook in an editor, not when loading a notebook from source
debt - IMainNotebookController#removeNotebookDocument
Add explicit undefined parameters / types
Update Codicons - Update 'pinned' - Add 'export' - Compress 'merge' https://github.com/microsoft/vscode-codicons/commit/5bcb1a045413eb5a9737e6e46411e13f9c4e5c9c
chore - use workingCopyService.isDirty instead notebook.isDirty
Don't use async on abstract functions
Adding more explicit typings for promises
Only allow configurePlugin against main TS Server
Save prompt is shown while saving from settings split json editor (fix #106330)
Update extensions/git/src/commands.ts
Update extensions/git/src/commands.ts
Update extensions/git/src/commands.ts
Move comment into helper function
Check length again
Avoid slice when checking colon
Consolidate colon trim logic
Use instantiation service to create TerminalLinks
fix arch
trusted types - use textContent for style elements, fyi @rebornix
update trusted types search
distro
use async await
trusted types
publish arm deb and rpm
chore - :lipstick: member order: property, ctor, method
chore - remove ExtHostNotebookEditor#uri and use document.uri instead
chore - extract ExtHostNotebookEditor into its own file
chore - extract extHostNotebookDocument for the NotebookDocument and NotebookCell types and friends
chore - move appyWorkspaceEdit from extHostTextEditors to (new) extHostBulkEdits and mainThreadBulkEdits
use textContent instead of innerHTML (for #106285)
add `replaceNotebookMetadata`, https://github.com/microsoft/vscode/issues/105283
add `replaceNotebookMetadata` (should become `replaceMetadata`) to NotebookEditorEdit, https://github.com/microsoft/vscode/issues/105283
remove unused import
fix uninstalling extension
Reduce usage of `.innerHTML` (#106285)
pinned tabs - prevent to close pinned tabs via Cmd+W (#100738)
fix https://github.com/microsoft/vscode/issues/105999
editor - rename context keys variables
updated searches
Update gitignore decorations when .git/info/exclude file is edited (#106270)
fix https://github.com/microsoft/vscode/issues/106308
distro
update distro
tabs - align icon and text vertically centered in tab
update distro
install dot net core sdk
pinnedTabSizing.standard => pinnedTabSizing.normal
fix #106283
enable test
fix #106283
Skip failing test
Add show method to webview view
Remove manual strikethroughs for deprecated properties in vscode.d.ts
Add WebviewView.description
Only enable 'open with' on files
proper fix for #105202 (#106293)
Disable errors in non-semantic supported files
fix integration tests.
merge conflict resolve.
remove emit selections.
Revert more specific class names for editor tokens
Bump vscode-ripgrep for ARM #6442
review comments
high contrast switching in browser
fix rpm
debug: make serverReadyAction play nicely with js-debug
chore - update references viewlet
no uninitialized documents.
remove `NotebookDocument#displayOrder` , fixes https://github.com/microsoft/vscode/issues/106305
debt - remove _unInitializedDocuments
:lipstick:
node-pty@0.10.0-beta17
unified onDidChangeContent
Add numeric values support for terminal.integrated.fontWeight
deprecate onDidChangeContent
Reenable notebook smoke test #105330
deprecate onDidChangeCells
chore - when target might be undefined use `target?.dispose()` over `dispose(target)`
API proposal for tree item icon color Part of #103120
rename to IHostColorSchemeService
Use innerText over innerHTML, https://github.com/microsoft/vscode/issues/106285
pinned tabs - update setting enum name
notebook update
chore - tweak onDidAddNotebookDocument, onDidRemoveNotebookDocument event, use ResourceMap and fix confusion between models and editors
Add loginShell (microsoft/vscode-remote-release#3593)
produce deb, rpm packages
:lipstick:
Update distro
notebooks - don't allow anyone to call unregisterNotebookProvider, add names to TODO-tags
xterm@4.9.0-beta.32, xterm-addon-webgl@0.9.0-beta.4
editor context keys - renames and deprecations
trusted types (#106285)
another attempt
Add .nf file extension for groovy files
pinned tabs - allow when tabs are disabled too (#100211)
use async await
#103454 do not use deprecated methods
#103454 remove objects.assign usage
debug: dynamic launch configurations should be stored properly
fix armhf build
adopt request delays in code lense, also modernize code lens. fixes https://github.com/microsoft/vscode/issues/106267
Increased height of proxy authentication dialog to prevent cutting buttons (#83900)
add HostColorService
more colorScheme adoption
fixes #106246
fix yarn arch
extract request delay managment for reuse, https://github.com/microsoft/vscode/issues/106267
:lipstick: some code lens polish
pinned editor - also indicate in open editors view
pinned tabs - swap action for pinned tabs unless compact
better git and github docs
update distro
TrustedTypes - use clearNode instead of innerHTML
build vscode armhf
cleanup gulpfile reh
update notebooks
chore - trusted types search
fix some spelling errors
chore: bump electron@9.3.0
fix compilation cache
keyboard - rename and cleanup some editor related contextkeys
environment - update jsdoc to clarify things
#103454 do not use deprecated methods
adopt color scheme in host service
readonly-ness, readonly over getter, some member sorting (properties, ctor, methods), https://github.com/microsoft/vscode/issues/105735
Update grammars
add cmd+i (mac), ctrl+i (linux/win) as additional intellisense trigger character, https://github.com/microsoft/vscode/issues/105207
use MessageChannel api to communicate between worker extension host and main thread
distro
fix compile cache
Trusted Types - no innerHTML usage in HighlightedLabel
distro
fix conditions
:lipstick: dom
arm64 build pipeline
strict INotebookTextModel#cells and some more readonly-ness, https://github.com/microsoft/vscode/issues/105735
editors - expose "Close Editor Group" in command palette
editors - allow to save virtual documents (fix #101952)
cleanup notebook argument processor, remove INotebookTextModel#handle and use uri instead, https://github.com/microsoft/vscode/issues/105735
debt - remove unused `INotebookModelAddedData#handle`
menu - update context keys for some editor related commands
fix #106213
Trusted Types - don't use innerHTML in CodeLensContentWidget
themes - first cut ColorScheme support (#105715) (#105716)
trusted types - use innerText for style assignment
:lipstick: remove unused code
improvements
:up: distro
:up: chokidar@3.4.2 (#106212)
debt - unset DYLD_LIBRARY_PATH before forking (#106211)
:up: playwright@1.3.0 (#105740)
Update distro
Support hot swap on webgl renderer
Clear webgl renderer texture on OS resume
xterm@4.9.0-beta.25, xterm-addon-webgl@0.9.0-beta.1
Remove unwanted log
Update distro
Add padding to space the x button
editors - add a setting to control pinned tabs sizing
update distro
remove remote web user data directory and use indexedDB in browser
sandbox - more alignment to electron-browser
Remove useless var
Optimize keydown/up events by only working on !repeat
xterm@4.9.0-beta.24
Remove obsolete comment
Hide terminal hover when terminal is scrolled
Support search workspace within terminal
Bump version
DelayedEmitter
debug: update js-debug
baby step: pushEditOperations.
make changeMetadata private
remove deltaMetadata.
remove notebookTextModel#createCell
remove clear all cell outputs
Remove empty ctor
Use intersection observer to hide hovers
remove clear outputs api.
Use uri label as fallback for resources without a tooltip Part of #106007
:lipstick:
missing settings change events from FileUserDataProvider
deprecate authenticationSessionId
fix config based recommendations when there are no workspace recommendations
sandbox - implement a simple native workbench environment service
Removed unused delay memeber from tree
sandbox - move dialog service into electron-sandbox
fixes #104931
sandbox - lift more services to electron-sandbox
sandbox - move workspace editing service to electron-sandbox
sandbox - lift NativeWindow to electron-sandbox
sandbox - make layers checker fit to complain about native things definedin common layer
sandbox - move workbench environment service into electron-sandbox
sandbox - use workbench native environment service
no more *2 API
inline delegates
reduce _onDidChangeCells
remove onDidChangeMetadata.
re #105735. content changes on text model should always be emitted to ext host.
re #105735. selections as NotebookEditor properties.
notebooks: remove redundant type in union
fixes #105734
Bump bl from 4.0.2 to 4.0.3
Have the Toggle Keyboard Shortcuts Troubleshooting action open the renderer log
Do not trace all dispatches
fix #106008.
Add new github browser extension id to allow list
:lipstick:
Revert "fix #105923."
sandbox - allow native workbench environment service on common layer
sandbox - some workbench environment cleanup
fixes #106025
environment - update comment in platform service
sandbox - lift some environment properties that are only used in workbench up
fixes #105977
fixes #105863
add `--trusted-types` flag to `yarn web`
Add string validator for color-hex format
debug variables: tweak group names
ignore when invalid credentials data is passed
fixes #106023
sandbox - move native environment service to common layer
fixes #105708
:lipstick: web api
update distro
Add .nf extension to Groovy file extensions
Bumps distro
Bumps version of github-browser
fix: creating client_id file in the current directory
debug: update js-debug
fix #105904.
fix #105924
Add extensionHostCrash telemetry event
fix #105925.
filter invalid extensions
Adopt latest asar
fix #105923.
Bump up distro commit
re #105922.
fix #105921.
reduce context key update.
re #105917.
re #105917. update dirty state
fix #105917. Bind file watch on diff resources.
Exclude `pr` schemed files from js/ts language features
Enable pointer lock in iframe based webviews
:lipstick:
Disable smoke test for #105330
fix: add entrypoint to notebook renderer default contrib point
- check for web compatible extension - expose webResource propery for gallery extension
:up: web playground
Add command to help with troubleshooting keybindings
fixes #104640
editor model - add some tests
debug: variables actions transition to commands
model - add a isDisposed method to generic editor models
add method isTextFileEditorModel
Improve settings message, and add minLength and maxLength
fixes #104965
fixes #105129
fixes #104931
fixes #105679
fixes #104634
fixes #105256
Hitting a breakpoint doesn't active window (fix #105913)
reload configuration after initializing
Pass credentials through args
fixes #105868
small tweaks
move prompts to PromptedExtensionRecommendations
* cell languages.
debug: update js-debug
show select kernel quick pick if there is no active kernel.
no more INotebookKernelInfo2 casting
Add playwright-python to workspace tags (#105104)
fix #105843.
Disable js/ts features for the private scheme
Use more explicit names for webview funcs
Use containerName if it exists
Remove experimental typings
Clairify docs on `WebviewViewResolveContext`
debug: menu respect debuggers available context
Add dirSep variable launch.json
Expand docs on visibility change
Restrict webview views to make sure proposed api is enabled
Allow 1-1000 as strings. Improve description and error.
Move cell execution order label back to below play button
fix #105778.
fix: resolve sourcemaps in extensions
#103238 filter using declared providers and wait until they are registered
fix: refresh env vars when auto attach settings change
Adopt string hover in custom tree
Use appendText for hovers that are strings (#105844)
Support string in IHoverOptions.text
fix #105825
disable notebook version check for now, https://github.com/microsoft/vscode/issues/105624
Prevent creation of terminals when processes aren't supported
make sure to transform edits output, https://github.com/microsoft/vscode/issues/105624
fixes #105810
Hide terminal commands in menu
yarn.lock and task for tsec, https://github.com/microsoft/vscode/issues/105747
Revert "Get authentication session info from workbench html in dev mode"
Preserve all new lines in MarkdownString appendText (#105732)
mark renderCodicons as deprecated, https://github.com/microsoft/vscode/issues/105588
Activity bar: visibility of things is not synced (fix #105793)
:up: web playground
Bumps version of github-browser
debug: update js-debug
:lipstick:
fix notebook document filter pattern npe.
Updating docs
Default webview background to transparent
Revert "Original settings editor as list implementation:"
Revert "Tweaks to settings editor as list implementation:"
Revert "Tweaks to the list row focus settings list"
Revert "Don't take over 'enter' in split json editor"
Revert "Force horizontalScrolling=off for SettingsTree"
Revert "Force horizontal scrolling off in settings TOC tree"
Avoids focusing a view, instead focus container
Moves command into `vscode.` namespace Stops using moveViewsToContainer in 1 shot
Adds move views command
Remove old `select all` command impl
Only enable webview override commands when webview is focused
Move window border widget into layout service
prune the refactor not applicable reasons if there are too many (#103203)
Modify setting message to match options (#88795)
chore: update distro
Bumps version of github-browser
update distro
debug: improve language for noDebugAdapter
Increase initial connection timeout
update seti theme
update services
fix tests.
add details to notebook kernel.
:lipstick:
remove legacy registerKernel
update kernel per document.
fix #105376.
Update ThirdPartyNotices.txt
Revert "Run menu does not remember dynamic launch configurations"
Bumps version of github-browser
Add script for running tsec
Option: editor.scrollbar.gutterClickMovesByPage
Remove some globals
Get authentication session info from workbench html in dev mode
fix another cycling types reference
:lipstick: strict typings, namings
debt - move extension debug IPC channel closer to interface
sandbox - remove dependency to native keymap on startup
Run menu does not remember dynamic launch configurations
:lipstick:
remove unused interface
debt - ExtHostWindow implements ExtHostWindowShape, not itself
Investigate #104554
debt - move keyboard settings for touchbar into desktop.contribution
Make renderCodicons function return HTMLElement instead of string
debug: respect __vscodeVariableMenuContext
fixes #104762
Show config based tips in workspace recommendations
Set marker properties only when settings change
fixes #105677
use import-type for modules we load async (#105594)
update docs for asAbsolutePath, https://github.com/microsoft/vscode/issues/105277
remove asAbsolutePath-confusion for web-context, https://github.com/microsoft/vscode/issues/105277
105160: Support configuring keyboard overlay timeout + mouse indicator color/size (#105219)
:lipstick: desktop => native
:lipstick: use path label when presenting paths to user
Bumps version of github-browser
small style change
Add numeric values support for editor.fontWeight
Log an error with the active extensions when the extension host crashes
use absolute path for 'env'; fixes #105642
Removes unused import
Ensures titleDescription is always next to title
#103405 check if sync is on
show web extensions in a separate section
Show cell border with focus within the list, not on the list
Only show cell focus border when the notebook editor is focused
Avoid race conditions in handling webview output changes, queue all processing
do not trigger outputs change when there is no real change.
re #102503. reveal range
re #102503. visible range change events.
repl: simplify filter work
add web extensions filter
make sure replaceOutput updates the extension host side, update tests https://github.com/microsoft/vscode/issues/105283
add some integration tests for notebook editing, https://github.com/microsoft/vscode/issues/105283
repl: cmd + f to focus filter
show revert only in diff editor.
web - improve window indicator
fix #105576.
fix tests
debt - use some "import type" syntax to ensure the module is not getting loaded
themes - distinguish between OS HC and autodetect HC
update distro
Clear list of created groups once they are added
Expose the contribution.menus for Variable view
copy paste is hard...
use extensionUri and joinPath instead of asAbsolutePath
debug: react on registration to update context keys
Create HTML with dom.ts#$ function calls instead of string concatenation
Set HTMLElement's content by providing it as a child, not by .innerHTML
Revert "Use DOM API (fixes #105505)"
add trace logging to know what keybinding triggers what command, fyi @alexdima
fixing grammar
include extensions in the text
Revert "re #102503. allow fold/unfold with levels and direction in notebook."
debugUx context key: make sure to be simple if there are no debuggers
sandbox - lift some desktop specific interfaces to common
add two more DAP stand-in types; see #70377
know if overtyped text was multiline, save one iteration over selections, init arrays via []
Process explorer: use icon font instead of SVG (fix #102560) (#105411)
make sure to open dirty notebooks, https://github.com/microsoft/vscode/issues/105283
:up: web-playground version
:up: web-playground version
fuzzy score - add test for #99171
always keep a reference to dirty notebook models, https://github.com/microsoft/vscode/issues/105283
fuzzy scorer - add an additional boost based on label length for prefix matches only
fix compilation
#105562 do not use instantiation service
Use DOM API (fixes #105505)
:lipstick: optional services
mark storage service as optional undefined
mark storage service as optional undefined
Slight capturer simplification
emit notebook editor selection change.
re #102503. allow fold/unfold with levels and direction in notebook.
Workaround for terminal shifting on space
Run codeql job every Tuesday
Don't hide switch terminal dropdown when proc not supported
Use the new lastCommittedOrigin for remote port forwarding in webviews (#105531)
Gate webview polling usage to safari when scripts are disabled
Enable pointer lock in webviews
Rename
Make context the first arugment to constructors
Move custom editor activation into mainThreadCustomEditors
Require process support for most terminal keybindings
Initial terminal welcome support
rename :lipstick:
Mark onDidChangeAuthenticationProviders as deprecated in proposed API
remove legacy kernel on content provider
Adds lazy allocation for the itle desc dom node
Adds title description to view pane containers
Add authentication contribution point, #103507
enable enhanced text diff view for notebook by default.
support reverting outputs.
support revert notebook cell metadata in diff view.
re #105346.
fixes #90836
fixes #105480
debug: bump js-debug-companion
also send onNotebook:XYZ event, https://github.com/microsoft/vscode/issues/105496
Requested changes
perf - load semver-umd only when needed in cli-process
Create HTML with dom.ts#$ function calls instead of string concatenation
update native-keymap
Always use new hover in custom tree views
update distro
activate extensions before trying to resolve a notebook
use recommendations in prompt text
do not show not installable extensions in recommendations
recommend extensions only when they are installable
introduce canInstall api in extension management service
more Dto<T> tweaks
add model version to notebook edits when possible, https://github.com/microsoft/vscode/issues/105283
replace ICellInsertEdit, ICellDeleteEdit with ICellReplaceEdit, https://github.com/microsoft/vscode/issues/105283
align names, https://github.com/microsoft/vscode/issues/105283
macOS: detect high contrast theme (fix #105481)
WorkspaceEdit#replaceCells|CellOutput|CellMetadata, https://github.com/microsoft/vscode/issues/105283
electron 9: adopt 'render-process-gone' event and show details
Adds scmProviderRootUri context key
chore: bump electron@9.2.1 (#105459)
Split extHost webview panels to own file
Split out main thread webview panels into own class/file
Rename WebviewPanelHandle -> WebviewHandle
Undoing exthost side of the webview serializer split
Undo split of serializers into own main thread class
Split up main thread webview services
allow metadata apply even if it does not trigger content change
allow editing of insert cell content.
support editing of cell content
Add setting for cell statusbar visibility #104772
Rename `ActivationKind.Eager` to `ActivationKind.Immediate`
Use an enum instead of a boolean to signal eager activation
transient outputs.
ignore transient metadata in diff editor.
transient metadata
detached overflow widgets for diff editor.
tweak workspace edit dto and handling https://github.com/microsoft/vscode/issues/105283
add Revived-type for generic revive-function
refine Dto-type
debug: bump js-debug-companion
Firefox does not support navigator.clipboard.readText()
Implementation TM_SELECTED_TEXT snippets variable for working with overtyped text (v2)
Revert "Implementation TM_SELECTED_TEXT snippets variable for working with overtyped text"
Implementation TM_SELECTED_TEXT snippets variable for working with overtyped text
Make github-authentication a UI extension again
Separate the Paste implementation from the Cut & Copy one
Update error messages
notebook cell edit
Execute the editor's paste handler when pasting
fuzzy scorer - fix another corner case for prefix matches
Sanity check lines[y] to fix exception
Load 'node-pty' async (fix #105345) (#105401)
load tas-client async (fix #105343) (#105400)
open editors and pin
clean up
fuzzy scorer - use prefix highlight positions if available
PoliCheck üíÑ
PoliCheck üíÑ
debt - remove lib.array-ext.d.ts and support Array.includes (fix #102566) (#105404)
refactor bulk edit service a little so that it is fit for new edit types, https://github.com/microsoft/vscode/issues/105283
align workspace recommendations
use language name in recommendation
fuzzy scorer - make sure to give prefix scores the same fuzzy scoring treatment
sandbox - fix for windows
Updates distro
sandbox - allow to bring up a minimal workbench with simple services and in-memory file-system
improve wordings and show all recommendations
Improve exe based recommendations
update nb diff editor options.
diff view and fix compile
insert/delete background colors for cells.
Support schemes with - in the name, such as `vscode-remote`
Revert "Revert "Use TS 4.1-nightly for building VS Code""
remove kernel from content provider.
bundle the worker.
- Add tests - RHS of `in` expression is not a value, so don't deserialize it like a value - avoid unnecessary undefined check - use `hasOwnProperty` for object case - keys() should include the RHS of `in` expression
Closes #97544 - adds in operator to when clauses
debug: provide positive ack to js-debug bootloader on auto attach
finalize DAP breakpoint mapping API; fixes #99716
lifecycle & disable scm notebook
fix https://github.com/microsoft/vscode/issues/105351
web - only add window indicator if running without remote
:lipstick: service name
Do not show auxiliary command in palette (fixes #105107)
make bulk edit service implementation a contrib, https://github.com/microsoft/vscode/issues/105283
fix #105235
fix https://github.com/microsoft/vscode/issues/103745
Use DOM API for creating HTML elements instead of string concatenation
sandbox - some tweaks around loading modules lazy if possible(semver-umd)
Adding support for .jenkinsfile extension and Jenkinsfile.* filename pattern
Revert "Make github-authentication a UI extension again"
Revert "Use TS 4.1-nightly for building VS Code"
Use TS 4.1-nightly for building VS Code
diff editor content height is the max of two editors.
Make github-authentication a UI extension again
diff editor for outputs
hide diff overview in metadata editor
hide diff editor overview
differenciate content change and metadata change.
style update for better visibility
show language info in metadata
:guard: compilation.
:lipstick:
border around the whole cell.
change the scope to window
debug: introduce debuggersAvailable context
put enhanced text diff behind a flag
always expand metadata editor if it is changed.
update markdown themes
store folding state in cell view model.
Revert github-authentication extensionKind
always allow show notifications command so screen reader users can focus the notifications toast
flex layout and shared metadata component
Use addWebviewInput
unit test for applying metadata and output, https://github.com/microsoft/vscode/issues/105283
npm: avoid invalid lookups
debug: do not register things lazily
add NotebookEditorCellEdit#replaceMetadata, https://github.com/microsoft/vscode/issues/105283
web: API to prevent initial theme flickering (also fixes #101226)
Support .utf8 format in LANG
add NotebookEditorCellEdit#replaceOutputs, https://github.com/microsoft/vscode/issues/105283
:lipstick: use resource map
chore - remove unused code fyi @rebornix
chore - use $-prefix for IPC call onlys, fyi @rebornix
add `replaceCells` to notebook edit builder, also refactor cell source to only be a string, not an array
sandbox - make lazyEnv fit for sandbox use
node-debug@1.44.11
debt - make ExtHostNotebookDocument not implement vscode.NotebookDocument but expose the API object via strict getter
debt - remove unused function
editors - baseEditor => editorPane
fix(extpath): windows reserved names being allowed with file extension (#104980)
Add to WorkingCopyCapabilities enum to reflect usage. (#105020)
Allow to configure workbench.editor.restoreViewState per language (fix #101110)
Changed description of ‚ÄúCommit Signing‚Äù setting label to include X.509.
debug: bump js-debug and use its auto attach by default once more
Split main thread webview views to own file
Spelling
Compare case insensitive extensions for unicode
Extract main thread custom editors to own file
Extract MainThreadWebviewSerializers to own file
common metadata editor.
get rid of treeFilter since there is no re-use
shared layoutInfo.
debug: toolbar disable pause action and close quick pick
Revert "debug: do not show toolbar while initialising"
debug: only decorate glyph arrow for focused session
Add more snippets for basic syntax (#105174)
Just "clear cell outputs", not "active cell outputs"
"Clear cell output" should clear execution state #103713
Make fold indicator hit target larger
notebooks: deprecate viewType for renderers, prefer renderer ID
abstract cell renderer
tests: probably fix occasional test error on NamedPipeDebugAdapter
don't create promise when it can't be resolved
nb - test that cell removal cleans-up documents
nb - viewColumn is readonly
Azure DevOps pipeline - generate unique test result names (#105148)
chore - remove unused, bad-layered util-function
chore - TextEditor.viewColumn is readonly
onTypeRename: wordPattern (for  #104823)
keep old setting as it and add dependent setting
strict notebook cell api,https://github.com/microsoft/vscode/issues/104606
Use placeholder unless aria-label given (fixes #104664)
debug: display launch name when showing dynamic configurations
repl: add line numbers on hover of source elements
:lipstick:
tackle https://github.com/microsoft/vscode/issues/104606
fuzzy scorer - bring back prefix match boost (fix #103052)
web - remoteIndicator => windowIndicator
web - ignore builtIn extension if overridden via CLI
Revert "Split main thread webview serializer code into own file"
metadata container border
format metadata JSON
avoid editor pane pushing title bar out of view.
expand/collapse metadata
:lipstick:
:lipstick:
remove unnecessary list view change
build text diff editor
Pick up TS 4.0.2
Split main thread webview serializer code into own file
Split webview serializers into own ext host service
Move custom editors into own ext host services
Move webview views into own ext host class
debug: make auto attach apply state transition in new workspaces
Terminal: Support linking local file paths containing '+'
Add proposed webview view API (#104601)
Suppert \U\u\L\l replace modifiers in global search/replace (see PR#96128)
notebook editor worker service.
fixes #104967
web - add a quality change handler
:up: web playground
initialize keybindings and snippets after restored phase
Move task definition variable resolving to be early Part of #81007
workaround (fix?) for https://github.com/microsoft/vscode/issues/105073 @rebornix
chore - make notebook cell language as readonly
Web: remote indicator API (#105069)
fix join with command ordering fyi @roblourens
debug: do not show toolbar while initialising
use type
rename and pass environment service
fix https://github.com/microsoft/vscode/issues/104454
tweak wording
format on save to only format modifications
Amend scrollbarState.test.ts for new positions
Add new TSS_REMOTE_DEBUG flags that are only active in remote cases
notebooks: remove impure renderer API
Use selected text for query when runnning Open Search Editor with an existing editor Always select the full query text when running Open Search Editor with no selection Closes #105032. Closes #105031.
node-debug@1.44.10
disable editing on the notebook diff editor.
isEmbedded.
:lipstick:
avoid infinite scrolling
Improve typescript.code-snippets for async (#99544)
Force horizontal scrolling off in settings TOC tree
Remove deprecated helpers in prefModels
expose diff editor decorations.
fix #104827
fix global state
feat(extensions): added an option to disable related dependencies when disabling an extension with enabled dependencies
change user data init into a service. initialize resources at necessary phases
Use autodesktop
Update grammars
Switch to userdesktop
chore - inline single-use function
add "format modified lines" action
undo: initialize extensions
finalize: noDebug and compact flag in DebugSesionOptions
chore - inline single-use function
support array of ranges in formatDocumentRangesWithProvider and formatDocumentRangesWithSelectedProvider, https://github.com/microsoft/vscode/issues/103745
initialize extensions
also check if application was opened before
feedback: no need to wait
web - bump product version to 1.49.0-dev
Revert "chore: bump electron@9.2.1"
Add process.arch into the test results file name (#104946)
chore: bump electron@9.2.1
Make sure we do not enable JS/TS language features on live share clients
Pick up new TS insiders
Treat more extensions as C++ Reduce duplicated repository entries in search editor tmgrammar Closes #104887.
initialsing user data - get the current authenticated user session from credentials provider
Dynamically updates diff context to cause updates
debug: enable opt-in js-debug auto attach
renameOnType: don't register listeners when feature is disabled or has no providers (#104823)
make return type of getDebugProtocolBreakpoint async
move proposed apis to vscode.d.ts, https://github.com/microsoft/vscode/issues/101857
Add process.arch into unit test results file names
support isNew with global scope
Make Clicking in Scrollbars Move By Page
Explorer: Cmd+Down should move focus to editor
only add menu contribution when having call hierarchy providers, https://github.com/microsoft/vscode/issues/104727
Run commosJS integration tests consistently (#104914)
fixes #104773
fix #104698 again
:up: distro
debt - sync changes back from distro
debt - remove node.processEnv.ext.d.ts
web - rename resources/serverless => resources/web
mark toArray as deprecated/obsolete
web - move playground out of sources
Removes unused code
layer breaker
minimal list view change
range map provider
Don't include this function types in completeFunctionCalls (#104479)
update css per new layout.
Add `(loading...)` prefix to hovers while TS Server is starting up
treat *.c++ and *.h++ files as c++ on macos
Make sure "command palette" command doesn't show up in simple editor #104727
disable contributions in diff editor.
update decorations
update creation options
allow customize contributions for notebook.
Bump actions
Only override copy/paste for extension page if webview is focused
Ban unreachable code. (#104521)
Update distro
build: include auth dialog resource (#104841)
Revert "fix #104698 Make query element of uri survive conflict resolution massaging (#104699)"
Consistent order of running tests
remove todo
debug: getDebugProtocolBreakpoint: make sure to use the breakpoint id
chore - mark removeNode as deprecated
fix #104698 Make query element of uri survive conflict resolution massaging (#104699)
add API to access DAP breakpoints; see #99716
Set suite name based on the --web parameter (#104798)
update distro
Tasks from Run Build Task and Run Test Task should be recently used
onTypeRename code polish
clean up for https://github.com/microsoft/vscode/issues/101282
Move where TASKS_CATEGORY is defined
editorservice - use async
dom - fix selector regex escaping
add some more test for clarification
Tweaks to the list row focus settings list - Change styling to look like notebooks - Add hover decoration - Add inactive focus styling - Keybindings/interaction tweaks - Make toolbar gear show up when row is focused, and make it tabbable - Revert "custom select box: react on KEY_UP to be aligned with actionBar so appropriate event gets canceled"
Tweaks to settings editor as list implementation:
Original settings editor as list implementation:
Moved repl tree filter to the separate common component
Implemented filter for debug console output
Try disabling the polling based loading for serverless
Make sure we always dispose of all disposed of entries even if one of them throws
re #99151.
Update github authentication extension kind
Resolve customExecution task definition before going to exthost Part of #81007
fix typo
more hash tests
Add when to task commands
Cannot overwrite read only files anymore (#104651)
code.sh: add quotes to `export WSLENV`
use vscode-emmet-helper isnetad of vscode-emmet-helper2
web - first cut paste support
scorer - add test for strict prefix matching
actionBar: after a clear actions might be re-added to simply toggle some actions. We should preserve focus
lifecycle - tweak error wording (#104593)
Bump up tasks aaccuracy (maany false positives)
fix #101365.
keep cellRenderer clean
fix #101871.
remove patch version
re #103661.
re #103881.
Re #103881.
update to indexer version 0.1.4
Pick up TS insiders
fix #104583.
test for GitHub Action updated functionality
re #104583.
Removes tabs completely (required for DT)
Bump actions, aadopt new "vacation" config
Revert "Disable bot for joao (vacation)."
fix #104581
Remove node usage from browser
fix #104569.
Queue initial term data events for ext host delayed init
Remove @optional, convert native service to contribution
debug: register editor actions also not lazy
breakpointEditorContribution: do not listen before a debug adapter is registered
fixes #104570
debug: display badge on view container where the CALL STACK is
debug: add to watch should open the watch view, not debug viewlet
debug contribution: move registration such that some things are not lazy
avoid top toolbar overflow
always show the toolabr when the document is empty
fix #99351
less innerHTML usage, eg. textContent for styles and innerText for labels
debt - use innerText instead of innerHTML
Dragging a diff view to another editor group loses scroll position (fix #104517)
Reworks alignment logic to handle certain nesting cases (#85657)
scorer - cache needs to account for multi-queries
scorer - fix debug messages
scorer - boost uppercase matches (to help camelcase matches win)
remove .h++-specific icons
scorer - drop prefix and camelcase scoring and prefer lcs
fix compile error
some jsdoc, https://github.com/microsoft/vscode/issues/102091
add TextDocument#notebook api proposal, https://github.com/microsoft/vscode/issues/100890
Position tree markdown hovers with mouse x
web - remove shell_exec from php sample
make sure to dispose worker service when test is done, should fix https://github.com/microsoft/vscode/issues/104485
Revert "maybe maybe for https://github.com/microsoft/vscode/issues/104485"
notifications - enable ellipsis overflow for buttons again
nls - remove legacy local.json migration
:lipstick: binary file editor
Don't require creationOptions to be the same object
fixes #104448
debug: improve self-host debug configurations
Don't fire onDidChangeTerminalDimensions when cols/rows is 0
Compare full filenames
push SCM above added panes by default
revert seti-ui update but leave h++-specific icons
revert to 2.2 and 0.1.2 temporarily
don't use tranlate3d in notebooks for custom menus
Better alignment fix of items w/ icons
debug: fix parent session badge not hiding correctly
add minor version
Removes rogue onFileSystem activation
:lipstick:
removed 2.2 dependency
Removes short-circuit that causes mis-alignment
fix #102156.
fix #104128.
add join cell above into toolbar context menu
Updating the unit test with the code changes
Removing any trailing : from the selected range and incorporating changes suggested
update distro
Use dependency injection
Make accounts toggle consistent with other menu items, fixes #104512
Formatting ref #104400
fixes issue with dropdowns in lists
Add "insert cell" submenu
Show validation message on empty fields in issue reporter, fixes #104472
Bump actions
Allow hover x to be overridden
actually use 80 for ping (mistakenly went full send to 60)
Bring ping days down to 80. Getting close to final taarget! (60)
Add token to needs more info closer
debug: register contributions only once debug adapter extension got registered
restructure debug.contrubtion.ts into logical registration parts
Preserve custom webview file icon in HC (fixes #104434)
debug registration: futher simplify debug.contribution.ts
debug: move debugColors to separate file
debug: more precise computatino of top stack frame call stack decoration
debug: use cancellation tokens for stackTrace aslo
use $-prefix for IPC functions only
maybe maybe for https://github.com/microsoft/vscode/issues/104485
:lipstick: forof over foreach
notebooks - use ResourceMap
Startup error dialog closes immediately (fix #104493)
fixes #104475
memento - add error logging for #102251
tokenClassificationRegistry.ts: Use Object.create(null)
throw TypeError when creating diagnostic without range or without message, fixes https://github.com/microsoft/vscode/issues/99410
unit test for document remove
Dimmed Monokai theme - improve markdown support  - redner bold/italic , link title color
fix GDPR annotations
fix GDPR annotation
Disable assertion around mailto
Update marked to 1.1.0
Add more specific checks for being on TS 4.0.1
add more tests.
Adds ExtensionContext.extensionRuntime - #104436
chore: update to electron 9-x-y (#102011)
fix size constraints
fixes #95888
Silently ignore the screen size is bogus error in the Process Explorer, fixes ##98590
Output: only change channel when proper channel id is passed
make proposed stopDebugging API final; fixes #101883
Catch the potential 'disconnect' error - no need to show it to the user since the adapter is shutting down
Disallow writes to pty larger than 50
don't resend onDidOpen event
run to cursor: If the cursor is on a line different than the one the debugger is currently paused on, then send the breakpoint at column 0 on the line otherwise set it at the precise column
scm: repositories visibility
cleaner submenu action
update notebooks
polish scm repositories view pane
scm repositories view pane
ref count document data on extension host side
callStack: change "load more frame" to "load all frames"
playground/mem.fs: avoid windows defender warning
fix compile error
re-trigger completions when typing into a new word, https://github.com/microsoft/vscode/issues/99504
fake browser event for select all
fix npe
resolve typings
add skipped test for https://github.com/microsoft/vscode/issues/99504
debt - don't duplicate mock util in suggest land
Revert "custom select box: react on KEY_UP to be aligned with actionBar so appropriate event gets canceled"
fixes #104059 (#104193)
Removed lines requiring Typescript version < 3.0 (#104211)
Use TS RC for building VS Code
:lipstick:
cursorMove.
Remove extra code
Update to use commandService
add delay for showing progress
fix #104095. Register undo/redo/copy implementation for windows & linux.
npm: enable debugging all scripts
Add limitHit messaging to search editor.
Protect against exception from line not existing
Remove expect error
Remove expect error for TS 4.0
re #104262. add log for execution and cancel.
re #104262. Add logging for notebook.
Remove terminal link handlers
decrease deep classifier run frequency
Pick up TS 4.0 rc for insiders
Remove any casts
fix #104397.
support move multiple cells.
wrong preview rendering after drag and drop
inspect layout
Revert "use classList"
Hide hovers when widget manager is disposed
fixes #104224
list: indexOf
fix escape usage
scm: move menus to view service
interfaces for scm menus
use classList
rename
Finalize terminal link providers
drop below folded markdown cell.
update integration tests
extract RepositoryRenderer
await for promise finishing
use IEditorProgressService
duplicate copy action
no polling
fixes #104293
update distro
fixes #104299
update references view
preLaunchTask should complete before resolveDebugConfigurationWithSubstitutedVariables
Moved conditions to the stage level
Overview ruler should respect breakpoint color
node-debug@1.44.9
update es6 search
Extract Mooncake into its own stage
Azure DevOps pipeline improvements (#103782)
Add JUnit reporter for unit tests (#104354)
introduce scm view service
Disable bot for joao (vacation).
treat .c++ & .h++ files as c++, & update icon theme
Git: Add cherryPick command
fix missing set
fix #102718, add formatting indicator
Move code cell drag handle to be a separate element so i can drag from the very bottom/top of the cell. And fix up drag images.
fixes #103281
Add 'trailing' option to render whitespace
fixes #101631
re #104196. bring back list 3d transform.
fix #104196. detached overflow widget.
fix #104170. update layout with preset dimension if it exists.
fix #104176. more editing metadata protection.
bump version
fix: preserve zoom level on navigation (#104268)
fixes #104248
remove additional appendChild fixes #104224
Reenable localization tests
#103863 update label
update distro
Disable the "Ok" button for empty strings
install .net core 2.2 for rich nav dependency
updated rich nav task version
fix scrollbar missing in submenus
update distro
Move exist check to the right place
Add `IWorkbenchConstructionOptions._wrapWebWorkerExtHostInIframe`
fixes #104161
Add `IWorkbenchConstructionOptions._enableBuiltinExtensions`
Serve built-in extensions from `/static/extensions`
Also download `webBuiltInExtensions` when running from source
fix #104015.
fix #99882. handle dragging position.
Bump issue notebook month
fixes  #104184
fix #104176.
Replace `innerHTML` with `innerText` when assigning non-html string
fix: vscode prelaunch task failing on case-sensitive filesystems
CSP: use `https:` instead of `*`
remove jsdoc for "void" return value; fixes #103925
make session arg optional; fixes #103934
show synced data command when account is available and sync enablements is not required.
fix revert content
separate merge and apply
fix machine name
fixes #101631
fix #104110.
fix #104121
Add more details about  flag, fixes #104080
rollback changes to conflicts handling
fix #99882.
Improve grammar
Use markdownDescription for ignoredExtensions
fix #104033
fix tests
Add check to ensure RC and forward use '--serverMode'. (#104123)
Only show the grab cursor for the left side
Update github token input prompt
:lipstick:
fix tests
Observe the new createAutoImportProviderProgramDurationMs property added by TS 4.0
Pick up latest typescript nightly to build VS Code
Add `Access-Control-Allow-Origin: *` to requests made to `/extension/`
move inspect notebook layout into developer category
fix #104102.
Make notebook outputs scrollable (fixes #103981)
debug: bump node-debug to fix auto attach issue
Include more detail about 'createIfNone' flag, fixes #104073
fix #103993.
Allow passing empty options to getSession, fixes #104078
add service to the log
Remove extra space in comment in vscode.d.ts
Add missing space in vscode.d.ts
scm: throttle resource group creation
scm: delay menu creation until necessary
fix memory leak, cc @lszomoru
Add default value to visibility Part of #104062
fixes #103144
custom select box: react on KEY_UP to be aligned with actionBar so appropriate event gets canceled
close diff editors when resource is accepted
add test
fix typo
fix configuring sync store from settings
fixes #103366
fixes #102818
fixes #102816
keep default flex values for children and use margins
fixes #102455
fixes #102303
fixes #102144
fixes #102138
fixes #101795
fixes #101643
fixes #103944
fixes #102158
refresh views on reset
First pass of optimizations
fix #103983.
Workaround #103926, maybe needs a fix in the toolbar
Update 'onDidChangeSessions' jsdoc, fixes #103986
Bumps github-browser version
webview hijacks the focus for undo/redo
Add Wiki content, update queries
Further relax CSP
Don't show candidate port for 0.0.0.0 when port is already forwarded for localhost
Relax `<iframe>`'s fetch CSP since it is not possible to know all origins that extensions want to connect to
#103915 fix compilation
#103915 Make experiment service optional
Filter extensions in viewlet
Add initial debug extension button
aa exp test
Include server id in telemetry and in user issue reports
Add more exclaimation points
Only wrap in `<iframe>` on the web
Ensure regexes are correct
emit kernel change.
Bring back support for `IStaticExtension.isBuiltin`
re #102503. send out save event after notebook content provider handles saving.
re #102503. onDidSaveNotebookDocument
Fallback to bundled version if selected TS version is invalid
notebook document, is untitled.
provide good dialog path for untitled notebook.
update distro
Allow passing in an exclude list to `scanBuiltinExtensions`
Use the search order settings for the search editor (#103627)
Change includePackageJsonAutoImports options (#103732)
Add note about providerIds
Bump elliptic in /extensions/markdown-language-features (#103658)
Add userEnvProbe (microsoft/vscode-remote-release#3224)
bring back copy/paste/cut command but without keybindings.
allow copy in static output.
use toolbar border color for vertical separator
fixes #103815
Don't use negative margins for spacing in markdown preview
fix word in comment
Do not inline vscode-web-playground (even if it is packaged)
fixes #103820
update tpn
move tas-client license from manifest to licenses
fix build
Avoid NPE
Replace `innerHTML` with `innerText` when assigning non-html string
debug: update js-debug version
adding tas-client to cgmanifest
Add rnw and rnm to workspace tags (#103211)
let -> const, settings
let -> const, search
let -> const, notebooks
update distro
Extract .js and sha to a separate file
build
split web extensions
fix error msg
Remove out of date focus trap in terminal
Move extension translation into IWebExtensionsScannerService
fixes #102715
fixes #103366
Wrap web worker extension host in an iframe to get a different origin
cleaner git submenus
fixes #102080
missing event disposables
update cglicenses
Update classifier.json
Revert "Use paginated non virtual list in Settings Editor (#103268)"
update css/json services
Send cell metadata changes to EH, add onDidChangeCellMetadata event
Hides timeline view if no providers registered
resolves #90995
notebook hook up with native copy/paste/cut
Support quickpick on open anyways (#103712)
fixes #103171
fix: inherit the compound root for all children of debug sessions
fix menu jumping
launch: fix build script
polish menu layouting fixes #103078 fixes #100851
launch: check prerequisites in a pre-launch task
hook native undo/redo with notebook
fixes #103681
fix submenu json schema
fixes #102109
remove gitignore text/plain association
remove extra imports
fixes #102989
fixes #102498
Add task test back in
remove console log
fix test
empty-line-wrap-fix
Adds protection if the folder doesn't exist
Forces LF line endings, since we check in these
Skip failing test
Revert "re #99399." Making folding indicators always visible was apparently fixed in some other way This reverts commit 459a9aedac2a2015eddd803b5b135f1058cbdbc8.
fix unicode download url error (#103460)
fix #102441.
Show cell run progress for a minimum of 200ms
fix #102518.
debug: only save when starting a new top-level session
fixes #103169
await for kernel resolve before executing and handle token cancelation for kernel picker
improve scrollable menus
revive kernel preload scripts
Add cell collapse state to cell metadata This needs more discussion - is collapse state metadata or view state?
debug.openDebug: change default to openOnFirstSessionStart
fixes #103342
Revert "chore: update to electron 9-x-y (#102011)" (#103599)
skip moree tests
fixes #101404
If a debug adapter fails to send a `terminated` event, VS Code should be more resilient
skip more tests
skip failing tests
Add wait wait in tasks test for execute to return
Remove hack in terminal task system to delay disposal This is no longer needed because #92868 is fixed
check in missing compiled file
Move `IRemoteAgentConnection` to `AbstractRemoteAgentService`
add Java pack to Welcome page
Add ability to log communication
add service url to error telemetry
#103544 Skip another failing test
Allow syntax highlighting for Dockerfile.*, Containerfile.* (fixes #102897)
#103608 temp fix
Revert "Disable links in search result editor."
Enable search-editor in serverless. Closes microsoft/vscode-internalbacklog/issues/1208
Remove unused
Close #100048
Removes internal gh browser & adds external
Allow for non-file uri's in search editor
retrigger checks
Add an option to strip starting separators in formatted ${path} substitutions (#103595)
Pick up new TS build
Add user facing error if service workers cannot be registered
diff delayer.
Skip another failing test
Check in built file
Skipping failing test
Add custom editor test extension
200ms delay for diff.
range map might be deleted when splice
Ensure xterm data is parsed before exiting (capping at 100ms)
xhtm->xht
update distro
Have a separate call for extension scanning (outside of remote agent environment)
:lipstick:
:lipstick:
Support cancellationToken in provideTerminalLinks
Add *.xhtm file extension
Split up getEnvironment() calls
Pending breakpoint should be saved across restarts
Update distro
Move `socketFactory` to `AbstractRemoteAgentService`
xterm@4.9.0-beta.8
cache scanned extensions
show simple notification when switched to insiders service
Builtin extensions: also inline the `package.nls.json` contents
#103544 comment out failing test
Reuse `scanBuiltinExtensions` in code-web.js
update distro
throw default service change error when default changes
update prefix sum and index when range map is updated.
improve the whitespace insertion/query speed.
Add basic support for saving untitled custom editors
fix #103301 use newlines rather than horizontal rules
Add polling based loading check for iframe
increase specificity of state label for better isolation
diff and color decorations
update extensions aria label to contain version and publisher display name
remove trailing /
Stabilize authentication consumer side, fixes #100993
use static error event
fixes #103170
update distro
update distro
Add `IOptimizeTaskOpts.fileContentMapper`
Replaced double quotes with single quotes
Make mtk classes more specific to avoid CSS conflicts
update distro
Revert change that breaks integration tests
suggest: do not announce "Item" before each item when docs expanded
debug viewlet: better update of the docked toolbar
use workbench service to check for enablement
Store determined extensions running location
Cache activation events
fixes #101978
explain why an eslint rule is disabled; see #101978
fix: add missing property to deserializeRunnable
Use paginated non virtual list in Settings Editor (#103268)
lcs diff
fix specificity. No hardcoded values
Add filename patterns for jsconfig.json (#103360)
Expose Terminal.hideFromUser on all ext hosts
refactor and fix selector
fix: remove extra div and center label
fix: remove flexbox to enable ellipsis
Use bufferChangeEvents when setting many context keys in the notebook CellContextKeyMange
notebook diff
comment out failing web integration test
add more settings sync tests
fixes #102346
get accepted resource from synchronizers
more synchronizer tests
update distro again
update distro
Add web extensions filder in scanBuiltinExtensions
adopt test synchronizer
update distro
Align build scripts
show preview for extensions
fix #103238
rename to editable resource preview
#100315 rename to Settings Sync
update distro
Small tweaks
refactor sync to reflect preview, merge, accept & apply.
Activity bar can be at left or right of workbench
Use Object.create(null) instead of {} for TokenRegistry
Change from dialogs to notifications in for extension actions
Running Extensions: sort slowest ‚Üí fastest
Treat all files with `git{config,attributes,modules}`/`editorconfig` extensions as properties files
Implement cell collapse for outputs #100308
fix: PowerShell typo
Move cell collapse indicator to same vertical space as run cell
remove unused import
fixes #103167
Use asAbsolutePath instead of hardcoding path
Reduce number of files copied for TS web build
add to descriptor
Add codeExchangeProxyEndpoints to web api
fixes #103166
Update Microsoft auth callbacks
Allow ms-vscode.references-view to use proposed API when running from sources
Log ext host terminal process requests
Remove some extension package.json patching
Do not ship unnecessary files with extensions
Minify extension resources
fix accepting local and remote content during merge
show merge dialog only when there are merges from another machine
set turning on context using enablement and sync status
#103238 Initialize as soon as one of the account providers is available
:lipstick:
Allow background tasks in dependsOn
Add support for web worker extensions to define their entry point via "browser"
Add tests for deducing extension kind
Improve default extensionKind detection
Add "web" as extensionKind to extensions which support this
Prefer using data-href if it exists on a markdown preview link
abstract more
Cell collapse indicator tweaks
Collapsing markdown, adding actions to menu and keybindings
collapse with ...
refactor to abstract class and use crypto.randomBytes
Add DebugAdapterNamedPipeServer
save kernel selection to memento if there is no isPreferred.
Make chevron always visible and vertically centered
notebooks: initial implementation of 'pure' output renderers (#103125)
fix #99399.
Update Microsoft auth provider extension kind
Sandboxed issue reporter, fixes #101833
re #99399.
Add featured filter
trigger kernel update when kernel provider is registered late.
update distro
return core
Update VSO check for auth
TAS-based experiment service (#103177)
fix import errors
fix activitybarPart import error
fix submenu json schema, add proposed disclaimers
make menusExtensionPoint.ts easier to edit
update menu extension point schema for submenus
spread SubmenuEntryActionViewItem all over
redundant code
fix submenus in peek
fix submenus in editor title control
reduce usage of MenuEntryActionViewItem
unused code
missing unused code
ViewPane knows about menu items
SubmenuEntryActionViewItem
do not show marketplace filters when disabled
fix #103009
delete unused code
delete ContextAwareMenuEntryActionViewItem
strict null checks
wip: submenu icons
shuffle secondary actions
Add some excitement
Update built TS web version
separator in toolbar
fix: open with the only editor directly (#102660)
[typescript-language-features] Add telemetry for package.json auto imports (#103126)
Add ... menu to each cell with extra actions
Add setting for package.json auto imports (#103037)
Build VS code using latest TS
Pick up TS 3.9.7
debug: fix breakpoints set during a session from being persisted
moveCellIdx
Minimize shipped tsserver
Hide terminal hovers when closing panel
operation batching and dnd folded region
Skip hasOwnProperty calls for arrays
Don't try to revive buffers
Move project status into host
remember last sync store url
submenu support on toolbars :partying_face:
:lipstick:
Tweak chevron padding
polish ToolBar
missing reference
extract IContextMenuProvider
cleanup actionbar ctor
create IDropdownMenuActionViewItemOptions
isolate DropdownMenuActionViewItem
move IActionViewItemProvider to actions
isolate action view items, delete duplicate IActionViewItem interface
fix #92818
Move command manager into commands folder
Rename files to mark them as browser or electron
Move fork impl into serverProcess
Move buffer sync support into server folder
fix #92919.
Add option to hide account icon in activity bar, fixes #97167
no assert for initial state
move notebook test to last
donot allow hiding default popular extensions view
:lipstick:
use tmp file for every test.
Migrate fixed dom context views into Shadow DOM (#102401)
fix submenus in view/item/context menu
fix submenus in extension/context menu
Don't add system run tasks to be added to recetnly used tasks
fix submenus in scm/sourceControl
prevent submenu cycles
proper SubmenuAction.id
submenus always support submenus
fix compile error
fix native submenus, delete ContextSubMenu
fixes #103053
revert
improve wording
remove not used proposed API; see #101883
fixes #103046
#102581 Rename the view to merges
#102581 - Remove trailing dot
Use object parameter for services
silent fail when the documents events are wrong
Move code lens files into own directory
Move task provider into own folder
Rename features -> langaugeFeatures
Clean up extension activation
Don't send git resources to tsserver
Move some files into server
enable windows.
still disable web integration test
Enable web TS Server  (#102990)
Treat all files with an `npmrc`/`npmignore` extension as properties/ignore files
Treat all files with a `gitignore` extension as ignore files
bring back web int test
Make sure main process webview file resource loads stays on main process
:lipstick:
close editors after untitled file creation.
wait for document close when finishing a test.
available kernels
Clean up group listener
lazy load webview if there is no webview outputs or not kernel dependencies
:lipstick:
re #102899.
Add left/right folding keybindings for mac
contribute configuraiton defaults through workbench web api
use workbench base config
re #102899.
bring on integration test.
Simplify auth sessions change event
fix submenus across workbench
move Separator down to actions
move SubmenuAction to common
Add extra rg logging for #100373
VS Code refuses to save a files with extensions it doesn't like (fix #102713)
allow to provide only url
fix compilation
fix tests
comment out notebook web integration tests
tests - skip failing notebook tests for now (#103003)
Remove spread operator
chore: update to electron 9-x-y (#102011)
#102581 update icon and merge view into title
:lipstick: dangling comment
auth dialog - enable context isolation (#102926)
web - contribute a "Go Home" menu action if we have a home indicator
electron - explicitly disable spellchecker
eslint - fix linting issues
Add missing code-import-patterns for files and directories targeting web. (#102961)
Update Codicons: add 'merge'
chore: bump electron@8.4.0
:lipstick:
save user selection of kernel provider to user settings.
kernel provider settings.
Remove extra gating around selector
Aadd link to upvote section of feature rewquest
Work towards allowing enhanced syntax server commands to be run against any file
Export  RequestCancellerFactory implementations as constants
Move logDirectoryProvide into server
Extract cancellation.electron
Extract NodeLogDirectoryProvider to electron specific file
Move lazyClientHost to own file
Extract onIsCaseInsenitiveFileSystem
Ensure account preference set after login flow completes
Emit activation event for auth providers when getSession is called
Add note about preferring .gif
update distro.
fix tests
fix arg number
retain dialog
fix #102504.
Make editor on type bg color themeable
#91696 start-up log
chore: bump distro
Move authServer to fix relative paths issue
Update wording
Add screencast mode line
align auto sync conflicts with manual sync conflicts
stdin - log raw output from running `chcp` command for diag
handle conflicts while turning on sync
Change where task execution context is set
#100346 merge unmerged resources while applying
sandbox - fix product name in process explorer
Report Issue => Report Issue...
unit tests - run them in same environment as our main code
debt - move supported encodings closer to where they belong
Enable sandbox and contextIsolation for process explorer when running with --__sandbox (#102924)
#102581 rename reset to clear with ...
#102001 :lipstick:
#102581 feedback
#102581 select the resource while reopening
#102581 show warning notification on conflicts
#102581 add buttons to sync editors
#102581 improve first time sync dialog
handle notebook text model creation in notebook service
early return when notebook document already exists.
make mainthreadnotebook controller object literal
mainthreadnotebook does not talk to mainthreadnotebook controller
slim main thread notebook document
model changes are always sent to ext host.
no longer handle notebook backup in the core
Update commands.json
Add \gifPlease
Copy providers array before freezing in extHostAuthentication
re-pick best kernel if the active kernel is not available.
set kernel should not block file opening
optional kernel id
Move process explorer into electron-sandbox layer, fixes #101832
support joining cells of all cell types.
active kernel info on notebook editor.
kernel change event.
clean up dependencies
Add MetaModules to workspace tags
Show input box for PAT in test environments instead of doing auth flow
Bump lodash from 4.17.4 to 4.17.19
Bump lodash in /extensions/html-language-features/server
always send model add data and check on the extension if this is a notebook-cell special case
some more unit testing
add runtime submenu support validation
fix nls
submenus api extension point
remove document that only the notebook did open
fix #102768
Bump lodash from 4.17.10 to 4.17.19 in /extensions/emmet
Bump lodash from 4.17.15 to 4.17.19 in /test/smoke
Bump lodash from 4.17.11 to 4.17.19 in /build
Bump lodash in /extensions/markdown-language-features
Bump lodash in /extensions/css-language-features/server
:lipstick:
update doc
oops
update octokit in github
use getEventOncePromise-util
add test that asserts cell document open are fired when the notebook is ready, not before
create "real" TextDocument when opening a notebook or when adding cells, don't create them again when the renderer makes models
#100346 :lipstick:
:lipstick:
eslint fixes @rebornix
partially revert #102627 (data loss with hot exit)
defaultUserWebExtensions setting
fix #102627
Add support for view initial state (collapsed or hidden) (#102002)
perf - move perf marking into code that is also used by CS
available kernels change event.
type convert glob
token source.
Add extra check to markdown state
kernel picker status bar item.
remove log
Cleaning up ts server logic
Address feedback on auth provider API
Add webworker support for microsoft authentication extension
Style notebook output tables
Add ClientCapabilities class
Update ts version used to build VS Code
Add the concept of client capabilities for TypeScript
Flatten conditional registration
update distro
#100346 disable buttons while turning on sync
fix paragraphs inside of <ul>'s which are too spaced apart. (#102719)
#100346 handle conflicts notifications and editors
#100346 fix label
#100346 use strikethrough for deleted previews
fix #102460
avoid conflict between new and legacy kernel
use cloud up/down icons
#100346 use cloud icon
#100346 use read only local files
#100346 fix opening diffs and accept preview
#100346 set data provider while rendering
Update Codicons: add 'cloud'
Tasks without a registered definition should run (#102696)
#100346 change the order of dialog options
#100346 UI changes - introduce sync and cancel buttons - ability to discard - update entries on state change with decorations
#100346 support discard
#100346 introduce merge state on a resource. Do not apply automatically.
add eol to IMainCellDto, no more attach/dettach text document but use the actual (sync'd) document or a fallback cell document
fixes #98931
fixes #102108
always show SCM twisties
fixes #102682
debt - migrate rename api command
Markdown hover to tree doesn't require resolve Part of #100741
Add GitHub public repo option (#102406)
better name for actual uri, https://github.com/microsoft/vscode/issues/101978
fix extension editing main
add uri to concat doc proposal
throttle save participants in certain cases (#102542)
Disable failing tasks test to get build
fixes #102578
activityService.showViewActivity
Update log grammar
web - tweak wording of quality change dialog
fix build
Maybe fix listener leak warnings from notebooks
only prompt on imp ext recommendation pattern
debug: bump js-debug version
new kernel provider works side by side
sketch for notebook kernel
#100346 rename view
#100346 show view progress
#100346 move manual sync view to separate file
debug: add preRestart and postRestart tasks to configuration
Swallow ioctl EBADF and trace log all resize exceptions
Add when property to tasks definition Part of #102477
fix build
code-web: read built-in marketplace extensions
update references view
Revert "fixes #100016"
github: PushErrorHandler, fork and pr
git: PushErrorHandler
code-web: fix minimist options
code-web: --extension parameter
web - new API to allow for switching product qualities
Mixin ResolvableTreeItem properties (#102521)
editor memento - add fallbackToOtherGroupState option (fix #102485)
tests - reuse TestEncodingOracle
es6 - adopt more Array/String#includes over indexOf
Quick open: Once "file results" are loaded, it resets selected file to the first (fix #102480)
Have TerminalLinkProvider.handleTerminalLink return ProviderResult
Revert "Convert TerminalLink.length to endIndex"
Remove awaits from focusNotebookCell calls
chore: bump distro
update distro
#100346 improve managing sync views. - enable only manual sync view and not all
re order sync views
Skip mac copy test for now
Add delegation back to renderer process for cetain webview resource reeds (#102442)
Enable webview tests on remote as well (#102444)
h1 bottom margin is too much (#102520)
:lipstick:
:lipstick: avoid kb conflicts with ime on windows.
update git.d.ts
Re-enable markdown document link tests
Update distro
only emit ctrl+h for cmd.exe when the terminal is in focus
add api notebook
git: remote source provider picker command
ReadableStream => ReadableStreamEvents
:lipstick: - adopt some await for commands
Web: integration test failures in workspace events (fix #102365)
use disposableTimeout
scm: always call onDidChangeContentHeight
use view state from existing editor when not having view state, https://github.com/microsoft/vscode/issues/101356
use layout service to hide sidebar or panel
#100346 Introduce manual sync view
#100346 add merged prop to resource preview
fixes #102358
use NotSupportedError for symbols that require the ability to launch processes, https://github.com/microsoft/vscode/issues/101857
:lipstick: cannot over can't, https://github.com/microsoft/vscode/issues/101857
resolve comment variables against language at position, https://github.com/microsoft/vscode/issues/102403
fix https://github.com/microsoft/vscode/issues/102330
chore: remove redundant code
#100346 mark change as added if file does not exist
#100346 introduce mergable previews
#100346 Prepare for manual sync
Throw if extension passes a non-string value to `MarkdownString`
fix styling to improve heading spacing fixes #102036 (#102427)
Use joinPath instead of node path.join
fixes #102409
fix #102117
re #102123.
fix #102313.
re #102313.
fix #102153.
Skip document link tests
:lipstick:
re #102423. do not share the cell text model if copy/paste to another document.
fix #102423.
update distro
fix #102311.
:lipstick:
Allow copying text from extension webviews (#102029)
Rework copy paste and other browser events for webviews (#101958)
Support the new 4.0 definition of isArray (#102413)
debug: bump js-debug to 1.47.5 for recovery
debug: always clear out any js-debug state
debug: use previous node debug for the July release
fix #102411.
Disable sign out for account specified through embedder API
Use own version of toJson
re #93070. test for command arguments.
fixes #102262
fix: rename textFileEdiorModel to textFileEditorModel (#101849)
Add doc for executeTask and openTunnel
tweak jsdoc for env.shell, https://github.com/microsoft/vscode/issues/101857
Return '' from env.shell, remove env var collection overrides
Name magic number
Move env var collection impl into common
Add @throws jsdoc to createTerminal
encoding - disable test on windows
ignore remote and web when yarn in arm64
encoding - add test for #102202
encoding :lipstick:
Move findExecutable to extension host Part of #101073
Improve isMarkdownString check
update jsdoc comment for https://github.com/microsoft/vscode/issues/101857
env.appRoot is empty string when not having an application root, https://github.com/microsoft/vscode/issues/101857
re-use default NotImplementedError, make base type as implementing task service, https://github.com/microsoft/vscode/issues/101857
re-use default NotImplementedError, fyi @Tyriar, https://github.com/microsoft/vscode/issues/101857
add deprecation notes to path variants, some more jsdoc, https://github.com/microsoft/vscode/issues/101857
no imports in vscode.proposed.d.ts
#100346 use manual sync task while turning on sync
#100346 inline SyncResourceConflicts type
#100346 merge single resource
Move isMarkdownString to extHostTypes MarkdownString
Use TextDecoder when decoding UTF-8 (#102369)
fixes #102349
graceful fallback, expect the real error in log, fixes https://github.com/microsoft/vscode/issues/102340
debt - simpler collapse all action
#100346 reset preview folder when sync is completed
remove resourcePreviews from IUserDataSynchronizer
#100346 pass sync resoure while accepting content
#100346 Support merge in synchronizer and add tests
:lipstick:
#100346 set conflicts status only when asked to applied
Move css import, remove eslint-disable for #101978
Remove unneeded import
Clean up usages of deprecated startsWith/endsWith helpers
file extensins: put primary first. For #102100
"Duplicate Workspace in New Window" just creates new window and opens workspace.json file (fixes #102148)
use Action2 for call hierarchy title commands
Disable links in search result editor. Closes #91453.
Maybe fix notebook listener leak warnings fix #102177
Updating colorization fixtures
Working on supporting markdown links in serverless+web
Adding tests for opening markdown document links
Use uri
Convert to async
Update markdown grammar
Update distro
xterm@4.8.1
Localize and use product name
Only throw error if releaseNotesUrl doesn't exist
Refactor process explorer into class
Auth provider tweaks, change types of change events
Clean up multi root labels (#102051)
#100346 introduce manual sync task
Reposition Editor Reopen With action. (#101936)
Remove some uses of deprecated items from es6.code-search
#100346 - Prepare for manual sync
:lipstick:
Creating files will add 2 times BOM (UTF-8, 16) #102103
tests - disable ts integration tests
suggestFilename: use modeService instead of mime
Reading from stdin via tmp file and pipe raise an exception #102085
notebook - skip failing test
update es6.code-search
Sort extensions by primary languages
Undo unnecessary change
Expose `diffEditor.codeLens` to VS Code users
nls - fix a few missing or wrong alias
debt - more action2 adoption
integration tests - need to compile test extensions when running against build
#100346 prepare for manual sync
dont recommend extension needing proposed API
update distro
Remove eslint disable -- #101978
:guard: test for join cells.
use ref when dealing with cell text model.
:lipstick:
fix #102019.
fix #101602. Select text in find input when opening the find widget
notebookCellListFocus
fixes #95418 activitybar treated as unit for kb nav
Add navigation role to settings-toc-wrapper (#101966)
add options support in notebook find widget.
%s/override/overwrite
fix #101937. update theme colors when theme switches.
feat: enable sandbox for proxy auth window (#100907)
Remove eslint disable
emmet serverless
scope inspector: semantic color rules from settings not correctly shown
debt - a few more action2 usages
editor option: overflowWidgetsDomNode
extract extHost.common.services and have node- and worker-services for specifics
Remove eslint disable rule from terminal
web - remove deprecated command property for home indicator
debt - adopt action2 for help actions
add storageUri and globalStorageUri to ExtensionContext, https://github.com/microsoft/vscode/issues/101857
add workspaceStorageHome and use that in extHostStoragePaths, remove  appSettingsHome, https://github.com/microsoft/vscode/issues/101857
send globalStorageHome to webWorkerHost, https://github.com/microsoft/vscode/issues/101857
add ExtensionContext#logUri, https://github.com/microsoft/vscode/issues/101857
move globalStorageHome, workspaceStorageHome to shared env-service, https://github.com/microsoft/vscode/issues/101857
#100346 Use resource previews and remove conflict type
Improve markdownDescription after PR feedback
debt - adopt action2 for developer actions
new proposed API stopDebugging; see #101883
fix compilo
add `ellapsedRenderer` to measure the time it took inside the renderer to create the workbench, https://github.com/microsoft/vscode/issues/101850
diag - add a cli arg to open devtools when window opens
let timer service report perf telemetry, https://github.com/microsoft/vscode/issues/101850
rename (internal) _Uri to CachingUri https://github.com/microsoft/vscode/issues/101978
add disabled test for https://github.com/microsoft/vscode/issues/101870
don't ignore first select event, https://github.com/microsoft/vscode/issues/101941
add tests
#101504 reset sync status when getting last sync or remote state fails
Use registerAction2
recommend to use vscode.workspace.fs for notebook content provider.
prompt to revert/override if notebook file on disk is newer
fix #99353.
Remove notebook cell shadow
Use latest typescript nightly for building VS Code
Layout editor when switching markdown cell to edit mode the second time For #101940
Add slight delay to test
Remove duplicated test
Add GDPR comments for auth provider telemetry
debug: don't rerequest scripts whenever a session label changes
Rework workbench.action.searchEditor.deleteResultBlock into search.searchEditor.action.deleteFileResults closes #100859
notebook cell decorations
add DebugSession.terminate; see #101883
fix documentation for DebugService.stopSession
:up: iconv-lite-umd@0.6.8 (fix #101905)
show sync activity view by default
fix i18n
Add daemon build kill tasks
undo double end-mark
better end perf mark, tweak start marks, https://github.com/microsoft/vscode/issues/101850
perf - mark didLoadWorkbenchMain in web too
Encodings: do not load iconv-lite if file is UTF-8 (fix #101916)
support extension packs in exe recommendations
enable loader stats for web-workbench, https://github.com/microsoft/vscode/issues/101850
encoding - add commented out failing test for #101856
:up: distro
update distro
update distro
make perf util loadable from web, https://github.com/microsoft/vscode/issues/101850
better name for global, simpler util for workbench.js, https://github.com/microsoft/vscode/issues/101850
fixes #96380
Ensure tasks are resolved when run from extension host
debt: remove usages of deprecated startsWith util
fix #99664 - remove the unused deprecated utils
#99664 Remove last usages of keys and values @rebornix @roblourens FYI
#99664 remove usage of deprecated keys util
#99664 do not use deprecated values util
use values iterator
:lipstick: #101622
Enable ts tests on ./test-integration.sh (#101826)
fixes #63959
disposed webviews might be revivable (#100979)
Bump vscode-ripgrep, fix #96521
Adopt loader's `amdModulesPattern` option
Update to latest loader
Remove special grammar rules for console in js/ts
debug: update table visualizer version
remove legacy layout migration
debug: update js-debug to 1.47.3
views - buffer context key changes (#101798)
adopt inno setup arm64
fix inno setup warning
use modern inno setup styling
fix code oss app id
debt - remove unused userHome from extHost env, also some todos
Typo: ICommontTelemetryPropertiesResolver -> ICommonTelemetryPropertiesResolver (#101739)
Encoding euckr does not exist anymore (fix #101847)
#100346 prepare for manual sync
debt - move perfview editor to browser
debt - have ITimerService for browser and electron
encodings - failing test for https://github.com/microsoft/vscode/issues/101847
use compound tasks for selfhost
fixes #100468
fix hungarian translations
remove default english translations
update translations
Revert "fixes #100147"
don't run focus-dependent test on build machines, https://github.com/microsoft/vscode/issues/100828
:lipstick:
sandbox - remove native-is-elevated from renderer
Reduce usage of utilities (for #99664)
bootstrap - use preload script to access Electron IPC
update to innosetup 6.0.5
Rename `includeEmptyLines` to `ignoreEmptyLines`
perf - set zoom level from electron-main and stop using webFrame in renderer unless changing zoom
displayName -> label, use providerIds in favor of getProviderIds, #100993
Cleanup dangling import
fix #101827.
Making TS tests more reliable
Remove debounce on key change (#101811)
Hide button iff `additionalProperties` is false (#101810)
re #101436. update builtin notebook actions keybindings
Reset model state if setting key changes (#101806)
Correctly handle null default values for objects (#101807)
Encode webview state when injecting it into the webview
Update Codicons: add debug-alt-small and vm-connect (fixes #101026)
Sort implement abstract above remove unused
fix #101630
Disable markdown commands when in markdown cells in notebooks
Extract workspaceContains related logic to a separate file (#75284)
fixes #101537
fix #101681. avoid out of date splice2 triggered by hidden range update.
chore: bump electron@8.3.3
Add extra bottom padding for lists in settings (#101812)
Don't add pairs with empty keys in object settings (#101809)
Bump needs more info delay
fix #101808. fix editor gutter width when folding is disabled.
Clarify requirements, fix for smoke tests
Address part of feedback for #100993
context key - a bit of bufferChangeEvents when changing many context keys at once
fixes #101688
Add new Makefile test case for upgraded syntax rules (#101719)
add stripped-down serverless extension editing
Update grammars
Revert "Extract closeTimeout constant"
fix message controller z-index issue, https://github.com/microsoft/vscode/issues/86758
crop suggest details length, and markdown value length so that UX doesn't freeze, fixes https://github.com/microsoft/vscode/issues/100949
fix https://github.com/microsoft/vscode/issues/101384
adopt new loader, https://github.com/microsoft/vscode/issues/101685
hide git rev-parse --show-toplevel
perf - do not access zoom level when DOM nodes have been created
saveUntitedBeforeShutdown -> saveUntitledBeforeShutdown (#101740)
code :lipstick:
fix #79275 enable encodings for web (#101706)
remove jschardet typings workaround for #79275 (#101705)
Add loc string comment for search see #100941
Update notebook output width (fixes #101663)
fix #101678 Show SCM uppercase in settings search titles
dnd - support dirty editor drop that is empty
web :lipstick:
Move read and write logic from nativeTextFileService to textFileService for #79275 (#100804)
:up: jschardet@2.2.1 (#33720) (#101489)
fix #101674 Improve text of SCM count badge settings
Bump version number
Check if focus changed (fixes #101657)
scm ux: setting to toggle providers counts
update queries
parallelize watch-client and watch-extensions
check for totalmem before starting compiling
debug: final js-debug update for 1.47
Update VS Code refactoring support for new TS 4.0 api
Remove empty line
üí™ Trim more padding from notebook cells (refs #101600)
Added word boundary on tsserver regex (#101598)
Dont overwrite context lines if defined in file
Make sure webview is focused before intercepting copy/paste
Add telemetry for how often find widget is enabled in webviews
Makes ‚úî commit button work
debug: close whole vscode 'browser' when ending sessions
fixes #101592
Update notebook cell color token descriptions (fixes #98984)
Bump node-debug
Reduce whitespace in notebook cells (refs #101600)
update distro
Comments for #100941
exclude duplicates from verification
compacted debug sessions should show name of child and not of parent
change noCompress -> compress and make default to not compress sessions in call stack
tweaks
add verification notebook
fixes #101554
fixes #101572
scm ux, related to #101103
web - fix performance measures
Adds branch support
Re-adds command
SCM UX exploration #101103
storage - remove unused code
Bump node-debug2
debug: update js-debug
Remove extra parameter added for #100238
Revert "fix #101463."
avoid revert if it is not dirty
Scope markdown margins to headings
Update notebook color token names (fixes #98984)
Pick up new TS version
Always use http for internal webview resource loading
force rebase when pulling
Bump distro ThirdPartyLicenses updates for vscode-ripgrep
Add border to top and bottom focused notebook cells (refs #101375)
Don't call ext link provider for empty lines
Add warning about async usage of provideTerminalLinks
contextmenu - do not send functions over ipc (fix #100982)
Add note about re-using options objects
fixes #101337
fixes #101432
fixes #101411
fixes #101146
fix #98920
fixes #101410
fixes #101103
fixes #101094
fixes #101400
Shell path -> shell executable
fix https://github.com/microsoft/vscode/issues/100633
fix tests
Require ctrl on link provider link
add scm label
Add 'pnpm' option to NPM scripts (#100654)
fixes #101251
fixes #101431
fixes #101055
fixes #101351
fixes #101442
fixes #101434
replPaste polish
fixes #100235
fixes #100016
fixes #99798
fixes #100701
rogue `return`
fixes #101409
fixes #100479
high contrast theme: add semanticTokenColors for cpp. For #97177
use workspace fs
fixes #100183
fixes #99447
files - some more readonly use
fixes #90732
update extension dependency, https://github.com/microsoft/vscode/issues/100487
fixes #101078
fixes #95948
Clean up for #101326
Comment out part of test - see #101462
fix #101363
fix #101362.
fix #101465.
fix #101463.
Make sure getEditorOverrides can return explicitly requested editors
fix #101380.
refs #82759
re #101445.
fix #101445. Placeholder for empty markdown cell.
Polish notebook execute cell positioning
fix json readme typos
typo in JSON fileMatch hover text. FIxes  #101408
Add ending period to terminal launch notification messages
Change troubleshoot button to 'Open Help'
fixes #100941
use performance.mark to get entry to timeline (#101271)
update distro
fix build
debug: contextKeyService.bufferChangeEvents
fix #101248
add nls comments for #100941
Bump vscode-ripgrep in remote/
chore: bump electron@7.3.2
Bump vscode-ripgrep for ARM windows support
Run OSS tool for v1.47
Revert "chore: bump electron@8.3.3" (#101324)
Removes now unneeded safety net check
Disable "dynamic height" on markdown cells
notebooks: ensure preloads load before webview output is shown (#101166)
debug: bump js-debug back to 1.46.2
fix #92892.
debug: revert js-debug update until build finishes
Always show header
Optimistic updates for object renderer
Dont show add button if additionalProperties is false
Render a select box for adding static keys in object renderer (#101308)
Update notebook scrollbar styles
fix #100215. focus the nearest result when loop is disabled.
Update notebook cell styles for light themes
output-plaintext, set break-word
Minor code reorg
debug: update js-debug version
Port electron webview focus fix to iframe based webviews
Update to latest TS nightly for building VS Code
Don't require text focus for copy paste actions
Remove extra dispose implementations
update distro
npm web: add when contexts
web: bring back temporary workaround for package.nls
fix tests
Change value widget in object renderer based on key (#101261)
[css][html] update services
Clarify Code -> VS Code
Adds tasks for web extensions
model resolver - do not have invalid arg
Official version number regex and doc (microsoft/vscode-remote-release#3253)
fixes #101277
do not use extensionStoragePaths in web @rebornix FYI
Remove unnecessary excludes
Apply inputValidation.errorForeground (fixes #99573)
ignore more things for `vscode-textmate` and `vscode-oniguruma`
update distro
debugService: pass delayedInstantationFlag
update to `vscode-textmate@5.2.0`
web - exclude more things from modules
Allow version numbers (fixes microsoft/vscode-remote-release#3253)
Configurations by container name (microsoft/vscode-remote-release#3198)
remove scm.providers.visible
scm: fix input box selection
remove mainPane.ts
add execution id telemetry @lszomoru FYI
fix scm synthetic focus
fixes #101257
fixes #101176
fixes #101161
Add comment to noOsSpecificGlobalTasks string Part of #100941
Adds file create, rename, & delete support
Adds timestamp to GitHub stat requests
Add comment for invalidTaskJsonOther string Part of #100941
update iconv-lite-umd to 0.6.5 for #79275 (#101262)
storage - add isNew method (#101217)
Improve a11y for settings object renderer (#101058)
#100941 clarify translations
Update to latest loader.js
fix mkdir in key-value fsp
perf - use idle value for resource glob matcher in history
electron - disable remote module in all windows (#101224)
introduce resource previews
update iconv-lite-umd to 0.6.4 for #79275 (#101213)
Prompt user to upload TS Server log
Always enable dynamic syntax server on TS 4.0+
Reduce duplicate code
Retry fetching release notes on failure, and display failures (#101158)
git: lighter warning
fixes #101053
context view: showContextView returns IDisposable
fix scm input box height on refresh
re #91507. re-focus webview when navigating back from another editor.
fix #99393.
Make sure we decode the path for electron's file protocol
Add boolean support for object renderer in settings (#101082)
fix #97998. let the api throw.
fixes #101054
Changing return type back
Changing commit message auto-fill to use the first non-undefined message
call stack: do not do any additional polish of actions for compressed elements
call stack view: automaticaly expand singe children and some other polish
Bump distro
update typescript-vscode-sh-plugin (fix version check)
Changing commit message to use Promise.race instead of bad comparison
update language client versions
Adding .git/SQUASH_MSG detection to commit message autofill
callStack: improvements to how sessions with chilldren are auto expanded
tabs - restore previous blur() behaviour to reduce flicker
better fix for debug select box
fix windows path issues in yarn watch-web
fix merge-conflict browser main
fix merge-conflict for browser
Remove duplicate
Add a shortcut: `yarn run watch-web`
Update to latest webpack to unblock `gulp watch-web` on the mac
workspaces - do not leave stale untitled workspaces around
add watch-web & compile-web to scripts
fix #101028
shared webpack browser config: add WEBWORKER definition
:lipstick:
fixed state restoring on feedback window reopen (#101074)
title control: use 1_run as a group name
move indexedDB @bpasero FYI
fix tests
text files - go through working copy service when creating
working copy files - add a create method and adopt
fix #100938
editors - do not hide certain useful secondary actions when tabs are disabled
Revert "exploration - do not merge back to branch automatically to keep repo small"
remove wrong non-null assertion operator
Add localization comments, #100938
scm container fixes
re #98100.
refs #100938
introduce notebook cell list slider colors.
fixes #99895
Use dom-ready event instead of did-start-loading for webviews
fix #100992.
Add experimental support for using iframes for webviews (#100991)
use shared webpack config for browser
used shared webpack-config for browser
Polish notebook cell styles
terminal: allow terminal types to be contributed
fix error
Remove extra separator in sync menu, fixes #100948
Add deprecated to old providerIds authentication method
debug: allow debugging the renderer process (#100242)
move scm view
Removes unused usings
Removes Open repository command for now
Adds cs querystring to yarn web for editing
Improves stat perf & accuracy Removes rename change (will track like git, delete + add)
Adds timestamps to changes
Adds edit & commit support (wip)
update distro
support managing web extensions - Allow installing extensions with web resource asset type - Allow uninstalling
Use HTTPS urls for SchemaStore.org
remove unused import
add identifier to scanned extension
add `yarn watch-web`
normalize relative pattern base before sending to blog (fix #99938)
Finalize open file dialog title
fixes #100387
add "run" group to editor title actions
:lipstick:
scm: join status and actions
fix(search): Replace crash empty string pattern
electron - try catch around screen API usage (fix #100334)
add root folder: do not open the explorer by force
fix scm input visibility
fixes #100847
scm view improvements
accessibilityInformation: jsdocs
[html] make mode services async
of not in...
remove scm repository description
don't check for number of documents, https://github.com/microsoft/vscode/issues/100842
exploration - do not merge back to branch automatically to keep repo small
introduce noCompact flag to DebugSessionOptions
fixes #100871
change unstage selected ranges to cmd+k cmd+n
textfiles - do not have VSBuffer on the layer of ITextFiles
bind jpeg renderer.
Use option chaining
Remove extra conditional
Add 'github-browser' to VSO allowed extensions list
Remove old getSessions and login methods from auth provider API
fix #98090. hash for float numbers.
update distro
vscode-textmate@5.1.2
fix #100206.
cleanup ES6 iterables utils in Comments.
Support `metaKey` for iOS (#100869)
Update exploration-build.yml
fix #100231. Insert code cell uses the same language from surrounding cells.
Remove install-update labeling
fix #100459. do not make it dirty for empty/new document.
Revert "force to use iframe for notebook."
:up: distro
bootstrap - add helper utility for node.js things
Load loader.js via a `<script>` tag
Revert "#100911 Skip failing tests"
fix #100911. re #100458.
AccessibilityInformation: finalize api
:lipstick:
status bar: use better default for ariaLabel, get the codicon name since it is well represented
Add resolveTreeItem to custom tree Part of #100741
exe recommendations: show info
Convert TerminalLink.length to endIndex
Correctly constrain T in TerminalLinkProvider
Remove TerminalLink.target
use indexedbd fsp for userdata
- reuse inmemory fsp for inmemory log fsp - rename keyvalue and indexeddb log fsp to file fsp - create indexeddb outside the provider and pass it
enable undo/redo for create, delete, and rename, https://github.com/microsoft/vscode/issues/91383
make it less likely to suffer from https://github.com/microsoft/vscode/issues/100949
Make IWorkspaceUndoRedoElement.split optional
Register UriComparisonKeyComputer's per scheme
JSDoc improvements
Have text models capture an undo-redo snapshot when the first edit occurs and on dispose restore that snapshot
Remove incorrect null assertion
explorer: slight polish
remove semanticTokensHelp
[html] update service
[css] update service
ux
some extra tests, https://github.com/microsoft/vscode/issues/96444
add validatePosition and validateRange, https://github.com/microsoft/vscode/issues/96444
add ConcatDocument#contains, https://github.com/microsoft/vscode/issues/96444
Revert "make NotebookConcatTextDocument extends "normal" TextDocument, https://github.com/microsoft/vscode/issues/100186"
working copy - avoid bypass strict null
updateImportsOnFileMove is case-insensitive (fix #99690)
File operation events support multiple resources (#98988)
restore view state when canceling notebook quick outline, https://github.com/microsoft/vscode/issues/96489
electron - always go through window#focus()
#100911 Skip failing tests
Drop node.js require for bootstrap and bootstrap-window (#100857)
extensions - put warning about disabled extensions after workbench is restored
update distro
Update latest-release-monitor.yml
Better font-size override for dialog icons (fixes #100863)
re #100458.
re #100454. unknown.
re #100454. remove too much as any.
Revert "Use custom scheme for loading webview wrapper contents"
Constrain types of providers
force to use iframe for notebook.
add library loader
extract loadLibrary
debug: color record codicon in debug view the same color as stop
fix another index out of range.
fixes #100784
remove extraneous console log
wrap up todos
:lipstick:
:cleanup:
repository context actions
styling
styling, menus
fixup! pr comments
Center pill badge text (fixes #97960)
#100399 Update categories
Override custom dialog icon font size (fixes #100863)
scm repository title menu
Better platform testing
I don't even :facepalm:
Indent code cells
fix telemetry step
Revert "Revert "Update the version of the telemetry extractor (#100501)""
missing compilation cc @sandy081
reenable telemetry
Revert "Update the version of the telemetry extractor (#100501)"
Restore cell insertion indicator color token
scm menus
Use the parent session for disconnect and stop so the compressed element stop would effect all elements
Implement cell bg color and shadows
"views and more actions" hover for toggle menu title
fix scm menus
use new VSBuffer based api, https://github.com/microsoft/vscode/issues/91383
textfiles - allow to create with VSBuffer
fix typo
bootstrap - move some methods that are only used once
web - remove encoding related libs from prefetch as they are being loaded lazily
add debug logging for https://github.com/microsoft/vscode/issues/100828
update distro
fix inlining builtin extensions
keep deleted file contents for undo, implement undo element better, https://github.com/microsoft/vscode/issues/91383
#100347 sort by time
fixes #100528
#100347 Improve sync data views - Change existing data views to activity views - Introduce synced data view to show the latest state
scm: auto growing input editor
list: updateElementHeight
send requests per provider so that a hanging provider doesn't block other providers, https://github.com/microsoft/vscode/issues/100524
IndexTreeModel.updateElementHeight
Make POSIX-compliant to increase portability and remove `bash` depend‚Ä¶ (#100145)
Use https for stackoverflow (#100655)
sandbox - move contextmenuService into sandbox
fixes #100829
Not only (#70887)
Disabled as it is failing in build @jrieken #100828
more logging for https://github.com/microsoft/vscode/issues/100524
Remove window from the argument list of web worker extensions
Comment out failing job
code :lipstick:
Reloading/restoring workbench with open webview throws exception (fix #100783)
Resolve windows related issues
Make sure select all works in webviews
Use custom scheme for loading webview wrapper contents
Make sure custom editors still correctly override webview undo/redo
more crash testing
Clean up registered custom editor providers when ext host crashes
notebooks: fix renderer message passing being broken
Don't report literal errors on null
Use array of class names instead of string
enable/disable deprecated diagnostics in core instead of requiring each diagnostic provider do so
Update to latest TS 4.0  for building VS Code
Extract constant
Finalize CodeActionProviderMetadata.documentation
debug: allow a single debug extension to provide multiple configs
Add ts/js deprecated support (#97742)
revert removing builtin extensions from dev html
code.se: Improve version check for WSL2
fix build - add contrib/views to i18n. @alexr00 FYI
Add workbench override for codicons scope (fixes #98495)
Specifically test ordering in CustomExecution test Part of #100733
notebooks: pipe renderer API postmessages to the renderer itself (#100414)
commit generated files
update ref view, fixes https://github.com/microsoft/vscode/issues/100726
Update fix (#70887)
update jsdoc
extract things into file operations, https://github.com/microsoft/vscode/issues/91383
comment out input visibility
update distro
update distro
check if package json exists
views: show secondary view visibility actions in title area
Look up mode aliases for cell language
Fall back on plaintext when a notebook provider gives us an unrecognized language
remove builtin extensions entry
:lipstick:
render scm input in its own row
restructure bulk edit service, https://github.com/microsoft/vscode/issues/91383
scan builtin extensions
Use service endpoint url for builtin extensions
Update the version of the telemetry extractor (#100501)
Remove old reference to views.css from viewsService.ts
scm: working input
Add a setting `extensions.webWorker`
Bump actions.
:lipstick:
setter SCMInput.model
Adopt hover service in custom tree view
wip: SCMInput
fix scm menus
Package the web worker extension host
sandbox - move fileDialogService to sandbox
paths - allow to get at local userHome folder
:up: distro
build - add web ignore file
move SimpleSequence
remote paths - deprecate resolvedUserHome
debt - use platform over node.js OS
pathService :lipstick:
sandbox - fix build
sandbox - move clipboard service into sandbox
editors - fix issue with exception saving state
Remove test link provider
Create process on reused terminals
fixes #100524
:notebook: temp disable nb tests on windows.
avoid events if notebook webview is disposed.
update selections only when focused.
address codeql review
Remove resolved TODO
Resolve todos, move process creation after xterm
Update resources/linux/bin/code.sh
Update resources/linux/bin/code.sh
stage ibus-gtk3 to try to make ibus work (#100480)
remove coveralls
fix rich nav build
removed rich nav trigger on PRs (#100417)
Move hover service into core workbench
Update logging
:up: distro
Move encoding to common for #79275 (#100539)
editors - add label property to file inputs
Changing character casing in file name doesn't take effect in editor (fix #100436)
editors - adopt more extUri
"You cannot save this document with extension..." Is this new? (fix #100241)
:lipstick:
revert selections syncing based on focus
update focus state properly
track focus state in notebook view model.
Let core command such as  undo/redo be overridden by webviews and notebooks (#98288)
dispose always
code.sh: loosen check for WSL2
html headless
delay cells change from revert.
Enable local web worker extension host behind a flag
[json] server path fix (for json-server npm)
[css] custom data polishes
[npm] support serverless & cleanup
dispose event listeners.
render should honor sync flag.
protect list and webview from revert.
chore: bump electron@8.3.3
Extract running location computation to separate method
Simplify logic
close #100588
Switch link priority so ext links are higher than builtin
Add extCpp as alias for extC++ command.
Quick open: configuring a prefix selects it all (fix #100584)
Minor refactorings
Web extensions support - Add package nls url to scanned extension - Introduce scanner service for builtin extensions - Introduce scanner service for web extensions - Use web extensions scanner service in management and runtime - Apply default translation inside management service
Add IHoverService.hideOnHover
editors - improve language
improve language in a few places
Improve language in terminal
editors - move open with to editor (fix #100057) (#100466)
editors - have a editor drop service (fix #99739) (#100464)
Clipboard: sync access is deprecated (fix #98556) (#100467)
upgrade semver
:notebook: Separate selections and text model
Allow assigning "new release" issues
Allow assigning "needs more info" issues.
Restore old remote uri normalization for remote uris
Remove duplicate implementation of loading resources
fix layering issues
Update name
Show web builtin extensions in server less
skip undo/redo test.
revert fix for #95423; fixes #100508
re #100461.
Word fixes (#100301)
open overwrite should re-use existing editor even when the editor is optional, https://github.com/microsoft/vscode/issues/99496
fix tests
Update grammars
explorer: properly set aria attributes on compact folders
use label service for breakpoint path in breakpoints view
:lipstick: stdin polish
switch to use iconv-lite-umd for #79275 (#100472)
introduce web extension management server
scm: styling
Support built in extensions in serverless - Use different entry point instead of static extensions - Intrdouce web extension management service
single scm view: first render
make ExtHostWindow a service so that it can be consumed in terminal world, fyi @Tyriar
Update
Handle link on exthost
Register via link manager
Move ExtensionHostManager instantiation into AbstractExtensionService
Align ExtensionHostManager creation options
More renames
Push not-null assertion further down to usage
Renames
Remove isLocal & renames
Renames
Add IExtensionHost.kind
Rename IExtensionHostStarter to IExtensionHost
Web worker extension host always auto-starts
fix tests
fixes #100475
callStack: use parent label for compressed callstack computation
update classifer
Step over surrogate pairs on zero-lenth matches (fixes #100134)
implement NotebookEditor#setOptions instead of forceReload trick
move readme and changelog props to IExtension
move perf data into separate file that's ignored by search, fyi @sandy081
make NotebookConcatTextDocument extends "normal" TextDocument, https://github.com/microsoft/vscode/issues/100186
notebook - set forceReload when having cell options
editors - clarify clearInput
editors - call setEditorVisible before removing editor from DOM and thus remove onWillHide() method (fix #100271)
editors - remove onDidHide method (#100271)
editors - no need to dispose custom inputs
Add assignment monitor
editor association should override priority.
fix #100437 Improve 'terminal.integrated.commandsToSkipShell' information in Settings Editor
fix unit test.
Bump to latest GPU classifier
Throw an exception if we try adding a listener when the webview element does  not exist
Skip extra call to set html if the html is still empty
Make doUpdateContent take a parameter
Add logging around webview creation
Defer webview loading until all listeners have definitely been hooked up on
Don't include inline source maps in markdown preview scripts
Move the webview port mapping from renderer to main process (#100342)
Pick up TS 3.9.5
Update to latest TS version
:lipstick: private _.
:lipstick: notebookEditorInput
:lipstick: notebookEditorWidget.
Get link providers passing all the way through to the renderer
Normalize property names in notebooks - remove _ on privates when possible
Do not save untitled notebooks (#100256)
scm view pane: render repositories
fix useless regex escape
:lipstick: readonly when possible, public optional, classList over util
fix prototype pollution
tests - disable more flaky windows tests
notebook - simpler view state storing
update reference viewlet
Remember current machine name
more tests
add more tests
move auto sync logic from sync service to auto sync service
push to branch
make sure to return empty array when calling dispose-util with array
Explicitly set task execution way before running task Part of #100361
debug: only store dynamic configs in memory
borrow notebook editors from a notebook widget service. let the service manage editor move and deal with group changes
fix tests
fixes #100364
windows - skip flaky test
streams - delete node/stream and inline it to only consumer
Load iconv-lite module async (fix #40147)
aria: use alternate containers such that duplicated messages get read out by screen readers
Check for undefined specifically in task execution test Part of #100361
text files - reduce node dependencies
encoding - less Buffer use
Resolve executeTask with execution earlier Part of #100361
Add scraper action
encoding - adjust toDecodeStream()
Revert "Revert "decouple vs/base/node/encoding.ts from node streams for #79275 (#99413)""
Remove role="group" (#76972)
Revert "Add aria-label (#76972)"
fixes #100015
Revert "decouple vs/base/node/encoding.ts from node streams for #79275 (#99413)"
decouple vs/base/node/encoding.ts from node streams for #79275 (#99413)
update
editor part :lipstick:
Reduce frequency of classifier passes
Adopt GPU issue classifier. Closes #100202.
fix tests
fix setting enablement
Update extGo commaand to point to noe repo location Closes #100143.
Re #97547.
resolve notebook editor with comm object.
Don't set the markdown cell height based on the height
Ensure focus goes back to container after editing markdown cell
typings refactoring not picked up.
:lipstick:
mimetype and remove revert.
:lipstick:
rename to UserDataSyncResourceEnablementService
move sync enablement to auto sync service
Simplify notebook double click listener based on comment tip in 9e1acba79ea2bc0eabac58246857f8619bea98b8
Refactor - Make auto sync sequential
more cleanup
scm: use view pane terminology
:lipstick:
Move to new connection string
bump distro
Scaffold out link provider proposed API
Switch to tabular view for object renderer in settings (#100218)
Refactor auto sync service
sandbox - configure nativeWindowOpen:true
Rename 'secondaryButtonStyle' => 'secondary'
set enablement on sync machines
wip: scmView.ts
fix bad layout restore
editor :lipstick:
bring back previous async nature of restore
Task logging for failure cases
Make task execution event tests more specific
repl: just one more separator in context menu
call stack view: use comppresed tree
Changing pasted to paste
Changing order of actions, string wrapper and promise resolving
fixes #100207
Respect anchor position
Allow focusing the hover
Use options object in HoverWidget
More doc, move xterm-hover into terminal
Add example usage
Doc API, make linkHandler optional
Allow pasting in debug window #100235
Remove test calls
Hide hover on action
Prevent hover from re-displaying if it's currently showing the same one
marketplace extensions need browser and uiKind
Allow a element for the target
Partially working hover service
Add aria-label (#76972)
VSCode opens twice when starting Workspace (fix #100276)
files - make sure to dispose model ref when editor input disposed before model is resolved
don't "delete" mandatory property; fixes #99479
nuke NotebookEditorModelManager, add ref-counting notebook resolver service, don't cache or re-create notebook editor inputs, cache notebook widgets by "tab id" (uri and group), extract move spy'ing into separate open override handler
refactor - generate preview for replace
cleanup
move pull and push to abstract synchronizer
editor - document dispose better
editor - rename move() to rename() to avoid misunderstanding
debug: do not store configurations in storage
editors - dispose editors on close unless the same instance is opened in another group
use URI and group id as tab identifier and not editor inputs
update distro
attempt to fix CI
settings - implement dispose() for keybindings and settings editor
web - allow to override product config as API
web - version is 1.47
menus - proper types for #99998
Some editor override cleanup (#100173)
fixes #99898
Move webview protocol back to using main process
Ensure double click on markdown cell sets focus into cell editor
update distro
marketplace web extensions build
Add 'secondaryButtonStyle' option to Button class
properly resolve ${file} variable; fixes #95423
schema for new untitled command args
fixes #99998
Use proper classifier trainer version
Focus cell editor if there is only one code cell in the document.
Support view type for creating new untitled file. (#100034)
revert/backup should not be optional
fixes #100147
:lipstick: CloseLeftEditorsInGroupAction
Update focusBorder color to pass color contrast ratio (fixes #99244)
Skip test that flakes on Linux only
api: finalize extensionMode
ipc - have an explicit method to mark a window ready
ipc - introduce an explicit event for "onOSResume"
fix indentation
remove unused import
remove openOnSelection
fix tunnel view
fix remote view
fix timeline pane
:lipstick:
make editor selection less prominent when cell isn't selected, https://github.com/microsoft/vscode/issues/99136
fix search view
fixes #100160
fixes #100157
fix breakpoints view middle click
fixed default value
remove unused code
fix custom views
Make warning env var indicator opaque
fix references widget
Remove terminal link tooltip for search workspace links
add support for a no results message, https://github.com/microsoft/vscode/issues/95308
add todo
fix outline pane
fix outline pane
ipc - properly remove vscode:exit raw ipc
ipc - make an explicit exit() method
scm: list open
editors - use toResource helper over input knowledge
remove open, pin from list/tree. bring that to workbench, configuration service aware
:lipstick:
Clean up sync code - move generating and applying sync to abstract synchronizer
open editors collapsed by default
working copies - add missing await on canMove/Copy/Delete
Mentioned noDebug when not specified in comment
use a true random file name when testing that openTextDocument opens another document, fixes https://github.com/microsoft/vscode/issues/100159
delete open controller
editors - :lipstick: compare action
fixes #100168
adding rich navigation workflow (#100014)
editors - remove unused code
Also escape backslash
web - report upload per seconds in progress
Remove logging
Log to debug on ci
Try use dom renderer
Update terminalInstance.ts
Don't show terminal in test
Added terminal name when focusing on textarea
Tweak #100083
fix #100068 Better 'Read More/Less' tips on suggest widget controls
layout - move restore logic into layout itself (#99972)
Better handling for MS auth provider when refresh token is not requested
fixup! tests
Build VS Code using TS 4.0 (#100033)
convert to 2-stage button
Add codespaces extension to VSO_ALLOWED_EXTENSIONS list
notebooks: add ID for rich outputs, expose to renderer and webview
Remove todo
fix type in method name
Use submenu instead of quickpick for showing account commands, fixes #99901
Remove resolved TODOs
Update markdown extension to use codicons (fixes #99976)
Only show error in tasks when exit code is non-zero
fixes #98942
Remove unneeded async
Add secondary button style
update search location dep message refs #99948
serverless: add python basic extension
Add troubleshoot link
Introduce DebugSessionOptions.noDebug
debug: if noDebug is not passed take behavrior of parent session
disable horizontal scrolling while rename widget is active
Allow table specific tags for markdown in hovers (fixes #99983) (#99988)
ref tree - show filename and lines when having no meaningful preview, fyi @lszomoru
chore - ES6, use for-of instead of forEach
Refactor terminal launch logic to improve error
Try harder to update markdown cell when it's updated in a split editor
editors - reduce close exposure for now
Add getters for connection data & events for changes
Move the remote connection data to the IRemoteAuthorityResolverService
Add connectionData to IInitData.remote
Add a cache for resolver results
chore - more ES6 iteration
chore - more resource map usage
Proper fix #86192
declare more in INotebookEditorModel
editors - more :lipstick:
:lipstick: ExtensionsInput
fix compilo, remove double interface
editor jsdoc :lipstick:
add `INotebookEditorModelResolverService`
Remove LanguageType
Clean up regular expression in extHostTunnelService
debt - adopt product service in more places
Revert "actionBar: use both up and left for back and down and right for next since not all users can see orientation"
Make sure extensions are activated before resolving task Part of #99797
make merge-conflic serverless
Support --enable-proposed-api through argv.json (#99908)
Adds basic keybinding for focusing on an element in outline pane (#91799)
fix compile leftover
remove obsolete APIs, https://github.com/microsoft/vscode/issues/93265
Re-run clean search view searches on "open in editor" to fetch context lines as per searchEditor.defaultContextLines Set default defaultContextLines to 1. Close #99321.
check for web platform
Only run specific commands on the syntax server
üíÑ
Add more explict message queue for webviews while they are loading
Remove use strict
Move example files for memfs to own folder
Add triggerSearch and focusResults search editor args Closes #97823
Change "Cursor Move Down" commands to more generic "focus next editor" commands, add keybinding to move down out of output, and add context key for "output is focused"
Force focus out of webview when cell list focus changes Have to fix again after changing how cell list focus works
:lipstick:
Make cell toolbar buttons enabled when the editor is not focused Moved common registration properties to NotebookAction, force registering in CommandPalette
replace duplicate mac id
Make markdown cell height computation simpler and fix bottom cell toolbar height discrepancy
Rearrange MarkdownCell
fix naming
json webpack fixes
configuration-editing serverless
move polyfills to build/polyfills
fix #99854 make 'Edit in settings.json' add the default for an undefined object-type setting
Disable custom editors for some specific schemes
Remove more unused files from the typescript package
Move off deprecated node-pty on API
add focus menu command for web fixes #82759
propagate horizontal scrolling setting update through workbench widgets
fixes #99761
remove horizontal scrolling from restart settings
make horizontalScrolling changeable at runtime
use onDidChangeCapabilities event from the provider
Change order of focus next part so panel is after editor
#93368 Replace biased util with using extUri based on fileservice provider's case sensiive capability
[json] run serverless
remove deprecated horizontal scrolling settings
fix unnecessary regex
fix regex
editors - add test for new close() method
editors - turn runtime extensions into singleton
editors - bring back close() to inputs
streams - fix tests
files - no need to await last write
fixes #99857
files - await writing to target stream to respect highWaterMark
fixes #99786
html/json: compute server module without server package.json
Remove unused import
Get rid of execute notebook cell EditorTitle action #96330
rename action
remove the cron
Add CodeQL security scanning (#99411)
files - :lipstick:
test - disable failing test
web - use highWaterMark for upload (#83565)
variables: always expand brand new scope on top of list, even if others are expanded
resources - use extUriBiasedIgnorePathCase for tracking in electron-main
files - avoid stream transform when peeking into stream
files - reduce need for stream transformer in io.ts
code :lipstick:
variables view: improvements to view state preservation
Add task API test for execution equality
web: turn off markdown performance hints
fixes #24883
View/Sort feature for SCM viewlet (#99768)
update distro
add polyfills/** to vscodeignore
update distro
package.json filter fix for build/lib/extensions
[css] have compiled vscode-nls shim
extensions in web build
status bar is now a footer
more jsdoc for `extUriIgnorePathCase` and `extUriBiasedIgnorePathCase`, https://github.com/microsoft/vscode/issues/93368
Added actions for folding/unfolding all regions except selected
Enable the image preview in web/serverless
Don't try getting a storage root for non-editable custom documents
Use extensionUri instead of Uri.file
Update JS/TS grammars
Use joinPath in a few more places
Added collapse surrounding regions with alt-click
update distro
notebook editor contribution priority.
Add overflow menu for cell toolbar
Open in background on vscode.[open|openWith|diff]
Moves first run setting into workspace storage
use footer element for status bar
Remove redundant if block
Hide focus border on click state in panel titles (fixes #99210)
Bump actions
Update labels + row title
Edit an already existing key if it exists
Pass app insights key to release pipeline labler
Removes usages of deprecated values helper #99664
Add key descriptions
fix oss setup
Support additionalProperties
add more repos to my-work
notebook tweaks
tweak my work
check if clipboard actually works and only iff so write tests...
add my-work and inbox GH notebooks
git file system should wait for model to be initialized
cleanup ES6 iterables utils related to #99664
use `extUriBiasedIgnorePathCase` in fileUserDataProvider
restore `extUriBiasedIgnorePathCase` util for selective usage
code-web: use async glob
Add a pattern to the git BranchQuery (#99681)
chore - remove used interface
uris - use biased version in a few selected places in electron-main
Cannot read property 'onWillCloseEditor' of undefined (fix #99682)
editors - cleanup canonical todo
Bump actions & adopt app insights for actions
better error message when editor has changed in-flight, https://github.com/microsoft/vscode/issues/98871
Update for-in loop to work with eslint:recommended (#99721)
serverless - fix callback path
Allows refs in github uris
Add missing prop from now finalized api
Improve pty language
re-enable release pipeline labeler
Adopt Uri.joinPath
Enable markdown language features for web/serverless
Make sure unknown search errors and cancellation is logged correctly #99634
Increase contrast for quick pick description on light theme (fixes #88752)
:guard:
bump actions
Disable misbehaving release pipeline labeler
history - use editor input factory to support to reopen any editor that can be serialised
prevent scm from moving on startup
Update notebook focused indicator color names (refs #98984)
add missing icons for comments and ref prev
speed up auto sync service tests
debug: deep clone before passing in config
add vscode.notebooks.notebookDocuments-api, https://github.com/microsoft/vscode/issues/93265
more mocking for happy tests
Introduce "Set Next Statement" as an alias for Jump to Cursor
fix compile errors
cache casing information for faster lookup, https://github.com/microsoft/vscode/issues/93368
remove todo - uriIdenitiy service is only concerned about path casing and normalization
debt - soft remove NotebookCell#source
remove `exturiBiasedIgnorePathCase`
use store service to get store
Update src/vs/workbench/services/textmodelResolver/common/textModelResolverService.ts
fix tests
editors - more shared view state handling between normal and diff editor
#95879 fix tests
#95879 Rename to IUserDataSyncAccountService
editors - shouldRestoreViewState
explorer: do not use values util
Screen reader does not announce the expand state of select box
diff editor - persist viewstate as well
Revert "make UriIterator accept ignorePathCasing arg, https://github.com/microsoft/vscode/issues/93368"
Removed a redundand 'resolve' in SimpleFileDialog by reusing the alre‚Ä¶ (#99432)
Diff editors comparing files do not restore after reload (fix #99659)
Always use canonical uri inside `createModelReference`
chore - dead code removal
Better experience for replacing folders in web upload (#99601)
fixes #99576
tests - also use --no-cached-data for normal integration tests
files - adopt extUri.getComparisonKey
workspaces - allow to same on same path
debt - slim out collections util
only update breadcrumbs when closing all editors, https://github.com/microsoft/vscode/issues/99041
make UriIterator accept ignorePathCasing arg, https://github.com/microsoft/vscode/issues/93368
Cannot save deleted file with different case (fix #99650)
Cannot re-save a permanently deleted file with same filename as when first created (fix #99619)
make ResourceMap accept a key-function, https://github.com/microsoft/vscode/issues/93368
Make notebook selected and focus indicator themeable (fixes #98984)
Remove double find
Get rid of cell focus, refactor context keys, fix #99390
Always send `projectInfo` to semantic server
update distro
Add ProjectLoadingRoutingSyntaxTsServer
Extract EventName to enum
Add pattern properties to emmet.includeLanguages
make reveal* actions async
Splits github fs out into its own extension
Support serverless github access in yarn web (wip)
Adds authentication callback support
Adapts extension to work on the web/serverless
Adds a timeout for trying to resolve remotes
Removes unneeded -- with yarn
Adds msedge launch config
ignore empty notebook events.
Use line separator when joining cells
Add new object renderer
Add objectProperties and objectPatternProperties to ISetting
Add reopened event handler
Bump actions
Add pattern properties to files.associations
fix: wrong extension id for js-debug
getControl can return undefined.
Bump actions
break up extension-browser.webpack.config
Update line numbers
:lipstick:
dispose model events in notebook cell list
:lipstick: we can guarantee notebook events if command is not notebook related.
menu event listener are disposed later than list view itself.
Remove libnotify4 as deb dep
fixes #99448 (#99475)
Move authentication service to workbench.common.main.ts, fixes #98553
refs #99490 (#99491)
refs #94331 (#99503)
Revert "Bump vscode-ripgrep"
notebook editor widget might be disposed earlier than notebook editor
Allow screen readers to update selection in the hidden text area
fix https://github.com/microsoft/vscode/issues/99041
Allow numeric CLI argument (#99540)
remove IClipboardService#readTextSync, https://github.com/microsoft/vscode/issues/98497
refactor suggest land to read clipboard async and only when needed, https://github.com/microsoft/vscode/issues/98497
[css] requests update
files - add support for tracking bytes written and adopt for upload in web
streams - add highWaterMark option
files - add resource label to inputs
editors - some code cleanup
uris - do not rely on isLinux check for comparing mementos
model resolver - add tests for #98653
Revisit duplication of ignoreOverrides and overrideId between inputs and options (fix #99123)
if needed, read clipboard during snippet tab completion, https://github.com/microsoft/vscode/issues/98497
Closing background tab does not dispose dirty text models (fix #98653)
some lipstick for F1 > Insert Snippet, https://github.com/microsoft/vscode/issues/98497
restore clipboard text after test, https://github.com/microsoft/vscode/issues/98497
if needed , read clipboard inside MainThreadEditors#insertText, https://github.com/microsoft/vscode/issues/98497
fixes #99430
write directly to _performanceEntries instead of importing performance-object, https://github.com/microsoft/vscode/issues/99597
fixes #99437
update distro
clean-up for https://github.com/microsoft/vscode/issues/99597
remove unused telemetry
update distro
fixup! bump to 1.46.1 for codespaces incompatibility
Bump vscode-ripgrep
Set open in terminal menu dynamically
Split out non web parts into node/externalTerminal.contribution
Simplify open in terminal context menu registration
fixes compile errors
fixes compile errors
Revert "Revert "refs #94331""
Revert "refs #94331"
refs #94331
:lipstick:
restore backup for custom editor
no layout after list view being disposed.
refs #99490
Update eslint versions
Handle backup data with custom editor input factory
Revert 5865db6ca816d12dd7c64049b241346f061517ce
Update to build using TS 4.0-nightly
Update distro
Supress TS 4.0 delete operator error
Add playwright to workspace tags (#99476)
Mark  _serviceBrand properties using declare (#99312)
fixes #99448
debug: use a stable build channel for js-debug
remove unnecessary falsy-check, https://github.com/microsoft/vscode/issues/98139
:lipstick:
[html] update version, fixes #98053
[html] update version, fixes #98053
Avoid debug
Bump version number to 1.47.0
Remove code hygiene tasks from Windows and Mac. Will be executed as part of the Linux pipeline. (#99446)
Rewrite checkout items
Add better support for checkout type config
fixes #99434
revert bad fix
missing yarn.lock
Refactor our font stack (#99429)
Can trigger "Pin Tab" too easily by accident (fix #99412)
Don't try restoring backups on non-dirty editors
Make sure openWith handles default editors
Documenting backup delay
Don't have custom editor override open if only default editor are being used
Don't log errors when a pending backup is cancelled
Show account activity bar icon by default
Expand `priority` documentation
re #99240.
Improve viewType documentation
Cleaning up docs for custom editor
#98820 its restore not revert
Add closedWith commmand
Resolve issue with noVNC failing to start
stop relayout if the list is disposed or cell is deleted.
setting display to none will break layout, move it out of view.
Another fix for #99354
distro update
re #99354. Focus editor only when the cell has focus.
refs #99103
notify error always
web - tweak upload progress message
Add troubleshooting logs
66666
fix #99274
Add "codespaces"
#98820 rename download title to revert
postStartCommand and postAttachCommand (fixes microsoft/vscode-remote-release#3107)
Cmd on Mac (fixes #93922)
test build fix
web - tweak stream based upload method to buffer less
clean workspace after one test finishes.
:lipstick:
flaky webview related nb iteration test.
Don't mark vscode-resource as standard
fix fetchOnPull behavior for Sync
fix 97472
fixes #96119
ext: update builtin versions
fixes #99200
Increase clarity of `search.searchEditor.defaultNumberOfContextLines` name and description Dont use defualt context line value when search editor is created from existing results, as it will be ignored. Closes #97915.
Update github remote parsing regex to fix #99063
debug: fix being unable to debug extensions with js-debug on web
Add playwright to workspace tags
code.sh: debug with VSCODE_WSL_DEBUG_INFO
Tweak description text for #97915
Case-normalize github paths to fix #99294.
update distro
rename donot-sync to do-not-sync
fixes #99065
fixes #99278
Use "stopAll" in compound VS Code launch config
#97082 update error message
Add description to search.searchEditor.defaultShowContextValue
node-debug@1.44.6
use DAP final version
Add resource monitor
web - change progress to indicate number of files
Web upload: uploading folder with lots of files loses many in Chrome and Edge (fix #99068)
Trim extensions, tweak README
use toString (via getComparisionKey) for compare and equal
Run OSS tool for v1.46 and update distro hash
Improve sash setting description
fix typo to clarify nls string, #98576
fix https://github.com/microsoft/vscode/issues/99152
fixes #99051
fixes #98963
fixes #96356
notebook - reveal cell editor position if outside viewlet
fixes #97009
fix https://github.com/microsoft/vscode/issues/99150
fixes #97393
fixes #99247
fixes #97396
fixes #99008
screen cheese while previewing icon theme (fix #99032)
fixes #99124
make sure to resolve notebook during cell content provide, https://github.com/microsoft/vscode/issues/99148
log sources
fixes #97961
fix sending error code
statusBar items use role 'button'
fixes #99050
fix https://github.com/microsoft/vscode/issues/99135
editors - do not notify title when no editors are closing (for #99041)
also feed marker resource into id computation, https://github.com/microsoft/vscode/issues/99140
Splitting from a pinned editor, pins editor (fix #99035)
Crash reporter creates two directories (fix #99149)
Warn when using configurationDefaults without an override property. fixes #97895
Crash Reporter command doesn't support relative directories (fix #99143)
Search files by name does not work (fix #99075)
better fix for #99039
Switching to simple full screen produces a jump (fix #99039)
chore: bump electron@7.3.1
Tweak extensions
Improve restart reliability
Use triaage bot PAT
Add better contrast for cell borders in HC (fixes #99185)
Update latest-release-monitor.yml
Update latest-release-monitor.yml
Add connection string parameter
Adopt new repository dispatch selectors & latest release monitor action Bump actions
Don't include duplicate default entries for custom editors
fixes  #99103 fixes #99104
Make sure old vscode-resource scheme is still corsEnabled
Custom renderer message is still flaky
Restore old style vscode-resouce rewriting
readonly cells should not support join and split
Increase hit target for cell margin actions
Add #97640: corrected code documentation
Notebook layout does not update if window resizes during its loading phase
update distro
diffReview: clarify nls strings #98584
Quick open: cannot search for tilde anymore (fix #99031)
changed build (#98857)
Make sure we build vscode-notebook-tests on windows
Closes #98048 - adds openWith to default editors
Development container for VS Code
Add more logging for webview state parse failures
notebook: initial state persistence API (#98684)
Reuse reviveUri
:lipstick:
Update hoverWidget.ts
Move back to use renderer-side protocol for loading resources in webviews
Move custom editor provider out of proposed to main api
Change editor.removeUnusualLineTerminators to editor.unusualLineTerminators
Simplify wording
Increase top-padding for first cell toolbar
Increase notebok cell border color
refactor find widget to support multiple selection find/replace
Support new TS proposed API for refactorings
Update markdown grammar
notebook resolve should wait for * activated events.
add explicit activation event for notebook test ext.
Mark the highlight color check as a temporary workaround
Prevent opaque highlight color from hiding text
Update distro
vscode resolve file.
Make dialog accessible (#98969)
fix mimetype pattern match
Do not show option to sign into GitHub when already signed in for preferences sync, fixes #97735
Make noteboooks themeable (fixes #97696)
Support directly entering PAT for github auth as well as entering url
fixes #96889
fix #96370
tests - use rm -rf for deleting user data dir
:up: distro
Add explanation for #98584
web - fix cyclic dependency
Add test for #91235
fix tests
files - more uri identity in a few places
editor service - also use canonical URI for isOpen() method
uri - adopt uri identity for main thread documents when reacting to
files - use proper extUri for file events
files - fix tests
:lipstick:
Add release pipeline action & bump actions. Closes #97536.
fix bad name of service
files - avoid isEqual check for doSave()
a couple of URI identity related changes
:lipstick: code style
editors - change whenClosed to use editor interface
working copy files - use URI identity service and optimize move/copy to same URI
workaround #98934 (#98936)
working copy file service - assert delete/move/copy operations are valid before even attempting them
Files: unable to "Save as.." with same name, different case (fix #98864)
notification - add animation steps to progress (fix #97900)
Enforce notebook cell title menu as proposed API
Break infinite loop in "focus previous result". Don't run focus next/previous at all when not valid
Move data URL handling code out of preload script. Guess extension based  on mimetype if 'download' isn't provided
fix false negative tests
Disable webview related tests on web.
split editor does not await, notebook events are not sent to ext host in time on Web.
Diffing editors/documents/visibleEditors/activeEditor.
use updateState/compute instead of sending delta directly.
set visible editors active property correctly.
support cell text model attach/detach on web.
await notebookEditor.setModel: sends all initialization events to ext host when opening notebook.
Add more strict typing for webview options
Remove rewriting logic added for  #98768
Update hover feedback for cell margins for dragging
Update code cell bg, border, and output bg
:lipstick:
Create VsCodeResource for schemed filepaths (#94986)
polish #98016 based on user feedback
allow toggling home indicator
Make sure add all missing imports quick fix comes after individual add missing import quick fixes
Nicer looking plaintext outputs
base href in notebook webview.
chore: update js-debug and friends
fixes #98751
tests :guard:
Use canonical uri for openTextDocument api, #93368
:lipstick: enum
fix #98794
fix notebook tests
Do not push an empty string to the result
Trim SCM input font family value
editors - use canonical URIs when creating editor inputs (#93368) (#98795)
update distro
Add ability to not to sync an extension while installing using cli
editors - some code cleanup
don't warn with browser-only extensions
editors - add option to `whenClosed` for waiting for save too
notebooks - wire up onDidChange event from notebook providers, fyi @rebornix,  https://github.com/microsoft/vscode/issues/96403
notebook - add `NotebookCell#notebook`
Make Neo keyboard layout (layer 4) arrow keys work in explorer view (#98269)
use URI.joinPath for resources
move all uri util into IExtUri interface, https://github.com/microsoft/vscode/issues/93368
editors - lift onDidCloseEditor to service interface
Allow style in span in markdown (#97793)
remove the ability to ignore path casing from util functions itself, #93368
:up: distro
web - support --wait
web - allow --add to add folder to workspace
web - upload files streamed and support cancellable progress
web - add a limit for opening untitled files from drop
issues - stub --status in web to output unsupported
window - align interfaces for opening
Make sure custom editor working copy is initially considered dirty
Make sure we keep around custom editor models while autosave is going on
Pick up new TS version
Make sure we normalize remote uris
Improve new constant color, tests. For #97373
Improve new constant color. For #97373
add TextEncoder to runtime
Remove old auth provider migration code
[css] path completion in web
do not set default property
share undo stack between text models in a notebook. the undo stack is not shared with notebook itself yet due to #98750.
Make sure we properly restore uris for local resource roots
Update distro reference.
adopt new languageserver node modules
web: nls for package.json
showCandidate should have a better name (#98566)
fix tests
Revert "Revert "allow setting default tag while installing extensions""
Custom Titlebar is incomplete and not draggable (fix #98669)
Use createChannelReceiver for webview manager
Add some extra guards around image loading
Use original path to lookup mime type
Skip failing test
Revert "allow setting default tag while installing extensions"
Move webview protocol to live in webview manager service
combine events from edits from ext host.
Only open openable links from notebook webview
Update distro reference.
Closes #92811: Register a custom comparison key computer for cell URIs
Add support for contributing an uri comparison key computer to the Undo Redo service
transform outputs for backup
unused import
Remove trailing slash (fixes #97885)
add client/server browser parts
Update Codicons: compare, pass, stopCircle, playCircle, record
Move webview's use of setIgnoreMenuShortcuts to main process (#98131)
Add property default show context value proeprty (#97920)
chore: bump electron@7.3.0
refix keybind
update distro
distro
Update typescript.code-snippets (#98521)
pass context to open editor.
allow setting default tag while installing extensions
:lipstick:
editor open in group context
Use a fixed position context view as a child of the anchor element (#97965)
tweak sizing
add icon for npm scripts refs #93964
fixes #98456
Remove unused code in github auth provider
do not listen on status
merge metadata into local extension
Add more validation
disable second move down.
use a skip list for keeping canonical uris, https://github.com/microsoft/vscode/issues/93368
setup
:lipstick:
#98576 clarify
missing compilation
:lipstick:
#98584 clarify
fix arm64 build
Containerfile support (#93184)
fix build
Encapsulate operations on ResourceEditStack
add logging
remove telemetry, update jsdoc, https://github.com/microsoft/vscode/issues/96779
statusBar: do not focus editor when executing commands
fix #98250
:lipstick:
add list smooth scrolling
start crash reporter properly given directory argument (refs #98122)
fix arm64 setup
Problems: filter box: remove duplicated color def. For #98250
Load text models from disk when doing a cross file undo or redo (fixes #92272)
Add locks to the edit stacks while undoing / redoing
Only validate if a workspace undo is selected
Validate workspace undo again after async prompt
Extract validation of workspace undo/redo to their own methods
clarify error message for #98576
Adopt LS service/client that has common & node
adjust jsdoc to old and new reality, https://github.com/microsoft/vscode/issues/95361
call prepareRename on all providers until having result, start with provider that gave a result, #95361
sandbox - issue service is not common
sandbox - adopt types from electron 7
Revert "chore: bump electron@8.3.0 (#98266)"
switch mimetype now should be done async.
support renderer and content provider registered in different extension host.
Update colorizer baselines
Remove consecutive blank lines from d.ts files
fixes #97237
Add string labels #98576
refs #96115
differenciate notebook moving to new group and splitting
Bump actions
Treat *.ts.map files as JSON (#98409)
Allow TS Server to be started with --inspect-brk (#98340)
fix inno updater
fixes  #98456
fixes #98453 in case view pane is asked for title after deregistration
add error messages for notebook workflow integration tests.
Disable notebook smoketests in web
fixes #98337
clarify nls string, #98584
run webpack in code-dev
refs #98576
#98584
#98530 add commit
Update seti-ui theme
send out missing selection change event when moving cells.
fix setup
group bulk edit preview by document, https://github.com/microsoft/vscode/issues/97881
Add back original strings to terminal commands using Action2
Dangling text file models of deleted files hanging around in memory (#98154)
distro
publish setup for win32-arm64
fix https://github.com/microsoft/vscode/issues/97731
fix update service
Don't leak context key services
translation clarifications #98576
Improve text match splitting
Add comments to automationShell localize calls
[css] update service
code-web: fix scss not available
quote '$' properly; fixes #98471
Revert "Use canonical uri inside `ITextModelService#createModelReference`, https://github.com/microsoft/vscode/issues/93368"
Check all extensions
Use canonical uri inside `ITextModelService#createModelReference`, https://github.com/microsoft/vscode/issues/93368
[css] remove path completion (now provided by service)
Hack to work around terminal firing exit before line data
fix codesigning
web - support --diff from command line
web - support to open a file on a line
enable codesign for arm64
debt - remove unused services
sandbox - move more things around
sandbox - move more services to electron-sandbox
sandbox - reduce clipboard dependencies in renderer
distro
avoid content override when updating local resource roots.
distro
full fledged arm64 build
Add more undo-redo tests
Add tests for undo-redo
handle error while starting sync
sandbox - move menubar service
sandbox - fix cyclic dependency
sandbox - move main process service into electron-sandbox
sandbox - ensure IElectronService is declared from electron-sandbox layer
sandbox - fix build
Have the view model receive configuration change events first
:lipstick:
:lipstick: Minor renames
Emit ReadOnlyEditAttemptEvent through view model
Rename ViewOutgoingEvents to ViewUserInputEvents
Emit cursor state change events through view model
Emit view zones changed through view model
Move scroll event emitting through view model (fixes #97447)
Emit the content size changed event through the view model
Add ViewModelEventDispatcher
sandbox - move developer actions
sandbox - move more things into electron-sandbox
sandbox - add windowId to electron service
sandbox - move url service
sandbox - move electron service into common/sandbox
sandbox - do not double register electron service
sandbox - no more direct Electron IPC need
sandbox - make moveToTrash an electron service thing
sandbox - further reduce electron dependencies
sandbox - add webFrame APIs
sandboy - more adoption of IPC API from preload script
sandbox - move context service back due to #98495
use ^H to delete word left in cmd.exe
refactor: stage all but merge
feat:new command stage all merge
sandbox - move contextMenuService
Add support for Unicode-aware regular expressions in Monaco Monarch language definitions
Modify git add/revert to use splitInChunks
sandbox - fix tests
sandbox - get rid of IMainProcessService2
sandbox - move updateService
sandbox - move IExtensionHostDebugService
sandbox - move issueService
sandbox - move menubarService
sandbox - move storageKeysSyncRegistryService
sandbox - produce checksum for preload script
sandbox - make sure to use sandboxed main process service consistently in renderer
sandbox - let workspaces service use sandboxed IPC
add telemetry
#98389 ignore error
#98389 recover settings
#98389 Revert setting machineId
#98389 fix tests
bump sync version
Allow to run css language server headless
sandbox - introduce IPC over sandbox helper
sandbox - expose limited IPC via preload script
sandbox - add rules for new electron-sandbox layer
Move hasExecutionOrder to cell level
refactor extensions management - move extensions scanning
Eliminate duplicate runstate, simplify context keys in cellRenderer
report error telemetry at one place
remove unnecessary casting
Change keybinding to focus in/out of output, since ctrl+arrow is taken by default on mac
More ways to render markdown cells - when cell/notebook is executed, and new action to force it
Bump node-debug2
Add terminal colors
Don't fail when resolving config variables without a `folderUri`.
Do not define resource override unless folder is defined.
fix #98136
fix #98138
refactor - move logic to userDataSyncWorkbenchService
restore notebook state after test.
use bg color over border
allow workspace folder in notebook webview.
Update to build with latest TypeScript version
Make sure implement interface is prioritized over remove unused
Only return single ts-ignore action if there are multiple errors on one line
Expose theme name in webviews (#98128)
temporarily disable cell move event test.
chore: bump electron@8.3.0 (#98266)
notebook webview test
wait for notebook focus after cell movement.
asWebvewUri requires guid.
refs #94041
ext: update js-debug-nightly
unused imports
fixes #94339
:lipstick:
merge moveEvent into CellsChangeEvent.
Markdown cell shouldn't leave edit mode without an explicit user action
:lipstick:
Remove empty preload updates
onDidActiveNotebookEditorChange
fix tests
#93960 feedback - show edit for all machines - include platform in default name
Remove .only
Add notebook smoketests
false negative warning.
Update meaning of order for composite bar (#98207)
fix: add an option to stopAll in compound launch configs (#98206)
:lipstick:
remove legacy API
SCM - Add support for filteting on the file path (#98235)
NotebookEditor.onDidDispose
fix tests
simple capping of number of canonical uris, https://github.com/microsoft/vscode/issues/93368
create markers with canonical uris, https://github.com/microsoft/vscode/issues/93368
add IExtUri, ExtUri default implementation, and IUriIdentityService, https://github.com/microsoft/vscode/issues/93368
accessibility: set aria-expanded and use role tab for activity bar items
#93960 - Send machine id with data and show the machine in data view
fix exception label foreground color for light theme
follow up #98180
anchoSelect: say what line number the anchor is set at
Remove xterm-addon-web-links package
tackle comments
Update distro
Remove web links addon
Remove web links addon
fix skip remote
skip remote for win32 arm64
turn off sync if client is making too many requests
web - fix broken file upload
fix auto trigger
initial steps for win32 arm64
fixes #98157
editor: conoslidte computing of editor aria labels and use 'preview' for preivew tabs and pinned
#93960 fix tests
#93960 Show sycned machines
add remote from push
git: contributable add remote
fixes #98134
address publish to GitHub awareness
Refactor autosync service to be more reliable and predictable
fix https://github.com/microsoft/vscode/issues/97836
argument naming `ignorePathCasing`, https://github.com/microsoft/vscode/issues/93368
Reland "fix: use electron-osx-sign instead of manual code signing (#97582)" (#98145)
cancel token.
Send auth provider API calls through renderer when on remote
notebookEditor.visible
notebookEditor.active
add when clause
Cache custom editor info
kb shortcuts for view moving refs #89170
Update to latest ts version
Update getSession typings
notebook tests for notebook content change events.
emit editor close event.
Notebook document events.
Make folding chevron visible
add comment for clarity
Correct unit test suite name
first cut of token_at_position api, https://github.com/microsoft/vscode/issues/91555
text model resolver - cleanup handling of untitled and inMemory resources
Move view layout modification through view model
github: publish workspace folder
fix https://github.com/microsoft/vscode/issues/98152
fix quality build
Update TreeView reveal doc in response to comment https://github.com/microsoft/vscode/issues/98095#issuecomment-630689079
make markers view aware of concept of same-document-reference
stop using commands instead use workbench service
Revert "confirm to reset in the turn off command"
debt - never use "path" directly
confirm to reset in the turn off command
Revert "fix: use electron-osx-sign instead of manual code signing (#97582)"
peek highlight should use reference uri, but bucket uri, https://github.com/microsoft/vscode/issues/97881
debt - put some reference dispose into finally blocks
fix tests wait more than input time interval
fix tests
Revert "chore: bump electron@8.2.5 (#98109)"
fix #98102
notebook content change events.
:guard: move cells will not re-create cells in ExtHost.
model change on document.
webview comm based on editor other than document.
load document with editor id.
shared document between split editors and dispose them properly
webview id attached to notebook editor
introduce visible notebook editors
fixes #98016
chore: bump electron@8.2.5 (#98109)
move credential provider to github
Don't enable test on remote
Add cors header to webview resource response
Make sure id is explicitly used as authority when rewritting vscode-resource: uris
update distro
improve logging when local changed
trigger sync immediately when resource is enabled
Revert "skip syncing if sync is in progress"
#98103 add tests
Handle too many requests error from server
Add request limit
fix: use electron-osx-sign instead of manual code signing (#97582)
Don't show remote picker when only one option
add sync now command to telemetry
skip syncing if sync is in progress
limit once per 10s
Send client commit through headers
Revert "Revert rate limit on client"
#95894
export to, clone from github
tacke review comments
publish command
github: remote source provider
Have all commands go through the view model instead of the cursor
Have the Cursor not be a ViewEventEmitter
add github extension
fixes #98035
Revert rate limit on client
use toString in assertIsEqual, https://github.com/microsoft/vscode/issues/93368
debug: always send name to evalute with clipboard context
fix compile error - fyi @rebornix
files - handle write errors from touching like normal save errors (for #34915)
quick pick - do not pick second editor if group is empty
:up: product version for web dev
fix monaco editor check
add views to localization resources
:guard: copy cell does not copy custom metadata
Notebook kernel preloads
:lipstick: switch editor types when pin
feat: implement colour contributions for debug REPL
Bump node2
Simplify some cell actions
Use NotebookAction
#91556 Check if there are changes to push to remote
change accessing token to be sync
#97794 remove redundant css rule
Move long const name variables out of shared file so they can be minified
Add "Center Active Cell" notebook action
Update distro
Revert "fixes #93415"
Remove unused interface
Remove link matchers from terminal
xterm@4.7.0-beta.3
fixes #93415
Use stream protocol for serving up resources in webviews
Make AuthenticationSession a class and remove getAccessToken method, fixes #91554
some fixes for editor reopen with another type
remove unused import
Avoid calling layout during flipNode.
reset default container location when hidden
Allow updating the local resource roots after an extension has loaded
Don't compile testworkspace
shift drag image fixes #94042
fix #96119
Dont repeat userDomains in trusted domains doc
Add vscode-webview-resource protocol (#97777)
:guard: notebook tab switching and pick editor types.
Mark add missing imports as preferred fixes
Don't mark fix all actions as preferred
Fade out cell focus indicator when notebook editor does not have focus
Throw an exception when line doesn't exist, rather than adding undefined to line
fixes #96583
Working Copy resource uri from backup.
use uri format for notebook cells that uses fragments, https://github.com/microsoft/vscode/issues/97881
update references viewlet, https://github.com/microsoft/vscode/issues/97881
diffReview: make underlying diff editor readonly
Force cell to be focused when it gains focus
use compare-util instead of custom one, https://github.com/microsoft/vscode/issues/93368
fix bad empty command on SCM
editor: introduce anchor selection
Move cursor calls through the viewModel
#97810 throw error after logging
#97810 log error
:up: distro
update references viewlet
don't hide attach to extension host
fix #97880
#93960 - simplify sync manage quick pick - add reset action to sync data
distro
better built-in extensions mechanism
Reduce cursor API surface
Manage cursor focus from viewModel
Update builtin extension ms-vscode.references-view
remove unused code
git api: publishRepository
:lipstick:
:lipstick:
debug: rename toggle_logpoint -> add_logpoint
remove annotation from debug console
backups - be less chatty about corrupt backups
Notifications: closing all keeps some (fix #97873)
:up: distro
clear list view disposables
EditorInput/NotebookTextModel is N/1 mapping.
:lipstick:
:lipstick: notebook editor input lifecycle
asWebUri.
Add extra loging for parameter hints hasDocs
üíÑ
add breakpointMargin property to cell metadata
fix missing cache issue
await kernel execution
Extract individual handlers from CodeEditorWidget.trigger
Split up Cursor.trigger(...)
Convert Handler to a const enum
Move more methods through the view model.
Always show confimation dialog on sign out, fixes #96612
Move out layer breaking class names
Rename .monaco-editor-hover to .monaco-hover
Rename base file
Rename HoverWidget.domNode to HoverWidget.contentsDomNode
Avoid extending from BaseHoverWidget
Get rid of BaseHoverWidget._renderAction
Better clean for 452a377c5e0556a1f5402c69f6747f270c770520
Push back Escape handling to get rid of BaseHoverWidget.hide()
fix double terminal
hide kernel switcher
Rename to BaseHoverWidget
One public getter for sort order configuration
Update Codicons: add 'server-process' and 'server-environment'
Prevent 'esc' on cell clearing focus Other lists allow this but it's too easy to do accidentally
Update builtin extension ms-vscode.references-view
Update builtin extension ms-vscode.references-view
notebooks - prepare references model and references peek for notebook cell uri rework
chore - allow to dispose iterator iterable
add uri compare, https://github.com/microsoft/vscode/issues/93368
move accessibilityInformation to existing file and reanme to IAccessibilityInformation
vscode api: introduce accessibilityInformation
tests - log the actual build used for tests
Have the cursor be driven (with events) by the view model
Reduce CursorContext API
Push more into base hover widget
Move renderAction to base hover widget
Create a hover widget in base and extend by editor/term widgets
Move renderAction into ContentHoverWidget
remove CellUri#equal
use `vscode-notebook-cell` schema, #96745
debug: only show dynamic configurations that have a label
remove unused notebook handle
reuse scheme constant
don't compare scheme case insensitive (yet?) https://github.com/microsoft/vscode/issues/93368
make cell handle pool an instance variable, https://github.com/microsoft/vscode/issues/93938
step into targets support
fix https://github.com/microsoft/vscode/issues/97650, fix https://github.com/microsoft/vscode/issues/97756
Add git extension API for branches (#97621)
json.schemaDownload.enable prevents vscode schemas from beeing fetched. #96083
fix https://github.com/microsoft/vscode/issues/97774
give resource map a copy clone constructor
debug: rename to "edit debug configuration"
fix compile error
web - switch to addEventListener for beforeunload
web - home indicator should still support command API
remove pane composite panel
Still search all projects if you are using TS 3.9 but are not in a TS file
Switch kernel info.
basic panel open on drag fixes #93838
detach workbench DOM ref from notebookEditorWidget
fixes #95418
Doc updates for authentication providers
Add Explorer Sort Order Lexicographic Options
string change refs #96117
fixes #97716
Remove 'Show features using this account' picker, show timestamps in 'Manage trusted extensions', fixes #96367, fixes #96357
Include access key for config upload
custom metadata for notebook document.
Add margin for collapsed panel icons
viewDescriptorService model cleanup fixes #96791
Re #96433
Make vscode own cell execution duration
adopt notebook kernel
Rename vscode-account extension to microsoft-authentication
Rename `Numeric` compare functions to `Mixed`.
debug: show all automatic debug configurations
add //#sourceUrl comment so that debugging worker extensions becomes easier
fix vscode.appRoot for worker
Revert "fixes #96791"
Re microsoft/vscode-github-issue-notebooks#26. test for regression.
only show toc outline for notebooks, focus editor for code cells, https://github.com/microsoft/vscode/issues/95234
undo active editor change for note editor widget
debug welcome: show automatic welcome view
Show quickpick when selecting dynamic debug configuration container
don't change/invent path when comparing uris, https://github.com/microsoft/vscode/issues/93368
:lipstick: save as extension name if unknown
qfix method scope
isEqual, isEqualOrParent, and getComparisonKey use fragment by default, https://github.com/microsoft/vscode/issues/93368
Add path to LogOptions (#97693)
Reduce API surface of ICursors and of CursorContext
Split the implementation of move to simpleMove and viewportMove
Reduce the surface size of IReducedViewModel
The source can be null or undefined
Small tweaks
explorer: polish focusNoScroll
web - change homeindicator to href instead of command
build - better verify notarized build starts
fix https://github.com/microsoft/vscode/issues/97659
trust strict null checks
repl: introduce .monaco-workbench selector and remove unused css
debug: update pin action to be called configure
Add pinning support for dynamic launch configurations
add trace logging for resolving extra edits lazy, https://github.com/microsoft/vscode/issues/96779
also keep scroll state stable when additional edits come in late, https://github.com/microsoft/vscode/issues/94173
:lipstick: use action2
Right trim in simple file dialog
explorer - fixes for upload folder from web
related to microsoft/vscode-pull-request-github#1759
opt in to classifier
notebook - composite editor announces active editor only if it has focus
differentiate between pick and preview, https://github.com/microsoft/vscode/issues/96489
Notebook outline shows icons for markdown and code entries, #95234
chore: add verbose logging for errors in startup perf script (#97651)
CLI - Add a 1 second timeout for flushing the telemetry (#97622)
always use .monaco-workbench together with theme type class name
don't export hasToIgnoreCase-util, #93368
No need to use hasToIgnoreCase on none-file uris, #93368
css - put monaco-workbench first in selectors
:up: distro
debt - remove traces of hockeyapp
Missing saveAs csv file type in file saveAs dialog (fix #96283)
fix broken sashes
editors - make breadcrumb related methods abstract
Address feedback
Add account activity badge and sign in command for auth provider requests
Don't lose focus when clicking in focused cell
further polish #93978
fixes #93978
#93960 do not show local backup view by default
fixes #96791
Allow tabbing out of editor into output
Support more shell script file extensions
Convert extension array to multiline array
#93960 Show configure and log actions in sync views
Add #97640: Added options to enable codelens for diff editors
debug: filter exceptions from DAP telemetry on web (#97627)
Revert "add todo for matt"
Add initial source actions for remove unused and add missing imports
Cleaning up fix all for JS/TS
fix find widget sash
fixes #93974
vs/vs-dark/hc-black are now on same element as monaco-workbench
Remove old insertion indicators
add todo for matt
fixup! pip exception filtering to a helper function
Auto assign icon and ux issues
show base actions on empty panel
debug: filter exceptions from DAP telemetry on web
electron - stop messing around with app.dock
auto assign snippet items
some patches for #96584
Add Tyriar to classifier
classifier - also add workbench-tabs
classifier - selfhost for some workbench labels
Bump aactions
:lipstick:
Add ability to change screencast keyboard font size (#88308)
#93960 Ability to downlod and replace from cloud
statusbar entries: do not render focus outline, we already have background
Detect and remove unusual line terminators (fixes #96142)
fixes #97605
disable askpass, terminal and github auth when git is disabled
only store/restore view state for additional edits, not for the main edit #97430
show dynamic launch configs in Welcome view
list: do not announce "use the navigation keys to navigat" message to make things more concise
clarify docs for onDidCloseTextDocument
Status bar: Home and end should move focus to start and end of status bar entries
:lipstick:
add some more unit test
make sash size configurable on ipad
fixes #97457
better fix for #97584 without flicker
fixes #97459
fixes #97464
There are two KeytarCredentialsService implementations (fix #97501)
set default theme according to defaultThemeType
Pinned tabs: reopen closed editor does not restore pinning (fix #97584)
Pinned tabs: doesn't toggle with shortcut (fix #97520)
update variable name to be more descriptive
build - run "code -v" to verify notarization is proper
Restrict trusted domain auto-insertion to github domains. Ref #97532. Reasoning is otherwise it would be possible for an extension to simply insert an entry into .git/config. This is still possible in thoery, but at least only for github.
Update trusted domains based on workspaace remotes Closes #97532
Trust https://github.com/{ME} by default
Add supportsMultipleAccounts to auth providers
Add getSession and hasSessions to authentication namespace
Remove autoReveal class and simplify selection
Clairify breaks setting effect
Extract error codes to constant file
Use equals helper
allow icon and contextualtitle on views from exts
improvements to cell output focus sinks Move focus off sinks when they are used so they are not triggered a second time when focus goes back into the webview later
avoid notebook editor input duplication when hiding/showing tab
fixes #96584
Move drag/drop listeners to list-level to fix dragging over code cell outputs #96308
feat: use configNamespace for registering language providers of other extensions (#95621)
Prevent aggressive image name encoding (#96935)
Configure optional chain completions at the file level instead of per-request
Use vscode editor font variable in markdown preview
fix: gpu helper entitlements (#97546)
INotebookEditor extends ICompositeEditor
Use generic for providers with resolve methods (#96955)
fix spaces
adopt defaultThemeType in web
support contextual title via containerTitle
fix dnd.
Unregister capabilities on provider dispose
Add schema for open new search editor command args #95582
extract notebook editor widget
Retained notebook editor under workbench.
Add "" around $0 in Linux starting script
Remove trace setting from microsoft auth provider
fixes #97471
Add force checkout and smart checkout
Pinned Release Notes tab is blank (looks weird) (fix #97218) (#97468)
notebook outline - don't focus notebook
Switched to 'editor' in favor of 'inherit' and improved the setting descritpion (#97508)
promising progress on #96779
fix something
improve propagating debugging arguments (#96337) (#96822)
Ignore duplicate registered settings instead of throwing
Increase the default horizontal scrollbar height to 12 (#96928)
Extract the custom mouse cursor to `vs/base` to get it also in the standalone editor
fixes #96928
fix goto error issue
:lipstick:
:ltipstick: make IdleValue#value a getter
reload message is not needed anymore
Mention - prefix in commandsToSkipShell doc
Update grammars
#93960 Ability to compare globalState with current state
#93960 abiity to compare with local extensions
fixes #97199
Add rename by git context menu
notebook - show first non-empty line for code cells, select and focus cells on select
Add settings for SCM input font family (#97139)
fixes #97059
:lipstick: simpler menu registration
Add map state test to forEach
register a marker list provider for notebooks, #96708
add marker list provider, #96708
rework gotoError logic to be fit for #96708
fixes #97431
debug: remove support to open config file to the side
Pull request feedback
fix retriggering broken builds
actions - remove some unused event/context from run()
menu - simpler lazy instantiation
debt - remove unused method from launch service
Pick up TS 3.9.2 insiders
windows - ensure new-window request has right window context (fix #97172)
:up: playwright@1.0.1
Resolve compile issues
Upload folders via D&D in the browser workbench
autoReveal changed into class with added options
typo
Add tooltip to settings editor tabs
allow the inline diff editor to be centered
notebooks: rerender output if the webview reloads (#97282)
Tweaks from notebook focus PR
Don't return an override if there are no custom editors
fix: entitlement for default helper and browser process (#97263)
NotebookDocumentEditEvent
Upload config task can continue on error
Add unused SortOrderOption setting for discussion.
Add setting to control the sash size
Preserve focus in status bar
Moved eslint-disable... to correct import line
Address PR comments.
fix: use correct codicon names for folding control colour customisation
Do not tree shake interfaces or classes that extend or inherit from symbols defined in the default library
editors - fix bad padding for pinned tab
Add missing json parse
Make LinkedMap iterator state aware
fixes #97110
build - publish crash reports only if previous steps failed and continue on error
fixes #97228
editors - for now disable sticky index when tabs get disabled
Use system-ui alias for UI fonts (fixes #10144) (#96948)
diag - start crash reporter as early as possible if --crash-reporter-directory is used
Update pills style to use mix (ref #96608)
Update distro
Removed extra imports made by merge
Stabalize reusePriorSearchConfiguration setting. Closes #89353.
Responded to PR feedback
Allow passing args to search editor. Closees #95582.
Formatting
avoid spliting text buffer to lines
Changed double quotes to single
Spacing
Allows focus to be moved inside notebook output.
fixes #95641
Adopt issue classifier. Closes #95086. Closes #95091.
fix: add separate helper entitlements (#94728)
Center pill badge & button in quick pick
Re #96489
fixes #96116
Re #96564
Added display name to PowerShell task (#97160)
#96370 show sync views when signed in
Revert "debt/es6 - make LinkedMap a ES6 map"
tests - fix bad regex to unblock build
Remove the debug.enableAllHovers settings
actionBar: fix npe
:lipstick: crash-reporter-directory
Don't show errors for shell provided tasks
F6 and shift+F6 also focus on activity bar
actionBar: use both up and left for back and down and right for next since not all users can see orientation
statusBar: fix context key intial state
statusBar: skip over hidden items
fix #97144
Change experimentalLinkProvider default to true
remove menuBar/file menuId (unused) for #94054
drag&drop a VSIX file on the extensions viewlet (#96907)
Git: Add "git rebase --abort" command (#97071)
Trigger sync when sync viewlet is opened
move sync trigger to autosync service
Avoid Object.assign
list: store previously focused on typeing naviation
Update cgmanifest.json to reflect the update of vscode-oniguruma
Update to latest vscode-oniguruma
extractRangeFromFilter - only parse column if we have a line number
Update src/vs/workbench/browser/parts/statusbar/statusbarPart.ts
add <path>:line <line> goto pattern #95856 (#96535)
Update src/vs/workbench/browser/parts/statusbar/statusbarPart.ts
Update src/vs/workbench/browser/parts/statusbar/statusbarPart.ts
do not announce if only one character typed to avoid duplicate announcment
add main process launch config back
list: announce once element typing is done
build - ensure unique crash dump name for windows
Don't overwrite cursor when fetching more recent
:up: distro
diag - publish crashes from builds as artefact
diag - set crash options for extension host if crash reporter directory is provided
diag - introduce crash-reporter-directory to enable crash reporter for local folder
:lipstick: code style
Update unsaved editors label
Add support for workspaces callbacks to MS auth provider
remove unused.
fix false negative test
Don't focus editor when un-expanded comment is hidden
:lipstick:
saveAs
Aria label search tree based on contents Closes #95861.
revert.
api: implement extension mode api (#95926) (#97081)
Reduce "export const [...]id" pattern to save on minified code size. Closes #96672
Update distro
Add multiple result link tests
don't focus moved view containers
fixes #97005 fixes #94247
closes #93849
fixes #97007
Support for pinned tabs (#97078)
xterm@4.6.0-beta.44
:lipstick:
Move desktop log service to workbech/services
#95157 add debug logs for user data changes
Avoid rendering attempts outside the canvas
Clean up minimap layout computation
Small tweaks
Keep minimap layout stable (#95178)
Minor tweaks
Extract minimap layout computation
Break the layout change loop by reusing the previous result (#95178)
Move word wrapping options logic to the EditorLayoutInfoComputer
Add a memory storage space for layout computation
statusBar part: also use up / down as secondary keybindings
Search in parent folders for node module resolution
#78894 failing test
Update src/vs/base/browser/ui/list/listWidget.ts
statusbar: tabIndex on itemContainer not needed
statusBar: focusNext and focusPrevious
xterm@4.6.0-beta.43
Remove debug logs
Convert validated links provider to new model
 [rename on type] Language client is not ready yet. FIxes #97062
Update protocol links with new model
Update word link provider with new model
create spdlog service after workbench is restored
xterm@4.6.0-beta42
Move web contributions to terminal.web.contribution
debug: move getSpecificSourceName to a helper method
Move ExtensionContext.environmentVariableCollection to stable
remove timeout as this is causing flickering during startup
Focus did not change with typing, re-announce element https://github.com/microsoft/vscode/issues/95961
#96898 load unknown configurations always
debug: use proper context for the disconnect command
Event listener leak in WalkThroughPart (fix #96988)
fix tree shaker fyi @alexdima
Adds diagnostics for github actions
reduce flicker when moving between panel/actbar
Layout terminal with cached dims on first visible
document add/delete events
Transform outputs is now safe
Remove notebook content provider
notebook document creation in UI side
fixes #96951
Adopt registerAction2 in search editor land. Ref #96672.
fixes #97007
Clean up search view dirty state (#97038)
Better fix for #96968
Don't allow layout to be called with negative dimensions
Bump actions to close #97025.
Bump ping delay
Apply scroll area to hover content, not status bar
Bump action version
onDidCloseNotebookDocument
#97017 Use delayer instead of Event.debounce
fixes #97019
#90020 update activity bar when container location changes
#90225 Update order of welcome view to be first
naming: *Notebook
finalize dynamic debug config API; fixes #88230
host - latch the change focus events
fix #96898
fixes #96987
Update builtin extension ms-vscode.js-debug-nightly
fix #96655
debounce onDidChangeMarker-event inside outline pane, #96914
onDidChangeMarker-event have no marker before or after, #96914
web - also listen on visibilitychange to detect focus changes
explorer: use .find not .filter
debug: use .find not .filter .pop()
Add `‚Äìnoprofile` to detect WSL IP address to speed up things
Make sure there is vertical space for buttons (fixes #96602)
debt/es6 - make LinkedMap a ES6 map
debug: fix stackFrame equality matching
make ResourceMap a real ES6 map,  #93368
debug: a simplification with logDebugSessionStart
debug: introduce debugTelemetry
fix #96970
on dispose, fire change event only once, #96693
add trace logging to extHostDiagnostics, #96837
use ResourceMap in extHostDiagnostics, #93368
debug: introduce debugStorage to simplify debugService.ts
Wrong Alex
Change user references in vscode.proposed.d.ts to be usernames
add view name in progress indicator api
debug title: use red emoji as title prefix
:lipstick:
do not use values
#90020 remove viewlet semantics from activity bar
fixes #94464
print icon registry for documentation
use ResourceMap in markerService, #93368
Bump actions
Force custom editors in diff view to have 100% height wrappers
Make image/dockerfile/dockerComposeFile optional
files - do not open dirty models that are being auto saved (#96920)
Use dropdown.background color in debug dropdown container
Remove dupe focus call
Promise.
Re #93265.
Don't save files on JS/TS server start
Remove console log
Clear out stale CSS style properties on webview (#96665)
Update built-in JS/TS version to 3.9
Build VS Code with TS 3.9 rc
Preserve cell edit state and focus after dragging #96308
Apply special macOS dark text cursor to all mouse-text elements
Replace text cursor styles with mouse-text class
Polish markdown dragging #96308
Improve cell drag above/below UX
Nicer name and description after review
Update onDidChangeTreeData event type, fixes #96932 (#96933)
:lipstick:
adopt text buffer in split/join cells.
default ext views' container icon to ext container
addendum to #92751
fixes #92751
remove duplicate identifiers
:lipstick:
format
remove dep on EditorModel from NotebookEditor
fixes #96653
aria labels: use comma as separator
keybindings editor: contribute a keyboardNavigationLabel
Decrease frequency
fix cron schedule
Add Classifier: Trainer. Ref #95086.
fixes #96579
debug: introduce contribution for update title
make goto error widget action a menu and contribute navigation commands to it, #96708
fixes #96905
debt - Format Cell instead of Format Document, also add Format Notebook
remove prettier
debt - use less async-util and more native async-await
debt - remove unneccessary revive call
debt - use bulk menu append when possible
debt - clarify name of `isInEmbeddedEditor` because it's only true for "walk through snippets"
Update distro
Update xterm and addons to latest
fix compile problem
debt - use [] over new Array
debt - don't send data that's not needed, make resolve a function not a property
don't wait for snippet completions before asking for other completions, also use async-await #95325
validate on client (using faster ways), don't send repeated data, #95325
debt - use native classList, not util
debt - use more native es6, less polyfil utils
fix https://github.com/microsoft/vscode/issues/96691
perf - use bulk function to add command and menu items, fixes #96693
es6 - use more find over filter
update comment
es6 - use Array.find over find
add comment why sync state should be scoped
remove obsolete todo
change feedback message for hiding (#96878)
fetch last sync state when sync failed with 412
Dont scroll to revealed files option.
Support opening external term in empty workspace without active file
scope sync state per workspace in web
use line models (string[]) directly
title - allow to set a prefix via service
editor groups - resolve #96725
chore: bump electron@7.2.4 (#96807)
more testing for unsaved document
content change event on piece tree and annoate TODOs
do not break auto save
Slim NotebookEditorInput and model service for notebookEditorModel.
remove blank line (my best checkin ever)
bump version to 1.46
product icon file enums. for #94209
product icon file validations, fixes  #94209
:lipstick: jsdoc
be defensive when checking remote authority
fix remote authority check
Add list of VSO allowed extensions
Don't use environment collections when using strictEnv
Prevent hover from showing when icon doesn't exist
Don't give webview a width if its container has none
Notebook cell text model has text buffer
Set token if either the value or provider has changed (#96716)
fixes #96704
Tweak home icon badge position and sizing
Remove duplicated when conditions. Ref #94439
Opt in syncing global state (#96662)
update "deprecated, use es6' list
Remove word widget from commands and context keys
ensure vscode.window.showTextEditor opens a text editor not a custom editor, #96397
:lipstick: backup error message
Throw backup-error to prevent dataloss, #96685
fix #96673
custom editor - isSaving never for untitled
smoke :lipstick:
home indicator - add a product icon overlay
make sure editState is CellEditState.Editing when text model changes, also make sure not to duplicate newlines,  #96398
Settings description typos (#96641)
fix #96459
smoke - only start automatically after data migration tests
web - add fallback to security exception for clipboard access (#96531)
Update builtin extension ms-vscode.js-debug-nightly
fixes #96650
fixes #94872
fixes #95439
Make sure custom editor override is also used when reopening default editor
Make getEditorOverrides take a uri instead of a editor input
fixes #96379
Only use input editor for resource
fixes #96592
:lipstick:
better fix #96599
fixes #96599 fixes #95355
Note save as makes the file not-dirty
Add some details to undo/redo
Make sure we pass through backupId in custom editors
Use search for filename when local with a remote (microsoft/vscode-remote-release#2869)
update distro
Re-use saved search editor inputs. Closes #96587.
:lipstick:
Make sure markdownDeprecationMessage shows up in package.json suggestions #91618
Remove unnecessary additional layout
Correctly validate \\?\%VAR% format
use rendered editors for markdown editor cell, #96532
goto error should work on all editors, #96551
cache inputs under the notebook uri, try to reuse input iff possible, #96551
Use a non-wrapping markdown code block for env vars
fix cache key #96402
Make widget scrollable
fuxes #94087
fixes #96134
Bump actions
Update link for automated issue management actions repository (#96568)
Don't shrink right edge hover
Right align status bar when anchor is closer to right edge
Do not react immediatly on blur events due to tree refresh potentially causing an early blur
Add hover delay to env var widget
Change default env var widget to warnonly
Support wide character word links
Remove the change -> Remove:
Remove unwanted quotes
follow -> following
fix #96404
cache and re-use editor input object,  #96402
fixes #96297
register codicons in icon registry
smoke - restore skip-release-notes CLI arg (#96459)
Scroll to switch tabs: Reverse mode is strange when tabs overflow (fix #96405)
#96340 Add logs
fix #96529
Ensures welcome editor won't open more than once
Always restore active viewlet on web
Update builtin extension ms-vscode.js-debug-nightly
markdown output use link colors
accessible mimetype display order
Add logout method to auth provider API
aria label update for mimetype switcher
Hide notebook cell monaco-list-row focus outline in all cases
Pass correct host for VSO token
Update builtin extension ms-vscode.vscode-js-profile-table
Remove outdated comment
Add functional tests
Changes welcome to always be active
Remove unused variable
Bump actions
group by signed in
Remove auth provider extension contributed sign in/out commands, fixes #96346
Properly check if breakpoint was removed
fixes #93438
Upper case find command titles
Allow quick suggestions in strings in dockerfiles
fixes #96399
update account picker
add progress badge while turning on sync
Revert accidental package.json change
Let markdownDeprecationMessage override deprecationMessage
Add missing documentation
Make sure we use the more specific custom document type in interfaces
Update npm script compile-extension:typescript-language-features (#96320)
Make char position optional in TS stack (#96321)
update tests
fix GDPR annotation
release: prep for 1.45
update to telemetry service/callstack or exception
Introduce `files.maxMemoryForClosedFilesUndoStackMB`
Clean up onTypesInstallerInitializationFailed
Make sure we validate position in light bulb widget
update distro
Adopt latest native-keymap
Adopt latest `vscode-textmate` and register the Registry for disposal
Move toggle editor type command out of custom editors (#96100)
Tweak cell insert indicator
Register "Change language" action and sync language change to ext host
[html] update dependencies
[css] update dependencies
experiments: allow filtering by os
Add test for #95742
Clean up CallstackOrException telemetry in typescript-language-features (#96108)
Add status bar and language picker to markdown cells
Add language picker to the code cell status bar Needs - sync language change to EH, and add status bar to markdown editor cells
Pick up new TS version
Persistance check should not activate background webview extensions
Open a separate window with the log
Focus next item in list after removing breakpoint
Add param docs for getSessions and login, fixes #94033
Reorder cancel button, fixes #96065
Polish notebook margins
fixes #93939
Add a mechanism to debug TM grammars
fixes #92895
Focus terminal after dragging a file to terminal
Use github auth server for provider
Simplify auth provider consent dialog wording
fix #96256
Add ref to why test is disabled
fixes #95940
Disable tasks tests in web
Update src/vs/workbench/services/host/browser/browserHostService.ts
rename "Trigger" to "TriggerKind"; see #88230
Remove pushUndoStop()
do not throw error and continue
CallStack: We need the MenuEntryActionViewItem so the icon would get rendere
fix button codicon colors
:lipstick:
git: config.githubAuthentication
git: config.terminalAuthentication
git: use environmentVariableCollection
:lipstick:
progress - preserve 150ms default delay for window progress (#95615)
Update do for location based API commands.
#96064 do not show view focus command when not active
Show warnings when task types don't match
add TableOfContentsProvider for none text editors, #95234
fix #95095
Remove pushUndoStop() from restoreRelativeVerticalPositionOfCursor
Show title area when there are buttons (fixes #95703)
fix #96225
Allow Quick Open (Ctrl-P) to Prioritize Exact Case Matches (fix #96122)
tune status bar accessibility
Use a max length since we are inserting the whole msg in the DOM and that can cause browsers to freeze for long messages
move github credential provider to git
notebook - more (and shared) category label, more nls
explorer: If there is something being edited via input box make sure to close it
localize strings, use category property. fyi @rebornix
use precondition, #96239
add format notebook command, #96239
fix https://github.com/microsoft/vscode/issues/96013
:up: playwright@0.15.0 (#96218)
:lipstick: redundant code
:lipstick: editor group perf
editor - properly resolve iconTheme editor option
Use DisposableStore
fix formatting
selectively propagate debugging arguments via payload; fixes #95957
Update vscode.d.ts
proposed dynamic launch config API: rename 'scope' to 'trigger'
Update distro
xterm@4.6.0-beta.25 xterm-addon-webgl@0.7.0-beta.8
split and join
Add more modules to ignoreDuplicateModules
Do not create a sourcemap for loader.js
Go back to just file for icon path
Add executable bit to code.desktop
Initial implementation: Support \U\u\L\l\E modifiers to search replacement to alter word case; tests TBD
notebook respect editor association
Move EnvironmentVariableCollection API into ExtensionContext (#96061)
avoid creating nb editor input multiple times when switching tabs
Add tests for metadata
Remove notebook cell grabber
Align custom editor API proposal with notebook API
use vscode-notebook scheme for working copy in nb
Throttle status bar spinner animations to save CPU
fix #96070
fix notebook integration test
add bold/italic/underline to semantic token styling (fixes #95932)
explorer: fix new file creation glitch
callStackView: minor fix
debug callstack inline actions: update on menu change
Remove dupe key
Update compilerOptions returned by host for javascript.implicitProjectConfig.experimentalDecorators. (#95923)
Update notebook test command IDs
Remove unused svg (ref #95494)
fix yarn.lock
make notebook action names consistent
fix yarn.lock
move notebook actions to const
serverReady fix for #95108
revert typescript nm version change
Can not clear font style (for #95932)
wip: use registerCredentialsProvider in github-authentication extension
git extension api: registerCredentialsProvider
update distro
Adopt new package name (`vscode-oniguruma`)
explorer: call directly onto the view instead of sending events
fix #95494
update distro
add log to askpass ipc
Disable terminal tests in remote
quote ';' instead of escape; fixes #94982
Suppress exit code notification in terminal test
#96022
pushUndoStop() after editor.setScrollTop
fix monaco button codicon color
Revert font size back to 11px
Add setting to disable fast tasks picker
Allow theming the diff view's diagonal fill with diffEditor.diagonalFill
Add editorOverviewRuler.background colour customisation point
:lipstick:
fix setting token. reset when token failed.
A11Y in f7: go to next symbol
Introduce an `inline` group to debug/callstack/context
update distro
debt - remove old hardcoded color value from css
Enable JS/TS workspace symbol search for all projects
keybindings aria: fix npe
Bump up ping days
Update call for /verified comment
Don't prompt to save file on close when autosave: onFocusChange (fix #94476)
Shows Welcome page even w/ default editor layouts
debt - change delete operand (for #96022)
Adds basic editor support to defaultLayout Moves applying default layout logic into layout.ts
execute notebook command does require inner editor focus
notebookCellHasFocus
Rename supportsMultipleEditorsPerResource -> supportsMultipleEditorsPerDocument
Clairify saveas behavior
clear cell output in the core
Rename some custom editor types/functions and introduce backup context
More polish
Theme links in markdown cells
üßπ
Polish toolbar and layout margins
remove shadow re #95983
Add trusted extensions for #93332
avoid conflict with jupyter in OSS
More context key fixes, cleanup. Check metadata in editor modification methods
Add 'open with' to the explorer context menu (#95805)
Rename template param to T
Don't require args on code action commands
icons and fixes for built-in panel moves
Split view: use role button so the aria-expanded state gets read
Better error handling in github auth provider
Keybindings editr: make aria label more concise
Undo/Redo should restore focus state
intergration tests.
enable moving entire view containers with cache
fixes #95982
debug: enable js-debug to auto attach (#95807)
Update ms-vscode.js-debug-nightly to 2020.4.2217
Feat: #94285 Options on saving before running tasks (#94466)
Dispose data listener before disposing terminal
Return after done(e)
add git api to init
fixes #95315
Make range in EditorStateCancellationTokenSource readonly
expose vscode.notebook.onDidChangeNotebookDocument-event
fixes #95726
fix clone from
:lipstick:
support codicons in welcome view buttons
add renameRemote
update distro
Push undo stop before scralling
update distro
Use `argument` in addition to `folderUri` when conditionally resolving some variables. (#95483)
:lipstick:
fixes #95691
extract CellEditorOptions which can update based on the underlying config, #95956
Adopt `vscode-oniguruma-wasm`
:up: distro
debt - remove unused conditional
Dark+/Light+: constant color that is closer to the variable color (for #95346)
Use the cancellation token to trigger rename cancellation
More directly log account id in settings sync
Add account id to authentication session object
Remove margin for last item in markdown cell
Tweak margins
Adjust add new cell margins
Update cell status bar text color on light themes
Notebook edits sort by end.
Update ms-vscode.js-debug-nightly to 2020.4.2117
Don't require args for refactor command
Mark field as readonly
Rename microsoft auth provider output channel
Change key for microsoft auth provider
Add logging of service state
Polish status bar (make it shorter)
NotebookEditor.selection
Convert more calls to SyncActionDescriptor.create to SyncActionDescriptor.from (#95795)
hook up undo redo with edits from extension host
move view container registry api into view descriptor service
avoid loading and twisty set at the same time
Show args in default keybindings
fix unit test.
Don't allow deleting the last notebook cell - add a new one in its place
notebook.activeNotebookEditor
add focus top/bottom actions to cp
Add fold actions to command palette
TS: Add setting to prompt users about workspace tsdk (#95566)
:lipstick:
fix using workbench session id
fix using workbench session id
Add /label and /assign commands. Closes #95786. Closes #78432.
Use session id in embedder api
Clear folding cache when model switched
Revert "Make cell focus outline inset"
focus top and bottom actions
notification list: see dialog on a notification toast
fix build
move folding test to contrib
debug viewlet dropdown outline offset
aria label for notebook tree
avoid iconClassName
RemoteSourceProvider.icon
Improve grammer of hover
show git repo details
Register local loading icon for async tree
markers view: set ariaLabel dynamicaly on tree
list: accessibilityProvider.getWidgetRole
do not initialize until all accounts are registered
update distro
list: introduce accessibilityProvider.getWidgetAriaLabel
Use an aria label in picker on task categories
Changed name of the setting to openAfterClone
update distro
search clear results icon wrong
explorer: refresh icon not showing
Change the embedder api - separate enabling sync by default and logged in account
Provide support to sync to an account by default
debt - use clipboard service
use folder icon for debug quick pick
updates ES6 deprecated list
update distro
remove scrollbar arrows again
:up: distro
Auth not supported (#94148)
change all instances of `wordHighligher` to `wordHighlighter`
Log (#94148)
Don't focus editor for "copy cell down"
Always focus a cell after deleting
Add actions to f1
Preserve focus when duplicating cells
Move terminal hover down 1 pixel
bump distro
Make cell focus outline inset Can't just use outline-offset on the element itself, it goes under the child background color
rename :lipstick:
Move find widget to notebook/contrib
Introduce notebook contribution.
Only enable reopen with command if we have multiple editors
Restore focus after moving cells or deleting cells.
Make markdown cell heading previews match markdown renderer
Don't show border for first view in sidebar views
Adjust notebook cell toolbar shadow
Shrink execution count
Polish notebook spacing around fold icons
Make _workbench.openWith support other editor types
Initialize EDITABLE context key correctly with defaults for cells
:lipstick:
No folding when the folding section only contains one element
Focus cell after creation
remove test actions
:lipstick:
trigger folding icon update when foldign regions changed.
remove unused folding update event
Folding model unit test
Add `reopen with` command to editor title (#95730)
Add .vscodeignore file to github auth extension
Finalize SignatureInformation.activeParameter api
Initialize markdown cell width correctly
Use check instead of floppy disk save icon
Add SyncActionDescriptor.from helper (#95731)
Initialize cell focus class correctly
debug dropdown: show dynamic providers
Await keychain write on logout for github auth
add alwaysUseContainerInfo for built-in viewlets
fix collapse state restore and unit test
restore view state for folding.
finalize api for #91541
Show blue outline on cell editors with cell focus
exploration - enable automated merge again
Adding tests for LocationLink in API commands
Add support for LocationLink in API commands
protect from proposed
Support workspace config based recommendations
update distro
Allow debug extensions to provide configurations to display in Select and Start Debugging
remove duplicate git.pullFrom command
make theme API final
search codicon work
fix git clone
#95160 Pass account type header
support multiple URLs
Some emoji not matched using new Quick Pick (fix #95716)
Hook up enter and esc
Properly consider lettingSpacing for terminal dimensions
some jsdoc
fix duplicate icon registration
add vscode.notebook.createConcatTextDocument proposal
export onDidChange-event in concat-doc
handle remote source provider errors
Investigate #94862
annotate todo
fix #95715
aria: do not read duplicated alerts
electron - also setPermissionCheckHandler
don't duplicate lines, only keep prefix sums
add more json file extensions #95584
electron - block permissions requests via setPermissionRequestHandler
set styles in batch
Exports missing interfaces
fix smoketest
quick access - prevent key blubbling (#95587)
debt - fix TODO for contextkey computation
Ensure @rematch and nextEmbedded can be used together in a Monarch grammar.
separate model from service
:lipstick:
:lipstick:
fix flickering of icon in activity bar
Adds `defaultLayout` option for embedding ‚Äî #990
Prevent unexpected rename cancellation
Add onWillHide hook so DOM focus can be checked before persisting state
Persist focused notebook cell, dom focus on load
Hide cell hides its output instead of removing it from webview.
notebookviewmodel.viewcells readonly
check if no visible views when determining title
fix editor drag flicker
view: use Codicon
files/explorer: use codicons
ICellRange: zero based.
update panel and fix issue with resetting views
define panel codicons
Use Codicon for notification severities
codicon for home action
notifications codicons
codicon activityPart fix
Update to latest typescript version to build vscode
Re #94408. Gear icon on quick pick for setting default editor association.
index based folding
rename test
update codicons
codicon fix for native menu
Unify into single ViewContainerModel
Double click to edit markdown cells
Reveal top of dragged notebook cell, fix classes after dragging, remove "insert cell" action
Remove cell move arrow actions
Update default sidebar section header colors (fixes #93764)
Revert "builds - add VSCODE_CONTINUE_ON_TEST_ERRORS"
Shift terminal target/hover up 1px to match selection
Make environment variable info widget hover accessible
improve doc for dynamic debug config provider
codicons for remote
use Codicon.error / warning / info
add NotebookConcatTextDocument to API, support selector-based creation
codicons for simpleFindWidget
use Codicon.close / Codicon.closeDirty / Codicon.removeClose
Make hover actions keyboard accessible
symbol codicon: use iconRegistry
make dynamic debug config API "proposed"; see #88230
refactor test a little
Notebook cell DND with nicer drag image
Basic cell DND
move codicon to base/common
remove extra overloads
Move link handlers back to proposed
fix for crashing eh
User 'cat' as GIT_PAGER option
workaround for crashing eh
support location at range
Move env declaration of GIT_PAGER
builds - add VSCODE_CONTINUE_ON_TEST_ERRORS
Spell out icon names (fixes #95614)
add dynamic debug config API
update prefix-sum when docs change, add offset/position math, tests
debug progress: list on progress while launching as well
update distro
update references viewlet
track new git remote (#95552)
extract NotImplementedProxy-util to types
eventing, naming, fixes, and tests
add content security policy
chore: bump electron@7.2.2 (#95517)
electron - enable ELECTRON_ENABLE_SECURITY_WARNINGS when running out of sources
tests - more reliable disk tests
define parameter hints codicons
define marker navigation codicons
define folding codicon
Update distro
Move word link activation handler into provider
Support enableFileLinks
Improve labels, polish
Share same activation handler with tooltip to ensure it works
Add labels to directory links
Move directory handling into link provider
Add git diff link support, fix multiple links on one line
Rename provider to TerminalProtocolLinkHandler
Remove event from new link tooltip callbacks
Add box drawing char (9472) to wordSeparators
xterm@4.6.0-beta.15, xterm-addon-webgl@0.7.0-beta.5
Register mimetype for *.code-workspace
fix tests
update distro
#95160 Add support for multiple authentication providers
Don't show pointer cursor unless modifier down
show accounts picker for sign in action
Update xterm
Remove resolved todo
Defer viewport range calculation
Respect correct modifier
Use config service to get editor.hover.delay
Convert createLink to a class
Move link into its own file
Track modifier with mousemove, remove document mouseout listener
define search view codicons
scrollbar codicon: don't export
Shift targets up 1px
Start scheduler properly
Use a scheduler for hover timer
Reset hover timer when mouse moves too much
Share hover wait code
Draw underline when ctrl is held for word link providers
Use $ for creating elements in hover widget
Remove duplicated css rule
Add .xterm-hover to avoid mouse events bubbling
Remove terminal widget tracking
Use xterm as root of widgets container
Have hover targets ignore pointer
define find widget codicons
use Codicon.lightBulb
define diffreview codicons
Emoji handling in new Quick Pick (fix #95312)
web - home indicator wrap up
Use `search.seedWithNearestWord` setting instead of emptyness of search input to control nearest word seeding. Ref #91901.
Add environmentChangesIndicator setting
Always set `setIgnoreMenuShortcuts` while the webview is focused
better panel caching
adopt in panel and revert unnecessary changes
activity bar support
Make sure we also disable menu shortcuts for webviews when using native menus
search.seedOnFocus => false by default. Ref #91901.
Add command to disable seeding workspace search text on focus. Ref #91901.
launch: restart attachment to extension host process
clean launch.json
tweak the layout debouncing a bit
Update ms-vscode.js-debug-nightly to 2020.4.1517
:lipstick:
fewer listeners
:runner: fewer event emitters
:lipstick:
reduce event emitters on notebook baseviewmodel
move and implement views model to view descriptors model
Remove todos
Make widget manager not know about hovers
Move showHover into the terminal link manager
fix #95510 'Reveal in Side Bar' confused by case-sensitive FileSystemProvider
Move interfaces into widgets.ts
Clean up
Ensure hover right border shows when it's pushed to left
Localize environment strings
Do not let git use a pager
Remove test data
view model skeleton
revert enabling sync by default on web
Up ext host timeout to 30 seconds
Clear account usages on sign out
Support flipping hover vertically and sliding left when out of space
wip - concat document for notebook cells
extract NotImplementedProxy-util to types
add shared process to vs code launch config
define diff codicons
quickInput codicon
use browserLaunchLocation workspace
use js-debugger for Launch VS Code
css fix
tree codicons
Add transition to backdrop-filter when dragging elements (#95217)
move RemoteSourceProvider to git api
icons for dialog
missing
improve ux around git remote picker
#94766 Show sign in action when enabled from CLI
dynamic stylesheet for codicon css
Set terminal label on textarea, not alert
fix npes
disable typescript task auto detect
No more textModel-reference in OutlineModel, #95234
codicon definitions in browser/ui/codicon/codicon
debt - put MovingAverage to numbers
make OutlineGroup fit for being used with other things than providers, #95234
:lipstick:
fixes #95508
add telemetry event for createSourceControl
monaco-editor-hover should have role tooltip, not its child
markers: also rerender parent once children get updated to update aria attributes
remove deps
fix getWordAtText for webkit-based browsers
fix collapse all not working
iterate over suggestions only once, #95324
use async-await to prevent new callback-functions, https://github.com/microsoft/vscode/issues/95325
Update folding control token description
quick access - also show no-result pick for editor symbols
Try downgrading vscode-extension-telemetry package
fix #95448
Code cleanup, remove stuff related to sign in commands
Only register openNativeConsole on non-web
Reapply ad2df067947a662b55b1c6d6996102cf5221f4c0
Extends webview focus workaround to when someone calls `.focus` on the webview dom node
Use shared keyboard handler for all electron webviews
toolbar not covering cell content
:lipstick:
Add configuration field to launch.json, workspace.json or .code-worspace when it does not exist
disable failing tests
restore folding state when notebook view model changes
Update folding regions when notebook view model change
Allow a custom editor to opt out of supporting multiple instances for a single resource
Add CustomDocumentContentChangeEvent
organize imports
Folding for cells.
Add f6/shift+f6 to skip shell
author-verified => z-author-verified
Show provider name next to account, fixes #95476
:lipstick:
turn off only when enabled
Make sure right split is relaunched
Hook up actions for stale info, add relaunch command
Add basic telemetry to auth providers
update account status. - remove inactive state - use available and unavailable states
Tabs: set aria-description to empty string so that screen readers would not read the title as well
Add placeholder string for changes active
Improve styling
fix panel dynamic titles
incorporate feedback
Styling, depend on .monaco-editor-hover
Remove use of memoize
Scope prepareRename to TS 3.1+
Always explicitly clear signature help disposables on hide
Rollback Re #95466
Center icon, fix layout loop
Cell View State restore
use new semver-umd module
statusbar: put aria-label on label container not on parent
Removes bogus code
Size widget container to viewport's size
Refactors, create env var widget
Clamp hover to window width bounds
remove extra imports
check for change
use map over switch, "more strict" signature, don't send default type, https://github.com/microsoft/vscode/issues/95325
Hide hover when mouse goes out of document
Properly dispose of hover target
Align capitalization with editor hover
Align font size with editor hover
Support right alignment
Hook up mouse tracker to targets and hover
Move generic stuff into hoverWidget
Create link cell targets
use yarn watchd for the default build task
Add comment explaining issue
tests - increase timeout and retries
disable info actions
Show confirmation dialog on sign out listing everything using the account
Refactor UserDataSyncAccounts - Introduce account status - Update accounts and current session id - Update other logic based on above state
move API to vscode-dts, #90208
revert task
deemon
fix  https://github.com/microsoft/vscode/issues/95319
add failing and skipped test for #95319
notifications: do not trigger ariaAlert for silent notifications
set role: 'code' on the monaco-editor
web - add a home indicator API
check if provider is registered
Include HTTP_PROXY and NO_PROXY (#93595)
quick access - treat slash and backslash equal (fix #94871)
Allow --log-net-log (#93595)
Update exploration-build.yml for Azure Pipelines
Tweak notebook cell layout
Center action items in cell toolbar
Ensure that status bar width matches notebook cell editor width
Don't show edit and preview modes in markdown cell at the same time
Adjust cell focus indicator for cell status bar
Make sure we clear the render disposables every render, not just if we have a valid signature
:lipstick:
Add SignatureInformation.activateParmater
cell list apis honor hidden regions
Show add cell above command in command palette
stopPropagation noop for wheel event requested by webview
Get hover escaping terminal
Show confirmation dialog on sign out listing everything using the account
Set hidden areas on the list
Show a context menu item when not signed into any accounts
Remove session from sessions map on logout for auth providers
Have terminal hover extend Widget
terminalsQuickAccess -> terminalQuickAccess
Fire env info change when relevant
Nicer toolbar for notebook cell
Update distro
More improvements to TS completion computation
:lipstick:
Update Codicons: update account icon
Hook custom editors into file: open with
Try working around webview taking back focus on quick input
:lipstick:
wip: git remote providers
 and shift F6 to navigate across workbench
Update keytar to latest public version (#95351)
strip \\?\ prefix from absolute paths
initialize only after provider is registered
dev - do not set ELECTRON_DEFAULT_ERROR_MODE on windows
Better progress indicator for running cell
- add sync actions to account dropdown - remove sign in actions from account dropdown
Add "running" message to cell
Implement notebook cell status bar
Revert "integrate sync turn on/off with account"
Passing backup id through restored custom editors
Make TS completion item more efficent to compute
Offer to show git command output on failure
Modify @types/vscode notification to ping @eamodio
differentiate view index and model index
Extract get view cell index.
integrate sync turn on/off with account
fixes #95341
tokenColorCustomizationsExperimental: validation error in theme specific rule
node-pty@0.10.0-beta8
Remove the integration between auth and sync flow
fixes #93657
Quick Open screen reader should not only read file names but their relative paths as well
fix errors in tests
Add @param docs to link handler api
web - change into namespace API for commands
web - fix service cycle
debt - remote path => path service
debt - adopt remote path user home
remove old proposal for https://github.com/microsoft/vscode/issues/90208
Move github config generation to own build step
remove git content provider
Cleanup
move off index
chore: update distro
Use editor background for scrollbar corner in webviews
Update Codicons: add 'github-inverted'
remove localized custom view string
Make sure webviews are properly destroyed/hidden when the webview editor is hidden by a maximized panel
Issue #93589: Rename 'renameShorthandProperties' setting to 'useAliasesForRenames' (#94480)
Bump distro
Add experimental trigger reason to ts server protocol
resolves #94043
use uuid and try dynamic titles (#94686)
app.ts - check uris
Share word link handler to hover follow link
Bump node-debug
Add PowerShell herestring autoclosing pairs
quick access - clean up symbols matching
fix compile error
product icons definition files: show icon in hover
better fix #94742
Have the integrity service also resolve when a file is missing
actually fix #94775
set role "code" on the editor
Revert "Make codicons in quick pick use currentColor (refs #89533)"
product icons: fix schema (fixes  #94215)
Revert "fix #94775"
Starting env var collection UX
File dialog: IEnvironmentService#userHome is deprecated (#95219)
tabs - add setting to switch tabs with mouse-wheel (#13902) (#95222)
fix #94775
fixes #94464
:lipstick:
fix arm64
:lipstick:
address feedback
debug hover: user debug colors
suggest ignores replace or insert range when one of them matches the corresponding default
Debug: Restarting a session in compound debugging should not expand other sessions
debug: move all color registrations to debug.contribution.ts
debug: add theming support to debug REPL
debug: add theming support to variables & watch viewlet, hover widgets
debug: add theming support to call stack viewlet
explorer check if parent is input before expanding and revealing it
web - :lipstick: command API
no ff testing on linux
web - add API to execute command
enable browser-unit-tests in firefox for mac, win, and linux, fyi @bpasero
outline - use maps and iterable instead of "object-maps"
fixes #95127
Reveal file in OS should work for special files like settings.json with vscode-userdata schema.
nativeignore - change to vscode-nsfw
don't show provider names multiple times, https://github.com/microsoft/vscode/issues/94947
workbench: set role application on the layout element, not top level one
fixes #94761
fixes #95164
Update Codicons: add pin and pinned icons
Revert "Only use pwsh paste on PowerShell 6+"
Only use pwsh paste on PowerShell 6+
Removes console.log -- oops üòâ
Open file when terminal word links match a single file in all workspaces
Don't override editor opening if we are switching to the same editor input
Support folders in link provider based terminal links
Re #94956. Paste above.
Pikc up latest TS@next
Try cancelling saves for custom editors if another save comes in
Remove extra checks for non-nullable functions/properties (#94631)
Update english please action
Show sign in entry for all auth providers in accounts menu, fixes #94488
When clicking on a link to a folder in markdown, reveal the folder
handle windows paths beginning with \\?\
Format
Add extensionHostProcess.js to the list of files being checked
Show active account usage in account menu, fixes #94635
fixes #94828
fixes #95126
use aria-roledescription and use ame aria label between editor and tab
Shared editor association setting between custom editor and notebook (#94952)
Update distro
Update distro
status bar: if there are icons in the text use the tooltip for the aria label
hover widgets: use role tooltip
fixes #95030
theme - introduce optional extra border between tabs and breadcumbs (#69854)
themes - add more tab styling options (#52862)
debug: session with parent can be attached
tabs - fix regression with text-overflow (fix #90299)
quick access - include button to remove entry from history also when quick navigating
debug minior polish: use ADD_CONFIGURATION_ID
status bar aria: fix some duplication
Bump ping delay up to 200 days
Remove english please command
Remove mac tests
Polish PR
Add english-please Action
Support emoji in links
Improve behavior of tooltips
Add tests for word link provider
Create word link provider
Rename to validated
Port old link format tests
Add first test for regex local link provider
Pass in validation callback
Basic regex link detection
Move links files into own folder, start regex link provider
Move web link provider into its own file and add provider tests
added missing word in the readme (#95043)
Cover case where a wide character lands on last cell in row
Consider wide characters in link positions
Only re-request diagnostics if the file has actually been opened
Rework markdown preview code to better support markdown preview editors
Make sure custom editors restore state inside webview on reload
Remove logs
Remove activate callback prop
Elaborate in setting description
Update distro
xterm@4.6.0-beta.4
Prevent CodeLens CSS selector name from being invalid
Ensure native tab commands appear in palette (#94734)
Cannot read property 'isReadonly' of undefined (fix #93224)
workaround flaky test (#94796)
debounced Find Widget, preventing cursor movement until typing is finished
Update distro
Hook up experimental TS refactor error
Add action to focus query editor widget (#94799)
Adopt xterm buffer API changes
xterm@4.5.0
Add trusted domains for #93332
Set active account to undefined when sync disabled
Don't wait on RemotePathService for local terminal Follow up #94506
fixes #94889
add ariaLabel to IStatusbarEntry
fixes #94629
More typos. Thanks @mattacosta.
Move to userHomeSync in terminal
Test using an environment variable to avoid winpty sequences
Fill in missing docs
debt - remove unused encoding method
quick access - support matching on entire query if symbol contains spaces
chore: bump electron@7.2.1 (#94727)
quick access - ensure to pin editors opened in background
quick access - fix bug with options merging
Separate out class for user data sync authentication, fixes #91089
format for upstream
Typos etc.
Update wording Ref #94731.
Add 'you forgot to paste' bot. Closes #94731.
Don't require custom editor undo/redo to be async
Convert remaining actions not used by views/menus
Convert terminal run commands to action2
Convert terminal scroll to Action2
Convert nav mode to Action2
File: reopen with...
Try preserving selected signature better in js/ts
Remove activation events
fix uri fragment slugification #94508 (#94655)
Show sign out notification for all auth providers, fixes #94634
Upgrade actions
chore: update js-debug
status bar item: set aria-label
aria: use role complemntary for status container
Simplify/modernize actions code
Reduce terminal null checks in terminalActions
TypeScript semantic tokens: use range provider
Convert more commands
Convert scroll to next/prev command to Action2
Convert select to prev/next cmd to Action2
Convert select to prev/next line to Action2
Import localize directly
Move toggle esc seq logging to Action2
Convert terminal find states to action2
Move action2 registration into terminalActions
Convert find next to action2
typescript: update typescript-vscode-sh-plugin
Convert find previous to action2
Consolidate all terminal config register into one file
Move terminal configuration into new common file
tweak cell naming, https://github.com/microsoft/vscode/issues/93933
Convert send sequence and new with cwd to Action2
fixes #93296
themes: watching in dev only works when setting theme is set (for  #94273)
fixes #93296
Tweak "last synced" color and position
fixes #93789
finalize SourceControlInputBox.visible
fixes #92225
Update distro
fixes #91310
rename
Update xterm addons
Add experimental setting to reuse prior search config. Ref #89353.
xterm@4.5.0-beta.21
fixes #93493
cleanup list/tree navigators
Clean up services required
Remove PromiseLike usage from terminal contrib
Respect thisArg in EnvironmentVariableCollection.forEach
Finalize registerTerminalLinkHandler API
:lipstick:
slighly better jsdoc for editor context keys
status: use status role and aria-live off
fixes #93779
status bar: go with role complemenatry for now
line and column information should be shown in status bar even if screen reader present
fix tests
centere editor layout: more precise check
Refactor to only use untitled search editors and transparently convert to disk format on save/load. Ref #89268.
New custom editor API proposal
Always require data for `EventEmitter.fire`
Center layout validate can be earlier than widget creation.
fixes #94724
Spell fix (#94687)
Remove redundant line
Use RemotePathService.userHome instead of EnvironmentService - #94506 Would be better to make the querybuilder async but that has a huge downstream impact
Ignore 'item already exists' keychain errors for now, fixes ##94005
Developed setting to loop search from the beginning or end of document in Find Widget (#92243)
Always prefer the extract constant refactoring with the lowest scope
Prioritize implement interface over remove unused in JS/ts
Move `editorAssociations` to own file
Move contributed custom editors into common
Webview -> Custom Editors
Move extensionPoint into common
Split out contributed custom editors values to own file
Rename webview editor to custom editor
Provide intellisense for viewtypes in custom editors setting
update public logs
Re #93332. Save state for find widget ctrl enter warning for syncing.
Dispose Emitters (fixes #89008)
Tune workspace search aria labels. Closes #94359
Coelece actions
status bar use status role
fix tests
Always quit after exporting config.json, even when it fails
Check for duplicate registered settings
space and enter support for add code/markdown buttons
fix layer breakage
#93332 Sync extension recommendations
#94599 Separate recommendations
Bump node2
Dispose Emitters (fixes #89008)
enable monaco editor in ci workflow
Ctrl+Home / Ctrl+End go to start / end of list (fixes #93922)
add windows-check for windows-path logic
fixes #94544
cleanup aria root roles
Set Electron session's proxy from user setting (fixes #94148)
use ternary search tree for uris instead of paths, fyi @bpasero, @sandy081, @roblourens, https://github.com/microsoft/vscode/issues/93368
add compareSubstring, compareSubstringIgnoreCase and adopt for search tree so that it will be fit for case-in-sensitive compare, https://github.com/microsoft/vscode/issues/93368
distro
update distro
Re #92342, accessibility provider for comments panel
Bump distro
Add explicit casts for new TS 3.9 strictness
Convert sendSequence commands into keybindings
#94599 merge into single service
#94599 simplify by reusing
use extension id not extension name
:lipstick: use publicLog2
#94599 - Move workspace tips to tips service - Simplify telemetry
bugfix  - typescript code completion doesn't recognize property modifiers when more than one exists (#94165)
re #93816. no settimeout for editor reveal.
Changes load more to loading... while loading
Add warning about long generated IPC paths, fix #86382
do not override editor width when there is no notebook width change
Use markdown for snippet.body description
re #93265
node-pty@0.10.0-beta7
Make codicons in quick pick use currentColor (refs #89533)
Ping @ 10 months
Bump distro
Consider line height when sizing the terminal vertically
Add electron to workspace tags (#93773)
Scope symbol icons (refs #89533)
adopt icons for timeoutline refs #93964
disable ci
allow compareIgnoreCase to operate on substrings, touches on https://github.com/microsoft/vscode/issues/93368
disable github CI
fixes #94594
quick access - restore view state when opening to the side (fix #94601)
#92342 use accessibility provider
#94599 clean up
#94599 fix tests
#94599 Move exe based tips to new service in shared process
#94599 Rename to IExtensionRecommendationsService
Add accessibilityProvider to remote.ts and tunnelView.ts Part of #92342
debug: alllow to resize Breakpoints section in Debug sidebar
fixes #91260
fixes #94592
Center repl input chevron
early check for strong first matches, helps with https://github.com/microsoft/vscode/issues/91807
feat add window title separator prop (#94371)
Keep sorting when label does not match (fixes #94373)
adopt URI-tst in ext host profiler
more test for uri tst, fix query, fragmen compare
List of recent editors + screen reader should not read input box placeholder
Restore focus (#93055)
debug: fix hover jumping around
debt - remove duplicated originalFSPath-implementation
#92342 use accessibiltyProvider
run web-unit-tests in chromium, webkit, and firefox
fix #94390
fix https://github.com/microsoft/vscode/issues/93859
debt - fix import layer rules
fix uri-test (do not assume URL work alike cross browser...) https://github.com/microsoft/vscode/issues/93362
fix list paging options type
update typescript-vscode-sh-plugin
add accessibility providers, https://github.com/microsoft/vscode/issues/92342
Move to "microsoft/vscode-github-triage-actions"
Localizes "in" #94240
Display future events in timeline correctly
Adds a basic accessibilityProvider #92342
Adds better menu grouping
more restrict layout debouncing
remove unused css for markdown preview https://github.com/microsoft/vscode/issues/94253
Move issueReporterUtil to platform, fixes #94505
Notebook action cleanup, add more to f1
fixes #94502
safest refs #94454
Make needs more info closer ping assignees on very stale issues Closes #94082.
refs #94507
Send ctrl+v directly to PSReadLine
Clean up some terminal ctor args/protected fields
fix #93902
Update powershell names in shell selector
fixes #94191
use uri-tst for decorations service, https://github.com/microsoft/vscode/issues/93368
make TenarySearchTree have generic key and value, implement for URI, touches on https://github.com/microsoft/vscode/issues/93368
remove unused outline navigation
#94506 separate extenson recommendations for web. - do not recommed exe and dynamic workspace recommendations in web
Contributed tasks aren't added to recent #94547
do not use envService.userHome
RuntimeExtensionsEditorAccessibilityProvider
openEditorsView: accessibilityProvider
breakpoitnsView: accessibilityProvider for list
cleanup INavigator
add userHomeSync (for #94506)
data tree: support Iterable<T>
forgot one line
remove old iterator and utils
adopt native iterators in trees
fix #93029
notification aria provider (#92342)
add Iterable.empty()
fix Iterable.filter and Iterable.map
Shift+right click should open ctx menu when copyPaste is set
Add terminal wordSeparators setting
update distro
move built-in extensions to product.json
update-grammars
Use IRemotePathService.userHome over IEnvironmentService
Revert "extensions: allow built-in extensions on different qualities (#89199)"
fixes #94464
fix https://github.com/microsoft/vscode/issues/94510
quickInput: Always show input if screen reader attached
:lipstick:
Move version to subtitle
debt - deprecate IEnvironmentService#userHome (#94506)
:up: distro
quick access - better normalize matches
debt - extract node pieces to node layer (window)
debt - remove node pieces from environment (#82598)
debt - code style :lipstick:
debt - more usage of ES6 object assign
Improve workbench.editorAssociations setting UX
Update trusted extensions flow again
Bump minimist from 1.2.2 to 1.2.3 in /build
always fetch impotant exe recommendations and report when not installed
Latest actions.
Report linux desktop-related env vars in issue reporter
Change terminal dimensions based on renderer type
Update PHP grammar, fix #88441
fix labels & comments about icon themes
Add dispose checks to env var collections
Initialize terminal switcher with all actions
Display extension version
Add Java and JavaDebug causeByExtension commands. Ref #93335.
Update text for accounts menu when no auth providers are registered, fixes #94053
Remove unneeded css, fixes #94252
Update keytar, fixes #94174
Updates terminology a bit for #94092
Patch js/ts grammars to remove special scopes for node
Update JS/TS grammars
Show extension display name in custom editor reopen with
CodeLens should be one word
debounce with cancelation
layout cache. virtualization.ipynb not working
chore: update distro
fixes #94401
Apply suggestions from code review
Handle custom editor filenamePattern for paths
Correct log to use seconds
es6 - 1 user less for the assign-util
increase version to 1.45.0
fix #85344
fix a11n for scm
list a11y provider for notebook
fix quick input typing
make workbench lists/trees require a11y provider
oneOf -> anyOf in welcome view schema
Use StableEditorScrollState to restore a relative virtical position of cursor
Added setting for opening cloned repository without prompt. #93300
check in missing yarn.lock
Git: ask to save unsaved files before stashing
[json] update service (fixes #91854)
Scroll when inserting suggestion
fixes #93755
Update contributing guideleines with Action info
Update to latest actions
Remove commas
Move to actions for feature request
fixes #93979
align formatting
fixes #93965
upgrade dependencies in build
upgrade dependencies in smoke test
fixes #94040
Expand request to ask for more content around the current viewport
fixes #93841
Show an error message when creating a custom document fails
Only allow built-in custom editor priority for built-in extensions
Add details on which fields from command are used
chore: pick new electron version for https://chromium-review.googlesource.com/c/v8/v8/+/2126907
Add registerCustomEditorProvider2
Move CustomEditorProvider back to proposed
fixes #93839
Show notification that sync has turned off instead of dialog prompt on signout, fixes #94083
fixes #93709
debug: update js-debug-nightly to "2020.3.3117" @ 2020-04-01T00:05:28.457Z
fixes #92126
Use `primitive-square` for notebook stop icon
Use more explicit parameter names
Make sure modifiers are up-to-date (fixes #94298)
Added user choice for opening the folder always.
fix #93610 (#94272)
#89962 add height if there are more than 3 rows
#93960 :lipstick:
Do not wrap on page up/down (fixes #93921)
add deprecation comment for es6-search, https://github.com/microsoft/vscode/issues/94117
#89962 Show max 3 rows
quick input - back to display:none for invisible actions (#94131)
add telemetry for https://github.com/microsoft/vscode/issues/87332
fix #93845
Label for extension viewlet changed. Disable smoke test
quick access - :lipstick: empty result labels
fix #94145
debug: use better icon for debug console
quick input - set placeholder as aria label
Improvements to 'manage trusted extensions' flow
quick access - fix regression in symbol search
handle raw cell multile line source
Check in saveAs cancellation
Expand registerCustomEditorProvider docs
Add cancellation to saveAs
Make sure restored custom editors correctly track being dirty even if they have not been activated yet
Improve terminal link handler timeout log
Further Custom editor docs updates
Expand custom editor delegate docs
fixes #94035
Re #94167.
fixes #93975
fix #93824
Add mac specific keys
quick access - match each query piece on the container, not just one (fix #94009)
Mitigation for #94174
fixes #93833
fixes #93592
Add notebook actions to command palette #94098
Use debug stop icon to stop cell execution
Remove unused icons
Adopt codicons
Use 'preferences sync' consistently, fixes #94062
fix #94046
fix https://github.com/microsoft/vscode/issues/94166
pring ename and evalue fyi @rebornix, https://github.com/microsoft/vscode/issues/93893
Debug progress do proper math for increment calc
Show initial message from progressStart
fix https://github.com/microsoft/vscode/issues/93937
fix #94147
fixes #92401
fix #94139
Only enable testplan item validator on issues with testplan item labels
Conditionally activate author verified
Actually upgrade to latest actions
fix https://github.com/microsoft/vscode/issues/93842
fixes #93827
fix #93947
Revert "sync outline view state (filter mode, sort mode, follow cursor mode) across machines, https://github.com/microsoft/vscode/issues/93332"
Upgrade to latest actions and allow repository dispatch for all query actions
quick access - only run editor symbol search when filtering happened already (for #93845)
Debug needs-more0info-closer rate limit usage
update DAP to final 1.40.0
fixes #93344
fixes #93910
fix #94019
fix #94012
product icon themes not showing
fix #94079
symbols - remove exclude support for workspace symbols quick access
fix #94010
add scm menus
fix #94018
add entry (#94054)
fix #93928
fix #93936
fix #93935
fix #94004
quick access - fix issues in standalone editor
fix #93943
Cancel custom editor open if the user closes the editor before resolve
null && undefined.
Add tracing log level to auth provider, #94005
listen to editor pane layout change instead of dom for width change.
Editor size not pickedup when scrolled into view.
Add missing 'if'
Update codicons: add "sync-ignored" (refs #93992) and set mappings for new icons
Allow custom editor provider methods to be sync
Remove `CustomDocument.viewType`
Update actions & use author-verified label for author-verified issues.
fix #93840
Update README.md
one more change... https://github.com/microsoft/vscode/issues/93831
fix https://github.com/microsoft/vscode/issues/93831
web - workaround terminal always preventing unload (#93843)
scorer - introduce normalized path
fix compile
Never show again storage keys are registered too late for syncing (fix #93817)
Enables timeline in stable Removes timeline.showView setting
hot exit - update settings description
Remove 'experimental' from custom editor setting
fix setting multiple views visibility
Remember and add skipped keys while syncing
Convert most ts-ignore-calls to ts-expect-error (#93617)
Move the custom editor api out of proposed
Revert "Issue distinct sessions per extension, remove session when extension is removed from trusted list"
remove console.log
cell bottom toolbar
temporary disable rewriteWorkspaceFileForNewLocation test
Update js/ts grammar
Revert "Revert "On file rename, use default custom editor if possible instead of always prompting""
more typescript specific rules
Add workaround for #93745
tit -> titie.
update loader
mark product icon theme as proposed API
Avoid controversial method (ref #92811)
When signing out of account, offer to turn off settings sync instead of showing account picker
fix global state syncing - do not remove if not registered - pull replaces local completely
Issue distinct sessions per extension, remove session when extension is removed from trusted list
Add warning comment to LogLevel api #85992
Revert "Remove LogLevel from proposed api, #85992"
Remove unused import to unblock build
vscode-minimist -> minimist
adopt product icon theme in extension actions & picker
update move view command
Cover case where the partial range is contained inside a piece
move views event
Remove LogLevel from proposed api, #85992
fix tests
:lipstick:
Implement cancellation for notebook cell execution
Split markdown cell template from code cell template
OSS tool
#91545  skip global state synchroniser while checking for merging
#91545 do not reuse the preview
:lipstick:
`SemanticTokensBuilder`: Add `push` overload that accepts objects and support out-of-order calls (for #93614)
fix https://github.com/microsoft/vscode/issues/93743
check if ignored extensions exists
fix bp and open editor view sizing in panel
Have `SemanticTokensBuilder.build()` return `SemanticTokens` (for #93614)
fix tests
update distro
fix wsl script
use windows DISPLAY when running code.sh client within WSL
:lipstick:
remove code-wsl.sh file
push code-wsl.sh
debt - adopt more ES6 things
Add arrow to task quick pick for back
sync outline view state (filter mode, sort mode, follow cursor mode) across machines, https://github.com/microsoft/vscode/issues/93332
Indicate dirty workspaces in recently opened (#93723)
fix #93322
No longer restore backuped folders and workspaces. For #92467
semantic styling: apply defaults only when no match
inspect hover: improve update
semanticTokenTypes schema: add super type
remove suggest range highlighter, https://github.com/microsoft/vscode/issues/91104
add jsdoc for https://github.com/microsoft/vscode/issues/90208
do not watch settings file as it is being watched already.
fix build
"Retry as sudo" claims it "failed to save" but it actually succeeded (fix #93602)
quick access - fix issue with selecting entry from help picker
window picker - indicate dirty windows
fix smoke tests
extensions - wire in proposed API enablement (for #92908)
fixes #93492
Change sign in title text based on whether there are existing sessions
Add default keybindings for stage/revert/unstage selected ranges
fix for https://github.com/microsoft/vscode/pull/92397
#89962 fix recommendation widget
Minor tweaks
#89962 handle keyboard events
#89962 Enhance extension pack representation - add count badge in extension viewlet - show extensions in details page
Revert "Add commit release override for testing"
Add commit release override for testing
Update author verified comment. Closes #93693.
Clone repo too
Temporarily use ref master while debugging author verified
Add command for author verification
Add author verified comment
Add "Author Verified" action
language specific scopes
Github auth provider - revoke token on logout
Upgrade to latest actions
quick access - fix various remaining issues: - run additional file search over original query if limit hit and multiple inputs - preserve existing highlights of symbols - reduce flicker when having fast and slow results
Revert "Use the standard github token in places where we don't need to recursively trigger automations."
Use the standard github token in places where we don't need to recursively trigger automations.
Label invalid testplan items
Replace mutationObserver with resizeObserver for monaco editor automaticLayout
Add test plan item validator
Update needs-more-info-closer.yml
Don't prompt on renaming markdown files
layout debouncing for output change.
Upgrade to latest version of actions
Focus indicator height and top update for markdown cell
Use a Set over a Map
Use a proper comment when closing
Actually add needs more info closer
Add Needs More Info Closer as an action. Disable needs more info labeler
Apply the environment in remote
Add 'manage trusted extensions' option to account quickpick, #90385
Use the right constant.
Update js/ts grammars
Enable resolveJsonModule for implicit JS/TS projects
reveal active line into view only when it is not triggered by view restore.
Add explicit wait for dom-ready in webviews
Pick up latest TypeScript@next
use private fields for webview panel
Use private fields for most webview properties
Try restoring the dirty state of backedup custom editors
Improve decoration tests
Prevent checkbox toggle (fixes #91740)
fix output bg color in sidebar
Inherit theme text colour in Settings Editor's section headings
Add role=document to root webview document (#93435)
hide output when empty
:lipstick:
Add debug logs
Remove `registerAndGetAmdImageURL` and support for it in the build scripts
Move New Release over to Actions
Run both sh and ps commands to make tests work in remote
compressed tree: add role tree item #93465
markdown editor align with code editor
scm input box: correct aria label
Add more API tests
Update locker.yml
Add api tests for env var collections
backups - ensure to discard all on shutdown without dirty (#92962)
Add todo for terminals to react to collection changes
Only persist collections marked to do so
Throttle the number of semantic token requests #92583
Add test for specific c++ grammar freeze
Revert C grammars to version from 1.43.1
terminal should not use panelService for showing
Document link handler API
Build out API docs for env var collections
fix flaky tests
Don't trigger renderer sync when no change happened
Load in persisted collections from past sessions on ext host
fixes #93532
More task ID fixing
add more logging for crash (#93224)
Implement changed diffs
Cannot read property 'pushStackElement' of null (fix #93216)
tests - pass on enable-proposed-api to server
quickPick: use listBox and option as roles
run delete test only on mac
fixes #93494
introduce feedback.open to the command palette
Allow users to make the scrollbars in the title area larger (#92720)
fix #93380 again
Revert "On file rename, use default custom editor if possible instead of always prompting"
skip this test in linux
register and clear disposables
quick access - allow to match on multiple inputs (fix #30404)
Pass focus back (fixes #93090)
Remove delay (fixes #62652)
fix disposable warnings
Cleanup (#93234)
Use new task quick pick in quick access
Workaround (fixes #93167)
web - return result from commands
quick access - still allow some actions when quick navigating
Update locker.yml
Update locker.yml
Update locker.yml
Update locker.yml
Add 'Sync: Ignored' label for extensions #90977
Update locker.yml
Update locker.yml
Update locker.yml
Update locker.yml
Update locker.yml
Update locker.yml
Temporarily make locker run faster to clear backlog
pass in initial notebook layoutInfo for cellviewmodel.
Update locker.yml
Add locker as an Action
Show account activity bar icon only when user data sync configuration is set
redundant model insertion
Add failing test
Implement removed in diff
Support diffs of collections, extracting additions
destory notebook document only when the editor input is destoried.
Apply multiple extension mutators, share code with ext host
debug: fix debug toolbar not updating when context keys were set
Keep previous partial tokens
#93469 delay loading user tasks after initialization
Edit template tags
padding for output inside webview.
Output Offset API is offset in the whole cell.
padding adjustment for output in webview
show semantic highlight notification only once
add link to semantic highlighting notification
Starting tests for env var service
Shared more properties between TextDocument and CustomDocument (#93342)
update output mimtype icon
Move TestExtensionService into common
Add tests for EnvironmentVariableCollection
Remove margin between notebook cell output and code
insert and delete index should be on the model before edit.
Pull collection into its own file
Handle persisting and invalidating of collections
notebook edit api
no cell paramater in renderer
fixes #93418
Move handling of env change event into new function
Update no non double-posting needs-version-info bot
:lipstick:
quick access - delete unused file
notebooks = use `<basename>#cell-<handle>` pattern for cell paths
web - allow to contribute navigation entries (#93467)
add semanticTokenColors to themes
#93366 use file not directory result
fix #93189
fix tests
Task quick pick improvement (#93479)
tree - also remove monaco-tree CSS references
quick access - fix action registration for commands
fs - add error code for ENOTDIR
old tree - off with it's head
quick access - more cleanup
quick open - rename file to reflect what it does
quick access - more renames towards less quick open usage
Update commands.json
fixes #93481
prevent commands from being added to shell history; fixes #91689
smoke - quickopen => quickaccess
quick access - remove actionbar contributor that is no longer needed
escape ';' when passing arguments; fixes #93166
quick access - remove parts/quickopen
fixes #93346
quick access - drop quick open action
quick access - first cut old quick open removal
enable serialized notebook inputs, implement equality check for inputs, https://github.com/microsoft/vscode/issues/93000
quick access - use fuzzy matching consistently also for tasks
Comment out debugger tests
#92990 rename
codicons - speed up stripCodicons
storage :lipstick:
storage - do not fallback to in-memory storage in renderer upon errors (fix #93428)
Return refreshed access token, fixes #91653
Removes day.js dependency; uses Intl instead
Deduplicate account name entries in account context menu
Cell.source
restrict css selector
Upgrade to v6
Further updates to needsmoreinfo bot
List out bots interacting with issues
Edit API in the core
Formatting
Run needs-version-info on edits
Notebook cell layout tweaks
Re-enable needs version info bot, but one that cleans up after itself and ignores feature requests. Ref #92958.
On file rename, use default custom editor if possible instead of always prompting
Improving snippets for custom editors
Show notification when writing to keychain fails, #92972
Add note about authentication provider id
allow contributing a web menu entry
Wrap in quotes
Fetch and set semantic tokens in the viewport
üíÑ
Ensures visible state is updated before updating
Switches to use realpath.native instead of wmic
Add notes about shells and escaping
Create a basic export action notification for bash
fixes #90974
Apply ext env changes to new terminals
#92990 update category
CompletionItemLabel: signature -> parameters
improve split sizing for dropped views in panel
#92990 Use Preferences Sync category
Fire debounced event on change
Resolve merged collection
Move single ext collection updates across
Close #93335 by adding commands for cuased by particular extensions
Remove ext commands to re-add in single commit
cbe => ext
#93332 opt in syncing storage
#93332 Adopt and enable views visibility for sync
Add "caused by extension" commands
Cell Editing API draft
Implement execution order indicator
Register settings editor prompt key to sync #93332
tests for notebook metadata
adopt remaining icons for default panel views
backup - do not throw when backup is corrupt, but make tests more verbose
quick access - strip codicons from commands (#93303)
quick access - allow to return full pick state
Send collections to renderer
Serialize collections on ext host
Start building out env var service
quick access - allow to restore an active item
Debounce update event
Implement env var collection structure
Add registerAction2 note
Add deprecated indicator to registerWorkbenchAction
Move --telemetry to bottom of troubleshooting
playwright@0.12.1
notifications - sync "do not show again" preference (#93332)
Accessibility: Mark document-like outputs with role="document" for easier screen reader navigation.
accessibilty: move aria container to belong to the workbench
inspect tokens: recompute when theme changes
debug: If a debug completion item sets a selection we need to use snippets to make sure the selection is selected
debug: configuration presentation sort polish
language in token
remove assumption that global URL works alike on all browsers
nb - handle link clicking from webview, fyi @rebornix
storage sync - adopt a few to be syced (#93332)
progress - turn window progress into silent notification progress (#93363)
web - remove "Open in Desktop"
fix tests
Add more logs to auth provider
Add view options update for list view.
Add workaround for null access test failure
Prefer spread over apply
Make sure we respect the preserveFocus option  for custom editors
EditorOption: Show active line number only when editor is focused
Update editor options for hiding the line number
Tempalte Cell if the document is empty
theme color for output background color
remove only UI language description - as more ui state syncing is supported
enable syncing - panels position and visibility - views layout
#86679 support syncing activity bar icons
Upgrade to v3 of JacksonKearl/vscode-triage-github-actions
Remove whitespace
Use codicon (fixes #93234)
Move getLineTokens into IEncodedTokens
Sets custom views to use view level progress
remove view moving setting
add reset view location commands
fix unit tests
debug: smarter scope id computation so expansion state is more preserved. Also if all collapsed, expand first non expensive scope
commands - show alias only if it differs
add icon for search view
web - enable the remote status indicator
adopt custom view icon
fixes #93306
add markers icon to view
fix tests
fix imports
add sync tests
enable comments panel move
add tests
fix typo (#93291)
enable panel contribution
Pass terminal method through to ext host terminal service
Add proposed API
resources: use with in comparison key
repair debug console theming
handle storage keys in merge
use `path.win32.*` and `fsPath` when dealing with file-uris on windows, https://github.com/microsoft/vscode/issues/90208
Update src/vs/workbench/browser/parts/activitybar/activitybarPart.ts
fix compilation
#92516 move sync cli category
use sync store from settings if provided
fix test failure
fix warnings in tests
fix merging
Call it `joinPath`, add tests, don't reuse the implemention from resources.ts, https://github.com/microsoft/vscode/issues/90208
Simplify encoding / decoding code
viewsWelcomeContribution: remove proposed API check
Use subarrays if the platform is little endian
update merge strategy
Use little endian encoding for uint32 in semantic tokens dto
quick access - cleanup API for quick input
fixes #92333
Add tests to encode/decode SemanticTokensDto
quick access - properly wire up disposables
quick access - fix comparing via picker
quick access - support to auto activate LAST
tests - fix smoketests for new quick open impl
argv help :lipstick:
refs #92786 allow terminal move
remove unused import
refs #92786 allow repl move
Cell Runnable
remove unused import
markers views should request background color
refs #92786
honor document default cell editable metadata
fixes #93114
#93038
Event Dispatcher
notebook metadata sync between ext and main
Add extra guard for accessing property
Closes #92421 - view level progress
Removes dead code
Adds settings and webview panel to Schemas
Hook custom editors up to backup restorer (#92629)
Update custom editor api
Remove unused type
Change fix to avoid changing the API of the history
Simplifies timeline paging options
Remove .vs-dark selector from theme collector https://github.com/microsoft/vscode/commit/789416f4a7f5fa42acbeb9d4df9907255d1d0f80#commitcomment-37996419
quick access :lipstick:
bring back executeNotebookActiveCell
Scaffold viewport semantic tokens
quick access - more tweaks on value set
quick access - some bugfixes and improved value selection
remove cyclic dependency
quick access - make modifiers support in anything picker more discoverable
quick access - keep track of viewstate in anything picker
Minor renames
quick access - some cleanup in symbols support
Use GitHub app for VSO, closes #92675
Use fs to read github auth config file
quick access - enable by default
Allow to type <filename>#<symbol> to see a list of symbols of that file (fix #90246)
Adopt codicons (reduce usage of registerAndGetAmdImageURL)
fixes #93221
fixes #93223
Adopt codicon for wrapping commands
window menu - add separator for switching windows
Remove reference from disposed TextModel when keeping undo-redo elements
Prompt when closing a file with a large undo-redo stack
Update C++ grammar
notebook - comment out code to unblock build
Restore previous behavior of cmd+shift+F triggering a search with the selected text, except not when a result has been removed by the user For #91901
try basic collapse in panel fixes #93040
quick access - fix missing pieces to properly enable for selfhosting
Add context key for pencil/save button, handle changing menu buttons properly
Make cell metadata non-optional
Remove MenuItemActions to simplify action registration code
Remove activeCell concept
Add cell run state to the cell viewmodel, and make NotebookEditor in charge of updating it
layoutinfo on view models
missing getter may crash the view
cell metadata
layout info for code cell
Separate Code and Markdown View Model
WebView width fix (#93085)
diffReview: do not automatically hide when original or modified editor is focused
Editor no tab title area does not update (fix #93111)
update preview snippets schema
quick access - restore support for using last typed value when opening again
quick access - adjust line number visibility as needed
allow dragging viewlet header
Add account context menu, #90385
fixes #93039
#86678 Enhance back up views - Show individual resources
Add heapSize()
node-debug@1.44.3
quick access - for now remove search.quickOpen.workspaceSymbolsFilter
quick access - align more with current solution
sync status bar hidden entries
Diff review: set selection on the modifed content as we navigate through diffs
quick access - fix some issues
sync global storage using registered sync storage keys
- Introduce storage key sync registry service - Register pinned viewlets state key
diffReveiw: more verbose aria label for header
don't assume that there is a progress bar
list: do not set aria-selected for listbox roles
accessibility: list role for lists, listbox for suggestWidget
quick access - allow to open in background for local symbols and go to line too
Refactors timeline to work better w/ multi sources
fix bad argument processor
quick access - clean up
editable metadata
update jsdoc
revert scrollable element overflow.
Allow multiple api acquire
Avoid computing undo edits if not necessary
messages channel between ext and webview for outputs
debug progress: use 500ms delay
Contributions for notebook cell toolbar
fix build
debug: report source of progress
add completion item kinds for Issue and User, https://github.com/microsoft/vscode/issues/91541
quick access - more fixes for quick navigate
Handle state double encoding in Microsoft auth provider
updated DAP to latest
quick access - fix quick navigate to not record any keyMods
diffReview: read line count at the end
diff view: go to next, go to previosu should also work when focus is not in editor
#86678 fix tests
#86678 Add snippets sync tests
#86678 add merge tests
#86678 Implement syncing snippets
#86678 define snippets home property in env service
remove transition as it lags on low spec dev
add min max height for zone widgets, fixes https://github.com/microsoft/vscode/issues/92974
quick access - fix config related lookup regression
quick access - add a setting to enable new quick access
fixes #92849
debug progress proper increment computation
debug: respect progress update event
fix copy-paste errors with inserting markdown cells
quick access - reduce constant config lookup
quick access - add a setting to control symbols filter (#52773, #86761)
finalize API for FileSystemError#code, https://github.com/microsoft/vscode/issues/90517
quick access - keep viewstate to restore up to date when quick open is not closing on focus lost
tests - disable terminal integration tests for web
fix compilation
- stop synchronising if disabled - use file opertion error
quick access - fix broken refresh in anything picker
quick access - allow relative path matches even if excluded
test - disable another flaky terminal test (#92826)
Keep selected item when typing line numbers (fix #86215)
prevent forbidden flicker
invert feedback
Add progress bar
Remove gear icon
Add Run button to notebook cells
fix flicker
insertNotebookCell is async
Use constants for webview margin
more left padding for notebook cells
fix link support in markdown output
cell indicator sizing
active indicator covers both cell and output in webview
find widget go previous/next keybindings.
avoid editor widgets cut by overflow hidden.
use codicon for notebook find widget
Update Codicons: add account icon
HTML implementation for #88424
Take HTML implementation out
Disable allowMnemonics on mac
Store closed edit stack elements as ArrayBuffer to reduce memory usage
debug progress minor issue fix
Cmd + Shift + F2 for renaming
Comment out tests for now
progress: show silent notifications in status bar
Re-enable Actions
debug: show progress via notifications
progress service: support silent progress
revert simple find widget change
remove find controller reveal change
remove markdown sanity check change
:lipstick:
:lipstick:
create new cell should be stateless
update DAP progress comments
#86678 Prepare for syncing snippets - Get conflicts resources from syncronisers - adjust conflicts handling methods to take conflicts resources - fix back up local data before accepting incoming changes
fixes #92857
fix build
Drag and Drop for Global Awareness (#92299)
quick access - reduce flicker for slow&fast provioders (fix #92853)
debug: only show the cancel if the progress event is cancelable
quick access - picker tests
move ICompositeCodeEditor to editor-layer
Reduce memory usage
quick access - include history still when not searching
quick access  - clean up actions for anything picker
debug viewlet show progress
quick access - use proper token for cancellation
Compress consecutive edits in undo stack
web - assume a light theme by default for background color
dialog - use title caps
quick access - wrap up anything provider
web - disable some flaky integration tests (#92826)
:up: distro
quick access - encapsulate cache state
TextModel and CellTextMode. Separate dirty state from text model.
Check in rebuilt file
Move web playground code into its own extension (#92672)
initial support (#92681)
Persist cell data when delete cell content.
Reveal range after editor is initialized.
revert viewlines change..
Rename
Maintain version id across model disposing
Adopt codicons in feedback widget and update link color (ref #86708)
Remove IValidatedEditOperation.lines
Adopt codicons in comment reactions widget
debug: expose onDidProgressStart and onDidProgressEvent
Use container height for markdown cell, consider separate MarkdownViewModel and CodeViewModel
scrollTop should never be negative
new version of the references viewlet
Reduce usage of IValidatedEditOperation.lines
Adopt codicons in simple find widget (ref #86708)
update distro
Split into lines manually
Adopt codicons in call hierarchy (ref #86708)
debug: update js-debug-nightly to "2020.3.1617" @ 2020-03-17T00:07:50.32Z
Tasks without command are added to instances Part of #92792
fixes #92863
fixes #92860
Listen on window (fixes #64149)
quick access - handle caches as before
debug: show more: align to center
quick access - keep highlights from symbols untouched
tests - need to set --enable-proposed-api=vscode.git for integration tests
storage service does not exist on server. do not return machine id on server.
quick access - restore matching as it was before for editor history entries
quick access - first cut of symbols in anything access
callstack: further polish to element height
quick access - first cut history results in open anything
Debug: Improve Call Stack UI/UX
open editors - move CSS rule where it belongs
Remove ITextChange
Add TextChange
Add more tests
quick access - first cut open anything
Use latest TS next to build VS Code
Update JS/TS grammars
Add cancellation parameter to custom editor resolve methods
Handle when a file is renamed to an extension that is supported by a custom editor
Remove handleMovedFileInOpenedFileEditors
progress bar for find and replace
Undo/Redo for cell manipulation
#92812 Temp fix
replace first cut
progress - remove options
Bump minimist from 1.2.0 to 1.2.2 in /build
Updates view progress proposal - #92421
Bump acorn from 6.3.0 to 6.4.1 in /extensions/markdown-language-features (#92742)
Bump acorn from 5.7.1 to 5.7.4 (#92711)
move cell padding height to constants
toolbar height
move output height calculation internal
Properly no-op Actions
NPE check find
fixes #92719
fixes #69768
allowMenubarMnemonics -> allowMnemonics
improve message
semanticTokensApplied only when tokens are added
Show semantic token help
quick access - only switch to provider from help if it is not the default one
quick access - remove quick open from standalone editor and use quick access instead :rocket:
quick access - drop default handler
quick input - fix integration tests
gotoSymbolAccess => gotoSymbolQuickAccess
quick access - fix monaco editor treeshaking
- rename gallery machined it to service machine id - extract getting service machine id
quick access - some cleanup
quick access - apply configured excludes to symbols
quick access - enable support to open in background
quick access - always show relative path in symbol picker (fix #76661)
quick access - "open to side" button for symbols
quick access - first cut workspace symbols
quick access - allow symbol container matches
quick access - load file symbols after registry is ready (fix #70607)
quick access - render deprecated as strikethrough
quick access - wrap up goto symbol
quick access - introduce and reuse editor navigation base type
fix tests
Temporarily revert to GitHub Apps due to Actions account being frozen.
remove workarounds for missing themeServices in tests
fix missing IThemeService in tests
[theme] store themeSemanticHighlighting and update after load
Scroll cell into view major update:
list view resize: anchored element will keep its visual position
remove settings sync service
Find & Replace Widget
Add experimental moveCustomTextEditor hook
Hook up isReadonly for custom editor input
Working on handling custom editor move
Note how exceptions from code action commands are handled
Revert to old bot for find-duplicates.
[themes] opt-in to semanticHighlighting
Update TS versions
Add delay to link provider hovers for widgets
Remove .only
ICellViewModel only visible to contrib
ICellViewModel
Only close correct widgets
fix #92261
debug: update js-debug-nightly to "2020.3.1117" @ 2020-03-12T00:05:48.77Z
callstack deemphasized separators should not be so high
update state and editing mode when focus to the container
cell state instead of isEditing boolean
cursor movement first cut
Add unit test for link handler
enable web extension only in web
Remove PromiseLike from TerminalLinkHandler
Don't register emitters in this PR
Move prop to top of TerminalService
Extend DisposableStore
Move prop to top of class
Remove logs
[web] Welcome views: links trigger unload (fix #92633) (#92635)
quick access - first cut goto symbols
Add --use-host-proxy (microsoft/vscode-remote-release#2487)
editor token inspect: resolve scopes like the sem highlight code
[css] update ls-service (for #92417)
Respect capabilities.supportsClipboardContext
web - log info when unload is triggered
web - move extension code into web-playground folder
compare untitled files: title (fix #92556)
Don't highlight URI diagram  comment as javascript
Mark fields readonly
Use unique resource for custom editor working copy
Add onCustomEditor to documented activation events
Extract undo/redo
Make sure we localize the default label
Extract sine types for custom editors
Implement terminal link handler API
Add alt actions to some toolbar items
Add a toolbar with some basic actions
:lipstick:
Switch webview api back to use delegate model
find in markdown content
do not allow attach editor without model
update typescript-vscode-sh-plugin
Add version request to feature request template
Adopt action-powered commands, needs-version-info, and copycat
Drop todo
do not disabled web extensions by kind yet
test for web extensions enablement
autoRename -> onTypeRename
Improve scm icon alignment in list
Use the UndoRedoService for CustomEditors (#92408)
DAP: add "clipboard" context value for "evaluate" request
Maintain undo stack across text model disposal / creation
Update Codicons: add 'run-all' icon
Add commands to convert cell to markdown/code
Add option+enter and shift+enter commands
Add ctrl+enter to execute cell and go to next
#85619 revert
#40233 Introduce resource identity service - Service that provides an id for a given resource - Use for workspace folder identifier
Supports view progress in merged header & panel
experimental progress support for DAP
test notebook editor
set selection for cell
reveal search result in center in markdown cell
consolidate reveal range/line
Clean up
fixup! more pr comments
Failure test cases
fixes #92333
fix #91701
move role application to workbench.ts
set role application on the window
fix #92489
fixes #92381
Action bar: escape should not lose focus
refactor file service based configuration
Welcome views: add comment for translators to not translate the word "command"
#92038 Remove unused code
debug: watch always offer copy value
quick access - allow to search by command alias but not show it
quick access - commands with MRU history and keybindings
Update copycat.yml
Create copycat.yml
quick access - basic commands picker
commands - ensure alias and label are the same
quick access - gotoLine => gotoLineQuickAccess
Alert input box messages anytime shown
Uses view-level progress
fix accept local action
fixes #92333
Up to date
Added new setting editor.comments.includeEmptyLines for feature request raised in #88480 with a new suite of tests based off original.
Introduce SyncResource - Remove resourceKey and SyncSource and merge with SyncResource
don't use isEqual for now
Revert "fix resources#isEqual"
classify constant properties (for #92469)
:lipstick: let -> const
debugSession: more precise errors
minimise changes
editors - untitled with associated resource do not emit dirty change properly
minimize changes
add tooltip add toggled icon and tooltip adopt above changes
quick access - editors picker to have an action to close editors and indicate dirty state
quick access - switch to handler automatically from help when typing prefix to preserve todays behaviour
quick access - tweak aria labels
quick input - add an option `buttonsAlwaysVisible` to always show buttons for an item
fix resources#isEqual
adopt CellUri
:lipstick:
Add StringSHA1
quick access - use correct icon for terminal kill
quick access - allow to configure launch config from picker
quick access - terminals
Removes menu.command from registerAction2
Add a default value to FileSystemError#code #90517
Closes #92421 - view-level progress api
Update IEditableData.validationMessage return type
Add providerId array to authentication namespace
fix #92387
Mark arrays readonly
Show better symbolKinds for workspace symbols
Added proper test case for empty strings, input false, output true
event once for cell editor opening
Changed configuration for where the setting will be placed for includeEmptyLines. Also added a test that doesn't work - to be fixed.
Renames option for a bit more clarity
Adds tests
Removes getInstantiated* methods
Removes code duplication Consolidates ViewProgressIndicator into CompositeProgressIndicator
Closes #92135 - Adds view-level progress indicator
Clean up
Clean up
Clean up API and add stopPattern
Tests for synced regions
Make sure semi-automatic mode is working correctly
Tweak how mirrored ranges are kept in sync
Tmp cmd + f2 to rename
Rough implementation
tmp
Cleanup and implement HTML live region
Scaffold on type rename
Add .npmrc file association as ini-file
fixup! pr comments
add CellUri-util but don't use it yet
create cell uri on the extension host, expose as `NotebookCell#uri`
first reveal a cell, then check for its editor
propagate ext terminal errrors; fixes #92380
add Iterable.filter and use it
explorer: deemphasize items which should be excluded but are shown since they are open
quick access - add tasks picker
debug: show errros from scopes request
quick access - introduce a base PickerQuickAccessProvider helper to simplify all existing pickers
[theme] reload only when extension added
quick access - debug picker
quickInputList properly use AccessibilityProvider
remove ICompositeCodeEditor#activate
debug: skip start debugging test
Debug: make sure to open json settings when openning global configurations
fix #92334
quick access - extensions picker
fix outDir to enable tsc-selfhosting, https://github.com/microsoft/vscode/issues/91503
expose `joinPaths` as proposed API, https://github.com/microsoft/vscode/issues/90208
debug integration: make sure to clear out session on retry
use editor action, some polish
icon theme switches back to default on start
quick access - add a reusable quickPickItemScorerAccessor
web - guard against creating workbench more than once
reuse telemetry constants (#92099)
scroll line into view
Improving documentation on webviews
Add a `revert` method for custom editors
document INotebookEditor.
Add telemetry for trusted domains
fix tests
remove unused typings
abstract notebook editor layout info
feat: enable appcenter support (#92295)
Preserve focus on custom editor rename
Move version check into provideCompletionItems
Multiple Views Per Panel V0 (#92294)
:lipstick:
reveal line into view center
Validate monospace assumptions
Allow using Command in StatusBarItem (#92046)
update #91296 allow multiple workspace roots (#92082)
Added completion entry for @ts-expect-error directive (#92093)
Add scope parameter to getSessions, fixes #91571
Update auth provider ids in API documentation
track newly created view cell in notebookviewmodel
Added new configuration comments.includeEmptyLines for feature request raised #88480.
Explorer should show hidden files and their path if they are opened
Implement toggle aware icons and labels in command actions
reveal function call
#92038 Move output view from get*Actions to use menus
quick access - move quick open scorer to a more generic place
Only stringify array context values
active find match
Set flags for filtering before filtering (fixes #92277)
dispose view model properly
quick access - implement editors picker
Clear font info when displays are added, removed or changed
fix cycling dependency, more rich cell-options
use `overrideOpenEditor` to open a cell-uri as notebook editor, use NotebookEditorOptions to reveal/focus a cell
product icon theme update fix
workbench theme service polish
range decorations should check for code editor explicitly
add icon registry
quick access - placeholder & contextkey support
PR review
fix double model issue
views: aria header label compute from title
Missing layout call (fixes #92250)
fix #92237
fix test
use view focus context key
tests - stop using import export
fix css import
Give default tasks value for configuration (#92084)
tests - add test remote path service
quick access - prepare for merge to master
Welcome views show to often in custom views
Saying "command is" in the keyboard shortcuts list is inefficient
Opener service: do not throw since there is a chance that the commandService will actually activate the extension.
quick access - implement view handler
Add keybindings to change number of context lines Close #92172
Add command to open search editor to side Closes #92025
:lipstick:
#92038 move from get*Actions to menu actions
PR review
quick access - implement "Go to Line"
quick access - allow provide to return disposable and cancel token properly
quick access - improved help grouping
update labels
quick input - allow to set aria-label
quick access - contribute help for standalone and workbench separately
quick access :lipstick:
quick access help bugixes
quick access - implement help provider
quick access - test coverage
quick access - operate on picker from providers
Add command for deleting a block of results. Closes #92169.
Test editor
reveal cell into view.
Converts back to using MenuRegistry for commands
Stringifies non-intrinsic config in context keys
Allows menus to override some command props
Adds timeline filter context menu
use uuid instead of handle as decoration prefix
fix width issue with custom dialogs
lazy decoration for cells.
better folder organization
#92038 Move tree view away from get*Actions and use menus
move viewlet & panel registry into views service
Expose functions under authentication namespace instead of providers array, #88309
Workaround fix #92170. Ideally we'd fix by tracking if the match region was totally removed on every change operation, but that seems costly.
Remove callback for protocol registration
Fies #44465: Clear leftoverVisibleColumns at file edges
disable remote backup view only
disable sync backup views
reuse code
move sync views to sync viewlet
Sync local backup view
Implement getAllRefs and resolveContent for backup store
introduce authority for sync resources
fine tune titles
show refresh and collapse all actions
show time of sync as label
- show resolved content on click - action to show full content
compare with local action
separate getting remote content and preview content
separate tree view and custom view
set data provide on tree visibility
FIrst cut - sync history view
node-debug@1.44.2; fixes #75932
Add warning for using horizontalScrolling setting #92151
Clean up disconnection dialog/notification code (fixes #82315)
use proper fs errors
jsonValidation takes an array for fileMatch
fix unused type
product icons more
jsonValidation takes an array for fileMatch
list: only aria-selected on selected items
add search for pre-es6 util
rename debug start to debug welcome
quick access - very basic first help entries
debug: rename welcome view to just run
Add error code getter to FileSystemError #90517
quick omni => quick access
Revert "Only write config file during postinstall if process env variables are present (#91793)"
fix tests
quick omni - very basic first registry
Run smoke test as part of product build (#92145)
:lipstick:
EditorService#activeTextEditorControl knows about composite code editor
quick input - lift workbench specific parts up
npe
Add TS formatter settings
Extract toSymbolInformation
Limit number of pulled in workspace symbols
save & restore all editor view states
product icons themes, first
extract themeFileWatcher & ThemeConfiguration
Pick up new TS nightly for building VS Code
üíÑ
Allow issue reporter to work on built-in extensions (#92040)
store view states for cells
Use codicons in scm
debug: add js-debug-companion as a built-in extension
Update distro ID
Focus terminal after 'Terminal:Clear' command palette action (#92076)
Add .yml syntax hilighting. Closes #92027.
Add more support for exported imports in tree shaking
Update distro ID
lists should use list role. Tree should use tree role
debug: reanable tests. Use 2 retries
debug: increase disconnect timeout from 500 to 1000 ms
unblock the build
quick pick - support standalone editor (+ support indentation picker) (#92086)
Better support for shorthand property assignment in the treeshaker
fixes #91924
set aria-selected on focused and selected list items
quickinput - lazy create into host
Change how recently used tasks are stored so that a real task can be generated from the data stored. This enables us to fetch recently used tasks before all providers run. Part of #90087
latest ref viewlet, https://github.com/microsoft/vscode/issues/92072
fixes #89658
update extension dependency, https://github.com/microsoft/vscode/issues/92073
Tweak doc and remove unused option
Reduce noise in diff and use files with the same absolute imports when troubleshooting treeshaking
Improve troubleshooting treeshaking failures
debt - remove unused strings#overlap
use IDimension from dom consistently
fix some monaco ESM task
[folding] decoration for hidden ranges
improve names
Disambiguation tab folder hint is using wrong slash ".\" in WSL (fix #92030)
Prompt user to report issue after single fatal error on insiders
#85619 Enable following - getting all refs - resolving content for a ref - deleting a resource
Update webview
Add copyright to css file
Update npm scripts explorer to use codicons (ref #90911)
Update Codicons: remove `bell-progress` and map `wrench` and `wrench-subaction`
Add cancellation on CustomEditor.save
menu actions is always defined
Use Iterable
disposables
Convert to async
Use customtexteditor for markdown editor
Assert that we have a valid model when trying to undo/redo instead of silently nooping
Don't send custom editor edit events to extension host for non-editable custom editors
Move onDispose method onto webview
Remove unused activeCustomEditor method
üíÑ
Don't create extra EditorModels for webview editors
Don't track parent
Use editorInputs instead of editors
üíÑ
Move find state tracking into webview overlay
Use more explicit names for webview types
Use native .values()
Remove extra null checks
no glob pattern pre parsing
fix glob pattern matching on windows
unit tests for diffing
tests for mimetype ordering
fixes #89574
add settings sync tests
debug: update js-debug-nightly to "2020.3.317" @ 2019-11-13T04:47:26.71Z
two more layer break
layer check
nativeTitleBarPart => titleBarPart
fixes #90788
experiments: rename to action2 for new experiments
line decorations for first and last line
[folding] decoration for hidden ranges
show the version of running extension
adopt list API changes
list: improve aria-selected to be set on each selected element. Set aria-multiselectable when mutli selct is supported
quick pick - add quick pick service to platform and register for standalone editor
fix https://github.com/microsoft/vscode/issues/91180
fixes #89472
quickpick - remove dependency to editor group service
quick pick - introduce quickInputTitle.background color
Reduce usage of onDidRegisterExtensions
fix #91427
timeline contrinbtuion: do not call localize on localized strings. Aslo use fixes string for localization keys
quick pick - push down picker foreground/background colors
#91923 Add icon and version to runtime extensions editor
prep for https://github.com/microsoft/vscode/issues/91427
Initialisation state and token should not be shared across sessions
quickpick - use layout service from platform
es6 - remove Proxy placeholder declaration
workaround tree shaker issue
expose extensionUri, https://github.com/microsoft/vscode/issues/90208
Use Run as prefix for some commands
Rename Show Debug command to Show Run and Debug
move `joinPaths` to URI (static factory function), option 2 in  https://github.com/microsoft/vscode/issues/90208
move `removeAccents` to normalization
improve fileMatch descriptions for exclusion patterns
quickpick - extract legacy pieces into LegacyQuickInputQuickOpenController
es6 - less custom Iterator use
#91603 Create list resource navigator
#91603 Allign list and tree methods and events
quickpick - first cut platform quick input service
quickpick - move Themable to platform
fix layer breaker
esNext - add ES2017.String to supported libs since it is supported everywhere
Editors: revisit IEditorPane extends IPanel (fix #91945)
follow up title part changes (#91938)
more typings error after adopting const enum
Refactoring version picker
Display more information in the TS version status bar item
:lipstick:
fix cell editing
no unverified commit
experiments: allow triggering experiments on the fly, generic commands
Work around #86382
NotebookViewModel and tests
node-debug@1.44.1
Adds Open Timeline command to explorer files Adds follow/unfollow actions to the timeline view Reworks timeline view commands
debug: update js-debug-nightly to "2020.3.217" @ 2020-03-03T01:06:02.88Z
update path fixes #87092
debt - modernize uuid and remove unused stuff
Add/Delete cell with right model update.
fixes #91922
unit test to ensure encoding of markdown uris is correct, https://github.com/microsoft/vscode/issues/90855
Reveal multiple cursors if they all fit in the viewport (#6995)
When generating markdown, then only decode domURIs, https://github.com/microsoft/vscode/issues/90855
Update grammars
editors - IResourceEditor => IResourceEditorInputType
debt - less explicit any
extract theme configuration
views: No priroity, keep views sorted in the order they got registered
es6 - use String#padStart and String#endsWith
Adopt edit setting option in settings editor
#89512 support edit setting
no composite code editor knowledge in EditorService (but still in CodeEditorService)
fixes #91417
generalize themeStores, rename to themeRegistry
fix import alias to same thing
adopt API changes in notebook land
editors - some JSDoc :lipstick:
treeshaker should keep [Symbol.iterator]-members because there are implict references from for-of loops
editors - include editor in name for inputs to make things clear
fix https://github.com/microsoft/vscode/issues/91852
Workbench editor renames (#91943)
es6 - replace some usages of values/keys utils with destructuring
es6 - replace custom LinkedList#iterator with Symbol.iterator
es6 - add real iterator to LinkedList
fix https://github.com/microsoft/vscode/issues/91937
sort by category only once, #91900
debt - fold electron environment and native environment into one
Rework management of custom editor custom models
Add explicit wait on protocol registration
[Search Editor] Align results from the same file
Type registerAndInstantiateContribution
Remove extra overload for createInstance
More scoped try/catch
Remove unreachable code path
Use standard for/of loop
Use es6 version of methods
scroll webview container instead of scrolling the content inside.
ITheme -> IColorTheme
IIconTheme -> IFileIconTheme
Only write config file during postinstall if process env variables are present (#91793)
only when row height is not set, we can check item dom node height
Try using a private field in Disposable
fixes #81630
refs #81360
Mark markdown comment folding regions as comments
TODO for display order
update picked item in quick pick
Update code cell mimetype picker rendering
Revert "make sure unnotarized build is published even if notarization fails"
update mimetype renderer
Allow menu bar mnemonics in the terminal (setting)
List Output resize flashing.
update distro
Rename isEdgeOrIE to isEdge
Remove browser.isIE
types :lipstick:
debt - some :lipstick: * add a few more readonly to properties * move IVisibleEditor closer to IEditor * remove options accessor from IEditor
add Iterable-utils (completing Iterator-utils) and adopt in bulk edit preview, https://github.com/microsoft/vscode/issues/90676
Remove notice since promise-polyfill was removed
add es6 deprecation messages to some utils, remove duplicated utils, https://github.com/microsoft/vscode/issues/90676
:lipstick:
remove polyfill promise
Ok -> OK
fix monaco build failure
remove more files from typings for which we have lib.*.d.ts files
Simplify synchronizers. Add more tests.
rename keybindings label to Keyboard Shortcuts
Add DocumentSemanticTokensProvider.onDidChangeSemanticTokens
nuke special lib options and use compiler option's lib instead
working copy - enforce that there can only be one working copy per resource
working copy - backup() is not optional anymore
search editor - register disposable
adopt inline compile config for editor src task
debt - push down more native only environment properties
debt - move native pieces of window config into node layer
Improve documentation
Only add content widget when setting non-hidden state #90653
Rename CSS smoke test to language features: For #90538
editors - add and adopt IEditorService#isOpen(resource) for fast lookups of opened editors
labels - handle file service changes better (fix #91833)
editors - deduplicate editors on saveAll, revertAll
editors - drop boolean result from revert()
contextkey - add web to statically defined ones
Changes limit to take a cursor object ‚Äî #91722
Notifications: Updating message recreates notification (drops progress bar) (fix #50931)
progress - reuse status entry if it exists
debt - less explicit any
fix tests (#91859)
Limits schemes for Git timeline provider
allow git amend message only
Reduce scrolling position updates
Build VS Code with TS 3.9-nightly
Reset settings sync token on 401, fixes #91653 (#91726)
support picking renderers for the same mimetype
Pick up TS 3.8.3
Using private fields for more in extHostWebviews
resolves #91431
suggest: fix handling around long lines
[typescript-language-features] Add importModuleSpecifierEnding preference (#90405)
add renderer extension folder to webview allowed resource list
skip failing test
candidate shrinking dropdown
Update distro
fix compile issues
tests - more coverage for text file editors
1.44.0
Introduce false & true context keys (#85058)
tests - add more tests for uncovered areas
deps: vscode-sqlite3@4.0.10
fix: fallback to ia32
fix: address further review comments
fix: address review comments
build: read npm_config_arch whilst getting electron
build: add skeletal gulp targets for Windows on Arm
build: build ia32 remote extension for Windows on Arm
Improvements to context keys
Distinguish context key factory from type
fix compile errors
make sure unnotarized build is published even if notarization fails
Make sure that C: is C:\ in simple file picker (#91746)
debt - reduce usage of explicit any
Regression: Quickly closing a git commit message in VS code skips autosave, causing a (fix #91709) (#91732)
not test folder in core anymore
update update element height callers
Find Widget typings
Improve docs for `CodeAction.disabled`
Clairify documentation docs
Don't require return value  backup
debug: update js-debug-nightly to "2020.2.2617" @ 2020-02-27T01:06:21.78Z
Log additional information when getting auth token
Apply suggestions from code review
remove from cmd palette fixes #91423
smoke - remove firefox from docs
improve documentation for debug hover API; fxes #91404
notifications - handle markdown links in status bar
notifications - revised progress indication for hidden notifications (fix #91469)
continuation of #91442
More tweaks to options (fixes #91368)
Avoid having quotes inside quotes (for #91368)
consolidate debug test instructions
fix #91672
Support Link Titles with single quotes in Welcome Views (fix #91442)
tests - exit CLI process when renderer crashes or is unresponsive instead of bringing up a dialog
text files - trace dispose() calls
refine wording for settings doc,  #62571
fix #91665
fixes #90934
Show OK by default for multi-select (fixes #90365)
Improved documentation of 'title' property on OpenDialogOptions and SaveDialogOptions (#91633)
dispose quick pick
fixes #91466
Two icons for representing notification progress are confusing (fix #91469)
fixes #91471
update docs for #91242
fix global storage change events for deletes ( #91582)
fixes #91462, fixes #91465
fixes #91070
fixes #91062
fixes #91367
FIx #89786
improve feedback for composite excess area
Update Codicons: add bell-progress (ref #91469)
Only add new separator when SyncSettingAction is present
only set drop target background for valid tgt
Flip result/file counts.
refs #91630
fixes #91630
Add rerun action and icon. Close #91508.
Remove TS 3.7 protocol workaround
Use constant
Improving documentation for custom editors
fixes #91620
accessToken -> getAccessToken, fixes #91570
fixes #91622
Lowercase auth provider ids, fixes #91538
no isrendering
Update distro
#91556 Add telemetry to auto sync trigger sources
#91584 convert to lower case
#91544 revert label change
fixes #91483
debug: update js-debug-nightly to "2020.2.2517" @ 2020-02-26T01:05:44.117Z
fixes #91423
improve view moving command flow fixes #91422
Better encapsulation of CustomDocument
rename custom editor activation event
extensions development - fix broken extension-development-confirm-save support
Use better parameter name for webview panels
Use ?.
Use checkbox option on auth dialog, fixes #91542
fixes #91421
Sign out -> Sign Out, fixes #91577
Add notification on sign out, fixes #91481
Update list view item height.
:up: distro
isRendering is not needed if we push everything to next frame
we don't need dynamic height change anymore
#91575 updated account picker
Bandaid for task not running after detection is canceled
Add the "stop detecting" task quick pick changes back in Revert "Revert commits for task quick pick changes. This fixes #90474"
Use thenable instead of promise, fixes #91549
fix #91402
range returned from extension API is off by one; fix #91406
Revert "docs for #91532"
public is default
fix #91536
list view update height refactoring
use CodeAction#title as bulk edit label option, #91369
fixes #91322
debug session: use queue to make sure output messages get processed in correct order
update DAP to final version
node-debug@1.43.2
fixes #91426
#91544 Change label
#91545 update labels
Alerts are too verbose when problems panel is open. Do not use aria-live
notifications - change close icon to chevron (fix #91446)
smoke - do not restore windows
Clarify StateDelta usage
automation: refactor web tests not to use outPath
docs for #91532
fixes #90478
smoke - use tree kill also here
Adding already disposed disposable to DisposableStore in textFileEditorModel.ts (fix #91396)
Notification: X button shows up if progress is collapsed (fix #91414)
Notification bell with badge and "no notifications" hover (fix #91444)
no scroll height update hack
container dom node
remove unused list hack
Update element height
pluralization support to re close #89463
find widget attempt
cell layout
Always dispatch to keybinding service when in chord mode in terminal
Remove unused opener service
Use a customEditors context key that lists custom editors
Move 'reopen with' to end of context menu
Add separator for sync setting
fileSearch: removed unused `size` and redundant `basename` fields from `IRawFileMatch`
Rename custom editor contribution point
Polishing of custom editor api proposal for 1.43 release
Add command to clean search editor state
fix search view 'Toggle Search Detail' padding
Change the casing of dockerFile to dockerfile (microsoft/vscode-remote-release#2422)
test - fix smoketest for web running out of sources
debug: update js-debug-nightly to "2020.2.2507" @ 2020-02-25T15:24:10.260Z
fix json validation validation
editors - improve closeAll action to ignore save/revert result and rather check for dirty state
editors - fix issue with revert not closing editors if opened multiple times
remove leftovers
file search: include workspace folder in filter
Localizes timeline strings
add keyboard ability to move focused view
Run OSS tool for v1.43
Adds timeline.excludeSources setting Allows the filtering of timeline sources from the Timeline view
Enables timeline view for insiders & stable The timeline.showView setting is on by default for insiders
Make sure we set the correct replacement range for dot member completions
debug: update js-debug-nightly to "2020.2.2117" @ 2020-02-22T01:07:51.383Z
Add extra guard on restarting TS server on fatal crash
Auto restart TS Server on watch options change
Lots of timeline related changes, below
additional drag feedback
refs #86309
Add selectAllSearchEditorMatches command
fix transformed output rendering for nteract.
Add go to nex/prev result for search editor
Update auth page branding
Add support for other vscode environments for github auth
spacing around the editor
fixes #86309
disposables
regex obj is statefull ;(
update distro
Tokenization.
US spelling, grammar
update DAP
node-debug@1.43.1
Add LinePart.metadata (for #91178)
let -> const
#90068 adopt to reval near top
#90068 Adopt to revealPositionNearTop
Add padding above hover for second line
Easy pick codelenses with keyboard shortcut
fix tests
untitled - fix description not showing invalid paths
Cleanup open-url handling (#91234)
turn on sync preview confirmation
[html] update dependencies
[css] update dependencies
make sync is on command simple
Just call Turn on Sync
add store property to product configuration
Schema update (microsoft/vscode-remote-release#1045)
Schema update (microsoft/vscode-remote-release#46)
Losing "Recently Opened" quickopen entries (fix #89257)
Add passive false to touch events
Editor icon does not change when changing from plain text (fix #91205)
remove unused code
untitled - proper dirty reporting even when not resolved
Support members with dots in their name
Move gulp specific code to gulpfile.editor.js
Switch to run on Linux because it is faster
view dnd improvements
Add command to rerun search editor query
Take search editor out of preview. Closes #23931. Closes #16488.
New iteration of webview editor API proposal
resizeobserver does not include padding.
Improve the discoverability of column selection
Tentatively fix #90962 by requiring `enter`
Always prompt when splitting a workspace stack element
Remove TextModel.createFromString
Avoid using TextModel.createFromString
Cross-file undo/redo
First cut at supporting undo across files
Relax method signature
Allow EOL changes to be mergeable with other edits
Scaffold MultiEditStackElement
snap launcher: avoid exporting XDG_CACHE_HOME
snap launcher: fix quoting in script
some padding for output
Mimetype picker first cut.
No additional event triggering for crud from core.
Focus editor when creating new cells
untitled - fix title for labels (#89921)
:lipstick:
fix #90218
#90218 Handle local errors
start view: use preconditions for button enablement
welcome view: add internal precondition
fix error handling in tests
Show account identity instead of activity
fix env in postinstall
welcome views: telemetry events for buttons
List items should have role 'listitem'
tweaks to message
Notifications: indicate progress notification if hidden in notification center (fix #90274)
show names of formatting edits and code actions providers when they block save. also add links that links that open the settings editor for each feature, #90851
show the name of the formatter that's running long, #90851
refactor build
update jsonc-parser
debug start language: store the value of the context key per workspace storage
notifications - progress prevents close (#90274)
debug start label
debug start view: debugStartLanguage context key
Explore replacing notification count with alternate icon (fix #91130)
untitled - prevent slash as description only
:lipstick: wording
Config to limit/disable the new Untitled tab auto-naming (fix #90378)
Debug groups: only return if the end event does not have additional output in it
remove commented type
editors - remove ugly cast
make sure view cells are disposed
tests - reduce code duplication
tests - add test for out of workspace watchers
improve backup - retain atleast 10 entries - do not fail when writing to backup fails
[json] update dependencies
Remove slow task provider warning (#90081)
Revert commits for task quick pick changes. This fixes #90474
add sync entries to file -> preferences menu
fix updating last sync time
debt - have Dto and UriDto
don't drop functions (for now)
extract Serialized<T> util
donot delete all even if they are old enough. Retain atleast last  10 backups.
electron - allow to configure color profile for #88491
editors - move editor view state when detecting file move operation
Pick up TS 3.8.2
Use deprecation service to report usage of vscode-resource uris
fixes #89688
drag and drop visual feedback
Updating cell state when destorying it is not good
activate extension by notebook view type
Change to Sync this Extension
hide console log
Adopt the UndoRedo service in the editor
Pass the IUndoRedoService to the TextModel
remove unwanted code
Handle no github auth config
Focus still not working actually.
Also don't show "Sync this setting" for sync.ignoredExtensions
update last sync time only when all sync areas synced
:lipstick:
use UserDataSyncError while triggering error
edit ignored settings always in json
fixes #89767
we still need input checkbox
fix file saving
fix cyclic imports
typings for notebook settings.
fixes #91014
Add GitHub authentication provider extension, closes #90384
empty line
emit wheel events
document why domFocus in notebook is different from normal list
more list
move more notebook list logic out
Let extensions prepopulate the issue reporter title and description (#91039)
adopt scrollable element event
will scroll event for scrollable element
safely detach editor from container dom
markdown renderer support marked options.
Error can be null/undefined.
fixes #90277
revert markdown change
adding reset view location command
fix #91084
editors - add test for handling move/deletes
fileTracker => textFileTracker
Added a password attribute to input variable of type "promptString".
Removes redundant flags from tsconfig (#91050)
editors - handle moved editors centrally (for #86599)
debug: debug console group support
update distro
Enable Drag and Drop for views (#90917)
install resolver: fix for enable
Inform user when 'npm.autoDetect' is off.
update typescript semantic highlighting
move auth token service from user data sync
#91078 back up only disabled or marketplace extensions
#91078 Enable back up for extensions and global state
wire notebook editor restore logic but keep it disabled due to notebook issues
#90239 use disable insteadof enable
editors - track out of workspace watchers in editor service
editors - move code that closes editors on file deletes to editor service to support all editors
Avoid TextModel constructor in tests
context - add a comment for defaults in resource context key
Remove old argument
adopt new loader, fixes https://github.com/microsoft/vscode/issues/90484
debug.console.historySuggestions
use NearTopIfOutsideViewport for outline and symbol navigation, #90068
Add `NearTopIfOutsideViewport` and whats needed for that, #90068
[ts] enumMember missing in token legend
fix #90894
finalize `WorkspaceEditEntryMetadata`-API, #77728
Relative path menu entry not available on splitted window pane (fix #90885)
 rename WorkspaceEditMetadata to WorkspaceEditEntryMetadata #77728
working copy - introduce and adopt a way to participate in file operations
Change -> Undo no longer marks document non-dirty (fix #90973)
No webview workarounds.
Emit wheel event when there is no scrolling in the webview.
remove webview change.
ignore empty splice events.
size/offset trackers for individual output
Update Codicons: bell-dot, debug alt, run
Add sign in/sign out commands from Microsoft auth provider, fixes #90988
Only create one menu per context value per group
progress - remove fallback to statusbar for now when notification closed
Make initial debug / run view extensible
emplty explorer: use proper action on mac
recommend resolver extension
improve getRemoteName signature
cli: new window when  --remote is used without paths
add remoteExtensionTips
forward active (nested) editor event from composite code editors, make activeTextEditorWidget return the active composite editor
:lipstick:
don't check for composite code editor in commands handler
#89367 check for version compatibility
add telemetry
text files - :lipstick: names
Emit change events from the configuration service (microsoft/monaco-editor#1833)
forward list events as editor change events
command handler honor composite code editor
Exposed Open/Save dialog title on public VSCode Proposed API (#90493)
fixes #90940
use ICompositeCodeEditor instead IEditorNavigation
Add test for #90973
Relax IIdentifiedSingleEditOperation.range
working copy file - add getDirty() method with support for directories
explorer - no need to revert before using working copy file service
untitled - align event names with files
debt - simplify updateDocumentEdited
DAP: support selection on debug completion items
git: contribute Clone to explorer
text file - getAll() => models
:lipstick:
fix welcome view focus
move stuff around
Update src/vs/workbench/contrib/files/browser/explorerViewlet.ts
git: easy case for git init
rewrite
adopt welcome content in explorer
do not check for enablement when resetting local
adopt workbench changes
IClipboardService is no longer an optional service in the standalone editor
shift
Move BrowserClipboardService to /platform/ so it can be reused in the standalone editor
remove unused function
finalize debug hover API; fixes #89084
improve doc for debug hover API
Support `scmResourceState` in `when` clauses
also support single icon, not just ThemeIcon and {light, dark}-tuples, #77728
Add typings for `semanticHighlighting.enabled` (microsoft/monaco-editor#1833)
unused import
fixes #90893
text files - stricter rules - load() should never be called directly but through service - save and saveAs should return true result - model manager gets to know model even before resolved
files - make sure to wire in model listener if already exists
Define IIdentifiedSingleEditOperation.range as IRange instead of Range
Avoid any
debt - reduce explicit any
üå©static height code cell with relayout.
editors - :lipstick: resource
registerAction2
Add 'set as default' option to open with
Show more clear TS Version picker when reinstalling a different TS version locally
No unused args.
Cell insertion/deletion in notebook editor list view.
notebook cell update with renderer updates.
Diff for cells and outputs in exthost.
Scaffold IUndoRedoService
experiments: add ability to hide versions with old schema
Propogate login error, fixes #89518
Refresh auth tokens when server returns 401, fixes #89629
Enable strict mode for VS Code core
Address feedback for reset editor.lineNumbers after disabling zen mode
experiments: add conditions for user settings and activation events (#90715)
add clarification to view id description
limit view ids globally
text files - remove some now unused methods
fixes #90446
add IEditorNavigation, remove custom ICodeEditorService because that doesn't work...
Dropping a folder onto the editor should open a new tab (macOS) instead of a new window. (fix #90767)
too many conditions
debug: update js-debug-nightly to "2020.2.1417" @ 2020-02-15T01:06:09.07Z
fixes #90705
debt - any should really not explicitly be used?!
files - only emit onDidCreate after promise is stored in map
debug use 500 timeout for terminate (same as for disconnect)
files - support decoration of deleted and readonly
files - implement isReadonly on model if provided
lower notarization timeout
fixes #90871
editors - getResource => resource
update comment in DAP
Files: moving 2 dirty files does not report both as dirty (fix #90888)
Don't use rootPath in built-in extension. For #90562
fix git tests
added 'group' attribute to DAP output event
fix tests
add ICell#uri and expose INotebook#viewType
towards code navigation...
check for scheme when parsing cell-uri
text files - renaming should preserve mode if new mode is unspecified
workspace edit - also test moving and applying changes to dirty file
working copy file - test correlationId in events
files - rename events to follow conventions
working copy - expose file IO operations for participation (#84672)
#90076 add more tests
fix standalone editor compilation
Attempt to fix debug test failures
#90076 - Adopt to new v1 URLs - Add end to ened sync tests
update distro
#90076 move config service to common
#90076 move in mem fs provider to platform
Avoid using Map.keys()
Display Order first cut.
üíÑ
No latex handler in core.
extract code cell updates
Update notebook cells
Add a ClipboardService to the StandaloneDiffEditor
Update README.md (#90787)
authority is not case sensitive.
:up: distro
fix hygiene
JSON Language Server 1.2.3
add CellContentProvider, more injection
use registerAction2-todo
Autodetect csh script as shellscript
debug: make session shutdown private
do not restart the attach to extension host launch config
always launch code with `--no-sandbox`
remove ViewPane.actionRunner
add ICellDto, use UriComponents
fixes #90814
Have the IModelDecorationsChangedEvent contain affectsMinimap and affectsOverviewRuler to avoid repainting if not necessary
adopt LinkedText in notifications
fix tests
Emit a tokens change event only if there are changed tokens
move LinkedText to common
Treat .envrc files as Shell scripts
Improve rendering for minimap blocks
Improve warning check
Add click & drag on the minimap when it has the full editor height
Remove assumption about the height ratio being the pixel ratio
Do not stretch minimap lines so much in very small cases
linked text: class
Don't render minimap slider if it cannot be dragged
text files - move save error handler into files model manager
remove git init action from top of scm
Add minimap.mode: "contain"
notifications - change event names to follow conventions
views welcome: check for proposed api flag
notifications - use disposable for handle
views: empty -> welcome
notifications - show progress in status bar when notification is closed (part of #90274)
rename empty view contents to view welcome
debt - use progress service for progress notifications
types - reduce type duplication
progress - remove unused CSS rules
electron - configure to disable LayoutNG (workaround for #88873)
Text save participants are overwritten for each extension host (fixes #90359)
Properly reset editor.lineNumbers after disabling zen mode
Close monaco editor tokens hover with escape key
Disable webview copy test on web
handler -> notebookEditor
No ambiguous naming.
public by default
Errorless
Move notebookActions to separate module.
Refactoring: IoC.
smartSelect fix
Add reopen with to editor title menu
Remove extra cast
Don't show reference code lens for both class and ctor in es5 classes
nteract renderer
output chagne event
Add workaround for preferences editor strict function error
Tweaks for rendering the minimap with few lines and entire document
Only enable webview copy tests on MacOS
Enhances timeline - commands, timestamp, etc
Adds paging support (wip)
Also switch getActiveWebviewBasedWebview to use optional chaining
Replace withWebview with optional chaining usage
Enable select all in iframe based webviews
Add type annotations
Add test for copying text from webview
update distro
Add tests for minimap entireDocument computation
minor lint
fix stupid commit
debug hover fix margins
Switch to getRelativeTop
Revert "Add explorerView check to see if element is visible"
Log lines
panel width
remove default view positions from cache
debug: update js-debug-nightly to "2020.2.1117" @ 2020-02-14T01:05:56.75Z
Clean up minimap sampling logic
Remove terminal smoke test
Create an echo shell integration test
only allow forceRendererAccessibility flag on linux
fix https://github.com/microsoft/vscode/issues/90697
linux: automatically set force-renderer-accessibility when user sets editor.accessibilitySupport
Move more minimap layout to EditorLayoutInfoComputer
Revert "linux: automatically set force-renderer-accessibility when user sets editor.accessibilitySupport"
linux: automatically set force-renderer-accessibility when user sets editor.accessibilitySupport
Adjust minimap width based on effective font scale
don't work too much unneccesarily...
Introduce evaluatable expression API; fixes #89084
debug: fix some css when view moved to napel
Center lines vertically
test: saveAll before asserting a certain save event
more verbose integration test failures
debug: remove BaseDebugViewPane
Render narrow characters for larger font scales
remove custom d.ts-files, update tsconfig-files, fix new compile errors
fixes #90660
fixes #90632 (#90675)
web - allow to provide commands as workbench construction options
better error message #89658
sort categories with uncheck items atop, https://github.com/microsoft/vscode/issues/90664
text files - add tests for save from within participant
:up: playwright@0.11.0 (#90663)
debt - do not ignore dirty when invoking save participants
text files - rewrite save to use async-await :crossed_fingers:
fixes #90620
Remove unused action
Properly await setting the active settings sync account, fixes #90636
Update preload scripts for notebook renderer
Cover case when rendering entire document and there are few lines
Move typings to common.
Extract sampling computation to a separate class
Add slider color options
Add explorerView check to see if element is visible
list view set row height option
Allow list view not set row height
Update debug icon, make play bigger
allow platform common tests use bas/parts/common
update css for debug viewlet
Read and honor entireDocument
Add entireDocument minimap option
open editors: fix css to work in panel
set flag on open editors view to move
remove unnecessary listeners for built-in views
async - versionId => taskId
async - make save sequentializer a reusable thing
timeline is movable
git missing docs
command: workbench.extensions.search
Investigate to cancel a running save participant when saving again (#90590)
fixes #90593
improve git empty view docs
Recreate sampling incrementally
git: more empty view documentation
notifications - add "Focus Notification Toast" to command palette if toast visible
empty view: placeholder when
integration - mention how to debug
better explorer aria label #90446
scm: use empty views
Reduce diff
Deliver events only if sampled lines are affected
some :lipstick: to prep for https://github.com/microsoft/vscode/issues/90359
test: don't assert in event handler
re-enable active editor test for electron-runner, https://github.com/microsoft/vscode/issues/90470
Adjust sampled lines with model events
:up: distro
:up: distro
integration - prevent excessive gulp usage
empty views: link API to registry to view pane container
Leave a gap at the end when scrolling beyond last line
docs integration test scripts
:lipstick:
Integration tests: terminal throws exceptions (fix #90046)
fix #90515
openEditorsView: enable to move between containers
debug: only count sessions which do not have parent sessions
web - fix warnings
fixes #90478
Web API: registerCommand() (fix #90569)
untitled - fix tests
Option to disable setting language of untitled file on paste (fix #90492)
Nteract renderers.
Remove 'rootPath' reference #90562
Update distro
xterm@4.5.0-beta.4
Use non-deprecated version of registerTasksProvider
Update debug icon with exploration version
Don't allow parameter hint controls to shrink to smaller than the content size
:lipstick:
Adopt terminal link provider api
Move the ext host logs path to a common location And don't hardcode the exthost.log file name
eslint code-no-unexternalized-strings
Remove suggest status bar box-shadow
contributed output renderer first cut
fixes #90545
Refactoring and latex support.
rename commentsPanel.ts
migrate comment panel to use view container
opener - do not open blank windows for non-http(s) links
web - open in desktop should use opener service
debug: always set environment variables per-process in integrated terminal
debug: update js-debug-nightly to "2020.2.1017" @ 2020-02-12T01:06:27.1Z
Remove experimentalRefreshOnResume
fixes #90177
wip: empty view api
:lipstick: application link docs
windows - run integration tests against firefox (#90522)
tests - shutdown gracefully to enable webview tests (#90508)
add (skipped) tests for https://github.com/microsoft/vscode/issues/90515
electron - properly await on exit
electron - destroy() windows before calling app.exit()
build - address some issues - run local and remote integration tests separately - enable playwright on Linux with -no-sandbox trick
fixes #90478
web - document "open in desktop" better
Web - add "Open in Desktop" feature and new web API
CancellationToken#onCancellationRequested is a once-event by definition, helps with #81574
more strictFunctions #81574
Handle file errors when finding ports
Revert "strict function types: zip"
adopt editor padding in repository pane
strict function types: zip
strict function types: scm
strict function types: list service
strict function types: legacy tree
strict function types: trees
untitled - remove unused event
untitled - only suggest valid file names
untitled - do not set mode when pasting anywhere outside line 1, column 1
Inconsistency between unsaved file dialog and unsaved workspace dialog (fix #90455)
Rneder search editor label as soon as possible.
Remove unused
Persist match highlights on modify->reload
Remove 'only' whoops.
Move things around to maybe not have distro merge conflict
First cut at minimap sampling lines
Skip hokeyapp stage. #90491.
fix: add entitlement to allow dyld env variables in child processes
Move code action documentation contribution point to come from metadata
More strict function fixes
Marking that documents/workspaces arrays cannot be mutated
Skip flakey debugging test
update default setting
Flaky test: active editor not always correct... (#90470)
run and debug views can move refs #90468
debug: update js-debug-nightly to "2020.2.517" @ 2020-02-11T01:06:42.083Z
do not touch path if sourceReference > 0
smoke - headless option is troublesome
smoke - move quick open tests into search
tests - document and enable debug mode for integration tests
refs #81574
wip: extract documentation ext point
remove service dependency
build - linux cannot run playwright in docker containers, so disable it
disable test for web (#90359)
build - remove smoke tests from product builds
remove WIP
Open Editors: "Close All Editors" does not close all editors (fix #90456)
tests - skip another flaky one for web
untitled - some cleanup and polish
centered view layout: boundary sashes
untitled - do not update model with initial value if existing
Make Terminal.exitStatus stable API
update-distro
ux tweaks: only have show more / less when there is a good chance of details, #39441
fix build
wip: repository pane empty view
node-debug@1.43
EditorPart: propagate boundary sashes
grid: boundary sashes
Revert "scm: comment out suggest contribution"
skip flaky test (#90440)
Introduce a MinimapModel
untitled - rewrite to work on models and not inputs
grid: generalize boundary sashes
add asExtensionUri to Extension as well, #90208
skip webview tests (#88415)
skip terminal test (#90437)
debug: reanable integration tests (use new node debugger)
Introduce and adopt EditorTheme
more strict functions #81574
use weaker-event definition for cancellation token, #81574
update distro
fix windows build
:lipstick:
remove smoke test from windows
more strictFunctions #81574
some strict function fixes, #81574
Inherit from BaseTextEditor. Closes #90326 Closes #90325
Use editor mementos for view state saving
fix $90348
migrate sync conf only when sync is configured
unblock build
Web: extension recommendations are not working (fix #90421)
Also show "accept conflicts" buttons for keybindings
Add "accept local" and "accept remote" buttons to setting conflict notification
Add new action to close side bar (#90404)
strictFunctionTypes fixes in search land #81574
Bump vscode-ripgrep in remote/ too
Adding casts for creation of generic workbench trees with strict function types
More strict function types fixes
Bump vscode-ripgrep
update markdown-it-front-matter version (#90122)
Don't use innerHtml to build menus (#90270)
Finalize CodeAction.disabled
#90218 create user data sync error for invalid local content
fix #90145
Remove workaround for #42251 since it no longer reproduces (fixes microsoft/monaco-editor#1794)
fixes #90296
Attempt to move to scoped context keys (#90267)
Change default of renderWhitespace setting to 'selection', fixes #90386
Migrate Terminal Panel to ViewPane (#90252)
improve logging
:lipstick:
handle deleting sync files
allow running sync always
:lipstick:
link -> target for #11847
Check in generated file
tests - try to fix playwright on linux in GH CI
Changes DocumentSelector to scheme and hooks it up
Docs typo: missing ` in insertSpaces
move link to open platform
Adopt ElementSizeObserver in the diff editor (microsoft/monaco-editor#1266)
add opener and theme services to ViewPane
link styles
debug: rename viewlet and top menu bar to Run
:up: distro
buttons in empty views
:up: distro
tests - proper text fixtures dir
button should handle different title
Update distro
add createLink function
tweak wording #89416
Skip instead of disable
Add minimum and maximum values
Improve unit test name
support logging storage in shared process
Use global extension enablement service directly
Add browser unit tests to product build (#90353)
render LinkedText on empty view content
log as info when there are no changes
fix #89416
test - skip only on windows
more linked text tests
rename
Web: run integration tests as part of our product builds (fix #83923)
debt - careful with proxy, use type PropertyKey and not string
Polish for slow task detection
debt - fix some action alias names to match (#90350)
add jsdoc for #77728
fix macos notarization
untitled - move input and model closer to service
integration - disable debug tests
untitled - add tests for new setValue() method
untitled - add a method to set the value without making document dirty
untitled - provide access to models from service
update typescript-language-features
inspect tokens: remove separator
better tm scope for typeParameter
token types: remove super type for built-in types
update typescript-vscode-sh-plugin
simplify user data sync service
move common logic to abstract synchronizer
Align keybindings sync with settings
Improve conflicts handling when local content changes
- do not block sync if there are conflicts in one area - allow confilicts in multiple areas
- move telemetry logging to abstract synchroniser - improve logging
Disable flaky integration test
clarify ipc messages
Improve more promise usage
Allow configuring TS Server watch options through VS Code
Update TS 3.8.1-rc
Naming
Update old types in IEditorOptions
Add link to run search again when empty #89474
Don't import from node in extensions for URL and TextEncoder
json editor
svg
application/javascript
Add polling for reconnect to auth extension
Factor top padding into find widget zone heights
Remove unneeded de-dup code from account extension
update scroll handler
remove script tag check in webview
Remove initial dimension update
Set authStatus to unavailable when unable to refresh token, #89200
Add padding test case to lines layout
Implement top and bottom padding
Add padding option to editor
doc update for typings
setter/getter for dynamic height
add back order to custom view container fixes #90232
üíÑ
üíÑ
add tests for viewdescriptorservice event sequence refs #89686
Move external terminal test to node
Move terminal tests to common and browser
fixes #89472
also add a note about electron unit test runner
update test readme
test - fix help output for integration too
Show specific task provider progress and allow providers to be canceled (#90236)
fixes #89566
debug polish task terminated message
fix debug test
test - make integration tests arguments
Dont show status bar mode picker if there's no declared mode support. Ref #89482. (#90183)
semantic styling readonly variables & add enumMember, event
token types super types
get rid of TokenClassification
tests - browser tests to go through new log service
add help printing
Breakpoints allow to move to different sources on update
debug: when opening in editor ingore query, so different sessions open same source
hygiene - exlcude test/**/out/** files
show strike through for deletes, #89504
fixes #89709
debug: only call `setExceptionBreakpoints` as specified in dap protocol
explorer: register decorations provider only once rendered
test - remove unsupported options, fix bad file warning
debug integration tests reenable
support --run argument as before, #90063
use arrow for renames, #89504
test - convert web integration to TS
Move coverage.js into test/unit
Move assert.js into test/unit
skip webkit tests on linux
Move css.mock to unit/node
Move more files to test/unit
Replace usage of express
Modernize test/browser.js
#90218 Error handling
debug: only focus back the editor if hover had focus
debt - remove out-dated or accepted todos
disable start debugging integration test
Explorer do not open the focused element in the editor if there is currently no file opened
statusBarItem.prominentForeground not used
@types/debug required by playwright
tests - add wip integration test runner for browser
fix #90199
Move test/all.js to test/unit/node/all.js
tests - add a UI folder for manual UI tests
tests - move readme around
test - share playwright for tests
update test script
Use mtkz for whitespace parts that define a width
build
fail when browser fails
tests - run browser unit tests in default window
tests - have a test/unit folder
update region comment
Rename vs-whitespace to mtkw
d'oh
cleanup darwin product build
tweak entitlements
Check in yarn.lock
untitled - mode-switch only for line 1, col 1
workaround #90162
smoke - exclude a few more tests for web
Instructions for files.defaultLanguage new option is confusing (fix #90187)
Use Action2 instead of editor Command #89348
Add result count line. Closes #89463. And fixup grammar to correctly highlight it
Remove version gating on for now enableProjectDiagnostics
Remove unused
Auth providers - show dialog on token access, closes #89754
debug: update js-debug-nightly to "2020.2.408" @ 2020-02-06T01:05:43.207Z
Add experimental setting to use separate server to compute project level diagnostics
Take server arguments object
Marking arrays as readonly
Remove VS Code project file change watchers
Converting remaining webview commands to use Action2
Code refactoring
Add retries to token refresh for network errors of account extension
Cell renderer with right disposals
Improve types & avoid callbacks when rendering the editor
semantic theming: add TokenSelector
Replace timeout interval with MutationObserver for monaco editor AutoLayout
Move QuickInput to base layer (#69955)
CellViewModel
Move QuickInput to base layer (#69955)
move markdown cell renderer out
build
event listener for statefull markdown
build
oh
build
:lipstick:
build
Clarify language when creating new git branch
Properly reference the vscode.proposed.d.ts typings from the account extension
debug: automatically focus a child session if parent session is focused
fix #90116 for search editor too
resource.relativePath fix for windows (for #90063)
#90150 Handle server errors gracefully and do not turn off sync aggressively.
add browser tests to continous builds
script
fix
fix
fix
browser-test: exit(1) when test failed
yaml
find widget aria labels: add commas
yaml
test codesign hardened
Use first lines with content to do special cases
Untitled - run mode detection to detect modes from first line upon paste (fix #90147)
add asExtensionUri-api proposal
pfs - delete writeFileStreamAndFlush code which is not used anymore
Typo Unauthroized
Use outer loop to goDown in special case
Have the tests green
Use assertIndentGuides for new tests
Tweak tests to use a tabSize that makes sense
Simple file dialog missing drive letter on windows local (fix #90116)
Change tests to assert active indent guides explicitly
shared process - register channels when IPC ready
debug intregration tests: use debug.startDebugging
debug: reanable integration tests
shared process - add separate whenIpcReady
find widget accessibility improvments based on feedback
fix compilo
Rename option to `scrollPredominantAxis`
untitled - ensure paths are absolute (#90116)
don't push undo stops for format on save, #90100
fix tests
suggest - populate suggest status bar with toolbars from menu, use special action rendering
Grammar fix for `task.autoDetect` description (#90117)
#89348 use registerAction2
update ESRPClient
workspaces service :lipstick:
more tweaks for explorer decoration (#90077)
clean up imports
fix #89813
Adds uncommitted changes to timeline
Updates list of readonly git commands
Use split models for header and contents
Pull Search Editor files into new `contrib/` entry
#90112 Turn off sync when this server error happen
Prefer action2 to command
Mark inputs as readonly arrays
Use for/of and prefer mutating expr over using concat
Remove extra null checking
Add bottom margin to comment thread buttons, fixes https://github.com/microsoft/vscode-pull-request-github/issues/886
Treat any non-whitespace character as jsdoc param names
Improve promise usage in some of terminal/browser
docs: fix package.json field name
Improve promise usage in browser/terminalActions
Improve promise usage in terminal/electron-browser
Clean up promise usage in terminal/node
Move to async await in browser/terminalService
Change getDefaultShellAndArgs to use promises
Change requestAvailableShells to use promises
Update outdated display illustration
Remove browser/terminalNativeService
Remove editor Command usage in terminal
Add minimap.background color and honour it and its opacity
temporarily disable start debuggin test since it is flaky
:lipstick: comment
use viewsservice over panelservice
Revert "upgrade ESRPClient"
debug: fix integration tests
#89665
readd search.location as deprecated
Explorer: decorate files of type "unknown"
fixes #88065
simple file dialog - add files to recently opened (#89994)
debug: do not massage whitespace anymore
upgrade ESRPClient
Cannot use RegExp.lastIndex to -1 because it will not find any matches afterwards on Safari (#90063)
fixes #89815
print manual debug instructions when test fail
Files - deal with dangling symbolic links (fix #90075)
add "manual" test mode
move most API tests to browser-layer
remove unused file
use real instantiation service, express dependencies
activate git before smoke tests
Allow N instances of the same task (#89872)
#90020 util function to get visible view context key
#90020 Use IViewsService in markers view
adopt to new multiplex channel
Rename reveal type to match its behavior more
fixes #89059
Simplify logic for VerticalRevealType.Definition
Always show insert-highlight, #89413
Use _sanitizeCwd instead
perf: prevent update service from running before first window open
Don't allow addtional properties in tasks runOptions
debug: move ansi handling to electron/browser
debug: minor refactoring when sending breakpoints
update assert.js-copy
browser tests support reporter-options
debug integration tests: remove flaky part of test that requires window focus
:lipstick:
vscode.workspace.fs.readDirectory() ignores broken symlinks. (fix #90031)
vscode.workspace.fs.readDirectory() reports symlinks to sockets incorrectly. (fix #90032)
build leftover
build leftover
layers check - make sure to test editor contrib as well
Do not expose TextEditorRevealType.AtDefinition in the API yet
add --debug option to run not headless
better glob to catch all tests for browser and common
more git smoke test fixes
Introduce and adopt ITextEditorOptions.selectionRevealType
debug integration tests: make sure to focus editor before toggleBreakpoint
fix compilation
make sure git is activated before integration tests run
#89610 use locaContent and remoteContent instead of hasLocalChanged and hasRemoteChanged
fix path test that reflects on its own name
print browser when printing fails
move tests to /node/ or make them not use node globals
what the f
don't use Buffer in common/utils.ts
support --browser flag
improper deepStrictEqual implementation
maybe
files - move window.openFilesInNewWindow setting over
tests - lift a few into browser/common
:up: distro
Add cursor position check to jsDocCompletionTest
:lipstick:
Adding assertEditorContents helper function and fixing jsdoc completion tests
Adding some basic tests for auto insert of await on completions
Don't require strict prefix matches for private field completions
Adding more pinning tests for JS/TS completions
Add basic JS/TS replace/insert completions
Run many of the JS/TS completion tests in both insert and replace completion mode
Add basic insert mode tests
Build TS extension against current vscode.d.ts directly
Remove extra cast
Improving docs for providedCodeActionKinds
Remove surveyor code
resolves #89723 fyi @sandy081 @isidorn
Add telemetry event for settings sync auth
Update distro
chore: update to electron 7 (#89260)
Improve unicode wording
Terminal unicode 11 support
:facepalm:
git tests: windows is pain
Move onto non-deprecated marker API
xterm-addon-search@0.4.0
xterm-addon-webgl@0.5.0
xterm@4.4.0
fix git smoketests
Adopt content size event from monaco editor.
Don't include dom typings in extensions (#89942)
debt - move tests to correct layers
editor monaco.d.ts API tweaks
editor.semanticHighlighting is not an editor instance option
Add types for MonacoEnvironment (microsoft/monaco-editor#1795)
Tweak API shape to better reflect call style
remove enum-based MenuId
debug: update js-debug-nightly to "2020.1.43263" @ 2020-02-04T17:02:18.597Z
Web - run smoke tests using playwright (#89918)
move git smoke tests to integration tests
debug integrations tests: better testing of starting of debug
fix foldBackground description
remode debug smoke tests
debt - use "correct" context key for focused view
debug: introduce intregration tests
run tests in parallel, tweak presentation
better (disabled) one-by-one loading of files
use playwright for unit tests
Allow both : an . as time separators in tsc problem pattern
Use originalFSPath in terminal
smoke test - add attribute for tabs to simplify lookup
smoketest - use element ID for status item selectors
fix tests
add proper git dev dependencies
#89993 use composite's instantiation service
Just use `leftoverVisibleColumns` for having the cursor always go to the end of line
fix build
add git to windows integration tests
Add min and max to devcontainer.json forwardedPorts values
add git tests launch config
add git to integration tests
simplify integration script
Register mkdtemp command
setup git integration tests
fix git tests
#89993 Enhance views service - register viewlets and panels for containers - events when view visibility has changed - small refactorings
Adopt API changes
also publish legacy codesign
Move CSS participant to the correct place
use UriComponents for SCMRawResource
ipc: prevent npe on non-router calls by waiting for clients
Web: allow to open a file into a new window (fix #89989)
Use sorting to avoid N^2
history - preserve selections (fix #89699)
:up: graceful-fs@4.2.3 (related #89887)
history - add logging for #89257
Add Untitled-x to the title attribute of Untitled files (fix #89921)
untitled - use first line limit properly
text editors - increase test coverage
text files - remove strange setDirty(false) calls
text models - reduce need for isResolved()
debt - careful with dispose() and assignments
files input - change to model specific listeners
text input - push more code down for reuse
fix #89948
working copy - support initial working copies
debt - drop labels#setEditor()
Properly apply aria-label to editors (fix #89621)
update distro
Rename Session to AuthenticationSession
add unit tests for view descriptor service refs #89686
Redefine performanceData
Uri.file for cross os.
Pick up typescript@next for insiders
Add support for rendering jsdoc inline `@link` tags
Remove extra not null checks
Filter out duplicate extension search flags
Make folding icons foldable
Renamed 'mouseOpensDefinitionInPeek' to 'definitionLinkOpensInPeek'
Keep process info when forwarding candidate port
:up: distro
ipc: multicast events
make MenuId dynamic
use Action2 for MeasureExtHostLatencyAction
no conflicts for now...
fix #89596
Update grammars
CSS smoketest fix for high DPI on Windows
fix #89780
document IPC broadcast
improve IPC broadcast lifecycle
fix #89499
remove the timeout
fix #75861 (#89908)
fix lint errors
Run smoke tests against actual build (#83799)
Smoke-Test: Hot-exit / dataloss tests broken (#89905)
Developed setting 'mouseOpensDefinitionInPeek' which controls whether the mouse click opens element definition in the peek widget.
Doc consistency
Update comment.
Expose authentication provider registartion/unregistration as single event, fixes #89806
Rename session displayName to accountName, closes #89807
:lipstick:
bump version to 1.43.0
debug: update js-debug-nightly to "2020.1.41823" @ 2020-01-31T01:06:32.567Z
IPC: getBroadcastChannel
Minor tweaks to jsdoc
fixes #89773
only check for conflicts, not changes. #89776
add some lint rules that enforce our api-guidelines
#89769 Remove word configure
fixes #89717
[html] fix semantic selection test
fix tests
Esacpe a markdown cell should exit preview mode
Update vscode-codicons commitHash on cgmanifest
improved semanticTokenStyleDefaults sample
rename to semanticTokenStyleDefaults.scope
rename to semanticTokenTypes, semanticTokenModifiers & semanticTokenStyleDefaults
Update html/css services
make sure last sync content and remote content are same
Focus cell
Close search editor references widget on new search (#89641)
debug: update js-debug-nightly to "2020.1.40384" @ 2020-01-30T01:07:11.09Z
fixes #89373
do not let uncollapsible node collapse
fixes #89567
Allow trailing comma (microsoft/vscode-remote-release#2231)
microsoft/vscode-remote-release/issues/2245 add isBuiltinExtension context
Handle case where minimap is on and viewport wrapping is overrun by a long line which forces scrolling (#89571)
fix(tokenClassificationExtensionPoint): some typos
Revert "No additional properties (fixes microsoft/vscode-remote-release#2222)"
Allow workspace file and user tasks to be configured as build and test tasks
fix #89697
FIx #89486
fix #89674
Add 'Tasks:' category to 'Open Workspace Tasks'
remove unused command
fix #89654
improve inspect token hover
fixes #89580
Allows for js and ts specific refactoring pages
Skip failing tests
Mark TextDocumentContentChangeEvent properties readonly
fixes #89579
Remove no longer required parameter
Remove console log
Remove unused function
Deals with #89553 for now
Temporarily fix #89406 until #89267 is resolved.
fixes #89488
debug: update js-debug-nightly to "2020.1.38943" @ 2020-01-29T01:07:02.427Z
Re-enable tokens store tests
Begin token refresh sooner, #88577
don't update overrides if not provided
fixes #89478
Style diff editor's scrollable viewport just like any other scrollbar
Add command for opening workspace tasks and make consistent
update last sync state if does not exist
update last sync data if it was not there
log requests to server
Removed search.location from search.contribution.ts (#89585)
fixes #87772
Disable tests to unblock build
Revert "Freeze uris before trying to resolveExternalUri"
fix test failures
fixes #86602
Improve display of task pick string label
Sort forwarded ports
End sockets used for port forwarding when tunnel is closed
fixes #89609
accessibility: do not have editor group in aria label if only one group
always show diff editor, except for deletes, #89501
improve inspect tokens hover
fixes #83771
fix #89422
make that there is always a focus element in the peek tree, #89557
fixes #89472
fix #89507
correct invalid checked states, e.g unchecked parent cannot have checked children, #89506, #89546, and #89500
use old uri for text edits that target renamed resource, #89506
Make ITheme.getTokenStyleMetadata return an object to be able to express "inherit" (#89600)
fixes #89295
fixes #86032
fixes #88024
Don't remove trailing separator from drive letters (#89218)
misleading wording of "files.preventSaveConflicts" setting (fix #89510)
fixes #89491
add tree.hasElement()
No additional properties (fixes microsoft/vscode-remote-release#2222)
Editor navigation scrolled to top when opening the LRU item (fix #89519)
ensure parent is checked when checking child, ensure child can be checked when parent is unchecked, #89500
Untitled: show original resource name as description (fix #89423)
Remove redundant 'not forwarded' from ports view
fix #89502
Double click on file name to peek. Closes #89467
fix #89457
untitled - do not compute label when first line change is >50 column
add setting for movable views
Hide Markdown preview editor icon when there is no active icon theme (#88692)
Pick up new TS version for building VS Code
Edit cell with enter
Use capital "N" for new (#89461)
switch off classifier bot
Add validation for ports numbers that are too big
Fire change event when the candidate port finder is registered
debug: update js-debug-nightly to "2020.1.36063" @ 2020-01-28T01:06:26.84Z
Don't lose port name when changing local port
Use proper settings UI links in workbench.editor.limit.value (fix #89495)
fixes #88990
scm: comment out suggest contribution
Improvements for #88720
inspect hover: respect sem-highlight setting
fix #89317
Freeze uris before trying to resolveExternalUri
Web: download from explorer via blobs (fix #89407)
fix #89187
files - restore listener on save error
Send `#` as a completion trigger character to TS 3.8.1+
Use type only imports for protocol
move cursor to 0,0 on search
Clean up header hiding logic
Remove empty logging from telemetry2 searches.
Document that we expect tokenType to be < 65536 (for #89185)
Add comment to AuthenticationProvider API
Add telemetry for opeing a saved search editor
Add telemetry for saving search editors
more default scopes for sem tokens
Harden model initialization logic
fix GDPR annotation
[html] update dependencies
[css] update dependencies
set context on REVEAL_IN_OS_COMMAND_ID
Removes timeout/racing for now
Removes ==
Adds nls folder for timeline
Removes open diff command from palette
Polishes the timeline UI/UX
Adds index (staged changes) to timeline
Adds refresh for when timeline changes
Adds timeline diff on click and icon support
Adds timeline view & api providers (wip) ‚Äî #84297
Clean up some confguration handling logic
Use codicon gear in terminal quick pick (ref #86708)
Vertically align codicons in quick open
Restore search editor names on reload
editor input tweaks (#89289)
debug: update js-debug-nightly to "2020.1.33183" @ 2020-01-26T01:06:43.323Z
Fallback to directly hitting endpoint if listening on server fails or running in web, fixes #88392
files - remove redundant listener
minimap: fix decoration cutoff not acocunting for pixel ratio
text files - makeDirty => setDirty (fix #89356)
Do not duplicate account tokens, fixes #89334
fix #88803
fix tests
:lipstick:
Show breakpoint window without creating a launch.json in the workplace folder
#88577 do not count on auth error
text files - do not mark model as dirty from content change events if readonly
text files - :lipstick: save handler
Correct pre-filled folder name when "Download"ing a folder
editor status - use input.isReadonly() to ask for editable state
add ignore error handler option
Add IRemoteAgentConnection.withChannel for stateless requests
fix scm repository selected state
remove unused code
spell out places that support inline theme icons, #87165
update typescript-vscode-sh-plugin
download: do overwrite
untitled - only report dirty after model is loaded properly
Expose command to open user tasks file
git: have own log level
update distro
update distro
Pass in IRemoteAgentService to RemoteFileSystemProvider
update-distro
run OSS tool for 1.42
bulk - yet another fix for the getId...
debt - move save error handler and participant into service
:lipstick:
incorporate feedback
editors - restore ability to navigate in reverse MRU order from picker
Enabled movable Custom Views (#89240)
tweak schema doc for #84695
change command name, #23001
quick open - drop autoFocusLastEntry
fix for #85858
[theme] normalizeColor drops colors with alpha
vscode - fix markdown/jsdoc links
fix typos
Ctrl + Tab no longer works in editor. Keybinding is missing. (fix #89318)
fixes #89150
Try to fix Linux GH CI (#89323)
integration-tests for #84177
editors - prevent direct reference to file editor input
test for #84177
moved to wiki
don't focus editor after formatting, fixes #85298
rename
add end game test plan item templates read me
Suggest Widget status bar for #39441
Persist scm tree view state between sessions
GH ci - disable linux run for now
editors - save/revert through service
editor group - rename events to follow conventions
types :lipstick:
destory notebook should clear both core and ext host.
improve inspect tokens hover
Typing latency: avoid unncessary dirty change (leads to 80ms per typing).
Support markdown in output
css update for markdown
:lipstick:
add telelemtry
editors - move replaceEditors call into editor service
editors - extract editor opening before saving to reusable place
editors - remove some obsolete editor commands
untitled - implement revert() on model
working copies - have an action to log working copies
text files - centralize file path suggestion for picker
text files - move revert() error handler into model
editors - let resource editor extend text editor
textfiles - properly pick default file path
untitled - share save/saveas logic in one place
editor - add group to revert()
Remove outdated extension contributed commands
Add command to rerun search editor
remove unused
Persist search editor viewstate
Make sure we dispose of every custom editors input individually
revert back to electron 6 (#89245)
Contributing: fix typos
:lipstick:
ThemeIcon support (fixes #72489)
git.pruneOnFetch setting implemented
Account extension - support multiple sessions, passing scopes to login
Move to v2 endpoint for account extension
Single click in hover/inline to go to link
Editor resize with view line change
Update line breaks
doing the same for outline
jpeg rendering
extensions: fix missing update to compiled extensions build file
extensions: use specific js-debug-nightly version to avoid downloading each time
add eventing to VDS to enable custom views
accessibility service cleanup
Bump node2
custom views are tricky
migrate search to use new setting (#89190)
fix default styles for class, enum, interface
extensions: allow built-in extensions on different qualities (#89199)
introduce LinkedText
Add forwardPorts to schema (microsoft/vscode-remote-release#1009)
fixes #89177
update references viewlet, https://github.com/microsoft/vscode/issues/89214
bulk: have UX and model checked states, propagate check states to child edits
bulk - better view model
textfiles - simplify getAll()
Friendly pickstring options (#89180)
Use leading flag set to true in debouncing events from extension trees (#88051)
textfiles - add comment
Revert "Ensure that when there is a Windows drive letter as the whole path the simple file picker keeps the slash"
Explorer: copy() of dirty file reverts the source if dirty (fix #89217)
views: link up empty view registry to panes
Ensure that when there is a Windows drive letter as the whole path the simple file picker keeps the slash
:lipstick: text files
Allow link on Diagnostic#code for #11847
use macOS-latest hosted agent
:lipstick: backup tracker
lifecycle - more details when unload fails
Let read-only editors show problems (fixes #89057)
Add editor.renderValidationDecorations (#89057)
 untitled - change mode when found in paste data (#89159)
tests - avoid tests that bring up webview for now (#88415)
Adds a backup method (#88948)
Validate before deserialization
Add telemetry events for search editors
Remove extrenous hideHeader call
Delete cell
wip: empty view content
Refactoring editor creation logic
Correctly convert `null` to a resource scope (#89131)
Remove 's' from args
Remove rename of method arguments
update typescript-vscode-sh-plugin
fix #86692
Stop sequential dependent tasks if one is canceled
Remove unused reference in viewsViewlet.ts
If a screen reader is attached and the default value is not set we shuold automatically increase the page size to 1000 for a better experience
fix tests
suggest - don't send default ranges for each item
Only show 'task already running' message when task is visible
:lipstick:
IViewsRegistry.registerEmptyViewContent
- Introduce menu id to contribute view title context menu actions - Use this menu id to get context menu action for a view
Make show task act as a toggle
bulk: add tests
bulk - tweak rename input padding
backup - remove discardAllBackups() method
update calc
fixes #86474
[json] move jsonValidation declaration for #88835
Add action to change local port on tunnel
rename setting to `peekWidgetDefaultFocus` and make it an enum of "tree" and "editor", #23001
change telemetry event name, #87187
fix scm input colors
backup - only ask for backup when none exists on shutdown
better codicon alignment in codelens, #87062
working copies - add name property
backup - make backups optional on shutdown
TestWindowConfiguration
bulk: adopt codicon for group/ungroup symbol
:lipstick:
backup - more tweaks to backup on shutdown
#86916 sync extensions enablement
bring back: add ignore-certificate-error & allow-insecure-localhost. Clarify unknown option warning
Allow searching from selection inside search editor
editor - only set pinned on replaceEditor() if not specified already (fix #87212)
enable mouseBackForwardToNavigate setting on macOS (for #8641)
Enable Search Editors by default on OSS/Insiders Replace "open results in editor" viewlet action with "open new editor"
Add SearchEditorInput instantiation manager and enable hot exit in search editors
update menu entry logic
Always use a binary diff view for custom editors
first round feedback
Remove unused name property from settings sync store type
Use authentication provider display name in settings sync notification
Add logging to account extension
Update Codicons: Add group/ungroup (fixes #89105), update repl
codelens: don't apply icon color to codelens
default langauges
improve jsx semantic highlighting
Expose authentication providers array
Update notebook test extension for new API.
backup - confirm save operation before quitting without veto
dirty state update
fix doc
remove unused code
backup - cleanup shutdown handling
backup  - fix spelling mistake
rename TreeResourceNavigator2 to TreeResourceNavigator
remove deprecated TreeResourceNavigator
fixes #86440
bulk - ignore file event for text models
bulk: show "group by file" only when having categories
bulk - link checked-state for files in all categories
bulk - disable checkbox when parent is uncheck, mirror children into "bucket-only" parents
bulk - fix identify provider
Add ctrl+c keyboard shortcut for copy port address
[json] fix typo
fixes #89041
[json] avoid too many deltas (#79014) & update dependencies
Add label keyboard shortcut for forwarded ports view
revert creating storage service
Add delete keyboard shortcut for forwarded ports
revert git uri changes
#86916 introduce global extension enablement service
Introduce storage main service in shared process (#89040)
fix bad ES check
fix SCM npe
fix scm commit shortcut
backup - let discardAllBackups() delete backup folder for workspace again
Adopt deprecation service for deprecated task constructor
Clarify API
Add command to copy port address
Add signature/qualifier for #39441
revert
rename
backups - go through editor service for saving/reverting
fix compile
backup - improve error handling
Add Stop forwarding port command
backup - improve discardAllBackups() semantics
backup - prevent shutdown if backup fails for any working copy
Use native storage service
Add % to .bat variable surround (#88986)
do not show replace button in inline diff view
backup - make shutdown more explicit
debt - cleanup outputpanel instantiation override
Add trial hot exit implementation. Lots to fix.
Don't invoke a provider if we know its code actions will be excluded
Move webview icon service into service
provideDocumentSemanticTokens should not return SemanticTokensEdits
Language per cell.
remove search view moving for separate PR
Forgot one rename
Create storage main service in shared process
Revert "add ignore-certificate-error & allow-insecure-localhost. Clarify unknown option warning."
recover from EditorGroup.isOpen({ resource }) change
Throw all the time without additional parameter
fixes #86100
add ignore-certificate-error & allow-insecure-localhost. Clarify unknown option warning.
Cover case where the scrollable does not emit an event initially
untitled - do not pick first line name if it does not include words
use an arrow only for input fixes #87599
git: expose getRepository
:lipstick:
scm editor: disable word suggestions
repl: improve indentation
remove sample code
revert hover change
fix keybindings remote content
Rename the button to call out replace and show a confirmation dialog
scm: validation is back!
fix #88862
editors - stop support for EditorGroup.isOpen({ resource })
Drop duplicate code
Improve finding of free port
output - fix broken instantiation
do not show the merged remote content
bulk: sort unchecked item to the top
bulk: render metadata as title
bulk: actually use metadata#needsConfirmation
bulk: use group/ungroup icons from cpp extension
handle errors
fix monaco editor check
fix parsing object and array types
add tests
bulk - have two, mutually exclusive, commands to group by type or file
Adopt snippet for #39441
Drop string from label2 for #39441
Adopt CSS for #39441
inline
auto comtinue sync if there are no conflicts
Show buttons to accept local or remote changes
fix keybindings tests
add more tests
fix tests
Move last sync resource to sync folder
Use show conflicts instead of resolve conflicts
fix handling conflicts
fix remote keybindings content
show diff editor for keybindings conflicts
- retain order and comments - show diff editor for conflicts
details -> type
Bring back version check to avoid flickering caused by coordinates conversion
working copies - some JSDoc for clarification
make use of themeColorFromId() helper
backup - drop internal backup service for dirty editor dnd and use content directly
backup - introduce and use IWorkingCopy#backup()
backup - make textual content optional
backup - let all operations work on resource and not backup resource
backup - method renames
Use prominent status bar color for screen reader info (#88707)
status - stronger indicator for tab mode (fix #88707)
Editor should update aria label on editor name change (fix #88981)
debt - emitter without dispose()
:lipstick: code
Untitled editor tab name and search entry differs (fixes #88969)
fix #26707
debug: restart action instead of only line number to make it less nervous
accessibility: make editor aria labels more concise
Check settings tasks in getTask
bulk: better use of tokens when computing preview strings
debug: statusbar color tests
bulk: use iconPath so that conversion is implict
add API proposal for workspace edit metadata, #77728
Defaulted mirrorCursorOnMatchingTag to false Resolves #87737
Add proposed api check to new tunnels api
render icon for metadata
Add tunnel list changed event API
bulk - add tree keyboard navigation logic
ignore showPreview option when needsConfirmation is set, #77728
Add API to get an array of tunnel descriptions
add support to group changes by metadata label, #77728
have WorkspaceTextEdit in BulkTextEdit (tree object)
only show save participant failure in log
fix typo, #77728
bulk - refactor much to be prepared for WorkspaceEditMetadata
Add embedder API for candidate port filtering
Add candidate port filtering to proposed API
Support for Shadow DOM (#88536)
Remove unnecessary changes
Add mouse move listener also to the initial element's shadow root
Bring changes together
Remove unnecessary changes
Temp workaround for layering error
Custom Editors: pass original edit objects back to extensions
Use more explit name for request start time
Log the full version string for TS
Add explict update methods intead of using spread
:lipstick:
Add backup capability for custom editors
Make sure we only send TS trigger characters they know about
Remove extra no null check
Avoid touching ShadowRoot.prototype
Remove window._getCharWidth
Remove other reference of monacoShadowRoot
No more need to use monacoShadowRoot in createStyleSheet because all standalone editor calls are qualified
createStyleSheet only if needed
Create local style sheets if the editor is in a shadow DOM
editor.insertSpaceAfterComment setting (#41747)
Honor insertSpace option also in the block comment command
Do not remove space after the comment token if insertSpace is false
insertSpaceAfterComment  => comments.insertSpace
Attempt to keep content widgets in the editor (fixes #88720)
Preserve word wrap state in target file when saving untitled file (fix #33840)
Unsaved tab labels should preview text instead of "Untitled-#" (fixes #37414)
check if undefined
Mirroring TextModel.
Move settings sync auth provider id out to setting
Store account per env.uriScheme
Prefer running the built-in python extension on the UI side (fixes #88837)
remove reliance on encoding src view id
move view descriptor service and enhance cache
Clean up commands from old search editor version
execute cell
repo pane: keep scm input in sync with API
:lipstick:
:lipstick:
fix editor visibility
label2
untitled - clean up interfaces
repo pane: style input box
hover: only show status bar when there is a marker controller
add TokenStylingDefaultRule.match
repo pane: fix placeholder text styling
fix for typescript-vscode-sh-plugin not found
Cleanup
inspectEditorToken: to work with no grammar
Clean up, make easily mergeable
Ellipsis behavior for details
bulk - some renames and some polish
handle error
wip: git suggestions
repo pane: validation
repo pane: adopt getContentHeight()
remove deprecated attributes from launch.json schema
Update headings in forwarded ports view
untitled - clarify associated resource capabilities
repo pane: use proper uri for input model
Update distro hash
untitled - rewrite creation logic
Add `getContentWidth`, `getContentHeight` and `onDidContentSizeChange` to the editor's API
typescript-vscode-sh-plugin is not bundled
fixes #88721
Add log messages for watchers
repo pane: enable suggest
repo pane: input placeholder
add (language-specific) setting to enable/disable rename preview, #77728
fix warning
electron - avoid more deprecated API (themes)
untitled - some :lipstick:
#85216 use quick pick to turn on
add description property to quick pick (#88788)
text files - make save dialog reusable
untitled mode preservation (fix #86971)
wip: broken state
Treat '#' as a VS Code trigger character
Add history to search editor
Webpack account extension
Indent matchinessHeuristic pattern
Add loading indication for search editor
Add action to toggle context lines
:lipstick:
Use test instead of exec
:lipstick:
Add toggle search flags in searcheditor
Pick up new TS version
Bump VS code version
Revert "Add webpack config file to vscode-account extension"
Revert "Move keytar to dependencies for account extension"
Add cache to viewdescriptorservice (#88656)
SemanticTokens - implement feedback received in API call: - extract a separate DocumentRangeSemanticTokensProvider that deals with a document range - extract a separate provideDocumentSemanticTokensEdits that deals with updating via SemanticTokensEdits a previous result
fix compilos and adopt proposed api usage, #10266
add description property to quick pick
#85216 More improvements to start up ux
move API proposal to stable API, #10266
explorer view: unit tests
tests - I really do not want Sinon
fix searching by return proper value for compressed node; fixes #88526
scm: make commit template work again
untitled - split createOrGet into create & get
use new editor wrapping
add ignoreSubmodules option
debt - loadOrCreate => resolve
loaded scripts: support filtering across all expanded items
fix missing type
loaded scripts: fix collapsible
loaded scripts: adopt object tree
untitled - bring back loadOrCreate()
slightly more compact dto, no need to send false
add regions for auth proposals
text files - rename models => files
text files - allow to work with untitled from text file service directly
consume latest version of references-view, https://github.com/microsoft/vscode/issues/88413
Hover to show readMore
enable goto definition when peek is showing
bulk - expand all file nodes
use TreeResourceNavigator2 to preview changes
support preview change when already previewing changes, #77728
change command label to `Inspect Editor Tokens and Scopes`
update classifier
#85216 :lipstick:
fix compilations errors
#85216 Improve start up experience
#88322 Provide a picker to select extensions to sync
Try moving keytar to externals
text files - cleanup and remove unused methods
Overwriting binary file is not allowed (fix #88687)
Add focusNext/focusPrev keyboard actions to search editor
Move keytar to dependencies for account extension
fix typo
Add webpack config file to vscode-account extension
Updates to authentication provider API
Push undo stack element on new search
Open new search editor for the current selection.
Update regex
vs loader in webview
ts semantic highlighting: support alias
fix style
fix search console error and save state fixes #88494
Sync account state between windows
Style context line input box.
make LoadedScriptsView's model sync
Add mock of how we might use search editors + track bugs related to ts/36031
Add semantic tokens to inspectTMScopes, rename to inspectEditorTokens
fix breadcrumbs model mem leak
bulk: return early if edit does nothing
menu title menu configurable and optional
:up: distro
integration tests - enable logging when running against build
fixes #88675
#85216 reduce options for first time sync dialog
simplify toggle command
make Action2 an abstract class so that ctor is clear and so that we can do things before/after run
log - ensure to convert any arg to string (main logger)
fixes #88553
assign order to commands
tests - reduce output of integration tests (#84283)
add context menu commands to bulk edit pane
IAction2 - allow multiple menu items
fixes #88645
actually use opacity for the label..., #88552
remove registerAction infavor of `registerAction2`
add `registerAction2` to register a "modern" action
Implement visibility change
:lipstick:
use WorkbenchCompressibleAsyncDataTree
untitled - reduce service methods
fixes #86033
typeLabel -> detailsLabel, restore old visibility model
Drop alwaysRevealInlineDetails
Accessibility navigation commands should only be enabled on windows since they are tuned to what NVDA expects
Try adoptions
Adopt css
textfiles - reduce service methods that are not needed anymore
CompletionItemLabel#label -> name
Added remembering end key state behaviour
fixes #86822
files - working copy service for explorer delete
textfiles - no need to instantiate BaseTextEditorModel for "Save As"
Clarify the docs for QuickPickItem.description and detail
#85216 Show download/upload options when syncing for first time
Add dirty indicators
Ongoing work on save/open search results.
WIP on search editors backed by files
fix token check
Revert "fix token check"
fix token check
disable caching of sync requests
:lipstick:
Add common service for logging deprecated api usage (#88585)
Move settings sync auth into built in extension
ResizeObserver
handle undefined/null error
#88637 temp fix
Also show extract to function as disabled in js/ts
Also show refactor documentation in normal lightbulb menu if refactorings are returned
Reduce forced reflow and reduce rendering cost
Command to show sync log
build - see if test retry helps
text files - allow to save any existing model
editors - favor closeEditors() over closeEditor()
make consistent with plugin
define constants in typescript-vscode-sh-plugin
:lipstick:
Revert isDetailsResolved and implement CompletionItemLabel
#85216 pull and push support in synchronisers
debugStart: add telemetry
Extension id format (microsoft/vscode-remote-release#1800)
:lipstick:
Avoid memory leak where the _markersData never has its elements removed
fix repl
Rerun monacodts again
Rerun monacodts on latest and replace " with ' in strings
config - no need to check for file exist on error
fix #86843
move TitleMenus from customView to ViewPane, also fixes #88557
remote - ensure errors go into file streams and not unknown serialized data
debug: use new view pane in debug console
implement backup on shutdown via working copies (#84672)
fixes #86848
tokenStyleResolving: fix test
replace console with logService. For #84283
tree: respect isChecked and getRole
Don't instrument any test code for coverage (#86608)
Adopt latest istanbul libraries
suggest - dont force widget creation
fix semantic token style caching
fix #87330
:lipstick:
#87461 Small refactorings - Remove cyclic dependency between view descriptor collection and views service - use view collection for getting and listening on views given a container - return view descriptor colleciton always for a container
Bump node-native-keymap to 2.1.1 for easier arm64 cross-compil‚Ä¶ (#86659)
:lipstick:
Update diff icons to use codicons (#88013)
remote - allow to open files from user home with tilde syntax (#83213)
Just apply review feedback
Enable Shift-Insert to paste primary clipboard on Linux, fixes‚Ä¶ (#63374)
add constants
fix #88561
Only register PasteSelectionClipboardAction on Linux
Extract paste selection clipboard code to an action
fix https://github.com/microsoft/vscode/issues/88591
Same editor appears twice in tabs (fix #88551)
remove unused
Add basic save functionality to search editor
Convert CodeActionTrigger type enum type
Add telemetry on which code actions are applied
Remove unused vars
Only return documentation code action in refactor menu
ipynb file should not execute outputs twice
Notebook Provider for both ipynb and test.ipynb
Only override editor opening for resource that have potential custom editors
add AriaProvider, #88553
fix issue with accessibility provider, #88554
polish html sem highlighting
fix(debug): don't insert task boundaries between events (#88459)
missed rename for viewsservice
Enhance views service (#87505)
has -> had
:lipstick:
issue flow configuration
Code cleanup
fix test failure
add AriaProvider, #88553
fix issue with accessibility provider, #88554
update typescript-language-features
polish html sem highlighting
fix(debug): don't insert task boundaries between events (#88459)
add reaonly support, update typescript-vscode-sh-plugin version
missed rename for viewsservice
Enhance views service (#87505)
has -> had
finish test
readonly semantic highlighting
message polish for #88552
fix #88560
add accessibility provider for refactor preview, #88554
fix tests
Expose IExtHostTerminalService.getDefaultShellArgs internally
telemetry - restore back load/save reason for files
:lipstick:
debt - drop untyped events in favor of typed (text files)
fix compilation
directly add override identifier property schema
use set instead of array (#88538)
Respect editor.wrappingAlgorithm
Pass in entire fontInfo when computing line breaks
Introduce editor.wrappingAlgorithm
Add support for WrappingIndent.Same in DOMLineBreaksComputer
Better handling of multiple spaces when using the DOM for line breaks
Formatting changes
debt - drop TextFileModelChangeEvent
text files - drop debounced bulk events
TS semantic highlighting: check api version
update telemetry message with index of changed field #87187
use set instead of array
:lipstick:
add setting for semantic highlighting
debt - cleanup file model a bit
debt - move text file model telemetry into telemetry contribution
Minor tweaks
fix #88310
Small changes to ShadowDOM
fix compile errors
for rename-file, show the new name more prominent, #77728
options - make sure text editor options are proper
#85216 methods to know if synced before
Removing unused imports
Add missing tree items back.
#85216 Add confirmation while turning off
#85216 Add configure sync command
preventSaveConflicts - allow as language setting
custom editors - implement auto save and backup creation over working copy events (#84672)
:lipstick:
remove zombie nodes when dynamic height changes.
Update font height and remove duplicated hover listener for menu
word warp for simple text output
Update VS Code build with TS 3.8 beta
Implement a default saveAs for readonly custom editors
Make sure we restore the previous editor when switching back to it
Restore search editor configurations on reload
run yarn
Move that to a spot that makes more sense
clear cache when webview is cleared
Keep track of query includes/excludes expansion state
Use cell container width when creating new markdown cell in edit mode.
avoid multiple exeuction.
add launch.json settings to make js-debug faster
Add 'vscode.reopenWith' API command
Update js/ts grammar
Use import type when importing `vscode` under src
Move handler into CustomEditorInfoStore
Allow for rulers to be individually colored
#85216 Improve settings sync UX
Applying changes for shadow DOM
Update margin right for editor
update build scripts
fix notebook can not be opened twice
import :lipstick:
auto save - directly operate on working copies
run all cells from editor title
debug: more unit tests for getStackFrameThreadAndSessionToFocus
fix tests
Add "Don't sync this setting" action for settings For #84431
debug hover: find expression in stack frame tests
ignore pinned state, close all editors
fix rename case, show file type operations
First cut for DOMLineBreaksComputer
debug editor contribution: move out logic to helper functions
fix html tests
polish
update typescript-vscode-sh-plugin
set aria options
missed spelling
react to feedback
text files - tweak logging
fix issue with change check
polish html-js sem highlighting
polish
editors - save dirty working copy after delay (for #84672)
WIP for #39441
use clear icon for discarding changes
don't apply code action when things have changed in the meantime
#88293  remove matches after replace
prepare for label
skip webview tests for https://github.com/microsoft/vscode/issues/88415
files - remove PENDING_AUTO_SAVE model state
use native checkbox for consistency
fix issue when having an empty text edit
fixes #88342
Allow to save readonly documents (fixes #22121)
add keyboard command to check/uncheck changes and to apply changes
Re-engineer the wrapping algorithm & more (#88405)
Renames
Initial approach to search editor UI.
fix BulkEditPane-ctor
Remove unnecessary code
restore workbench layout/ux state when refactoring is done
show panel only while refactoring preview is active
show preview only for rename
Update build scripts
issue flow configuration
fix #88394.
Hook up basic custom editor update on rename
emit scrolling from embed editor.
Avoid object churn
remove unused variable
check if list view is rendering
avoid two step dimension update.
resize observer for output node.
Exclude tsconfig files under dot file directories
use typescript-vscode-sh-plugin
Notebook ipywidgets output
use @aeschli/typescript-vscode-sh-plugin
:lipstick:
use plugin
Remove extraneous line from doc comment in vscode.d.ts (#88336)
wip
adopt isDetailsResolved for snippets, #39441
Better ipv6 display in forwarded ports view
propose CompletionList#isDetailsResolved, #39441
Use arrow instead of 'to' in forwarded ports view
chore: Upgrade to electron 7.x (#83796)
wip
#86681  Change API to access conflict settings in sync way
Add double-click in empty area of Forwarded Ports view
remove timeouts (and their settings) for format and code actions, #87449
Show cancellable progress when running save participants, #87449
add IProgressNotificationOptions#delay, #87449
Only show Forward a Port... when view would otherwise be empty
:lipstick: editor tests
:lipstick:
Forward a Port in Forwarded Ports context menu
Focus on empty custom trees to improve sidebar indicator
Simplify wrapping computation
fixes #88162
Update emmet helper
:lipstick:
Exclude .vscode-test folder from npm task detection
Pass in previousBreakingData to line mapping computation
untitled - merge createOrGet and loadOrCreate into one
editor tracker - also open untitled editors when being dirty
Extract breaking conditions
fixes #88292
fixes #88261
TunnelFactory web api (#88200)
Update copycat.yml
Use flex to layout extension page header/body (#88318)
#26707 Inspect returns languages
Update logging of updateGraph to match TS protocol changes
Dont' use default export for TelemetryReporter
Report updateGraph performance Telemetry from the TypeScript server
Pick up latest ts nightly for building VS Code
Add call hierarchy support for TypeScript 3.8 (#88168)
distro
update distro
fixes #87056
use standard file rendering, file operation type as css-class (need UI)
ViewPane instead of Panel
Forward ports with any host to localhost
#26707 Make uri optional
ts sem
improved error DA error reporting; fixes #87196
Add a type for TunnelDescription
debug: register breakpoint and callstack contributions in debug.contribution.ts
Trim whitespace on tunnel description
debug watch expression improvements
Make PieceTreeBase.getLinesContent a lot faster
Clarify members visibility
ability to check/uncheck changes
Use better editor API
remove workaround for #87088
Have the rendering width of a tab character be independent of breaking points
add "resolveDebugConfigurationWithSubstitutedVariables" hook; fixes #87450
custom editors - adopt working copy service for tracking closed wait files
only map when necessary
Show remote host in tunnel view items when not localhost
web - define argvResource
more tests
debt - move more code to editor auto save
unhide EH debug config
filter file noops
editors - ensure to open editor when save fails and model is still dirty
show file operation labels with file name
simplify IdentProvider, rename view model object
remove fs implementation
fix #88232
editors - introduce IEditorInput.isSaving()
Register MockDebugService and add mocks that are used by the callstack and bp editor contributions, to fix tests
Unhide some common launch configs
Make sure we always explicitly reset pendingGetErr
Adding documentation.refactor proposed contribution point
Make names for code action config contributions more explicit
distro
Replace all description-container classes with correct selector
more tests
Code cleanup
Update dynamic height properly
Only treat diff editors as matching if they have the same forceOpenAsBinary setting (#88183)
Update distro
xterm@4.4.0-beta.15
show rename, preview labels in rename input box
properly use the automationShell setting; fixes #87700
ts sem tokens in html
add Shift+Enter for acceptRenameWithPreview
Switch to use a LineNumberMapper for view line - model line mapping
callstack test contexts
remove .only
call stack decorations test
Option for hiding candidate ports
rename input field polish
debug: extract createDecraotionsForStackFrame to a function
debug: unit tests reorganisation
debug unit tests: decorations
Add error for unforwardable port
breakpoint widget: polish, use model.findPrevBracket
debug: getBreakpointMessageAndClassName tests
#26707 Change resource to uri
Reduce memory usage for SplitLines
debug: seperate breakpoints.test.ts into its own file
(re)enable preview for vscode.workspace.applyWorkspaceEdit
use file operations for preview provider, make sure preview provider keeps models alive
parse using jsonc parser
Avoid GCing (#21196)
debug: fix tests
only preview rename and code actions
some cleanup
debug unit tests: better check for breakpoint events
simplify
debug: unit tests
use BulkFileOperation model for tree and preview
Also advance niceBreakVisibleColumn in case of surrogate pairs
:lipstick:
render debug labels
:lipstick:
:lipstick:
Remove obtrusive wrapping characters since it was used only for dot (#21196)
:lipstick:
debt - rewrite layers checker to catch more cases
Speed up the common case in WrappingCharacterClassifier (#21196)
honor cancellationToken; fixes #88173
Save a visibleRangeForPosition call if possible
Have line mappings be computed in batches
Roblox XML file syntax highlight support (#87755)
Refresh layout at next frame
When generating a tsconfig with checkJs, make sure we also set allowJs
Set sourceMap: true in default tsconfig
avoid infinite loop
Test extension for notebook
#88125 Reverse action order in goToErrorWidget
CallStackView attempts to position the active stack frame to the middle of the visible area
fix parsed JSDoc author tag (#80898)
Update js/ts grammars
Require second parameter for Map.set
fix missing strikethrough styling for scm resource states.
Update build to use latest TS 3.8 nightly
debt - cleanup tsconfig.json
fixes #88146
debt - fix some compile issues
Configure syncing ui state
Pass in the line mapper factory to the ViewModel
merge master
Feedback: beak is off now with new icon it seems (fix #88138)
callstack view: use dom.toggleClass
debug: introduce some unit tests for getVisibleAndSorted
bump version
Restore "current git branch name when renaming"
Sync locale using global state
show status bar message when save participants fail and link message to corresponding setting, #87449
change active-editor to ${activeEditorLanguage} (for #78903)
eslint - add a few more for no-restricted-globals rule
add (unbound) openReference command that closes peek, #86880
remove duplicated commands via ContextKeyExpr.OR-usage
lint - use single quotes
fix output link detector for overlapping paths (fix #88121)
fix  #87987
output - :lipstick: modernize
editors - first open editor before activating group
:lipstick: file service errors
build - try to fix eslint compile issue in builds folder
Candidate port detail shouldn't be the whole long command
debt - print errors in main properly (#84283)
update distro
eslint - add rule to restrict certain globals (#88123)
Allow to configure "files.defaultLanguage" to use current language (fix #78903)
update extension dependency, https://github.com/microsoft/vscode/issues/87625
use fontFeatureSettings from editor in suggest widget, #87994
minor linting
first cut
Large file under git control encoding guess can freeze the editor (fix #87205)
folding highlight setting (for #83983)
fix #88000
debugToolbar: minor polish
avoid polluting shell history with debugger commands
debug hover: make sure to canceld hide hover shceduler if hover is about to be shown
eslint - make nls-rule a little more strict
potential leak: _updateOutline should honor cancellation token
add eslint task definition
enable custom/forked no-unused-expressions rule
tslint removal
remove custom tslint rules
remove more unused tslint directives
remove tslint.json files
Remove comment
Update quick pick dirty icon (refs #86708)
Update paremeter hint chevrons (ref #86708)
Update diff icons to use codicons
(re)enable no-extra-semi rule
enable jsdoc/no-types rule for TS files
also disable tslint for build-folder
adjust rule to allow double quotes for "use strict" and other directives
fix eslint issues in build/gulpfile.*
fix double quote issues
update rule-disablements (eslint-disable for tslint-disable)
tslint default severity is OFF
run "eslint --fix" to get some changes  for free
disable tslint in hygiene check
Update Codicons: add Feedback icon for statust bar (ref #87775)
Flush all buffered data events on terminal close
Refresh terminal dimensions whenever a setting may have changed
Add to notification to restart if font is new
Add else cases to correct label
Use ctor shorthand for private prop
Tweak numbers to bring in line with editor tooltip
Update distro
Adding code review feedback.
Debug Console: Suggest old expressions from history across sessions
completionItem isResolved
add disabled rules for being more complete with our tslint config...
suggest widget: _index should be index since it is used
makes eslint fail the hygiene checks
cleanup rule meta data, add links when possible
Add additionalTextEdit and command conversion to CompletionItem
add rulePaths-option for eslint extension
xterm@4.4.0-beta.13
tweak ignore file
update 'gulp eslint' and 'gulp hygiene' so that eslint also seens TS files
fix some (future) linting issues
correctly configure rule paths in hygiene task
only one double-qoute string rule
remove unused dependency
87456: Configuration to increase the terminal cursor width
Add terminal-specific mouse sensitivity options
Tweak working on min contrast ratio
Promote Terminal.creationOptions to stable
update distro
Use forcibly over forcefully
Add self to mailmap
relax and allow double quoted strings appearing inside localize call
fix nls-rule when using member-expression
migrate no-unexternalized-strings rule (have two variants)
Move dialog details to description row in custom dialog
refactor stdin code
fixes #87873
suggest: do not use aria alert, instead pass the active descendent to the editor
editor: introduce setAria api
use AST selector to simplify things
use ts-es-tree-typings, support import-equals
check call expression argument length
extract import path detection into util
migrate no-standalone-editor rule
migrate no-nls-in-standalone-editor rule
migrate translation remind rule
use const instead of var
tweak rules and excludes
rulesdir/rulePaths for gulp-eslint
add no-buffer-ctor rule
migrate import-patterns rule to eslint
use rulesdir instead of rules-module
tweaks
Remove scheme restriction for Markdown/Emmet language features (#87541)
fix: add 'allow-forms' to sandbox attribute. (#87334)
fix word repetition in lifecycle.ts comment (#87554)
Remove ; and : from terminal word separators
Revert "editor observer - throttle group active event changes"
editor observer - throttle group active event changes
fixes #87745
Editor limit: can end up opening a disposed editor if limit is 1 (fixes #87447)
tslint - rewrite globals rule to not use tslint (#87754)
replace 'declare var' with 'declare const'
editor action run support params
explorer view: minor polish
replace 'declare var...' with 'declare const...', related #87644
use single eslintrc-file for extensions/ and src/, no type check rules
debug: minor fix in callstack
callStack view: do not hide state if the debugger does not support restart frame
ignore generated files
script run check JS and TS files
debug: fix adding to watch
use (most of) generated eslintrc-file
add package.json script
add eslint-rules "module" and use it in eslintrc-file
fixes #83992
fixes #83705
fixes #87605
Correct LocationLink link syntax
debug start: better wording thanks to @eamodio
debug start view label polish #87162
debug start view: remove run button, so we have just Run and Debug
For #87487 - refactor 'some' to for loops
For #87487 - remove the setting
add API resolveDebugConfigurationWithSubstitutedVariables; see #85206
follow text content provider approach
Revert "use preview fs"
use preview fs
implement preview file system...
debug.console.closeOnEnd
#87285 Contribute copy and configure action using menu
rename to window.autoDetectColorScheme, off by default
fix typo; fixes #87553
87180: Wrong Markdown preview format for files in UNC path (#87501)
trigger webview and list view scroll at the same time.
Always use same range for jsdoc completions
type checking for webview code
Port view container logic from activitybarpart to panelpart (#87444)
[folding] shift+click folds region when no children to collapse (for #78557)
add noPreview options
release references
:lipstick:
#87246 fix compilation
#87246 Abstract viewlet and panel registry
Try out new go grammar
no underline for code lens commands, #87062
debug select make sure all separators are disabled
debug: redenr separators also in the select box
debug: render config groups in quick open
better codicon alignment in codelens, #87062
Custom tree message doesn't show if message is the same
adaopt presentationHint in our launch.json
Debug: Support launch config grouping and sorting
debug: use getConfiguratinoNames less often
Put Help+Feedback view back into remote explorer
editors - openEditors() to return correct editor
Allow relative paths for python firstLine detection
editors - lift getEditors(order)
Update copycat.yml
update distro
fix tslint import rules
update distro
Update distro
Update distro
do not show title : title when merging
Update distro
Update distro
update distro
fix folding test failures
updated commands.yml
enable small layout with height
Adding Rules of Conduct
Add Rules of Conduct
improve color
Add refresh button to ports view to refresh candidate
separate color
add checkProposedApiEnabled checks
polish
update
editors observer :lipstick:
Have a setting for maximum number open files (editors) for #9872
enums for preferred theme settings
editors - introduce and use EditorsObserver and use for MRU list
polish
fix compile
debt - ensure there is only 1 editor service instantiated
debug configurations: cleaner selection of configurations
:lipstick:
move repl renderer related stuff to the replViewer
simple editor options: no indent guides.
:lipstick:
remove unnecessary white-space: nowrap
actually fix #87258
clean up tslint.json layer rules
Consolidate codicon files to vs/base/parts/codicon
update distro
single webview on the back layer
fix #87284
more tests
more tests
tests
visit ast
refactor
[html] use languageModes for language types
extract js semantic tokens
fixes
sem highlighting in HTML
improve logging
get legend
[html] add semantic highlight
#87246 Introduce name in view container
update minimum width for panel
repl use language mode of active editor
use positionToString for panel dimension
add position panel left (#84477)
show preview diff editor
vscode do not be smart and just pass the whole repl input content to debug adapter
editors - allow to listen to editor part options changes
fixes #85451
New debug/run experience always writes launch.json into first workspace folder
enable proposed api check for language settings
fix writing resource scope settings into workspace folder
nls
show a default/empty message
Revert "fixes #85451"
Tunnel API renames
Debug Console: Backspace does not remove extra lines at the end
expand first node
token based line preview
fixes #87235
change view container registry to use location
Set window.restoreWindows default to restore all windows (fix #87258)
add types for windows-registry (fix #83421)
Setting for restoring forwarded ports
Revert "respect onDidOpenResource passed element"
#87246 use container descriptor to register view container
explorer: read all capabilites like a proper gentlemen
fileService: add scheme to change capaiblity event
prepare workspace edit a little before previewing
file service - add event for listening to capability changes
adopt to new options
#87243 Support hiding view container title when merged
first cut of panel and changes tree
tests - increase timeout for backup test
debt - move workbench.enableExperiments to correct place
rename to markers view
move markers panel
adopt to new view containers
window - save window state on focus lost (fix #87171)
add BulkEditPreviewHandler
Revert "Windows ssh remote: Cannot use `\` in explorer new file dialog to create directories"
Polish forward port command
Update vscode.proposed.d.ts to reflect new state of forwardPort and makeTunnel
Enable more than just localhost for port forwarding providers
state :lipstick:
:lipstick: tests
move problems to view container
reusable webview
Remove grep for ts tests
Only fire is dirty event for custom editor when the editor model is actually dirty
Introduce CustomEditorInfoCollection
Don't reply on activeCustomEditor
Reuse createInput
Update js/ts grammar
Allow langauge sttings to override codeActionsOnSave
Update to use node 12 typings (#85578)
Add comment and improve mirror cursor exit logic
Refactor SortOrder & SortOrderConfiguration into one enum
fix: typescript completion item kind for local function (#87182)
implement tree things
Support ViewPaneContainer in Panel (#87191)
do not expose resource-language scope
Add IWebWorkerOptions.keepIdleModels (microsoft/monaco-editor#1401)
fixes #87185
fix tests
fix scope check
Windows ssh remote: Cannot use `\` in explorer new file dialog to create directories
files - carry resource for each error to track down issues (for #86843)
respect onDidOpenResource passed element
Add tasks to user configuration (#81496)
debt - add a test for restoring dirty files from hot exit
reset vscode.d.ts
move to proposed api
strict resource language scope
Resolved some requested changes
more jsdoc, #85753
Case-sensitivity and file system providers
simplify api
Handle stat.type correctly in typescript features extension
no more proposed check for theme icons for menus, #84695
'human readable' becomes 'human-readable'
Losing content of unsaved files in workspace (fix #87156)
make ThemeIcon#ctor public, #84695
strictFunctionTypes for mainThreadTask and extHostTreeViews
handle long texts in statusbar-item anchor
add max-width to statusbar-item
finished debug API for inline DAs; fixes #85544
state - periodically save state to prevent loss on crash or shutdown (#87158)
add unit test for #86984
editors - fix various issues around preserving language mode
Revert "remove resource language scope from contrib point"
remove resource language scope from contrib point
remove the api example
debt - try to fix flaky tests
window - more validation of bounds
electron - remove backgroundThrottling to fix blank windows
Updates #84695 - api review
Remove unused CSS
Implement draft 2 from #86802 (#87117)
Add missing documentation to CompletionItem's insertText
fixes #85451
Missing await in ForwardPortAction
compute before/after changes before applied extra edits, #86984
editor - assign new keybindings for opening next/prev editor in group
window - more changes to ensure window is not out of display bounds (#86771)
fix broken language mode after saving untitled (fix #86971)
remove redundant api
:lipstick:
fix alignment of codicon icons in custom trees, #84695
apiExample
one more version to read configuration
deprecate using resource
allow  prepareCallHierarchy to also return an array
debt - remove windows-mutex.d.ts
separate workspace folder and text document configuration
debt - prefer our path lib over node
Allow extensions to provide a port forwarding implementation.
bulk edit - dispose model in error case
:lipstick:
Revert "more changes in bulk #86851"
more changes in bulk #86851
enable api to read and write lang configs
history - reshuffle code
invoke computeMoreMinimalEdits for edits that are applied with the editor, #86851
fix tests
:lipstick:
code lens codicon font and color fixes, #87062
editor history - implement and use history of most recently used editors across all groups
#26707 do not use overridable
#26707  Use resource language scope instead of override property
#26707 Introduce `resource-language` scope to define a setting as a language setting
remove unused rule, remove monaco prefix, #86940
debt - adopt better affectedKeys-function
debt - remove double inject
editors input factory - add canSerialize() to find out if editor can be serialized
editorgroup - reduce lookup overhead for known editors
debt - let editorgroup model use editors that are already in the model
Remove cyclic dependency
trace log more window state
editors - tweak API to be correct
Use correct background color (fixes #86893)
render webviews in new layer
Avoid secondary renderElement for dynamic height element. Need revisits later.
Set replWasOpened only when the REPL panel was opened
Exit mirror cursor mode when there's a none-empty selection in an unmmatched state
Add better description to search result editor readme.
bump electron to 6.1.6, fixes missing window titles in accessibility apps (#86837)
Classify `vscode.search-result` as a Feature extension
Add string descriptions to SearchSortOrder enum
Add expand-all action in search (#85428)
Remove test.only from 88bea3fac3ca50f7240c69f3e7a61183d1c81237
render html in webview
Actually fix #86497 by adding context for FileMatches with attached models
fix getDefaultShell tests refs #86958
Move sortOrder to a single enum
Improve searchviewlet tests
#83252 Implement sorting for search results
Update Codicons: add "expand-all" (refs #85428)
fixes #86958
Bump both node extensions
Remove monaco-workbench refs in severity icons #86940
Remove monaco-workbench ref #86940
refs #86428
fixes #86428
Output with webview
fixes #85392
Move lightbulb workbench references to workbench layer #86940
add monaco prefix to dialog widget refs #86940
fixes #85324
breakpoint decorations: minor fix
list do not cache 0 height
rename
rename
fixes #86926
rename
rename
debug: show inline decoraiton even when there is breakpoint
Make breakpoint candidates less noisy
debug start view: render keybinding
udpate distro commit to have holidays contirbution
Add a 'Forward a Port' command to the command palette
fixes #86883
files - throw in del() if file does not exist (fix #86217)
Enable adoption of the new Forwarded Ports view through context value
Hot exit: untitled backup is not made when opening new untitled with initial content (fix #86891)
Make worker ExtHostTunnelService and remove dependency in ExtHostExtensionService
Web: allow to drop a local file into editor area to open it (fixes #83650)
Remove trailing newline
Close only if the opened panel is the REPL
Rename 'internalConsoleWasOpened' to 'replWasOpened'
web - fix missing ext host tunnel service
Clean up search editor rerun actions
Update colors to use lower opacity colors
more doc
#85884 add doc
ü§òüêû Update debug icon with alternative version
#85884 rename
Use deafult cursor line number hover (fixes #85176, related #86708)
Consolidate styles
resource aware configuration change event
Update menu icons to use icon font #86708
revert change
Update Codicons: add "menu" icon
fix tests
Remove unused types from monaco.d.ts
add and fix tests
Improve rendering of errors within issue reporter
Don't show debug hint on stackframes
Update Codicons: breakpoints and alt debug icon
Removes negative look-behind, not supported in FF
Remove extra check
Prefer startsWith
Use more explicit names
Add inline stackframe breakpoints #86469
Add candidate finding to ports view
fixes #86106
add tests for merge changes
debug: remove-token-colors not needed. Also unverified color should not get priority
Debug activity bar decoration when debugging
Enhance change event to be override identifier aware
debug: introduce debugTaskRunner
enable strictFunctionTypes in VS Code codebase
rename debug API's onSendMessage to onDidSendMessage
Use passive: false when it is intentional (fixes microsoft/monaco-editor#1122)
add tracing to SemanticColoringProviderStyling
add semantic token example folder
rename
Add explicit null checks (fixes microsoft/monaco-editor#1376)
remove inspectValue and use inspect Add override information to inspect
Editors: mru list in editor group not ideal when opening inactive editors (fix #86801)
add tracing for #86771
Use object for `refactor.disabled`
Debounce on type history entries for "files to include/exclude" fields
quit editing mode after editor being closed or hidden.
extract cell and output renderer
Dim the line numbers of context results
Show warning when filing issue report on extension that does not have a GitHub bugs/repository url, fixes #73515
fix minimal wrong spell (#86744)
Update to TS 3.7.3 for building VS Code
Show empty image instead of error in git diff view for newly staged images
vscode-editor-font-size should have units
Strict function fix
extract output renderer
Update checkbox to use icon font check #86708
Allow checking contrast of transparent colors in TM scope viewer.
use built-in queue(), pr comments
promote menu widgets above quick(open|input)
move ext host log chanel contribution to ext host starter
move output channel registry to workbench services
More conservative parse caching in search editor
fixes #85304
Improve searchresult textmate scopes
fix selectorPattern
complete all validations
update distro
optionally load vs da
breakpoints: do not redner candidates at the start of line
debt - migrate more language api commands onto new format
debt - use new ApiCommand for executeWorkspaceSymbolProvider
move breakpoint theming participant to breakpointEditorContribution
remove breakpoint from debug-stackframe class names. These should be unrelated
debug: callStack contribution is now an editor contribution
add overrides information to change event
fix getOverrideValue
check commit
Have types reflect the implementation (fixes microsoft/monaco-editor#1396)
Implement tunnelInformation
debt - apply workbench.fontAliasing only on macOS
implement updateValue in resource configuration service add tests
fixes #83736
Implement makeTunnel for localhost
new inspectValue method
add types for electron.d.ts (#86721)
address some strict function type errors (#81574)
fixes #85690
fixes #86309
update layout in next tick
refactoring with view cell.
Tweak search variable name (from #86619)
update output height dynamically
token classification ext point
customEditor toggle and save/preview keybinds (#86505)
initialize multicursormodifier fixes #86654
Clean up npm script
update yarn lock files
ignore file type recommendations for gitfs scheme
Revert "ignore .git files for ext recommendations"
Tree Guide Indents not showing in latest Insiders
update distro
fixes #86056
remove vs da
:lipstick:
fixes #86445
use same version everywhere
debug context menus update names
Remove useless property
First pass at port API needed for port UI (#85117)
debug: increase opacity of disabled items to pass color check
If the uri can not be resolved we should not spam the console with error, remain quite
#83421 remove semver typings
debug viewlet: fix check for context debug ux key change
adopt extensionKind in product configuration to be array
#84283 use log service to log
:lipstick:
Add a Port... -> Forward Port... for consistency
ignore .git files for ext recommendations
Update grammars
make sure to use a URI when looking up nodes
adopt latest version, https://github.com/microsoft/vscode/issues/86327
Port Rename -> Set Label and select value
Focus on Tunnels View command
Remove unintentional multi-select from ports view
:lipstick:
debt - preserve encoding & mode when saving models to different paths
debt - model reload should happen from model manager
debt - clean up binary editor and event handling
#83421 remove semver-umd.d.ts from src/typings
Applied changes again
debt - watch for all out of workspace resources (support diffs)
Rolled back changes to better see my changes (thanks to wrong configured prettier)
debt - reload any text model that is opened in any editor on window focus
Revert "#84283 use log service to log"
debt - move text save error handler
#84283 use log service to log
fix #85617
Add syntax highlighting to Search Results.  Closes #86241.
Add single and multiline matching
Add initial "file is a block" syntax hilight
Don't show references code lens on const members
Also log error when a fatal error happens
Changed 'shift + click' folding behavior to collapse only inner ranges when current range is unfolded
update dynamic height when list item size changes
Viewlet Refactor (#85566)
use pre for trace back ansi
delete cell
trace with ansi colors
output error
code cell with output
suggest widget in the notebook editor.
#86401 add merge tests
Revert rootPath changes
update input when set input
[Search Editor] Add more TM scopes. Ref #86317. (#86612)
fixes #86534
Don't instrument any test code for coverage
ensure callFrame#url is successful, #86601
Blur causes port 0 to be forwarded
fixes #86506
More dispose tunnel clean up
Nicer fix for making sure tunnels are closed
#86401 write tests for extensions merge
:lipstick:
fix #85422
update loader
debug: fix contexts
First working version of native auto switching workspace theme
custom editors - adopt SaveContext
more console removal,  #84283
remove deprecated code check, jsdoc is what we use elsewhere, helps with #84283
Prevent task error when no folder open
Simple file dialog working for network share
Improve JSDoc
fix  #86276
print warning and telemetry message when resolveCompletionItem is changing the insert behaviour, #86122
failed/skipped test for https://github.com/microsoft/vscode/issues/86584
fix spelling error
fix(extHostProgress): throttle instead of debounce (#86161)
web - add mock manifest to prevent error
notifications - severity width is larger now (for #85617)
remove unused settings definition
windows - set icon when running out of sources
Closing untitled editor and picking "Save" does not close editor (fixes #86561)
fix #86269  enable keybindings merge tests
Option to disable "Failed to save '...': The content on disk is newer." check (fixes #66035)
fix namings
Open editors: briefly shows "1 unsaved" even though auto save is on (fixes #86553)
`"files.autoSave": "onFocusChange"` breaks preview editors (fixes #86500)
code --wait --diff doesn't exit after closing diff if the file is also opened in a non-diff view (fixes #75861)
Create right mouse down listener for cells
Add cells
got rid of duplicate 'Clear Search' text link
Make rootPath undefined in a multiroot workspace, #69335
Don't restart the EH when the first workspace folder changes For #69335
bump version to 1.42.0
Make sure we set the group of the newly created webview during webview move operations
web - remove legacy environment support
Preserve language and encoding when dragging file (normal or untitled) to other window (fixes #85770)
wrong order of next/prev buttons at touchbar (fixes #85453)
update proposed API with my items and remove deprecations
web - no errors when deleting files that do not exist (inMemory)
feedback - position flyout properly
fixes #85148
Persisted data breakpoints are not registered when starting a new debug session
Ensure that the remote explorer isn't losing views
breadcrumbs set override config
use findMatchHighlight as default color for symbolHighlight, #84553
should -> must for #85841
update telemetry
only suppress mouse down for inline diff view.
Renamed command to 'changePeekFocus' and changed KeyBinding to 'CTRL+K F2'
Handle normalized windows paths in resource map
lcd - revert layer promotion for now (#86396)
Allow root of grid to contain single node group fixes #85863
#85858 breadcrumbs.symbolSortOrder per language
Bump node2 for #86411
polish debug console arrows
fixes #84241
fixes #86408
More fixes to tokens adjusting
fixes #78384
Proper fix for #85054
Ignore stats which are selected but are part of the same compact node as the focused stat
Change as suggested by @isidorn
Target type in remote explorer help when dropdown doesn't match connection
fix #86300
[josn] fix wrong schema-schema reference, use draft-07 everywhere
fix #86321
fix #86319
update ref view extension, https://github.com/microsoft/vscode/issues/86125
also update peek icons, #86305
update references view extension, #86305
encoding - only allow to detect UTF8 automatically
Garbled characters when importing multiple folders into the workspace (fix #85870)
fixes #86341
fix #86067
attempt #2 (#86354)
Update css service
Update scm colors in ruler
fix empty group issue refs #85440
debug: restart as extension host if any parent is an extension host
Make default search editor result highlight a bit less transparent. Closes #86185.
Add slight padding to overload count
Use monospace font for overloads
Remove tga from documented supported image format list
[Search Editor] Make clicking take you to the location you clicked. Ref #86190.
Update distro
xterm@4.3.0-beta.28.vscode.1
Make sure we also log the typescript error properties on fatal error telemetry events
Pick up TS 3.7.3 final
Update dropdown styles #86050
Add links to WCAG for minimumContrastRatio
Update high contrast scm diff decoration colors, fixes #86197
Make all search-result editors have no line numbers And make that configurable
remove unused import
Use markdown in terminal contributions correctly
fix #85937: prevent duplicate selections
Make rendererType use markdown enum descriptions
fixes #86034
fixes #85844
Revert "Remove incomplete checks (fixes #85844)"
explorer: not needed workaround
fixes #85938
fixes #83525
fixes #85880
[json] mention setting to change limit
[json] update service
Remove incomplete checks (fixes #85844)
Add 'Documentation' to ? hover in remote explorer
User canceled a download. In case there were multiple files selected we should cancel the remainder of the prompts
Add missing properties (fixes microsoft/vscode-remote-release#1961)
fixes #86103
fixes #86112
fixes #85977
fixes #86111
fixes #86113
fix #86048
update references view extension
highlight root in peek, https://github.com/microsoft/vscode/issues/86128
Remote explorer drop down should respect context keys
increase debug toolbar z-index
Disable view hiding for the remote explorer (#86110)
Make sure custom editor prompt is not instantly dismissed by focus change
Add enum descriptions to scm.diffDecorations setting, fixes #86206
Remove extra line for #86031
Removes codicons support in markdown images
fixes #83523
semantic token test: fix length, skip unknown tokens
remove space
remove tpi template
update semantic test
include link to wiki
update author line
:lipstick:
add test plan item template
[Search Editor] Add option for context lines
Removing test custom editors
Custom editor save as should replace existing editor
Add issue numbers to proposed API
remove unused const -- monaco.
Note image preview's extension kind
Bump distro, microsoft/vscode-remote-release#1835
Keep track of disposeables
Add some inline documentation
remove unused.
Move monaco editor creation into list item tempalte.
update distro and TPNs
Move more functionality into registerCapabilities
Use single editable capability
Populate custom editor save as dialog with current path
Explicitly register for save and saveAs
Dismiss custom editor on rename if the editor no longer matches the new resource name
move cleanup code
[json] update service
[css/html/json] provide replace & insert proposals
Add a real setting for `search.enableSearchEditorPreview`.
minimap - only create char renderer when needed
minimap - do not render decorations outside the viewport
Add minimap.errorHighlight and minimap.warningHighlight theme colors, #82291
publish middle step build artifacts
remove unused imports.
use regular editor to support vim.
Change log name to Sync
calculate line height based on user settings.
allow text selection in markdown
fix typo
for now, disable outline navigation #46153
repl: stronger arros in dark theme
fix tests
Clearer indication of what is input and what is output in debug console
skip tests in all platforms
add theming API
add jsdoc comment for #80688
add another unit test for #80688
update references view extension
Errors from evaluateRequest should be red in the debug console
Sign with prod key
debug: make sure to select configuration when switching workspace folders
fixes #85039
Adopt input box for new port
skip tests in windowa
Tweak strings in tunnel UI
some bulk edit polish
enable tests on windows
fix tests
Add a few more token scopes to themes
fix https://github.com/microsoft/vscode-remote-release/issues/1891
- Get formatting options using text model - Send only bindings to resolve
debug.InlineBreakpointCandidates -> debug.showInlineBreakpointCandidates
Revert "comment out notarization"
Remove areas from the semantic tokens API
Makes padding on custom tree mesage match search message
fix check for config keys, #84678
comment out notarization
Adopt extension kind for those extensions defined as ui extensions. For #85819
#85893 skip merge conflict tests
Custom file loading with correct optimization.
skip tests
Delete unneeded vscode-ripgrep.d.ts #83421
fix compilation
revert change
Support syncing keybindings per platform
fix default keybindings content
remove smart merging
refactor keybindings merge
more smart merging
improve merge by ignoring negared commands
implemente better merging strategy
movw keybindings merge to workbench as service
:lipstick:
add more tests and fixes
Enable keybindings synchronization
remove text model and move to platform
:lipstick:
Refactor merge conflicts computation
add tests for conflicts
:lipstick:
add more tests
implement keybindings sync and merge straregy
Developed commands to change focus between preview editor and references within Peek View
improve filter behavior in compressed async data tree
:lipstick:
add iterator utils
Improve scrolling performance.
optimize file loading
Bump node2 for #81397
some tweaks for inline debug adaper API; see #85544
#85645 display Variables fetch failure message
layout editor with dimentions
Bump node2
remove proposed type 'DebugAdapterInlineImplementation' from vscode.d.ts for now
Activity bar higher zindex.
Add links to proposed terminal APIs
Update extension kind
talk about codicon, not octicon anymore
less aggressive revealing from breadcrumbs picker
debug.inlineBreakpointCandidates
ThemeIcons for menu item only for proposed api users
unit test for #85826
keep links from web view untouch for as long as possible, #83645
Add issues links to tree and task items
remove console logs
update meta comments
release arm64 for stable
move API to stable
address feedback
Adopt input box for port naming (#85766)
support ThemeIcon in custom view
#85036 change extension kind ui to be ui + workspace deprecate string value for extension kind
introduce accessibilitu lines per page
git: use getCommit instead of log
extract className-making in to ThemeIcon#asClassName
add missing "export"
Revert "build: hardcode cache"
use slash to separate "source" from icon name
add codicon support for menu contributions
adopt ThemeIcon and remove iconClassName,  fixes #85673
actually render codicons correctly
rename ICommandAction.iconLocation to ICommandAction.icon
ICommandAction support "uri-icon" and ThemeIcon
bad spacing
fix build parameters
fix broken trees
build: hardcode cache
notarize app
fix missing semicolon
get rid ofunnecessary typecasting
update filtering to filter everything coming into the hygiene task
Consider letterSpacing for dom renderer width calculation
ref - show all references in viewlet and peek, not in goto refs
finalize debug uri API; fixes #79228
adapt to proposed API
extension API for implementing DA in extension; see #85544
explorer: use textFileService
textFileService.copy
debug, explorer buttons: max width so they look better
debug: go back to old bug icon
debug: start view polish
remove signed in notification
trigger suggest via alt+esc on macOS, fixes #85643
fixes #85158
:lipstick:
Peek Call Hierarchy goes into peek submenu
adopt latest ref-view-extension
don't return undefined from _executePrepareCallHierarchy
fixes #84569
debug: show restart only on hover
#85036 Do not allow installing ui extension in web
debug: Run Without Debugging in main menu
Port UI (#85603)
Simplify onEnter calls
Introduce and adapt CompleteEnterAction
Commit missing output file
#85036 do not enable ui extension in web
Update html/css LS for new data
Convert editor.autoIndent to 'none' | 'keep' | 'brackets' | 'a‚Ä¶ (#85727)
Adopt EditorAutoIndentStrategy
Return 404 if file is not found on local server
Include auth.css file in out build, fixes #85695
Move Linux package build into new step
Sign rpm before publishing
debug: fine tune start experience
Adds codicons to custom views (#85625)
Changes to vscode-icon://codicon/ format
wip
Update schemas (microsoft/vscode-remote-release#1155)
grid: disable sash snapping on edge of grid
grid: replace box calculation in getViews
grid: fix missing box calculations
splitview: use TLayoutContext gridview: propagate top, left in layout
add issue links to API proposals
debug: start without debugging -> run
debug: rename viewlet to Debug and Run
debugUx context
debug start view polish #84677
grid: remove orientation from layout call
debug: If there is an error when fetching breakpoint locations just do not render them
Implement Unicode's grapheme cluster boundary rules
splitview: start, end snappingEnabled
fix #85671
fixes #85514
fixes #85573
Switches to vscode-icon scheme & removes regex
#85210 change to 30s
fix typo: consecutive-word duplications
feat: region folding for perl5
Update CSS Language Service
Make sure we dispose of webviews in correct order
Pull in the latest grammars
Adds codicons to hovers (#85580)
[Search Editor] Make file result blocks symbols
fix(aria-expanded) on submenues add aria prop (#79775)
[Search Editor] Add completion items for query construction
Allow remote explorer help+feedback to filter based on connection
labels: authority is case-insensitive
callstack view: fix context passing
fix #82610
#85036 Support multiple extension kinds
:lipstick:
fix #84425
fixes #84915
fix build
fixes #85569
#85036 extension kind ui should run only on ui
Adds mailmap
Make sure we normalize paths before sending them to tsserver
Mark parameter suggestions as variables
Show constants as normal variables
Use enum member completion type
Add .cjs to known JavaScript file extensions (#85460)
Make "open in search editor" keybinding only apply to mac
Add search-editor specific find match highlight tokens
allow spaces in search result file names
Sync custom editor edits
Working on sharing models for same custom editor
Trying to hook up background to implement custom editor rename
Update TS insiders version
Working on hooking up custom editor saveAs
Remove "Settings editor preview" tip from settings GUI color token descriptions
Revert "Replace checkbox icon with icon font"
Add extension build scripts
quick fix (#85506)
Try new folder path
Update log
Update drag icon
Update list filtering to use icon font
Remove dead code
Replace checkbox icon with icon font
Update icons and remove unused svgs
update API command for #85533
don't over-encode, do try to decode, fixes #85521
Log paths
Include backtick in terminal word separators
Correct auto-complete
Rename with arg command id
Rename command
Set rpm path for sign
editor: fix word wrap settings in simple editor
improve editor padding
Setup ESRP code signing for rpm
editor: fix word wrap settings in simple editor
fixes #85456
fix dirty diff styles
fix #84906
remote inspect-port, workaround for #85490
Can only debug once with tasks 0.1.0
Add re-run search editor search action
Remove multi-match peek UX.
Update distro
xterm@4.3.0-beta.28
xterm-addon-webgl@0.4.0-beta.11
Used FileMathOrMatch for putting multicursor for search result
Add initial search editor implementation (#85424)
Allow trailing commas in jsconfig.json, too
Improve Monokai theme for markdown files
Accurate description
Rename setting to 'debug.console.closeOnEnd'
Add parent path to git clone command
Update distro
Support minimum contrast ratio in terminal
xterm@4.3.0-beta24
Show JS/TS References Code Lens for Inner Functions (#84689)
minimap: prebake small fonts to reduce runtime perf
Strict function work
Better name
Extract out common status bar entry management code
Make previewManager implement WebviewEditorProvider directly
Remove test editing code from preview
On mark a custom editor non-dirty if save is successful
Working on hooking up revert properly for custom editors
Don't encode image resource URI twice (#85355)
ESC to exit mirror tag position mode
Remove textedit when adding space from ending tag
Update distro
Extract auth urls to product service
Show notification on successful sign in
Use local server for auth so that a completion page can be shown.
remove unused focusBody
debug: introduce start view
:lipstick:
#85178 emit the right visible indices
Add workarounds for bad tests
Clear out existing semantic tokens when the theme changes
Cache styling information via a hash table
adjust peek call hierarchy menu
Introduce a cache object for styling per semantic coloring provider
Revert "no "Change All Occurrences" when there is a rename provider"
Avoid having providers change their mind about the legend after the fact
use one style for unexpected outcome, disable by default, #85376
Support inserting at an index in array
fix sync settings setting
fixes for theming semantic tokens
fix missing entries from global go menu
remove getTokenClassificationFromString
fix tokenStyleResolving test
fix compile errors
alternative action cannot be action itself, #73081
add alternative command settings, #73081
Revert "simplify how alternative commands are defined, #73081"
connect ModelSemanticColoring to Theme
simplify how alternative commands are defined, #73081
restore insertHighlight-setting, #85376
remove smoke test for find ref, rename, goto, and peek, #85377
Use inspect-port=0 for automatic extension host profiling,  #85328
fix pattern
simplify how alternative commands are defined, #73081
Rebuild with new electronv6.1.5 (#85357)
Documentation for webview editors
Don't convert json edit data tostring
Use chaining
Remove mime extension point
Use InstantiationService
codeActionWidget -> codeActionMenu
4px margin for home indicator
Update lightbulb gesture clicking.
exclude system status bar from visual viewport in standalone mode.
fixes #85284
test-SemanticColoringProvider
Update "Go to file" icons to use icon font
wip: scm input editor
Update debug icon to use alternate version
#84045: Add "debug-restart-frame" icon
Update codicons: add debug stack reload and debug activity bar alternative
scm: hash repo pane ids
debug: restart frame on hover
Reverted '-' to '*' and removed space
git input box shouldn't handle comments
cleanup denodeify from git
use token color map in textmate service
colortheme: style metadata tests
fix caches
debug config manager: more asyn await
fix ordering #85218
isolate askpass
refactor
Allow to run our unit tests with mocha (where document.queryCommandSupported is not defined)
prevent vscode-api-tests from running in node.js
remove obsolete comment
make '${file}' equivalent to TextDocument.fileName
Don't always use the replacement character in minimap
Remove no longer necessary minimap font creator
add "Peek" sub menu, #85218
simplify how editor commands/actions register menu entries
make the internals fit for #9827
:lipstick: better strict property init
Revert "Extend disposable for MenuService"
use token color map in textmate service
colortheme: style metadata tests
Add appRoot to windows protocol handler
fixes #83906
rename user data sync settings
chore: Bump electron@6.1.5 (#85266)
workbench theme service: provide tokenColorMap
Remove that ui extensions can run on both local and remote sides (#85036)
Use ILogService instead of console (#84283)
update distro
Remove .d.ts from typings folder (#83421)
Remove .d.ts from typings folder (#83421)
Switched to fixed deps for vscode-textmate
Remove .d.ts from typings folder (#83421)
#85216 always ask sync options
remove data uri from git
Move __GDPR__FRAGMENT__ out of .d.ts (#83421)
Remove unnecessary telemetry
update distro
remove leftover console.log
Adopt latest vscode-textmate (fixes #84401)
debt - remove data uri inputs (#85203)
support auto save on focus lost for all editors (#84672)
Remove custom editor support for data uris
Remove data uri support for custom editors
Changed instances of Code to VS Code
Make sure we don't include disabled actions in the standard light bulb menu
Hook up basic alert of why a code action could not be applied
Add CodeAction.disabled
don't activate vscode-api-test on debug; fixes #85230
ignore native checkbox in breakpoints view.
Adopt generic mouse events for debug toolbar.
Avoid mouse down and touch conflicts.
Tap handler for noTabsTitleControl
rename splitview panels to panes (#85166)
fixes #83753
fix Debug console stop listening output
cange condition on outline tree refiltering to bring it in line with new OutlineFilter implementation
restructure variable resolver
web worker: support F5 debugging w/o launch.config
use undefined over null
editor - move auto save to its own file (fixes web to start)
Allow null (microsoft/vscode-remote-release#1201)
Watch view: reveal newly added expression
change setting to `editor.suggest.insertMode`, highlight in editor when suggestion doesn't what you expect, #10266
highlight future replace range, add setting to disable, #10266
Update devcontainer schema (microsoft/vscode-remote-release#1201)
Don't respect escape chords in terminal
fix #85204
fixes #85205
#85216 First cut
git: isolate ipc env
fixes #84295
fix compile
Use &#160; instead of &nbsp; to support XHTML (fixes microsoft/monaco-editor#1492)
editors - put the auto save on focus lost observer into a central place
:lipstick:
git: extract ipc
editors - move a bit of auto saving into the editor service
fix extensions watch build: should also copy non-ts files
Finalize tree view title API
Correct spelling of Implementation
git: better uri parsing error message
git: use querystring instead of JSON for uris
Update PHP grammar
Make typescript problem match watch patterns less locale specific
fixes #85188
git.publish should not ask if only one remote
Sampe height as QuickOpen (fixes #85147)
fix git commands
clarify prepareRename,  #85157
:lipstick: gesture handling in tabs title
fix #85180
editors - no need for working copy service getDirty()
editors - polish readonly handling
Validate code action range before passing it to providers
Properly hook up dirty indicator for customEditorInput
Bump node-debug
fix: fix typo (#85090)
add filter to git hook
explain specific usage of e.affectsConfiguration
implement language specific overrides for outline config options with corresponding filteredTypes
switch to using TextResourceConfigurationService to account for configuration overides when reading breadcrumb configurations involving filteredTypes
fix updating auth token status
get store details from settings
Double tap support for editor.
Add double tap support for touch events.
Remove suggest input transparency to fix #85099
update distro
Better time logging for js + markdown
Add HTML rename for #47069
Correct Terminal.processId API to include undefined
Enable Shift-Insert to paste primary clipboard on Linux, fixes #36170.
Clarify statuses for AuthTokenService
update distro
Allow to edit the left hand side of a diff editor if possible (fixes #4180)
explorer: if no file is focused respect the selection
forward save to embedded editors if any (#38317) (#85139)
wip: comment out git data uris
files - improve readonly handling
git api: expose toGitUri
provide gitfs resource label formatter
compile jsdoc comments, #43768
more tests
:lipstick:
context - rename saveable => readonly
open editors - remove unused method
:lipstick: sample extension
Find model by resource
change settings sync store to include name and account
:lipstick:
check timeout on extension host, blame extension when exceeded, #43768
clarify that you cannot modify documents/files before that are created, #43768
add mock debug to web sample
simplify AsyncEmitter usage
Make the extensionKind in product.json have bigger precedence than the extensionKind in the manifest
do not listen when not enabled
adding configurable timeout, #43768
search viewlet: fix subpixel aa in panel
Use icon font in remote explorer (#85053)
more jsdoc, clarify that deleting/renaming a folder sends only 1 event, #43768
improve build resubmission perf
Reduce memory usage: Do not cache TextDocument.lineAt (#84940)
fixes #85080
explorer: fix right click
custom trees: fix subpixel aa
settings: fix subpixel aa
search viewlet: fix subpixel aa
check for disposed lenses before updating them, #85093
scm: fix subpixel aa
remove console.warn for macOS
#79519 filter non visible views from add and remove events
add tests  #79519
fix #84973
notifications - fix broken animation
editors - reuse options
editor - add and adopt revert()
update distro
Pick up new TS insiders
Mark param readonly for strict function types
Update js/ts grammars
add language-specific overrides for breadcrumb settings
Make debugging independent from node APIs; fixes #85076
add port to vscode launch.json for pwa debugger
strict function work, #81574
Re #84715. adopt panel background in comment list.
Adjust padding for when there is no title message
Adopt icon font in dialog
Disable breakpoint hover hint on Safari on touch screen.
Trying to hook up basic save for custom editors
Rename Initializing state to Refreshing in AuthTokenService
fix clipping compact menubar
Add 'Initializing' status to authTokenService
Update editor action icons to use icon font
Update Codicons: add "close-dirty"
lcd - electron is also chromium
Don't use locale strings
Update Codicons: circuit board and symbol string
web - add browser CSS classes and make layer promotion Chrome only
notifications - add background to layers that potentially translate3d
#84715 AA fix for trees
Pick up initial dimension (#84734)
Set list background (#84715)
background color for notifications (#84715)
Add option to skip sorting QuickPick items (#73904)
Move sortByLabel to proposed API
Add optional sortByLabel to QuickPick to control whether to re-sort items when query changes
editors - tweak readonly usage
define symbol highlight colors which default to range highlight colors, #84553
fix build
reword debug API comments
fix launch.json
some more jsdoc, #43768
more options for #84715
some more API tests for creating/deleting files, #43768
list/tree: fix common styles
List, Tree: Make sure sub-pixel antialiasing works across all lists and trees
fix more compilos
Revert "revert completely"
add some tree styles, #84715
editors :lipstick:
fix compile error
fix my tests
tweak events and add some jsdoc, #43768
build
simpler edits collection, #43768
allow workspace edit in all will-events, #43768
revert completely
address #84818 on master
workbench list: overrideStyles
files - mark editor as readonly also based on model knowledge
explorer: fix subpixel AA
list, tree: cleanup style application
files - respect editor.isReadonly() better
Semantic exploration (#84788)
Split TS changes to separate PR
Adjust incoming areas with changes that occurred in the meantime
Fetch semantic tokens if a change occurs while the request is running
remove dispose workaround and improve dispose logic, #84726
Listen to content change events while semantic tokens are computed
create code lens content widget only when visible, #84726
use view zone visiblity hint instead of context widget hint, #84726
Avoid having very small delta areas
explorer compressed: fix rename
yarn web :lipstick:
 Make local and remote ports configurable (#84958)
files - put explicit save reason
Debug Console: Use openExternal() to open URIs in the click handler
update settin
rename setting
fix #80835
:up: distro
fix #85007
polish: fix typo in setting task.problemMatchers.neverPrompt (#84959)
Take both language id and token type from syntactical tokens
editor - more tests for save/revert
fix cached build
editors - fix issue with replacing untitled
untitled - fix save with associated file path
Resolve cwd provided as string in getCwd
Only set _extensionTerminalAwaitingStart when deferred start is needed
cleaner drop feedback
working copies - properly implement save, saveAs, saveAll (#84672)
fix invalid CSS that blocks build
Add cursor change after revert or stage changes
#83646 Webview: Cannot load resource outside of protocol root", if .md source is an network share (#84702)
Wording
Clairify source actions not showing up in lighbulb menu
Hook up very basic undo/redo for webview editors
:lipstick:
rearrange z-index in titlebar refs #84806
fix menu dismissal click in titlebar
Re #83993. Do not mess up with composition.
Revert "Use MSAL library for auth in web for settings sync"
Working on hooking up undo/redo for custom editors
Inline webview command settings
Use undefined instead of -1 to indicate that there is no size yet
Make sure we call update after the binary size of the image is computed
Remove unused import
Use const enum for types
pointer events check is not necessary
limit pointer events to ios
Don't send TS Server open requests if we open then quickly close a resource
separete platform check and pointer events.
remove erroneously added package
Use MSAL library for auth in web for settings sync
Simplify color tokens for breakpoints
debug: reload the extension host regardless of `supportsRestartRequest`
More changes for #81574
custom editors - support simple save()
explorer: improve context menu anchor position
changes for #81574
Recompute whitespace entirely in case of larger changes (#84726)
Remove _whitespaceId2Index
Avoid allocating for getWhitespaces() call
More type reuse
Switch to objects in LinesLayout
Move the change accessor down to LinesLayout
explorer: improve context during multi select
revert - operate on groups and pin editor on revert
explorer: right click context
explorer: improve compressed hover feedback
allow dropping into compressed folders
list, tree: allow no feedback
custom editors - wire in "Revert"
remove unused method
:lipstick:
list, tree: dnd.onDragEnd
:lipstick:
fixes #83387
experiment with showing a highlight when going to a definition, #84553
workspace - do not allow workspace files without .code-workspace suffix (#84818)
fixes #84810
custom editor - wire save/revert into custom editor input
working copy - introduce first save/revert semantics  (#84672)
remove console.log
explorer dnd ignore last
wip: explorer compressed dnd
:lipstick
explorer: respect compressed navigation controller
explorer: actions should get context from explorerService
remove the marketplace azure search cache as it is enabled by default
compressed explorer: drag from
Diff editor closes when closing left hand side editor in other tab (fixes #51039)
Some strict property init #81574
editors - cleanup dirty handling on close
CallStack: keep showing the session if we were in a multi session view
editors - :polish: methods
Move ViewZoneChangeAccessor to ViewZones
editors - more explicit editor view model for diff editors
types
Support for `--force-renderer-accessibility` Electron argument, needed for Linux accessibility. For #84833
enable strictFunctionTypes in VS Code codebase #81574
:lipstick:
allow $openUri to accept URI and string
fade out separators
:lipstick:
Move tests to use LinesLayout
Revert "allow $openUri to accept a URI and string, adopt consumer but keep the API as is"
allow $openUri to accept a URI and string, adopt consumer but keep the API as is
extract openers
Make sure tha allViews are ready in remote explorer
lcd - put tabs on their own layer to enable proper rendering
Revert "add URI.from(url)-overload"
fix #84787
code lens must not be empty... #84726
use shared CSS-style element instead of repeated inline styles, only access dom when having contents, #84726
Add strict function type task
Use `create` functions for more descriptors
do not allow touch to scroll on body.
window.PointerEvent
Safari on macOS has PointerEvents as well ...
Convert SyncActionDescriptor to use a `create` function (#84878)
Global mouse move handler should understand pointer move.
Allow _ in markdown word definitions
Don't return js/ts fix all for empty edits
Reduce bottom margin on activity bar items
Better logging
debug: add pwa prefix as an extension host debugger
fixes #84859
fixes #84806
Make sure we always reset bufferSyncSupport when the TS server is started
ClientArea. use visual viewport only on mobile.
Visual viewport only for iPadOS
add styles to style.css
Update css LS
remove unsed issafari
Do not hide context menu when relayout happens on iPadOS.
Remove double search on glob enter
Flip triggeredOnType logic
fixes #83736
Remove gray attributes in launch.json since they are confusing
:lipstick: when disposing all lenses, #84726
drop all view zones via setModel(null) to make closing peek fast, workaround for #84726
:up: sudo-prompt@9.1.1
explorer: compressed navigation home and end
async data tree: fix missing disposeCompressedElements
title - seems to be broken when put on separate layer
peek - fix rendering glitches with meta title
wip: explorer compressed navigation controller
lcd rendering - also promote sidebar to own layer
Update codicons
openExternal uses resolver for URI and string
add type bindings to minimist (for #83421)
simpler markdown link handling
use string in markdown rendering - in most cases
tweak proposed debug uri API
use string instead of URL, help with IE11 and with unwanted URL magic
lcd rendering for title (fix #84806)
lcd rendering - put parts on their own GPU layer
Adapt height (fixes #84734)
cleanup
update references viewlet
:lipstick:
Update terminal.contribution.ts
Update terminal.contribution.ts
explorer: show active folder
enable custom button in multiselect
Configure sync options while turning on
move error handling
Introduce signing in status
lcd - put title part on own layer
terminal link handler using URL, #74604
uri - don't fail with invalid percentage encoded parts
update docs on fs provider for mtime (#84802)
editors - log errors when restoring editors
validator must support URI and URL, also extract utils for re-use
editor link detector uses URL
fix typo
gitfs: fix mtime
IOpenerService#open accepts URI and URL
Update commands.yml
outline nav - only bind keys on mac
IOpener must accept URI and URL
fix multiple name highlights in iconlabel
add URI.from(url)-overload
Remove gating for inMemoryResourcePrefix
debt - remove sudo-prompt typings
editor - getName() is required
dialog - extract confirmSave to file dialog servie
Remove unused import
Use optional chaining
some mirco optimizations for CodeLensWidget, #84726
Always show the overload count, even if there are more than 10
Update breakpoint glyph name in automation test
Add data & unsupported breakpoint color tokens
Remove unused files
Add icon classes to debug tooldbar contributions
Bump node-debug
node2@1.41.0
Removes calc's
Aligns with bash version
Add breakpoint color tokens
For #81574 (#84669)
Update distro
Render workbench inside visual viewport.
Add action to toggle search on type
Only delay progress indicator when triggered on type
Revert "opener service uses IOpener for its built-in openers"
working copy - allow to get dirty copies
textfiles - inline confirmSave
:lipstick: change labels
wordings
opener service uses IOpener for its built-in openers
proposed API for creating debug uri
files - do not indicate document edited when auto save is on
fix tests
explorer: hack context menu actions
Another nit in settings comment
explorer: fix rename
explorer: compressed hover feedback
wip: icon label supports multiple labels
update reference view extension
Show only one configuration sync action in global activity
fix #83013
Show number for global activity actions that has number badge
Show turn off action
proper sign in flow for settings sync
remove optional argument from iconlabel
fixes #84658
debt - add more configuration related things from textfiles to files config service
show short highlight
Enable sign in only when sync is initialized
enable auth token service
Replace layer hinting using `will-change: transform` with `transform: translate3d(0px, 0px, 0px)` (#84214)
simpler navigation
Add isEntryVisible api to statusbar service
better fix #83013
Revert "Only QuickNav if there was a keyDown since shown (fixes #83013)"
working copy - reduce dirty listeners and support "save all" action enablement (#84672)
fixes #83726
Improve output in case of errors and generate an analysis folder with the source content (for easy diffing)
Make type relationships more explicit to help the tree shaker
Make implements type relationships more explicit to help treeshaking
Improve error reporting during treeshaking
Take typings from tsconfig.monaco.json
remove more output
open editors - adopt working copy service and track unsaved properly (#84672)
fix console.warn
fixes #84455
Move remote explorer help+feedback into a ? button
change comment
Update title for single views (#84579)
Revert "web - workaround new window issue with pwa"
Use log service instead of console.log in extHostwebview
web - make sure adblocker do not prevent startup
build - compile leftover
Prefer using vscode.workspace.fs over node fs
Timebox the TSServer request used in the JS/TS task provider
Clarify \n\r in pseudoterminal write
Added force-device-scale-factor to command line args
Reduce search flicker. (#84547)
Remove test fixtures for jsdoc
Remove jsdoc markdown injections
Adding setting to enable a test command for making a fake "edit" to an image preview
update yarn gulp esm bundle script
Replace typings file for windows-process-tree with @types module
CI for Monaco Editor compile and bundling.
Hook up CustomEditorModel to workingCopyService
Update webview fallback versions
Better fix for disabling pinch to zoom in a webview zooming the entire editor in chrome
feedback
revert changes - use setting for enabling the feature
Don't try rendering TGAs in the built-in image preview
Support excluding subsets of code actions for codeActionsOnSave
Add explicit type on experimental fixAll provider
Rename activity bar active focus border color token
Add activity bar active border focus color
Clean up activity bar size and margins
Show sign out command for settings sync in gear menu
Remove some duplicate configuration node (#84070)
Highlight a few other types in jsdoc comments
Use active foreground when inactive (fixes #72952)
Nits in settings comments
honor outline.showXYZ filters
web - workaround new window issue with pwa
web - fix problems to show up from yarn web
debt - allow extHostSearch in common (#84109)
encoding - still ignore 'ascii'
files - fix tests properly
fix indicator when auto save is turned on
files - add auto save config service
Update codicons: fix debug stop icon
Add padding to debug toolbar dropdown
- Expose visibility change event in status bar - Listen to the event to show or hide status entry by default - Register a command to show current problem status entry
update references view extension
#20183 move current problem contribution to editor status
Add more spacing for dropdowns
workbench editor model: getResource => resource
fixes #84598
do a "--inspect-brk" if being asked to do so; fixes #83583
fixes #83757
introduce early version of working copy service
Backup and restore last used remote for explorer
always send exeExtensionRecommendations:alreadyInstalled
Simplify switch event for remote explorer
Only update visibilities when visible (#84125)
fixes #83521
fixes 83483
move navigator to outline
debug: remove debugMisconfiuration
fixes #84573
continuation of #84201
one more fix for #84201
use isFile-info instead of defaulting to FileType.File, fixes #84524
Zen mode react on silentNotifcations setting change
select containing element before selecting next/prev
often set selection range for TS document symbols, #84576
Only QuickNav if there was a keyDown since shown (fixes #83013)
fixes #83478
files - introduce IFileStat.isFile() for #84524
files - implement ctime properly as btime (fix #84525)
debt - move tests
fix extension viewlet shift
add log tracing to main thread tree views
catch tree rerender errors
Use log service in exthosttask and exthosttreeviews
fixes #83465
Update c++ grammar
Use outline (fixes #84062)
encoding - more tests
Support utf-8 encoding guessing (#84504)
fix #84516
Update visibilities before computing layout (fixes #84125)
Enable `strictPropertyInitialization` (fix #78168)
:lipstick:
debt - adopt windows-foreground-love types
fix Chinese system input in iOS 13.2
warn user if we try to rename the active terminal when none exists
Remove backreferences warning (#84092)
Don't include optional editors in diff view selection
Removed undocumented setting usage
:lipstick:
Make sure synchronized buffers are reset when tsserver restarts
Make searchConfig getter private
First cut of OAuth in the AuthTokenService
remove unused isWeb
Move keyboard feature detection into caniuse.
implement/fix navigator
Webview strict init #78168
fix: don't use appendArgument to add switch values (#84320)
navigator work
Reduce typings files (#83421)
Change remote explorer to use drop-down UI. (#84482)
opener - encapsulate external opening
Reduce typings files (#83421)
Reduce typings files (#83421)
move navigator logic
fixes #83396
styling in settings and themes
use LogService in extHostStoragePaths and extHostRequireInterceptor, #84283
add controller, add navigation functions, add commands
debug: enabling breakpoints should set them to activated
#78168 Strict null check
disable test custom editor for now
use LogService in extHostStoragePaths and extHostRequireInterceptor, #84283
peek - use meta title to classify contents
use LogService in extHostLanguageFeatures and extHostMessageService, #84283
fix #84352
fixes #83998
peek - fix bad ident provider
Update commands.yml
#84283 use log service
#84283 Use log service
peek - fix open to side
- wrap only right items. hide left items on overflow
fix tests
explorer: enable compressed folders by default
fix typo
throw error when calling getWordRange with invalid regex
use LogService in extHostDiagnostics, #84283
use LogService in extHost.api.impl, #84283
user LogService in extHostDecorations, #84283
Update commands.yml
Update commands.yml
fix build
:up: jschardet (for #83421)
fix-84080 added cntl-shift-c and cntl-shift-v to terminal
ensure command is in proper camelcase
implement/register RenameActiveTerminalCommand
xterm-addon-webgl@0.4.0-beta6
Update distro
xterm@4.3.0-beta17
Use experimentalWebgl, never set rendererType to webgl
200 -> 2 * EXT_HOST_CREATION_DELAY * 2 remove dead code
Remove pointless code
Add the signature to the type
Update md version
Support experimental webgl renderer
Update distro
xterm-addon-search@0.4.0-beta4
xterm@4.3.0-beta11
Avoid unexpected value changes
Add builder-method for snippet choice
Improve scroll sync for nested markdown lists
Don't force refresh the markdown preview's html when changing the active document
Remove duplicate call to dispose
Don't dispose of code actions before they are applied
Don't drop current code lens promise if the current resolve promise has changed
reduce the min height this reduces the window to the smallest size that can fit a dialog
Update spacing
shorten buttons in link protection dialog
Make sure buffer sync reset clears pending diagnostics
Make sure we don't try calling a cached `getErr` on a closed resources that are in the getErr queue
Update breakpoints to codicons
fix GDPR annotation
Use types module instead of custom typings for applicationinsights
Remove unneeded telemetry log
Make codeActionOnSave a resource scoped setting
Add experimental webview editor based markdown preview
Remove forceUpdate property
Try to redeuce duplication for create vs refactor
:lipstick:
Use set to store preview instead of array
Extract DynamicPreviewStore
Rename and move types around to get ready for webview editor based previews
:lipstick:
Code review comments
Restore pre 1.40 way of setting disable-color-correct-rendering in electron (#84154) (#84269) (#84296)
Remove unneeded typings file
derive class name from key, #81467
remove default command for list.scrollLeft and list.scrollRight
Revert "simplify decoration rules and add trace assertion for when things go south..."
Improve integration test output on Windows (#84239)
Revert "Allow enablement checker to run when there is no searchWidget (happens when initializing search view in panel)"
Allow enablement checker to run when there is no searchWidget (happens when initializing search view in panel)
fixes #84274
Handle case where the text model is disposed while semantic tokens computation takes place
Revert "remove windows-mutex from typings"
simplify decoration rules and add trace assertion for when things go south...
remove windows-mutex from typings
goToLocations supports defining peek behaviour
#20183 Show current problem in status
:up: native-is-elevated
fixes #84201
update references view extension - https://github.com/microsoft/vscode/issues/84222
Delta encode single semantic coloring areas
Do not evict newer semantic tokens from cache
don't cache a live copy but a copy which disables (disposed) commands, #84153
fixes #84225
failed to run on chrome browser with 'yarn web' (fix #84198)
add logging for convertered commands #84153
make filter labels descriptive
:lipstick:
remote - resolve remote name, not authority in title variable
Polish dialog padding and spacing
Use 'as const' instead of readonly class object
Use const enum
Use constant string types for json schema
Aggressively cancel code lens requests when the resource changes
Hookup experimental undo for customEditors
Better name for codeAction types file
Extract CodeActionKeybindingResolver and add tests
:lipstick:
Add rawValue for Lazy to play nicely with optional chaining
:lipstick:
Forward onEdit from webviewEditor to mainthread
Update extensionsActions.test.ts
Update Codicons: Update tree + list icons
Separate Copy and Paste feature detection.
Make pattern inputs also trigger as you type (#84148)
make trusted domain dialog more readable
Polish markers filter button
Center icons
Can I Use
Update Codicons: rename tree list modes, add filter funnel, center sync
chore: bump vscode-nsfw@1.2.8 (#84139)
Clear search results when input is cleared
Don't use Set ctor
Towards diffing a single area result
Implement identity based diffing for smart semantic tokens providers
keep unset attributes as undefined
debt - remove typings for sqlite3 (for #83421)
no "Change All Occurrences" when there is a rename provider
update references view
Do not split semantic tokens that are on the same line onto different areas, i.e. area overlap is not allowed
Make condition more readable
Also include keybindings for organize imports and fixAll in the source menu
Extract command ids to constants
Show user code action keybindings in the lightbulb menu
Mark keybindings arrays as readonly
Split semantic coloring results containing many tokens in a single area
:lipstick:
implement filtering by marker type (#83797)
Forward SemanticColoring disposals to the ext host
Address typo in command identifier for installMissingDependenc‚Ä¶ (#84056)
#83421 Remove yazl and yauzl typings
Clear semantic tokens in case of errors/empty results
Fetch semantic tokens only after the document has been sent to the ext host
API tweak from the standup discussion
Add some comments to the API proposal
Group all filters under single filter action
implement api commands for call hierarchy, #83274
smaller footprint
Emit event when calling clearSemanticTokens
remove double action
Use language id from syntactic tokens if it is not defined in semantic tokens
wip: git fs provider
Implement acceptInsertText
fix tree indent guides position :shrug:
fix monaco compile
remove duplicated NodeRequire declaration, #83421
Wrap up _acceptDeleteRange
remove v8-inspect-profiler typings, #83421
upgrade spdlog
fix #83975
start growing  when width is big enough
fix #84066
chore: Bump electron@6.1.4 (#84089)
build: check quality frozen state
debt - move fileSearchManager to common (for #84106)
Revert "Pick up new spdlog version"
Pick up new spdlog version
Show which specific type of requested code actions / refactorings are not available
Create CodeActionKind.None to explicitly match nothing
Docment remaining known js/ts refactorings
Render code actions contribution point in extension contributions
Add coalease helper function
Documenting more js/ts refactorings
Document extract constant and extract type alias
Document extract interface for js/ts
Updat codeActions contribtions schema based on https://github.com/microsoft/vscode/issues/82718#issuecomment-550468267
Make "alwaysExpand" the default search behaviour. (#84087)
Remove extra step from readme
Add prepare script to package.json
Correct useConpty usage
Remove node-pty types
Remove xterm.js types
Make Search All Files search as you type (#84004)
Refactor link protection test
remove old event
Code action intellisense in the keybindings JSON editor
Add code actions contributon point
fix meta title node
add generic go to locations command that allows to implement go-to-something before us API-ifying things, #83752
explorer.compressSingleChildFolders
debt - only show action for release notes if having a url for it
yarn web - do not have root in memfs
increase min-width and padding to make room for the additional boxes
web - fix decoration sample
debt - untitled editor => untitled text editor
First cut at acceptDelete
tweak preconditions and remove bogous keybinding
use goto, not peek references as fallback #83752
custom editor - more test tweaks
adopt merge
custom editor - first cut playground
ignore declaration when references return only two results, #83752
polish peek flow, #83752
bug - don't close peek when changing editors, #83752
async compressed tree: delete nodes when parent becomes stale
collapsed async tree: handle staleness by clearing everything
:lipstick: web api
compressionEnabled option
Web: Support to open VS Code on a file for extension development (fix #83997)
compressed explorer: fix top level refresh
Document problemMatcher.fileLocation="autodetect" configuration option (#83803)
reduce diffs
Center icons
Reapply using array.isEquals instead of _primitiveArrayEquals
Use optional chaining in a few more places
FIx #83987
[html] update to TextDocument and switch to incremental
[css] update TextDocument & use incremental sync
[json] adopt TextDocuments and use incremental sync
Pick up TS 3.7 final
Render warning and error decorations in the minimap, fixes #82291
Render diff decorations in the minimap, closes #20934
remove peek declaration, add "go to references", "go to decl" to global go menu, #83752
tweak names, assign Shift+F12 to go to references (from peek references), #83752
update references view extension
add setting editor.gotoLocation.multipleReferences etc and deprecate editor.gotoLocation.multiple #83752
Implement Terminal.creationOptions API
Pass through undefined exit codes
Support Terminal.exitStatus API
F12 navigates peek view results, #83752
debug - use hasWorkspaceFileExtension() as helper
Semantic tokenization
First pass at resolving task definition and passing back to custom execution (#83764)
support workspace files for extension development; fixes #83922
web - support tasks in "yarn web"
Change task finding to not depend on there being task providers
web - better sample and problems support for "yarn web"
More tweaks to the context menu
distro
Tweaks to the contextmenu: - add Go To Implementation - remove "Peek" commands
run peek references when running go to definition on the only definition, fixes #73081
:lipstick:
fix type check errors
debt - strict init breakpointsWidget
empty commit
debt - merge goToDefinition and referenceSearch into gotoSymbol, extract peekView
web - enable DND support for Firefox (fixes #83746)
update distro
remove dependencies to documentdb
remove unused build file
update sync-mooncake.ts
web - hide scrollbars on firefox
Update build to use node.js 12.x (#83967)
textfiles - introduce an option to read without stream too
change names to inserting/replacing #10266
:lipstick:
move css to media-folder
move commands to references controller
Revert "Update css LS for #3145"
Documenting thoughts on direction for custom editor API
Remove localResourceRoots
Trigger completions on backticks in JS/TS (#80234)
Update cgmanifest.json
Send data directly to appender in web telemetry, without formatting
Update codicons
Update css LS for #3145
remove any mention of mod+hover
fixes #83912
isTouchDevice
üßπ
Allow dropdown chevrons to be clicked
Pick up TS 3.7-rc
some tests for working copy events, #43768
make find references a generic go to "definition" command like other symbol navigation commands
use the references model throughout go to definition
web - fix single folder api tests
distro
Update grammars
use sprocs to publish builds
tests - add an integration test for editor contents from workspace file
Pull caption from product.json (#83844)
files - increase large text file for tests
:up: distro
remote - adopt readFileStream capability
files - speed up reads and writes
editor - better error message for large files
Prepare for strictPropertyInitialization (#78168)
files - :lipstick: error condition
show progress message
remove warning
timeout before operations after 5sec
Handle already resolved task variables in dependent tasks
debt - declare more fs provider capabilities
Improve markdown scroll sync on  fenced code blocks in md files
Update deps
Add basic content to fake.html to fix firefox complaining about encoding
add reload window button to reconnection dialog
fixes #82577
Mark `resource` as readonly since it is never mutated
Add max width to extension page
Limit width of release notes
debug - fix active line for column-free breakpoints not be decorated correctly
Clean up custom dropdown chevrons
add `babel.config.json` to validation (#83758)
Outline "Sort By: Type" -> "Sort By: Category"
fix #83840
debt - extract streams logic from buffer into own generic module
update names
adjust API proposal to account for N files being created, moved, and deleted
fix #83842
move events back to textfile service
[json] update yarn lock
some reference search lipstick...
debt - more strictPropertyInitialization (#78168)
Detail for npm: install task (#83765)
Revert "disable overwriteOnAccept for now, #10266"
dropdown - make the custom arrow generally available
`process.stdout.write` in Extension Host does nothing (fix #74173) (#83833)
debt - control editor progress based on editors being present or not (#83832)
Adopt recursive fs.mkdir from node.js 12 (fix #82617) (#83831)
1.41 begins
adopt proposed API changes in TS land
add event for create and delete operations
remove ITextFileService#onWillMove
migrate proposed API onto new events
Web: move custom dropdown styles to respective areas
add onWillRunOperation-event to file service
AsyncEmitter shouldn't fail when listener fails
fix #83805
fixes #83782
update vs code default launch config
trigger build again
trigger build
Move icons out of translated strings
implement filtering by marker type
Use US english
Add line-height to chevron dropdown
Add chevron to Safari and Firefox dropdowns
Use isNaN instead of === NaN
Add back 'resolveCommonTelemetryProperties' to browser telemetry service
fixes #73613
Bump node2
fixes #83769
Ignore 0,0 event to fix override dimensions pty test
Web telemetry - write machineId to local storage
Ensure terminal/task tests don't leak listeners across tests
Pass assertion failure to done
web - ensure to prefix localStorage keys with "vscode"
Null check terminal processes before calling on them in ext host
fix #83762
adjust outline and breadcrumbs filtered types names to showXYZ, #83537
change settings names to suggest.showXYZ #83537
Revert "Revert "fix #83537""
[json] improved error message
fixes #82208
add todo
:lipstick:
[json] fix azure telemetry
update request-light
web - firefox/safar to render dropdowns flat (fix #83556)
fix #83572
fix #83742
fix #83603
fix #83555
update distro
revert changes to imports
double timeouts
Move tooltip to start of row when link is wrapped above viewport
Inline release note css
Try to prevent user scaling of webviews
Removed duplicate clear function definitions Modified focus search bar to be part of clearing search bar function.
update request-light
files - skip exists() check if not needed
remote - fix text resolver action to show log
Improve flickering when skipping task quick pick
Load extension resources using IExtensionResourceLoaderService
Do not swallow loader errors
remote - file service to have read/write capability without streams
files - prefer non-stream read/write if signaled by caller
Check that configure task acutally has tasks task before skipping
fixes #83464
fixes #81964
fixes #83464
Make task.autoDetect be 'on' 'off' instead of boolean
Revert "fix #83537"
better fix #83573
fix #83573
Adjust top when compact menu is shown (fixes #83607)
fixes #81919
Update https-proxy-agent (#83647)
fix #83537
fix #83602
web - fix dialog classes to work cross browser
Add fallback encoding/decoding
fix #83582
fix #69279
dnd - disable desktop drop in certain cases (fixes #83578)
Update https-proxy-agent (#83647)
default to file-scheme unless strict is set, no more warnings tho
Revert "uri - remove strict mode, use file when scheme is missing"
dnd - do not support folder download (#83567)
fix runtime args defaults
Make terminal Follow link clickable
Prevent default zoom behavior in image preview for browsers
Use vendor specific use-select to make Safari happy
Add support of relative paths for git.ignoredRepositories
Don't prevent launching the editor when `updateStyleSheet` fails
Be more resilient when checking if we have an opened jts/ts buffer
update distro
Update css service
Delay updateStyleSheet until we are starting the workbench
Hide Help > Report Issue menu item when no reportIssueUrl in product.json, fixes #83560
minor rename
compute default ranges *before* computing words, #83400
disable overwriteOnAccept for now, #10266
Allow icons to inherit color on focus selection
Add minimum and maximum to schema for fontSize (#49428)
editor - protect against null/undefined when updating tabs
Remove task-only gear icon and replace with codicon-gear
Revert "Add debounce to config change event in tasks"
Add fallback keybinding rules for cmd+x, cmd+c and cmd+v on the mac to trigger cut, copy and paste by default (in all contexts).
add modal to undo merge commit
fix #83508
fix #83510
fixes #72973
Remove hyphen in formatter-related messages
insertText fallback for simple file picker
Do not warn if not necessary
web - no confirm closing dirty editors during tests
fix typo
Run OSS tool for 1.40
api - fix docs
api - fold app uri creation into asExternalUri (fix #82884)
Utilized searchString and other parameters for putting multi cursor
add keyboard command for ctrl+hover fixes #46257 refs #59260
Reorders to ensure shellType is set in title event
update distro
Support that extensionKind can be an array
Changes to 1px border for consistency w/ others
Support 'workbench.action.openIssueReport' command in the web - directly open GitHub
Add missing icon
Make createInstance stricter (#83472)
Update md grammar
Adopt icon font in extension viewlet
Revert "debug configuration manager: asyn await"
Inherit icon colors
[json] support result limits
format doc.
Move new issue github link for questions to be a link to stack overflow
Don't leak _onFindReplaceStateChange emitter
Remove extra implementation of dispose
InputBox cannot be null
don't select checkbox text refs #81924
Update symbol icon color tokens
change distro
move call hierarchy API to stable, #70231
Add missing activation event
debt - some TS fixes
Transport `undefined` arguments as `undefiend` via rpcProtocol
Partial revert "Converting some search for loops to use .some/.every instead"
update distro
Update vscode-textmate in all the places
fixes #83440
fix #83441
Adopt new vscode-texmtate (for #77990)
fixes #83211
remove automagic cleanup, make IDecoration an IDisposable which gets cleared from the label, still ref count styles tho, #81467
uri - fix encodeTable (padded, uppercased)
Add alignof to light and dark themes
use async spawn; fixes #69859
fix #83288
Revert "Removing EXT_HOST_CREATION_DELAY hacks" (#83422)
debt - remove a few typings (part of #83421)
fix #83239
Resolve https://github.com/microsoft/vscode/issues/83139
debt - avoid Promise.reject() in async functions
rename git.untrackedChanges: default to mixed
fix #83400
:up: distro
debt - prepare for node 12
fix mac check for updates
debt - bump node.d.ts dependency in extensions to 12.x (part of #82514)
debt - use onAutoSaveConfigurationChange
web - keep untitled workspaces in history
remote - update chokidar too
Should be able to trigger checkbox on custom dialog by clicking its label (fixes #81924)
editors - toggle maximize on tab doubleclick if pinned
debt - reduce usage of || undefined
chore: update distro for stable license (#83392)
:up: chokidar@3.2.3 (fix #82427)
Make ctrl+right in accessibility mode to jump to beginning of the word
Use VS Code, with a space (#83370)
null => undefined
:lipstick:
Speed up lsof by avoiding unneeded work
chore: Bump electron@6.1.2 (#83266)
Re #74558. Comment Editor is simple editor.
Removing EXT_HOST_CREATION_DELAY hacks
Adds support for xterm `scrollSensitivity` setting
Added follow link to terminal hover tooltip
Render terminal widgets using markdown
Remove some old TODOs
Remove old removed setting
Use specific scope name for js vs ts
Add default styles for <kbd> tags (#83300)
Update classifier for extensions-development label
Adopt Intl.Collator for SortLinesCommand (#70920)
node-debug@1.40.1
css :lipstick:
more typos #70231
callh - Shift-Enter refocuses onto current item
cleanup setting name and values
web - set font-smoothing properly for FF
smart commit should be aware of handleUntracked
cleanup for #81060
differentiate between tracked & untracked in staging
web - firefox fit-content is -moz-fit-content
Remove IElectronService.openExtensionDevelopmentHostWindow; fixes #81060
git.stageAllUntracked, git.cleanAllUntracked
Update distro
Active inline breakpoint isn't highlighted
Add -webkit-background-clip: text; back
Use new 0-based xterm viewport range
Update xterm typings
xterm@4.2.0
rename unstaged group
fix untracked decorations
Change checks for present command line arguments
:lipstick:
fixed scope
Add profiles.json to jsonc files for Windows terminal
polish
user data should also have proper formatting for remote
web - safari is weird
callh - fix incorrect preview after toggle
web - cleanup vendor specific CSS rules
Make setting has three options
callh - add toggle direction command
Chanegd efault to keep consistency
Rename the new setting to 'closeConsoleOnEnd'
fix bad git package.nls.json change
fixes #83237
sort item by location, #81754
cleanup update product from command palette
fix typo
fix compile errors
Web: allow to drag to desktop to download file (fixes #83284)
callh - fix tree view state
typos #70231
and more jsdoc, #70231
tree: should not throw when active nodes change
call it CallHierarchyProvider instead of CallHierarchyItemProvider #70231
jsdoc for #70231
small polish for #81753
adopt json.ParseOptions.allowEmptyContent and getNodeType
json: add getNodeType
json.allowEmptyContent: add setting
json.parse: fix for empty property name
Update distro
git: remove bad menu
add parent back, fix caching id issue,
Improve hygiene filter
remove call hierarchy API commands since the API/flow changes, #83274
:lipstick:
Added tests for group substitution issue
Add keydown listener to disposables
Use a case-insensitive map for store pending buffer operations
Split js doc injection into js and specific ones
Mark event fields readonly
Extend disposable
Use proper map
Use Disposable
Lowercase color token
Adopt icon font in debug viewlet
Support performing a js/ts workspace symbol search when focused on the left side of a git view
Use includes
Use map instead of object map
Convert async
Use includes
Bump base webview commit
Update to build vscode with 3.7 rc
Adds missing shell for powershell core
Changes npm script runner to use yarn
Clarified git.confirmEmptyCommits description
Rename 'continue' to 'debug-continue'
Honor the new setting
Add settings to the interface (IDebugConfiguration)
Preserve comment thread collapse state across extension host update messages, fixes https://github.com/microsoft/vscode-pull-request-github/issues/1400
Add setting to control this feature
Hide the debug console if it was opened just because of the debugging
Use arrow keys to change focused comment in CommentThread overlay, fixes microsoft/vscode-pull-request-github#123
call hierarchy shows root node, also update API proposal for this, #81753
web - unblock loading in safari
Update distro
Works around WSL2(?) issue
node-pty@0.10.0-beta2
Delete module version check that is now redundant with similar check in hygiene
another fix for for #83145
word based completions use insert and replace ranges, #10266
properly pass 'extensionTestsPath'; fixes #83145
remove unreachable code
explorer: drop should open the editor
adopt editorWidgetForeground
Polish description
web: upload
Add newline at the end of file
fix some CSS for firefox
cleanup git delete tag command
remove unused import
tweak download context keys
Allow empty array for shell args in tasks
ops...
Web: allow to download from the explorer (#83220)
move insert/replace range API to proposed
Update to latest from upstream with additional error checks (#82499)
Filter out Media keys in tree keyboard navigation
fix test failure after more strict parse in markdown convert
remove encodeURI(uri.toString(true)) workarounds
don't warn when fixing missing scheme, just do it... bring back strict mode for parse
add tests from old bugs that have been resolved "as designed"
fixes #83205
Skip the task quick pick when only one task + setting
env - move up logExtensionHostCommunication
some more test utils
#70254 - Set astrisk as a delimiter for URIs (#82816)
Have `*` terminate a link only when the character before the link is also a `*`
fix: error when filling in the HTTP proxy address in IPv6 format (#77260, fixes #77259)
cleanup environment service
polish, extract util functions, fix issue with overeager hex detection
update distro
cleanup workspace editing service
node nodejs specific test tweaks
Adds window border support to splash
fix npm postinstall step, remove xterm from version matching
Normalize vscode links in markdown files to target current vscode version
Make sure we render border in split webviews
Remove log
Avoid cast
Made requested changes and fixed incorrect y position when zoomed
Make message for update imports better match vscode's message
Batch renames for js/ts
Batch renames
Use file name to determine if we are in a ts file or not
Use destructured paramters
Don't show progress indicator when we know for sure we are not doing a js/ts rename
Remove gating for TS versions < 2.4
Normalizing names
Use VS Code's fs instead of node
Remove duplicate impl of getActiveWebviewEditor
Use ?.
Make sure we update js/ts diagnostics when the visible editors change
Explicitly note that activeParameter could be undefined
Remove extre implements
model is never mutated
Use optional chaining in terminalInstance
More formatting
Remove > 0 timeouts in bufferer tests
Format/minimize diff
Reworks the test to not be timing specific
Reduces terminal buffering test wait to 0
Make sure we apply initial style to find widget
Extract has docs
Remove overviewRulerLanes from JSON schema
Use standard vscode.proposed.d.ts instead of copying it
Support command tracking from current scroll position
GitHub Actions: include release branches on push
Only use endpoint origin when rewriting csp in webviews
GitHub Actions: include release branches for PRs
Adjust padding for breadcrumb symbols in no tab view
Update distro
xterm@4.2.0-beta20
xterm-addon-search@0.3.0-beta10
rename browserworkbenchenvconopts
Really fix #64684
Closes #54507 - Adds themable window border (#82781)
fixes #83167
Add todo
Update remote explorer to use icon font
WorkspaceConfiguration API clarifications
Make timeout for slow task provider 4 seconds
and more tweaks...
more test tweak...
Attempt to fix process tasks with Windows SSH host
fix drive letter regexp issue
cache regular expression, inline string constants
:up: distro
fixes #81654
Addressed code review suggestions
tweak nodejs compare tests so that they work on windows
GitHub Actions: only run on master branch
debt - remove some unused env properties
more tests, check more sample against standard url, make sure we normalize well
tweak tests, make sure nodejs tests are platform aware
web - provide env.isBuilt properly
Improve problem matcher prompt setting description
Make problem matcher prompt setting an object
Use the editor font size for the breakpoint widget
fix missing #-encode in URI.file factory
web - adopt session id
introduce sessionId (#83144)
debt - do not duplicate product and environment
add tests that compare URI against nodejs/standard URL
fixes #81406
web - more env refactoring and polish
web - more environment cleanup
introduce sessionId
web - environment reshuffle first cut
use session ID instead of session name for ID calculation; fixes #80379
Add option to disable problem matcher prompt for task types in quick pick
polish
Have the cursor selection change event contain more information needed for cursorUndo (#82535)
fix definition of isExtensionDevTestFromCli; fixes #81090
change bot classifier back to weinand
launch: move timeout
adjust tests that relied on URI.toJSON or URI.toString output
Makefile testcase for updated scheme to support the following: var:=$(val:.c=.o) (#83121)
Update make grammar
fix #82601
web - do not show untitled workspaces in history
fix optional chaining bug fixes #83112
Add zoomIn and zoomOut commands for image preview
Remove preventDefault call that was causing warning in chrome
Adopt icon font in activity bar
Use ?. in a few more places
Disable context menus in iframe based webviews
fix hidden activity bar fixes #83044
Rename `cursorUndo/Redo` commands from "Soft Undo/Redo" to "Cu‚Ä¶ (#82930)
Update baseline webview commit
?. operator
:lipstick:
Part of #79964
Update emoji regex test with Unicode v13
Bump css LS for #79215
Correct nsfw name in log
Log where the typescript version is coming from
Use double quotes for user facing strings
Rename versionString to displayName to make it clearer how this version is used
Bump css LS for #74635
Remove duplicate uncategorized terminal commands
Include custom editors in history (#83019)
node-pty@0.9.0
Control find widget using transforms & Removed reduntant multipleline CSS class
replace input collapsed fix
update distro
Typo
Update vscode.proposed.d.ts in npm extension
Force colors on symbol icons
cmd+v for paste in terminal
Increase task provider warning timemout
Web: support for untitled workspaces (fixes #82599)
Stabilize CustomExecution task API
properly pass CLI arguments
implement API proposal
fixes #82821
actions: use  GITHUB_TOKEN
Add task detail property and adopt in npm extension (#83070)
use more CHILD_CONCURRENCY
Add task detail property and adopt in npm extension
use CHILD_CONCURRENCY=1 in actions
debt - use more ISuggestDataDtoField
Allow preLaunch task for compound list
tweak test for less encoding, restore URI.toString(true) behaviour, escape backslash in non-windows cases
keep input (for toString) when using URI.parse, URI.file uses now URI.parse
fixes #81286
opn/open should work with app URI scheme too
:lipstick: docs for env
fixes #74558
custom encode/decode logic
fixes #82964
fixes #83043
Change link hover widget position to be consistent
Workaround for TS not being able to handle interactive playground resource with query parameters in uri
Make sure the syntax and semantic servers don't get out of sync
Improve wording of issue reporter clipboard warning, fixes #82856
Update color token names for symbol icons
update distro
add helper function for menubarvisibility fixes #82907
Bump node2
Allow theme to change color of progress icon
Marking fields as readonly
Finalize asExternalUri
API: Finalize env.uiKind (fixes #82883)
Remove unused colors from themes (#82986)
fixes #82085
added split pane options to settings (#82888)
add retry count to prevent infinite loops
Add macOS CI with GitHub Actions
Add Windows CI with GitHub Actions
Add Linux CI with GitHub Actions
fixes #82229
accessibility service: log accessibility metrics
fixes #82869
fixes #79635
fix (workaround) for #82874
debt - optional chaining
extract CachedListVirtualDelegate
Remove inefficient code to set a custom tooltip
web - change environment to payload API
Filter dead keys in tree keyboard navigation
fixes #69400
add todo to move into servcie
Revert "fixes #82677"
Web: implement browser extension debug service properly (fixes #81493)
Update grammars
Empty links in recent workspaces list. FIxes #74363
fixes #82863
Rename `cursorUndo/Redo` commands from "Soft Undo/Redo" to "Cursor Undo/Redo"
Add a clear button to settings editor search bar Resolves #66141
document that `suggest.names` doesn't work with checkjs
Add configuration for includeAutomaticOptionalChainCompletions
fixes #70893
Default maxTsServerMemory to 3GB
Use test instead of match
Add basic pinning test for jsdoc completions
remove special case of titlebar visibility change
centralize part visibility eventing add context key for editor area visible fixes #67707
Wrap suggest widget symbol icons into their own container
Clean up classes
Update monaco for TS 3.7
Convert to async
Add try catch logging to parameter hints in tests
Update distro
xterm@4.2.0-beta20
Add debounce for schema changes to fix slowness when launching with the settings editor persisted open
string update
Update icon font with new symbol classes
Wrap symbol icons into their own container
Update distro
xterm-addon-web-links@0.2.1
xterm@4.2.0-beta18
Add remotePathService to workbench.common.main
Add a notification for slow task providers
breakpoints in overview to the left
don't use ParsedArgs in rawDebugSession; fixes #80461
Use real task definition in fetchTasks
Improvements suggested in code review
opener - adopt fromUserGesture in more places
Add message for legacy console mode
Revert "Use null instead of undefined for openCodeEditor" Revert "`getActiveCodeEditor` should return undefined instead of null" Revert "Make `getFocusedCodeEditor` return undefined instead of null"
better collapse behaviour for #69279
Add command to window progress (#82365)
Partial Revert "Use equals helper function instead of re-implementing it so many places"
Revert "Remove another duplicated array equals helper function"
Add debounce to config change event in tasks
Partial Revert "Replacing more for loops with .every/.some or arrays.equals"
fixes #81768
Revert "Converting a few functions in ITokenizationRegistry to return undefined instead of null"
enable strictFunctionTypes in VS Code codebase #81574
uri - remove strict mode, use file when scheme is missing
Add `cursorRedo` command (Ctrl+Shift+J) (#82620)
Implement cursorRedo
fixes #82143
Turn off gulp autodetect for the repo
debug: cleanup starting debugging
fixes #82772
zenMode.silentNotifications update description
Add `cursorRedo` command
add support for command line arguments in grunt task runner (#82819)
notificationFilter.ERROR
editor - conditionally show editor open errors in a modal dialog
Revert "fixes #71355"
suggst - add command alias for `acceptSelectedSuggestionOnEnter`
collapse all when showing breadcrumbs symbols picker, #69279
web - stay in standalone mode when opening new windows from standalone
:up: distro
Set astrisk as a delimiter for URIs
Treat errors on `updateOpen` as non-recoverable
Add RemotePathService for manipulating paths from a different OS, for #82739 Also fix opening an absolute path in quickopen, cross OS
Move `editor.showBreakpointsInOverviewRuler` to `debug.showBreakpointsInOverviewRuler`.
default prevention on scroll menu
add menu button hide entry resolves #81462
strictFunctionTypes refs #81574
Re-enable building VS Code with TS 3.7 (#82289)
Implement "Duplicate Selection" action (closes #2075)
Remove codiconLabel.mock
Update outline color tokens to include all symbol types
set a new minimum window size 600x600 resolves #80995 resolves #78165
fixes #77799
Create scoped instantiation service for comment threads so that correct context keys propogate down
Make sure we don't go into a redirect loop when using port mappings with same source and destination ports
Make sure iframe based webview also re-broadcast keyboard events
Moving more shared code into webviewbase
Move webview content object into base class
Move a few more common events into webview base
Move onMissingCsp onto base
Move _ready and postMessage into base class
Start trying to extract common webview code to base class
Extracting some constants
Register keyboard handler alongside other handlers
Try encapsulting some parts of webview message handling
Handle new style vscode-resource paths for iframe based webviews on desktop
Remove some casts
Remove some extra conditional checks
Remove extra call to toDisposable
Webview editors -> custom editors
Create  WebviewExtensionDescription in extHostProtocol
Allow registerWebviewEditorProvider to pass in a set of initial webview options
minimap - fix renderer factory not caching last font family
update bot message
Show breakpoints in overview ruler
:lipstick:
:up: distro
web - remove inlined csp
fixes #81170
notifications - use aria role "dialog" for toasts (fix #82728) (#82758)
Add tasks config in workspace file (#81417)
More tasks workspace file changes
skip auth only for auto fetch
:lipstick:
Task tweaks for tasks in workspace file
fixes #68556
web - hide encoding related UI pieces for now until supported (related to #79275)
update inno updater to 0.8.2
:lipstick: git clone progress
status - use alias only if it differs
Revert "update inno_updater to 0.8.1"
update inno_updater to 0.8.1
add failing and ignored test for #45515
adding setting 'editor.suggest.overwriteOnAccept' #10266
add failing and ignored test for #79474
fixes #82677
fix electron task
Register editor contributions with their ID (#82603)
Use https for link
Potential fix for #82611
strict property init (#78168)
revert console logs
fix issue with scroll-y submenu being 10px
strictFunctionTypes work, #81574
update padding on compact menubar fixes #82668
strictPropertyInit refs #78168
Add support for overlapping brackets (#26121)
Better support for begin/end style brackets (#26121)
Allow bracket matching to search across multiple tokens
Remove unneeded re-creation of comment titlebar on update
fix GDPR annotation
Replace 'vscode-octicons-font' with 'vscode-codicons' in cgmanifest
Replace 'Octicon' refs with 'Codicon'
Rename ReviewController to CommentController
Pick up latest js/ts grammar
Shift + tab event handling for going back
Show basic webview editors contributions section
Refactoring onResourceEditorOpening
Mark currently active editor type in reopen with
Remove dead code
Update error dot for explorer and outline
Undo icon color inheritance for smbols
Remove unused icons, update suggest widget icons
fix #49465
debug: show breakpoint hint when hover over line
Added Capability to escape |, < and >in addition to & and ^
Don't show quick pick when there's only one task to configure
fixes #60644
remove yarn gulp electron
Switch to use a notification when the max computation time is reached
:up: chokidar@3.2.2 (#82686)
fixes microsoft/vscode-remote-release#519
Use execFile for Linux to terminate task
strict property init (#78168)
Make Run web task beginsPattern slightly more specific
debt - less async / await
Rename diffEditor.maximumComputationTime to diffEditor.maxComputationTime
Show hint when the diff algorithm quits early
debug more async/await
Add `diffEditor.maximumComputationTime`
extract yarn electron
Add IDiffComputationResult.quitEarly
:lipstick:
distro
status - do not show encoding picker so early
electron 6 - adopt 'high-contrast-color-scheme-changed' event
Swallow resize error if terminal already exited
Support fast scroll in terminal
xterm@4.2.0-beta10
Adding builtin priority for custom editors
Add setting to configure the max memory for tsserver (#82630)
Remove unused import
Mount webviews on the root of the workbench
Remove old portMapping api conversion logic
Move filling in of default localResourceRoots into extHost
Use instanceof checks
:lipstick:
Remove unused import
Remove empty layout methods
:lipstick:
Extract reviveWebviewExtension
Prefer using the name `webviewInput` for variables that manage WebviewInput objects
Remove extra handler for onDidUpdateState
Use Schemas
Convert static class to constant
Extract InternalWebviewViewType
Remove the setExtension helper
Add launch config/task for "yarn web"
Update color token names and descriptions
xterm@4.2.0-beta8
Respect foreground color when in focus
Update suggest widget
Update Outline and Breadcrumb items to use correct classes
cleanup commit template, merge
:up: distro
fix hygiene
fixes #82362
Add missing preposition
:lipstick: code-web.js
:lipstick:
fixes #82294
do not run only ResourceTree tests
debug more asyn await
explorer: more async await
debug: pointer cursors so breakpoints appear as clickable
fix scm resource folder actions
Render progress bar after 1s of diff computation in diff editor
debug commands: asyn awati
debug: more async await
debug configuration manager: asyn await
fixes #82564
Allow to run web client out of sources (#82569)
Feature/pin close others (#82545)
debt - properly type network.ts
Actually update Octicons with correct mapping
Replace Octicons with Codicons
Windows Edition in Workspace Stats (#82539)
Treat non-spacing marks as part of word in md files
Adopt icon font in outline view
dont reposition overflow menu when it doesnt move fixes #82078
Added RANDOM, RANDOM_HEX snippet variables
update distro
Keep track of the diff computation state
fix resource rewrite before host available fixes #82467
Close process explorer on cmd/ctrl+w, fixes #64373
focus first item on submenu mnemonic fixes #82470
minimap - allow variable scaling (#82265)
Revert ":up: graceful-fs@4.2.2 (#82058)"
Map 'stop' Octicon to 'error' Codicon
strict null
Update Codicon icon mapping for Octicons
debug: more async await
debug session: more async await
CommandAndKeybinding for adding multi cursor from search result
Some polish for 'Run NPM Script in Folder'
fix #78202
:lipstick:
fix #69637
web - fix spelling mistake
Revert "Revert "debt - adopt new fs.readdir with stat info""
chokidar - ignore *.asar by default
fixes #82359
fix #56651
fix #41691
extHostDebugService: Enable `strictPropertyInitialization`
fix #65561
fix #82491
remove unused
debug: do not report errors from configurationDone
partsSlash: latest theme colors not persisted on color change
workbenchThemeService: Strict property initialization (#78168)
Remove bad test assertion
Strict property initialization (#78168)
Update highlight js and md versions
Show preferred action info in lightbulb hover
Remove more duplicated types
Use normalized  path for loading remote webvie resources
Avoid excessive Promise.resolve
Add DiffEditor contributions
Improve labels (#45131)
strictPropertyInitialization in comments, #78168
fix #65561
fix #82491
remove unused
debug: do not report errors from configurationDone
partsSlash: latest theme colors not persisted on color change
workbenchThemeService: Strict property initialization (#78168)
Remove bad test assertion
Strict property initialization (#78168)
Added tab functionality for preserve case button in search viewlet
Update highlight js and md versions
Show preferred action info in lightbulb hover
Remove more duplicated types
Use normalized  path for loading remote webvie resources
Avoid excessive Promise.resolve
Add DiffEditor contributions
Improve labels (#45131)
Partial revert
strictPropertyInitialization in comments, #78168
Pull Request feedback: do not show command in command palette
debt - Avoid Number.MIN_VALUE and Number.MAX_VALUE
Pull Request feedback: updated documentation and naming, read from cache if available instead of creating new tasks
php - fix break statement not reducing indent level
Tweak Monokai colors for diff views
php - increment indentation for inline php tags
adopt font window icon controls (#82301)
php - fix identation drifting on empty single-long blocks
php - open executable settings if the validator fails
Center scm text, badges, and icons
Revert "scm: make tree rendering opt-in via proposed API"
Open New Terminal -> Open New External Terminal
Update Chrome icons to render correctly on Windows
php - fix custom tags appearing invalid
resource tree: support data in branches
Don't show task quick pick for 'show' command when only one task
Add tasks setting to turn off all task auto detection
Add ability to have OS specific task problem matchers
fixes #82346
more :lipstick:
:lipstick:
Rename CustomExecution2 to CustomExecution
Update pull_request_template.md
Add task end fire so that executions are cleaned up
Create pull_request_template.md
Add busy tasks and check busy tasks in debug
minimap - invalidate cache to ensure colors are updated on theme change
Update Codicons, add chrome icons and update arrows size
Revert "Build VS code using TS 3.7-beta"
minimap - fix confusing showSlider description (#82287)
Only show active-item-indicator on activity bar, make it flush
Build VS code using TS 3.7-beta
Make Lazy use an interface more similar to IdleValue
Remove webview.update method
Be more lazy about creating webviews
Introduce Lazy<T> for representing a value that is resolved when it first actually needed
Rename webviewEditorService to webviewWorkbenchService
Reuse LazilyResolvedWebviewEditorInput for custom editors as well
Extract type alias
Removing duplicated code
Simplify array equals checks
fixes #82257
update to electron 6.0.x (#81644)
only left click on menubar fixes #81954
panel pref dimensions fixes #82018
Don't allow dirty state button to be clicked when running without close button
Show dirty state icon when tabCloseButton is off
Specify exact icon path for deb desktop
Separate HTML for selection inner corners from remainder of selection (#82182)
scm: make tree rendering opt-in via proposed API
scm: don't use ResourceTree model if view mode is List
Update color tokens
Terminal and part of the debug changes needed to respond to cancelling a prelaunch task (#82255)
debug commands: better fix for checking if threadId is a number
debt - migrate suggest filtered types setting to many dot form
make overwrite suffix the default, #10266
shift+tab/shift+enter overwrite suffix when accepting a completion, #10266
Add setting to turn off problem matcher prompt
Make it easier to tell which status item will be disabled in context menu (fix #76544)
debugCommands: check if threadId is number before using it
Yield every 1 ms from tokenization (fixes #40681)
notifications - hide toasts when filter is on
Use setImmediate for yielding from tokenization
zen mode: silentNotifications
fixes #81361
notifications - allow to configure a filter to silence notifications
tweak undo behaviour when inserting suggestion via commit character, fixes #44155
Upgrading a theme currently requires a window reload. For #73306
comment
fixes #82212
native tabs require macOS 10.13 at least
add outline.filteredTypes setting, #53034
add breadcrumbs.filteredTypes-setting, #69279
json ls-server readme: typos
JSON Language Server 1.2.2
use window.setTimeout
Notifications icon polish (#82171)
Added in setting for diff gutter visibility
:lipstick:
improve static argv configuration (#15211)
Hide active elements in HC mode
Update description
Use unique dom element to style active activiy bar elements
update gdpr tag for measurement
Strict property initialization errors for comments panel, #78168
Use mustable disposables
Add color tokens for active activity bar elements
Add a setting to disable gpu acceleration (fixes #15211)
Remove unused params
Remove minimum terminal split width guard
:up: distro
Revert ":up: distro"
:up: distro
:lipstick:
fixes #73613
fixes #72973
fixes #82149
debt - more async/await
cancel rename all the way, fixes #82146
add overload that allows to cancel a cancellation token when calling dispose
Update listPaging.ts
debt - cleanup main.js
Only enable re-open with command when we actually have a custom editor for the current resource
Add extra clairification about where displayName is used
Marking IMarkdownString.value and isTrusted as readonly
fix: remove TypeScript from ExtensionSuggestions (#82125)
Update distro
More strict parsing of codicons
Introduce allowChords setting
Support chords in terminal
fixes #68713
change scm default from tree to list
Call open on Terminal after attach to DOM
Attach element before calling open in test
fixes #67814
Update xterm and xterm search
Update default eol on language change if model has no eol yet
Repair npm links (#70325)
dev - add husky back for git precommit hooks
Remove executable bits from non-executable files
fix hygiene
strict null
:up: distro
:up: distro
fix tests
linux/bin/code.sh: use command -v instead of which
Pass the elements to the diff algorithm directly
Add ISequence.elementsAreEqual
Use Int32Array
Avoid allocations for ISequence.getElementAtIndex
:lipstick:
remove pseudo breadcrumbs in call hierarchy peek, #81859
renames: source -> from, target -> to, #81746
Terminal should scroll to bottom on reused task terminals
debt - tweak proposed API check (#82089)
:up: distro
build - use enable-proposed-api in tests
outline progress bar delay is average respone time, some minor polish, fixes #63400
Revert "fixes #77837"
debt - make debugging lazy services simpler
debt - less null in workbench
Fallback to PCRE2 if match whole word used with regexp
Cache webview web contents
Removing zoomFactor logic for webviews
Marking a bunch of static variables as readonly
Use DisposableStore in a few more places
fix image preview to show correct canvas size when editor is scaled down vertically (#82027)
Replacing more for loops with .every/.some or arrays.equals
Use array.find in more places of re-implementing it with for loops
Remove applicationinsights-web dependency
Remove another duplicated array equals helper function
null -> undefined
Use equals helper function instead of re-implementing it so many places
Converting some search for loops to use .some/.every instead
Converting a few functions in ITokenizationRegistry to return undefined instead of null
Markding results from panelService as readonly
Converting some parts of panel service to return undefined instead of null
Use find instead of for loop
Convert getPanel to return undefined instead of null
Convert null -> undefined
more tests
Mark that pendingComment can be null, #81574
:up: graceful-fs@4.2.2 (#82058)
:up: terser@4.3.8 (#82057)
Call resolveCommonTelemetryProperties in browser version of telemetry service
debug: more async / await
Update modesContentHover.ts
fix compile error
all types & modifiers
Add a useful message for when background tasks don't have a watching problem matcher
debug: more async await
Simplify fix for #12574
debug: more async await
Add logic for negative custom tree view highlight numbers
Don't show folders with trailing slash in simple file dialog pick
fixes #81662
Uppercase drive letter on Windows simple file dialog
fixes #81879
Remove .txt from save as simple file dialog
debt - strict function
workaround - remove `as const` to make webpack happy...
remove --disable-inspect
simplify find port, remote hacky env variables
Update sql language syntax (#77601)
enable strictFunctionTypes
distro
support to enable inspector when asking for inspect port and consume in auto extension profiler
expose `enableInspectPort` in starter type
Add .har extension to JSON language (#77300)
remove used method
add enableInspectPort-method which uses sigusr1/_debugProcess
more strictPropertyInitialization
strict function types
debt - more strict init (#78168)
debt - introduce and use assertDefined for strict init (#78168)
debt - reduce usage of strict null bypass
Strict init for tasks in extHostTypes.ts
Remove unused styling code
Strict property initialization (#78168)
strict init
debt - less defense
in extension land prefer URI.isUri, fixes  #81819
deco - some debt, add logging
Render Octicons in CodeLens
search: remove unused config settings
debt - some strict function types (#81574)
web  - store font info properly
web - do not reload if workspace is equal
debt - move out reload/quit to lifecycle service
debt - no need for explicit closeWorkspace()
debt - windows => windowsMainService
debt - remove no longer needed code
debt - add whenClosedOrLoaded into window class
debt - handle window errors in window class
debt - move pick & open into electron main service
Support jsonc for code block type with highlightjs
Rewrite how we handle links in the md preview
Move js/ts json validation to js/ts language features extension
Marking event properties as readonly
Use isEqual for comparing uris in more places vs .toString()
Mark that preferredEncoding can be undefined / not initialized
remove console log
add git.showCommitInput config option (#79074)
Dont pass undefined as boolean
Make sure we also change webview theme data when editor config changes
Use switch case
Memoize webview theme data
Remove some extra not null checks
Bump version
Update button.ts
Update syntax
Allow labels being triggered by the bot
more strict init work
Revert "fixes #80054" (#81942)
Include icons in the extension viewlet
Use strict compare for checking if an editor is active/visible
Only reuse existing custom editor input if we are opening an editor in the same group
Close image preview when file on disk is deleted
Make markdown refresh more stable
Add margin for peek icons
Cleanup dead code
Update html language service
Bump node2
Adopt icon font in problems panel and error peek view
Use `name` for custom editor title for data uri resources
Update css language service
Use yarn compile for start scripts
explorer: add decoration provider to disposables
strict init
:lipstick: telemetry opt out
remove product.welcomePage
Update README.md
fixes #81868
fixes #81871
automatically assign debug issues to isidorn
update distro
Bump distro
Run oss tool
Don't show webview overlay by default
Update distro, fix web smoke test folder
Change event name to type
Handle new vscode-resource format for md linkes
Update distro
Schema for attached container configurations (fixes microsoft/vscode-remote-release#1577)
fixes #81838
Correctly style image loading indicator for various themes
Update md grammar
Reapply c057a4b9c73ce820e0c1a02797bf9f06bd638e86
group substitution fix for preserve case
fixes #81852
fixes #81846
fixes #81567
limit panelview animations to expansion
fixes #81727
fixes #77837
fix #81653
Add completion suggestion for defaultBuildTask
Update default build task placeholder text for defaultBuildTask variable
fixes #81798
fix #81763
Add to jsdoc for TreeView message
fixes #81731
urls - add option to disable confirm dialog
update gulp-tsb, https://github.com/microsoft/vscode/issues/81140
null guard
fix compile
fix #81323
migrate parameter hints setting, #81256
Revert "continue to suppor legacy parameter hints config,  #81256"
fix vscode.open() tests (#81833)
continue to suppor legacy parameter hints config,  #81256
json: provideFormatter fix
fixes #81715
fix #80754
handle auth errors
fix #81137
remove 64 bit suggestion
doh
comment out test
Revert "Make sure we dispose of any custom editor inputs when replacing them"
Make sure we dispose of any custom editor inputs when replacing them
Add CSP
Rename custom editors discretion to priority
Show errors when image can't be loaded
Remove tiff as a supported image preview format
Making status bar items for images more reliable
Make sure status bar name for zoom/size can be localized
Use enum to track preview state to avoid getting into invalid states such as active & disposed
Make sure active is set to false when webviews are disposed
Make sure zoom status bar selections only effect the active image
Use isEqual instead of tostring compare
Move custom editor extension activation out of input
Show loading indicator while a custom editor is resolving
Use US English in settings sync
Update high contrast minimap selection color, fixes #81728
Document `mime` for custom editor selectors
Improve docs on asExternalUri
Add simple description for image preview extension
Re-render image preview when image on disk changes
add cancel id for custom dialog
Changed hyphen and underscore ordering
Revert "Changed hyphen and underscore ordering"
Changed hyphen and underscore ordering
make sure all, not some, decorations are unused before removing its css rule, #81467
update distro
Tweak wording of minimap.selectionHighlight description, fixes #81730
Update jsdoc for TreeView title
telemetry - fix broken opt out
styler: allow Color
Also remove extHostWebview side of the api proposal for webview editor state/save
Remove `save` / `state` from custom editor api proposal for now
Disable open with command for now
Upgrade html/css language services
Add fallback for invalid signature help data structure
fixes #81267
Try different name for default editor
Warn development webview extensions that use `vscode-resource` uris directly
Rename resolveExternalUri to asExternalUri
Annotate that `preferredEncoding` can be undefined
smoke: update mocha
update json server & service
update html server & service
update css service/server
Polish css.completion.completePropertyWithSemicolon doc
Update Octicons and cgmanifest
Show correct icon in HC mode for adding breakpoints
Show collapse icon in Problems panel
enable auth by config
handle v6 ip addresses in remote-resources rewrite
Clean up Gesture.addTarget
A readOnly editor doesn't honor readonly in the textArea (#81394)
Only use the readonly attribute on the web
Add touch events to minimap (#81097)
Hide require.toUrl call from ESM packagers
Adopt ILogger.flush() (#80862)
Try to use the remote port number locally (microsoft/vscode-remote-release#1115)
Handle 0.0.0.0 too (microsoft/vscode-remote-release#1115)
support `code --remote ssh+remote+xy /pathOnXY`. For https://github.com/microsoft/vscode-remote-release/issues/585
debt - if one workbench contribution fails to load, do not fail to load all others
wip
Move built task keybinding registration earlier
fixes #80816
electron - revert to Electron 4
#81592 again
do not stop if it was not running before
Telemetry when exe recommendation is already installed
Gesture.addTarget returns an IDisposable
fix "extension slow" link
update-distro
web - implement text input actions too
Undo change to scope/coloring of #includes in cpp
tslint - show warning when using path module from node.js
debt - use dialog main service in more places
debt - move enterWorkspace into workspace service
debt - introduce and use dialog main service
host - reduce methods that are required
debt - move ISharedProcess
debt - async import for cli
[json] Use textDocument.rangeFormatting.dynamicRegistration instead of workspace.symbol.dynamicRegistration? #81592
Update monaco.d.ts
save all and commit fix
editor, modes.ts: fix broken link
:lipstick:
Mark that preferredMode can be undefined
Extract BrandedService type
Extract constant
fix console error when compact and navigating menu
Add loading indicator while image is loading in image preview
Center gear icon
Center icon actions
Remove dead styles
Allows icons to inherit color
Adopt icon font in settings
Update icons in Keybindings editor
Hide settings editor row highlight interaction with editor focus outline Partially fix #81564
register platform services directly
fix missing resolveScopes
wip
TokenTypes & TokenModifiers
fix enablement
clean up
respect disablement state
fix layering issue
- Add disablement state for auth token - Extract user data sync workbench contribution - Make actions, notifications & badge respect states correctly
notificiation to sign in
web - introduce workspace provider
adopt to auth token service
Introduce auth token service
debt - extract node only window options
:lipstick:
Wire up configuration of user and workspace tasks
add logs
debt - lift a few service implementations from platform to workbench
fix build
debt - adopt ipc proxy for launch service
debt - adopt channel proxy for localizations
debt - move ipcChannelCreator into ipc.ts
debt - adopt proxy channel for URL channel
Update commands.yml
:up: distro
Update commands.yml
debt - shuffle things around
debt - merge workspaces and history into one
ipc - add tests for channel proxy
Web: update PWA theme_color dynamically based on theme
Move webview content state into webviewPanel instead of webviewEditor
Expand documentation for typescript.tsdk
Remove unused properties
Add explicit types
Marking events readonly
Prefer using isEqual over string compare of uris
Draw image border for custom image editor
Extract method
Draw shadow for diff view with custom editors
Mark event fields as readonly
Bail early in mime check
Use isEqual instead of string compare
#80862 Add an option is spdlogger for sync logging
no background change for compact menubar
Rename remoteAuthority to remoteName for views contribution point
Renamed onListMouseDown and onListTap functions to onListMouseDownOrTap in SuggestWidget
Upgrade emmet helper deps for #77776
debt - reduce isWeb usages
debt - move native dialog options
Update loading spinner to animate on icon element
:lipstick: move a few services around
Inherit color for search viewlet icons
:lipstick: move things around
Update Octicons to new style
update distro commit
clean up
add logging to sync service
Remove callback property from custom execution task
debt - rename platform/history => workspacesHistory
debt - separate browser and desktop workspace editing service
web - implement events for recently opened
debt - get rid of windows service
debt - introduce and use workspaces history service
add logs for extensions syncing
add logging to settings sync
do not use arguments
Introduce output log channel for configuration sync
Switched TouchStart event by GestureEvent (Tap) so that scrolling is possible on touch devices
update - optionally use electron environment service
Make changes to tasks to allow tasks from User Settings and workspace file (#81469)
:lipstick: electron environment service
debt - introduce IElectronEnvironmentService
tests - remove unused test things
debt - remove windowId from window service
scm: fix decoration padding
remove casting bufferlogservice
fix colorized unit tests debug target
fixes #81432
Revert "Mark arrays used in public apis events as readonly" (#81465)
debt - have config exporter as workbench contrib
:lipstick: main entries
update distro
Make build task default
debt - avoid raw channel use
debt - implement window events and focus tracking
Update distro
Revert "Revert - remove getActiveWindowId change"
Remove customEditor.scheme contribution point
Making IFileChange readonly
Make FileChangesEvent immutable
Mark arrays used in public apis events as readonly
Marking almost all instances of TextFileModelChangeEvent[] as readonly arrays
Making arrays in event as readonly
onMarkerChanged firing with immutable array
Use isEqual instead of toString compare
Make availableFileSystems a readonly array
Don't use null | undefined types in rename
Adopt new xterm write callback
xterm@4.1.0-beta8
Resolving feedback
Make launch and config files separate events
Also dismiss rename input when cursor position changes
Adding workaround for chrome bug
Make sure image views (and custom editors) work properly on the web
Make sure we use consistent unique ids for custom editors
Make report async
Add enableFileLinks setting to avoid expensive FS calls
Split event into multiple
Add paste option for terminal rightClickBehavior
Update twistiesContainer
Fire onDidChangeReplElements directly from ReplModel
Update icon twisties to work with file icons
Add support for touch events on the suggest widget
Add resolveCommonTelemetryProperties option
Revert - remove getActiveWindowId change
fix compilation
Stop syncing when disabled
fix naming
rename to configuraiton sync
add setting: scm.defaultViewMode
:lipstick:
Compact menubar option (#80900)
remove my account view
ignore settings and extensions
option to disable settings sync
debt - add window events to electron service
WIP
ipc - lay foundation for events support
fix unit tests
change ignore settings to array
debug: fix call stack commands context
fixes #81393
reset secondary actions
fixes #81373
show my account extensions only when initialized
debt - getActiveWindowId is electron only
debt - getWindows is electron only
debt - remove more unused
debt - remove unused
debt - add openInWindow to host
debt - implement focusWindow() via host
additional fix for hidden maximized panel refs #80366
Adopt icon font in tree
Process debug adapter messages in separate tasks
Improve LinkDetector
adopt to setting sync end point conventions
Make sure we pass on options when resolving uri
Show preserve case icon in search viewlet
setting to ignore during sync
Update icon class for outline panel
Update scm tree filter icons to use icon font
debt - window max/min is electron only
debt - closeWindow is electron only
debt - move enterWorkspace into workspaces service
Also fixes #81151 and makes unsupported exclamation icon bigger
debt - move openExtensionDevelopmentHostWindow out of window interface
:lipstick: service context
debt - move shared process things out into own service
fix scoping issue
:lipstick:
debt - macOS touchbar is electron only
debt - crash reporter is electron only
debt - updateTouchBar is electron only
:lipstick:
explorer: do not compress editable elements
compressible async data tree: fix view state
async data tree: expand compressed nodes
debt - openExternal() on main is electron only
fileEditorInput: go with a static memoizer
debt - quit() is electron only
web - support "Close Workspace"
:lipstick:
debt - handle title doubleclick is electron only
debt - still implement IElectronService interface
:lipstick: window id
Bump node2
restore maximized panel fixes #79891
Don't use es6 api in platform api
New storage keys for panel sizes fixes #80930 fixes #80366
Add api to get all tunnels from the tunnel service
Marking most private emitters as readonly
Use DisposableStore
Add note on lifecycle of resolved result
Remove empty public ctors
Remove empty ctor
Remove reopen with from editor context menu
register user data sync config only when end point exists
:lipstick:
enable reload action test
Use values util in map
üßπ
üßπ
Add missing icons
Avoid using Set.keys
Make sure window's opener service resolves uris instead of automatically resolving all uris
üßπ
Remove unused styles
Update hover dirty tab state
Remove line ref to old icon
Adopt icon font in search viewlet
Replace todo
Only require a reviver being registered to revive a webview
Make resolveExternalUri return just a plain uri instead of a disposable result
Update close and dirty state icons in explorer and tabs
fix default
:lipstick:
:lipstick:
a setting to enable/disable extensions sync
Handle ctrl/cmd + c
Simplify logic and address feedback
Show correct chevron icon when panel position is on right
Rename to My Account extensions
Remove uninstall everywhere action
auto uninstall extension everywhere
Breakpoint supported should live on SessionData in the breakpoint
Update localize JSDoc example to match signature
fix typo
UI to remove a synced extension and show synced extensions
explorer: adopt compressible tree
compressed tree: preserve collapsible, collapsed state
Add missing spaces to view mode switcher tooltip
Remove workaround for IE (#71553 #81272)
Ship codicon with the standalone editor
use computed remote to update remote contents
:lipstick:
get the extension from local when removed in remote
implement extensions sync
fixes #79239
Be explicit about certain things to help the editor tree-shaking
fix #80583
Refactor file dialog service to fix layer breaker (#81171)
fix bad map values
:lipstick:
update distro
Show collapse icon in custom tree views
Update lightbulb color token names
Moving resolve uri logic into openerService
Allow tunneling when clicking on links in the terminal
Move extractLocalHostUriMetaDataForPortMapping up to tunnel service
Make standard tunnel service re-use tunnels when possible
Extra OpenOptions types
Use arrow function to avoid needing $this
Extract shouldOpenExternal
Remove ext setting
Adopt icon font in explorer
Polish trusted setting wording
support merge code lens for vscode-userdata
Use check icon to complete merge
fix build
formatting
update distro
Add a message that would reduce the grace time
fileEditorInput: do more caching and drop cache when new formatter registered
createMemoizer so we can clear
scm: restore scrollTop
scm tree: proper icon theme alignment
debug: more async and polish
tree: fix npe
extensions sync
always use the uriFormat; fixes #79596
breakpoints: bound in some process
allow trailing commas in tsconfig.json (for #80419)
cleanup
rename allowTrailingsCommas -> allowTrailingCommas
compressible object tree: fix keyboard navigation for new nodes
index tree: fix splice issue with filtered nodes
variables: respect errorMessage
tree: improve compressible keyboard label navigation provider
simple IPC: allow to encode static context (windowId)
debugActions: minor polish
fixes #81195
Add description for tasks dependsOn
debt - represented filename and document edited is electron only
debt - reload() to host service
debt - implement toggleFullScreen() properly
fix #81123
debt - fix call to pick folder and open
Make IEditor.setSelections take a readonly array
Marking array types as readonly
Only create elements array once
Marking return values readonly
Use null instead of undefined for openCodeEditor
`getActiveCodeEditor` should return undefined instead of null
Make `getFocusedCodeEditor` return undefined instead of null
Re-render extension editor readme when theme changes
Extract renderMarkdown
Convert to async
Syntax highlight code blocks on extension pages
Removing unused .mac style rule for rendered markdown
Make sure we don't reparent the webview in the extension editor
Use Schemas instead of strings
More comments
Update diff next/prev to use icon font
Adopt icon font in lightbulbs
Make sure exthost has same id for webview as main thread
Move color styles to respective areas
Show close button on PR comments
web - do not open our website for first time users
debt - remove resolveProxy from window service
fixes #80921
classifictions
node-debug@1.38.8
code.sh: pipe error still printed. For https://github.com/microsoft/vscode-remote-release/issues/1420
fix score based rule matching
extHost startDebugging minor polish
do not inline touchbar icons - does not work
node-debug@1.38.7
debt - picking and opening file/folder/workspace is an electron thing
debt - require electron and not Electron
debt - temporary allow IElectronService in file dialog service
debt - use electron dialogs through electron service
fix: #81077
Improve custom tree view fileIcon event fix
Custom views are doing work too early
debt - handle devtools via electron service
web - fix broken static extensions
Add more scopes to themes based on feedback for C++ and discussion
use final 1.37 version of DAP modules
node-debug@1.38.6
breakpoints: comments and a minor fix
Update themes with c++ scopes based on discussion
breakpoint widget: focus input on change context to make it more user friendly
debug: dispose context menu actions on hide. Also some breakpoint polish
icon > codicon (fixes #81142)
debt - windowsService => legacyWindowsMainService
debt - launchService => launchMainService
debt - extract a openEmptyWindow method and support in web
initialize statu
Start extensions sync
Serialize-friendly interface
Add extension id that triggered the activation event
debt - have methods for restart, relaunch
match score
:lipstick:
ipc - adopt simple proxy for menubar service
web - disable DownloadURL for now (crashes PWA, produces empty files)
debt - remove old legacy layout (thanks for the time being)
Update folding icon to use icon font
Remove pre 1.37 webview state restore logic
Webviews should prefer to keep their ids across serialize-deserialize
Delegate to embedder when resolving if one exists
Basic implementation of `resolveExternalUri`
Mark immutable fields as readonly
Add firstOrDefault helper
Use disposableStore in a few more places
Remove unused disposable fields
Remove redundant property init
Prefer using Disposable.None vs custom noop disposable
update distro
Update class for peek view icons
more tests
Scope icon colors and update naming convention
Increase Extension Octicon size to be visible
Update `tools` Octicon to be an outline
Allow debug session to share repl with its parent; fixes #62419
web - preserve pathname in URL when opening windows or changing workspaces
title - introduce remoteName as variable
debt - introduce IHostService and distinguish between web and desktop
breakpoint inline candidate polish
wip: bug
scm: fix count
scm: fix tree sort order
object tree model: use mergeSort
fix list sorting
remove underline
Update action label classes
scm: properly handle action context
breakpoints: make the candidate breakpoints look more clickable
Make .icon inline-block
debt - bring back macOS custom title menu
build - set no-sandbox everywhere (#81096)
monokai test
debt - introduce and use simpleIpcProxy
breakpoints: update decorations with a minor timeout to react once to multiple nearby events
trigger sync after closing the conflicts editor
debug brekpoints: polish inline breakpoint decorations
remove user data api implementation
debt - introduce simple IPC helpers for basic communication forwarding using proxys
use if match and if not match headers
Add some C++ scopes to dark+ and light+ themes
scm: folder context actions
debt - first cut extract showIteminFolder
fix file dialogs
use if modified headers
wip: scm folder menus
Remove unused icon references
fix bad ref
fix icon paths
fix settings merging
Add resolveExternalUri embedder contribution point
Auto sync in web
Use userRoamingDataHome
Pass content type header
Store last sync data in file
Adopt icon font in find widget
Move user data sync to shared process
scm: render paths in list mode
scm: ToggleViewModeAction
fix padding
ResourceTree :lipstick:
:lipstick:
:lipstick:
scm: pin
AbstractTree.onDidPin
Update icon color descriptions
:lipstick:
cleanup, add context menu actions back
Update distro
Adopt icon font in notifications
read and write user data using sync store endpoint
scm: reorg
debt - add openExtensionDevelopmentHostWindow into IExtensionHostDebugService
electron-main renames :lipstick:
uv_pipe_open error when starting code-insiders from WSL microsoft/vscode-remote-release#1420
Update refs to include codicon
:up: distro
Remove svg reference
debt - remove IWindowService#log in favor of a logger that can log to the main side
sketch user data sync store service with log in
Keep better track of custom executions for reruns and depends
move credentials service to platform
breakpoints: render candidates as decorations
Revert notification icon change
Rename iconDefault => iconForeground
move user data sync store to workbench
Introduce id and user data sync store registry
debug session: add breakpointLocations
scm: flat
breakpoints: interaction on inline breakpoint decorations
debt - more platform/electron-main cleanup
Include tooltip on custom tree item icon
debt - clean up platform/electron-main (part 1)
Move remote dialog local commands into remoteFileDialog.ts
scm: keyboard nav
Move remote file dialog local commands to electron browser
Move TreeView message API to stable
breakpoints: introduce InlineBreakpointWidget
debt - introduce electron service and adopt for showMessageBox
remove unused import
scm: proper folder resources
fixes #80671
miss compilation
:up: chokidar@3 (#81028)
remote invalid import
:lipstick:
Move user data sync service to platform
electron - fix deprecation warning (accessibility)
debt - remove some internal commands
web - change API to URI (from UriComponents)
:up: distro
Update icon ref to codicon
Scope icon color token
Remove output style
Revert "Move user data sync service to platform"
Revert ":lipstick:"
Add icon for image preview ext
Meiryo -> Meiryo UI
Address link protection feedbacks
:lipstick:
Move user data sync service to platform
handle conflicts outside synchroniser
move user data sync store service to platform
Add icon default color style
Don't duplicate external webview commit in so many places
Let webview editors show in diff original view too
adopt new terminal API
extract settings merge as a service
Update panel icons to use icon font
web connection
remove docIndex in markdown language extension (#80933)
JSONEditingService: update multiple value
Outline: reveal at definition instead of center
Support for revealing at definition
move user data sync services to platform
:lipstick: tests
debug: move all breakpoint editor decoration to breakpointEditorContribution
Prevent back/forward gestures on macos
Update cpp grammar and add test
Support code-workspace files coming from a file system provider
product - guard against bad usage
:up: distro
:up: distro
Update cpp grammar to handle macros (#80974)
Refactor extHostTask (#80970)
web - use product service for help actions
:up: distro
debt - use common/product over node/product
debt - browser/product => common/product
debt - common/product => common/productService
web - export types from API
web - limit workspace actions
move registration of remote file commands to remote.contribution.ts
web - move help actions to browser
web - move surveys to browser
web - move welcome to browser
debt - a bit more strict init
Add Codicon
polish
Update grammar files
update doc
show sync actions in a separate group above update
prepare to merge to master
Add workaround for parameter hints overflow with electron 6
Make webview editor state updates handle diff editors
Re-layout webview editor when input changes
Documentation
Use uuid instead of incremental counter for webview ids
Working on basic save for custom editors
Hook up basic save prompt for custom editors
Call setForceOpenAsText
Return result directly instead of mutating var
Return result directly
Allow using "default" in "workbench.experimental.editorAssociations"
Use const enums for minimized ISuggestDataDto types
First cut at showing webview editors in diff views
Make Dimension immutable
WebviewEditorInput -> WebviewInput
[typescript-language-features] Add formatter option for semicolons (#80828)
Pick up TS 3.6.3 final
Improve sync: - Push when there is a change - Pull at regular intervals (5s)
Remove cglicenses workaround for xterm addons
Improve intellisense
newHere -> newWithCwd, minor tweaks
Improve continuous sync
debug: introduce breakpointEditorContribution
web - better way to load node modules from remote folder
run sync every 500 ms
web api - use URIComponents
remote async
api - introduce env.uiKind (web, desktop)
remove comments
update gulp-tsb to 4.0.4
:lipstick:
simplify user data contributions
more
Always consume mosue wheel in editors
remove URI from resource tree
disable path in resource labels
:up: distro
scm: adopt compressible tree
WorkbenchCompressibleObjectTree
enable proposed API for new terminal API
remove unnecessary comma
wip: scm as tree
finish resource tree
Iterator.fromIterableIterator
rename setting to enableSync
simplify sync commands
improvements to settings sync
build - disable exploration build merge for now
:up: distro
fixes #80615
chore: Update to Electron 6.x (#75802)
debug: better cancelation support
update native-watchdog (#80845)
scm: resource tree model
introducing tokenScopes
start and stop sync commands
update native-watchdog
Introduce `CompressibleObjectTree` (#77876)
web - prevent unload dialog to show up from workspaces service
retry command exec when having arguments, when contributes, and not yet activated, #80338
web - add workspace editing service support
add todo
web - move out no-op workspace stats service
web - extract no-op tunnel service
:up: distro
Link directly to automation from smoke
Move a lot of terminal into browser
Remove Terminal.onDidWriteData
Editor should become refocused when executing reopen with
"Reopen with" should close existing editor for resource before opening new editor
Don't rely on WebviewPanelResourceScheme hack for reopen with
Improve testing around terminal env vars
Add telemtry property for local TS version
Set default colors for 'minimap.selectionHighlight' in other built in themes
distro
Always use external endpoint on web
Remove WEBVIEW_ENDPOINT workaround
Improve detectLocale description
Change setLocaleVariables to detectLocale
Make sure asWebviewUri also handles replacing commit
Update Octicons: sync icon and spin speed
Improve some comments
Complete language variants filled in for LANG var
use alt+d instead of alt+D (#80824)
stop sync when turned off
Implement start and stop sync commands
add trailing comma to the remote change
Accept and sync changes
Try using latest publushed webview iframe version for external webviews
Adding concept of a state for webview editors
fix compilation
Linkify variable values in repl
:up: distro
error handling
debug: support canceling requests
update - move to browser (#80806)
Do not show settings preview in recently opened list
Use in memory fs provider to show conflicts
calls - fix api command and tests
fix tests, no vscode-dependency please...
fix debug UI doesn't cleanup spinners on debug session end
rawDebugSession implements IDisposable
calls - add API commands
Use ref instead of version
calls - fix split view issues
Ensure that the settings panel shows TypeScript and JavaScript with caps for the S
:lipstick: named export for extHostProtocol...
calls - add CallHierarchyItem to type converter
calls - correct highlights et al
fix conflict detection
calls - more title/message alignments
calls - remember selected direction
calls - reuse change direction action
debt - dispo
calls - adjust to new root
calls - remove leading dash...
calls - tweak title, metatitle of peeks
node-debug@1.38.5
calls - remove resolve-function, use document,position tuple when making requests
Add command to resolve conflicts
update distro
show merge syntax for conflicts
DAP add support for breakpoint locations
improve settings preview result - settings preview mode - Check for local and remote changes
fixes #80780
add webpack-cli as dev dependency for easier testing/running
push workaround for ts-loader weirdness
:up: distro
Remove old-style webview state migration code
Add telemetry event when TS server is spawned
Remove gating for TS < 2.2.0 features
Enable/disable webview find buttons based on if results have been found
Remove vscode-automation from pckage.json
Include user configured custom editors in `open with`
More explicit names
Add explicit implements WebviewFindDelegate
Remove deprecated scrollPreviewWithEditorSelection setting
wip: scm tree filter
typo
Reduce font-size of new Ocitcons
Relink automation dep before compile
Remove unused variable
Add selection highlight decorations to minimap, closes #21404
add cansavecontextkey (#80337)
fix sync action ids
wip: scm viewlet as tree
fix auto sync
Have ExtHostTerminalService extend Base service
Move most of ExtHostTerminalService to common
set auto sync delay to 5 minutes
Add user configuration section to settings
Add resourceUriProvider API
fixes #80452
reset status
fix auto sync
jsdoc update
Remove unused events
Add sanity test for package.json
add test for #80688
- contribute sync actions to global activity - implement status in settings sync - Implement user data sync service
fix tslint warnings...
:up: distro
Some jsdoc
fixes #80435
use Outgoing/Incoming terminology
:up: distro
remove proxy usage
:up: distro
Have `hasWidgetFocus` return the same underlying value as the event source (#71553)
Do not export unused constants
undo explorer work
fixed AsyncDataTree.asTreeElement
:up: distro
add meta title with direction - Calls/Callers
Remove un-used parameter from CustomeExecution callback
web - get product config through build and not via API
Tweak opacity of editorIndentGuide.background and .activeBackground
reset view state when direction changes
debu: adopt show with confirmation
dialogService: allow checkboxes for show
dialogService: show should return an IShowResult
update DAP to latest version of cancelation support
fixes #80616
make default direction CallsFrom, better source range highlights
Add title API for tree views (#80623)
web - self fullfilling prophecy
associate .i with c
implement CallsFrom/CallsTo proposal
CompressibleAsyncDataTree
web - rename entry point
debt - :lipstick: product config
:up: distro
:up: distro
formatting
Replace Disposable[] with DisposableStore
Push `editorResource` concept back into `CustomFileEditorInput`
Prototyping custom editors (#77789)
xterm@4.0.0
Use the document that contains the md link as the resource for getting config, not the target document
Renaming setting names
Extract
Replace Disposable[] with DisposableStore (#80661)
Update check, diff add/remove icons, remove SVG font
Make DebugSession.loadSource work for non-caches sources, see #79228
Web: Load onigasm lazy (#80642)
Unset VSCODE_LOGS in code.sh so it writes to the code-oss logs folder and doesn't inherit the insiders log folder
Bump vscode-ripgrep
update distro
Load script directly
Revert "async data tree: use proxies instead"
Have fallback message when code aciton command fails for unknown reason
wip: comment out bad code
wip: more tree node mappers
Surface errors for commands that are part of a code action
Pick up TS 3.6.3 insiders
remove reference to non existing file
support user data error handling
snap: add assets verbatim (#80585)
wip: CompressibleAsyncDataTree
debt - remove a lot of unused icons
update distro
more cli args cleanup
snippet - honor spread setting for $CLIPBAORD variable with multiple cursors
web - add proper callback landing page
re-enable perf related, hidden arguments
async data tree: use proxies instead
fix compilation
settings sync using remote user data service
undo usage of tsProjectSrc-stream
debt - load onigasm lazy
remove gulp-tsb hack, fixes #80629
Contributable variables for configuration resolver (#80478)
use tsb 4.0.2 use project files as src-stream, https://github.com/microsoft/vscode/issues/80632
update distro
fixes #80593
update distro
:up: distro
web - move selfhost pieces out of workbench
:up: terser@4.3.1 (#80627)
update distro
suggest - avoid tokenize when quick suggest options are all on or all off
Introduce editor.multiCursorPaste (fixes #80624)
Update enablement of status bar item in constructor (#80517)
Implement URLHandler router which looks at windowId query param (#80260)
buildSnapPackage: use the default snapcraft target (#80217)
:lipstick: remove strings.empty
error handling :lipstick:
Replace Disposable[] with DisposableStore (#80447)
Delay gulp-watch read so watch task isn't broken on slower disks. vscode writes files non-atomically. This is useful on an azure devbox over ssh.
Just compare to undefined
Separate REPL evaluation from it's result; fixes #79196
Use shared tsconfig for markdown preview
Use Schemas constants
Allow `file` and `vscode-remote` schemes for links in markdown
Add automation to root postinstall script
update distro
adopt registerAndGetAmdImageURL
fix too many updates
Introduce registerAndGetAmdImageURL and inline such images in the bundle phase in .js
compressed object tree model: use proxy
xterm@3.15.0-beta108
update distro
actually call the `compareByKindAndRank`-function
fix help
fix manual tree tests
optionDescriptions as parameter of parseArgs
tree: clicking on twistie should only expand/collapse if node is collapsible
fix bad index tree collapse state update change
update test file
sortText default value is label, #66109
üíÑ
Skip WLS check if env var DONT_PROMPT_WSL_INSTALL is set.
Restore unit tests
Update Octicons (organization and sync)
Unify padding across toolbars
Do not emit EditorOption in monaco.d.ts
Remove unnecessary JSON schema
Add white disconnect icon
Refactor editor options (#80469)
:lipstick:
confine sashes within splitview
Move schemas next to the editor options
Update distro
xterm@3.15.0-beta107
use project-src() to compile what tsconfig-defines
Use --preserveWatchOutput in tsc watch, update yarn deps
index tree: prevent root from changing collapse state
Shorter expand/shrink selection shortcuts on mac
repl: no neet to focusStackFrame when repl expression is added
fix bad update
adopt gulp-tsb 4.0.0, remove postinstall hacks
debug service: do not auto focus when a continue is executed
callstack reduce selection updating
debug: reduce call stack flickering if bottom of call stack did not change
update distro
Migrate editor options schemas for booleans
call stack: inlince actions should be white to be seen on blue background
IndexTree: fix setCollapsible
Allow reloading / stopping / pausing sessions inline in the tree
More editor options adoption
Revert "Workaround for #78388 (twistie not updating on has children change) (#78390)"
:lipstick:
Simplify EditorLayoutInfoComputer
:lipstick: use asyn/await
Rearrange editor options
Reorder options
update distro
debt - remove unused service workr
IndexTreeModel: complete setCollapsible()
Simplify editor options
wip: tree model setCollapsible
fixes #80415
Open local files in same window when remote by default
notifications - never hide them when window does not have focus (fix #80285)
url service - create proper URIs
fixes #80404
wip
:lipstick:
Update new Octicons
add cancel request to DAP
Update hygiene exceptions
Refactor smoke UI automation into separate package
fixes #80414
:lipstick: refactor AsyncDataTree tests
only warn when using unknown option
add disable-inspect to argv options
update distro
cli: warn when singular argument is defined multiple times
Remove IEditorOption.equals
enableProposedApiFor is string[]
Keep mixin of the raw options
Respect scheme of defaultUri in remote file picker
debug: wording polish
introduce debug.onTaskErrors
fixes #80054
cli: report unknown options
extensionDevelopmentPath is string[]
make string[] in ParsedArgs consistent
Add EditorFontSize
Migrate fontInfo to the new editor option format
Go to ext host for system default shell and args for tasks
fixes #80336
fixes #80386
Migrate computed editor options
resolve #80344 on master
debt - clean up strict init
Add test for eventing
Show Create tasks.json file from template in workspaces
Convert more editor options
Allow one-off global tasks if they have a cwd
:lipstick:
fixes #80362
Better fix for #80251
clean up dispose
:lipstick:
strict property init - markers
make activity bar hide itself
fix calling proposed api
Make DebugSession.name writable; fixes #79583
Remove workaround for #74875
Add branch name to commit input box
fix the custom menu bar refs #78167
Don't log black text
strictPropInit for settings, #78168
Stabilize extension terminals (vscode.Pseudoterminal)
Move puppeteer dep into smoke test project
Improve createTerminal API docs
optional clipboard service for diff editor widget.
dialogs - remove unused options
temporary workaround for treeshaking
prevent overflowing of splitview views and parts
layout splitview views with absolute positioning
fixes #79029
Filter out 'No license field' in gulp tasks
fixes #80002
:lipstick:
debt - use Record to define [IString|INumber]Dictionary
move SymbolTag and CompletionItemTag apis to stable, #23927
avoid shadowed variables
build - disable web smoke tests for now (#80308)
make DecorationData a class and rename it to Decoration, #54938
remove automatic merging/overwriting of decorations, simplify proposed API, #54938
build :lipstick:
workaround #80251
fix i18n for extensions
:up: distro
web - add pwa icons
bump version
Move more editor options
right click context menu for inline diff actions
Migrate more editor options
HTTPS link to ux.stackexchange.com (#80255)
scrollOff ignoring single mouse clicking
Declare writeBuffer/_innerWrite access in .d.ts
Move xterm type customizations into contrib/terminal
Add missing comma in Pseudoterminal types
Part of #71996
Correct kb validation for windows ctrl.
Correct kb validation for windows ctrl.
:up: distro
wsl2 workaround no longer necessary
debt - wrap things inside functions
breakpoints: polish titles
label service: workspace suffix has to be explicitly set
remote - it is still server.bat locally
remote - server.bat => server.cmd
workaround for terser issue (#80202)
debt - remote integration tests (#80265)
auto sync only when there is user data
add imports
remove imports
:lipstick:
fixes #79037
fix markers contribution
build pipeline: use latest yarn version
debt - bring back opn dev dependency
add TEST_RESOLVER_USE_SERVER_FROM_SOURCES (#80254)
fix testss
debt - a bit more strict init
:up: distro
:up: distro
print parse errors for json
Format files for 3.6
Build VS Code using TS 3.6
Lift editor options key name to a generic
renames
Adopt conditional types for editor options reading
Convert more editor options
Persist log level change in web
#78477 Update markers of resource when updated
fixes #78545
:up: distro
rename test-release to test-documentation
:up: distro
:lipstick:
remove compilerOptions/lib/webworker because it conflicts with lib/dom, #80074
fix env.test for remote
debt - add some logging for #79460
code :lipstick:
fix color doc test
Show an error when a command is missing in custom tree
revert fix ##79519
url service - also handle external urls
clean up
deb - try with await import (#80206)
update distro
Debt: remove unused dialog service and thereby static routing
bump distro
- Add a typed way to read options - Move more options to the new format
debt - enable env.remoteName test again
Problem matcher shouldn't read echo line
debt - platform#setImmediate should be a micro task on all platforms
debt - remove duplicated types
debt - remove old proposed API: vscode.ExtensionContext#executionContext
Update grammars
Build: run integration tests against actual build (#80203)
Use terser for minification (#80201)
debt - less null
debt - proper strict null typing in subclasses of editor
add worker-src and child-src, #79922
update distro
debt - remove getmac from remote too
fix build
debt - inactiveextensionhandler => extensionhandler
debt - bail out on some window methods in tests
build - enable ELECTRON_ENABLE_LOGGING again on Linux (#80192)
Enable full TSLint check in build (#80191)
Strict init (#80190)
Add c++ externsion support for CPP
search - Remove unused change event cases
Update codelens.ts
Update codelens.ts
bump build cache salt
fix formatting
tsconfig :lipstick:
fix tests
fixes #80097
fixes #80014
Introduce a new way to manage editor options
Re-enable new octicons
chore: Bump electron@4.2.10
chore: Bump electron@4.2.10
fix tests
remove all StrictNullOverride
chore: update tsc target
change type of _serviceBrand from `any` to `undefined`, #79918
:lipstick:
bump version
Revert "bump version"
bump version
update distro
fix git branch sort order (#80096)
fixes #78934
Document that webviews do not let you post blobs or other dom objects
Update documentation on postMessage to match actual behavior
update distro
Prefer using layout dimensions for sizing webview
fixes #80039
config option to separate or hide untracked files
Add publishing of webview content to pipeline (#80069)
Enable Alpine in stable builds
Enable armhf for stable builds
fixes #78175
fix UX bug, runs when user clicks the result now
update API doc comment for https://github.com/microsoft/vscode/issues/47292
Views: don't lose workspace views states when writing (#80049)
remove web testing
fixes #79037
views: don't lose workspace views states when writing
trailing commas only for setting files
web - ensure deps are in sync with main
fixes #79068
Only pass selection in custom tree view if action is in selection
Change custom view multiselect array to have all selected
rephrase related to #66296
fix #79633
fix #79908
Make sure modes.DocumentSymbol.tags is not undefined
fixes #80027
Pick up TS 3.6.2
Update html services
restore panel to size before maximized on launch refs #79891
prevent editor taking up more than its share fixes #79897
Update distro
Re #79893. Differeniciate null and 0
fixes #79985
Use auxclick and click events to intercept clicks in webviews
Re #79877. Improve wording for inline diff actions.
Polish description for customdata
debug: do not store breakpoints activated, it should only be a temporarty state
fixes #79895
fixes #79923
Revert fix for #78167 which causes a perf issue
#79983 add tests
extensions - fully provide keytar API
fixes #79884
node-debug@1.38.4
upgrade DAP to final version 1.36
fixes #79961
fix #79945
web extension debug - do not explode if connection is not there
fix #79815
fixes #79867
fixes #77063
debt - remove unused dev dependency
web - align API with what we expect
give extension host some time to leave the event loop before disposing command results, #79805
make sure _exeCodeLens triggers dispose really at the end, #79805
build - merge exploration build on each commit
fix #79927
Accessibility: Custom tree should use tooltip as aria lable when it exists
fix #79949
rename to window
Rename to browser log file
start activeEditorGroupIndex from 1 instead of 0 (for #22755)
fix #79926
remove ondidchange in splitview
Update CSS service to get deprecated items
enable running individual npm scripts in the containing folder
equate editor area hidden with maximized panel fixes #78175
hookup missing listeners fixes #79904
Update markdown grammar
Adjust description to match the behaviour of the checkbox
Update Git count badge description
Scope new Octicon updates
Use const instead of let
Add prettier config
Add cookie
Update message to reflect current state
build - catch up with distro
update distro
debt - clean up buildfiles (#79914)
[json] update service
Move tree create to happen when the data provider is set
Make Quiet Light active indent guide discernible
clarify reason
Local md fix for embedded C++
Use version of C++ grammar from 1.37.1
editors - preserve group activation behaviour for extensions
build - please run
update distro
fix for 79704 - support for @example <caption>
add msft internal identification logic (#79616)
Improve link protection
Log missing csp on extension host instead of main window
Spell
avoid focus steal when show context menu.
no need to list chrome separtors, default editor ones are just fine
Only allow protocol links in webview on desktop VS Code
Don't dispose markdown preview emitters before firing events
svg is necessary in monaco.
Do no show line action when the deletion is one line.
Revert zap.
Disable new Octicons for endgame
allow select/copy on dialogs fixes #71407
Allow hover on deleted text.
zap for inline diff actions icon.
:lipstick:
Resize find widget on double click
editors - merge activation options into one
Add `data` to trusted schemes in rendered markdown
exploration - only merge before nightly build
Do not disable folding when screen reader is attached (#43262)
editors - tweak options around group activation more
GridLayout perf improvements (#79614)
simple change for #79815
fix accessibility word operatoins and tests
options - better overwrite()
fix range vs postion regression in quick outline
fix tests
update distro
:lipstick:
fix #26012
run oss tool
Adopt prependLicenseText support in OSS tool
better fix for #79798
:lipstick:
Adopt new OSS tool format for cglicenses.json
Run OSS tool
wsl extension id should come from product.json
fixes #79696
sync status
fix #79798
worker tweaks
web - add manifest to support PWA installation
fix satus bar entry
fix #78888
use user data instead of identity
fix #78825
Allow goToLine to work backwards (#79348)
fix #79763 (also fixes #79787)
workaround #79786
fix #79633
fix #79784
Allow goToLine to work backwards
update status entry location
User data sync: Implement starting flow - user identity - user login provider - user data provider - activation event - status bar UI
fix tests
:up: distro
web - lift product config to be proper API
debt - move some environment to workbench
debt - allow to use request helper from base
labels - restore original functionality of getUriBasenameLabel()
microsoft/vscode#79579 Add Yu Gothic UI to font-family jp
fix tests
Re-check opened files while executing refactoring
Update distro
Make sure we notify webview of view state changes in a consistent order
Extend dispoable
copy single line without line feed.
allow quick input to dismiss modal progress
fix console errors when notification is removed
correct code revert
Hover actions on gutter in inline diff editor.
Update distro
update distro
Update html/css services
distro
Tweak deprecation messag #69335
fix tests second attempt
update distro
Improve connection logic (fixes microsoft/vscode-remote-release#1224)
introduce cursor word accessibilty commands
Revert "build - add pool"
web - prevent waterfall loading
update distro
worker - block some globals from being used
Workaround for broken WSL2 in Win build 18947. For #77898
fix tests
Option to configure which services should be run (microsoft/vscode-remote-release#211)
build - document loading approach better
Include userdata in configuration resolver file resolution
Don't disable unnecessary features when a screen reader is attached
re-enable all tests
debt - quick outline using the same model cache as breadcrumbs and outline tree
no highlights for deprecated workspace symbols, also tweak sorting, #50972
don't highlight quick outline items, also align sorting/highlighting with IntelliSense, #50972
fixes #79693
labelService: getUriBasenameLabel
build - schedule back at 7
Normalize task problem path before replacing slashes
registerSingleton for IStaticExtensionsService
web main :lipstick:
Always register a basic uri formatter for vscode-remote:/
fix #79694
disable failing test,  #79692
add SymbolInformation.tags, render deprecated items in quick outline and workspace symbol search
web - we need to prevent unload when we detect a pending save or auto save because long running operations are not allowed
web - switch back to window.onbeforeunload as otherwise the page unload can no longer be prevented
Update dotnet tasks template
add SymbolTag, make tag a propertiy, #23927
use ReadonlyArray for tags, #50972
CompletionItemKindModifier -> CompletionItemKindTag, #23927
Add a few more trusted domains
build - merge to electron-6.0.x automatically
fix exploration merge
update distro
Add deprecation warning for rootPath #69335
add reconnect now button
Only do workspace stats computations if telemetry is enabled
tslint - also show warning when using NodeJS type
Update distro
Added underscore support for preserve case
Update distro
Remove mention of env in automation shell
Fast return if doesConatinSpecialCharacter is false
Adopt new paste and addCsiHandler APIs
xterm@3.15.0-beta101
Remove layer breaker from terminalTaskSystem
web urls - use absolute paths
fix #79628
Use void | number for onDidClose
Update Readme.md Intro
document symbols and deprecated, UX, internal API, #50972
have only one way of enforcing proposed API
fix compile
web auth - move interface out of env
some tsconfig polish
:lipstick:
fallback in memory log provider and add console logging
fixes #79625
editor service :lipstick:
call stack: debug session should not show an expando when it has no children
update distro
Finalize multi-select support for custom tree view
web - implement callback auth flow
Revert "chore: upgrade native-watchdog@1.1.0"
fixes #79608
Add @types/cookie
tweak UI for deprecated completions, update API proposal #23927
kindModifier is a Set, #23927
chore: upgrade native-watchdog@1.1.0 (#79536)
fix #79454
build - touch scheduling rule in the hope it gets installed again
tslint - move rules
jc
Revert "Update exploration-build.yml for Azure Pipelines"
Update exploration-build.yml for Azure Pipelines
build - add pool
Update exploration-build.yml for Azure Pipelines
Platform specific kb overrides default primary and secondary.
Update find keybindings for all platforms
Support multiline find widget in monaco.
Use more explicit variable name
Remove refactor/extract from interactive playground
Pull in latest markdown-it version
More accurate file count for workspace stats
Ensure no more than MAX_FILES are read when collecting workspace stats, #79456
Add tooltip to settings GUI TOC - #79581
No longer check if default is US.
Revert "Use per-resource settings for js/ts validate.enable"
enable indexed db log
de dup keys
undo change in shared process
retain last 50 sessions
disable indexed db log provider
adopt in memory log provider to extend key value provider
fix naming
use logs path
Extract and create key value log provider
Use per-resource settings for js/ts validate.enable
browse session logs
:lipstick:
logs data clean up
:lipstick:
Remove extra conditional guard
Remove extra conditional
Issue #79599 - CSS LS fails if InitializationOptions.dataPaths not set
use indexed db for logging
register indexed db fsp
pass logs path instead of log file
support directories in indexed db fsp
Update distro
Move Enter handler to commands from input keydown handler.
select keybinding entry but not focus when editing keybindings.
then -> async
tslint fix
internally, add CompletionItemKindModifier,  #50972
builds - add build to merge exploration
editor - :lipstick:
npm installing
update yarn.lock files
better extension host logging
editorService: do not take priority to later groups
editorService: be a bit smarter with revealIfOpened Give priority to a group if the Editor is already active
tslint - polish rule (support multiple declarations)
debugHover: restart scroll position when shown again
list expose scrollLeft
update jsonc-parser
Do not scope validators to schemes
clean up
fixes #78510
Revert "Just simple object, no need for Map"
update distro
update distro
Use cookie for connection token, align fetching of remote resources
explorer: Tree returns too early from the expand, need to wait for next tick
builds - prevent window.open() in tests
tests - disable opener tests
implement IndexedDBLogProvider
Focus correct SCM when restoring editors
Support window logging in web: - Implement File service based log service - Implement In memory log provider - Use in memory log provider for window logging
debug: do not focus new session automatically
debug: callstack always inline thread children even if there are child sessions
debug: always inline one session
fix #79558
Avoid redundant keymap change
Made the function generic and passed hyphen as a paramater
:lipstick:
animation for single line and no luck for multiple line
unset VSCODE_LOGS to fix spdlog issue
Don't call explorerService.select
Just simple object, no need for Map
chore: upgrade native-watchdog@1.1.0
Make sure we update the webview's internally tracked group for restoration
Use bi-direcitonal map for mapping webviews to handles
Fire a single batched event internally to update all webview view states
Simplify csp for getDeserializationFailedContents
Don't track webviews separately from inputs
Better handle cases where webview view state in api can get out sync with real view state
Use _register
Add try/catch around .focus call
Move more inputbox keybindings to Commands
Auto rewrite vscode-resource entries in csp in web iframe based webviews
Sort imports
Added quickpick option and display of tag annotation on menu
remove commented code
update replace input box size when resizing and display preserve case button properly
Rename parameter
Always require an argument to command
Rename command
Enable "restart ts server" command in js/tsconfig files
Ensure resolved cwd is passed back to window
Replace Pattern test updated
Restrict which subsets of the markdown grammar the js/ts injection eagerly loads
Added hyphen pattern case preserve logic
Teardown server on SIGTERM
Add experimental terminal title event option
Changed comment message
Added try catch for CustomEvent treated as MouseEvent
Get recently opened
fixes #77063
debt - use DisposableStore
goto line announce column
Make custom tree view registration wait until extensions are registered
no remote authority for worker process manager
debounce outline requests based on average reply duration, #77096
fix #79501
fix #79469
debug: refresh variables when selection added to repl
debug: data breakpoints that can not be persisted should be cleared when a session ends
make extensionService fit for running without remote connection
window.open throws
Polish breadcrumbs icons spacing (#79005)
Remove for-in usages (#79432)
debugSession: respect sortText
update DAP to 1.36.0-pre.0
repl: support completionTriggerCharacters
debt - prefer opener service over window.open(). Block window.open()
use latest DAP
node-debug@1.38.3
allow https: as 'script-src'
fix #79453
Move webview into browser
Finalize asWebviewUri api
Update md grammar
Whitelist a few additional attributes for img elements in md√è
Update md grammar
Pass rendered markdown through additional sanitizer
Update browser telemetry common properties
Unify trusted domain language and use quick pick item id
distro
debt - menubar service should not live in common (#79181)
update distro
debt - reduce dependencies diff to E6 branch
tests - more diagnostics for getUntitledWorkspaceSync() random failures
fixes #79280
sync diagnostics, fixes #47292
Support using csharp in markdown preview to identify c# code blocks
update distro
Drop unneeded action registration
tslint - disable some rules with comments (#79454)
Update trustedDomain default config
TSLint: show a warning when accessing node.js globals in common|browser (#79222)
#79429
Wording update
fix scope when falling back to original load function
update distro
fix path
fix #76573
build - have different worker extension host entrypoint, copy worker bootstrap file
:lipstick:
refactor: GlobalStorageDatabaseChannel should dependents in IStorageMainService (#79387)
:lipstick: imports
Added buildReplaceStringWithCasePreserved generic function to be  used in both search side and the find side
debt - fix some layer breakers
:lipstick:
Build errors and test failures
Update UX
Don't add star to quickpick
Storage instead of setting. Add command for configuring
Address feedbacks
Drop details & on -> from
:lipstick:
Drop Configure Trusted Domains command for now
Improvements
fix Markdown Preview scroll remains same after clicking on some other link
web - storage/lifecycle :lipstick:
Update extra space on top of editor when find widget state changes
Marking arrays readonly in ExtensionPointUserDelta
Use type for IExtensionPointHandler and mark array readonly
Use closure instead of parameters
Use dispoablestore
Remove not null suppression
Max height and hidden vertical scrollbar
Update distro
Format file
xterm-addon-search@0.2.0-beta5
Pick up TS rc
update textarea width when find widget or editor resizes
toggle selection find box should align with other checkbox
Focus toggle find selection button
flexible height of find widget and align options always at top
tab sequence for preserve case button
Transion for find widget fade in fade out
flexible height input boxes and fitler out arrow keys
Introduce machine overridable setting
Introduce and adopt asCSSUrl
debug: introduce data breakpoints
Update octicon css logic
Indicate web in smoke test step
make staticExtensions optional
add IStaticExtensionsService, add `staticExtensions` to embedder API
add fetch file system provider
fix error when dismissing snippets picker
Fallback to default when cwd var cannot be resolved
Scope new variable to a string
Revert "build - disable smoketest"
fix #72417
explorer input black magic
web - synchronise global state changes
update distro
Load Octicons through ts instead of css import
fix: keep the two "Copy Path" behavior consistent
:lipstick:
make sure to prepend vs/nls
better worker error logging
fix web platform check
Enable new Octicons style by default
build - disable smoketest
Removing test for disposable store
Remove webview svg whitelist
Marking fields readonly
Use const enums
Mark readonly
Don't dispose of added object in already disposed of case
Update distro
Update distro
Add telemetry+warning for webviews that don't have a content security policy
Remove extra null checks in coalesce
Strict init and mark events readonly
Strict init
Disable smoke tests on Linux
remote explorer and contribution under proposed api
introduce RemoteAuthorities
Update checkmark so they look more like a ‚úì
Update search stop icon
update distro
Add connectionToken
Improve token regex
Make display name consistent
Run smoke tests for darwin/linux in CI
Move puppeteer to dev deps
Update distro
Add setting to toggle new octicon style
Reduce diff
Remove smoke tests from CI for now
remove FakeCommonJSSelf
web - reuse require interceptor logic
fix typos
Reduce diff
Remove click code from puppeteer driver, move interfaces to common
use safeprocess env
Do not expand session tree node when selecting it
fix tests
update distro
inline product configuration in produt service
fix compile error
callStack view:  do not show thread when there is only one to be compact
remove proposed API `vscode.commands.onDidExecuteCommand`
rawDebugSession: do not use process
debt - avoid process dependency in common
fix process layer-breaker
better exports trapping
web - workaround clipboard issue with selection type
web - implement credentials provider and add API
update distro
debug: prevent expression.value being undefined
fix exports trap
fixes #79168
minor polish
use process.setImmediate
Move extension tips service to web and enable extension recommendations
do not look for executables in web
debt - more tests diag
web - enable feedback contribution
update distro
Multi-select in custom tree view (#78625)
web - add todo for potentially cyclic dependency
docs: fix type (#79129)
Simplify tasks command
update distro
:lipstick:
fix mispell
tests - add more debug for randomly failing getUntitledWorkspacesSync
update distro
debt - make diagnostics service only accessible from node
debt - move issue service out of common since it will not be supported in the web for now
debt - avoid some StrictNullOverride
Work around minifier bug (#79044)
Revert "Update uglify-es (#79044)"
Add installer assets for OSS (#79045)
Improve jsdoc section of walkthrough
Change openEditor to return undefined instead of null
Use undefined instead of null in IEditorOpeningEvent and IOpenEditorOverride
Register Remote Explorer when there are contributions.
Don't include closing ] in folded range
Make sure we compare fully normalized error codes when checking for fix all actions
Use new browser none arg
Update distro
Base web user data dir off normal one
Still show fix all actions for fix-all actions that can fix multiple errors with multple different diagnostics
Update markdown grammar
Teardown on sigint
Register driver
fix tests
migrate keys from legacy layout #79020
Update distro
uses getSelections and simplifed the return
Improve typings, use async
Simplify terminal commands
use product service
expose product configuration in product service
Revert "Work around minifier bug (#79044)"
Update uglify-es (#79044)
add `extensionHostWorker` entry point, fixes https://github.com/microsoft/vscode-internalbacklog/issues/738
- use strings for view zone ids - make it unlikely that a new view instance would accept a view zone id from a previous view instance - remove that the find widget removes a view zone id from another view (fixes #71745)
add and use `getWorkerBootstrapUrl`, don't use default worker factory anymore
Move getHashedRemotesFromUri to IWorkspaceStatsService
tests -remove unused services
#69108 Move IWorkspaceStatsService to common Introduce a simple service for web
very basic support to load multiple files
move windowsIPC => common
debt - IExtensionDescription#main should be relative like all other file references
better check for worker/web extension
Revert "test build schedule"
test build schedule
Added preserveCase in search side bar
fix: event's jsdoc typo (#79071)
use `vscode-remote`-endpoint when importing scripts
Improve #79047 fix after feedback
Issue 78480: Clear Filter command link includes dot (#78982)
add action only in remote
add extension kind web
open exter - move into opener service
web - do not loose state on unload
Rename htmlContentRenderer -> markdownRenderer
Split MarkdownRenderOptions from FormattedTextRenderOptions
Split formatted text renderer into own file
fixes #77797
#78168 strict init
#78168 strict init
#78168 strict init
Move cleanRemoteAuthority function to common location
fix: event's jsdoc typo
fix label
debt: use action bar from the panel view
Use bat on Windows
Add continueeOnError to smoke tests
Try add smoke tests to build
Improve logging name
Clean up teardown code
Kill process when process exits
Use temp user data dir
Remove unused import
Launch server from tests
grid tests :lipstick:
Skip using vscode's encoding for port forwarded uris
Make monaco includes consistent
Update distro
Add driver option to IWorkbenchConstructionOptions
Move driver enabling behind flag
Use heuristic to avoid scrambled duplicate problems in small terminal
Update distro
xterm@3.15.0-beta99
allow attached-container
debt - remove unused services from ctor
fixes #77841
Work around minifier bug (#79044)
web - delete unused SimpleExtensionManagementService
:lipstick:
reduce layout calls
grid test :lipstick:
doc :lipstick:
add IllusionMH and gjsjohnmurray for bot commands
web - support vscode.env.openExternal
web - remove .yarnrc file
Watching problem matchers should clear problems on task exit
:lipstick:
#78992
create API instance per extension
strictPropertyInitialization in tasks and custom tree view
splitview: add orthogonal size grid: combine layout and orthogonalLayout
:lipstick:
Update documentation in tasks API to say that Global tasks are not currently supported
web - fix formatting of paths on windows
Update C grammars
:lipstick:
:lipstick:
Update distro
:lipstick:
main.ts => desktop.main.ts
watermark - fix bad disposable use
Inline the markdown css for release notes
Inline renderBody
Inline renderBody
Strip a path list out of an error message
Check that modules in both the base package.json and remote/ have the same version installed
Adjust line height for decorations on block minimap, fixes #78807
Make sure we also persist webview content options
Update vscode-telemetry-extractor (for vscode-ripgrep)
re-enable grid layout by default
Make sure webviews are rendered properly with experimental grid layout
Add workspace.id property to stats telemetry
Modify Breadcrumb Item equality test to include icon display option
Add a configuration option to show/hide icons in the breadcrumbs view
Issue 78480: Clear Filter command link includes dot
Bump ripgrep for remote too
Add CURRENT_SECONDS_UNIX snippet variable
Pick up TS 3.6 dev
Use application insights module, #78475, fixes #78840
update distro
merge conflicts
Update distro
Use env path to resolve executable in TerminalProcess (#78940)
fix #78768
Revert "Revert "fixes #78167""
remove request handler api and make web request service self registerable
web - fix product version regression
:lipstick: - move some more things over to web
move EH debug service to better location
update distro
update distro
adopted latest references view extension
remove support for markdown message in tree view, only support plain string
xterm@3.15.0-beta98
fixes #78159
fixes #78338
fixes #78228
fix more strict init errors
[monaco] expose missing language providers
add autoStart property
:lipstick:
remove IConsolePatchFn function
Update C++ grammar for insiders to get hang fix
remove ILogServiceFn function
use desktop and web ext host logging service
:lipstick:
:lipstick:
update distro
support empty window when debugging extensions
update distro
web - more cleanup of main files
build - workbench.main => workbench.desktop.main
web - first cut workbench.common.main to share dependencies between web and desktop
properly expose remote info
don't use Buffer in /common/
web ext host in web client, not in desktop client
web - add support for showing about dialog
no process, prefer async/await
some clean up
move webWorkerExtHostStarter
fix #78883
clarify trigger characters,  #78781
fixes #78832
Revert "debt - adopt new fs.readdir with stat info"
file commands :lipstick: async/await
chore: Bump electron@4.2.9 (#78836)
fix #77735
removed unnecessary check
#77879  multi cursor support for toggle breakpoint
Remove suite.only
fix bad change that prevents editors to restore
Clean up ITerminalService.createInstance interface
Copy on select all when copyOnSelection is enabled
fixes #69655
update mnemonics for remote connection
fixes #75999
Revert "fixes #78167"
Update distro commit
Revert "Use application insights module instead of script tag, fixes https://github.com/microsoft/vscode/issues/78475"
Remove strong typing of xterm access in smoke tests
Support launching web smoketests in headless mode
Remove resolved TODOs
Make tslint.json jsonc language
Add all passing web tests
disable grid for webview
Enable passing tests
Use application insights module instead of script tag, fixes https://github.com/microsoft/vscode/issues/78475
Update distro
xterm@3.15.0-beta94
Allow web tests to pass electron path exists check
Add some tests for getDefaultShell
Add terminal.integrated.automationShell
window - remove obsolete code for showing window in did-finish-load
:lipstick:
fix compile error
explorer.incrementalNaming
Have terminals fire onExit when killed by user
:lipstick:
keep empty services in one place
adopt ext host service world, add dummy implementations for some services
fix #48357
fixes #78724
touchbar - allow to disable/enable without restart
Add refresh queueing for tree views
Add setting to make touchbar controls optional (#70174)
explorer: additionalScrollHeight only one element
rephrase
keep recently used item selected as long as it's in the top suggestions group,  #78571
editors - add action to toggle editor group maximize (fix #72968)
fix tests
format error message properly (#78740)
Allow empty string in variables promptString
explorer: adopt additionalScrollHeight
list: add additionalScrollHeight option
:lipstick:
iconLabel: supportOcticons by defaul should be false
no require.__$__nodeRequire in /common/-layer
fixed minimist reference & js typing
rename rpcService to extHostRpcService
:lipstick:
fixes #78167
more editor group context keys (fix #22755)
Dialog checkbox (#78533)
fixes #78175
grid layout by default
fixes #78693
$setRemoteEnvironment-implementation requires nodejs
rename scrollOff to editor.cursorSurroundingLines
fix unit test
move extHostMain to /common/, have base extension service in /common/ and extend in /node/
Revert "Revert "Remove unneeded queue from ExtHostPseudoterminal""
Revert "Remove unneeded queue from ExtHostPseudoterminal"
node-debug@1.38.2
fix #78715
simplify
explorer: do not support octicons
list.clear should clear both focus and selection in one go
Only pass conptyInheritCursor for tasks
filesExplorer.openFilePreserveFocus
fix capture group
Remove unneeded queue from ExtHostPseudoterminal
fixes #71258
cleanup scm input scrollbar
:lipstick: layout classes
:lipstick: notifications
Reuse never show again logic - work in progress (#73968)
1337 ES3000
add ExtHostStorage to injector, rename 'createApiFactory' to 'createApiFactoryAndRegisterActors'
move EH debug sevice to proper location
less argumenst, more services in api factory
register ExtHostExtensionService as singleton
:lipstick:
Command inputs should be consistent with keybindings (#73034)
remove misdirection
Updated branch tooltip to display full branch name instead of "checkout..." (#72275)
:lipstick:
Check for updates only once at launch (#72169)
add storage paths to injector
fix #71317
:lipstick:
fix #67705
:lipstick:
add git.smartCommitChanges
fix #78077
git: promptToSaveFilesBeforeCommit should have more options
editor - switching between tab enablement is missing a layout call for title area
git: improve promptToSaveFilesBeforeCommit message
move api.impl to /common/
move cli server and download command registrations out of api.impl
Reinstante keybinding service check
web - enable sourcemaps (#78690)
extHostDownload isn't main thread addressable
move task registration depending on process into /node/
web - prevent unload while writing state to storage service
add setting: scm.countBadge
fix git count badge setting change update
fixes #78603
add search to injector
build: add quality to compile cache key
fix #78679
propagate editor part visibility (fix #68320)
Bump vscode-ripgrep
Show minimap decorations for global search as well, fixes #78236
add debug and extension service to injector
register ExtHostTask as service
fixes #78176
separate rpc and init data into separate services
Update services for #78285
remove scrollOff from top level editor options
Re #78168 Zone Widget
Use grid descriptors for workbench grid layout (#78550)
Update distro
xterm@3.15.0-beta93
use add instead of stage
remove bad css
add service brand to terminal service
make extHost-things services, setup injector
Disable terminal tests that depend on terminal being hidden or shown in the past
Normalize paths when matching problems (#77875)
fix #78500
:lipstick: screencast css
move the textarea with the cursor, workaround no longer needed
fix zsh completions
distro
use vscode-minimist in remote
you are not the chosen one
strict init (#78168)
fixes #66620
distro
fix broken EH debugging
Try resolve git branches beginning with '@' before replacing w‚Ä¶ (#66097)
Reveal and select new tasks from configure task
fixes #78541
fixes #78440
fix #77419
disable pr triggers
atomic ext host restart (fix #78609)
zen mode: To properly reset line numbers we need to read the configuration for each editor respecting it's uri.
tiny tweaks
update with changes on master
fix #78602
distro
More fixes for #78168
distro
distro
build: arm64
skip flaky test
:lipstick:
files - avoid read/write with pos and prefer null (fix #73884)
Re #78168 Comment
Re #78168 Hover, codeAction
Re #78168. Folding, find, color picker, dnd
Remove unnecessary ternaries
Ensure all Emitters in terminal are disposed
Add global event window.onDidWriteTerminalData
Update settings editor list to 24px and add padding for add new
cleanup
cleanup for pr #66095
remove unsed ext loader
debug: adopt initiCancelationToken
Use task filter type to filter on provider
propagate CancellationToken to debug API; see #77293
Add powershell members to default themes (#78270)
adopt new loader for #78542
new branch
add git.supportCancellation setting
:lipstick:
Remove CustomExecution
SignService: No need to cache the import
files - properly emit errors (#78364)
strictPropertyInitialization
strictPropertyInitialization
keyboard - disable failing tests (#78544)
files - lazy trie
:lipstick:
strictPropertyInitialization
Implement resolveTask for typescript tasks
test ci again
disable auto ci
test ci
fix tests
chore: fix typo
Re #69955. Adopt new tree in comments panel.
Remove checks for process manager existence in terminal instance
Remove TerminalOptions.runInBackground
Some clean up
Remove terminal renderers
Remove terminallinkhandler dependence on terminalservice
Make TerminalCommandTracker an xterm addon
:up: vscode-windows-registry@1.0.2
Clean up
debt - a bit of strictPropertyInitialization (#78168)
Make terminalInstance._xterm | undefined
More strict prop init
:up: native-is-elevated@0.3.0
strictPropertyInitialization, #78168
strictPropertyInitialization
debt - remove unused simple service
:polish: prefer to open file in same window if triggered from integrated terminal
files - make exists as fast as possible with our current file system provider API
Don't include File schema in web for file picker
fix compilo
consistent dto namings
debt - test all optional modules
strict prop init terminal
fixes #78505
:lipstick:
Feat. #77878 - trim git clone
strictPropertyInitialization
fix focusWindowOnBreak
Use resolveTask in npm extension
more improvements for #78168
strictPropertyInitialization
Enable simple fullscreen again (fix #75054)
strictPropertyInitialization
update distro
web - make service worker optional
Improve #78168
fixes #73101
debug.focusWindowOnBreak update name
Implement Task Provider resolveTask on grunt extension (#76731)
Strict init for tasks, file picker, and custom view
fix #77996
Update grammars
strict init, #78168
grid - do not use onBeforeShutdown for saving state
Add group to configure task
#10027 confirmSave should check the goal of running an extension is actually to run tests (#78033)
strict init, #78168
strict init work, #78168
fix build
remove unused imports
fix: Resolving Review
Bump version
Disable scroll to command keybindings on mac in a11y mode
Disable esc sequence logging when toggling off
Workaround for #78388 (twistie not updating on has children change) (#78390)
fix #77575
comment out i18n smoke test assertion
fix statusbar smoketests
cancel hide if still hovered
Adopt to connection token - Add connection token to window configuration - Use it in window service while opening windows
fix typo
rerender in tree throws on root
mooncake should wait for web
fix web build version
Don't fail hard when shell/shellArgs vars aren't resolved
flip the default grid layout back for stable
Add compound debug for json
make toggle-explain a SuggestCommand so that it has access to the suggest widget
fixes #76129
Moved the code down for better understanding and pushed the menu item down as a separate group
fix: #78170
update distro
chnage category to remote
Revert "Remove duplicate registration of FocusTerminalFindWidgetAction"
Re #78128. Hide comment widget when editor is an embed editor.
One more fix for #78241
Update distro
Do not send isBuilt
Disable cygwin shell detection
Update distro
xterm@3.15.0-beta90
Lowercase 'For' in 'Checking For Updates...' menu item (#77972)
Add more tests
fixes #72531
Use active indent guide when active tree item is folder (#77852)
fix #78274
opsy
Revert "fixes #73101"
fixes #73101
fixes #75817
fixes #77575
Add powershell members to default themes
add a bunch of strict field initializations
fixes #78251
fix #78261
set display
use editorForeground for deprecated line-through style, fixes #78225
Improve dimensions documentation
Run OSS tool
fixes #71580
Clean up if statements (#78218)
Set resolved cwd as customCwd
Support links in terminal for IAR compiler errors
Redo emmet change
fix tests
also update linux prod build
run int-test on linux
when running integration tests, use memfs instead of fs
List possible categories (#78198)
Make exception error more accurate
Make sure that task definition is not changed in resolved task
fixes #74103
Renames ${qs} to ${query}
scripts/code.sh: remove -x
Update to latest loader
Adopt latest loader (throws Error objects)
Disallow multiselect on custom tree since it isn't supported yet
fix jsdoc for task filter
Improve typescript task slash warning
Run wslCode with electron (fixes vscode-remote-release#914)
Custom tree view shouldn't reveal on focus
Rerender refreshed element in custom tree
[json] update service
comment out errors
comment out failing tests
fixes #77922
Reset color in EH console.logs instead of forcing black For #76550
Revert "serialize grid to workspace to workspace"
update distro
fixes #78088
Make log service optional in term getCwd
update distro
Don't fail silently
serialize grid to workspace to workspace fixes #77922
Remove optional params
update distro
Pass in connectionToken
Remove unused variables.
Update preserve case icon
Add dvorak keyboard layout.
Avoid false negative with keymap.
Update telemetry extractor (#78111)
Resolves variable references for terminal CWD
layout: add check
make DiagnosticsTag#Deprecated stable API,  #56694
file explorer issues to isidorn
Use single quotes for classname
update distro
Missing period
Switch to private style const
Custom tree view elements should only execute command once
fix grid tests
Show the npm script explorer when there is a top level package.json
update distro
Simplify requirements for IContextKeyExprMapper
Reduce diff
Delete unused code
Transfer ArrayBuffers to and from web workers
Modify dotnet build templates (#76318)
Remove multiline comment auto closing pair for C++
workbench: remove "corruption" detection, fix position detection
grid: do not layout views until deserialization is complete
grid: should not allow call to getNeighborViews before first layout
fix #78062
fix #78022
make edit-builder throw when used after finalized, #78066
fixes #77550
[josn] use latest ClientCapabilities
make editor snappable
fixes #77940
fix tests
fixes #78010
Share code between electron and browser drivers
Format proxy setting descriptions
Update html & css service
Update css service
Don't throw out ext host proc requests on slow remotes
Update distro
start -> open, exit -> close, remove exit code
clean up
distro
Update monaco standalone editor icons
add office and sharepoint packages
menu.onDidChagne always returns undefined.
Small amount of code cleanup in commentNode.ts
Tweak comment reaction css
Replace: honor preserveCase when replacing all
workbench: implement preferred size for panel and sidebar
rename contentDimension
grid: fix preferred size usage
grid: onDidSashReset with preferred width/height
splitview: improve sash reset and distributeViewSizes behavior
hide away gridview types
remove EditorPart._preferredSize
recommend important exe extensions
allow extension tips based on location
distro
properly pass non-key/value cli arguments; fixes #76989
tweak jsdoc, #56694
Remove dimmed auto closed character
fixes #76508
fixes #77345
Revert "Add CompletionItem.deprecated property from LSP"
Revert "Add deprecated support to SuggestDataDto"
Revert "Add inline deprecated styling to suggest widget"
Add inline deprecated styling to suggest widget
Add deprecated support to SuggestDataDto
Add CompletionItem.deprecated property from LSP
pass env and cwd to createTerminal; fixes #77111
extract first repository.status call
:lipstick:
dispo - add some more DisposableStore usage
suggest - keep commit character when item isn't changing
properly cancel suggestion details requests,  #77926
RemoteConnectionState not disconnected when initialization fails (for microsoft/vscode-remote-release#1029)
Revert test require renderer
bump distro
add office and sharepoint packages
Minimize diff
xterm@3.15.0-beta89
Update yarn.lock
Remove suite.only
Remove suite.only
Improve naming of start/spawn request calls
Make findInput private again
Invert default direction
Use pty naming instead of virtual process
Resolve CWD
Change default search to find previous
Only overtype automatically inserted characters (fixes #37315)
Update sytles for replace input boxes
Update monaco build recipt.
Make sure we use a consistent name for portMappings field
revert #59193.
update distro
xterm@3.15.0-beta88, xterm-addon-search@0.2.0-beta3
properly use default terminal for debug; fixes #77110
[json] update vscode-uri
register selectionRangeProviders
update html service. FIxes  #77792
remoteAuthority context key: set to disconnected to avoid matches
serialized grid should remember view visibility and cached sizes
Add sk to locales than need region
Make start and shutdown mandatory
Upgrade telemetry extractor (#77938)
Upgrade VS Code telemetry extractor (#77937)
Also add snippet to default config, #71208
up fuzzy score limit to 128, #74133
introduce git APIState
add error message if input section is missing; fixes #76558
Sorry, the bot is never using the correct labels for me
tweak name for internal delegation command
filter commands that start with an underscore, #1431
stop pushing master
fixes #77918
team settings
update references viewlet to 0.0.29
Mark `addMissingAwait` as a preferred fix
Start of browser driver and driver lib sharing
Use monaco-case-sensitive icon
Add test cases
Adopt clipboard service in terminal
Pull common parts into abstract a11y service
Update terminal dropdown after hidden tabs are removed
update distro
More strongly typed telemetry events (#77658)
Tweak names, make shellLaunchConfig readonly again
chore: Bump electron@4.2.7
do not read no settings properties
Bubble up the change of shellLaunch config
Add inline deprecated styling to suggest widget
Update types, fix debug logging and handler xterm calls
Add deprecated support to SuggestDataDto
xterm@3.15.0-beta87
Add CompletionItem.deprecated property from LSP
Use inline decoration
Add deprecated classname
Remove unused word wrap icon
Revert "Clarify findFiles doc comment"
use remoteName in test resolver
CompressibleObjectTree tests: enableCompression
add 'remoteName' context key (replaces remoteAuthority)
more CompressibleObjectTree tests
first CompressibleObjectTree test
remove ITreeNode.parent and ITreeModel.getParentElement
Update glob.ts
revive command args using the arg processor logic, #1431
CompressibleObjectTree: getting ready for testing
Update rangeMap.ts
add API test for onDidExecuteCommand, #1431
relax splice/setChildren return value
CompressibleObjectTree
force refetch of remote resources that have been added before the SW is ready, #75061
render preferences features only for settings files
update distro
fix compilation
fix #77800
fix tests
Call flush instead of dispose for flushing telemetry appenders Wait until data is flushed in cli
introduce CompressibleObjectTreeModel
feat: support list.focusParent command
refactor: merge AbstractCheckForVSCodeUpdateAction to CheckForVSCodeUpdateAction
Support Update VS Code from Command Palette
Fail test if resolveTask is called
Use const
fix warnings
Remove unused exit emitter
Create CustomExecution2 test, make start fire after onDidOpenTerminal
fix tests
fix #75620
Show install local extensions action in extensions viewlet
Use null across EH boundary instead of undefined
isolate and document casting awkwardness
:lipstick: remove more casts
fix wrong type
Add webSocketFactory option
Update
Reverted refactorings
Revert style changes while having typos changed.
Removed style chacnges
Final format change
Respelling "WhiteSpace" as "Whitespace", in functions, as Whitespace is one word
Revert "respelling WhiteSpace as Whitespace, as Whitespace is one word"
respelling WhiteSpace as Whitespace, as Whitespace is one word
Just one stylistic change
Revert "Refactor"
Revert "Refactor"
Refactor
Refactor
Refactored code to make "WhiteSpace" into "Whitespace"
fix tests
Implement microsoft/vscode-remote-release/issues/157
Revert unmodified file
:lipstick: remove unnecessary list/tree casts
move handshake to eh
Make activity bar icons square
Revert "Revert "Add DiagnosticTag case for MarkerTag.Deprecated""
Revert "Revert "Add Deprecated to MarkerTag""
add unit test for #77735
Filter extensions by category (#77306)
Revert "Add Deprecated to MarkerTag"
Revert "Add DiagnosticTag case for MarkerTag.Deprecated"
demo
update distro
Trigger extension change event immediately after updating exte‚Ä¶ (#77767)
fixes #77583
more disclaimers
fix tests - dispose listener
:lipstick:
better demo
update distro
sample compressed tree
first compressed object tree sample
remote configuration file service
Accept yarn.lock update and bump applicationinsights to match the newer node declarations
Mark static readonly
Use consistent style for registerEditor
Track editor inputs and webview separately
Remove unneeded call to update comment
Update comment icon css to match new icon size
Use a newer version of @types/node in the build folder to match all other folders
enable grid layout by default
Add setting that enables using a dynamic endpoint for hosting the static webview content
ElectronWebviewService should not extend BrowserWebviewService
Extract DynamicWebviewEditorOverlay to own file
Use more explicit class name
remove compressed object tree
LinearCompressedObjectTreeModel
CompressedObjectTree
finalize compressed object tree model
Add 'selection' option to render whitespace, closes #1477
Handle edge cases
Handle commands in WebviewEditorOverlay correctly
Click to follow link
Add generated warning to monaco
close browser on EH termination
compressed tree: filling out the blanks
disable the test
Add DiagnosticTag case for MarkerTag.Deprecated
fix #76995
Add Deprecated to MarkerTag
Add Deprecated enum member to extHostTypes
fix #77764
use async await
Move indent right one when the highlighted line is a scope start/end
compressed trees: typing
compressed tree: more tests
compressed tree: first full test
compressed tree: setChildren
compressed tree: decompress
compressed tree: remember incompressable state
:lipstick:
compressed trees: compress tests
wip
wip
compressSequence and decompressSequence
compressionMap first steps
wip: compressed trees
Add proposed DiagnosticTag.Deprecated enum member
Move resolve shell launch config above fork the process
splitview: fix layout priority on resizeView
grid: catch bad deserialization
Use correct resolved TDO and task for custom execution
Revert "update style.textContent instead of calling insertRule, #75061"
[XML] Use the same HTML language configuration for XML
support "restart" EH debugging
make ExtensionHostDebugChannelClient disposable
Revert "Avoid re-implementing Disposable"
Adjust Code Tab Size to 4 in Markdown Preview
Revert 100cc5850adff366dd44d3a71c6ebc6d0cd3c2a0
don't warn about missing chrome debugger on WSL; fixes microsoft/vscode-chrome-debug#892
fix resize priorities in grid view
splitview: fix bad snap behavior
JSON Language Server 1.2.1
[json] fix compile script
Update tokens when the buffer changes
attempt at serializing grid (#77733)
Adjust tokens coming in from web worker
:lipstick: gridview tests
update distro
clean up
aria(add-context) add additional text context - We use alert from aria base
extension actions tests
Use global storage for market place user if if machine id resource is not available
extensions actions tests
enable install from vsix action in browser. Use filedialogService
Move download command to extension host
Enable download service for browser
Refactor code to use single state object instead of two
Make sure we update pending files properly
Update js/ts grammar
Use TestStorageService and NofitifcationService in test.
Replace IDisposable with DisposableStore in a few more simple cases
Use base class's existing  _register method
Add UnownedDisposable to make it clearer that webviewEditorInput takes ownership of the webview passed to it
Pass web opt through
Bring more non-web smoke test code back
Bring back non-web smoke tests
Move WorkspaceStats.TAGS to a service, fixes #76002
Change remoteEnv extension API to be backwards compatible
Upgrade vscode-ripgrep in build/ as well
Use async
set US keyboard layout sync in tests.
comment node should also be prefixed with ownerid.
Update icons for npm script explorer
thread id in commentNode ID
Allow remote error messages to work
Support file scheme for save and open dialog
Bump vscode-ripgrep
fix tests
clean up install action
Check for installed status Add tests for language pack extensions
Ensure the last token covers the end of the text
more tests
add tests for remote and local install action
add new variable ${relativeFileDirname}; fixes #77616
First cut - tokens from web worker
JSON Language Server 1.2.0
[json] update server readme
Transfer ArrayBuffers to and from web workers
add tests
update distro
fix: spelling mistake correction
update distro
delete bogus directory
fix GDPR annotation
toggle reaction should work.
Remove Comment Id
Introduce new enablement states
Remove unused comment icons
Bump vscode-ripgrep in remote/ too
missing yarn.lock
Properly dispose of comment thread when removing empty widget, fixes #77588
Updates to the latest icon theme from seti-ui
Use array of string for applicable builtin settings
support debug broadcast svc for web
update distro
Using vscode-telemetry-extractor npm package. (#77305)
Bump vscode-ripgrep
add gotoLineMode to IOpenSettings
Use Enablement service to check if an extension is enabled or not
remove enablement service from simple services
re export from semver
Use semver-umd everywhere
bump windows-mutex
update distro
update distro
update distro
Support enablement in web
fix icon urls
Move extensions tips service to workbench
Move enablement and servers to workbench
cleanup ExtensionHostDebugService
chore: Bump windows-foreground-love@0.2.0 (#77548)
:lipstick:
update gulp-atom-electron
disable some extension commands in web
distro
distro
Make sure we hide the webview overlay when it is not in use
Don't hang on to webview in `WebviewEditor`
Use a single instance of webviewIconsManager
Make sure we update our stored html when using the update function too
Rewrite how webviews are managed internally
Start with no state, instead of empty object state
Use regular map instead of object literal map
Simplify state used for webviews
Don't require using state to check if we can revive
Mark that state may be undefined
Remove unsed event
Revert "keymap tests."
keymap tests.
Add the .rbi file extension as a Ruby file type.
chore: Bump windows-foreground-love@0.2.0
Create browser version of telemetry service
extensionHostDebugService for web
fix typo
Revert "Edits"
Edits
Update uri.ts
Undid uri.ts changes
Undid unneccesary changes for the sake of the pull request.
Revert "Added clear input method to clear disposables."
Added clear input method to clear disposables.
Respond to theme changes for minimap decorations, fixes #77487
[css] Upgrade service and add dynamic link support
More strongly typed telemetry (#77412)
update distro
:lipstick:
fix tests
Use semver umd module
update distro
wip
Add '.ent' and '.mod' file extensions  for the XML language
fix extension management simple services
Make local extension managment server optional
Remove empty ctor and mark readonly
Mark that property may not be initialized yet
Extract WebviewIconsManager
Remove css background color for find in selection button
Update high contrast border colors
Improve types
Warning in console when keyboard layout mismatch
Don't sanitize terminal config env vars
Apply 'inputOption.activeBackground' to find in selection
Use background color for input toggle active state
Resolve Terminal arguments (#76895)
Update tree filter icons
wording
introduce gallery machine id resource in env
windows/code.sh: convert to sh
terminal wsl recommendations
split extension management service
move multi extension management to extension management
ExtTipsService: add WINDIR as variable
introduce ext management server service on web
move extension management server service to extension management
move extension management ipc to common
split extensions contributions between electron and browser
Move extensions workbench service to browser
Adopt latest istanbul for coverage information
cleanup TODO
missing event wiring
splitview: fix resize priority in distributeEmptySpace
Changed Filer to File Match only
distro
fixes #67212
Make sure we set emitter before getting event
Remove overload for registerEditor
Mark fields private
fixes #77430
Use enum to track force open mode
Convert many simple getters for events into readonly properties
Convert to async
:lipstick:
Marking fields readonly
Use asArray
getDescription(), return undefined instead of null
getPreferredEditorId return undefined instead of null
Remove extra checks that are not needed
Remove extra conditional
Return undefined instead of null
Use DisposableStore
Use _register from base class
Documentation
Add a fast TypeScript classifier
fixes #68663
Update 'vs-minimal' file icon theme
cleanup layout priorites
delete Grid.View
splitview: fix snap enablement
grid: propagate setVisible
wip
Update keyboard icon
Use map instead of object literals in mainThreadTerminalService
Remove unused icons
Update diff close icons
Update Win menu icons
Add puppeteer types and use TS in driver
Update js/ts grammar
Use map to track registrations
Use set to track synced values instead of object literal
Use set instead of object literal to track activation events
getEditor() return null instead of undefined
Use a map instead of a object to store editors
Update distro
Address feedback
fix mac address resolution on touchbar devices (#77033)
Remove self from auto assigning
dont cache web node modules
use product service
enable extensionAllowedBadgeProviders in product service
expose extensionKeywords in product service
move dependency checker to browser
move extenson editor to browser
move extensions viewlet to browser
move extensions views to browser
fix tests
files - more tweaks for watcher tests on windows
debt - test for native helpers as a test
Define exepriments service interface in common and register a simple service for web
add experimentsUrl to product service
Move extensions list to browser
Move extensions widgets to browser
move extensions actions to browser
Move media to browser
:lipstick:
files - disable watch tests for any platform but Linux
sash: debug false
eng - bump gulp-watch to stay compatible with our node version
use IWebviewService
update distro
move gallery service to common and enable it in web
use resources util to join path
move extensionValidator to common
remove references to pkg and product and use productService
use fileservice for read/write marketplace machineid
provide download location to download method
Added Constants.FileMatchOrFolderMatchFocusKey filter
Adopt InMemoryUserDataProvider to use FileSystemProvider
distro
update distro
distro
tweak build timeouts
cleanup
addressing additional comments
:lipstick:
remove request service in web.main
Introduce request handler in web api
Web request service - Redirect requests to server on error
:lipstick:
distro
fix
:lipstick:
fix path
remove item of correct index
pattern -> value
list-of-string -> array
bump distro
web - add more excludes
icons - fix reference to hc icon
build - we no longer have *.cur files
update distro
web - add build script
web - add build
distro
bring changes over
move upload sourcemaps to common agent
cleanup VSCODE_ARCH
tweak build timeouts
fix hidden view snap
only display keybindings that can be dispatched
update distro
fix #76232 (#77266)
Support loading webviews from wildcard endpoints
:lipstick:
Final cleanup
F2s to rename exclude -> list
Add in listItemType
Clean up
Use different label for array/exclude widget
Render & Edit for complex object
First cut for #62440
Remote smoke test fails for 1.36.1. fixes #76987
Get terminal smoke tests working under puppeteer
remove unused import
Remove markdown.tmbundle from `markdown language features` extension
Existing base class is disposable
Use disposable store for tracking renderDisposables
smoke: support --test-repo on windows
Update distro
Remove logs
Update to latest vscode-textmate
Small style tweaks
Minor refactoring
update distro
be careful when accessing process.env
bump distro
Hang on to untitiled URI a little longer (#77221)
bump distro
deps - remove keytar from remote
:lipstick: deps
chore: Bump keytar@4.11.0 (#76549)
web - change defaults for menu on mac
Remember dimensions from other terminals
#69111 move settings information to product service
fixes #67366
Ensure negative exit codes are not used
chore: Bump node-pty@0.9.0-beta19
use toVSBufferReadableStream
update distro
:lipstick:
chore: Bump windows-process-tree@0.2.4
update distro
fix(pr-review) clean up code
Update distro
xterm@3.15.0-beta71
fixup! make sure to remove all listeners appropriately
fixup! render a string as well
update distro
grid: support resizing both dimensions
explorerModel: Use hasToIgnoreCase
use IFileSystemProvider
create instantiation service in api.impl and create extHostDebug with it, #76570
fancier splitview demo
fix tests
splitview: snap in
fix compilo
debt - strictNull-aware typing of ServicesAccessor#get
use async clipboard when running 'insert snippet', #76847
splitview: better snap view choice
support passing clipboardText when calling insert, #76847
splitview: test stable colors
update service worker once registered, #75061
Toggle for disabling autofocus on debugger stop
fix schedule
fix schedule
Added a new command for reveal in side bar for search results
Local fix for C++ embedded in markdown
Only have file picker local options if file schema
keep old behaviour for remote resources
start service worker when loading code, #75061
use structured data as query so that requests can be retriggered if needed, #75061
Clean up file picker folder updating
2. update distro
update distro
restore history entries gracefully
Dispose always
Prevent extra folder navigating in file picker
use fileservice to download
compile leftover
remove duplicate code
update distro
debt - adopt new fs.readdir with stat info
Typos in taskConfiguration.ts
improve image source extraction for remote cases, https://github.com/kisstkondoros/gutter-preview/issues/57
state - ensure to create state folder
files - introduce generic stream interface and offer utility to convert to vsbuffer stream
Add slash type message to typescript tasks
Add slash type check for typescript tasks coming from debug
workaround dev tools issue, #75061
add some logging, #75061
Allow tasks with empty command and non-empty args
:lipstick: clipboard service
implement browser clipboard service (#75293)
fix vscode-translations gulp tasks
add support for chords
only keyboard shortcuts
files :lipstick:
Add method to extract token types
files - properly add stream support to create/write
files - add more tests for writing with stream
sash: debug
files - first cut allow stream for writeFile (#77172)
Update .cachesalt
move to new file
Updating naming scheme to match other commands
Disable separator in terminal dropdown
Replace SimpleCommentService with actual comment service
Use DisposableStore in breadcrumbs
Avoid using untracked IDisposables in workbench/contrib/extensions
Make sure we dispose of MarkdownRenderer
feat(markdown): add render command (fixes #75612)
Use a mutable disposable to track showActivity result
Make sure we handle the Disposable returned from showActivity
Avoid re-implementing Disposable
Use DisposableStore in terminal
Highlight whole line for minimap decorations, #76122
Changed id to displayName, fixes #77141
Remove suppressImplicitAnyIndexErrors
Update distro
Add slight delay + fade in for quick fix message
2. update distro
update distro
Support request service in web
update distro
files - first cut allow stream for writeFile
update distro
move file service to platform
Use a uuid as our webview handles
Remove webview _onBeforeShutdown
Add progress indicator
Don't alias URI in externalTerminal
Support open in terminal in remote
Remove old proposed commenting API
fix failing test
Don't show quick fix link in hovers until we know we have quick fixes
fix(sash): dragging being difficult with iframe-containing extensions
web - cache and restore base theme via localstorage
fix service worker
bump distro
Don't use saved state when executing tasks
state :lipstick:
implicit any (#76442)
:lipstick:
debt - remove duplicated code
know when a snippet needs clipboard access,  #76847
Implicity any in taskConfiguration.ts
tweak jsdoc,  #48034
move workspace.fs to stable, #48034
Move token eventing back into the TextModel
state - save recently used tasks and commands as they change
splitview: snap out behaviour
adopt readTextSync, #76847
add IClipboardService#readTextSync, #76847
web state - persist font info in browser local storage
Custom tree view should run command on every click
tree.select should watch for expandOnlyOnTwistieClick
:lipstick:
do not assign to me while i am on vacation
do not auto assign to me while I am on vacation
add some ensurance tests for uri parse and %-sequences
dialog box add aria-label
splitview: view.setVisible
clear cache on install, #75061
debug
adopt worker typings and get rid of any's, #75061
use webworker lib
Extract TokensStore to its own file
Debug: save view state when it changes and not on shutdown
splitview: visibility
Remove legacy extensions compilation from build (#77058)
Update extensions/shared.webpack.config.js
splitview: make ViewItem a class
Add identity provider to custom view tree so that it can preserve view state
Do not force dev tools to the right
Move the TokensStore to the TextModel
quick input :lipstick: css
async data tree: fix collapseByDefault without identity provider
state - towards storing state when it changes or specifically only on shutdown
Change C++ auto closing comment start from /* to /**
remove legacy extensions compilation
Adopt TerminalVirtualProcess for Custom task execution (#76852)
remove mixin from gulp
files - harden edge cases in move/copy when path is same or different case
lipstick
Update .cachesalt
search-widget(aria-live) status for results found - We would like to notify the user about the results we found the screen reader will read out the number of results or no result aria-live is added at load, as it cannot be added adhoc
Use mutable disposable to avoid potential leaks
Reduce nesting
Move widget state into state
Make sure we handle loading of markdown resources from UNC workspace correctly
Minor renames
Split TokensStore
Do not render minimap decorations that end on column 1
Use clearer name for csp webview element
Adding tests and changing how toWebviewResource works
Update distro
xterm@3.15.0-beta70
Revert commit change (#77003)
fix respondWith issue
files - fix tests
Bump telemetry tooling commit (#77002)
More strongly typed telemetry (#76472)
web - tweak hot.exit setting for web
bump distro
files - ensure a move operation on same path does not empty file
Reset file picker input when changing selection at root
debt - better check for reserved schemes
build - disable flaky test (#76995)
Adopt latest loader
Extract TextModelTokenization
Remove old way of warming tokens
Do not use ModelLineTokens objects
make it easier to use options, #48034
tweak options for delete and write, #48034
improved error propagation, #48034
files - add a test for situations as #76861
web - add comment
web - only prevent unload if backups have not completed yet
update distro
wrap error into FileSystemError, #48034
FileSystem docs,  #48034
folding: introduce foldingEnabled context
Use collapseByDefault in custom view tree
not everyone supports preload, #75061
use UUID to force service worker updates
remove web flags
:lipstick:
#76442 fix implicit any
cleanup build cache paths
Create TM grammars on the web worker
Add support for calling back from web workers
Synchronize only attached models to the TM worker
async data tree: collapseByDefault per element
only cache extension resources, #75061
fixes #76768
Update grammar script to include option path for version
Addresses #76442: Remove suppressImplicitAnyIndexErrors
update references view extension
Revert "Updates to the latest icon theme from seti-ui"
fixes #76767
update distro
Revert "Add CLI flag to be able to disable smooth scroll in webviews" (#76944)
update distro
implicit any casts
Towards loading TM grammars in a web worker
Extract TMGrammarFactory to its own file
Extract TMGrammarFactory
fix #76739
remove swipeToNavigate (#57629)
:lipstick:
Add basic tests for vscode-resource case
Adding toWebviewResource api
Adding explicit index signature types
Use Set instead of using object to track previously seen values
Add index signatures
Add log message to help catch leaked disposables in ext host
Reworking code action UI logic
Move updateLightBulbTitle into lightbulb class
Move UI management of code actions to own class
Remove always true conditional
Change conditional to make logic clearer
Make sure we dispose of CodeActionWidget
Add commands for terminal navigation mode
Add commands for terminal navigation mode
xterm@3.15.0-beta70
Correctly render multiline decorations in the minimap, fixes #76133
Update gear and files exclude icons to have smaller inner circle
Simplify extension icon
Place Git activity bar icon on pixel grid
http link fix in d ts
Remove duplicate registration of FocusTerminalFindWidgetAction
Rename input to handleInput
Swap split icons
[json] confusing error message when schema can not be loaded
Adopt new tree in custom views (#76407)
Add a test for * bug in C++ grammar
update distro
Cleanup distro dependencies installation (#76893)
polish
Updates to the latest icon theme from seti-ui
build - enable schedules again
Update C++ grammar to get * fix
Remove snakemake files from being classified as Python files (#76625)
fix #76715
fix add after dispose issues
fix #76840
remove imports
incremental text documents cause perf isssues
Revert "clipboard variable resolver works with string, not clipboard service, #76847"
fixes #76696
clipboard variable resolver works with string, not clipboard service, #76847
prep-work for #76847
Revert "fix double encoding issue, https://github.com/microsoft/vscode-azure-account/issues/142"
revert June URI changes
debt
update distro
fix #76765
fix #76763
debt - port over some electron6 changes
Added Reveal in Side Bar Menu to search
Include env.shell in api tests
Move env.shell to stable
php.validate.executablePath scoped 'machine'
Center breadcrumb icons
use CHILD_CONCURRENCY=1
Bump PHP grammar
Make callbacks async
Don't allow users to specify files as working directories
Added new error code and better error message for invalid CWD
fix resubmission
use right arch in distro dependencies
update distro
web - enable hot exit by default again
Revert unneeded export
Revert whitespace change
Changes to terminal to enable Tasks use of TerminalVirtualProcess
web - store state periodically
web - register beforeunload listener so that there can be others
write tests for file user data provider
storage - remove unused code
storage - add tests for file service based storage
fixes #61616
Allow tasks to attach virtual process to a terminal created on renderer
stitch everything back together
Revert "remove yarn cache"
remove build debug
:facepalm:
fix build
use more CHILD_CONCURRENCY=1
breakpoints: contribute getRole and isChecked
list: add getRole and isChecked to ariaProvider
web - first cut user data provider storage service
remove gulp sequence
fix app icon
enable hot exit on web
debug build
use configuration from environment service
make backupWorkspaceResource an user data resource
remove yarn cache
Revert build perf
make back up workspace path URI
debt - use DisposableStore in more places
remove unused dispose
insta :lipstick:
make backup path URI clean up user data provider
Added hpp.in and h.in to file associations for cpp (#76680)
Attempt to avoid deopt (#64546)
adopt backup file service to use userdata provider
register correct backup file service
debug: fix word-wrap
Extract TMScopeRegistry to its own file
Grunt task detection has been called gulp and jake for a long time
Jake task detection has been called gulp for a long time
fix user data home on web
split backup file service and pass hash
Update to native-keymap@2.0.0
Implmented resolveTask for jake (#76616)
fix compile step
fix comment
Adopt user data provider (#76674)
fix broken remote agent
fix web
web - lift backupfileservice to common
fix #76620
Rename sourceViewColumn to resourceColumn
Save source viewColumn for previews, fixes #74008
build
update distro
collect distro dependencies in build
fix darwin server missing node
debt - remove jsFlags() from node cached data
make user data provider a full fledged filesystem provider
protect against missing config
update distro
update distro
more ExternalTerminalService cleanup
Disable conpty in integration tests and re-enable
:lipstick:
fixes #76369
fixes #76514
explorer: empty do not show connecting for web
bring back legacy extensions compilation
update distro
include service worker in build
fix build
fix #76561
update distro
Improve tests
list files return only files
fix build
fix master build
update distro
also minify reh, web
history - allow to navigate with mouse buttons 3/4
Add ID check for resolvedTasks
bring back arch dependent yarn cache
minify darwin
replace mutation observer with dom#asDomUri, #75061
move optimization & minification to shared agent
bring back CHILD_CONCURRENCY=1
define locale resource in env
Update C++ grammar to get template fix
distro
cleanup multiarch
introduce VSCODE_COMPILE_ONLY
fixes #76556
all platforms: move distro into cache
fix windows tests
more distro into cache
bring distro dependencies into cache too
use CHILD_CONCURRENCY
try fix win32 build
Remove unused function
Remove unused imports
Disable terminal tests failing on macOS
Marking almost all product fields as readonly
Using DisposableStore in place of disposable arrays in a few more files
Use DisposableStore in listWidget
Use DisposableStore instead of IDisposable[]
Use DisposableStore instead of IDisposable[]
Add message for Potential leak stack
Use Mutable disposable
Add missing semicolons
Ensure terminal tests don't leak terminals
handle reveal user data resources on renderer
fix show item in folder in windows
no need to watch user data
fix tests
adopt user roaming data for snippets, locale and keyboard mapper
trigger user data events always
Update markdown preview icon to have bevel edges
watch containers
Revert "Dummy change in comment to restart checks"
More cleanup in tokens code
renames
use powershell
fix windows cache key
fail build if compilation cache is not restored
fix mooncake condition
fix build dependencies
remove unnecessary step
bring back all agents
introduce user roaming data home
fix reading directories
Remove showing search result when the search viewlet visibility changes This is broken and I don't really like this behavior anyway
Test for #66953
For #76442
Bump distro
Error if we try to perform an operation on an unknown editor inset
Refactor invalid to valid
Introduce ITokensStore
Move the TokensStore to the TextModel
Set COLORTERM env var to tell apps that we support truecolor
xterm@3.15.0-beta67
Dummy change in comment to restart checks
Removes abbreviations in strongly typed telemetry events (#76478)
Build Improvements for Telemetry Command (#76431)
simplify check before saving state.
run compilation inside container
resume linux build
Add virtual process exit example
Update virtual process API names
test out SaveCache theory
xterm-addon-search@0.2.0-beta2
xterm@3.15.0-beta66
expose compile-build
do not run watch tests in non linux platforms
Reduce IModelLinesTokens shape
Extract IModelLinesTokens
consolidate externalTerminalService: dead wood removal
fixes #76209
check cache
handle disposables
Add *.podspec to file associations
linux build step should pick up on compile
use platform independent cache
Extract TokensStore
:up: vscode-sqlite3@4.0.8
empty commit
Adding support for TaskProvider.resolveTask (#71027)
File picker cursor at beginning
support backups in file user data provider
compile job
:up: chokidar@2.1.7
bring back builds
Adding "..." to the end of drop stash
shave off a few seconds from cache restore
clean build
arch dependent win32 yarn cache
User data changes - Introduce containers - Write tests for file user data provider
remove accidentally added submodule
remote - sync package.json with main
Option.key: keyof ParsedArgs
Remove suppressImplicitAnyIndexErrors For. #76442
use preload navigation
clean postinstall
Added same border color as panel border , added image preview border color in theme
postinstall scripts all around
run postinstall scripts if yarn cache is restored
comment out publish step
use yarn cache everywhere
update distro (again)
yarn cache should worry about .yarnrc
better lifecycle for actions
move externalTerminalService from electron-browser to node; fixes #76174
remove console.log
use es6 maps in mainThreadSCM
debt - use service worker headers
snapcaft.yaml: Set the AppStream ID in the Snap metadata (#76432)
Put current git branch name as value when renaming (#72957)
HEAD label appears on tab (#76329)
more yarn cache
build - disable schedule for now
test yarn cache task
test yarn cache
update distro
update distro
deps - bump sudo-prompt, iconv-lite
distro
Search - Map all \u unicode escapes to \x because only that format is supported by both the Rust regex engine and PCRE2
Deprecate search.usePCRE2 setting
Add dimensions override test
Move renderer tests into a suite
Replaceing uses of IDisposableWith DisposableStore
Using DisposableStore in mainThread class
Replacing IDisposible[] with DisposableStore
Remove unused function
Add scripts property to manifest so that index access is valid
Add explicit index signature
distro
Move terminal api tests into new file
Supress implicit index error with any
Use Map instead of object map
Remove resolved todos
Add deprecation notices to terminal renderer APIs
Pass  args via object
doc polish
Clean up
More docs
API docs
Add dark info icon for suggest widget
fix #76354
Impl overrideDimensions
doc
fix linux build
Revert back to original. 'urlFilter' is producing error/timeouts  on Mac but don't want to make this into the PR
Cleanup argv (#76416)
Alternate implementation for lost tree state using getViewState()
api - move workspace.workspaceFile out of proposed (#76469)
better task running conditions
distro
fix builds
fix linux build
Remove suppressImplicitAnyIndexErrors (#76442)
electron 4 - provide access to clipboard module
nsfw - update ignore
update distro
chore: Bump nsfw@1.2.5 (#76434)
use yarn cache
update distro
remove gulpfile.ci
some of #76442
swap web.resources with service worker approach
update distro
update distro
Allow ignoring the keymap mismatch
clean release task
web - revert fullscreen restore
update distro
update distro
update distro
:lipstick:
rename to IWatcherOptions
configure polling
composite - ensure the editor progress service is always there
update distro
bring back close
update distro
fix distro build
debug: Handle disposable result of createAndFillInActionBarActions
distro build: push release branches
'.' bug in file picker
:lipstick:
build - switch schedule to cron syntax
update distro
fixes #76264
add inverse icon
update distro
yarn update-distro
Remove suppressImplicitAnyIndexErrors from tasks
Revert: do not use withFileTypes on readdir (fix #76425)
Update C++ grammar to get macro fix
update distro
add node build script
fix one for #76442
Use a proper Map for ICommandsMap
Replacing object map with true map
Use Set instead of array + object map
Make sure we always kill the syntax server when the semantic server exists
Add queue system
Get input working
Get virtual processes mostly working
Support image/* data uris in markdown preview
Mark all properties in `ExtensionContext` readonly
snapcaft.yaml: Set the AppStream ID in the Snap metadata
Cleaning up check if service workers are supported or not
Enable useSeparateSyntaxServer by default and remove the experimental section from setting name
Marking more action fields and interface properties as readonly
Use ReadonlyArray in a few places
Handle cases where accessing `navigator.serviceWorker` throws an error
Initial Strict Typing Support for Telemetry Events (#75785)
build
Don't lose state of tree when going from a stopped->running->stopped state.
Start of terminal virtual processes
Adopt settings and keybindings to use user data filesystem pro‚Ä¶ (#76379)
compute path using substring as they are always absolute
update distro
wip
build - automatically release electron 6 exploration
Add high contrast icon for editor layout
update distro
up the memory
Update remove icon
update distro
pipelines: adopt shared compilation
Update grammars
fixes #76264
Show task errors on config changes
separate compile-build from product builds
introduce extHostLabelService and mainThreadLabelService
cleanup node tasks
AsyncDataTree.onDidChangeCollapseState
code review
introduce gulpfile.ci.js
gulp ci build task
fix relative path
missing compilation
build: remove old extensions build task, split extensions into gulp task
fix build
update distro
better wording for sort text
tests
use keybinding instead of setting, show provider name (iff possible)
fix build
web - implement recently opened and preserve fullscreen on switch (fix #76034)
update distro
electron 4 - persist normal bounds if window maximized (fix #422)
debt - same about dialog on macOS in menu
electron 4 - do more remote filtering
electron 4 - add and use readdirWithFileTypes()
electron 4 - unprefix grabbing cursor
web api docs
Added border for image
Remove shadow from folder icons
watch the resource
fix tests
adopt keybindings to user data filesystem provider
Adopt to user data filesystem provider
remove adoption of user data file system provider
adopt to api changes
trigger workspace contains activation event on new folders
onHighlghtRemoved -> onHighlightRemoved
Use findExecutable based on tasks function
Use pfs stat, handle directory, improve error meessages
Adding git stash drop for issue 76195
Skip failing keyboards linux and windows tests
Skip failing tests
Moving some electron specific webview js back into electron
Extract toContentHtml
Remove injectHtml since it not used
Extract getVsCodeApiScript
Enable stricter csp on main webview page
Move undo/redo and select all to be electron specific webview elements as well
Only register copy/cut/paste for electron based webviews
Use outerhtml for webview
Update xterm.css with upstream
Prefix private with _
Exit terminal pane resize early to reduce indent
Use DI for SplitPaneContainer service injection
Show notification when missing keyboard layout
Update problem severity icons
Update dialog icons
Update gears and edit icons
Update more icons
Update pr review comment icons
add standalone detection
Update diff addition/deletion icons
Update icons
update distro
update distro
web - add shortcut icon
#76103 Make ids unique in markers model
update distro
separate gulp
dispo debt
fix #75245
debt - reduce scope of local progress service
debt - remove statusbar registry
Removed uppercase styling and explicity added in SCM (#76286)
perf - add marks for extension points
update distro
update distro
enable builds
build: remove build scripts
gitignore
 1.37.0
smoke - fix waitForStatusbarText
build:single compile
add editor.suggest._explain-setting which replaces suggest details with score, distance, index information
linux remote: disable dnd to desktop
debt - use Intl.Collator as-is since all recent browser support it
read services registray, fixes https://github.com/microsoft/monaco-editor/issues/1464
fixes #76278
fixes #76278
fix smoketest
Rename workspace.metadata telemetry event to workspace.stats (#76269)
Stop propagation on minimap slider
Revert "fixes #75615"
Revert "fixes #75715"
Update Git icon
refs #76442
Detect cygwin shell on Windows
fix build
fixes #76228
fix #76242
update web api
Improvements to Telemetry Extractor Build (#76196)
bump distro
bump distro
Force drive letter to lowercase in tsc tasks
properly pass env vars to new VS Code instance; fixes #76212
fix #75909
Tasks should support string terminal args
fix #75880
Suppress MsgBox when Wizard is running in silent mode (#76215)
menubar alt key settings cleanup
allow space as trigger key
menubar tab fix
tab menubar nav
Use readonly array for CodeActionContext
Use JSON with comments for .eslintrc(.json)
Implement terminal inheritEnv on remote
Update icons
Add docCommentTemplate to syntax commands
fix build
Push ext host check to mainThread, apply fix to request defaults too
Don't send available shells request to both ext hosts
fixes #75825
Remove all old threads which are no longer part of the update
fix continuous build
update distro
fixes #76168
fixes #74934
Revert "workaround for  #74934"
workaround for  #74934
fix #75904
fixes #54084
fix #76074
prevent product.json containing gallery
revert the change
fix #76076
remove `update.enableWindowsBackgroundUpdates` from online settings
use yarn --frozen-lockfile for builds
disable arm and alpine for stable
Add border between tabs and breadcrumbs in HC
:lipstick: workbench API
web - document some API
fix #76149
Potential workaround for electron 4 eating mouse events
switch to a new layout only when the score is higher.
reset listener once users choose a dedicated keyboard layout
Show document link tooltip first and put click instructions in parens
Make sure we never cancel a request to just one of the ts servers
Register mouse down on container dom node.
Mark extensions.all as readonly
Handle windows paths correctly when loading webvie resources
Update distro
Rename runInBackground to hideFromUser
MainThreadFileSystem does not await
Test remoteName and extensionKind (for #76028)
update distro
update distro
update distro
fix bad watch
update distro
fix hockeyapp symbols and report errors (fix #76024)
fix watching
add debug output (#76024)
:lipstick:
fix various nls issues
Implement reload on iframe based webview Elements
Use a regexp that works across browsers
Use outerHtml to make sure we write `<html>` element from extensions too
Use full resource uri for transforming webview resources
Telemetry Command (#76029)
Floor scrolled line in command tracking
Auto restart when changing  typescript.experimental.useSeparateSyntaxServer
Use openExternal
Make RelativeWorkspacePathResolver  a static class
Move the webviewResourceRoot property to be set on each webview instead of as a global property
Disable conpty in terminal when accessibility mode is on
Always use settings UI when querying online services, fixes #75542
Add explicit win32 gheck for using user specific temp folder
Update close buttons
Update editor icons
Update find widget icons
Updat peek error icons
install deps and packs while installing from gallery
return local extension after install
Update notifications and warning icons
Move Inspect Keyboard Layout JSON to workbench
status.workbench.keyboardLayout
Remove unused suggest widget icons
Reduce spacing between results find widget
Update lightbulb and intellisense description icons
Update activity bar icons
Update intellisense icons
disabling installing extension from gallery when not enabled
add logging
update distro
webkit fullscreen detection
gdpr comments
Use explicit window.createWebviewManager
Add missing return
Make return undefined explicit
Report workspace stats in shared process
bump distro
:lipstick:
build - add and use --disable-inspect for integration tests (#74898)
move API to stable,  #74188
telemetry - add window.nativeFullScreen
disable support for simple fullscreen (#75054)
Group decorations by line before rendering
electron@4.2.5 (#76020)
fix win 32 bits unit tests
better error handling in case of loader error in tests
update distro
Show head label in placeholder of commit message
send remote watcher error to file service (fixes microsoft/vscode-remote-release#329)
clean up
empty view polish labels for remote case
Add -1 tab index to status bar entries
clean up
update doc
use posix.join
revert remove settings resource from env service
remove user data service
node-debug@1.35.3
remove user data service
fixes #75753
electron - still call setBounds() as workaround for first window
update distro commit
workaround for #75830
oss 1.36.0
xterm fixes for cglicenses
fix build conditions
chockidar: use polling
Open/Save local commands should not show in the command palette
init log level of remote log service
move extension kind to Extension-interface
use polish for wsl1
build - enable language server tests again (for #74898)
Quick Open > Quick Input (#65153)
comment out more (for #74898)
use divs for tree indent guides
implements ExtHostEditorInsetsShape
Update API
Add quick open/input color registrations (fixes #65153)
Update keyboard layout file comments
fix tests
fix tests
adopt keybindings to user data service
Use paths starting with User
Custom user data provider
:lipstick:
:lipstick:
:lipstick:
UserDataFileProvider for handling user data resources
use user data service for writing
:lipstick:
use empty model when content is empty
Also map 127.0.0.1 in webviews and forward it for openExternal
Re-use extractLocalHostUriMetaDataForPortMapping for openUri
Extract port mapping helper function
Added strictly typed telemetry function (#75915)
Reduce state
Make sure we dismiss the zoom status bar entry when switching editors
unused standard keyboard event.
Test browser keymapper
Separate keyboard layout loading logic for testing
Use interfaces for keyboard layout registration
Update max tokenization limit without reload
explorer: roots forget children on new file system provider registration
do not allow additionalProperties
Change promise structure of creating terminal in tasks
fix #75564
data tree view state should store scrollTop, #74410
Ensure no trailing path separtor on URIs from file picker
Add platform override to getDefaultShellAndArgs in terminal
Tasks registration + the local ext host now has an autority
:lipstick:
first version of vscode.workspace.fs
build: release only iff all builds succeed, introduce VSCODE_RELEASE env
update doc, #74188
New test runner API for #74555
some fixes for mac web
Better encapsulate logic of spawning different server kinds
Renames
Also include format in the syntax commands
Make execute command a configuration object
Include server id in TS server errors
Make badges smaller
Remove trailing comma
Enable "typescript.experimental.useSeparateSyntaxServer" for VS Code workspace
Add experimental dual TS server
Move getQueueingType into class
Renames
Extract server spanwer to own file
extract server error to own file
Extract ITypeScript server interface
Use update instead of manually tring to re-register
Minimap: Render find match decorations, fixes #75216
Move listener to window service.
Remove icon explorations before shipping stable
Update distro
Move host javascript to own file
Don't use clone as much
Add version check to service worker
Make sure we wait until service worker is ready before creating content
Have `.get` return promise directly
switch to user selected keyboard layout
a single keyboard event can be a keymap
fast return keyboard layout if 48-keymap matches
better score for layout
Update extension icons
US Standard keyboard info
load user keyboard layout after initialization
simplify common keymap layer
User keyboard layout
Update markdown icons
fixes #75856
Update all icons
Update debug icons
Use localized name for macOS keyboard layout
Remove log uploader
Re-queue canceled geterr requests before remaining buffers
Delete cached service worker entries after a short timeout
Fire onDidChangeMaximumDimension when dimensions are set
xterm@3.15.0-beta50
Update distro
EH debugging: support multiple files and folders
launch ext host window internally
Add proposed api check for shell API
win code.sh fix
remove alert, aria-live will read the content even with no focus
check if file exists
Update xterm.css
remove env scripts
introduce VSCODE_STEP_ON_IT
Update distro hash
:lipstick:
add diagnostic tool for git file event issues
Update distro hash
Use user data service for reading settings
First cut of file service based user data service
debt create configuration file service inside configuration service
fix tests
debt - use file service based configuration file service
add ExtensionKind and remoteName propsed APIs, #74188
show setting on windows only
fixes #75829
shellscript: Add folding markers
Remove duplicate cp
Update distro hash
Alpine build
more code insets API tweaks, #66418
Revert "Revert "explorero: file actions disablment no longer needed""
update distro
update eslint
remove TODO
fix bad tree guide indentation
fix #75818
handle style-attribute modifications, cache requests in addition to results, #75061
remove trailing '/' from repo url for baseFolderName
Remove extra register of automatic tasks
fix: #72626
Fullscreen change event.
Add clarifying comment on instance service request events
Move workspace menu and action to fileActions.contribution
keyboard layout status bar item tooltip
Make openWindow function resolve at right time
Respect openFoldersInNewWindow setting for folders/workspaces
Update auto detect layout info.
Basic file opening via Open File command
Open folders and workspaces in new windows
beautify macos keyboard layout label
Update distro
Remove mergeDefaultShellAndArgs
Get workspace shell permissions correctly
Remove getDefaultShell
Add getDefaultShellAndArgs
update distro
perpare for bundling
Update panel icons
update distro
product service for web - get product configuration from server
#75079 Support multi root workspaces
Remove background for split buttons
Call getDefaultShell via ext host on web
fixes #75703
Remove unneeded isWeb check
Re-enable test and split it up
no warnings anymore
linux case senstivity
refactor, move keyboard layout provider into keymapper factory
Add (Local) to the local terminal title
Update distro
keyboard layout picker
fixes #75773
:lipstick: main files
web - cleanup main
Revert "explorero: file actions disablment no longer needed"
update distro
update distro
update style.textContent instead of calling insertRule, #75061
web - bring CSP back differently
pixel perfect indent guides
debug config manager: first init launches then register listeners
update distro
introduce web user data dir for user data
flaky test (#75772)
update distro
fix missing remote server channels
remove web scripts
explorero: file actions disablment no longer needed
fix indent guides in icon exploration
gotoErrorWidget: do not focus the error widget, but use alert to read out message
fix #75318
fix: code convention
web - unblock running
move install-server
separte log contributions for web
revert fix #75354
update distro
move connection auth token out of web configuration
update distro
Move remote user data from web configuration
fix #75263
rename docker extension
update environment changes
fix file name
take web related changes
fix double encoding issue, https://github.com/microsoft/vscode-azure-account/issues/142
comment out more tests (#74898)
code doesn't open in remote-wsl under WSL2. For microsoft/vscode-remote-release#714
fixing the workbench html adopting to server
start to comment out tests (for #74898)
fix #75746
final touch at heap service removal, #74846
update distro
Cleaning up service-worker impl
Add experimental port mapping support inside of iframed based webviews
Extract port mapping to class so it can be reused
Adding a11y team
web - configure menu settings
Add vscode.env.webviewResourceRoot api
Expose a new local terminal command on remote
fixes #75703
Fullscreen Action. (#75667)
no-verify
z-order bug fix
Update search icons
Finalize documentLink.tooltip
Cleaning up webviewElement
Use map for handlers
:lipstick:
Update SCM icons
Remove background color from split editor icon
update distro
#75713 Enable log level listening in web
Update close buttons
Enable shell selector outside Windows
Update folding icons
fixes #75715
Return undefined from getInstanceFromId
Make sure xterm is around when links are registered
Update breadcrumbs
Update tree icons
update distro
use null log service
up the build timeout in minutes
up the build timeout in minutes
update inno setup
Add support for APKBUILD
web - api :lipstick:
simplify download
web - introduce browser environment service
fix tests
web - best lifecycle support we can do currently
web - hot exit off by default for now until supported
tree indent: default onHover
tree indent guides: dynamic heights
windows - disable terminal integration tests (#75689)
Add availableFileSystems to save as (#75681)
fix: #75693
fixes #75359
debug: no aria alert if start line number after last line
tree.renderIndentGuides always
fix bad tree options update
indent guides fix misalignment in explorer
Proper logging for file services (for microsoft/vscode-remote-release#314)
setting: workbench.tree.renderIndentGuides
Remove some uses of process in tasks
debug: .then => async await
fix indent guides on refresh
update distro
web - do not append --folder for selfhost automatically
Remove duplicate sysnative path conversion in tasks
tree: active indent guides highlighting
jump to cursor surface error returned from goto request
Bump distro
Add split editor icons
Throw error if environmentService.webviewEndpoint is not set when using iframe based webviews
Handle exception from getLayoutMap if it is invoked in a nested browsing context
organize imports
move keybinding validator out of keybindingRegistry
use remote agent service to get remote os
Provide full TS symbol range when previewing definitions in VSCode
move to remote
Remove onbeforeunload for webview iframes
Handle multiple clients in the webview service worker
Update explorer actions
less transparent
Move `Open Webview Developer tools` to electron contribution point
fixes #75615
Disable old shell detection mechanism
Get default shell selector working
Update activity bar icons to be uniform
Update activity bar size to 48px
Update activity bar icons
Default chrome-debug to be a workspace extension to enable debugging vscode on a remote
More html text preprocessing into vscode process
Markdown previews should be able to load resources from next to where they are running
Add open editor actions
web - unblock selfhost with simple storage service that works
Disable conpty on remote
Disable shell selector on remote
Add checkmark icon
Update remote node-pty
Pass cwd through to main
Better name for temporary DebugUIService
web - first cut of debugger
use ProductService
use DOM instead of innerHTML
Makes status zoom button a IStatusbarEntry #74454
Add show local option for Save As on remote
:lipstick:
remove extra event data from bracket indents
:lipstick:
hover feedback
update distro
remove indent modes
active indent guide
sharp svgs
debug.console.wordWrap
polish download action
fix #74290
progress - allow to report total/worked in viewlets/panels
duplicate definition of basename
fix smoke test after problems view css change
make isEqual case sensitive for non-file URIs
explorer: add download command
Tasks for web (#75619)
fix #74815
fix smoke test after problems view css change
web - first cut API
global settings - align with preferences menu
adopt more DisposableStore/MutableDisposable (#74922)
Remove ramya from auto issue assignment
mru cache for keyboard layouts
keyboard layout service is async in browser
Remove BrowserKeymapLayer
remove unused code
reload keymapper correctly after reload
keyboard layout provider initialization
Capitalization
xterm@3.15.0-beta42
Add experimental service-worker based loading of webview content
Extract common resource loader logic
Revert origin for webview based webviews
window keyboard layout should have vkey
Basic modifications to get webview resources loading
use constant
fixing labels in web
Handle multiple users with /tmp/vscode-typescript
Enable basic iframe webviews prototype in the web
iFrame work
add window.disableMenuBarAltBehavior option (#73258)
separate inline and context actions for comment node
xterm@3.15.0-beta37
#74846. no CommandsConverter#toInternal
Remove typo
Bump distro
Remove process usage from terminalEnvironment
Update editorOverviewRuler.findMatchForeground
Use extname and basename helper functions
remove ExtHostHeapService
Update terminalEnvironment.ts
Move window.shell to env.shell
fix monaco editor compilation
:lipstick:
implement timeout mechanism for missing ipc channels
fix bad handling of missing channel in IPC
main - wait for driver
remove extHostHeapService, use normal cache in commands converter, #74846
show Loading... in details view, #73311
:lipstick: suggest widget dispose
[testresolver] kill server on shutdown
fix #75497
status - push proposed API for statusbar id/name and adopt
update distro
web - receive proper uris
update inno_updater
completion model isn't dispoable but the suggest model that requests items, #75106
install server: use distro commit
fixes #71142
Remove terminal task dependency on getDefaultShell
Remove getWindowsBuildNumber from terminal task system
object tree: preverve collapse state by id (#74462)
revert changes for #75106, fixes #75402
Remove use of win32 from terminal task system
fix #75354
web - adopt latest server
Use regex.test instead of string.match
Extract closeTimeout constant
Use DisposableStore and MutableDisposable for MessageController
linux keyboard layouts
Make sure we dispose of empty results
us,cn for linux
Don't use heap service for signature help
Use readonly for cache
Use TS 3.5.2 for building VS Code
lazy load linux keymaps
Clean up import
Evaluate links based on process manager OS, not host platform
Pick up TS 3.5.2
windows keyboard layouts
uk
Support keymaps from all platforms.
keyboard layout for darwin
Pass workspace shell permissions to ext host
update distro
Default shell API
Mark readonly on insertSnippet
Make sure dispose of code actions on hover properly
Add  isArray overload to handle simple case where input is a readonly array
Use ReadonlyArray for coalesce
Recommend users install EditorConfig extension (#75391)
Remove background images for icon explorations, except for twisties
notify tsserver about changes in external files.
dispose code lens model(s) only after having resolved the current model, #75105
:lipstick:
fix jump to cursor
use --json
explorer dnd: polish dialog
fix build
update distro
debug: fix jump to line
[testresolver] setting 'testresolver.pause' to test disconnect & reconnect
use stable snapcraft
don't dispose results for API command too early, fixes #75208
Update C++ grammar
remove registering SimpleTextResourcePropertiesService in web
Move textResourcePropertiesService to browser namespace Enable it in web
testresolver: kill server process, more settings
rawDebugSession: fire simulated continued event for the goto request
debug: add jump to cursor
web - fix empty title
web - cleanup menu contributions
update distro
[css/json/html] update lsp, services & dependencies
update remote node version to 10.11 (matching electron 4.2.3)
add svg/woff mime types to mime.ts, #75061
clarify names and return disposable, #74922
fixes microsoft/vscode-remote-release#671
Derive configuration resources
fix snap build
update distro
web - wire in userDataPath properly
errors - fix stack printing
bump electron@3.2.4
update distro
remove duplicated keyboard dispatch registration.
Not lack of Windows support for inheritEnv
Clarify issue in comment
Get mac launching with mostly root env
remove equal sign params from web scripts
update distro
Typos
Use MutableDisposable for managing editorStatus items
Add docs
Mark events as readonly in VS Code api
Make parts of terminal process launching async
Hook up new method
Allow terminals to launch using clean env on Mac and Linux
`isNonEmptyArray` should return readonly arrays for readonly array input
browser keybinding service
Update warning colors to pass color contrast ratio
Use MutableDisposable for managing listeners
Extend disposable
Use DisposableStore in extensionEditor
Also track disposables created from `toDisposable` and `combinedDisposable`
Use MutableDisposable for parameterHintsWidget
MarkdownRenderer is disposable
Puppeteer exploration
fix
Remove the vscode-core-resource scheme
update distro
allow extension resources in editor insets
web - update scripts
debt - use DisposableStore and MutableDisposable in suggestModel
debugSessionL expose goto methods
debug: introduce jumpToCursorSupported context key
rawDebugSession: goto and gotoTargets request
rawDebugSession: remove public keyword - it is just noise
fix #75344
revert moving to browser
Move to browser namespace
#74846 Dispose internal commands
Move extension actions to browser namespace
remove heap import no longer needed since it is removed
better workaround for #75106
Revert "only dispose completion model when dispose suggest logic or when re-triggering, #75106"
remove gc-signals, heapservice, and mainThreadHeapService, #74846
demo modes
only dispose completion model when dispose suggest logic or when re-triggering, #75106
explorer: polish drag n drop
properly quote empty arguments; fixes #25098
:lipstick:
use toInternal2
Add syntax highlighting for .gitmodules
:lipstick:
update distro
better error handling
fix git nls
use FalseContext, change Download Update label
update distro
use --follow-tags instead of --tags when pushing
no breadcrumbs for untitled files, #74924
fix #41085
modifier instead of control keys
add implements IWorkbenchContribution
Adopt update actions to use globalActivity menuId
Extracting common webview elements
Use undefined instead of null for IStatusbarEntryAccessor
Use MutableDisposable for tracking current code actions
Prevent dispose cycles
adopt online services settings entry
Expose command to open settings page with online services query from gear menu and preferences menu, fixes #75215
Finalize TerminalOptions.runInBackground API
remove ref to css
update distro
#75079 Support keybindings resource
Use MutableDisposable in codeLensController
Use MutableDisposable in a few more places
Adding `MutableDisposable`
Use DisposableStore
Highlight example as json in editor
Use menu registry for global activity actions
debt - ensure to dispose action toolbar of editor group view
workaround #74872
Use `clear` instead of `dispose` when resetting disposables
Make sure we dispose of marker decorations properly
Extend disposable for MenuService
Use disposableStore
Use disposableStore for some actions
Use disposableStore for activeEditorListeners
web - add web-selfhost
fix compile
Back on
Back on
#75079 Use fileservice for listening to keybindings file changes
Do not allow workspace folders with scheme different than the current remote scheme
web - add xterm to build dependencies
ipc - add channel name to channel error
explorer: enable dnd for more cases (remote)
context key: remoteConnectionState
update distro
#75079 Use URI for machine settings
panel - make terminal the default panel
#75079 Use URI for keybindings path
use URI for appSettingsHome
Cache the 'vsda' import, because when the same missing module is imported multiple times, The ones after the first will not throw an error. And this will break the contract of the sign method
debt - lift feedback contrib to browser
web - set a panel as default that exists
web - cleanup main files
merge master
web - ensure window focus is true
use local hash instead of browser hash
update distro
Polish as suggested by Ben
debt - fix command alias (#75242)
fix #75190
status - incremental updates
fix #69334
update distro
remove simple search service for complete remote implementation  (#75224)
Use disposableStore in a few test files
Use disposableStore in feedback
Use DisposableStore
Use DisposableStore for htmlContentRenderer
Add support for loading contributed TS version
Add icon for Find All References
don't show menu bar action in menu on macOS
refactor menubar to separate native and custom
commit to branch
Introduce browser level terminal services
Move electron-browser terminal service into new service
Update icons in Reference viewlet
Don't try creating untitled files in a refactoring
Update typings and fix private API access
xterm@3.15.0-beta34
assert native keybinding in web.
ISignService
removed unused Severity import statement
fix main proc launch config for windows
Update open change icon, include it in SCM actions
Target only SCM icons in the viewlet toolbar
Have more inferface / classes that are disposable extend IDisposable
Partial fix for ExtHost CodeLenses registering commands after they have already been disposed of
ReferenceWidget should call clear to reset itself when the model changes
Better funciton name
Log stack when registering disposable on already disposed object
Working on re-structuring code action logic:
:lipstick:
Rename
nix need for menubarservice in websimpleservices
Add icon for going to settings UI and keyboard shortcuts
Make preview icon the same height as the split icon
Shrink refresh icons
Move refreshActiveTab to common
Temporarily turn off.
Use readonly arrays for the vscode.DiagnosticCollection api
Use readonlyArray for diagnostics
Extend disposable
Extract areLanguageDiagnosticSettingsEqual
Remove extra work in DiagnosticSettings ctor
Use includes instead of indexOf
Export CodeActionSet interface instead of implementation
Use ReadonlyArray for a few more lists of IActions
Use ReadonlyArrays for IActions used in notifications
Use readonlyArray for composite actions
Use readonly array to track actions in a few more palces in menus
#75079 remove process dependency
#75079 Move preferences to browser
update distro
#75079 Use URI for settings
Actually fix the tree icon issue
#75079 Populate workbench environment service in main
Remove ctrl+\ to split terminal on win+linux
rename - use DisposableStore over IDisposable[]
referenceSearch - use DisposableStore over IDisposable[]
use DisposableStore over IDisposable[]
make Event<T> accept DisposableStore in addition to IDisposable[], #74250
first cut/experiment of icon/resouce loading, #75061
update distro
#75079 Use real configurataion service for web
Temporarily minimize API usage
status - convert editor entries to individual status entries
debug: more maps, less objects
test resolver polish
status - use flex over float: right ftw
update test-resolver
dispo debt
fix layer breaker with credentials service, #74997
web - auto save on by default
fixes #70772
update distro
minimize distro deltas
run remote integration tests if present
status - avoid duplicate entries in menu
fix gitignore, avoid trailing slashes
debt - use disposable store in code lens
call it NullWebviewService
add ignore entries for links
adopt test resolver
web - add webview services (fake and real) to web companion
fix duplicate gitignore entries
Use explicit type instead of `object` for the momento object (#75029)
related to #74116
use Map over object {} (#74948)
update node-spdlog to 0.9.0
Use ReadonlyArray for `IContextMenuDelegate` and `IActionProvider` and `DropdownMenu`
Removing stricter type for index accessor
Replacing heapservice with lifecycle for code actions
node-pty@0.9.0-beta17
Update trim whitespace icon
Update xterm typings
Use map for memento statics
xterm@3.15.0-beta23
update distro
Use DiposableStore in ZoneWidget
Dynamically import SearchAddon
Dynamically import WebLinksAddon
status - wording
status - fix right entries sorting
fixes #74949
update distro
status - fix empty extension
status - :lipstick:
status - fix issue with padding for first/last item
add links to git ignore
status - cleanup rendering
install-server: fetch distro
remove code-web.js
update web script
add node remote task
This partially reverts "extends Disposable" changes
Spelling errors in some tasks files
add script
Revert "Extend disposable"
Revert "Update more places where we are using an IDispoable[]"
debt - remove not working code
status: "debug configurations" => "debug"
Initial work on status bar management (#74971)
Synchronization issue in tasks problem collection
fixes #74116
adopt new loader, add cached data stats to perf editor, #62643
fix git ignore
update distro
ignore server bits
Add License field to package.jsons #68423 (#68771)
loaded scripts view: add type to not be an array of any
debug: map polish
loaded scripts: use Map
compositePart use Map
#74920 Use panel service to hide
status - adopt visibility for send feedback entry
explorer: do not reveal file on refresh when autoReveal = false
status - make id/name a static thing that cannot change
panel part: First check if panel is visible and hide if so
reuse severity icons
status - change to id/name instead of category
[css] enable tests (fixes #74937)
sourcemap: ignore node_modules
Add initial cwd to onProcessReady event
[css] add test resources
Comment out failing test
paper cut - offer a menu to control visibility of status bar entries
reactions handler
Revert disposing of emitter change for extHostQuickOpen since it was breaking integration tests
Refactor shell config into common
Localize Terminal strings inside TerminalInstance
Move TerminalProcessManager init into instance
update menu and titlebar platform checks
Don't use Symbol
Adding disposable tracking helpers
Use Disposable.None
Use map for storing registry values
Extend disposable
Make WindowsManager disposable
Have Panel extend Disposable
Make Action extend Disposable
Remove extra indirection in toDisposable
Remove n-arg version of dispose
Extend lifecycle/Disposable in more places instead of re-implementing it
Remove unused interface method
Use clearer name
Make sure we dispose of emitters for TerminalProcessExtHostProxy
Use readonly instead of getters
Make sure we dispose of emitters in a few more places
Extend disposable
Make sure we dispose of emitter
Build with TS 3.5.1
Update highlightjs version
Working on getting ts server class in a testable state
Remove use of IDisposable[] in a few more places
Update more places where we are using an IDispoable[]
implement IDisposable instead of extending base class
#74918 Move markers status contribution to markers
Remove references to deleted icons
Remove unused dep clean-css
Update distro
Allow shell environment probe to be disabled for microsoft/vscode-remote-release#544
remove theming for severity icon
use editor error color as base color
Center activity bar icons
Use svgs instead of octicons
Revert "remove status icons and adopt octicons"
remove status icons and adopt octicons
#74580 reuse severity icon widget
use status octicons
Remove sync fs use in tasks
debug mac toolbar make step action more stable position wise
fixes #74551
:liptick: notifications status message
Remove .desktop from ini extention
move vscode-debugprotocol to devDependencies
Terminal race between prcoess exit and on ready listeners
Update distro hash
remove --prof-modules-flag, adopt new loader, https://github.com/microsoft/vscode/issues/62643
fixes #72768
Avoid __nodeRequire() (#74398)
[css] resolve modules without require
Avoid __nodeRequire() (#74398)
[smoke] workaround for #74875
fix #74887
unblock webpack build
fixes #72545
fix tests
debt - move status message into notification status
debt - remove dependency of keybinding service to status bar service
Added `cachedScrollTop` to SCM panel (#74723)
remove __$__nodeRequire
fixes #74844
fix git extension tests
update @types/node (#74881)
for completions use `CommandsConverter.toInternal2`, #74846
properly keep resolved code lens command, #74846
fixes for remote smoke tests against a build
debt - use @types/node: 10 for all extensions
some more lip stick, #74846
:lipstick:
add lifecycle to code lens, #74846
Move scripts to Remote Containers (microsoft/vscode-remote-release#411)
Remove legacy addon
Update to latest xterm@3.15.0-beta14
Remove file icon reference
Add todo
Add comment explaining xterm exception in tslint
Adopt xterm-addon-web-links
Update icon exploration to use setting
Correctly set extensionId on comment threads
Add new search addon and adopt
consistent use of checks
remove viewlet checks
Debug status should be IStatusbarEntry
Add sequential task dependency property (#74460)
Update C, C++, Objective-C, and Objective-C++ grammars
Update distro hash
Git-UI extension for Git credentials (#74461)
Use status progress for 'Building... tasks
debt - decouple webviews from code insets, move things to /browser/-layer, change inset api proposal to push style, re #66418
[css] fix test
update distro
Update to Electron 4.0.x (#73119)
[css server] link tests
Problem matcher file location auto detection
Move checked bg in resource viewer under the image
remove panel menu checks
address feedback
Add icon exploration
Revert "Don't use ConPTY on WoW64 Windows"
node-pty@0.9.0-beta16
fix-73341 Review #1 Changes
mark .config/git/config as properties file
fix-73341 Removed notificationService prompt
adding doc about resolve and not waiting when accepting, #73311
:lipstick:
no double encode
debug: do not take into accoutn stack frame id when computing scope id
update distro
Create ARM assets in product build (#74787)
do not encode / decode sessionId
debugSource use uri.from
fix #67300
update distro pointer
don't  freeze vscode.env when running tests, #74121
Update grammars
also use strict when not matching
don't decode equals, ampersand, semicolon when occurring encoded inside query string
typo - segemented => segmented
debt - introduce lifecycle phases on electron-main and adopt
debt - convert profile status to status item
fix #74702
1.36
Update README.md
update distro
Actually fix the issue
don't decode %2f when parsing uris
adopt product service
fix #74548
when adding contributed keybindings check if a command with enablement-clause exists
fix #74566
Don't retrigger empty code actions menu
Add arrays.empty
Use array prototype instead of creating instance
Use every for equals
Don't update js/ts diagnostics if they have not changed
oss 1.35
Inconsistent GDPR Comments (#74292)
ref #71580
fixes #74617
Pick up TS 3.5.1 final
use +
remove
fix
add common.remoteAuthority
Add conditional guards when accessing webview element
Use em for code font size instead of rem
Note that document link auto-includes instructions for tooltip
Set extract kind for type alias refactoring
code.sh: add datafolder
Update distro
Remove logs
update distro
Correctly splice from bg terminal list
Update commentThread/context and comment/context contribution descriptions, fixes #74552
Update vscode-octicons-font to 1.3
explroer: no need to refresh the explorer tree on formatter change since resourceLabels now refresh independently
[css] update service (for #63805)
resource label: redraw on formatter change
add bin path on server
Use "const" instead of "let" in uint
identfier -> identifier, Servuce -> Service
Revert "startup metrics should know if a window talks to a remote"
Git clone fix to use character set in regex
Revert "Git clone fix to use character set in regex"
Git clone fix to use character set in regex
fix #74321 (revert back from async/await due to minifier issues)
strict null
tighten native node modules cleanup rules
remove vscode.env.remoteAuthority API, #74188
debug: read out current line when paussed
vscode-xterm@3.14.0-beta6
align CommentThread ctor argument name with property
support submit comment keybinding
Add enumDescriptions for merge-conflict.diffViewPosition
Update to latest TS@next
Update comment
Don't try laying out disposed webview
Replacing a few instances of IDisposable[]
status - simplify by not needing element ID
refine remoteAuthority-api, #74188
status bar - adopt octicons for problems (#74285)
attempt 2
debug: commands when there is no focused thread, send the request to the first thread
use shorter label, shorter value
debug: do not use disposable store, it breaks the watch view input
object tree: preverve collapse state by id
Do not add label to task commands by default
update distro for oss
oss 1.35.0
status - convert "running tasks" statud entry to use octicons (#74285)
use DAP@1.35
update distro
status - use octicon for debug play button (#74285)
add path sep info to json data
fixes #73587
status - use octicon for feedback smiley (#74285)
debug: send session agnostic data for breakpoints
Open folder when enter is pressed quickly twice
Incorrect condition in file picker
update distro
Use spawn to read stdout (fixes #72844)
Double check token and also dispose from main side, #74446
status :lipstick: padding on zoom button
startup metrics should know if a window talks to a remote
don't cache provider results when request was cancelled, #74446
Use file service to update content
fix #74452
Juggling types (fixes #71383)
fix duplicates in extension pack tree
Pass focus back to input (fixes #72853)
don't leak completion items when using executeCompletionItemProvider-command, #74446
give DisposableStore set character (helps with #74446)
explorer: disable collapse action when editing
Use old c++ grammar for objective c++
Revert "fixes #73845"
Minor update on main.js (#74415)
fixes #74130
:lipstick: - introduce CodeMain
debt - restore previous async behaviour on startup
update distro
:lipstick: remove unused kind-property from SelectionRange
In gulp tasks use task args so that gulp path can be escaped
#72906 - :lipstick:
Revert "remoteAgentConnection: await import('vsda')"
remoteAgentConnection: await import('vsda')
Remove file picker input box auto complete while typing
:lipstick:
paste in parallel
#72906 Restructure spdlog service
Make conistent with other languages
add vsda.d.ts
Add ThemeMainService. For #70831
update distro
Controlling the background color of the active tab in an unfocused editor group (#73848)
debt - convert main startup code to async
fix typo, #74188
add vscode.env.remoteAuthority-api, #74188
debt - async import('windows-foreground-love')
update yarn deps
fix #74321
cut - ensure to use textfileservice#move() (for #72543)
'Keep Open' menu entry should show disabled when editor is pinned (fixes #46807) (#74384)
update distro
fix #74268 (#74366)
fix #74268
added deleteTag
fix #74202
fix #73121
fix #74269
fix #74295
debt - prefer our file service
Update distro
Update Octicons (#74313)
bump yauzl
Replace vscode-xterm with xterm
Hook up bg terminal listeners before attach
Update distro
Add `clear` method on DisposableStore
Open the diff view in current editor, to the side or below.
Open the new editor group below
Always compare change with context.
update distro
Only wait for rich client to reconnect
Implement a better simple configuration service
Update pug test fixtures
vscode-xterm@3.14.0-beta5
Support open diff in new editor group
fixes #70745
node-pty@0.9.0-beta13
clean up the readme (#74293)
Correctly check if the shell is git bash before wslpath
update distro
Connect to the remote extension host
Add WebSocketNodeSocket
Add support for vscode-textmate in the browser
debt - search to use global progress for searching (#74290)
Reduce duplication in term link handler
update distro
fix #72358
Update distro
vscode-xterm@3.14.0-beta4
format terminals.ts
fix #43148
address PowerShell quoting issue; fixes #73099
Be more defensive in sendLineData
:lipstick:
explorer: new file / folder polish
icon - restore code to refresh macOS product icon
fixes #68793
use enablement, make it a property of commands, not items, #21131
debt - make sure to still use scoped progress
partial fix for #73099
debt - distinguish progress services
shorten message to navigate in result sets
fix #73441
update distro
Reduce service usage in AbstractExtensionService
Use CommonExtensionService for the web
Remove no longer existing case
Move _isEnabled to CommonExtensionService
Remove disabled extensions ASAP (fixes microsoft/vscode-remote-release#431)
Update proposed api as soon as extensions are scanned or fetched (fixes microsoft/vscode-remote-release#431)
Extract CommonExtensionService
Extract code dealing with proposed API to ProposedApiController
First cut at an IExtensionService running in the browser
Extract AbstractExtensionService
Move extensionsUtil to /common/
Add IProductService.uiExtensions
Reduce usage of package.json and product.json
Move remoteExtensionHostClient to /common/
Avoid using ipc in the extension host clients
Reduce usage of product.json and package.json
Load uri transformer via common js
Introduce a raw uri transformer
Add transformOutgoingScheme to IURITransformer
debt - use progressservice2 in more places
fixes #73685
update distro
fixes #72894
fix #73183
fixes #72902
add test for #73850 (using default ranges)
fix #72585
address translation issue; fixes #72065
fixes #73845
don't overwrite revealIfOpen-setting, fixes #74072
fixes #73633
define extension kind in package.json schema (#73024)
enable breadcrumbs by default, fixes  #74048
support highlights for both - file names, and source matches, #52743
compoiste: do not show progress for show, since show is now sync
debt - more async/await adoption
Clean up some usages of `IDisposable[]`
Introduce DisposableStore
Use fileService and Blob for resource viewer
Add DocumentLink.tooltip api proposal
fixes #73781
fixes #74091
dispose empty comment thread when collapse.
Make sure we don't de-prioritize this. member suggestions
Make sure we reset editors being iterations of test
Show context for diff view of merge conflict and introduce compareAll.
Remove comments, polish jsdoc
Disallow runInBackground unless proposed is enabled
Add some runInBackground terminal tests
Get onData listener working
make sure to dispose CancellationToken so that it doesn't steal ESC
bring back anyScore but make it more strict (== easer to understand), #74203
show statusbar message, cancel on ESC, active code editor must be on symbol
keep cycling via F12 when peek is disabled
focus comments panel command. fix #73920
Show prompt in issue reporter when writing to clipboard, fixes #50659
Decrease issue reporter url length limit, fixes #70343
change comment/actions to comment/context to keep align
freeze FuzzyScore.Default, #74203
debt - more async/await adoption
replace whitespace from initial value
debt - more async/await adoption in workbench
debt - async/await in workbench
Add git.pullTags setting
Add shortcut to Collapse All Trees in Outline View (#74026)
fixes #73218
debt - fs.readlink() can return relative paths, so we use fs.realpath() instead to ensure absolute paths for symbolic links when watching.
add note that port mapping does not work for websockets
revert #74085
update master (#3)
fix warning message
microsoft/vscode-remote-release/issues/2 - ignore machine settings in user settings in remote context
fix #74126
update distro
do not check for ui extensions while installing on remote server
Add a comment
Support running terminals in background
fix potential undefined issue
Disable fallback renderer confirmation notification
Avoid terminal process title polling on Windows
Inherit cursor in conpty
remove stray line
add windows react native npm package to track for mobile extension team and pom.xml for java extension team
Allow hidden (but persisted) webviews to recieve messages
Extend disposable
Extract duplicated escaping code
Pick up new TS version
Simplify setting of preselect and sort text
Ignore built js files
node-pty@0.9.0-beta7
Revert "node-pty@0.9.0-beta7"
node-pty@0.9.0-beta7
update the remaining View/Appearance menu more consistency
make service private
Use old event API
Use proper typing where possible
checks for views
Hand actual buffer to electron
Use relative size for markdown code font size
Remove typescript-tslint-plugin from dev deps
Update distro
reuse extension data for deps and pack tree.
Machine specific settings in devcontainer.json (fixes microsoft/vscode-remote-release#409)
Add vscode-test-resolver
update distro
Add /remote/
renames, #73311
selecting an item should insert it sync, #73311
Revert "resolve completion item before inserting (except when using commit characters),  #73311"
add escape as cancellation source when running definition commands, fixes #57537
tree indent guides: styling
debt - do not abuse textfileservice
tree indent guides: fix missing first indent guide on async trees
tree indent: dynamic indent
wip: tree indent guides
list, tree: pass height along to renderElement
Layering rules
Remove trailing spaces
Comment out flaky test
update distro
dead wood removal
Add placeholder build tasks
Add extension host client
Implement connection
tweak paths
Add remote.contribution
Add workspaceMount option (fixes microsoft/vscode-remote-release#41)
Add workspaceFolder for single container (fixes microsoft/vscode-remote-release#101)
publish scripts
add .cache to .gitignore
Git ignore temp server downloads
tweaks to code-web
debt - use editor cancellation token for all formatting commands
Refine type publisher message
renaming some menu entries, cleanup and checks for panels
node-pty@0.9.0-alpha4
fix commented tests
comment the failing test case
#72906 use async spdlog service
Update text
add remote configuration tests
Add contextValue support
move fullscreen context key to be more appropriate
fixes for custom
node-pty@0.8.1
Remove compiled files
Automate slack message
vscode-xterm@3.14.0-beta3
update comments
contextValue
thread id is still updatable
rename namespace for comments
Extract comment form actions to own class
node-pty@0.9.0-alpha3
Simplify terminal logging
add missing semicolon
allow websocket uri for portmapping
update master (#2)
Depth 1 for cloning DT
Types publisher update
Clear comment thread action bar when updating
remove support for running DA in renderer
resolve completion item before inserting (except when using commit characters),  #73311
Make deleting the slash in file picker go up one dir
:lipstick: suggest widget is always defined, no checks needed
Save as jumping cursor in simple file picker
don't use confusing anyScore,  #70974
use score-matches when filterText and label are the same,  #70974
Update distro
Implement TunnelService
Add reconnection logic
Add BrowserWebSocketFactory
Add devContainer schema+validation
Normalize tsconfig path (#73001)
Allow multi-line comment auto-closing for C++ files
move commit character logic to its own file, #73311
use next microtask to filter completion results, #71795
Update C++ grammar to fix freeze
merge conflicts
Menus update on context key change
Point type publisher to microsoft/vscode-DefinitelyTyped
Final fix
Use correct Azure Devops token
Simplify type publisher
Use 'option' for terminal link tooltip on mac
Remove shell notification in favor of dropdown entry
Range can be modified.
comment editor authority
Remove unnecessary unhandled error handlers
Precondition for command and alt command
no need to check item.alt
precondition for commands
fixes #73126 (#73368)
Makes custom dialogs match native dialogs on Windows + Mac (#74005)
Scope context key service by thread and comment
fix-72938 Removed Empty workspace check in QueryBuilder expandSearchPathPatterns()
debug issues to me
fix typo
Contextaware menu for comment thread
Save comment and cancel
Edit comment
Change documentation for TS importModuleSpecifier.auto
Encapsulate WebviewContent
Extract doUpdateContent
Remove activeCommentThread from extHost comments, set context keys on simple comment editor
remove duplicate imports
icons for menu bar
fix #65145
add newsletter signup to welcome page
Added two more tests for settings key to display format cases
Supress potential null errors related to updated @types/node
improve message when no resolver found
Don't use array.from
Update
Bump tslint version
Git config
CodeActionSet should not mutate input array
Dismiss code actions message before showing code actions menu
Pick up latest TS@next
Update
Oops
Update build definition
api-sketches for ExtensionContext#ExecutionContext
Avoid NPE
The TemporarilyNotAvailable error should be considered handled
Tweak cli output
node-pty@0.9.0-alpha2
Delete vscode-typescript upon close of VS Code (#73801)
Azure DevOps yml for publishing @types/vscode
menu items
node-pty@0.9.0-alpha1
Support negated .gitignore rules.
fix-73465 Removed commented lines and moved reLayout() call oustide completed check
Handing numbers in settings keys to display format
:lipstick: use conditional, mapped types magic
Terminate all tasks polish
debt - flaky test on windows
Update name of simple file dialog setting
Smart select: only add line ranges if they‚Äôre contained by the next range
undo scheme lower-casing
update distro: allow badge.buildkite.com for badges
Re-use isValidBasename in file picker (#73332)
support query encoding in http, http, ftp
Use same code path in accept for trying to update
Pick up latest ts@next
Convert `toResource` to return undefined instead of null
Use vscode.d.ts we ship instead of version from vscode package
Use undefined instead of null | undefined for commands
null -> undefined
null -> undefined
Resolve promise to null instead of empty
ResolvedKeybindingItem as undefined instead of null
Convert getLabel to return undefined instead of null
Convert a few more interfaces to return undefined instead of null
convert getDescription to return undefined instead of null
Make getResource return undefined
Remove unreachable null check
Remove call to withNullAsUndefined
Update for windows
Handle newline characters in file picker
Update grammars
add proposed api check
tiny tweaks
fix-73465 Tweaked Toggle Search Position Feature to work on empty tree and No Search Results
debt - inline file constants into pfs
debt - less type cases
Log every native call to node-pty
Make simple file dialog setting a real setting
refactor actionItem naming (#73600)
:lipstick:
Remove tasks specific conpty setting
:lipstick: file on disk provider
"Changed the regexp to take numbers into account when removing the dot separator for the setting key
Pick up TS 3.5@next
Move xterm buffer usage to stable API
Update vscode-xterm typings
vscode-xterm@3.14.0-beta2
remote fs provider to support chunked read/write
fix distro build
update distro
web - backport some changes
update distro
update references view extension
function name change
update distro
Add basic support to start vscode in the web (#73687)
Reenable disabled test - fix #73604
debt - merge contextkeys into one
use keyvault for all secrets
Remove unneeded vscode-xterm function
Disable path checking in terminal temporarily
fix #73355 (#73684)
fix #72573 (#73682)
fix #50830 (#73681)
fix #65747 (#73680)
build
build
Send line data to tasks when using ConPTY
Remove winptyCompat custom vscode-xterm typing
:lipstick:
:lipstick:
Address feedback
fix #73529
Disable failing test
Use new event api
Replace winptyCompat with windowsMode
Update typings
vscode-xterm@3.14.0-beta1
Use correct sorting for code action on save
Update js/ts grammar
Use finally
Use new node-pty events
Update node-pty typings
node-pty@0.9.0-beta1
Update version to 1.35.0
Move tasks setting under terminal (#73562)
Update settings description to link to terminal setting, add Tasks to the ToC of settings editor
Rename windowsEnableConpty to windowsAllowConpty
Preselect default formatter
extract native modules ignore rules
:lipstick:
web - scaffold a basic dev setup via "yarn web"
Change setting name to reflect feedback
Add setting that uses winpty for tasks
use keyvault for secrets: linux
add logs to shell env
debt - no more monaco-shell
compare - use same mode when comparing to clipboard
fix #71485
Pull back comments api (#73481)
allow empty string to be inserted...
fix #73472 (#73473)
explorer: take the root that is the closest to the stat
revealProblem should be revealProblems (#73414)
use vscodehub docker images
untitled - mark as dirty when having initial contents
:lipstick:
:lipstick:
:lipstick:
allow to provide a language mode when opening text editors
Deprecate commands for static contribution later, fixes #73333
fixes #73126
oss for 1.34
Revert "fix #31524"
update json service
update html service
fix #31524
fix #73215
tree trait model change events should only fire if collection actually changes
update distro
add integration test for #66338
fix #66338
register search panel by default
renamed listeners to registerCommandListener and unregisterCommandListener
Removed disposeListeners from commandService and only remove listener on MainThreadCommands
removed public
Made recommended changes
Implemented onDidExecuteCommand api method
json-language-features/CONTRIBUTING.md fixes In particular, mention npm and yarn as appropriate. Some of the mentions had apparently been inadvertantly switched???
Update remote background defaults
Rename username to author name. (#73137)
Add DirtyWorkTree git error matching to git exec (#73108)
Use default shell from the process side
tweak message
add code lens cache to standalone editor
text model - improve null handling (fixes #70260)
object literal type to the interface type
Remove duplicate context
Whitespace
Simplify code, make sure error message shows up
in multiple git repositories, can't view/focus changes on keypress up arrow and enter
fix gdpr annotation
Added Review #2 Changes
hot exit - back to ' ' as separator
hot exit - use # as separator for better forwards compatibilty
hot exit - polish
change distro
Update distro (#73104)
change publisher
Comments API Finalization (#73010)
hot exit - implement support for metadata
- Remove undefined in the aria label - Search extension by id
adopt remote color names
Added Review #1 changes
hot exit - move tests into node layer
hot exit - convert to async/await
Update theme.ts
fixes a z-order bug in code insets
Check pending version before updating markdown preview content
Use finally
update distro
hot exit - simplify model creation from backup
add test
Revert "fix #43270"
New colors for host badge (#72929)
update color names
File picker auto complete shouldn't include trailing slash (#73020)
define extension kind in package.json schema
Legacy api should still work.
update breadcrumb on case-only file rename
Empty Comment Thread Factory works
Bring back empty comment thread factory.
support deprecated commentId.
Add active comment thread.
Turn Comment to Class.
Comment Id.
Rename parameter
Update distro commit
Catch errors from getting document comments
new colors for host badge
update distro
Handle user input errors in filepicker (#72915)
update distro
Tweak times (#72920)
Tweak times
Add 'qsh' as a valid shellscript firstline This is the shell on IBM i
Update distro commit
fix #72909 (#72913)
fix installing workspace recommendations
debug issues to me
fix distill profile
Also update additional HC theme
Use alternate color for Monako theme for statusBarItem.hostBackground
Update high contrast theme to hide statusBarItem.hostBackground
Add theme support for statusBarItem.hostBackground
Update distro
update distro (#72883)
use statubar.hostForeground color
update distro
Center remote badge icon
update distro
continue supporting 'debug/toolbar' old id for one more milestone
explorer: extenral dropped resources handling
Preserve cursor position before file name in file picker
File name validation fix in picker
update distro
update distro
fixes #72830
Support pasting in paths with ~ in file picker
Update C++ grammar to get recent fixes
bug with preventing saving an already open workspsace
fixes wobbly progress indicator
allow cb to be called if task is not cancellable
update distro
Increase max buffer for `readMacCaCertificates`
update distro
Allow to fire onClose
update distro
Make sure we also restrict local resource roots when redirecting
spell
don't cache non-local icon themes
update distro
support forceReuseWindow for vscode.openFolder
don't restore non-file empty windows
message consistency
enter workspace - result can be null if operation permitted
files - typed etag()
Correct multi-root terminal cwd on Windows
Quick input shouldn't completely break if a ThemeIcon is provided
Increase constant
update distro
Improve overwrite file dialog
Ignore focus out on file overwrite prompt
Add trailing filename or extension to file picker
File picker fix for slow file system
fix status icons in light themes
use Severity.Ignore, not Info when everything is good
validateShellPaths: skip file exists check for empty strings
files - add tests for readonly provider
files - protect against null errors
Remove trailing slash from auto complete
fix tests
snippet - uris all the way
files - fix issue with etag computation
eng - disable more flaky fs watch tests
update distro
fix-72650 Added file path exists check on spawning terminal and relavant error message with negative exit code
Hide the custom file pick box before showing native picker
Resolved regression in WSL launch script
Update js/ts grammar
Only enable open external for resoruces when environment supports it
Add ResourceViewerDelegate interface
Changed logic to convert from undefined to string
Removed a part of comment
Refactored the code
Moved Registry position and changed a return value
Set correct scope for file.hotExit setting
Use TS 3.4.5 for building VS Code
Pick up ts 3.4.5
files - proper URI usage
:lipstick: - less usage of URI.fsPath
remove logs
debt - adopt label service in breadcrumbs control
implement npm view for version completions and hover suggestions
Strange console output when using WSL
update distro: fix build - 2
save - tweak message based on provider capabilities
update distro - fixing build - 1
update distro
update distro
Update src/vs/workbench/contrib/files/common/explorerService.ts
merge packageJSONContribution to latest master
eng - update Marked.js to 0.6.2
fix Microsoft/vscode-remote/issues/1442
fix #72632
settings - scope some more to application
update distro
untitled - fully support resources with associated filepath
Center remote icon in extension editor
Revert marking markdown extension with explicit kind
Center remote icon in badge
Update statusBarItem.host colors
Revert earlier commit that disables creating a commit with just whitespace, since this is not part of the original issue
Only show the "open using external" command for file resources
Don't use ConPTY on WoW64 Windows
high cpu fix for progress dialog change svg animation to use JS
Enable terminal hasReceivedResponse
Pass validateDefaultNpmLocation to ts 3.4.4
Pick up TS 3.4.4
Organize imports should interupt geterr
Add debug messages to multiple sequence operation assertions
Remove part of the regex matching expression for git commits, because previous it would think commits with empty messages were invalid when infact they are not
Instantiate test theme with necessary colors
Disallow making commits that contain only contain whitespace to be consistent across other methods of committing to git through VS Code
Added check in twitter feedback to make sure the user does not add more than the required max amount of character
Deleted newline
Update comment
Deleted debug data
Changed a part of name from 'app' to 'shell'
Added comment for _getAppPathFromRegistry function
fixes #72574
Enable web links in terminal renderers
Make sure Windows bash CLI works with spaces in user name
allow `Git: fetch` command to show password prompt There was some 2 years old code which was preventing `Git: fetch` command from displaying a password prompt. I've removed this special treatment. Tested, now `Git: fetch` is showing password prompt as expected and the operation is also successful.
Chenged the argument of _getAppPathFromRegistry
Deleted unnecessary variable
Created function due to get app path from registry
explorer: stricter dnd
explorer: show progres until workspace fully loaded
:lipstick:
fix #72558
Update makeRandomHexString() to remove duplicate character
Langauges -> Languages
Update distro
fix #72343
Switch to file service based configuration only after loading it
tests updates
add comment for #72447
fixes #72447
Improve error handling when opening issue reporter
Update distro
Filter Application settings from remote settings GUI
Add 'product' common property to telemetry events
update distro
Introduce ProtocolMessageType.Disconnect
Disable flaky DiskFileService test
Revert "Disable flaky DiskFileService test"
code.cmd: don't use call as it substitites vars in arguments
Disable flaky DiskFileService test
Consolidate terminal environment setup logic
Dispose comment thread properly
Revert "disable failing tests (#72465)
fix tests
filter workspace paths contradicting ext development
update distro
rename the setting configuring extension kind
special treatment for language pack extensions
allow (much) higher diff limit in compute more minimal and log times, https://github.com/Microsoft/vscode/issues/72321
don't set watcher on /dev or /proc
explorer: transition paste to command. Do not open editors when multi paste
files - error :lipstick:
workaround #72404
Provide API to get access to the workspace configuration file (#37421) (#72490)
use encodeURI on non-encoded uri when 'leaving' vscode, https://github.com/Microsoft/vscode/issues/25852
Use flat structure for extension kind setting
title control: add and use updateEditorLabels()
files - disable flaky watch test on windows
notifications - tweak title
Cannot read property 'length' of undefined in toWorkspaceIdentifier
set empty context at the end
fixes #72361
notifications - allow to set title
new window to open in new window
allow remote fonts to be loaded
files - more tests
workbenchThemeService: move more to common
change default extension views in remote window
Get latest cpp grammar updates
files - :lipstick: decoder stream
fix compile
disable failing tests (#72465)
files - fix regression with autoguess encoding
files - :lipstick:
Remove redundant "settings" label in gui
Tidy up terminal env creation
Localize terminal starting message
Update distro
do not check for ui extension while installing
update distro
fix #72404
textfile - add test for UTF16 without bom
improve error message if ext term app can't be found
files - :lipstick:
files - reuse methods for writeFile
use forceReuseWindow in openNewWindow
Update cpp grammar and make small themes change
update distro
typos in STATUS_BAR_HOST_NAME_BACKGROUND
fix workspace.test
expose setting to customise extension kind
add STATUS_BAR_HOST_NAME_FOREGROUND
update distro
fix workspace.test for windows
Remote: Preserve BOM in UTF-8 when found (fixes #48826)
simplify warning messages
titleControl: update labels once new formater gets registered
show remote badge when extension icon is hidden
Update quick input message style to match other error messages (#72393)
toWorkspaceFolders takes workspaceConfigPath
Can't open workspace file with absolute paths
update distro
update distro
files - more cleanup
update distro
fileservice2 => fileservice
files2 => files
update distro
files2 - fix tests
files2 - move more text things around
files2 - more tests
files2 - remove legacy file service
scale the remote icon in extension editor
files2 - adopt new methods
Makefile test case about the bug fix with "@,-,+" colorizing in the recipe (#72265)
files2 - implement read() and readStream()
cli: reuse window for add
update distro
files2 - remove resolveStreamContent()
files2 - add more tests
win/code.sh: falback when wslpath not present
update distro
Tweaks
files2 - implement read with encoding
update distro
Clear validation message when arrowing through file picker items
files2 - first cut ITextFileService.read()
more renames
improve installing message
:lipstick:
files2 - more use of streams
Ignore case when checking _workbench.uiExtensions
Use set to check configuredUIExtensions
Add new remote agent method
Only try tunneling openExternal when we actually need to
Use Map instead of object map
Mark markdown as a ui extension
Move terminal process launching into its own function
improve keybinding handling in dialogs
Label terminals as starting while launching
Improve terminal launch
Finalizing webview port mapping api
fixes #72022
Remove default keybindings for resize terminal pane up/down on Linux
Change Open Workspace starting folder
fix typos
Use file item label in file picker (keep the slash)
Adjust highlighting in file picker
update distro
Show validation error in file picker when path doesn't exist
update distro
Add hover text to quick pick button
pipe not supported in remote cli
Minor tweaks
Add custom button to quick pick for file picker (#72209)
update distro
Add Terminal All option to terminate task command (#72015)
Add type assertion to prevent typescript error
files2 - first cut buffered read impl
files2 - textfile.read()
files2 - move encoding out of fileservice
fix #45346
theme-monokai: fix tabs indentation
:lipstick: remote fs impl
history - actually filter some files
fix #72245
update distro
Open TS Server logs in editor if possible
update remote badge
Size limit should be 10mb
Increase size limit for images displayed in editor
Allow disabling agent telemetry dynamically
support updating messages in progress dialogs
fixes progress circle clipping
Also include returned result count in completions telemetry
extract setContent
Don't change preview when click fails but do show an alert
Only try/catch openTextDocument
Styling
Set initial focus on an input field when opening the issue reporter
Refresh PHP documentation.
fixes #72203
update distro
setting query should always be string
workbench.action.openSettings support args
ext: in setting editor (#72157)
Update distro
update distro commit
fixes #72094
update distro commit
remove sync extensions support
use more ExtensionHostProfiler and less extension service
fix merge issue
Use strict equality in darkenColor()
update distro
add quality to win/code.sh
minor fixes
update distro again
Update distro
Comment out getMachineId test (broke the build)
remove unused file
move files around
simplify extension host profiling
files2 - avoid 2 fs.exists() when writing a file
extensionHostDebugService: use sessionId instead of passing session root uri
update implements according to suggestion
ext management - do not sync
Support command links in notifications (fixes #46571)
fix #71661
fix #72187
align monaco compiler settings
:lipstick:
Use editbale configuration target while editing. Adopt user remote target
:lipstick:
also make null-lovers happy, #71992
fix #71992
history - exclude some typical git files from dock/taskbar entries since those are limited to a few
Tweak folder path
minimize refilter delay (workaround) #71795
arg help: isPipeSupported
fix #72122
files2 - restore more explicit encodings
files2 - strengthen test
fix #72186
Update vscode-octicons-font (#72159)
Use native scrollbar in SCM commit message box
move vscode.env.uriScheme to stable
Add fallback script for ps
Move min versions into jt/ts feature providers
Register features with Promise.all instead of sequentially
Add telemetry for how long completions take in js/ts
Check in stubbed out smart select support for js/ts
vscode-xterm@3.13.0-beta3
adding overlayService (#72014)
Expose vscode.openIssueReporter command that allows passing an extensionId to open the reporter with
Refactor to support ErrorTelemetry in non-browser processes
fix mac build
fix mac build
Add settings GUI tab
Use some instead of reduce
Move convertToPixels into sizeUtils
Move getDimension into SizeUtils
Convert SizeUtils to a static class
fix tests
debug console:  In order to keep scroll position we need to give a good approximation to the tree
files - more encoding tests
fix windows builds
use VSBuffer instead of Buffer
less Buffer
more tweaks
fixes #72110
Order of operations in file picker when changing directories
fix builds
Don't try to do a file picker auto-complete when the file picker is busy
fix windows build script
hardcode sample to load and run
extract build & publish scripts
Update variable names
Update comment
Extract startExtensionHostProcess
Minor renames
Add shadow root support for isInDOM
debt - remove unused code
files2 - queue up any write
:lipstick: save error message
run mixin before yarn
use VSBuffer, not Buffer
Show disabled status for local workspace extension even if it exists in remote
Support ~ in simple file picker
Show disabled status as tooltip
improve doc about the two build versions required for the smoketest
files2 - polish tests
less Buffer
wip
files2 - fix permission denied issues
Remove support for Buffer
Hold back test extensions
Don't ship all html files
test all encodings
Add gulp dev modules
move out require interceptor
have IHostUtils
files2 - add a write queue
build
build
build
build
automatically sync distro master
clean up environment
cliserver: add RunCommandPipeArgs
more tests
files2 - ensure BOM for empty files
Run integration tests
run code wsl in dev
tweak wording
move things around
Use wsl ext
Warn about installing VS Code in WSL
move out extHostStorage and extHostMemento
.vcode-workspace: remove remoteAuthority if no longer needed
disable tests for now that fail
files2 - implement file writing via provider
Improvements to extension ui, make it consistent.
Use `as const` instead of multiple assertions
Add conditional guards around access to body in webview pre
Use proper documentHighlights api for html js intellisense
Handle invalid config file diagnostics from ts server
Pick up TS 3.4.3
Better comment
Add some pinning tests for indent
Small tweaks
fix tests
Installed view: show enabled first and then disabled
Use Schemas
mark setting deprecated
do not set user configuration until initialized
Add support for injecting node module lookup path
provide a temporary setting to switch between default views in extensions
More arguments for test
Tweaks to test running
Update distro
Improvements to script running
Small tweak
Exploration
Improve CSS
send init data, wire up starter
- Define Machine Settings: Schema, Environment - Scope machine settings - Make remote settings scoped to machine settings
terminate debug sessions properly
debt - better separation of extHostMain and extHostProcess
fix tests
More templating
More eventing
Improve test running
Add shims for keytar and open
Add messages to tests to ease debugging
Add shimming for open module
fix pending statusbar entry update
remove unused code
debt - workaround for #72075
debt - don't use Buffer in extHost-protocol
Hook up tunnel
Implement the socket
Add diagnostics
fileEditorInput: use labelService for name computation
fix bad layout on references widget on fresh workspaces
Rendering improvements
fixes #71624
move extHostLogService
fixes #71648
fix typo
More webview ports
debt - split extHostOutputService
debug.showSubSessionsInToolBar
files2 - restore ability to save elevated
files2 - support overwrite readonly for local files
files2 - IUpdateContentOptions => IWriteTextFileOptions
files2 - :lipstick:
move more files to common-layer
wait until running extensions are available
move extHost-files to common
Refactorings
update sample
:lipstick:
files2 - implement createFile2, writeFile and adopt
Change how the extensionId value is accessed.
:lipstick
Show warning for system disabled extensions
- Show popular and recommendation views as default - Do not show empty label
Better Keytar shim
Get outdated extensions from service
cleanup
do not fetch local extension again
relax openExternal and accept a string as well
Update the extension when it is not from a server
use mousewheel to dismiss contextmenu in monaco (#71623)
wip
enable clear action when there is a value in the beginning
rename
Improve extension ui for remote window - Show group by server as default view - Install remote action for local workspace extensions - Show install local or remote action based on manifest
cleanup multi extension debugging
fix test-integration comment
add locate-extension as command line parameter
rename IsRemoteContext to RemoteAuthorityContext
remove SupportsOpenFileFolderContext
remove type assertion
implement extension host starter interface
Automatically show problems panel (#71387)
implement IMEssagePassingProtocol for web workers
properly check picked formatter, #71988
wip
ignore trailing white-spaces in LINE_COLON_PATTERN (#71985)
fix compile errors
debt - adopt toLocalResource in more places
More file picker auto-complete fixing
resources - tweaks
resources - add a helper to create local resources
schemas - add vscodeRemote
debt - reduce file:// assumptions
files - allow to compare with saved with remote authority
untitled - use canHandleResource to check if document has associated file path
labels - fix a todo@remote
use editor for format on save and honor silent mode
fix link navigation to extended config file in tsconfig
fix mispell
make comment properties readonly
Auto indent jsx tags with attributes
Better fix for #48735
Auto indent case/default body for js/ts
Pick up TS 3.4.3 insiders
Enable ts-check
Return processes in original order, not alphabetized
Improve error handling when fetching diagnostics
Update css dependencies for #71715 and #71791
Update README.md
add readonly to extension properties
Extensions viewlet improvements - Show server view as default in remote window - Add install remote action for local workspace extension
#70459 Enable experimental azure search
fix commit template message whitespace removing #71312
Partial fix for simple file dialog auto complete
take mooncake upload out of critical path
fixes #71772
Reset defaultUri in simple file picker
Improved messaging when running a task with no workspace (#71476)
fix #71774
Update the function name
empty commit
pr triggers
fix releasing workspace barrier
triggers
fix #29937
add distro build
fixes #71640
fixes #71838
Get the value of extensionId rather than the extensionId itself.
Add the formatter's extensionId as the description when picking a formatter.
fix #71873
files2 - recursive watch properly
fix #71837
debt - introduce and use workbench environment service
cleanup status indicator with background
commands - do not always wait for extensions
Process explorer refactoring
fix compile error
fix open workspace uri from cli
Delete deprecated search provider stub
test dependenices are devDependencies
disable flaky test, #71801
use `readonly T[]` instead of `ReadonlyArray<T>`
simplify protocol check
Let enablment service handles local workspace extensions in remote window
debt - make ext host init data more complete
fixes #71671
Update grammars
Add yes-no choice for overwriting existing file for save as
update distro
ExtensionEnablementService: - Remove getDisabledExtensions and instead use isEnabled or getEnablementState methods
Simplify reload action and fix test
Update distro hash
:lipstick:
files2 - disable failing test for unsupported platforms
debt - fix toResource() with schemes
showOpenDialog should respect useSimplified setting
toResource :lipstick:
Keep export
Add autocomplete to file picker when arrowing through list items
filefolder picker returns wrong IURIToOpen
Cleanup unused properties
update cache on intitialzing remote configuration
debt - dispose provider properly
files2 - print events in failing tests
fix-71570 Added logic to handle markdown preview update on file rename and delete
remove hashservice
More diagnostics refactoring
Support multiple comment provider
Try making applyStyles more resilient
fix #71649
Make vscode-editor-font-family track real editor font family and introduce vscode-font-family for the UI font-family
remove acquire file service
fix tests
Use IConfigurationFileService and remove node based configurations
Configuration File Service - is watching or not - wait until provider is registered
Use configuration file service in user configuration
add warning on service registration
debt - use Cache for completion items
debt - don't use heap service for lazy links
debt - add ILinksList to LinksProvider and allow it to define a lifecycle
label.getPathLabel use resource.relative
explorer: remove path.normalize from explorer filter
support debuging more than one extension; fixes #71081
explorer: onDidChangeItem emit if refresh should be recursive
:lipstick: CSS selectors
notifications - make #50931 a bit better
debt - don't send unused data around
handle resolveCodeLens-error, fixes #71532
files2 - no country for flaky tests
vscode.openFolder broken
Force save suffix when saving in simple dialog
when providers are missing invalidate code lens cache after a timeout, #19917
persist code lens lines between reloads, #19917
better caching for #19917
fix tests
remove hash service and make createSHA as browser util
add missing cli argument
move configuration service to browser namespace - create and use configuration file service to access and read configuration files - use user configuration using configuration file service
debug: reveal source if already opened
fix tests
move IExtensionHostDebugService into extensions
files2 - more watcher tests
Revert "Files exclude setting allow specifying root name in the relative path"
move extension management to extensions
debt - stricter typing of Event.debounce
fix #71485
:lipstick:
tweak flaky test
normalizer => watcher
Update html/css service
Some diagnostics refactoring
using args object. Renamed setSearchParameters
Add strict properly init task
Treat updateOpen as a fence command
Delete some unusde apis in old tree api
getControl return undefined instead of null
Make getResource return undefined instead of null
Avoid direct compare with null if we only care that some obj is returned
More support for keytar
Simplify registration of `vscode` node module
TS 3.4 formatting
:lipstick:
Add NodeModuleRequireInterceptor
Update distro
scoped context key services fire on their own emitter but expose a composite event, #71642
introduce ExtensionHostDebugService to no longer piggy back on the broadcastService
adopt PauseableEmitter in ContextKeyService and for EditorModeContext, #71642
add PauseableEmitter to support #71642
file service => legacy file service
:lipstick:
speed up fade-in animation, shorten resolve delay, #19917
telemetry - avoid use of crypto for hashing file paths
add lauch.json to server-ready extension
fix bad type
debug.hideSubSessions
:lipstick:
more and better cancellation token sources
allow to provide a parent when creating a cancellation token source
cancel getCodeActions-request when model changes, #71580
files2 - try to fix tests
fix #19917
output - use fileservice for watching
config - use statLink()
fix tests on Windows
files2 - support symbolic links for simple watching
Remove tasks use of crypto in extHostTypes.ts
files2 - register disposable properly
files2 - extract nodejs watcher to its own service
simplify workspace based configuration
simplify folder configuration
files2 - move watcher into watcher.ts
tests - less error spam
debt - move createKeywordMatcher to its only consumer
debt - use new instead of types#create
tiny perf - no need to clear dom node before setting innerHtml, use concat string instead of array
debt - use Map instead of Object for storing contexts
Adopt to new file watcher
Add clear method
Revert "more build logs"
more build logs
files2 - adopt VSBuffer
revert uneeeded change in tests
:lipstick:
fixes #71406
fixes #71329
update GDPR declaration
addressed comments from @roblourens
Use flatten array helper
Also treat all unused imports as a style error
Make sure we register vscode's schemes as known schemes for links
Make sure we always include uriScheme in knownSchems for markdown
Split webview's pre for electron and browser
Reduce direct usage of ipcRenderer
Expose uriScheme through vscode.env (#71397)
Add vscode-insiders URI prefix to knownSchemes in links.ts
files2 - adopt watcher
Extract Configuration Cache
fix tests
files2 - separate methods for watchFile/Folder
files2 - tweak tests
files2 - implement a better non-recursive watcher
refactor IURIToOpen
native pickers: fix
Files exclude setting allow specifying root name in the relative path
debt - simplify IContextKeyService#onDidChangeContext
debt - LinkedList#_remove should not check for double remove
debt - used linkedlist for emitter delivery queue
fixes #68276
Adopt to VSBuffer
Add `ISocket.dispose()`
Fill in VSBuffer implementation
watchNonRecursive - wire in cancellation all the way through
files2 - :lipstick: logging
report snap on telemetry, issue reporter, about menu
explorer: do not show move to trash icon for file systems that do not support it
fileService.hasCapability do not activate providers
move file service based user configuraiton to workbench
files2 - implement proper folder watching
move config expor helper separate file
fix #70602
fix tests: set the unexpected error handler
refactor native pickAnOpen
explorer context keys: some polish
show confirmation dialogs to remind of uploading files, #70492
query for existing issues before filing new issues, #70492
files2 - provide workspace watching from new implementation
file actions debt: base delete file action -> functino
#47763 Use fileservice to read user config
file actions debt
polish
fixes #67768
configuration resolver service: use test editor service with active editor to properly mock selection
remove debug/toolbar
remode sidebarVisible context. Use sideBarVisible instead
STATUS_BAR_PROMINENT_ITEM_FOREGROUND inherit from STATUS_BAR_FOREGROUND (for #71575)
themes: move tokenColors normalization to tokenColors getter
files2 - remove obsolete methods from legacy file service
support open to the side in extensions tree
files2 - improve tests for watching
files2 - :lipstick: file events
Add "statusBarItem.prominentForeground" color token
Batch comment thread properties update event (#71569)
Id cannot be undefined
Remove extra conditionals
naming
Reducing cycles
Remove unused baseUrl code
Splitting contribution sections of webview
Splitting webview into browser and electron-browser sections
Some refactoring in the diagnostics service
fix typo
Build VS Code using TS 3.4
#29405 workbench.action.findInFiles w/ parameters
files2 - leave file change event normalization in its own file for reuse by watchers
files2  - restore file change event normalization logic
files2 - disable flaky test for now
files2 - wire in dispose properly
files2 - implement support for non recursive watching
Properly instantiate test ThemeService
#69955 Adopt to new tree
Schedule repl refresh on theme change
fixes #71355
minimize suggest dto,  #71060
labelService: handle workspace paths without  .code-workspace extension
Disabling vscode-icons extension does not reset icons to default. FIxes #62298
Revert "Revert "fixes #71163""
debt - use dummy node instead of undefined to signel end
files2 - add workspace folder watching logic
show notification when formatter is disabled/uninstalled, message otherwise
files2 - scaffold watch() that returns a disposable
fixes #71386
move back to vscode folder
Compile sources before running
files2 - reduce legacy service code
debt - less casts
re-rendering Markdown preview when updated extra configurations provided by extension
electron@3.1.8
Use VS Buffer
debt - get rid of nfcall/ninvoke
debt - merge extfs and pfs
debt - more async/await
debt - get rid of flow
debt - reduce explicit any or casts
Confirm undo commit if its a merge commit
Remove test trigger
Add experimentalRefreshOnResume as potential workaround for texture corruption
Don't register "ini" for all files named "config"
Transform to Title Case
Version bump
Reveal Webview in active view column.
Take TS 3.4.1
Format to pass hygeine checks
Add braces around switch cases and break default case
Check colorIndex explicitly against undefined (can be 0)
Remove ANSI color styling from repl css
Update tests to account for new styling method
files2 - throw if deleting non existing file
files - use proper flag for writing in extfs
files2 - polish method names
storage - remove global storage migration
files2 - properly type the file operation event
Perl5 support to fold POD blocks
Revert "fixes #71163"
Add remote option when publishing branch
Add `vscode:` URI prefix to knownSchemes in links.ts
fix compile error
force DA in EH
Show git clone progress bar and percentage
Rename customColor to color
Update changeColor function to use only custom colors
Revert "files2 - throw if deleting non existing file"
bulkEditService: throw if file to delete doesn't exist
files2 - throw if deleting non existing file
Use setBasicColor in set8BitColor
Implement setBasicColor function and change to switch statement
Pass IThemeService to handleANSIOutput and add setBasicColor method
fix #71373
fix #71369
fix #71057
revive the returned workspace identifier
change the order while entering workspace: initialise, stop and start
revive the returned workspace identifier
update distro for OSS
fixes #70429
fixes #71306
another fix for #71140
fix #71298
fixes #71303
"macOS" (#71228)
show status bar message when formatter is gone
default value for defaultFormatter is null
only suggest formatters with main-entry
don't show a message when the defaul formatter isn't available
Default to group 0 instead of active group
Add note about required window reload (#71228)
Avoid patching agent twice (#71228)
fixes #71226
fixes #71250 fixes #71247
fixes #71227
Ensure process os is set before xterm link handler is registered
fixes #71132 #71305
Handle ext host exit when debugging
fixes #71131
be relaxed when having one formatter and no config
only show picker when there is more than one formatter
remove configure extension buttons, add configure default to format with...
fixes #71130
inline PLACEHOLDER_URI
fixes #70058
add editor.defaultFormatter-setting,  #71173
fixes #69368
#71165 do not consider unknown markers in the count
fixes #70902
Simplify types (fixes #70491)
fixes #68384
fixes #71104
fixes #71284
fixes #68385
debug: fix pause action
files2 - fix type of IStat to be as before
fixes #71280
#70998 Create output directoru before creating logger
fixes #69932
fixes #67317
fixes #68176
fixes #71092
fixes #71288
missing unused imports
fixes #70681
fixes #71112
...
fixes #71206 fixes #71183 fixes #71092
move - send a copy event instead of move when move is across providers
fix #71140
mv - do not futimes on symbolic links
typo
Extensions are allowed to contribute shell and process tasks
explorer: minor cleanup of unused methods
fix #71188
fix #71195
fix #71160
fix #71213
files2 - some remote cleanup
fix #71203
fix #71240
fix #71212
fix #71215
Update simplified file picker setting to use a boolean
Use host label for opening remote settings
windows is not symbolic link friendly
files2 - use fs.symlink() for tests
Formatting tweak to "Running contributed command failed"
Also support string in shellArgs passed directly to createTerminal
add option to run DA in renderer
node-debug@1.33.3
use case insensitive matches for server ready; fixes #71164
Send cursor to the start of the line for waitOnExit terms
files2 - mode => flags
files2 - proper typing for resolveFiles
explorer: disable dragging readonly items
build - disable another flaky test
fix #71152
fixes #71163
fixes #71070
fileservice2 - add a test for resolving symbolic links (file/folder)
fix #71139
add folder to worskpace can lead to duplicate folders
dnd does not preserve authority
"remoteAuthority" is not recognized in code-workspace file
Actions for simple file picker
files2 - ensure to close handles even in error cases
fix #71118
Remove comment that shellArgs parameter of createTerminal does work in Windows
Update get system status command to get diagnostics
Remove unnecessary file scheme check in search
fix hygiene
update html service
Update css service
Move more code to /common/
Update html service
fixes #68117
add _workbench.addToRecentlyOpened command
open new window with reuse
status from ext host cli
File picker undo should work (#70302)
fixes #68772
node-debug@1.33.2
release debug API: parentSession arg for startDebugging
Update cgmanifest for CSS grammar
null guard for repl: copy
Explorations
fix compilation errors
enable no-nls-in-standalone-editor again
console.log in tslint rule crashes ts server
unblock ts language service
fix tests
Move remoteAgentEnvironmentChannel to /common/
fix #71073
Have 'Format Document' and 'Format Document With...' at the same time, show message when formatting document with first provider,  #41882
#59478 Use file service to read user configuration
update distro
Reference proper npm package (fixes #52880)
Minor tweaks
Move standalone editor nls calls to standaloneStrings which will be translated via VS Code
fixes #70985
register nodeless remote agent service
some jsdoc for #70231
proposed menu id: improve wording
fix #71055
Extract /common/ code
enable forceConsistentCasingInFileNames
fix casing issue
Revert "Revert "debugToolbar -> debugToolBar""
fixes #69597 (#69628)
Make automatic task notification show up after a task has been run
Complete fix
bulk edit - check for trash capability before using it
files2 - add trash capability (for #48259)
files2 - implement copyFile across providers
move comments to browser (#70319, #69103) (#70939)
Handle an absolute path in quickopen for non-file scheme workspaces
Exclude unnecessary env vars when debugging
Enable winpty compat only on Windows
vscode-xterm@3.13.0-beta2
Add telemetry around localhost loading inside of webview
some dialog fixes
Add explicit index type
Add trailing ... for command that opens a picker
Remove period from js/ts command title
Introduce NodeSocket
Exclude buffer.ts from the monaco compilation
:lipstick
Rename script
Add a script to automate generation of vscode dts for DefinitelyTyped.
Correctly reset progress flag when adding comments using old API
fix navigation, modality, and confirm (#70937)
Disable extensions in smoketest
files2 - stub a createFile implementation
Change isForeground flag to colorType with strings
Update tests to account for use of undefined and RGBA
files2 :lipstick:
#70459 remove experimental azure search
Move ipc.ts to /common/
Remove logging
Enable no implicit any
menu: add proposed api check
Introduce VSBuffer
Revert "debugToolbar -> debugToolBar"
#70352 remote implicit any
fixes #70423
oops - check isEmpty correctly
Add extra timeout to squash flakiness
Support remote user configuration
debug console: minor shortening
debug console: Empty elements should not have dynamic height since they will be invisible
files2 - implement basic copy of files without copy support via unbuffered solution
URI for waitMarkerFilePath
breadcrumbs - fix open to side issue
explorer: when can not resolve root create a dummy error placeholder
Add args to spawn call back
Use shorthand
noImplciitAny externalTerminal component
:lipstick:
Try moving the fallback simple file picker item to the end of the list
Remove "calcAnd" from method names
Prefer `undefined` to `null`
introduce decent getSession(sessionId) API
Remove RGBColor and implement common classes
debt - adopt splitview in references widget, nuke VSash
Remove leftover log statement
fixes #70772
callh - make reference, definition, and call hierarchy peek mutually exclusive, #16110
debugToolbar -> debugToolBar
run snapcraft as root
output snapcraft version
Remove leftover console.log from tasks
put warning about eager services
add telemetry to know how often formatter choice is shown, #41882
files2 - wait on legacy service to be there
no implicit any
fix snap build
debug views: noImplicitAny
fixes #70931
files2 - create file service early on and register disk provider
fixes #70932
move main thread task to browser (#70319) (#70940)
fix implicit anys (for #70352)
implicit any, #70352
move main thread task to browser (#70319)
less implicit any (#70352)
Add tests for 8- and 24-bit ANSI colors
Add support for 8- and 24- bit ANSI colors
Unit tests for matchesWords changes
Avoid sync stat call
Make updatePaths require TS 3.0+
Make sure update imports handles js/ts directory moves
Replace `|| undefined` with `withNullAsUndefined`
More noImplicitAny checks - #70352
More implicit any error fixes
Convert undefined -> null in IOutputService
Replacing null with undefined around `ContextKeyExpr`
electron - better fix for dialog use
fix #70388
dialogs - fix issue with message box not showing without window
files2 - fix tests
debt - instantiate webview properly
Use undefined instead of null for IEditorInputFactory
Replace some instances of `|| null` with `withUndefinedAsNull`
Move tasks and taskConfiguration out of node
compiler ftw
More implicitAny fixes
fix weird monaco-compile-check failure
Explorer: adopt resolveMetadata property
explorer model: remove etag since it is not being used
format on save, format on paste don't format when multiple formatters are available,  #41882
simplify handling of synthetic document formatters, #41882
monaco.d.ts pain
show quick pick when multiple formatter apply, #41882
:lipstick: formatting
use LabelService in LoadedScriptsView
Wait for process ready before getLatency
files2 - implement copyFile support (same providers, copy support)
files - proper size for content
server-ready feature: better error msg when chome not installed
node-debug@1.33.1
explorer: should not reveal, focus or select roots
Handle composite tasks with a presentation and no command
remove remote channel contributions
expose settings path in remote environment
move remote services to start up
Remove crypto from tasks (#70837)
add IOpenConfiguration.noRecentEntry
move remote connection failure notification as a contribution
fixes #69950
Tasks should handle invalid regular expressions
clean up
create simple remote environment service in nodeless
async data tree: better node preservation through identity
object tree model: faster getNode
make remote agent service disposable
move getting environment from remote agent service to remote environment service
disable flaky test (#70887)
files2 - implement moveFile()
Separate remote channel contributions from remote agent service
snapcraft.yaml: Add the url-handler
snapcraft.yaml: Source Glib schemas from within the snap.
callh - better icons for calls/callers
callh - move context menu command above reference commands
callh - persist view state when toggling between calls and callers
snapcraft.yaml: Fallback to XWayland if running in a Wayland session
snapcraft.yaml: Remove braces from ${SNAP} in command:
snapcraft.yaml: Remove unnecessary data from the snap
snapcraft.yaml: Update stage-packages
snapcraft.yaml: Add the GNOME 3.26 PPA.
electron-launch: ABI compatible GDK PixBuf modules
fix array.first
electron-launch: Create $XDG_CACHE_HOME
electron-launch: Add architecture detection
electron-launch: Correctly map the /snap directory on Fedora
electron-launch: Use bash
files2 - introduce and adopt resolveMetadata option
files2 - finish resolveFile(s)
Use withUndefinedAsNull and avoid null supression
Remove unneeded short
Don't import 'vscode' in webview code
Add fallback values for when exthost adapter cannot be found
Update js/ts grammar
Remove some dead code in tree
IActionItemProvider should return undefined instead of null
Remove empty test
Work on implicit any errors
Rename fields
Polishing port mapping webview api
Working on public api for webview port mapping
:lipstick:
Prototype basic webview port mapping
fixes #68505
#59750 fix tests
#59750 fix tests
Better check for local file scheme in search
handle require.resolve failure
resolve to package root
add some documentation
Node module resolution for CSS import
files2 - implement delete (without trash)
Update extensions.contribution.ts
Additionally honor a configuration setting
files2 - implement support for resolveSingleChildDescendants
status pending entries :lipstick:
callh - show anchor as root node in tree, don't show badges, show current call path as meta title
api tests: avoid rootPath
fix for untitled file URIs
StatusBarWindowIndicatorMenu
api-tests: avoid rootPath
exception widget: no max height needed
fixes #68654
debug: simplify adding repl elements
allow file menu contributions
statusbarService: collect entries if not yet created
Send extension host exit code
callh - hide "Call Hierarchy" command in peek editors
Better track disposing
move mainThreadConsole, #70319
move mainThreadExtensionService, #70319
move node/console to common/console, #70319
move broadcast service definition to common-layer, #70319
debt - use NullHeapService for now
move mainThread[H,L], #70319
fix tests
fix compile
files2 - implement resolving
#70784 fix removing deprecated extensions on startup
remove extHost-dependency from mainThreadLanguages, #70319
debug: remove unused css, fix missing debug continue
fixes #68739
add 'vscode.newWindow' command
move mainThread[U], #70319
debug: Add support for sub-sessions
arrays.lastIndex
move mainThread[D,E], #70319
debt - make url service contribute to opener service, #70319
remove any in extensionsViews test
:lipstick:
bring back yarn cache
callh - add count badge
files2 - implement existsFile()
fixes #70812
fix builds
debt - reduce null | undefined usages
Avoid any in TestInstantiationService.stub
Add typings for simple `_` and other parameters that are missing types
Allow searching in non-file scheme
Support measuring terminal proc latency
Ensure comments that have pending text are restored
waitMarkerFilePath to URI
Remove duplicate text
Localize error message for comment thread add failure
Prevent multiple empty comment threads from being created at same position
Restore download-builtin-extensions task
Strict null check VS Code
Strict null check mainThreadComments
Strict null check commentNode
Add asArray helper
Remove IFileService.readFolder (fixes #69330)
Use conpty by default on Windows Insiders
files2 - createFolder can be removed from legacy services
move mainThread[L,T], #70319
move mainThread[W], #70319
move mainThread[M-Q], #70319
make ts lint happy
move mainThread[S], #70319
move mainThread[A-F], #70319
moved mainThreadDebugService to browser
files2 - mkdirp throws any erorr that is not FileNotFound
debug actions: final polish
Respect usage of yarn with --ignore-optional
disallow vscode-dependency in extHost.protocol, #70319
debug actions polish
Fail installing an extension if manifest is not found
PersistentProtocol
debug: get rid of more actions
move extHostCustomers.ts #70319
debug: transform actions to commands and contribute them properly
strict null trouble
update strict null file
move extHost.protocol to common, #70319
fix build
FileService2 - implement createFolder() (#70758)
fully build
fix build
improve logs
inline IRemoteConsoleLog-type, #70319
some more named imports
mixin before checks
better error message
extHost.protocol should not depend on extHostTypes, #70319
move proxy identifier, #70319
applied changes to FindWidget
#70555 style inputs when search is in panel
updates
better logs
strict-null work for configurationResolver; fixes #69683
update distro
finalize selection range provider api #67872
Require process tasks to have a type
undo breadcrumbs change
support all peek/ref-view styles
move to include section
server ready feature: fix #70537
#70332 Strict null check - complete preferences
#70332 strict null check - KeybindingEditor
Move some tasks files to common
support stable peek for call hierarchy
fix build
fix build
strict null trouble
fix builds
fix build
tweek icon
use peek view theming
bring in mixin as repo
persist layout info of call hierarchy ux
add uri-property to CallHierarchtItem, better wording, better behaviour when switching calls/callers
attributes: rtf files are not text
fix license
fix license
render filename as backup detail
files2 - always trigger activation event for fs provider, even if already registered
disable yarn cache
nodeless - add fileservice2 in browser
Revert "Revert "fix PR builds""
Strict null check searchService
Remove restriction on Find in Files
More flexible find absolute path
Add a command for deleting comment threads
Support string in TerminalOptions.shellArgs
Unregister comment controller when it is disposed
Reenable localization smoke tests.
Add reverse and step-back icons
Pick up ts 3.4 rc
add toggle action: calls from/calls to
Revert "fix PR builds"
Update .nvmrc
clean up debugToolbar.css
show loading message, no result message etc
debug: contribute commands to debug toolbar properly
Remove access to global default language.
strict null fix
allow for IStatusbarEntry#backgroundColor
dispose on pressing X
defaultFilePath can end up one folder too high
remove column view idea
add overview color, use proper controller, ignore peek config
strict null work
call hiearchy like reference search
resolve document when running document sumbol command
debt - platform/node/files => fileConstants
proposed API: add parentSession to startDebugging; fixes #70219
Ensure that selection is good when the remote file picker is used
feat(coffeescript): Add¬†`.iced` extension (#70686)
fix PR builds
disable horizontal scrolling in scm
fixes #70684
:lipstick:
Work on making sure code action requests are canceled when providers change
Make sure we dispose of lightbulb widget
Update Comment Action Toolbar
use label when initialize
When updating style, use documentElement instead of body.style
Update js/ts grammar
Extension URI Handlers: "Don't ask me again" checkbox when confirming
Update comments for new comment api
Comments should be in ctor comment thread
Preferences strict null checks - #70332
fix #70017
Allow tasks without a command
more column view work
Don't include TS prefix in ts task's `error code` field
Make sure we escape all new lines, not just first one
Use toDisposable
Take title as input
Encapsulate into StatusBarItem class
Move show hide logic into HideableElement
Move change detection into hasChanges
Init properties inline
Remove unused methods
Fetch remote env from remoteenvservice
comment out potential crash code for now (#70563)
fixes #66351
Move remote agent environment out of node (#70568)
use editor action, add context key for enablement,
fixes #70107
add 'callHierarchy.mode' setting with 'tree' or 'columns'
show preview in tree-mode
remove the setting to enable auto installs for missing deps
fix strict null
show calls as columns
fix variableResolver
nodeless - fix crash in minimap due to missing colors
:lipstick: simple file service
fix strict null error
nodeless - disable welcome page for now
strict null for extHostDebugService.ts
prepare for strict null checks in extHostDebug
strict null for variableResolver.ts
#70459 make the setting internal and call it disabled
debt - inline (scary) stats.ts into diagnostics service where it is used
Command and setting to install missing dependencies
Strict null checks
:lipstick:
debt - avoid artificial ConfigurationWriter
debt - move jsonediting/configediting to common
debt - extract layout from workbench
Remove unused code
nodeless - lift file dialog service to /browser (#70541)
fixes #70552
change missing deps to take only single dep
fix strict null checks
Strict null check mainThreadTask.ts
Improve extension activation failure messages
add action to context menu
add logic to skip staging untracked files when onlyTrackedFilesCanBeAutoStaged is on
introduce onlyTrackedFilesCanBeAutoStaged feature flag
Add option to hide git sync button in status bar
Mark fields as potentially undefined
Make sure we update status values properly for empty editors
Show error if TS returns an empty refactoring
Use get/setAttribute() (#70477)
Strict null checks
Refactor for terminal links in live share
CopyStackTraceAction use textResourcePropertiesService
simple tree UX
trees: automaticaly enable simple navigation for accessibility
debt: create tree using instatationService
Modify / add tests for succeeding ANSI color codes
Remove existing ANSI colours when adding new ones
[CSS] Update dependency for #68495
Strict null check extHostTask.ts
debug: move debugContentProvider to common
debug move callStackView
api proposal, add call hierarchy contrib
scm: better preserve provider size when switching
Revert "remove 0 visible scm providers"
move debug files
debug: use clipboard service
nodeless - fix baseUrl
:lipstick: build files
Strict null checks (#60565)
Try to prevent incorrect inlining of this in configure tasks
enable azure search by default
debug: variable flash only when rendered for the first time
#70459 Enable experimental azure based serch for extensions
fixes #70258
cleanup
remove 0 visible scm providers
fix #70425
Add userHome to IEnvironment
Use more explicit pending state to make sure we always cancel pending requests on cancel
Don't reset state on cancel if another request has been queued
Just check if model is falsey
Remove unused on-disk webview html file
:lipstick:
Extract RevivalPool
check if toggle reaction is available
strict null checks
command is renamed to select command
toggle reactions
Select command for Comment.
avoid redundant range update
Strict null work in comments
Strict null work in commentsThreadWidget
Strict null check work in comments
Strict null supressions in tests
Strict null work on extHostComments
Strict null check mainThreadComments
Strict null auto add
Move fallback button into file picker list
serverReady: try to listen only on the correct terminal
Use extension point kind while checking for ui extension
Introduce default extension kind to extension point
fixes #70311
comment out flaky test
fixes #70276
Use artifact caching build tasks
fix snap build
fix snap builds
strict null checks: contrib/files
strict null checks: debug
strict null checks: explorer
strict null checks: debugModel.test
adopt latest smoketest changes
strict null checks: callStackView
don't make codeInset setting public yet, #70268
Tasks with wsl.exe should be escaped like Windows
fix strict null
debt - use crypto.digest for SHA1 over custom solution
Re-applying Cleaning up reviver handling for webviews
Move details of checking for if should persistence into `shouldPersist` method
Extend disposable
fixes #70022
Remove the `useSameOriginForRoot` setting for webviews
Strict null supressions in tests
refs Microsoft/monaco-editor#1357
add BOM when saving a file when we know it (for #48826)
update distro
strict null checks debugServcie
fixes #70228
use string undefined
fixes #70065
Use text encoder if available
Do not cache icons which are not on disk
- use buffered output channel service for nodeless
strict null checks: debugConfigurationManager
always run DAs in EH
Enable overwriting of file with simple picker
strict null checks: terminalSupport
strict null checks: debugSession
disable repeat for suggest messages, #65499
strict null: loadedScriptsView
remove accidental push of seperator to FileSystemProvider
check parent range when creating selection range, #67872
jsdoc for #67872
fix #70288
strict null - editor service
use a parent pointer instead of 2d array, #67872
fix compilations
strict null - all of workbench common/browser/electron-browser
strict null editor part
strict null prep
strict null - workbench
Strict null check editorStatus
Strict null check extHostStatusBar
Strict null work on explorer and files
Adding withUndefinedAsNull
Add hasModel guard before using model
Strict null supressions in tests
Annotate potential null values in editorStatus
More simple conditional guards for getSearchView
Strict null check mainThreadEditors
Strict null work in fileCommands
Strict null fixes for IEditorOpenHandler
Strict null check searchActions
Add conditionals for getSearchView
Supress strict null errors in textFile Tests
Use IVisibleEditor
Use helper for getting parts that we know are registered
Type that all visibleControls must have a group and input set
Use platform registry from views registry
Use basename as fallback for untitled resources
suggestFileName should not return null
Strict null check textFileService
Move code action sorting into CodeActionSet
Add CodeActionSet collection type
Use nullToUndefined more widely
Add a helper to convert null to undefined
commentingRangeS
Treat null as valid metadata property
optional commenting range provider and empty comemnt thread factory.
Treat diagnostics recieved  as js/ts init complete
Correctly ensure terminal links are not dirs
update distro
debt - avoid approot for resources in renderer (#70237)
Replace @@ICON@@
Flush buffer changes if we see the same file again
Don't add change if there are no changes
Add undocumented setting to disable batched sync
Readonly
Don't leak knowledge that updateOpen is special
Use TS's updateOpen api to batch file changes
strict null checks: repl
strict null checks: debugEditorContribution
strict null checks: breakpoint widget
Pick up new TS@next
Strict null cehck extHostApiCommands
Strict null check extHostLanguageFeatures
Strict null auto add
Revert extract and use null supressions as requested
Naming
Allow trackobject to take undefined
Strict null check work in extHost and mainThread language Features
:lipstick:
fix strict null check
Adopt search viewlet to align with ViewsViewlet
Strict null auto add
take hideIfEmpty parameter while registering of view containers
strict null checks: debugHover
fix  #57272
fix #70218
fixes #70198
nls - avoid string > 1000 chars
update telemetry for range formatter, knowing what extensions typically collide, #41882
fixes #70117
send entries as object, #67650
fixes #70058
square brackets for workspace suffix
'openFolder': add recentEntryLabel
remove paranoia code after fix for #69128
monaco.d.ts BS
add `editor.gotoLocation.many` setting that controls how multiple locations should be handled, #70032
Selectbox: Remove explicit select role (Electron 2 workaround) (#70188)
:lipstick:
wip: async data tree should not use identity for equality
for now remove SelectionRangeKind #67872
debt - restore used class
electron 5 - bootstrap a nodeless configuration (#68302)
debt - some :lipstick: (no implicit any among others)
fix null check
add `noRecentEntry` for `vscode.openFolder`
fixed-59368
bump electron@3.1.6
fix bad strict-null file list
fix #69941
Bump node 2 - fix #69118
CentOS / Fedora path to CA certificates (#52880)
Ensure list of language ids gets populated when calling getLanguageIds before extension install/uninstall
consolidate search into common (#69614)
move TMGrammars + Emmet (#69610)
Strict null checks
Add css.completion.triggerPropertyValueCompletion setting
Rename key, add distro update
strict null checks: watch expression view
Remove now unneeded workaround to xterm bug
vscode-xterm@3.13.0-beta1
make caching more robust; fixes #69534
don't store empty label list
Shower...
store labels in windowservice
cleanup
Load root certificates on Linux (#52880)
Load root certificates on Mac (#52880)
Load root certificates on Windows (#52880)
fix breakpoint enablment
label polishes
strict null checks: electronDebugActions and variablesView
#49054 Do not hide in built viewlets
debt - move workbench to browser
debt - move out more things from workbench
debt - declarative notification service
debt - declarative product service
debt - introduce and adopt shared process service
fixes #68687
debug: better has / get map usage due to null checks
explorer better expand to
debt - declarative label service
debt - declarative lifecycle service
debt - declarative request service
debt - declarative IExtensionGalleryService
debt - declarative IExtensionManagementService
fixes #70007
do not sanitize remote url
remove unused code
debt - declarative context view service
debt - declarative context menu service
debt - ensure services for parts are there
Initialize viewletService in Workbench (#70010)
Export Comment Thread
Strict null check keybindingEditing.ts
Delayer for updating commenting ranges.
Add test for #69972
strict null checks: debugViewlet
strict null checks: debugToolbar
strict null checks: debug quick open
strcit null checks: debugEditorModelManager
label for recent
strictNullChecks: debugEditorActions
node2@1.32.0
Disable default accept input command when comment textarea is empty.
seperate acceptInputCommand and additional commands.
Comment out failing tests
Use unique uuid for comment controller.
Update Comment Thread label.
Add keybinding to show comment widget, make submitting comments a configurable keybinding
fix typo #68557
Clean up some comments/names
add setting `editor.suggest.filteredTypes`, #45039
more option rename...
use async version of fs.exists; fixes #69860
debt - declarative extension & extension enablement service
debt - more declarative services
debt - all workbench parts are now declarative
debt - declarative keybinding service
debt - declarative viewlet service
debt - declarative panel service
debt - declarative views service
the ids of extensions clashing, #41882
fix order for default scm views
scm: fix actions context
wip: scm using contributable views
:lipstick: rename setting to maxVisibileSuggestions, #68557
add CompletionOptions with support to filter by completion kind. Will make it simple to implement #45039
Simple file picker should respect filters
strict null checks: debug commands
strict null checks: breakpointsView
debt - acitivtybar as declarative service
tests #69760
debt - declarative file service
debt - declarative editor services
simplify icon style logic
debt - use SyncDescriptor for editor part
strict null check: debug actions
debt - register accessibility service declaratively
debt - getPinnedViewletIds() should really not be on IActivityService?!
debt - allow parts to register with the workbench and adopt for title bar
debt - use more typed service identifier
Remove unused showIcons var from suggestWidget
Use onDidChangeConfiguration for showIcons in suggestWidget
Allow to install language pack extensions always
Prevent simple file picker from matching on the folder name of the parent folder
debt - part implements ISerializableView
Add validation messages to simple file picker (#69905)
debt - simplify part layout
Replace much with many in commonEditorConfig for maxSuggestionsToShow
Improve simple file picker accept tooltip
wip: more SCM views migration
dgpr declare, #67650
fix panel view layout order
Replace iconsInSuggestions with showIcons in suggestEnabledInput
Use showIcons and maxSuggestionsToShow in suggestWidget
Add showIcons and maxSuggestionsToShow in editorOptions
Add showIcons and maxSuggestionsToShow in commonEditorConfig
Add showIcons and maxSuggestionsToShow to monaco typings
:lipstick:
debt - part service => layout service
baseDebugView strict null checks
debt - partService is really in browser
fix #69867
dispose menus
Tests for #69739
Better default behavior for invalid setting enums in gui
Use IDisposable from lifecycle
Strict null check mainThreadWebview
Update distro
Strict null check codeInset
Strict null auto add
Strict null check remoteFileDialog
Strict null supression in test
Small strict null fix in workbench.ts
SettingsEditor#renderTree is not async
Strict null work
Revert api sketch
Use glob for terminal strict null include
Use the updateOpen TS api to sync multiple changes in a single file
Auto marking private fields readonly  in vs/editor
Auto let -> const in vs/editor
Auto let -> const and auto mark privates as readonly in vs/code
replace draft properties with labels in CommentThread and Comment
Make sure to dispose key press event listener in dispose as well
Remove CPP tools from built-in json
Put back more of the terminal changes
comments panel handle new comment thread registration.
Remove need for acquiring dimensions for terminal from main thread
Make sure we match whole file name for config file
Use regular expression to identify config file names instead of singe file name
Strict null check settings files
Removed Snap related code from updateService.linux.ts
Callback for creating new comments
null checking in debugger.ts
debt - introduce ILayoutService
fixes #68849 : Screencast: Some keys do not get special treatment
Comment a struct null check false positive
debug/terminals.ts strict null checks
null checking in debug/common
dont use super and async/wait...
eng - some extHost strict-null work
wip: scm views
more declarative service
eng - strict null checks for remoteFileService
Make simple file picker case insensitive
add newline and warning-icon before the path, #69044
send raw timer ticks, #67650
debt - remove startup type logging
showItemInFolder with URI
Take static arguments for the view descriptor ctor
fix #68421
Add region markers folding for Go
fixes #69589
strict null checks: extHostSCM
fixes #67722
URI always needs to be revived after crossing ipc boundaries
Add a context key expression mapper
Simplify the Protocol implementation
Add a download util that uses a separate process
If the code editor is readonly still alow bulk edits to be applied
fix #43270
findFiles tests
Show a quickpick for changing display language (#69570)
Use config file diagnostics provided by TS Server
Auto convert let -> const in base/node
Auto convert let -> const in base/common
Auto converting `let` -> `const` where possible in mainthread and extHost
Auto marking fields as readonly in mainThread files
Strict null work in files/browser
Strict null check extHostDiagnostics
Strict null check extHostQuickOpen
Strict null check extHostFileSystem
Strict null work in exthost
Strict null check extHostDocuments
Strict null check apiCommands
Strict null check webview
fix/69830
:lipstick:
Strict null check titlebarPart
Strict null check configurationEditingService
Strict null check fileService
Strict null check textFileEditor
Strict null fixes for tests
Strict null work on markers panel
Strict null work in contrib/preferences
Strict null work in extensionEditor
Interpret NO_PROXY (#68260)
update inputbox
Strict null work on mainThreadSaveParticpants test
exthost types, avoid using enums
Strict null check mainThreadHeapService
Strict null check textModelResolver
Strict null check mainThreadSaveParticpants
Strict null work on editorService
Mark fields readonly
Strict null work
Strict null check backupModelTracker
Strict null work in menubar
Strict null work in keybindingsEditorContribution
Supress some strict null errors in mainThreadSavePartcipants
Strict null work in editorGroupView
Strict null work on tabsTitleControl
Strict null check title control
Strict null check breadcrumbsControl
Strict null check panelActions
Strict null check listCommands
Strict null check activityBar
Strict null check editorActions and editorCommands
Strict null check compositeBar
Strict null check editorDropTarget
Strict null check activitybarActions
Strict null check fileEditorTracker
Strict null check customView
Strict null check textDiffEditor
Strict null check dnd
Strict null check diffEditorModel
Strict null check untitledEditor
:lipstick:
workbench - move restoreTimeoutHandle to a better place
Revert "fixes #68549"
Cleanup: Remove duplicate configuration from outline.contribution.ts
fixes #68549
Address code review feedback
[Debug] Filter "Call Stack" panel based on thread state
Remove IWorkspaceConfigurationService
:lipstick:
fix strict null
[json] fetch http and https schemas on the ext host
debt - more services cleanup
[json] update service (webpack)
[html] update service (multi semantic selection, webpack)
[css] updates service (multi-semantic selection, webpack)
services - sync descriptor for notification service
fix #65997
debt - extract a telemetry workbench contribution
fix #69406
use IWorkbenchThemeService as import
:lipstick:
fix compile issue
:lipstick:
fixes #69112
remove base64 transformation in electron IPC
cancel requests when outline provider change, also retrigger request  #69147
add workbench/contrib/scm to strict null checks
fixes #69529
#68546 Tests
fix #67300
Get rid of editable map, it should not be a map but just one element
:lipstick:
strict null trouble
files - do not focus explorer when revealing folder (for #69333)
debt - IActiveTextEditorModel => IResolvedTextEditorModel
only alert when inserting a suggestion make additional editor, like inserting an import statement, simplify the message that read when selecting an item
undo aria change
reset editor selection when explicitly cancelling snippet mode, #68512
clean up some todos
better error message for #68744
Update preferences.contribution.ts (#69807)
more strict null
strict null - contrib/outline
exploration - auto release after build
Create browser/terminal.contribution.ts
Remove more from electron-browser/terminalService
Move TerminalProcessManager, node->browser
Move terminalProcessExtHostProxy, node->common
Remove duplicate getWindowsBuildNumber definitions
Move terminalInstance, electron-browser->browser
Break node dependency in TerminalInstance
Move terminalProcessManager to node
Remove execFile dep in terminal instance, unify 2 path prep functions
Move a lot of terminalService to common/browser
Move terminalCommandTracker, node->browser
Move terminal CSS and images to browser
Move TerminalConfigHelper, electron-browser->browser
Move parts of terminalService up to common/browser
Move terminalPanel, electron-browser->browser
Move terminalActions, electron-browser->browser
less verbose comment controller api
Move terminalEnvironment, node->common
Remove os dep in terminalEnvironment
Add terminal-specific tslint rule to allow vscode-xterm imports
Move terminalLinkHandler, electron-browser->browser
Rename contrib/execution to externalTerminal
Strict null check contrib/terminal
change the message to clarify the intention.
Handle error in getCwd for Linux
Correctly set disposables to undefined
Mark windows shell helper as | undefined
Also dispose windows shell helper
CommentController.
Remove most null supressions
Re#69258. Another typo.
:lipstick: IPartService
improve launch.json schema for serverReady feature
debt - split more layout things out of workbench
Add JSDoc for process or custom execution completion
remove hasChanges-check, fixes #68971
Add filename selection and extension to simple file picker
Strict null check vs/workbench/contrib/tasks
Start CLIServer with extension host
remove isMalformedUri thing
debt - layout => legacyLayout
remote - workaround issue with dialog channel
update strict null file
:lipstick:
explorer: for collapsing directories react on keydown events
Throw an error when renderer exit is called on a non-renderer only terminal
Allow undefined exit codes to be logged
rename finishedWithRenderer to rendererExit
fix compile error
Move welcome page and walkthrough to 'common' and 'browser' (#69116)
adopt shared registerAction-function, #69036
strict null trouble
move registerActions to common/action.ts, #69036
uris without scheme and without strict-parse fallback to the file-scheme, #66802
Move watermark to 'browser' (fixes #69117)
fixes #69667
debt - make target location optional and let service decide
debt - use our assert util
Make list.inactiveFocusBackground null by default (#69673)
debt - move more services to use registerSingleton()
fix #69141
Switch cpp and c grammar to jeff-hykin/cpp-textmate-grammar
fixes #69755
debt - move editor layout event out of workbench
:lipstick:
make IPreferenceService use sync descriptor, #69226
storage - getInteger() => getNumber()
fix #69753
debt - move more things into workbench state object
fix compile
debt - group context keys in one place
resolve #69734 on master
debt - work on untangling layout things out of workbench
remove unused dependency (to fix CI)
Add an option to allow to open in new window after - git initializing or cloning
Update vscode.d.ts
avoid extensionTestsLocationURI.fsPath as it normalizes path (for #69569)
extensionTestsLocationURI.fsPath normalizes path (for #69569)
Make an error message easier to understand
fix #69588
debt - dragover needs preventDefault()
nodeless - move window.title setting to workbench.contribution
nodeless - set good default zoom factor
:lipstick: imports
debt - declare more services via registerSingleton()
fix compile error
fix #69334
:lipstick:
debt - Buffer requires /node/ layer
fix #69328
Strict null check textEditorModel
Strict null work on api tests
Strict null work
Strict null work in breadcrumbs
monaco-editor-core@0.16.0
Make vs/base/common/path compatible with ESM
More honoring of tokenization support promises in colorize API
Allow to register a tokenizer promise and honor tokenizer promises when dealing with embedded modes in colorizing API
Add monaco.editor.remeasureFonts (Microsoft/monaco-editor#392)
Avoid console log error messages in the standalone editor
Add built-in support for cross-origin web worker loading
Add workaround for regular expression leading to Syntax Error (#69655)
Add support for async worker creation
Don't hold on to themeService member
Introduce RevivedWebviewEditorInput
Don't re-use reviver interface where it not needed
Leave determining which webviews a reviver supports entirely up to that reviver
Only show the markdown refresh preview command when preview is active or you are in a markdown file
Make sure we properly set _visible
Take uri as argument instead of string version of uri
Removing the baseWebviewEditor class
Removing preview.html command
Add logging to see if TS buffers are in an invalid state
Extract and lift constant
1.32 -> 1.33
support integrated terminal in serverReady feature
Notice for Node v10.x requirement for smoketest
Initialize disposables array in commentThreadWidget
npe
Update comment range
fixes #69613
Revert "make sure outline requests are cancelled when changing providers, #69147"
strict null mess
fix #69578
fix #69557
Revert "Cleaning up reviver handling for webviews"
strict null checks
node2@1.32.1 - #69118
adding some basic menubar tests
Remove star from ligthbulb widget
fixes #69323
Bundle TS 3.3.3 instead of TS 3.3.3333
fix russian mnemonics fixes #69515 fixes #62449
Remove public facing usages of indentSize (#10339)
duplicate workspace forgets window authority
explorer: real refesh on file changes
fixes #69224
explorer: raw file events should refersh the whole tree
polish
save untitled workspace on renderer
disalbe newFile and newFolder action when there is input box in explorer
async data tree: prevent wrongful expansion of tree nodes across refreshes with opposite hasChildren values
Disable localization tests due to refactorings
fixes #69468
fixes #68204
expand nodes when filtering (but not when finding), #69352
fixes #69488
fix #68843
[json] update service
Avoid shifting when adding/deleting reactions
fix regression #68997
fixes #69464
node-debug@1.32.4
remove console.log
#69388 Let hovers create the marker renderers
Bump node-debug2
Respect 'deemphasize' on frame - part of #68127
improve Intellisense descriptions; fixes #69341
fixes #68339
node-debug@1.32.3
fixes #68469
fixes #69152
Don't have errors when typing invalid path
Add windows build version check to tasks for when executable is wsl.exe
AbstractTree.expandTo
fix revealing regression
fixes #69340
tree onDidChangeTypeFilterPattern
fixes #68101
explorer: only get view state from storage on initial start
add setting deprecation messages
fixes #69439
fixes #69284
make sure outline requests are cancelled when changing providers, #69147
fix  #67831
fixes #68316
proper fix for #68597
#68882 Add tests updating configuration in memory
add comment to remove later
config service tricks, #68882
use ConfigTarget#Memory to persist breadcrumb filter type,  #68882
fix smoketest
set the gallery extension only when installation is succeeded
fix npe
rename urlFormat to uriFormat; fixes #69344
simplify reveal logic, #69397
debt - restore instantiation service with proxy support
fixed assertion for debugger italic ANSI code test
added tests for debugger itliac ANSI code
remove the DSA button we are aggressive in no showing again
Add screencast setting to only display control characters
Avoid model id conflict as extensions might register comment threads with the same id.
#69360 Move quick fix action to beginning
fix #69345
Update distro
fixes #68881
fixes #68597
align doc with reality, #69372
Prepend slash to path when suggesting filename (#69369)
fixes #69340
fixes #69251
fixes #69337
File pick dialog should hide before resolving
fixes #69139
#69360 add status bar background
Allow save as to take a folder
fix #68935
Linux 32bit: show a notification that support ends soon (fixes #69331)
OSS tool
[html] Update service for MDN data
Mitigate #68385
workspaceSuffux also for workspace label
Adding screencast settings to settinsg layout
Pulling screencast styles from settings.
Alternate dialog testing
remove comments world from strict null checks
missing semi
Support new comment thread creation.
Strict null check contextKey
Remove tommorow theme from registrations.
Strict null auto add
rescan debugger extensions; fixes #69100
[json] update service
integration test fixes
Commenting Ranges API
remove thread from map when disposed.
Dispose commentcontrol properly.
Make EditStack correctly report canUndo
Make sure CommentControl & CommentsProvider handles are unique.
debt - register ITextMateService as singleton
debt - register hash service as singleton
debt - search history service should not be a core workbench service
debt - register keybinding editing service as singleton
Revert "splitview: support snapSize"
debt - register integrity service
debt - move more things out of services
Dialog tweaks
services - use more descriptors
Stop restarting extension host when root folders change.
Make languagePack.js a real UMD module
Add font configuration options for the Debug Console
list, tree: expose rerender
"--extensionTestsPath" does not accept uris
nls debug-server-ready
improve debugger contribution merging
debt - remove some unused code
fix  #69198
Remove background for hover actions
Extension Development Host window doesn't matching window
debt - move some electron specific listeners
fixes #65319
debt - fix the madness of context keys in workbench
search - fix bad interface usage
Trigger search if searchBox contains value
Use isInstalledExtensionsQuery inside saveState()
Check for searchBox input to contain '@installed'
Add null check
Add viewletState for extensions searchBox
adopt getMigratedSettingValue in update.mode
fixes #67387
remove rogue console.log
fixes #64749
fix invalid file in css
debt - cleanup more imports
debt - move files to new layer
debt - rename contextview => contextmenu
register comments panel when there is comment control registered
Remove delay when focusing simple find widget
Make sure we restore IgnoreMenuShortcuts on re-focus
update comments body
Set tab index on parameter hints widget
Pick up TS 3.3.3333
Do not use octicons in editor
Update distro
remove console
fix #66654
remove unused events and types
update input correctly when the focus is in edit comment editor
remove icons
strict null checks
Always clear diagnostics for a js/ts file when it closes
fix debug-server-ready name
first cut of "server-ready-action" feature
aggressively stop notification of menu chg
add functionality to hide open context menu (#64099)
Add _standardKeyboardEventBrand to make it clear a StandardKeyboardEvent is expected (#68171)
Make debug toolbar customisable
panelview: strict null check
remove unused import
fix strict null check
Untitled workspaces to correctly restored
fixes #65585
fixes #68171
dervie status background from editor widget background
Remove comment and '!' about strict null check
rename update.channel to update.mode
sanitize SNAP variables
tree view state contains scrollTop
moving accessibilitySupport enum to accessibility support
reload on root change order
colapse and refresh should not pass focus to explorer
debt - move runtime extensions input and editor close to each other
:lipstick:
fixes #68503
snapshot every event modifier
window reload when entering workspace
Remove support for non-dynamic extension points entirely (#68603)
:lipstick:
Consider 3rd party extension points to be dynamic (#68603)
Split the code editor contributions (#69102)
only look for folder arguments: fixes #69007
debt - scaffold a service for package.json/product.json access
debt - fix broken relative path
Move inspectTMScropes to /browser/ (#69102)
debt - lift bulk edit service to browser
Small rename
Introduce a second barrier
bump timeout to avoid falling back to aggressively
add high contrast border color to editor actions (#68964)
update vscode-windows-registry as an optional dependency
fix dead lock - wait for workspace initialization while starting exthost
protect against undefined session; fixes #69128
Move inspectKeybindings to /browser/ (#69102)
adopt tree.resort in outline panel
ObjectTree.resort
object tree model sorter tests
The top stack frame can be deemphesized so try to focus again
clean up
take max two third of editor width
Move most code editor contributions to /browser/ (#69102)
#67076 Add icon to peek error widget
#67076 Add quick fixes action
#67076 Add icons to hover status bar actions
New Accessibility Service depending on new native node module (#68973)
fix error
remove clear repl command shortcut
Adopt path.join() over extpath.joinWithSlashes() (#69101)
Move ITextMateService definition to /common/
labelService: register formatters via API. Also expose getSeperator
fixes #69063
debt - lift more things to common/browser namespace
fixes #68918
debt - lift explorer from electron-browser to browser
Don't make extra reloadProjects call when a js/tsconfig files changes
edit/delete command
accept input commands.
Revert "Split codeActonController to own file"
Use 2018 as target for extensions since we are now running on node 10
Split codeActonController to own file
Revert change accidentially include in check in
Add fixall command palette entry
Take a code action kind instead of a string for _executeCodeActionProvider
Add lightbulb badge when a preferred fix is available
Updates based on feedback
fixed 62968
Move language pack processing code to common
#67076 Show keybindings
Get some margin on the status bar contribution
#67076 Consistent links
fixes #66628
Introduce and adopt IExtHostWorkspaceProvider
remove async.always
Disable reflow on Windows
#67076 change related information file name to link
expose tree.onDidUpdateOptions
fixes #68786
workaround #68468
fixes #68210
introduce Event.snapshot
fixes #68993
remove console .log
fonts - fix issue where things on <body> element do not get proper font
debt - enforce more ILocalizedString
#67076 Show Peek Problem action in the hover footer
#67076 Style the error widget with proper colours
#67076 fix strict null check
#67076 Add navigation actions to goto error widget
Update fallback icon
debt - cleanup contributions
fixes #64338
repl: adopt tree dynamic height
Updates to alternate file picker
Only use Open File Folder on mac
Minor tweaks
Address some null errors (#60565)
debt - move workbench action registration out to contrib
fixes #67907
fixes #69037
explorer: use TreeResourceNavigator2
Ensure the handlers list in the task service is updated when a provider is disposed
themes: do not persist unloaded themes
fixes #69030
add workbench.list.automaticKeyboardNavigation setting
Finish strict null checks for vs/platform (#60565)
Reduce layer breaking imports in tests
fixes #69031
fixes #67888
Finish strict null checks for vs/editor (#60565)
do not use tree.visibleNodeCount
files - restrict name to 255 chars (fix #68937)
fix bad tree options update
IColorTheme.extensionData can be null (fixes #68699)
fixes #68136
fixes #68645
fixes #68654
editor - allow to preserve focus when closing (for #68645)
Revert fix for #53525 ‚Äî Don't expand source action range to entire document
Observe the enableFindWidget setting for webview panels
Remove cast that was causing type error
Strict null supression
Annotate more usage before assign strict null errors
Strict null fixes in extHost
Strict null
Strict null work in outlinePanel
Clean up from #68977 and #68467 - size all findInputs with css width instead of code
Code review updates
Strict null auto add
Disable multiselect in search tree
minor polish
Handle mnemonic escaping  (#68196)
fixes #68323
debt - no longer using winreg
strict null fix
Tweaks for #67287
#68927 Use resource glob matcher
Avoid using Object.create(null) to create objects
Bring back complete tests (including selection assertion)
fix indent setting warning
properly merge extension contributions
fix lua indentation
Register menu commands and also add negative form (#66458)
#68927 use path.join
cli: open mutliple folders as workspace
debt - inline workbench params
#68658 Strict null check - ExtHostConfiguration test
#68658 Strict null check - ExtHostConfiguration
debt - move smoke test driver into main
enable SupportsWorkspacesContext for remote
dialogService: set availableFileSystems if not defined
Load storage while loading renderer, not before (#68967)
fixes #68894
fixes #68874
node-debug@1.32.2
explorer: consolidate selection and focus together
Include triple-stash bracket for unescaped html and add brace to surroundingPairs (#68833)
new stored workspace folder
resources: resolvePath
fonts - one more usage of --monaco-monospace-font
tests - use a common toResource() method (#68959)
fonts - tweak monospace font per OS
screencast mode: forgot to remove keyboard div
Fall back to original proxy (#68531)
#67076 Improvements to error hover
No csd linux by default (#68640)
adopt grid hasView API
Tweaks for #68863
ResolvedKeybindingItem now supports keychords of any length.
grid.hasView
Tweaks for #62079
Reduce usages of extpath.normalizeWithSlashes() (#68928)
outputLinkComputer: remove usage of normalizeWithSlashes
better fix for #68567
fixes #68567
fixes #68637
remoteAuthority not set when openeing new workspace
Add editor.indentSize option
Rename option to renderFinalNewline
Added displayBlankLastLineNumber handling to getLineRenderLineNumber()
Added displayBlankLastLineNumber setting
fix tree indent updating
Extract BaseResolvedKeybinding to its own file
raise tree indent max to 40
Handle late registrations (#66458)
KeybindingService owns entire schema for keybindings.json (#66458)
Mark `args` are required if necessary (#66458)
fixes #68742
rename pathext.join to joinWithSlashes
paths - drop pathToRelative workaround
sketch up a possible solution for #66201 (#68642)
explorer issues back to isidorn
Clean up comments, fix some code review issues, and make the exit code optional throughout to make it clear that it isn't always a number
Remove C/CPP tools again
Remove C/CPP tools from built-in extensions
[themes] fix integration test on Windows
Strict null work
Take optional kind for `vscode.executeCodeActionProvider` command
Strict null check work for update.ts
Scroll to reveal target position for code action widget, not current editor position
Strict null work
Strict null fixes and supressions in tests
Strict null supressesions in themes.test
Strict null checks for perfviewEditor
Strict null supressions in extHostLanguageFeatures.test
Strict null check releaseNotesEditor
Strict null work in extensionProfileService
Make sure we cancel previous code action requests
Use member shorthand
Use finally
comment control. active thread, comment, input update.
read configuration when relayout
Use string type for max-memory
Minor tweaks for #65137
Add maxTokenizationLineLength configuration option
rename resources.fsPath to resources.originalFSPath
test fix
rename extpath.normalize to extpath.normalizeWithSlash
use path.normalize for extpath.normalize(.., true)
Introduce BaseResolvedKeybinding
Tweaks for #65826
resources: new APIs: relativePath, hasTrailingPathSeparator, removeTrailingPathSeparator
extpath: new API toForwardSlashes
Add fallback button for alternate file dialog
api tests for links
[json] improve CONTRIBUTING.md
Cleaning up reviver handling for webviews
Converting some instances of Promise.resolve(null) to Promise.resolve()
Explicitly convert undefined and null to false if they are used in place of boolean value
Add explicit undefined annotations for strict errors about variables used before being assigned
Strict null supressions in some tests
Strict null work for quick input
Strict null work for exthost
Strict null workspaceEditingService
Strict null work on panels
Strict null auto add
Make sure we send correctly normalized stacks on errors
Normalize stack
Mark fields readonly
remove while loop and just use css to scroll start text
Modify the name for add reaction.
[json] add contributing,md
fix null check in links
Use URI for linkDTO
fix #68269, again...
es6 aftermath, static property of type X are created before decorating type X and therefore failing the instanceof-check
Improve column selection by setting origin to clicked position
Try again
Better link for the build status
strict null trouble
Move schema definitions to the commands definitions (#66458)
Add JSON schema for args in keybindings.json
add formatter call, use it for no-formatter-case for now  #41882
support icons
use customized action for reactions
Use customized toolbar for reactions.
Remove jsDocCompletion setting
Add preference to disable shorthand renaming
Use raw href attribute for fallback title instead of the resolved href
Remove unused vars
Re-broadcast key events from webview directly
move workbench/themes to browser namespace
welcomePage: Use joinPath
Exclude heap service from strict null check
Strict null check mainThreadHeapService
Strict null work for panels
Strict null work for watermark
Strict null check work in webview
Strict null fixes
Strict null fixes related to activeEditor now possibly being undefined
Annotate apis that can return undefined
Strict null fixes in dialogService
Strict null check editorActions
Strict null work in saveErrorHandler
Strict null work in fileActions
update line height for all themes.
Add workspace name variable for snippets #68261
Update line height of comment title.
remove debugger statement
Update js/ts grammar
Strict null auto add
fixes #67357
prep for  #41882
json: multiple selection ranges
make insets fit into layering scheme
fix #67632
make #67357 better
#67966 Group setting message and refresh together
last round of making changes smaller
fixes #68558
remove api command for code insets
disable event for now, remove extension location from provider
fix compilations
- Install language pack extensions on all servers
strict null trouble
reduce amount of changes
remove getNamedCustomer, connect MainThreadWebview with CodeInsetController
fix - keep webview alive when scrolling
workbenchs/parts became workbench/contrib
move rest code code inset to workbench out of (monaco) editor
remove MainThreadWebviews hack
move editor.codeInsets setting to its contribution because it isn't a monaco editor thing
mark API as proposed and enforce proposedApi-property
undo some changes
Add Code Inset Feature
only use hardQuote for env variables
Explore resolver api
paths - avoid posix usages
Make tasks schema validate that command is required on process tasks
debt - weird path syntax
whitelist @ too
Enclose global gulp path with quotes #68413 (#68418)
Forgot to declare hardQuote
Use different quoting for args and env
title - avoid flicker in title by scheduling updates
:lipstick:
Propagate context information on CopyValueAction evaluate requests
PR Review: moving expected output to relevant tests.
Finalize CodeAction.isPreferred
Better time output
Adopt task.define (better task names)
Introduce task.define for more precise task naming
Strict null auto add
Strict null work on preferencesModel
paths - paths.node.ts => path.ts
paths - move path to extpath
debt - use our paths lib over node
fix CSS import
use new path implementation (#68538)
Enable Windows integration tests
debt - polish main.ts
Cleanup round one
Revert "fix bad usage of paths lib"
debt - get rid of Shell
fix comments npe
fix bad usage of paths lib
resources: use posix for non-file URIs
dirname can not return null
paths - adopt basename()
paths - adopt extname()
adding simple commented perf tests for new paths impl
adding commit information
MainThreadWorkspace: Initialize workspace immediatly
fix build
paths - adopt node-path.dirname()
use latest DAP with data breakpoints
paths - avoid any[]
debt - fix process access
debt - clean up sep/nativeSep
Extract task code to its own file
debt - lift some things to browser namespace
debt - remove vs/base/paths#isAbsolute()
add availableFileSystems
adding nodejs copyright
Avoid allocation
node path implementation
debt - use paths.sep in more places
paths - use isAbsolute()
debt - move services out of shell into workbench (#68510)
fix #68498
tasks.json default should use tasks version 2.0.0
Allow spaces in gulp.cmd path
only resolve lenses that aren't resolved yet, #68290
don't double create gc signals, #68290
Commands with a keybinding context and a command context should respect both
#68408 Show theme actions in the viewlet
adopt webpack'ed version of references view  #64532
debt - reduce shell.ts to its services
Use hard quotes rather than soft quotes #61902
bootstrap - move zoom setting up
fix #68461
Toggle _isVisible after transition
Strict null check extHostSearch.ts
Webview.reveal(undefined) should reveal in current column, not in the active column
Make the typescript plugins contribution point dynamic
Strict null supressions in tests
Strict null extHostWorkspace
Strict null work on extensions
Strict null check extensionsWidget
Strict null check quickOpenController
Strict null auto add
check if users can operate on reactions
set color themes always if exist
Only add padding to inputBox if find options are enabled in findInput
#68408 Consider null fle icon theme
#68408 get the current theme from setting
debt - move search history service to common
Strict null work in tabsTitleControl
Strict null work in editorStatus
Define IActiveEditor that always has group set
Strict null work in list commands
Strict null supressions in test files
Strict null check resolver.test
Strict null work on main thread
Strict null work on extHostLanguageFeatures
Add getDocument helper method
Strict null work in extHost
Update to vscode-nls-dev@3.2.5 (fixes #68393)
debt - add platform class to monaco-workbench
test fix
debt - get rid of monaco-shell CSS indirection (#68302)
debt - move CSS
fix #68436
#68408 Add current theme to the list.
fix strict null check errors
IFileDialogService.default..Path: schemeFilter is optional
tasks.json validation issue
mkdirSync recursive problem on macos
allowLocalPaths in open options
use default also for remote, add pickFileFolderAndOpen
debt - silence console.log()
workspaceHome -> untitledWorkspacesHome, is URI
resource.join with multiple fragments
outline - remove size limit
Remove font-family from xterm.css
debt - do not depend on implementation of service
Strict null check mainThreadTerminalService
Strict null check terminalActions
Revert "perf-marks - use global or self or nothing"
perf-marks - use global or self or nothing
Implement #68408
Move keytar.test.ts (fixes #68206)
fix issue with  #41838
Revert "make vscode.Uri.parse throw when scheme is missing, #66802"
update proposed api to have multiple positions, #41838
DialogService: open remote based on defaultURI and current window
multiple cursor in internal api of smart select,  #41838
debt - lift textfileservice into browser (#68302)
move define when expression command to the bottom
strict null trouble
for rapid render data use a file, not storage, #68395
improve comment
support multiple cursors #41838
remove console.logs
import style
editor - have a ignoreError option
main code review (#68245)
write tests and clean up keybinding editing service
fix tests
do not serialize 'when' if not defined
by default do not open default keybindings
remove open keybindings file link in editor
:lipstick
layout column width in code
Ability to edit when expression
Refactoring the wrap with abbrev unit test class to be less repetitive.
Adding unit tests to check for className when file is jsx.
truncate screencast keyboard marker when overflowing
Get syntax from arguments and document editor language when wrapping.
debt - move search out of platform
debt - move outputAppender to where it is used
debt - move minimalTranslations to where it is used
debt - move integrity service to workbench
debt - move broadcast to workbench
fix #67946
fix #67882
Dispose commen widget properly.
Strict null work in debug
Strict null work for terminalActions
Strict null check work for extHostTypes
Strict null work for main thread debug,  tasks, and output
vscode-xterm@3.12.0-beta3
fix integration test
make vscode.Uri.parse throw when scheme is missing, #66802
make sure to gc-track commands of code lens objects
fixes #68240
avoid tsconfig-warning and just copy `lib.webworker.importscripts.d.ts`
use fileservice to decide which editor inputs are openable
Even more task names
Updating ARM code from arm to armv7l
Render more task names
Format settings.json
strict null trouble
Remove syncExtensions from ResolvedAuthority
fix monaco build
Remove dialogService.ts from strict null since it now depends on non strict null checked files
update distro
open workspace button in every window
"fix" types#constraint check
tree: disable list aria roles
Add alternate dialog
fixes #68054
fixes #68161
add es5ClassCompat-vehicle
fix Event#once
Reroute activation for hosted extensions
Remove extensions with dependency loops as soon as possible
use new getAllPropertyNames-util instead of for-in-loop
fix null reference issue with destructuring
Add support for api:none in IExtensionManifest
expandOnlyOnTwistieClick per element
Close existing connections when an authority is resolved
debt - use our path/resources util
missing change
use resources#basename instead of path#posix
Unable to copy files across VSCode windows in 1.31 (fixes #68031) (#68104)
workaround #68095 (#68115)
debt - clean up vs/platform a little bit
debt - get rid of crash reporter service
debt - make issue service a contrib to the workbench
debt - move jsonValidationExtensionPoint out of services
Support TypeScript's explicit "auto" `quotePreference`
Split up static webview options and options that can be changed dynamically
fix #67573
Strict null work in runtimeExtensionsEditor
Strict null work in mainThreadSave
Strict null check extensionHost.ts
Strict null work
properly merge debugger contributions
Strict null work in debug
Allow svgs by default in webviews
Strict null work
Use undefined instead of null in $ dom creation methods
Strict null work in extensionEditor
add hasWorkspaceFileExtension
Strict null check mainThreadSearch
Strict null work on mainThread and extHost
Strict null auto add
kompilatreste
make types#create fit for classes
tweak tsconfig.json (less differences, less libs)
better WeakMap declaration
some  null checks
fix tests
fix tsconfig.json json
fix #67949
history storage tests
update tsconfig
fix #67952
debt - don't track recursive but explict, #67694
Ensure contributed tasks have a scope
Use node 10.15.1 on build machine
remove console log
debt - move ISCMService into contrib
Test windows state serialization
debt - group some services that belong together
fix compilation error
fix strict null
new tree should handle middle click
tree,list: ignore pointer events on input elements
fix #61808
fix null reference
Added "_" prefix in private methods.
debt - workbench/parts => workbench/contrib (update imports and scripts)
debt - workbench/parts => workbench/contrib
fixes #68028
debt - increase timeout for some storage tests
fixes #68050
enforce outline filter/find mode is applied
fix sorting and use updateChildren as 'resort'
persist view mode also when leaving outline
Strict null check 'vs/workbench/browser/parts/quickinput/*' (fixes #68000)
Try to fix Markdown
:lipstick:
debt - properly disable-color-correct-rendering
debt - update extensions node dependency to 10.x
hide keyboardMarker overflow
Change `ITheme.getColor(...)` to returned `Color | undefined`
Strict null check more mainThread and extHost files
Either open in Peek or go to definition, not BOTH! * Use peek if there are multiple definitions * When using peek, will not navigate to the best match in editor and cause you to lose your spot * If there is only one definition, navigate to  best match and NOT open peek
Unblock mainThread and extHost files from being strict null checked
Move more sections to include globs instead of listing individual files
Strict null work on workbenchTestServices
Strict null work
Strict null work in task.contribution
Strict null work in mockDebug
Some strict null checking in comments, #68012
Trying to get rid of some cases where we use types of `T | null | undefined` in findWidget
review feedback
Added telemetry event to look at fileTypes and config files in project folder for use in better workspace tagging.
Marking more emitters as readonly
More work strict null checking workbenchTestService
Revert "git prompts to save only staged files"
Revert "update strings for prompt to save staged files"
Return result directly instead of assigning to var to return
Strict null check work for workbenchServiceTest
Strict null work in debug
Strict null work in workbench
Strict null check vs/code/**
Strict null check quickOpen.contribution
Extract
Make sure we dispose of event emitters properly
Improve naming
fix test
fix datatree tests
Remove no longer used static method
Update dependencies, remove workaround
#66884 - add setting to prevent shutting down the searchService
disallow multi select
fixes #67912
remove duplicate font declarations for menu (#67942)
add test
Empty string task pick inputs should resolve to empty string value
IWindowService.openWindow takes IURIToOpen
fixes #67936
fixes #67938
localize snippet scope names
Update grammars to pick up make changes
debt - group extension service related things in one place
debt - extract a reusable NullExtensionService
fix compilos
no snippets when intellisense is triggered via space-character, #67714
strict null trouble
Promise.resolve() -> Promise<void>
es6 compile attempts
fix abstract tree trait changes when splicing
argv: use 'deprecates' for debug(Brk)PluginHost and debug(Brk)Search
Adopt changes in gulp.src
update distro
use rtf licenses
argv: bring back deprecated ids (fixes #67937)
fix panel drop feedback in light and hc themes
electron@3.1.3
open editors shouldn't accept every drag and drop
remove console.log
fix panel drag image
Restore settings editor focus sinks
fixes unit tests
Make markdown extension points dynamic
Create base class for disposable objects
adding telemtetry to detect machine id guids (#67955)
Refactor markdown contributions
Move the SignatureContext.activeSignatureHelp api out of proposed
Remove old html post message logic
Strict null work for webview
Strict null supression in some test files
Working on strict null checking code/windows
Strict null checking goToDefinition
Strict null check more quick open files
Upgrade to gulp4
More work strict null checking quick open related files
Strict null check more files related to quick open
Strict null check quickopen
Refactor terminal launch code
Remove unused gulp task
Move away from deprecated gulp-util
Final adoption (#67863)
vscode-xterm@3.12.0-beta2
fix light menu fg theming fixes #67918
Remove unused import
Adopt new style gulp tasks for the editor (#67863)
fix ctor issue
outline - bring back marker rendering
WorkbenchAsyncDataTree implements IThemable
renames
Adopt new gulp tasks (#67863)
:lipstick:
remove old highlighting tree
adopt `expandOnlyOnTwistieClick`
tree.expandOnlyOnTwistieClick
tree: refactor click handling for expansion
align datatree with asyncdatatree
Makefile colorizing tests - handling variable expansion in a variable name in assignment: var-$(another-var) := value
Formatting
Introduce gulpfile.compile
Implement onDidChangeTerminalDimensions
first stab at breadcrumb picker
debt - smarter initial commands picker
bring back `Promise.finally` change
fix #67813
add logging for resolving authority on main side
:lipstick:
outline & new tree, 2nd attempt
fixes #67883
Clean this up a bit and create extension host renderes on demand
Remove SearchService#extendQuery, all search clients now use the QueryBuilder
Strict null checking more quick open related files
Working on strict null checks in vs/code
Strict null check all base
Add dimensions APIs to terminal renderer
More gulp task work (#67863)
More task simplifications (#67863)
More gulp clean task simiplifications (#67863)
fix null checks
Update grammars
More simplifications (#67863)
More simplifications to extensions gulp tasks (#67863)
auto select theme under development (fixes #62582)
fixes #67860
Extensions view broken (fixes #67843)
properly initialise rendering data for multi-thread case; fixes #67791
Strict null check 'quickOpenWidget.ts' (fixes #67774)
always wait when starting with `prof-append-timers`
strict null streams, #67775
Simplify gulp tasks for extensions
Debt: Remove unused gulp tasks
update references view
Glob: * does not match empty string (#67835)
rename
build: decouple upload-vscode-sourcemaps task
Makefile grammar updating: tests are updated about the handling of @, - and +. (#65629)
Update distro commit
Remove "Experimental setting" from proxy support setting (fixes #67832)
debt - avoid constant settings lookup in lists
fix build
debt - cleanup storage leftovers (#67837)
part of #67695
debt - guard replaceEditors() from replacing the same editor
debt - disallow cross-part dependencies for files part
Revert "disable save actions for webview"
add comment
debt - avoid dependencies from files to other parts (part 1)
use SIGUSR1 to enable inspector on extension host
add lib.es2018.promise.d.to to yet another place, #65040
add `strings.removeAccents` #66720
Add git diff terminal link handler
Smooth showing/hiding of screencast marker
fixes #67733
fixes #67449
Remove empty lines
vscode-xterm@3.12.0-beta1
Build VS Code using TS 3.3
Strict null auto add
Make using the previewHtml command a user facing error
Remove old css vars from webviews
Remove stray log
disable save actions for webview fixes #60801
Bump to 1.32
Increase spacing between keybinding keys
fixes #67755
explorer issues to bpasero
explorer: do not select and reveal roots which are tree inputs
fixes #67726
fixes #67716
move openOnSingleClick to tree
files - let copy/move of same file path be a no-op
refresh the proper item (parent) when item resolved
fixes #67720
fixes #67708 fixes #67696
fixes #67725
rename closeTabsInMRUOrder to focusRecentEditorAfterClose (for #43459)
refs #67018
don't show toggle editor action when not using grid layout
Change autofix keybinding to not use windows key
Pick up TS 3.3.1 final
[CSS] Update Service
Use default font-size for reply button
fixes #67446
remove specific type filter shadow color
tree: respect multi select key
fixes #67576
proper tree aria-posinset and aria-setsize attributes
adjust titlebar size with zoom appropriately
listen to onDidVisibleEditors change as well refs #67356
explorer: select parent folder when new file / new folder canceled
fixes #66899
highglightLabel is not disposable
debug: dighlights in trees
highlight theme rule for all new trees
undefined keyboard navigation label always matches
add filter matches to references widget
fixes #67449
add list keyboard navigation support context key
White is too bright
fix build
fixes #66995
More transparency for key
fix #67493
Using style closer to Keybindings GUI
#67585 remove border radius
fix #67390
update title
hide complete container
Add border for keys
rejected promise not handled verbose message
fixes #67570
explorer: 	Ignore first active editor change, since on startup we already reveal the active editor
fix  #67626
fixes #67633
strict null
fixes #67591
fixes #67627
improve tree trait behaviour
fixes #67492
set screencast to display 15 characters
Make sure we update tag closing registration when the document's language changes
Update distro version
Recomend new tslint extension on welcome page
fix moving sidebar while hidden fixes #67370
fix moving panel while hidden in grid layout fixes #67370
update distro
Scope reactions css for comments
make editor area return more intuitive
fix null checks
switch to theme when installing
[HTML] Update language service
true tree focus and selection traits
remove leftover console.log
Update html/css custom data config schema for #67544
On save, always run fixAll before other source actions
Mark that auto fix can show a menu
Change windows keybinding of the auto fix command
fixes custom viewlet icons in activity bar with grid layout update monaco-workbench > CSS
mitigation for #66796
update platform css structure fixes #54049
fixes #67314
call it openExternal, #67344
fix #67246
fix #66936
Move extensions.onDidChange to finalized API
Improve doc comment
fixes #67378
fixes #67376
fixes #67395
disable horizontal scrolling for scm repositories
fixes #67083
fixes #67279
strickt null
fixes #67233
better fix for #67495
fixes #65252
make word and bracket range provider default when no other providers exist, otherwise have word range provider only, #67490
better fix for revealing active file after refresh
fix #67245 (again)
fix #67495
async data tree should prevent updateChildren, expand, before input is resolved
slice the right array
refactor async data tree to render less
missing dispose call in explorer viewer
fix #66678
Revert "fixes #67041"
fix #67504
Tree: ctrl/shift+click should not expand
fixes #67348 fixes #67345
increase opacity to 0.5 for cut items
enforce that uri have scheme,  #67373
fix #67478
fix #67353
explorer: We did a top level refresh, reveal the active file
fixes #67538
revert finally -> always
Use jsonc parser to parse a config file
Clear out windows, linux and osx fields to not have cycles inside the properties object
fixes #67446
grid branch nodes should not forward children's preferred sizes
:lipstick:
fixes issue where hidden element orientation is not updated when hidden
treat .swcrc file as json
Clear lastFocusedSettingElement when focus moves to setting search
Change from using `"apply": "preferred"` to using a new `"preferred": true` setting
add '3' to second half of regex
debugger console recognizes italic ansi code
Update icons and colors
fix null check
Update filter icons
#66931 - Show feedback when action is completed - Verbose reload action
[HTML] Update language service
Add canAddExtension & canRemoveExtension methods to IExtensionService
make jsonValidation dynamic (for #67362)
fixes #67406
improve setting docs
fix #67368
Ran OSS Tool
grid: should check orientation at the time of the event
fix grid view bug
Enable type to find in search view
Mark add missing async as auto fixable
Add workaround for TS not supporting providePrefixAndSuffixTextForRename not being supported per-file
Move html/css custom data contribution to experimental
Update HTML language service for NPE
Turn conpty off for next stable release
adding toggle editor
Only update setIgnoreMenuShortcuts on keydown
Sync settings tree scroll position to TOC - #64749
Properly encode markdown file path for open links
Improving documentation
Better description of activeSignatureHelp
don't add titlebar to the grid when using native
cli server: open folders in separate windows
make jsonValidation dynamic (for #66574)
Handle some edge cases of #18131
Rename `jsDocCompletion.enabled` to `javascript.suggest.completeJsDocs` and `typescript.suggest.completeJsDocs`
[html] update service (new formatter)
Prevent double dispatch of copy/paste commands in webviews on platforms where we don't need workaround
Sbatten/hideable views (#67291)
Update Octicons and license attributions
Add webview specific copy/paste, undo/redo commands
Extract getCodeActionProviders
Removing languageServiceEnabled check
Move ServerResponse into namespace
Mark extract constant as a preferred refactoring
rerender comment reactions when thread update
render reactions only when it's more than one.
Update services
grid: views should know which orientation they are laid out
client: semantic selection registration
Collect telemetry on connection outcomes (#60773)
update padding
fixes #67228
Add cgmanifest for ripgrep
Update problem matchers in json schema
fixes #67250
fix #67245 (again)
Add proposed API: change event for extensions.all
Move env sanitizing to base/node/processes
fixes #67087
fix tree model getListIndex
[json] enable semantic selection
fixes #67187
tree.updateWidth(element)
fixes #65397
fix #64429
avoid doing unnecessary filters
explorer: forgetchildren when item gets outdated
Clean up terminal cwd handling
Move cwd ownership into terminal process
fix #67120
Refactor fix for #65118
Refactor fix for #65118
Improve description of task presentation silent.
Add a task lifecycle event for when a depends on task is started (#67221)
make sure to invoke command with correct argument types, #64376
update extension, #64376
move ui extensions to product json
Add dependsOn to task JSON schema for customized tasks
fixes #67188
Delay extension host until workspace is completely initialized
#66907 Delay listening to workspace change events until it is complete
Update css-service to fix NPE exceptions
Update service and adopt HTML provider interface
Adopt new css provider interface
make reaction api
reaction api (#67198)
reaction api
bug detecting workspaceIndentifiers to revive
fix test
adopt stored workspaceIdentifiers: back, history , windowsState
Bump node-debug2
Update nvmrc
Resolve vars in text for sendSequence to Terminal
changed bind I to L in expandLineSelection -issue 59003
node-debug2@1.31.4
cleaning up path DAP handling
node-debug@1.31.2
Move cursor inside braces
Re-use code in the terminal instance for handling extension task callback shutdown
Code review feedback
revive IWorkspaceIdentifier
update strings for prompt to save staged files
git prompts to save only staged files
lazy quantifiers for linkPattern regex
tweaked linkPattern regex to pass new tests
updated test for switched order and new tests for image link
image link should be pushed to results before other link
Update js/ts grammars
Pull in updated coffeescript grammar
Spelling
propogate proportional layout flag fixes  #67018
Tweaks from #67092
ObjectTree/List: Add ariaRootRole option.  Addresses: #65939 (#67092)
Improve Process explorer's hover, fixes #66279
fix titlebar height on macOS fixes #67063
fix broken picker in grid layout fixes #67075
fix sidebar on launch with grid layout fixes  #67062
vscode-xterm@3.11.0-beta1
Re-use options from markdown engine instead of creating new options object
Experimentally marking a few more quick fixes as preferred
reactions
move exthost into extensions service where its used from (#67131)
update to electron@3.1.2
files - always have "Revert File" enabled
expose onDidScroll in list/trees
Changes to how documentation strings are presented. Includes previous fixes to alerts.
lists/trees with horizontal scrolling should have leave some space on the last row
ensure fuzzy score limit is what it is, #66923
setting should mention lists
tree horizontal scrolling: wrap up debug hover and repl
electron 3.0.x: remove window.smoothScrollingWorkaround setting
Removed reporting the number of times alerted string appeared, which has no use for a blind user, and causes too much verbosity.
debt - fix listener leak in file editor
Make task definition, problem pattern, and problem matcher dynamic
allow remote workspaces
fix awful formatting
list horizontal scrolling, workbench setting
remove unused code
Cleanup workbench.main file (#67117)
fix test
fixes #67111
fix #67067
fix tests
fix null checks
add arguments to extension management service
delete untitled workspace on enter
fix strict null
polish settings description
fixes #66902
after save workspace: remove untitled WS and add to recent
share rewriteWorkspaceFile code for main and renderer
remove createAndEnterWorkspace & saveAndEnterWorkspace from IWindowsService
fix createAndEnterWorkspace
rename IWorkspacesService.createWorkspace to createUntitledWorkspace
saveWorkspace on renderer
real fix for #66986
Add terminalGroup to tasks to allow running them in split panes (#65973)
Ignore installing UI extensions on remote extension management server
fix null checks
factor documentlink extraction into separate function
Install UI dependencies on local server
Add comment indicating this can be removed later
Delay terminal service creation
Mark more quick fixes as preferred
Extend disposable in more places
always -> finally
Making longDescription as absolute
perf - add marks for loading the main-process bundle
fixing GDPR annotations
:lipstick:
Show the folder path a file is in, in title of the window (#66746)
:lipstick: actions
move open-function into stable, #66741
strict null pain
add (failing) test for #66923
fix #67029
explorer: expand newly added roots
explorer: do not listen on onDidChangeWorkbenchState
debt - extract help actions
debt - extract view size actions
a little more finally,  #67027
expose Promise#finally to standalone editor, #67027
explorer: expand all roots when transitioning from one folder to MR workspace
remove todo
show warning border when type filter doesnt match anything
fixes #66904
debt - extract navigational actions
debt - extract more window actions
debt - extract developer actions
explorer: if there is no view state for this workspace, expand all roots
debt - inline commands.ts from electron-browser
fixes #66981
debt - untangle actions/commands (part 1)
Add telemetry to problems interaction
debt - inline layout actions
Revert "Exand custom views by default"
Show remote badge in extension editor
Apply foreground color to remote badge
debt - remove monaco-shell class from places that now live in monaco-workbench
:lipstick:
correct message for global and snippet templates
Exand custom views by default
Esc should clear what is cut in the explorer
fixes #67041
fixes #66955
fix #66977
reveal in explorer pass focus
fixes #65959
Adopt to use Promise#finally
fixes #66863
use finally #67027
register color for remote server
fixes #67001
fixes #66926
:lipstick:
remove more search legacy
fix strict null checks
use always for cancelablepromise.finally
adopt Promise.finally (for #67027)
use promise.finally
fix CancelablePromise.finally
remove legacy search from strict null checks
fix build
debt - remove unused events
More cleanup from #65337
fixes double titlebar when native #67020
fix formatting of setting
fix zen mode with grid layout fixes #67019
Run safe for html selectionRange
less async#always #67027
less async#always, #67027
Workbench Grid Layout Behind flag (#63066)
Print a message before installing dependencies in npm post install
Update service
Move logic to service
Make context parameter optional for IStandaloneDiffEditor and IStandaloneCodeEditor addCommand
better fix for session focus switching
Update build badge url
Updates based on API change request
Use theme styling
fix warning
fix compilations
fix null checks
- Have only single installed extension - Exclude not supported extensions - Show remote badge
debug: do not auto focus other threads / sessions while a session is still running
Remove pointless conjucntion in documentTracker
fixes #66972
Revert "debug: Breaking should jump to top frame that has source"
update to electron 3.1.0 (#66987)
revert unintended change
make color contribution point dynamic
separate schema for workbenchColors and textmateColors, to avoid repetition in configuration schemas
explorer: If the click is outside of the elements pass the root resource if there is only one root. If there are multiple roots pass empty object.
open editors: null guard
Update touch bar icons (#66966)
remove bottom corners of filter type widget
fixes #66896
fixes #66878
strictNullCheck merge conflicts
fixes #66876
Review: cast instead of creating new variable
Add "Start without debugging" button to touch bar
#66907 :lipstick:
added test for markdown image link underline
md extension should underline images used as link description
Expand code action range to entire document range when source actions are requested without any active selection
Extract code action filtering logic to own files
Use CodeActionKind.intersects internally
Convert to test to use async
Always require getCodeActions.trigger
Pick up TS 3.3 rc
Make sure we cancel code action requests for mainThreadSave
Update js/ts grammar
Move tokenizeViewport call to the view model (#66944)
Simplify TextModel.tokenizeViewport (#66944)
Changed verbosity of code completion widget alerts to provide the current completion item without unnecesary snippet/regular hints, or if items have details.
Add possibility for error case
Improve granularity
Capture console log and send it through the extension host protocol
Add IInitData.resolvedExtensions
Improve error messages
Assigned an empty string to silence too verbose alerts, which try to handle function, much better handled by the screen readers, and therefore they should be removed.
#66907 Support non file workspaces - File workspaces: Use node services until file service is acquired - Non file workspaces:  Use cached workspace until file service is acquired
Sanitize terminal environment variables
Update README.md
argv: fix null checks
support add/diffMode in windowService.openWindow
cli server for internal terminal
support files in windowOpen
make argv handling reusable
fixes #66791
Make color/icon theme contribution points dynamic
open editors: drag to outside of vscode
fixes #66810
explorer: do not react on selection events if user is modifying selection via shift
#66907 Move cached configurations to user home directory
HTML selections
fix tests
fix strict null errors
add developer command that prints available formatters to console, #41882
Add CodeActionKind.intersects
Strict null check tokenization
OpenerService#open should return a boolean
add some jsdoc #66741
Apply auto fix on save actions sequentially and make sure we request fixes of the specific type we are interested in
Gate auto fix for TS to use an undocumented experimental TS setting
Prototype autofix source code action
De-duplicate "fix all" quick fixes across requests for multiple diagnostics in selection range
use electron openExternal, return boolean-promise, rename to 'open', #66741
use fallback-command instead of text, make fallback configurable via keybindings file, #65587
move function to `env`, rename to `openItem`  #66741
fix null checks
update reference view extension, #64376
Make sure we send proper arguments to completion item command
explorer: polish cut action
explorer: copy path and copy relative path to their own groups
past file action not needed, use command instead
Extend Disposable
Trying to use less state in lightbulb api
Mark preferred code actions with a star in the code action list
Extraction and convert to async
Rename CodeAction.canAutoApply -> CodeAction.preferred
delegate to opener service, #66741
fix #65412
add telemetry to know how often multiple formatter situation occur, #41882
fix #66824
fix #66728
theme watching: support icon themes (for #66115)
enable watching only with hidden flag and for extension development
try to fix #66583
filter empty affordance
fix filter lingering around
tree: reset filter pattern
introduce workbench.list.keyboardNavigation
file commands: fully remove dependency on old Tree
fix #66753
remove border
storage - improve perf by chunking INSERTS/DELETES
focus tree on filter switch
remove fade animation
filter on type: enable, disable, animation
fix keydown on filter on type
filter on type checkbox
prevent typelabel from scrolling list
cleanup imports
Give hover popups focus only when accessibility support is enabled
Update node-pty, enable conpty for Windows 18309+
Remove c/c++ tools from built-in-extensions JSON
Adress strict null check issue
Make sure vscode.d.ts is unmodified
Update terminalInstance.ts
filter - make dollar sign a strong character
make sure to close files after read, adopt newer streams api, #66759
don't reuse buffer, #66759
Get terminal re-use and task restart working
Add separator between clear&kill
make sure to start writing at 0 #66759
wire up read/write correctly, #66759
add command to list of disallowed schemes
Add strict null checks to suggestMemory.test.ts
fix strict null check
Move to proposed API and rename things for consistency
list: relocate widget
first cut proposed api for vscode.open, #66741
Update service
Load html data using new API per Microsoft/vscode-html-languageservice#45
#66735 Update on runtime extensions change
#66653 Implement moving view descriptors
#66653 Remove container from view descriptor
#66653 merge view and view container extension point into one file
makde debuggers extension point contribution dynamic #66574
Emit an event when the set of available extensions has changed
Handle added/removed extensions in bulk
onDidRegisterFormatter -> onDidChangeFormatters
make resourceLabelFormatters dynamic #66574
make breakpoints extension point contribution dynamic
fixes #66681
Make sure to dispose callback registration
explorer: introduce cut action
fix formatter finding
list match widget shadow
label service: more tests
Add Force Tokenization command
fix strict null errors
place type filter outside tree
:lipstick:
Add setting for tab closing order (#66635)
#66364 select also when focused in search box
perf - reduce work on file events in config
async data tree: stop promise spawning
list aria-level, tree uses depth
tweak timings
Max code actions per file is 1000
Bump node2
properly use paths
Emmet dependency for #66013
use createCachedData when possible
Use darken() function for listActiveSelectionBackground
fix lgtm warnings
The beginning of cancellation
cleanup launchVSCode request
label: introduce ResourceLabelFormattersHandler
Callbacks now function
remove rtl
set default
debt - don't send startup times twice
fix FuzzyScore.isDefault
label service new structure for formatters
fixes #66677
list: use styles
:lipstick:
tree: focus navigation on type filters
tree: remove tree.getLastElementAncestor
refactor list focus navigation
list commands: cleanup calls into tree
FuzzyScore.isDefault
node-debug@1.31.1
fixes #66566
explorer: root need sto be refreshed when an element is selected
wip: better tree keyboard navigation
simplify evaluation
fix some issues from LGTM
Modified unit tests to support multiple chords
go menu - use commands for navigating across files for problems
Support deregistering a composite
strict m√ºll
index tree mode: expose filter functions
fix bad collapse action typing
refactor list widget's type label controller
add reduce to chainable event
Welcome: Improve "keyboard tips" visual presentation (fixes #64901)
WorkbenchDataTree indent
explroer: wasSelectedAndKeyboard
workbench.tree.indent
tips - be consistent with entries in "no folder" case
debug: open viewlet before attach / launch
Expose some more commands in the 'Go' menu (fixes #66395)
change default tree indent to 8
:lipstick:
GoToLine: Screenreader output line number, handles #66245, #65219 (#66249)
tree options: indent
Start to hook up the terminal and execution
Update css language service for #66519 and #66637
Prototype auto fixable quick fixes
Strict null checks
Strict null check quickInputList and main.contributions
Update emmet-helper for #65455
Strict null check files.ts
Strict null check suggest enabled input
Strict null checks themes.contribution
Strict null check references widget
Strict null checks
Strict null check listService
Strict null auto add
Update emmet-helper for #63384 and #62855
Adjustments to flipped cursor SVGs
Update recent menu items on formatter registration
Remove duplicate character from regex class
Remove spurious pipes from regexes
explorer: Check if the item was previously also selected, if yes the user is simply expanding / collapsing current selection
introduce tree.refresh and refactor tree.updateChildren
Implement new extension callback execution for a task and create a terminal for it
fixes #66580
return pid from vscodeLaunch
Strict null
open editors: use list dnd not, not a custom solution
explorer: only toggle collapsed directory on keyboard selection event
preserve type of file
tree: select all should work in hierarchies
Simplify extHostSearch
Simplify transformers
fixes #66566
#66397 Enablement service - take array of extensions to enable/disable - Event triggers array of changed extensions
explorer: focus tree when done editing
Listen on formatter registrations (#489)
Make the keybindings extension point dynamic (#66574)
search: throw error instead of returning null
strict null: add treeView.ts
add treeview to strict null checks
Add xterm mouseleave to dismiss widget
update strings for prompt to save staged files
git prompts to save only staged files
more strict null
strict null suggest controller, fixes #66558
:lipstick:
Properly dispose of button stylers on comments
Activate on workspaceContains, enable dynamic extension points
Better clean-up of state when the extension point handler is called
Adopt more async/await
Handle the case of removing an extension from the extension host
strict null - insert snippet, #66558
add error code for git blame
Working on strict null checks for snippets
Strict null check localizations
Strict null check explorer service
storage - narrow types for store() method
explorer: select and reveal active file when explorer becomes visible
fix #66478
async data tree: fix expansion of expanding node
remove accidental comment out of line
repl: :lipstick:
select all command on trees
explorer: bring back tree state preservation across reloads
tree.autoExpandSingleChildren
Revert "remove children resolution event"
Activate newly installed/enabled extensions
Send a delta of the added/removed extensions to the extension points handlers
Add support for enabling/installing extensions
explorer: always resolve parent when adding new file folder to it
explorer: fix reacting on blur event when re-rendering tree
explorer async await cleanup reaction on editable event
asyncDataTree: fix interesction computation and expand should await on correct refresh call
Remove unused function and strings
Add kill terminal action in terminal context menu
ctrl + L to clear console
exploreer: do not clear foccus on setting editable
Enrich the extension enablement changed event
fix #65024
fixes #66529
Strict null check extensionTipsService
launch EH window via VS Code
Only apply re-focusing workaround when the webview is already focused
When resolving a merge conflict allow accepting the default commit message
Initialize configuration data through ExtHostConfiguration
let IExtensionDescription extend IExtensionManifest
#66397 Use single identifier for local extension which is gallery one
fixes #66487
list: should not fwd drop when customer says no drop
fixes #66477
Global new file and new folder actions should be scoped by the explorer's focused item
list: clear drag feedback when drop is rejected
async data tree: always check for root
resources.fsPath broken
async data tree: prevent conflicting operations
remove children resolution event
parseUri: bug with normalizing URI
polish paths & resources
error when normalizing empty path
Modified labels creators to accept a list of chord parts.
stopgap: addressed TODO, focus on UI labels next.
add strict null checks to findModel.test.ts
Changing var to const
Make smart scroll and lock action work together.
python azure tagging fixes
Make sure we opt in to new TS user preferences for enabling rename features
Don't return symbolic columns for webview panels
Use for-of loops in place of some common index based loops
Normalize the TS server path in logged TS server errors
Don't make semantic requests against the TS server when the languageService has been disabled
Use more explicit state for TS server states
add git blame api
contributes.css.customData for #66414
Comment improvements
Upgrade css service version
Make NoContentResponse an constant instead of a class
Include TypeScript version in errors logged to dev tools
Improve logging of TypeScript  server errors
Use isCancellationRequested
Interup geterror during rename
Implement creating a razzle terminal with approved API changes
LinkDetector tests
Eliminating unnecessary span elements from LinkDetector results
explicit refresh should drop cash
:lipstick:
#66397 Use `galleryIdentifier` instead of `identfier` in `ILocalExtension`
monaco.d.ts pain
use target selection range #58649
async data tree: clear cached refresh promises on setinput
tree: clear auto expand disposable on drop
move properly on file events
renames,  #58649
make path.dirname root aware (for #64429)
minor fix for root labels
file icons
do not show authority for workspace labels
fix typo
#66397 - Introduce a new type 'IExtension' and use in enablement service
storage - always recover from backup in case of an error opening on startup (#66396)
explorer: do not always recursvily refresh
explorer dnd: properly compute drop target
fix --prof-modules flags
update AI module (#66370)
Parameter hints should restore editor focus after using buttons
Strict null check tabCompletions
Some strict null checks in progressService
Cancel code action requests when the code action registry changes
Use fsPath over path for terminal cwd
Handle he edge case where there's a single quote but no space
Implement #42994
Clean term env vars in more general way
Add extension information to comment widget model
Search results for "UTF-8 with BOM" files shifted on first line by a character (#66189)
accept drop on root
merge master
simplify onDidRegisterFormatter event, it should be void
list: clean drop, dragstart
labelService: allow extensions to contribute label formatting rules
move labelService to workbench
label: minor rename
storage - add test for recovery
explorer: drag and drop polish
explorer drag and drop
fix(loc): fix incorrect phrasing for transparent color descriptions
storage - implement recovery from cache (#66330)
:lipstick:
fix #66212
list: unpack drag and drop data
list: fix drop target style with hover
null check
merge master
more :lipstick:
null check
Use uris for changelog and readme of extension and transform them.
:lipstick:
list: make onDragStart optional
strict null - Map.get(K) can return undefined
storage - have a connection object
Make sure we update the markdown document on config changes
Extract TokenCache
Prevent possible race while initilizing markdown engine
Deprecate the previewFrontMatter setting
Continue Strict null check for Map.get may return undefined
Continue with strict null fixes for Map.get possibly returning undefined
Use for-of loop
Working on strict null checking with `Map.get` may return undefined
Strict null auto add
Use more explicit state for CharacterOracle
Use CharacterSet
Pick up new TS version
Handle workspace folder reading
Improve custom data reading
Update contributing guidelines; some issues may be OS specific (#66289)
Address feedback
Don't include object key types in completeFunctionCalls
#66141 - focus search after clearing query
extension tests: print errors to console
fix compilation
watch expression adopt dnd
debt - simplify perf util
tree: fix dnd auto expand timeout
tree: dnd auto expand
tree: dnd bubble behavior
extensions with debuggers defaults to workspace extension
Remove left-over console.log
Define the ISuggestMemoryService in the standalone editor
list, tree: rename drag and drop interfaces
list: finish dnd
:lipstick:
list: drag and drop almost working
debug: set debugtype context key when focused session changes
debug start actions disable when there is already a debug session running and we do not have any launch configuration selected
fix npe
matchesFuzzy2 - allow first match to be weak...
strict null - snippetController, #60565
Add "Measure Extension Host Latency" action
Add multiline description support #66036
Remove outdated ionic/angular support in HTML
Add test for completeFunctionCalls
Extract updateConfig
Strict null check startupTimings
Mark fields readonly
Strict null check timerService
Strict null check sidebarPart
Strict null check actions
Use more state machine like state management in progressService (#66198)
Don't allow passing `infinite=false` to progressService
Use const enum and namespace
Use const enum and namespace for state
Remove extra settings.json
Use const enums for state and move state into namespace
Revert "Revert "Add activeSignatureHelp to SignatureHelpContext (#65440)""
css.experimental.customData
Switch to use more state machine like state management in progressService
Use absolute import
Break terminal dependency on other components
Move list into an exported const
list: more dnd
return non-zero exit code when testrun produces an error (fixes #66218)
Simplify keybinding parsing
Add TODOs where chord assumptions are made
wip: basic list dnd with animation
list: remove selectOnMouseDown
fix strict null in suggest widget
Read markers for intitial models
Move clean up of markers to markers decoration service
Use createSimpleKeybinding
fix tests
add warning/'missing name'-message when symbol has no name, fixes #65545
bump vscode-sqlite3@4.0.7
storage - recover from backup upon exit when we detected a corrupt DB during runtime
list: remove focusOnMouseDown
storage - do not backup if we detect a corrupted DB during runtime
fix named multiline problem pattern parsing (#65840)
fix-65575 Updated tokenize method - Returns cached token if exists or newly created token and cache it
storage - do not unlink backups when backup fails
fix #65773
Revert "Add activeSignatureHelp to SignatureHelpContext (#65440)"
storage - log keys and value length on error
Strict null check workspaceActions
Temporarily revert using word range for TS completions due to #66187
Strict null check composite part
Strict null check workspace commands
Strict null check experimentalPrompt
Strict null check panelViewlet
Strict null check views
Strict null check actions
Strict null check viewlet
Strict null check tree model
vscode-xterm@3.10.0-beta11-reflow
Improve list format
Don't using 'window' in node/ files
1 source of truth
Update Octicons to fix rendering bug and add new icon mapping defaults
Bundle/Install completions with the correct appname
Exclude/include commandsToSkipShell instead of butchering user settings.json file
Add activeSignatureHelp to SignatureHelpContext (#65440)
move rendering marker hover to hover widget
Prefer for-of loop and spread
Address PR feedback on Git provide APIs
better mangement of LifecyclePhase.Eventually
fix issue with runWhenIdle polyfill
temporary comment out completions
Revert ":lipstick:"
refactor
:lipstick:
fixes #65981
fix tree tests
fix file tests on windows
:lipstick:
bootstrap - handle UNC paths correctly (#66128)
Rename CanonicalExtensionIdentifier to ExtensionIdentifier
Use also mtime to validate source file cache
bump node-sqlite@4.0.6 (#66139)
add unshallow as an option for git pull
merge master
fix #66135
Redraw editors when vscode:osResume is received (#58167)
debug issues to weinand
remove obsolete Tracker API
Remove console log
fix git settings scope
Add ability to reload themes without restarting the editor
Try naiive rev-parse for branches beginning with @ to see if they resolve, before replacing with symbolic full name version.
Chunk clean, checkout and update submodule commands within repository.ts to ensure the length of the files passed to the repository are less than 30k characters to avoid ENAMETOOLONG failures on Windows when working with very large changesets
Properly handle multiple link detection patterns
Revert "Properly handle multiple link detection patterns"
Properly handle multiple link detection patterns
Clean up search css and unused svgs
Clean up some unused settings CSS and fix twistie opacity
Workaround for webview focus visibility issue (#66070)
Accepting a member completion should result in valid code
Add pinning test for paren accept character on bracket completion
Adding pinning test for function treating paren as commit character
Move wait to setup block
Add pinning test for period treated as bracket trigger character
HTML Snippet: Consistent void tags
Add basic pinning test for commit character var completion
Add simple pinning test for basic completion
Simplifying consumers of LinkDetector
Add pinning test for #53962
Enable tslint number-literal-format
Enabling no-redundant-jsdoc for tslint
Make cursor moves and document changes cancel renames
Lazily create RenameInputField
Move renameInputVisible handling to widget itself
address feedback
Marking fields readonly
Correctly handle negative indexes for provideRenameEdits
Show progress during long running resolveRenameLocation operation
Cleanup RenameSkeleton
Strict null check vs/workbench/electron-browser/window.ts
Strict null check textEditor
Strict null chec sideBySideEditor
Strict null check editorControl
Strict null check binaryEditor
Mark private service properties declarated in ctors as readonly
Strict null check history
Strict null check browser/editor
Strict null check walkThroughPart
Strict null check partsSplash
Strict null auto add
Use clearer name for state types
Second pass converting for index based looping to for-of loops
Bump node2
Search view - fix new tree not opening the next result when clicking 'x' or replacing
Update cgmanifest.json
Add remove and rename tasks, rename icons
Remove now-unnecessary debounce on settings editor layout
Remove dead css
update todo
debug add configuration: do not delete lines
[themes] fix commit hash for themes copied from Colorsublime/Colorsublime-Themes
[seti] script to update commitHash in cgmanifest
:lipstick: cleanup git input validation rules
:lipstick: cleanup abstract update service
:lipstick: clean update.channel setting description
:lipstick: auto fetch period
:lipstick:
Prefer global gulp install over local
preserve user input when creating branch from checkout
fix-65575 tokenize method cache update bug fixed
fix-65575 tokenize method added
:lipstick:
refactor autostash behaviour
remove unnecessary operation run
improve editorUnnecessaryCode.opacity description (for Microsoft/vscode-docs#2264)
:lipstick:
:lipstick:
fixes #65948
missing compilation
Add @octref for Emmet
merge master
fonts - remove HelveticaNeue-Light from list
make font platform specific for different languages, https://github.com/Microsoft/vscode/pull/65776#issuecomment-451225090
add .vscodeignore syntax highlighting. FIxes #64960
fix #65931
update electron@3.0.13
Update service for #66002
Disable conpty by default
Setting keybindings editor context in setInput lifecycle method instead of onFocus event
Revert two bad loop conversions in build
Replace some common index based for loops with `for-of` loops
Strict null auto add
Enable no-var-keyword tslint rule
Avoid some common type casts
Enabling a few more tslint rules in the codebase
Prefer using explicit function types instead of `Function`
Also update monaco d.ts recipe for requiring explicit argument for `fire`
Prefer using nullable marker for fields
Strongly type `Listener`
Always require an explicit argument for Emitter.fire
Use more explicit states for code actions model
Remove some inline constants
Use ReadonlyArray in more places
Strict null check suggest widget
Strict null check replaceService
Disable legacy non-rg search #65337
move null check
Run active file with spaces PowerShell Core Support
replace void 0 with undefined
Update cgmanifest with new repo
fixes #65729
Remove extra file
Update classifier.yml
Update make grammar
explorer: do not react if user is clicking on directories or explorer items which are input placeholders
explorer: polish rename box, draw highlight
debt - remove unused node dialog service
make sure to await showing of results, #65809
make sure command aliases return command's result, #65809
remove 100 change limit
fix-65575 Added CachedToken and implementation to use it
let -> const, remove 'public'
Use new tree for settings TOC tree
Settings editor - ObjectTree is already disposable
Use new tree for settings editor
Remove `public` in search land
Use 'const' when possible in search
offer exit on driver
Don't treat dom properties as special for syntax highlighting
Update js/ts grammar
Pick up TS 3.3 insiders
:lipstick:
Strict null check process run detector
strictNullChecks for macLinuxKeyboardMapper (#65426)
Use label text indexes to mark active paramter for js/ts
Take progress within element into account for markdown scroll sync
Organize imports
Code action on save failures should not block other actions from running
Re-enable link detection (fixes #34026)
Remove terminal.integrated.experimentalBufferImpl
Strict null auto add
fix smoke test
Use TS's document highlight API instead of references api to get highlights
Take document as parameter instead document components
adapt smoke test to changes in settings
fix smoke test
Add language specific font overrides to issue reporter and process explorer, #65781
Rest well, see you next year
Clean user input for git clone extension
Support reflow
Update copyright year to 2019
Add periods to setting descriptions
#65791
debug: clear repl when there is no session
fixes #65799
Modifying ChordKeybinding to support multiple chords
Force a redraw of terminal after OS resumes
fix typo (#65740)
Always search from the workspace folder root with the original exclude patterns. Better strategy for #62409
Strict null check rawSearchService
Strict null check some legacy search files
Validate text search provider result
Remove redundant font declaration
perf view - show running total in raw view
have platform classname only once
fix unit tests
merge master
debug: store adapter data better
zenMode: hide line numbers
eng - change --performance into --prof-modules because that's what it is
define fonts per platform
perf view - add delta between two raw marks
perf view - sort eager starting extensions atop
eng - move menu into menu service
fix #65405
perf - init backup service async (for #16375) (#65772)
fix #65611
Revert "Converted editor.test.ts and related to strictNullChecks (#65674)"
Converted editor.test.ts and related to strictNullChecks (#65674)
Revert including some test files in strict null check build
Converted another ~70 test files to strictNullChecks (#65672)
Allow / in windows terminal shell path
Sanitize VSCODE_PREVENT_FOREIGN_INSPECT from term env
Drop gconf dependency
vscode-xterm@3.10.0-beta9
fix issue with disposed model
fix strick null errors
explorerView: multipleSelectionSupport
debug: Breaking should jump to top frame that has source
debug: do not auto focus stack frames with presentationHint deemphasize
cleanup debug commands used by process explorer
fixes #64890
added strict null checks for findModel.test.ts
remove deleted file
fix command name, #65400
cleanup
remove old stats command
remove old perf action and some cleanup #65400
null guard fixes #65271
undo unneeded change
fix #65726
fixes #65491
show loader stats in #65400
more specific selector for repl content
Tweak ctor of SelectionRange, https://github.com/Microsoft/language-server-protocol/issues/613
vscode-xterm@3.10.0-beta8
Add option to opt-out of extra lines added by Find Widget
fixed 59961
vscode-xterm@3.10.0-beta7
support 'command' input variable; fixes #64362
Use glob for strict null check base/browser
Sorting strict null checks
Converted about 25 *.test.ts files to --strictNullChecks (mostly automatically) (#65581)
fix: strict null checking for simpleServices test (#65571)
Strict null checking  for node/storage browser/ui/dataTree and  browser/htmlContent (#65503)
Supress null in caller, not in function
Prefer const
Adding test for vscode.executeSignatureHelpProvider
enable strict null check for find controller (#65553)
Enable strict null checking for contextkey tests (#65474)
enable strict null check (#65454)
Revert "support 'command' input variable; fixes #64362"
support 'command' input variable; fixes #64362
prepend category in keybinding editor
Strict null check fileSearch - #60565
replace.ts strict null check
Strict null check SearchModel #60565
Remove redundant command registration
Change keybinding to Shift+Alt+F
Add keybinding to Find in Folder action. Leave handler in search.contributions.ts because of import limitations on /browser/* files
Removed snapUpdate.sh and replaced with inline command
Search ITree cleanup
Revert "debt - remove unused node dialog service"
node-pty@0.8.0
fixes #58872
Rename experimentalUseConpty to windowsEnableConpty
Flip default to use conpty based on build number
fixes #54049
fix null check
node-pty@0.7.8-conpty2
Update octicons-font, removes unicode padding
Add license info
fixes #64933
Explorations
Introduce BufferedProtocol to never miss messages
Enable strict null checking for node/flow test  (#65541)
debt - remove unused node dialog service
enable strict null check for windowsFinder (#65551)
perf - move some services into CodeApplication
fix #65479
Enable strict null checking for node/extfs test (#65498)
Adopt case insensitive extension identifiers
explorer: error decorations for broken root
explorer: smarter resolving of children stats with cache
explorer: ignore active editor change events produced by explorer
fix multi selection context computation to work with new tree
explorer: do not cache children, tree will do that for you
explorer: simplify actions and fix input box
Wrap tasks.json comment in nls.localize
perf - avoid writing state when state did not change
perf - init state service async on startup
fix #65475
Sort classes, add 'color-mode', and only use svg and ttf files
Put comment back in place
vscode-xterm@3.10.0-beta6
Allow submitting a draft without creating a final comment
isVisible -> isBodyVisible
merge master
explorer: make sure newly created folder gets selected
fix scm viewlet
explorer: fix multi root issues
views - introduce and adopt isBodyVisible(). change default of view visible to false.
manualy call setInput
Adopt to onDidChangeBodyVisibility listener
explorer adopt to onDidChangeBodyVisibility
Use identifier for id+uuid
explorer service lazy instantitation
:lipstick: types
merge master
 Enable strict null checking for common/uri common/map node/pfs and node/glob test (#65488)
perf - create backup home on startup with other folders
get started with perf view in the editor, #65400
allow to ask if a document content provider already exists, prep for #65400
Don't show the output panel in jake and grunt extensions
happy holidays fellow!
perf - move more things to after first window opens
Missing configuration properties on configuring tasks
unix/windows - show a dialog on startup in case user-data-dir is not writeable
storage - fallback to in-memory storage if workspace storage cannot be ceated
:lipstick:
views - adopt new visibility event (part of #65475)
git ignore: save after apply edit
Strict null check for terminalTaskSystem and processTaskSystem
views - introduce event for visibility change and adopt for labels
labels - enable visibility again
enable strict null check (#65458)
enable strict null check
fix git.openDiffOnClick scope
cleanup snap update service
no more special listener thresholds, #63655
labels - disable visibility for now
enable strict null check
Strict null check for some tasks files
Remove aeschli
:lipstick:
Strict null check feedback
Clean up unused settings editor toolbar
Sort strict null check file
enable strict null check (#65444)
Enable strict null checking for workspaceStats test (#65429)
Strict null checks for windowsKeyboardMapper.test.ts (#65423)
Enable strict null checking for String test (#65449)
enable strict null check for src/vs/base/test/common/async.test.ts (#65442)
Don't double fire cancel
Use constants for states
Update listActiveSelectionBackground color to be brighter
Remove empty file
Update Octicons
Extract setIgnoreMenuShortcuts
Prevent currentSignature and activeSignature from getting out of state
Use less state in parameter hints widget
Use union type to track state
Remove unused triggerCharactersListeners field
Use a single state value to track parameter hint state
Remove redundant type annotations for generic emitter properties
Extract paramterHintsModel to own file
Use shorthand instead of extra nesting
Remove not null assertions
Add CLI flag to be able to disable smooth scroll in webviews
Remove commented out code
Try to disable menu keyboard shortcuts on macos when executing command inside of webview
Update markdown dependencies
Update js/ts grammar
Enable strict null checking for quickOpenScorer test (#65299)
Enable strict null checking for Notifications test (#65291)
fix-65287 Added webviewManager.refresh() (#65396)
electron 3.0.x - --no-untrusted-code-mitigations does not seem to do anything
labels - lift some event handling up
labels - :lipstick:
labels - visibility
lazy - more delayed services
Ensure no spaces when working on html LS
No forcing tabsize on users
update ref-viewlet extension
only dismiss editor context menu when scrollTop has changed (#65111)
explorer: input box shananigens
Set defaultPort (#65118)
labels - clear() is not needed when the label is set right after
labels - cleanup click handler
file actions: some cleanup
:lipstick:
perf - a few more delayed services
Use Alt to avoid collision with font zooming & other small tweaks
fixes #65213
fix #65272
explorer: sorter
tweak proposed api check
do not ignore debggers that lack a label; fixes #61649
Implement fast scrolling (#24344)
format - extract formatting logic, make it so that we potentially run multiple providers sequentially (off for now)
labels - :lipstick:
labels - renames
labels - adopt for breadcrumbs
explorer: simplify refresh
labels - adopt for explorer
explorer: fix focus issues
labels - adopt in comments panel
labels - adopt for SCM viewlet
labels - adopt for search view
labels - adopt for open editors view
labels - adopt for markers panel
snpa build
fix linux snap version
fix gulp
labels - adopt for loaded scripts view
labels - adopt for custom view
explorer: return null sometimes over undefined
explorer service: reorder methods
don't leak VSCODE_PREVENT_FOREIGN_INSPECT; fixes #63832
explorerModel: some cleanup and fix tests
shorten snap version
labels - adopt SingleResourceLabel for no tabs title
add dataTree to strict null checks
explroer: move resolving of stats to model, not viewer
labels - introduce ResourceLabels and adopt in tabs
ExplorerItem cleanup contructor
use undefined in explorer, not null
explorer: remove unnnecessery methods
explorer: simplify explorer view, it no longer resolves stats
Remove teardown (let the garbage collector do its thing)
Remove teardown (let the garbage collector do its thing)
peek ref - implement type navigate provider
address #65115 on master
explorerService.select
snap package version should be commit ID
HTTPS link to EditorConfig.org
add async data tree test to strict null checks
remove svg
fix build
docs - add note about backslash in patterns
fix  #64999
fix #65336
Add type to the other array in array.tests.ts
Add and fix arrays.test.ts for strickNullChecks
Make sure we still call onDidBlockSvg
Strict null check üéÖ
Extract svg blocker
Formatting
Prevent 'Report Issue' and 'Process Explorer' windows to be opened in fullscreen mode, fixes #64306  (#64839)
Bump node-debug2
Make sure `Dispose.register` does not allow registering new disposables after the base has been disposed
Extract WebviewProtocolRegister
Extract handleInnerKeydown
Use `.body` to get body element
useSplitJSON description accuracy
Bring split JSON editor back behind a setting #64932
hygiene fix
Add document parameter to draft methods on comments provider
Use polling to track focus in webview
fixed errors on tests
fixed powershell issue
Search tree - merge cleanup
Search tree - use accessibility provider
Search tree - hook up context menu
Search tree - use identity provider, fix refresh with added/removed
Search tree - fix tests and match actions
Search tree - hook up collapseResults setting
Search tree - only show folder element when more than one folder has results
Search tree opening items - #64836
Search tree - build fixes
Move search to new tree
Review round 2
 strict null check: enable markerPanelActions
#1927 - Add toggle action per problem - Remove global toggle action - Add commands to show multi or single line
Don't hold on to this in _ready promise
Use prepend instead of insertBefore
Extract getDefaultCss
Prefer let to var
Remove some extra any casts
vscode-xterm@3.10.0-beta4
Move MarkersViewState to markersTreeViewer and remove markersPanelActions from strict null checks
perf - speed up quick open scorer by ~10%
Properly dispose of deleted comment zone widgets on comment update event
Store the multiline state
#1927 Global action to toggle multi line messages
remove unused telemetry
Enable strict null checking for Comparers test (#65301)
fix #31372
smart select - delete old token tree based selection provider
smart select - tweaks test to work against the new providers
Enable strict null checking for SplitView test
Enable strict null checking for GridView test
fixes #65293
add in word navigation for uppercase characters and underscores, #64004
remove token based string, comment ranges #64004
Only show individual task load errors when the task is run
happy holidays with snow!
explorer: split logic between view, service and model
perf - only use services when needed
fix GDPR annotation
make suggestion icon hight 75% instead of 'contain', fixes #64957
add storage sync logic #62365
Revert "Revert "Revert "remove `shareSuggestSelections`-setting for now #62365"""
explorer: properly handle mouse middle button
explorer: adopt to tree interface changes
DataTree.getViewState()
fix tests
make menu and command extension points dynamic
missing yarn
repl: cleanup tree input
Strict null check
Cache code actions for a file and do not ask for code actions always for showing light bulb
#1927 Render multiline diagnostics in problems view
refine SelectionRangeKind #63935
fix #65041
Enable strict null checking for files test (#65249)
Git sync now publishes branch upon confirmation (#64183 issue fix)
Review: reintroduce count
Strict null check code action tests
Update api to avoid casts in tests
Don't include snippetSessions test yet in strict null checks
Enable strict null checking for snippetVariables test (#65236)
Update draft mode state of new comment widget, more error handling
Prevent example jsdoc highlighting block from potentially leaking
Update js/ts grammar
Marking some more editor interface fields readonly
Strict null check cliProcessMain
Strict null check telemetryOptOut
Strict null check markersPanelActions
Strict null chec codeActionCommand
Strict null check experiment service
Strict null check workspaceStats.ts
Strict null check sharedProcessMain
Strict null check resourceViewer.ts
Strict null check searchWorker
Strict null check welcomePage.ts
Simplify start debug command handler
clean setInput
fix null checks and menu alignment #54527
fix adjusting title before creation
explorer: actions do not take tree and funky arguments
electron 3.0.x: use the --no-untrusted-code-mitigations flag
electron 3 - trace-hydrogen is no longer supported
fix startup timings file
fix #65119
explorer service: do not use public as keyword
introduce WorkbenchDataTree
fixed
explorer: introduce ExplorerService
AsyncDataTree<TInput...
Add error handlers to watchers
fix #65119
add SelectionRange and SelectionRangeKind, #63935
filter - less filtering in markers panel
Cover case of multiple key combinations producing the same character
Have the menu item heuristic run on all OSes
Made Task an object (#65073)
Explore dynamic extension points
Make the grammars extension point dynamic
Minor tweaks
Minor tweaks
Make the snippet contribution point dynamic
smart select - use cursor position, not selection start, when making a selection range request https://github.com/Microsoft/language-server-protocol/issues/613
fix compile error, IDataSource moved to another file
introduce DataTree
fix #62208
Right arrow do not accept suggestions in debug console
fix tests
async data source can be sync
rename IDataSource
move IDataSource
slightly increase limits (for #64977)
fix filter box alignment
ExtensionsActions - Strict null check
Allow using arguments in keybindings for `editor.action.refactor` and `editor.action.sourceAction`
align sub menus vertically fixes #54527
fixes #65092 fixes #64975
Don't force convert fixable diagnostics to numbers
Remove extra Array.from
Use clear
Make fixPathPrefixes a bit more resiliant
fixes #64975
Interup getError for refactor and updatePaths on rename
Show progress during update JS/TS imports
Extend disposable
Remove un-needed cast
Strict null check code lens
Pick up new app insights version
strictNullChecks breadcrumbsModel
strictNullCheck outlineModel.ts inheritance errors
strictNullCheck outlineModel.ts except class assignment error
strickNullChecks breadcrumbs.ts
debug: simplify some css
explorer: some notes and clenaup
Move automatic task prompt to happen when the user tries to run a task
fix compile error
explorer: send telemetry when file is opened
Gulp task detection shouldn't open output
filter - use matchesFuzzy2 for quick outline and workspace symbols
filter - use a number instead of an arrayy to represent matches
filter - extract isPatternInWord also some renames
avoid data tree expansion in recursive expand
add tree sorter
fixes #64732
cleanup names for debug adapter factories
fix strict null checcks
tree: toggleCollapsed returns boolean
remove tree.isExpanded
explorer: properly open elements on user selection
fix object tree setCollapsed method interface
tree: add recursive flag to expansion methods
tree model: cleanup interface
tree model: recursive setCollapsed
explorer: when selecting a stat make sure to expand all elements in the parent chain
filters - tweak perf test and so
explorer: do not memoize actions, that was too optimisitc
explorer: memoize actions and some polish
perf - include session id when writing timers
explorer: slight reorder and polish
filters - tweak anyscore for more strictness, add matchesFuzzy2 as faster alternative to matchesFuzzy
expose tree.onDidOpen
merge master
explorer view height 100%
remove invalid promise references #65040
add typings to support Promise#finally
Tweak setLocaleVariables setting
Strict null check terminalInstance
Strict null check terminalLinkHandler
Strict null check terminalProcessManager
Strict null check diaglog service
Strict null check driver.ts
Marking fields readonly
Prefer using Array<T> for complex array types
Add setting to control when comments panel opens (#64941)
Support completions in comment editors
Working on strict null checking configuration
Strict null auto add
Review uses of Promise.resolve(null)
Use resolve(void 0) instead of resolve(null) for void promises
Allow extension contributed TS plugins to be loaded for workspace versions of TS
#64755 Check strict nulls in ExtensionWorkbenchService
always send a response body; fixes #64948
Add /question
Update calendar.yml
openDefaultSettings -> false by default #64932
Recreate pid promise when reusing terminals
Allow new tree navigator to start from element
Send terminal name with id when it's ready
mrege master
explorer use the new tree
Make sure onDidChangeActiveTerminal fires not just by focus
screencast mode
#64755 Strict null check for ExtensionGalleryService
#64755 Strict null check extension management service
debt - more strict null checks
Commit monaco.d.ts
Change extension point registration to use a descriptor object
Make the languages extension point dynamic
don't profile extension host when its paused
update v8-inspect-profiler
fix strict null errors
debt - asThenable -> asPromise because it returns a promise
allow Thenable also in monaco api
debt - Thenable -> Promise
Keep track of activating extensions
Developer: Toggle Mouse Clicks
Reuse terminal operations ordering (#64866)
remove winjs-promise - fixes #53526
remove winjs-based polyfill promse #53526
add smaller promise-polyfill for IE11 - #53526
update distro
Update distro hash
Extract getCodeLensLabel
Update css features engines version
Strict null checks
Strict null checks
Strict null check files.ts
restore focus when context menu is canceled fixes #62008
Strict null checks
Allow using language aliases for markdown code blocks in release notes
move modifier key listeners to capture phase fixes #63084
fixes #63575
resolves #64817
Remove TPromise from webview
Strict null auto add
Strict null checks
Avoid unicode regexp literal
debt - strict null check editor.ts
Update grammars
nuke TPromise error handling #53526
debt - remove some unused CSS
debt - more no tpromise in monaco.d.ts #53526
debt - replace most remaining TPromise-occurrences with Thenable :dancer:, #53526
fixes #64889
#64755 Strict null check - MultiExtensionManagementService
remove todo
More strict null checks (#60565)
fixes #64805
fix #64830
keyboard navigation label provider
fixes #64864
fix one more TPromise usage
silent strict null checks
debug: fix cursors in repl and hover
update monaco.d.ts
More strict null checks (#60565)
More strict null checks (#60565)
generate list styles for references tree, #64829
treeResourceNavigator: fire onSelection also for keyboard events
strict null suggest model but without its dependencies
use TypeLabelProvider for LoadedScriptsView
fix #64450
ObjectTree.navigate
update debug smoke test css for list
wsl.exe for tasks shell requires -e
Enable by default again (#60773)
Upgrade vscode-proxy-agent (fixes #64133)
Improve inputs schema
fix tests (revert partially for #64597)
fix strict null
fix #64597
Prefer to use .then(void 0, ..) over .then(null, ..)
Auto add more tests to strict null
Prefer use .then(void 0) over .then(null)
Use null for RegExpExecArray type
Working to strict null check workspaceStats
Strict null check findController
Strict null check updateService.win32
Strict null check contextMenuHandler
Use pickerGroupForeground for decoratorRight color
Strict null check find widget
Mark fields readonly
Hardcode guessMimeTypes for webview content mime types
Use text icon for js text suggestions
Strict null checking suggestMemory and settingsWidget
Manually fix a few strict null check errors in test files
Start strict null checking some test files
Strict null check toolbar
Strict null check context menu
Add Git log, globalConfig, and tree diff API
Strict null check simplefindWidget
Strict null check menuItemAction
Strict null auto add
Strict null check issueReporterMain.ts, fixes #64757
node-pty@0.7.8-conpty1
Add use conpty setting
Strict null check terminalConfigHelper
strict null checks for menu and menubar.ts (#64764)
fix tests
suggest - renames, merge SuggestionItem and CompletionItem
fix null check
update monaco.d.ts
fix #63454
CompletionItem#range is not optional, #63454
more towards #63454
towards strict null and completion model, #63454
debt - make suggest item a class, move resolve logic into it
list, tree: base renderers
fix npe
suggest - :lipstick:
fix #64598
make disposeElement optional
debug views: adopt typeLabelProvider
debugModel: do not use public
finish fix #64596
fix foul tests
dont cancel suggest when already cancelled or never started
use idle value for suggest widget
:lipstick:
fix #64596
Sync pinned state and order of composite items across windows
fix #63897
merge viewletService into sidebarPart
editor - ensure contract of openEditor()/openEditors() is respected
fix #64791
fixes #64792
fixes #64739
use keybindingService.mightProducePrintableCharacter in workbench lists/trees
Revert "list: right click should  not select/focus"
update distro
event namespace consolidation & docs
properly cache current revealed reference
fixes #64747
ITypeLabelProvider
Completely hide tab close button when dirty state is highlighted in top border (#64718)
Revert .map -> .forEach for non-returned array scenarios
Disable strict null check for appinsights files
Use more generic word pattern for markdown
Format
Strict null check window and storageipc
Strict null check resources
Strict null check nsfwWatcherService
Strict null check extensionHostProfiler
Strict null check localizations
Strict null check appInsightsAppender
Reduce some indentation
Prefer using template strings instead of strings.format
Strict null check workbench issue service
Strict null checks
Strict null check fileIconThemeData
Strict null checking findWidget
Remove TPromise annotations from experimentService
Adding more tests for cached response
Adding better test case for not caching cancelled responses
Add test for not caching cancelled response
Adding basic test for cached response
Don't cache cancelled ts server responses
void
Add a space after theme/icon theme filters
remove no-drag from entire menubar fixes #64741
TPromise.as => Promise.resolve ref #64597
Remove some winjs promise usage, #64597
vscode-xterm@3.10.0-beta1
remove labelService from main side
fix #64502
:polish:
repl.css: minor polish
smart select for comment, string, and regexp ranges
fixes #54397
debug: Do not hide debug hover when the mouse is pressed because it usually leads to accidental closing
TPromise.as => Promise.resolve
:lipstick:
remove console log
fix tests
use list
add pop/shift to linked list
Update to Electron 3.0.10 (#56149)
Remove code that duplicates Array.join from runAutomaticTasks.ts
ignore errors after DA has been stopped; #63640
window - have a getter for window being focused or not
Replace TPromise.wrapError with Promise.reject
fixes #64503
Remove TPromise.join from task.contribution.ts
storage - enable global storage, disable workspace storage migration (#64719)
Remove TPromise.as from task.contribution.ts
TPromise > Promise (#64598)
remove TPromise
remove TPromise.as
remove TPromise.as
debt - more lazy service contributions
don't listen to storage changes for now
Revert "Revert "remove `shareSuggestSelections`-setting for now #62365""
remove TPromise
remove TPromise
remove TPromise
Revert "remove `shareSuggestSelections`-setting for now #62365"
remove TPromise.wrapError
remove TPromise.wrapError
remove TPromise.wrapError
remove TPromise.wrapError
fix compile issue
:lipstick:
insta - actually enable delayed instantiation
use bracket/block selection ranges provider, fixes #64272
add leading/trailing line part to bracket selection #64004
update references view extension
storage - beforeClose() is actually not needed
No horizontal scrollbars after toggling side by side diff view (fix #64090)
debt - dispose action items that are pulled from actionbar
no tabs - prevent title from exceeding 35px height
Update calendar
take max 4 * 30ms
notifications - push initial notifications out a bit to give editors more time to restore
telemetry - double it up
Update commands.yml
reject if gallery is not enabled
#64597 Move away from TPromise
#64597 Move away from TPromise
debug issues to isidor
outline - remove unused css
Strict null check serviceMock
Strict null check patternInputWidget
Working on strict null checking contentHover
Prefer coalesce over filter
Strict null check contextScopedHistoryWidget
Strict null check format action
Strict null check findOptionsWidget
Marking fields readonly
Strict null check findInput
Strict null checking inputbox
Strict null check panel.ts
Use more DRY class definition
Strict null check composite
Strict null check configuration service
Strict null check auto adds
Enable strictBindCallApply for VS Code
Build VS Code using TS 3.2
:lipstick:
Use undefined instead of null
Add toOpenedFilePath method
Never return undefined for cachedResponse.execute
Extract cached response to own file
schedule update overflow action due to reflow (#64634)
Remove TPromise.join #64598
Remove TPromise.as - #64597
Remove TPromise#wrap calls #64596
Avoid accessing style in treeview if we don't need to (#64577)
Bump to 1.31
Add GitErrorCode to apply command
Allow users to enable/disable automatic tasks (#64615)
Convert backup tpromise.join to promise.all
yield when computing bracket ranges
fix bracket selection issues
Update commands.yml
Add task names to automatic task notification
Remove workaround for ts infer type suggestions showing up with no quick fix
Pick up ts 3.2.2
Always display count badge in wide search view
Unify layout for search results actions
merge conflictse
Cache document symbol navtree requests
Just wanted retrigger the build
Prevent default on mouse down (fixes #64350)
Add a null check for initialCwd
initialize focus state fixes #64500
#64557 Do not hide tree also when tree is being refreshed
Make LogLevel converters safer and consistent with other converters, from @jrieken feedback
Revert #54397
fixes #64463
use findNext/PrevBracket for bracket ranges only
Promise.reject in configurationResolverService should return an Error
Update commands.yml
Regression: cancelling a launch command should silently cancel launch
Update commands.yml
Update commands.yml
Add '/needsConfirmation'
Don't show tasks output on auto task or config change (#64543)
protect input variable resolving against undefined mapping; fixes #64542
fixes #64398
repl: reveal last element when session change
repl: simplify id computation for simple elements
disable listener leak monitor for stable, #64493
Add launch section to support input in launch.json
Close all table rows üíÑ
remove `shareSuggestSelections`-setting for now #62365
Don't calculate for transparent colors
make suggest memories a singleton service, listen to storage change events
debug console: polish height computation
Tasks with presentation clear: true and no other presentation options should clear
suggest memories: restore saving state periodically (for #62365)
fixes #63957
fix tag order
fix #64319
#64319 tests
Add contrast ratio to inspect TM widget
one more to dispose (for #64470)
fix telemetry annotations
Make sure we dispose of created context key (#64471)
Show prompt when closing issue reporter without submitting, fixes #64462
Wording tweak
fix test failure
allow terminal.cwd to be a URI
Don't capture first line of @example blocks as js/ts
Better end of line match
Use more restrictive regular expression for markdown jsdoc content
Improve retrigger documentation
#62365 - use markdownDescription and setting reference
fix GDPR annotations
add link to wiki page, #64340
Inputs should not re-prompt on tasks set to not reevaluate variables
Revert "#61590 Change the title"
update ref-view extension
fixes #64439
fix #64437
fix dirtydiff listener leak
fixes #64320
fixes #64400
fixes #64399
debug: remove baseDebugController, no longer used
node-debug@1.30.4
use final version 1.33.0 of DAP
 async data tree should update twisties accordingly
fixes #25281
fixes #60995
Update allow automatic task notification with feedback
put breadcrumbs on their own row (#64364)
show a warning instead of info, #64353
avoid confusion and use 'operation' instead of 'task', #64353
remove keybindings for declaration commands, #64329
Cancelled inputs should cause task to end silently
Make Alex R. responsible for tasks
Should not silently ignore undefined input variables
Improve descriptions in input schema
fix #59439
Make task input pick and prompt more specific
fix #64339
Change task input label to id
#61590 Change the title
Match signature context field name to type name
Hide infer type suggestions when using broken versions of ts
Snap update fixes in updateService.snap.ts
Add typings for markdown preview messages
Correctly highlight @example code as js/ts
Revert #62806
Changed access level of PatternInputWidget.inputBox to public in order to access onDidChange event. Changed event listeners in SearchView to use onDidChange events.
Ensure expected decimal separator in ps output when listing processes, fixes #63437
Bump distro, update OSS
update title
#61590 Update title
:lipstick:
Right fix #63496
#63496 rever escaping
debug: support input schema in launch.json
editor - cleanup tabs title control (a bit)
Intelisense on tasks.json is broken
fix #64309
Update "open change" icons to better reflect the "diff" changes. Uses octicons.
Revert "Make menubar its own widget and add overflow (#63954)"
Small fixes to sig help context docs
Make sure our temp ts directory really exists
Give extra padding for simple find widget
Revert "call resolve before inserting a completion item, #63013"
Rename TriggerReason  -> TriggerKind
Bump node2
Set default terminal buffer impl to TypedArray
Naming (#60773)
Copy options disable by default (#60773)
tweak jsdoc
Experiments shld provide local text for commands too (#63261)
remove sample function proposed api
finalize tracker API; fixes #62843
Improve ext host terminal proc
hot exit - do not clean backups when quitting before editors have been restored
fix strict-null
fix-64041 - Changed ParameterInformation constructor - Changed @param label description
Remove debug statement
fix-64041 - Changed ParameterInformation constructor
handle ipc-queue cancellation, #63013
call resolve before inserting a completion item, #63013
Make menubar its own widget and add overflow (#63954)
zen mode: properly clear state on shutdown
fixes #62629
storage - include a WillSaveStateReason when saving
fix #63431
strict null for all smart select
smart select bracket pairs, #64004
Remove support for post install
debt - remove editor history listeners when condition is met
ensure a range contains its previous range, #63935
zen mode: We will not restore zen mode, need to clear all zen mode state changes
tests and api command for smart select api, #63935
add proposed api for smart select, #63935
Added commit hash to cgmanifest.json
missing compilation
storage - parts splash becomes a window config to show early on
only show update service errors when asking explicitly
:lipstick:
rename setting, #62365
keybindings - do not steal focus from an event
perf - measure workspace service init time as well
update ref-view extension
Automatic tasks should prompt before running (#64075)
Input variables in tasks (#63910)
log provider failure as errors, #63831
Use string type for `command` property
Combined refactor #58922, option decorator/default #58724
[fix] #27649 pin intellisense documentation widget to top (#62115)
Make _actionRunner non-nullable
Strict null check platform/configuration/node
Strict null check menubarService
Strict null check checkbox.ts
Strict null check action bar
Rename ISelectBoxOptionItem parameters reducing redundancy
lifecycle - allow vscode:openFiles in Phase.READY
storage - :lipstick:
storage - :lipstick:
storage - dispose some listeners on close already
storage - avoid storage access on shutdown
storage - add beforeClose() to tests
storage - do not force a 100ms wait on shutdown/reload
fix strict-null check
storage - handle telemetry global keys
storage - reduce global storage change events for testing only
storage - add tests for mapToSerializable
SelectBox: constructor, interface refactor.  Addresses: #58922
Strict null checking snippetsService.ts (#63456)
Strongly type some event types in addDisposableListener
Strict null check
Strict null check
Type objects.assign
Strict null check extension scanner
Strict null check menubar
Move signature help context to stable api
Do not cache completions that are cancelled during resolve
moving all openRecent calc to render
Support debugging process from the process explorer, closes #63147 (#63953)
Add panel/sidebar nav commands to skip shell default
Move isSmartCase off IPatternInfo
Bump node-debug
fix tests
debt - use Set for cloneAndChange
another fix for #62719
fix #62719
storage - put migration behind flag
green build maybe?
fixes #63416
storage - better check for migration
Automatic tasks should prompt before running
strict null checks
fixes #63939
fix async data tree expand promise
debug trees: minor polish
add word based provider #64004, add multi-provider merge logic #63935
Explorations
debug watch: Ignore double click events on twistie
debugHover: disable mouse support and fix focus
Move rerun behavior api out of proposed (#63511)
list onDidChangeContentHeight
final tracker API; for #62843
Add monaco.d.ts
More strict null checks (#60565)
Strict null check for simpleServices
Make strict null check automatic
storage - fix smoketest
storage - add global storage migration
strict null...
repl: disable mouse support
list: improve lack of mouse support
continue builds when component detection fails
repl: Align twisite to last line - for input output pair expressions
callstack: ignore erros from tree when expanding possible unexisting seassion and thread
async: ignoreErorrs
only blame an extension once...
uri tweaks in md strings
Global tasks don't need a workspace root
- Remove proposed api check for collpaseAll - Add proposed api check for treeview message and globalStorage
Enable Collapse All action in the npm script explorer
remove unused code ftw
fix #64052
Pick up TS 3.2.1 final
Add pinning test for bracket completions
Added test for #63100
Extract joinLines
Correctly sort bracket accessor completions in js/ts completion list
Don't trigger parameter hints when completing empty method
Update js/ts grammar
better handle of labels
Support whitespace after dot for bracket completions
Delete unused typings file
remove unused method
Center add comment decoration, fixes #63810
comment thread can be updated by draft mode change.
Add overview ruler decoration for comments
Update C# TextMate grammar with latest fixes
lifecycle - put some things back to RESTORED phase
move token tree provider around, #63935
debug hover: use WorkbenchAsyncDataTree
debug console: Reveal last element when we add new expression
callstack view: expand is async
variables view: Expand the first scope if it is not expensive and if there is no expansion state (all are collapsed)
storage - implement external changes
add simple filter for LoadedScripts view
cleanup
#60053 hide message when reload is disabled
callStack, repl and watchExpressions provide identityProvider
:lipstick:
async data tree: recursive refresh
fix #63977
identityPorivder for variablesView
reveal reference after having revealed it...
fix #63978
list: right click should  not select/focus
async data tree: preserve collapse state given identityProvider
tree: more type cleanup
tree: cleanup null vs undefined
async data tree tests: add refresh button
objectTreeModel preserves collapse state on strict identity
async data tree: :lipstick:
async data tree: :lipstick:
storage - log close() duration for global main
fix regression from data tree adoption, #63904
storage - log global storage home
storage - use storage service also for global
Revert "explorer do not always reaveal in middle, jump less"
remove call to post install
fix tests
storage - trace close() time
fixes #54397
storage - also log time it takes to init global storage in renderer
smart select - skip duplicated ranges
smart select - simplify model, fix some issues
storage - remove unused
storage - properly implement global storage
#23251 Clean up extension storage location
update vscode-ripgrep
remove unused variable
lifecycle - introduce onShutdown event for disposing things after onWillShutdown
Skip localhost (#60773)
Use insertText as filterText for js/ts completions by default
use simpler typeof check
Update js/ts grammars
html.experimental.custom.tags/attributes for Microsoft/vscode#62976
render pending label as italic
render pending comment
Highlight some basic markdown elements in js/ts fenced code blocks
remove deleted file from strict null check list
Pick up updated markdown grammar
Removed unnecessary cast
Bump ripgrep to fix #63070
Bump node2
object tree: todo
add internal api for selection ranges provider, #63935
merge master
object tree model: preserve collapse with identity provider
Support for automatic tasks (#63695)
#61312 Revert to proposed
merge master
async data tree: proper options mapping
fix strict null checks
tree options: collapse by default
repl: use scheduler and smaller timeout
don't write profile too early, apply pii massage
adjust wording, add report issue from silent perf notification
don't resort extensions after profiling
#23251 Expose global storage path in proposed API
callstack fix npe
tree: :lipstick: move types around
repl: do not return undefined for hasChildren
AsyncDataTree
comment out identityProvider due to build error
merge master
fix datatree.getNode()
repl: getVisibleContent
wip
remove duplicated switch case
adopt DataTree in references widget, #63904
list: fix scrollable element delayed changes
list: proper identity provider
Simplify test running
repl: auto scroll when last element is visible
tree: expose renderHeight
make debug content updates cancellable; for #41362
refetch Source content on changed events; fixes #41362
#23251 Post extension install hook
Task schema issue: dependsOn not permitted
dataTree: expose scrollTop and scrolHeight
data tree: use proper loading
expose scroll height
expose DataTree.getNode
data tree: expand should be async
repl: minor optimization to reduce relayout calls
repl: clean up css and fix widths calc
tree: fix renderers type
tree: use null to represent root
debug: adopt to the click outside of tree
fix strict null checks
fix build
treeResourceNavigator2
debug tree adpot WorkbenchDataTree
list: emit mouse events on root
merge master
Tweak lifecycle phases (#63899)
WorkbenchDataTree
history - increase limit (fix #63853)
fix tree tests
swallow cancellation error in datatree
Persist replace input text - fix #63886
Do not display errors in editor for cancelled js/ts code lenses
Interupt TS references and implementations requests
Revert "Delegate js/ts code lenses back to vs code"
Pick up new TS insiders
first cut
Interupt geterror requests for signature help requests
Interupt geterror requests for getting completion entry details
Strict null check selectBox
Move base/node to use include instead of files
Strict null checks
Add keyboard shortcut to close Issue Reporter window, fixes #59845
update json hover for word pattern.
Added failing test for #63749
Add skipped test for #63822
Adding version info for ts non-code dependencies
Use switch case
:lipstick:
Extract display part kinds to constants files
:lipstick:
Move snippetForFunctionCall to own file
Extract append joined placeholders
Try splitting up parameter list extraction from snippet building
Make it clearer that insert text snippets override the rest snippet generation
Adding pinning test for inline types
Adding plnning test for rest paramters
Adding pinning test for getting parameters
Adding basic pinning tests for insert text
Add test for using insert text
Extract snippetForFunctionCall so that it can be tested
add timeout for getmac (#63815)
Restore #63457 without #63834 break
tweak running extensions view, nuke the chart, tweak messages
#12764 Show the time of update
repl: getHeight for elements
repl: adopt to new tree first steps
storage - scaffold a basic global storage service on the main side
#14034 Support installing specific version
#14034 Only get compatible versions
#12764 Use quick pick object
#12764 Install another version action on extension
Use thenable
#12764 :lipstick:
dispose dropdown actions
#12764 Show extensions viewlet when installing
#12764 Add install previous extension version action
#12764 Support installing an extension version in workbench
#12764 Support installing specific extension version
#12764 - Get all versions from gallery - Ability to get a compatible version from a given version of extension
LSV: support 'changed' event; fixes #41362
only set nodeCachedData-prop when having a dir, #60332
adopt new loader, make sure each loader instance has a static seed so that filenames don't conflict, #63605
add identity provider (for stable selection and expansion)
fix security vulnerabilities
add tryToExpand
lookup sources only once
less TPromise.join, #53526
know how effective the silent notification is, #60332
don't fire context key change async
debug trees: clean up css
lifecycle - avoid a will-quit listener
fix #63216
Revert "fix  #63216"
loaded scripts: remove unused imports
node-debug@1.30.2
fix keybindings conflict #63448
cleanup ids, #63448
update ref-view extension
:lipstick:
debt - remove unneccessary cast
fix bad listener wrapping in closure
rename main storage
fix compile
lock event-stream to 3.3.4 in package.json
Revert regression in search viewlet
storage - polish logging
storage - implement async shutdown support
Cleanup new setting description
finalize DebugAdapterDescriptorFactory API: fixes #62977
Terminal process request improvements
Terminal issues to me
Scroll-y menus (#62819)
fix menubar focus trap (#62869)
storage - update global storage file name
storage - pick less obvious file extension
storage - rename storage DB to ensure proper migration
Test system proxy config (#60773)
simpler API use, #60332
DataTreeResourceNavigator
simplify debug hover tree layout
Cache proxy only per scheme://host:port (#60773)
Let settings and environment variable win for compatibility (#60773)
fix strict null checks
DataTree.onDidResolveChildren
tree: expose things for debug
debug hover do not leave 10px for horizontal scroll for now
data tree: update nodes map
fix strict null checks
show a silent notification for extension frezing for 5secs and more #60332
propagate userenv to shared process
callstack stop throwing
some lifecycle :lipstick:
fixes #63693
first cut of LoadedScriptsView based on new tree
some :lipstick:
debug callstack: if there are no sessions there should be no children
notifications - add silent option
publish to vscode.d.ts
debt - less TPromise
check for unresponsive profile when reporting an extension issue, #60332
tweak interfaces, #60332
fix warning message, #60332
fix last TPromise ctor use (#62716)
fix scm input box nudge
fix #63765
show blocking extension in editor, #60332
TPromise => Promise (#63768)
fix #62833
fix issue with binary status not updating properly
added .hintrc and moved .babelrc to jsonc grammar
Remove StartupWMClass from URL handler desktop file
bump distro
wip
finalize DA & Tracker Debug APIs
'suggestSmartCommit' configuration setting was introduced
Break up ExtensionService into multiple files
Nicer single line search input sizing
Cache proxy resolution (#60773)
Add a couple RipgrepParser tests
Text search perf improvement for long lines/multiline results
QueryBuilder should respect isMultiline passed in
debug: callStack use the new tree
Rename interfaces in taskConfiguration.ts to remove duplicates
debt: remove TPromise from update
#56649 Add detailed assertions
update references-view extension
Rename to not have two different RunOptions
MenuItemActionItem only listens to alt-key when having an alt-command
lower general listener leak limit to 100
have high listener leak limit only for those emitters that are used by the ResourceLabel, #63655
debug trees: take care of todos
#62370 Improve hover UI
storage - first cut hook main storage into app
tree: expose visibleNodeCount
storage - viewservice.*.enablement state is no longer used, exclude from migration
storage - add perf marks for main side storage init
Use an event to build resolver cache
debugHover: use new tree
DataTree: expose domFocus and onDidChangeCollapseState
variables view use the new tree
Strict null checks for Task in extHostTypes
storage - add a main side storage service
some :lipstick: in main
remove TPromise from editorPart (#62716)
Support updating localization extensions from files on disk
fix warnings
:lipstick:
increase timeout for #63434 fix
window - convert to Disposable
make sure to reset context key completely
add proper equals check to resource context key, #63656
:lipstick:
make deprecated ctors less prominent
more strict null issues
fix strict null issue
update monaco.d.ts
write profile to disk and log filename, #60332
debt - use native promise for pfs#whenDeleted
adopt IExtensionService#getExtension
only report telemetry when being able to blame an extension
add IExtensionService#getExtension
fix #63000
debt - remove stacks when removing listeners
watch expressions: fix some types
fix #63650
storage - do not wait for init when storage is known to not exist
storage - fix tests
dispose listener #63467
use editor mouse listener instead of multiple listeners #63467
have just one editor config listener  #63467
:lipstick:
storage - handle strict null
remove unused and duplicated code
storage - move meta data into storage service too
update references view extension
storage - move workspace folder and migration handling into storage service
watchExpressions: set display back to initial, not inherit
watchExpressions: rename box should be inside expression container
watch expressions: rename box
debug: watchExpressionsView use the new tree
debug type polish
CollapseAction2 for the new tree
further fixes to Microsoft/monaco-editor#1199
fix #63291
fix issue with double menubar with unity
Allow editing multiple lines of text in the search view - fix #62304
Log proxy resolution (#60773)
storage - add a hint for speeding up Storage#init()
fix strict null checks
fix: fixed issue with strict null check
fix dropdown!
Apply smooth caret setting immediately after setting change
storage - handle case where DB is null when closing
fix compile
storage - ensure to close DB on error
update references view
tree: expose onMouseClick and onMouseDblClick
storage - remember if workspace storage folder was created or not
rename isOnlyDevelopmentDependency to developmentDependency
fixes Microsoft/monaco-editor#1199
simplify DataTree getChildren
make tree events simpler by not exposing nodes
fix: returning undefined to ensure the default value is applied
update references-view-extension
storage - bump telemetry ID again
fix: #55946 Added comment snippet variable
storage - implement backup solution
escape message
add comment to vscode.debug.activeDebugConsole; fixes #63489
storage - easier tracing configuration
Remove TPromise from terminalTaskSystem.ts (#63562)
perf - storage should only be in trace mode if enabled (!)
bump vscode-sqlite3@4.0.5
fix build
bump vscode-sqlite3@4.0.4
Clean up unused empty workspace storage folders (#63554)
#23251 Install post install hook
fix tracker problem on restart; fixes #63529
fix strict null error for debug
emit debug activate events in parallel
Remove no longer needed license override
Update ThirdPartyNotices
fixing some compiler errors
merge conflicts
fix spelling of "firstPage"
polish cgmanifest.json
Use monospace font for hovers
add some commit hashes and versions to cgmanifest.json
introduce 'onDebugAdapterProtocolTracker' activation event
Move clear API out of proposed
storage - bump telemetry id
Remove no longer needed license overrides
Tweak explanation
Remove unnecessary licenses
bump vscode-sqlite3@4.0.3
delete OSSREADME.json
Revert "only run component governance"
improve dropdown menu placement for sidebar parts
:lipstick:
Add a rerun last task command (#62645)
representation instead of presentation
Use reloadAction.onDidChange to set the text
Show Reload full text as sub text
Always dispose of DecorationCSSRules
Make CachedResponse generic
Move getSymbolRange out of class
Remove extra conditional
Remove un-needed any cast
Mark fields readonly
Don't cancel signature help until next real trigger
Always cancel parameter hints on retrigger
Use delayer for paramter hints trigger
Use hasModel
Remove unnessisary conditional
Enable loading indicator for subsequent js/ts project loads
Extract loadingIndicator to class
Extract lazy activation logic
Debug API: add registerDebugAdapterTracker
Extract to a method
Improve labels
Add API so that extensions can configure TS Server plugins
Always display count badge near file/folder
Option to specify actions alignment in search
Strict null check configureSnippets
Stric tnull check snippetCompletionProvider
Strict null check smartSelect
Strict null check snippetsFile.ts
Strict null check environmentService
Strict null check snippetVariables
Strict null check formatting edit
Strict null check chokidarWatcherService
remove toggle menu bar from mac menu fixes #63436
Temp fix for go to definition not working
Add metadata on completions accepted api
:chore: add todo
fix monaco-editor#1156
fix #61899
debug: bring back clear console to command palette
Check for ui extension while installing vsix
fix #63185
notifications - fix TS warning
fixes #63416
Rename
adopt DAP attribute "runInTerminal.shellProcessId"; fixes #63434
fix #62587
Use file system service (#31450)
:lipstick:
debt - introduce and use in-memory storage for standalone editor
strict null checks
list: finish dynamic height
:lipstick:
diag - include OS in about dialog
Optimize parseStorage (#62805)
#62795 Add proposed api to render description of a tree item
update DAP
introduce git.openDiffOnClick
git.postCommitCommand
Remove unused import
fix strict null checks
rename tfs to azure-pipelines
remove winjs tpromise from async
fix smoke test
use native promises in paging.ts
use native promises in Tree
Limit to application scope (#31450)
Better readability for util.ts
add posinset to menu items fix #62007
Adopt OSS tool
re fix microsoft/monaco-editor#1013
remove centered layout from layout menu
Check in composite bar for previous existence
Revert "Rename placeholders to cached"
replace ossreadme with cargo.lock
remove build/win32/OSSREADME.json
Rename placeholders to cached
Revert "Rename placeholders to cached"
Rename placeholders to cached
Should not have added the check
cgmanifest: npm versions
fix tests
only run component governance
add cargo.lock
some tests for #62906
cleanup TPromise from sharedProcessMain.ts
cleanup TPromise in sharedProcess.ts
fix smoketest: find all references
cleanup TPromise in driver.ts
cgmanifest npm dependencies
set outline label for TypeScript and launch.json, #62839
naming and doc tweak for #62839
fix  #63216
strict null work in extHostTypes, #61543
Revert "strict null work in extHostTypes, #61543"
Prepare testing system proxy settings
strict null work in extHostTypes, #61543
#61312 Implement message for tree views
rename
add commit hashes for Joaos hipster dependencies
add repositoryUrl to build/win32 cgmanifest, somehow got skipped
Debug API: add DebugAdapterExecutableOptions; for #62977
cgmanifest: some commit hashes
set revealTop to 0, #63245
add keepWhitespace-flag to completion item, #62057
log telemetry event when we report unresponsiveness and crash, aftermath for #62970 and #62829
use random port #60332
make declaration provider api stable, #62483
actually wire in go to declaration and peek declaration, #62483
:lipstick:
Can be undefined (#63033)
Refactor extensionTipsService for better readability
Comments for suggest widget
Remove unused method getAllRecommendations()
Comments for different extension views
Remove is
Simplify data2String
Delete unused log level and type levels
Make sure we dispose of pluginManager
Don't eagerly construct surveys
Move survey ready logic into Surveyor
Extract api to own file
Split commands into own files
Improve names
Encapsulate plugins in plugins manager
Make plugin.languages readonly
Move plugin config provider to plugins file
Remove extra tslint file
Pick up new tslint version
Pick up TS 3.2 rc
Update tslint plugin version
ensure backward compatibility for Tracker
Update md grammar
Strict null check decorationsService
Strict null check work
Debug API: comment cosmetic
Debug API: finalize new DebugSession attributes; fixes #51785
Debug API: finalize breakpoint ID; fixes #48722
add peek declaration commands, #62483
Have overwriteEncoding be called
Redirect vscode-resource requests
remove TPromise from win32 updateService
debt: remove TPromise from cli
add commitHash to cgmanifest
Include extension version
#62870 Show all system extensions in dev mode
remove default fields from launch.json
fix suggest widget in standalone editor
cleanup
linux build
linux build
move off Linux Hosted
fix-62365 : _saveState function handled
reset state machine when removing a scheme, #62800
use state machine for link detection, #62800
Handle  on non-Windows (#63208)
tweak regex #62800
debug hover has a fixed height: include height of horizontal scroll bar into computation
tree horizontoal scrolling: pretend the content has extra 10px instead of pretending the view is 10px shorter
Use <user-file-path> instead of aaaaaaaaaa (#63075)
fix-62365 : Added useGlobalStorageForSuggestions Setting
Bump node2
Attempt to fix #63047
Use correct position for requesting closing jsx tags
StartFindWithSelectionAction should not focus the find widget
More Promise removal
Replace !isFalsyOrEmpty with isNonEmptyArray
Introduce isNonEmptyArray
Don't disable manual code action requests on blank lines
Use hasModel type guard
Remove extra await
Improve method names
Make sure we dispose of reader properly
add all cgmanifests. Still no commitHash
ClearSearchResultsAction now checks search results to enable instead of only search inputs
Removed onInput from HistorySearchBox and changed SearchView listener to use onDidChange
Make capabilities dynamic
custom name when there are multiple outline providers
tree: if horizontal scrolling is enabled leave space for it
fix #63126
fixes #61986
only add focus change listener once
Debug API: surface Breakpoint.id; for Microsoft/vscode#48722
Do not pass context explicitly
add LocationLink use it in Declaration-type, make DefinitionLink an alias, #62483
tweaks
Move uri transformer to shared process
node-debug@1.30.1
correct fix for #63028
fix #63062
prepare for ts 3.2
Issue #62952: Disabled clear button only when all fields are cleared and enabled clear button after any input in search form.
Strict null auto add
Use 'references' instead of 'occurrence' to power document highlights
Expose 'apply' and 'diff --cached' from git extension API
fix #63028
add config to vscode.DebugSession
make IConfig.name mandatory
debug api: add workspacefolder to DebugSession
Tweaks to channel usages
Execute extension webpacking in sequence
send duration as micro seconds, #60332
debt - less TPromise
grow background images with height (#62483) and a better fix for icon twitch
CompletionItem.insertText is not optional
Restore that the editor can run in a browser
explorer do not always reaveal in middle, jump less
remove commit hash as tryout
fix strict null checks in remoteAgentServiceImpl
fix strict null checks in downloadIpc
add alias type for Declaration, #62483
stop profiling as soon as extension host is responsive again, #60332
Strict null checks for keyboardMapperTestUtils
remove logic to show an exthost-unresponsive message to the user, #60332
exploration
fail silent when not able to connect, #60332
update ref-view extension
#62370 Render source and code less prominent
test cgamnifests
:lipstick:
add connection context to IPC
fix warning
remove workbench layout perf marks
Autodetect ksh scripts as shellscript (#62838)
fix command name for toggle centered layout
event - forward custom leakage threshold to monitor
event - add leakage warning threshold logic and configure for renderer
tasks.json should use deprecation message for env. config. and command. (#62787)
Bump node2
Don't take user file associations into account for webview mime types
debug API: introduce DebugAdapterProvider
Don't explicitly add folder name to task labels
Switch VS Code workspace to use typescript-tslint-plugin
Strict null check extensionsAutoProfiler
Strict null check state service
Strict null check zip
Strict null check menusExtensionPoint
Strict null check downloadIpc
Strict null auto add
Ensure menus with no group specified have proper grouping
Auto close <> in js/ts
Format searchView.ts
tweak telemetry #60332
fix compile issue
always enable extension host profiling
first cut of auto extension profiler, #60332
update v8 profiler package
repl: Ignore inactive sessions which got cleared - so they are not shown any more
ipc: improve serialization perf, add array support
enable custom title/menus on linux (#62866)
null checks
update monaco.d.ts
tweaks
Explore
:lipstick:
explore extensions management
debt - less TPromise
fixes #62606
assign max-height to type-label to prevent icon height changes, #62758
fix #62344
add API command for declaration provider, #62483
add missing monaco.d.ts
add proposed api for declaration provider, add test, add ipc logic, #62483
add internal interfaces and actions for go to declaration, #62483
fix #62059
fixes #62865
add some padding right to code lens, #62842
split view views: do not jump when revealing
remove sha1 win32 cert signing
fixes #62873
Setting tab details opacity after #61371
Add an entry to the search history every time a search is done
Do not terminate link if `[` occurs in the authority section of URLs (allow for ipv6 authorities)
Test & tweaks
Use overload for #62806
Observe isIncomplete metadata passed by from a  plugin
Strict null check driver
Strict null check inPlaceReplace
Strict null checking editor/contrib/format
Strict null check storageService
Strict null check launch service
lines operations strict null check.
More native promise adoption
More native promise adoption
Native promise adoption
inPlaceReplace strict null checks.
Indentation strict null checks
go to error strict null checks.
Parameter hint strict null checks.
Color Picker null checks.
dispose submenu after use (#62848)
explore classifying extensions
fix #62849
Some tweaks
Reset extension enablement on install
#53526 Migrate from TPromise
Migrate from TPromise
Wait some more
dispose command-palette after usage, #62829
debug: do not report cancled error message
Depended on background tasks should only be run once (#62784)
debug: minor polish (remove public keyword for consistency)
debug: minor polish
add missing return
#53526 Migrate from TPromise
#53526 Migrate from TPromise in Keybindings Editor
#53526 MIgrate from TPromise in log
#53526 Migrate from TPromise in localizations
#53526 Migrate from TPromise in Output panel
#53526 Migrate away from TPromise in Problems panel
#53526 Migrate away from TPromise in Localizations land
#53526 Migrate away from TPromise in views land
more missing monaco.d.ts
make debug State a const enum
Telemetry for extension activation times
debug: make sure to dispose contributed context menu
missing monaco.d.ts changes
tweak markdown string conversion and rendering
working on markdown string dto
add Uri.parse(value, strict) so that missing scheme throw
Update extHostDebugService.ts
Try fix timing issues
Revert "Make vscode.executeCommand('vscode.previewHtml', ...) a compile error"
Revert strict null checks on config
Strict null checks
Strict null checks
Remove windows-process-tree types if they get installed
Support rendering color completions from a ts plugin as colors in the suggest list
Strict null checks
Update distro.
Strict null checking config
Strict null check quick open scorer
Tweaks
Refactoring comment service to not be keyed on handle
Authority exploration
Make vscode.executeCommand('vscode.previewHtml', ...) a compile error
Attempt to fix flaky search tests
fix linux build
Resolve another conflict
explorer: fix memento state regression
cleanup build folder
cleanup snap build
build
snap updates
toward strict null in extHostTypes #61543
fixes #62778
Use ES6 promises
snap update service
fix #62772
Reconfigure default build and test tasks should update tasks.json (#61857)
#61590 add edit json action for keybindings editor
#61590 - show settings editor actions in editor toolbar instead of private ... menu
Tweaks
Clean up old rg cli props
Only set --encoding flag when files.encoding is set. For some reason, --encoding=utf8 is slower when searching large binary files with \n in the query...
Replace TPromise in settings #53526
Update distro hash
Add alert when trying to use the previewHtml command while developing an extension
Auto add strict null checks
Allow-list cleidigh and usernamehw (#56883)
Enhance LabelService
Tweak IExtHostContext
Render more details in running extensions
Exploration with authority
Minor tweaks
Final search TPromise removal #53526
Remove TPromise from search land #53526
#53526 - remove TPromise from SearchService
#53526 - remove some TPromise references from search proc
Remove no longer necessary 'use strict'
Expose force flag for deleting branch on git extension API
Better timeout installation
Tweaks to transformer
Use more URIs
Expand comment reply area on focus
Add compilation output
Minor tweaks
fix artifacts
debt - less TPromise #53526
:lipstick:
tweak snippet
use snap cleanbuild
build
debt - less TPromise #53526
:lipstick:
debt - use const enum for MenuId
bring back snap build tasks
remove build message
fix #62526
set exec bit
set exec bit
fix #62208
remove args from electron launch
cleanup snapcraft.yaml
reenable builds
Convert TPromose -> Promise
Convert TPromise -> Promise.
simplify code, #62335
fix #62335
mainThreadDebugService: get rid of TPromise
fix build
contextMenuDelegate: getActions is no longer async
'custom' task type should be '$customized' to conform to API doc (#62710)
Update NPM script explorer tree view when package.json changes
build 32bit snap
viewsViewlet: openView is not async
debt - less TPromise instantiation #53526
debt - remove TPromise from action provider interface because it is never async, #53526
debug: To reduce flashing of the path name and the way we fetch stack frame. We need to compute the source name based on the other frames in the stale call stack
debug: only append stale call stack if there are more frames to come
debt - less TPromise #53526
isolated yarn build
yarn
debt - more TPromise removal #53526
debt - less TPromise #53526
build
snap command
snap
add notification for linux issue (#62683)
snap
snap
Strict null check paths.ts
[ImgBot] Optimize images
Sort tsconfig.strictNullChecks.json
Strict null check more search files
strict null check replace.ts
Strict null check more search files
Add textSearchManager to strict null checks
strict-null-check ripgrepSearchUtils
get node in build
Remove TPromise from issue service, #53526
get snap building
debt - Barrier use real promise
debt - let menu listen to (new) menu registry change events instead of listing to the extension host being ready. that simplifies this a lot and help with show menu sooner
debt - less TPromise
comment out component detection
faster build
build
build
whitespace
tfs snaps
mock debug: return type
update snapcraft.yaml
fix #62112 - merge overlapping delete operations
cleanup debugConfigurationProviders properly
let's go crazy: use native promise in debug land
set executable bits
debug: make sure debug stop can stop initializing state
add LinuxSnap build step
cleanup linux yaml build definition
strict null trouble
debt - less TPromise construction
whitespace
Update makefile colorize tests according to the latest grammar. (#61961)
add test for #61919
strictNull trouble
clone DAP messages properly
Handle error (#31450)
Show README instead of welcome page, if it exists (#60061)
add log messages for all language features (IntelliSense, formatting etc) fixes #43099
fixes #62390
Updated grammars
Themable Welcome background (fixes #46816)
Reload grunt and jake tasks after npm install
After npm install gulp extension should find tasks (#62129)
debt - remove TPromise from telemetry world
Change icon name on Linux for icon theme compatibility
revert debt - remove now obsolete smoothScrollingWorkaround setting
debt - less TPromise in service interface
Revert "Add strict null checks in issue and launch services, #60565"
Test for multiline selection for wrap
Update markdown grammar
Add strict null checks in issue and launch services, #60565
Use TS 3.1.4 for building VS Code
Update js/ts grammar
Use set instead instead of regexp for kind modifiers
Enable file icons for js/ts path intellisense
Always show the code action light bulb if quick fixes or refactorings are available
Version js/ts Api
Remove comment user icons that fail to load
Use api for onCompletionAccepted instead of command
Adding command that is fired when a js/ts completion is accepted
Strict null checks
Strict null checks
Strict null checks
Send only needed extension data to issue reporter, fixes #62481
Clean up unused parameter from PR
remove unnecessary filter conversion (#62505)
debug issues to weinand
debug: add "Run to Cursor" to command palette
debt - less TPromise
fix #62457
update git iconv-lite dependency
enable component detection in product builds
debug repl: Make sure to select the session if debugging is already active
strict null checks: add dataTree
strict null checks: add objectTreeModel
strict null checks: add indexTreeModel
strict null checks: abstractTree
move ITreeModelOptions to /tree
strict null checks: several ipc utils
strict null checks: issueIpc.ts
strict null checks: grid.ts
disable bogous test, #62587
debt - less TPromise in mainThread-things
debt - less TPromise in tests
debt - less TPromise in webview stuff
if there is no documentation don't show border
Clear doesn't work for extension contributed tasks (#62495)
sidebarFocus -> sideBarFocus. Part of #62270
null checks
Added ability to output extension info to clipboard (#56514)
Force InstallCount sort only for empty extension query #62426
SelectBox: ComboBox role workaround for native select Addresses: #60929
Extension install error copyediting
Update css service for #62159
fix #62460
update references-view extension
Remove default keybindings
fix localization smoketest
update distro
version bump
update distro
allow references view to use proposed api, add as built in extension
commands and widgets do not get along nicely
node-debug@1.29.2
remove bad submodule
fix #62220
repl: only dispose listener if a new session is selected
fix #62412
:lipstick:
fixes #61524
debug: workaround out of precaustion end intiialising state when adapter ends
Remove trailing comma
Update GDPR annotation
Re Microsoft/vscode-pull-request-github#652. Reply/Add comment button should be enabled if the comment editor is not empty.
Skip malicious check when --disable-extensions (#62351)
fixes #61154
fix uri matches
tree: pass along parent visibility to filter function
fixes #60664
Update css/less/scss config to make validProperty an string[]
fixes #18673
fixes #60986
fixes #61534
Update distro
fixes #62168
Revert "cache panel body size"
fixes #58918
Change settings for splitCwd to workspaceRoot, initial, and inherited.
Pick up change to fall back to DIRECT
do not show add configuration button for readOnly editors
cleaner git push api
:lipstick:
Make sure we activate js/ts extension when someone sends the _typescript.configurePlugin command
Avoid creating AppInsightsAppender when --disable-telemetry (#62353)
Bump node2 - #61711, #62354
fix keyboard shortcuts from conflicting with mnemonics fixes #61038 fixes #61644
fix some menubar fallback items fixes #62133
add context keys for appearance menu
Update css service to fix Selector Specificity issues
Remove self from auto assign
Add description proposed dts file for #33358
fixes #61273
debug: if no thread is focused take the first thread
Update css service for #62163
Revert "Use new rg --crlf instead of diy solution"
Add a semicolon at end of non-built-in languages list
Use default title for delete comment dialog, fixes https://github.com/Microsoft/vscode-pull-request-github/issues/648
fixes #62090
fixes #62158
Update src/vs/workbench/services/files/electron-browser/fileService.ts (#62296)
fixes #61259
fixes #61269
fixes #62202
fixes #62091
do not show undefined label
Remove useless assignment of a promise
Clarify types (help TS compiler)
fixes #62266
Description for splitCwd workspaceRoot in multi-root workspace
#62205 Change to number and Improve doc
storage - disable automated integrity check for now
fix #62152
Dont enable commit characters in case where cursor is at dot preceeded by whitespace
:lipstick:
typo fix
update distro
Treat data: as a known markdown link scheme
vscode-xterm@3.9.0-beta13
storage - remove logStorage option (for #62152)
fix #62145
fix #62161
storage - less waterfall startup
Bump node2, fix #62164
'Run to Cursor' option not offered on sources that were loaded readonly
Revert #61831 (fixes #62131)
fix #62095
storage - use all() over each()
storage - move error listener up
storage - flush with delay of 0 on shutdown
bump node2
Pick up latest js/ts grammar
Don't try re-encoding vscode-resoure markdown links
Minor style updates (#60304)
Pick up TS 3.1.4
Run .integrationtest.js tests first
Add log for registering workspace comment provider
fixes #62086
Add scheme in URIDescripitor.
Add notification to searchview for search.usePCRE2
Typing for search errors
When search fails due to a non-standard encoding, show a notification to help people find the new setting
Log an event on webview panel creation
do not suppress first loadedScripts event; fixes #59281
Introduce plugin config provider
Support configuring TypeScript plugins (#61756)
only show alert
debt - limiter(1) => queue
comments
fixes #60767
removed unnecessary parts from MIT license
mention issue
woraround #62072
Add proxy stats (#60773)
git: create branch without checkout
improve titlebarpart layout perf (#60566)
rename proposed IDebugAdapterTracker to DebugAdapterTracker; fixes #59420
timeout for provideDebugAdapterTracker; fixes #59408
storage - handle SQLITE_CORRUPT error
fix #59410
storage - back to PRAGMA check on startup
git extension api docs
[html] update service
[json] update service
css: valid properties
storage - add comment
storage - handle SQLITE_BUSY error with retry
storage - tweak telemetry
fix tests
Check proposed api for label highlights
debug: add session to model immediatly
let tree highlights use editor find background, fyi @sandy081
osstool 1.29
fix tests
#55879 Set cap to max 3 levels to expand
storage - add workbench.enableLegacyStorage setting as emergency in case new solution fails for someone
#55879 Add expand option to reveal API
_vscodeSystemProxy option (#60773)
fix npe
hide activation message after 5 seconds, #61846
add config.git.allowForcePush to this when condition
fix strict null
Add a tooltip to scripts in NPM script view (#61596)
storage - switch to throttled delayer
storage - only create DB if path does not exist
Update behavior of task reveal === silent (#61477)
#55879 Collapse all action for custom views
storage - log duration of SQL schema upon opening DB
storage - ensure to flush in sequence and wait for flush queue before closing DB
mark some 'contributed' services as supporting delayed instantiation
remove workaround for #61917
make delayed service instantiation opt-in #61917
setRowLineHeight: false (fixes #60701)
[git] Expose git.pushForce in the UI, fixes #62020
npe in history main service
Added a section on the Bundled Extensions
Added common extensions link to related projects (#61446)
Remote disable action from viewlet and show it verbose in editor
storage - add more timers to compare
storage - disable global storage using sqlite for now
storage - tweak performance numbers
Delete `no-results` class too
Add an entry to the search history when the search was triggered by an option change
Clean up
list option: supportDynamicHeights
wip: list with dynamic height elements
Hide undefined title showing briefly on term split
Use hover link color in Settings GUI
Per extension (#60773)
Skip requests with socketPath (#60773)
Use vscode-proxy-agent (#60773)
Address changes requested by maintainer
multiline breakpoint widget
Align badge theming with the GUI badge
Ignore empty string for code-cli path arg
Make launch config 'Launch VS Code (Main Process)' cross platform
Change 'overwrite' to 'override' in setting screens
Add workaround for #61907
#59458 for editor matches, tests
Take selected text into account for more markdown snippets
Always use splice
Introduce RequestQueueingType
Adding basic tests for request queue
Move request queue to own file
Move callbackmap to own file
Move ts server into own directory
More explicit types for storage.get with fallbacks
Strict null checks
node-debug@1.29.1
fixes #61561
Add rg json output typings
Obsolete comment
Task 2.0.0
Task 2.0.0
Task 2.0.0
Task 2.0.0
workaround #61310
fix one part of #60192
Ensure that terminal process ready is always fired (#61299)
explorer: add willResolveExplorer and did ResolveExplorer
Remove 'new' and rewording
Combined text search result tests
Use combined search results for matches from editor, too
Multiple match on line integration test
Add missing final periods in comments. (#61827)
Allow storage to return undefined fallback values
Reveal absolute top of markdown preview when scrolling to line 0
Reveal line 0 in editor when markdown preview scrolls to top
system proxy: use node url to parse url
Add `isRetrigger` field to signature help context
Add tslint rule banning new Buffer
Remove duplicated search helpers
show the number of hidden frames (Show N more frames)
Support collapsing stack frames
another fix for #51013
debt - do not use deprecated API
Update keybindingEditing.test.ts
Update files.ts
debt - new Buffer() is deprecated
Add window.nonNativeFullscreen option for macOS (#55267)
fix build
fixes #58137
setVisible do not lie to the world, you are not async
Use TS 3.1.3 for building VS Code
Pick up new TS insiders version
fix compile
fix strict null
grid: pass priority, snapSize and  proportionalLayout down to splitview
splitview: support snapSize
Add null check in setComments
fix strict null checks build
splitview: LayoutPriority
Remove new pending comment cache
comments contribution takes care of comment fetching itself
splitview: proportionalLayout option
Use median instead of mean for measuring terminal frames
vscode-xterm@3.9.0-beta12
use accessor explictly
renamge getcomments to recomputecomments
debt - fix bad URI.fsPath usage
let '--prof-append-timers' also append if it was a standard start
remove input box visibility change
debt - remove unused
move vscode-chokidar under MS org
Make sure to always write with normalized line endings
Use yellow for monaco.d.ts errors
Show monaco.d.ts output only when something has changed
Read monaco.d.ts.recipe files as needed (don't prepare them up front)
Execute just once after N changes
Make sure standaloneEnums have consistent line endings
Add versioning to monaco.d.ts generation
revert: less pressure on storage service (fix #61255)
fix #60776
no more 'use strict'
fixed bennys bug
notifications - improved behaviour when window has no focus
Store view state in workspace always
declare proposed api usage only where actually being used
notifications - only keep notifications with prompts around if window has no focus (closer to previous behaviour)
Revert "Proposals for Collapse, CollapseAll, Expand APIs and implementation"
Proposals for Collapse, CollapseAll, Expand APIs and implementation
fileOnDiskContentProvider: do not go overly crazy on fsPath conversion
:lipstick:
fix #61632
bump electron@2.0.12
make sure to focus once centered layout is activated fixes #61673
storage - fix "Log Storage" method to use Maps instead of Objects for case sensitivity issues
tune wording for prelaunch task errors fixes #61678
storage - fix regression from lowercase keys
#61524 Improve number badge
keybindings - no Ctrl+Alt keybindings on Windows
Move `alwaysShow` to stable API (fixes #59232)
Revert "Disable failing tests"
#61081 - optional progress
save new comment is hard.
fixes #60972
:lipstick: SourceControlInputBox.visible API
Don't require selection for showing TS refactorings
Strict null checks
Add language to code blocks
:lipstick:
delete pending comment cache when comment provider is disposed.
update tree problems sample
Bump node2
reset pending comments when it's being submitted.
Focus into the textarea when there is pending comments
pending comment caching in editor comment contribution
Add linter rule to check for valid localize keys
Remove & from localize key
Remove unused content
Disable failing tests
TextSearchManager - fix tests without fileEncoding
Fallback to English when prompt text not found for locale
Update colors to meet color contrast ratio
perf - use IdleValue for Collator creation to save ~25ms when starting without or with an empty explorer. fyi @bpasero
fix-typo-in-comment
Address feedback
add onWillActivateByEvent and a workbench control that connects it with progress, #59645
Get back the link to open keybindings shortcut file
Change back the default to open default keybindings by default
Revert "fix resources.test failures"
Update grammars
remove activation message from command service... #59645
fixes #59984
debt - less TPromise
debug: show debug toolbar while initializing
suggest - cache completion item details to avoid repeated ipc calls
Rename task presenation clearBeforeExecuting to clear
fix strict null check
debt - more less TPromise
fix NPE from #60192
Revert "also use $mid as version id and only accept external and fsPath from the most recent version, #60163"
fix #61547
more jsdoc for Uri.toString #58985
Move clearBeforeExecuting to proposed API
Revert "fix #58985"
Revert "fix windows tests #58985"
fix compile error
show progress when activating an extension via onCommand:Foo,  #59645
Check if highlights exist
#59645 Move progress service to platform
Update calendar
Revert "perf - use raw string ordering for faster menu creation"
perf - use raw string ordering for faster menu creation
Make sourceCwd the default for terminal.integrated.splitCwd
Organize imports
fix #61252
setSheetOffset only on macOS
settings - exclude uri.test.data.txt
Open symbol handler for http/https conditional on the mode (#61509)
Remove unresolved reference (#60773)
Correcting minLength and maxLength validation messages
[css] Update css service
Strict null checks
Don't include ps in strict null checks yet
Strict null checks
Strict null checks
Auto add strict null checked files
Strict null checks
Strict null checks
Strict null checks
Scrolling zoom is reversed if image viewer doesn't have focus (#61222)
node-debug@1.29.0
loadedSources view: support sourcemaps and resource icons
Bump node2
Remove dead file search code
Null check to fix #61352
Refactor file search - use new interface for SearchService.fileSearch
Investigate using Electron's `resolveProxy` API (#60773)
Cleanup breakpointType logic and send raw properties instead.
Clarify context for extensions
storage - add timers.ellapsedWorkspaceStorageInit
Hide icons when using no-icons class (#61461)
typo: Double word "Show" (#61403)
Revert "add `_encodeDriveLetterColon` to toString #61504"
add `_encodeDriveLetterColon` to toString #61504
fix #60791
code review - change from object array to number tuples. Move to proposed api
Trailing comma in settings.json breaks settings editor. fixes  #61341
Rename to SymbolSorrtOrder for clarity
storage - always have a workspace identifier
fix storageservice strict null typing
fix strict null errors
storage - restore ExtensionStoragePath
storage - :lipstick:
fix #61316
notifications - increase purge timeout
storage - cleanup
Revert "fix strict null errors"
fix strict null errors
remove telemetry #44860
remove duplicated code
Use const enums (and generate non-const ones for standalone editor)
Add a new presentation option to clear the terminal before executing task (#61329)
strictNull for rename.ts
storage - use more logging service
storage - tpromise => thenable
storage - also migrate extension development storage
storage - rename extension-development-workspace
Support newUser condition in experiments
Drop console
Menu horizontal alignment
Support promptText for multiple languages
feat: add push to git extension API
Add sort option for breadcrumb symbol trees
Outputs:SelectBox: Tweak select label #60726 (#61415)
SelectBox: Electron select labeling. Workaround for #60929 (#61412)
vscode-xterm@3.9.0-beta11
vscode-xterm@3.9.0-beta10
typo: Double word "for"
typo: Double word "as"
typo: Double word "text"
typo: Double word "is"
Snap font stack to latest
Remove font-weight change to fix jumpiness
Use new rg --crlf instead of diy solution
Limit search provider extensions to one per scheme
Revise some comments
Change `search.useRipgrep: false` to enable the PCRE2 search option instead
Format
Add telemetry for debug add breakpoints #55514
Add useRipgrep/usePCRE2 to search telemetry
Text search - add telemetry for searches with invalid encoding
Remove extra settings editor telemetry events
Add 'reason' to search telemetry
Support cmd+backspace to delete to start of line in term
:bug: - Support C# in markdown preview code block syntax highlighting. (#61291)
snippets: Add setInterval snippet (#61351)
Address PR comment
Make sure a view's parent is not overwritten
Add explicit typings to array
sidebarFocus and panelFocus, part of #59858
fix breakcrumb scrolling issue
try to load a model when an editor/api command wants to work with it
keep whitespace for secondary cursors that are on different indentation levels, #57093
Prevent terminal task system from trying to set a non-existent terminal as active (#61052)
#59645 Show busy indicator while activating extension
:lipstick:
fix another typo
fix typos
Terminal's with waitOnExit === true shouldn't print wait string (#61229)
Build ReplaceString preserving case
PreserveCase visual component
remove a few TPromise usages from mainThread-files #53526
debt remove TPromise from extHost-files #53526
debt - no TPromise in arrays
fix #61258
tweak styles, #44860
Integration test for #60218
Split text and file search interfaces
Move all old text search code under legacy/
Move new launch config down so it's sorted after "Launch VS Code"
Strict null checks
remove smoketests from continuous build
fix whitespace
fix smoke tests
Add project tagging for new project types. (#59905)
Add launch config for vscode main proc
notifications - tweak purge timeout behaviour
fix #61195
Revert "remove layout trasher which seems unnecessary, #60031"
storage - mark deleted untitled workspace storage folders as obsolete
storage - use same workspace id for extension development
openViewlet should return a Thenable
Composite.create is sync
strict null checks for json utils (adopt latest jsonc-parser code)
fix #61179
TPromise => Promise
use IconLabel for all icons, #44860
show folder icons from theme #44860
introduce and use IFileService#activateProvider()
use debug uri for relative paths; better fix for #61088
storage - add test for migration
propagate error when it happens very early, make sure to throw meaningful error on ext host side, #61182
storage - also log path
storage - implement migration when entering workspace
storage - :lipstick:
storage  - cleanup
storage - have a whithlist of supported workspace keys
debug: make sure to de-dupe if a session is re-intialized. In case of EH debugging we are adding a session again after an attach.
Corrected typo in comments
storage - ensure no errors on startup
storage - migrate workspace keys over
Bump node2
Refactor search - multiline/preview options tweaks
Don't re-encode markdown styles http uris
Inactive tab foreground (#61106)
Strict null checks
fixed documentation typo: 'guardeed' -> 'guaranteed'
Auto add a few more files to strict null checks
Use theme colors for webview scrollbars
Add guards for webview deserialization possibly failing
Explicitly type simple array
let -> const
Use namespaces for converts
Use `to` for converting to extension host
Add more detail to `disableAutomaticTypeAcquisition` setting description
Strict null checking some more files in base/node
include priority in requestItem and add to request queue accordingly (#60582)
Faster monaco.d.ts generation
support relative paths for backward compatibility; fixes #61088
storage - update telemetry keys
storage - write workspace.json from renderer
storage - switch to a workspace storage
Remove useless console
Fulfill local branch checking when checkout to an remote branch
storage - extract loading of workspace payload
Cache TS source files between runs of generator
Change how monaco.d.ts is generated: - do not use the .d.ts files coming in from gulp-tsb - remove the generation of .d.ts files - run before compilation starts - install file watchers directly
never convert relative paths to URIs; fixes #60667
storage - workspace ID computation fully from main.ts
new monaco.d.ts
storage - reduce stat calls when creating workspace
typos #57093
add proposed api for CompletionItemInsertTextRule, #57093
add CompletionItemInsertTextRules on modes.ts so that we can have that in vscode.d.ts, #57093
remove unused noAutoAccept property, #57093
storage - introduce workspaceStorageHome to environment
storage - :lipstick:
clone DAP message before modifying it; fixes #61129
We add the input decoration only when the focus is in the input
Support using webpack's process: 'mock' (Microsoft/monaco-editor-webpack-plugin#17)
#60211 Show message when data providers are not yet registered
Add a setting to control cwd behavior on terminal split (#60949)
debt - remove TPromise.any and use Promise.race instead
debt - more TPromise migration
#60749 Show code on the last line
yet another attempt to collect feature insights.... #57093
storage - more telemetry (integrity check, more times)
fix tests
fix #61067
Announce terminal number every time the terminal is focused. (#60632)
storage - remove "allExperiments" if empty
editor - remove code that is handled by cancellation token (for #60163)
bump windows-mutex@0.2.1
Git clone fix to use basename
Split coalesce into inplace and copy version
Strict null errors
Update applicationInsights for #60585
Revert "Don't set en_US.UTF-8 on Windows when setLocale is false"
Strict null check files in base/common
Add terminal frame time logging when its slow
Strict null check  files/test/electron-browser/utils.ts
also use $mid as version id and only accept external and fsPath from the most recent version, #60163
Don't include extension actions in tab order until focused (#59861)
Putting back git.inputValidationLength for backward compatibility
Allow globalState to be synchronized across multiple windows (#61024)
eng - less TPromise usage
#60804 Quote recorded keys
storage - add a test that stores a single very large item
storage - less data persisted
Problem matcher for strict null checks
tweak strict null task
eng - more strict null
add strict null task
null checks
null checks for ipc
eng - more strict null checks
storage - clean up duplicate keys (for #60935)
fix #60935
eng - strict null checks
tweak alignment, #44860
:lipstick:
storage - telemetry around errors and perf
#53526 Do not use Promise in utils
Have a more precise computeDiff result
fix #60753
fixes #61033
fix #60694
storage - :lipstick:
more TPromise removal
storage - remove shutdown reason from event
null checks: label service
workaround for #60960
fix #60394
show file icons in suggest widget (no folder icons yet)  #44860
use getIconClasses and add default (which currently always wins) #44860
bump windows-process-tree@0.2.3
scope assertStorageValue to workspace changes only
Remove search-rg tests from .bat
Refactor search - add config to run search in EH
bump distro
bump vscode-nsfw@1.1.1
Delete search-rg in favor of internal search
Run file search in EH
Refactor search - move file search code out of ExtHostSearch Not generic now, maybe in the future
cleanup
implement `editor.minimap.textAlpha` setting
fix test errors
read minimap opacity from `editor.minimap.backgroundAlpha` in setting.json
Update scss coloring tests
Add typings for strict null checks
Auto adding files for strict nulls
Remove deprecated js/ts completion settings
Adding some typings in npm scripts
Don't use strict mode on gulp ts files
Remove duplicate switch case (#59677)
Set css hierarchy for webview file icon in the light theme (#60990)
Refactor search - rename files
Refactor search - remove search-rg text impl
Refactor text seach To allow better code sharing between EH and search proc
Text search in EH
CSS highlight for font-family 'cursive' and 'fantasy'
Ensure run active file works when no space is present
don't access body on failure; fixes #60998
Auto adding files
Auto add strict nulls
Rewording / copy change
vscode-xterm@3.9.0-beta9
vscode-xterm@3.9.0-beta8
remove extra margins on completion hovers with markdown (#59786)
debt - remove now obsolete smoothScrollingWorkaround setting
storage - be more "daten-sparsam"
storage - remove unused
move getIconClasses so that it can be used from the editor-layer, #44860
extract getIconClasses so that it can be moved, #44860
move DataUri so that getIconClasses can be moved, #44860
use IconLabel when rendering suggestions, #44860
strict null checks (#60565)
Strict null check terminal Eneironment/actions
storage - fix missing disposable
Allow updates to be completely disabled or manual, as well as automatic
fix #60925
[folding] add null checks
strict null checks (#60565)
storage - use void as return type
storage - tweak log message
:lipstick:
fix  #60459
storage - add action to print contents from DB
fix #60449
fix  #60457
:lipstick: remove unused argument
:lipstick: move snippet completion provider into its own file
fix #60247
fix incremental compiler
[folding] tpromise-> promise
fix test for #60746
update tests
Revert "fix #60247"
add test for #60746 (failing) and #60737
strict null checks (#60565)
fix #60298
sqlite - onWillClose => onWillSaveState
sqlite - reduce pressure on storage
sqlite - support in-memory when running ext tests
sqlite - add some logging
WIP: implement configurable setting for 'editor.minimap.backgroundAlpha'
background opacity: working test with hard-coded alphas
markers panel: accessibility provider
markers tree: open to the side
markers tree: pinned
fix markers panel input box focus
fix build
proper tree twisties
tree: docs
tree: cleanup
Update README.md (#60903)
sqlite - stricter rules for *.node files
sqlite - fix tests
use vscode-sqlite3@4.0.2
sqlite - fix compile
sqlite - fix compile
sqlite - selfhost on DB, bump storage delay
sqlite - fix warnings
sqlite - fix close boolean flag
sqlite - fix tests
sqlite - fold inserts/deletes into one transaction
sqlite - reduce changes
sqlite - fix compilation
sqlite - trim trailing whitespace
sqlite - remove storageHome for now
sqlite - more renames
sqlite - renames
sqlite - rename to storage service
sqlite - storage => legacy storage
sqlite - memento conversion
sqlite - more next storage adoption
Update Contributing.md
Temporarily remove shell helper
strict null checks (#60565)
Remove editor contribs that have incorrect assumptions about editor API
strict null checks (#60565)
Exclude duplicate  typings file on windows
Use files instead of includes
Auto add to strict null checks
Use es2017 as target for build scripts (#60707)
fix GDPR annotation
Attempt to fix build
More strict null checks (#60565)
Strict null check windowsShellHelper.ts
Strict null check terminalCommandTracker.ts
fix marker model tests
remember to clear cache
markers panel should focus input when typing
markers: tree element
list: renames
beware of sync/async promises
sqlite - more adoption of next storage service
strict null checks (#60565)
strcit null checks
sqlite - more next storage service adoption
editor/common strict null (#60565)
sqlite - next storage service adoption
tpromise => promise (#53526)
Strict null checks (#60565)
fix #60333
remove console.log
fix #51013
Update markdown grammar
Remove strict null checks from test.sh
Remove windowsShellHelper from strict null checks
Re #261. Update comments only when visible editor changes.
Pick up TS 3.1.3
Mark types as nullable where we explicitly assign something to undefined
strict null checks
Annotate a few more null assignments
Update distro
Add null annotations for `x: T[] = null`
Add null type annotations for the common `x: T = null` pattern
Add null checks in filters and context keys
Refactor SchemaRetryNotification to ForceValidateRequest
More strict null (#60565)
Update file icons to use file type icon in small views
markers: messages
markers: filter stats
vscode-xterm@3.9.0-beta7
Add fallbacks to fedora/ubuntu font hacks
fix #60270
markers cleanup
markers: cleanup
More auto adding to strict null checks
markers panel: collapse all
markers context menus
Auto add more files to strict null check
Adding a few more files to strict null checks
null checks: history.ts
labels: strict null checks
More strict null sources (#60565)
markers panel: bring back context keys
strictNullChecks in terminalWidgetManager
use thenables for proposed clipboard api, #217
markers panel: finally mouse and keyboard navigation
Cache JSON schema error files
Minor changes in error messages.
Strict null check for event.ts (#60565)
debug: do not prepand DEBUG_SCHEME to paths
sqlite - some more service adoption
Added error message if remote already exists while adding
Better typings for IteratorResult (#60565)
working add and remove remote
expose browser event in list widget events
cleanup
Ctrl/cmd + f in terminal find widget should be a no-op (#59785)
More strict null checks (#60565)
remove now obsolete code
remove IListOpenEvent
sqlite - first cut next storage adoption
debug: on restart, make sure to first disconnect and only then run the prelaunch tasks
sqlite - relax storage value assertion
sqlite - detect cross window changes to localStorage
sqlite - ignore same updates/deletes
Add more files to be strict-null checked (#60565)
sqlite - have an event before storage closes
Revert to previous check (fixes #60243)
sqlite - renames
sqlite - renames
sqlite - delegating storage service
sqlite - faster events
Reduce usage of WinJS.Promise (#53526)
Move strict null checks from  precomit to test
Auto adding eligible files to strict nullchecks
Add more files in common to strict null checks
Strict null check a few more files
sendSequence should skip shell
Add strict null checks scripts to precommit and to tfs builds
Add retry action to JSON status bar icon
Add SchemaRetry notification to jsonServerMain
Opt a few more files into strict null checks
Remove include and exclude from base tsconfig
Add tsconfig.strictNullChecks.json
vscode-xterm@3.9.0-beta6
Reduce usage of WinJS Promise (#53526)
Clean up icons to fit on 28x28 square
Per review suggestion
Revert "add select all role for macOS"
:lipstick:
remove unused code
Show JSON schema resolution issues in status bar, not notifications
sqlite - more renames
sqlite - renames
sqlite - add some perf measurement
debug: send out name with setVariable request
fixes #60448
update minimatch
cache panel body size
Revert "Use ErrorCode in JSON Language Service schema resolution error handling"
fixes #60446
debt - shorten workbench URL and print warning if exceeding limits
fix #60437
Multiline match hint UI for #13155. Implement search.showLineNumbers to fix #39219
Much faster parsing of long lines/multiline matches from ripgrep
include uri to open file cmd on clean tree
Pick up TS 3.1.2
Git: Separate the commit length limit of subject line and description lines #60300
markers tree: filter count
revealedCount -> renderNodeCount
add ITreeNode.visible
remove todo
:lipstick:
markers: filter with highlights
Add entries to scm context menu for force pushing
vscode-xterm@3.9.0-beta5
add select all role for macOS fixes #19003
Reducing menubar cache verbosity (#59992)
remove context listener in menubarControl (#60169)
fix markers filter
remove workaround for #60018
fix build errors
markers: fix styles
vscode-xterm@3.9.0-beta3
remove layout trasher which seems unnecessary, #60031
perf - prevent layout trashing when remove/hiding parts splash
debug: simplify setting breakpoint session data
fixes #60018
Implement multiline search for #13155
minor polish
fix instantiation service using the wrong scope to create services
fix keybindings editor
hook in filter to problems tree
better fix for #60188
fix #60188
Added definition for addRemote
Missing comma in JSON
cached data for extensions, second try
Change throwable var name
include reference to the usefulness of the built-in reporting tool (#60025)
debugSession: simplify return types where not used
repl: better code grouping
repl: fix smoke test, make sure to get proper state when becomes visible
debug: make sure to dispose of all sesions on shutdown
fix #60247
repl: allow to inspect repl output of inactive sessions
move Promise back to TPromise in nfcall
debt - less TPromise usage
debt - less TPromise usage
debt - less TPromise usage
debt - less TPromise usage
add test for #60232
fix breadcrumbs keybinding select issue
Remove usage of TPromise from public editor API (#53526)
Migrate to native Promise in web worker related code (#53526)
:lipstick:
disable cached data for extensions #60168
Only remove actual schema resolution errors from JSON errors
Use ErrorCode in JSON Language Service schema resolution error handling
Show JSON schema resolution errors in status bar only
Replace markdown-named-headers with custom version
Support markdown link navigation when duplicate slugs exist
Add support for TS RenameTextSpan
Consider "search.useReplacePreview" setting in ReplaceAction
fix undo, redo, selectAll on macOS (#60040)
Stabilize active terminal APIs
adding ability to set checked state for menu item at registration (#60004)
fixes #60067
Reword description of "search.useReplacePreview" setting
Add pinning test for setting localResourceRoots
Adding pinning tests for vscode-resource in webviews
Add terminal.integrated.experimentalBufferImpl setting
Update xterm types
vscode-xterm@3.9.0-beta2
Increase max-width for find-widget
Add setting to allow to disable Replace Preview
Remove css vendor pefixes for transition and transform (#60050)
revert "exploration"
electron@2.0.11 (#60143)
sqlite - hook in next storage service to workbench (in memory only)
Handle keyboard events on the ‚ÄúOpen Settings‚Äù link
fix typo
fix #59966
expose label tuple in API, #56337
Added commands
sqlite - implement a way to join shutdown phase with a long running operation
first version of simple clipboard API, #217
fix list.focusFirst
adopt WorkbenchObjectTree in markers panel
wip: WorkbenchObjectTree
sqlite - first cut workspace storage service
update sqlite3.d.ts
comments
repl: minor fix
debug: minimal updates to repl title when repl is not visible
problems: proper rendering
Don't assign 'editor' label
more measurement prop...
problems: first render success!
Update status bar when opening a binary file as text (#59914)
wip: problems tree
prefix names with `prof-`, #59505
let modified border win over theme (for #26284)
less TPromise in editor/contrib
update ParameterInformation#label in extHostTypes.ts, #56337
Add border for dirty tabs (#59759)
add missing compile
update internal API to allow parameter label to be an offset-range of its the signature label, #56337
:lipstick:
sqlite - first cut storage service
Update links on README.md (#60100)
"Configure language specific settings" should reveal the edited line
Also respect useGlobalIgnoreFiles in file search, from PR #59717
Apply selection even when the items don't change
Makes Modified in scopes navigable
Settings editor - fix starting when no cached state exists
Settings editor - fix restoring cached state issues
Prevent "folder" settings picker from stealing focus on click
Send ctrl+k to shell on Windows
Adding pinning test for webview scripts disabled
Extract duplicated code
Add pinning test for webview html update
Improve test name
Add retrigger characters to SignatureHelpProvider
Allow scc providers hide commit input box.
Prefer const
Add APIs to git scc provider.
Formatting
Make sure we close old resource on ts server for path updates
Improve message on update imports prompt
Treat json5 as json in the markdown preview
Update md grammar
make actionbar support different trigger keys (#60000)
Wait for all editors to close before continuing tests
Improving webview test reliability and add test for preserve state on column change
Add missing registers
Bump vscode-ripgrep with cache download fix
Make webview test communication more timing stable
Improve naming and use proper (optional) types
Update markdown grammar
Make sure we dispose of webviews properly
perf - use IdleValue in suggest controller
Bump vscode-ripgrep with fixed build
debug: DebugSession.getLabel() clenaup
fix tests
debug: show dropdown in repl when there are multiple sessions
repl: readonyl input while no session active
repl: multiple trees per session
Removing dead code from
moved the rendering logic to a more appropiate method
made use of _register for disposables
:lipstick:
:lipstick:
make sure to register extension point early
sqlite - initial version of storage library
don't measure, just do...
debug: introduce replModel and move repl related methods inside it
outline - work around panel madness
Catch Throwable user editable
debug: keep repl elements per session
add missing compile
more promise removal
fix #59939
Add throwable to try/catch block
workbench.centeredLayoutAutoResize -> workbench.editor.centeredLayoutAutoResize
clean up
Remove unused var
Add test for restore scroll pos when retainContextWhenHidden is set
Adding retainContextWhenHidden test
Refactor our duplicated code
Add test for webview state persist
Add basic test for webview communication
Disable command uris in preview
Use await/async in tests
let -> const
var -> let
Workaround for misisng selection color in suggestEnabledInputs
Update ripgrep version, use new json output format
Use async/await in tests
√èSwitch tests to use await / async
Use async/await in tests
Use async/await in tests
enable dynamic menu on linux/windows (#59936)
markers: wip reduce marker model
add php try catch snippet
markers: wip remove filtering from model
introduce workbench.centeredLayoutAutoResize
markers: move fixes gathering outside the model
Stage empty last line removal when using stage line cmd
tree test: setChildren on expanded, unrevealed node
Revert "remove flex from splitview"
tree tests
tree test: setChildren on collapsed node
debugEditorModelManager: remove -range css classes, we use editor selection to highlight
Revert "Vertically align welcome checkbox with text"
Better align with "workbench.commandPalette.preserveInput" (#37932)
debug: polish color names for editor.stackFrameHighlightBackground
don't try to use non-existing tracker
list setRowLineHeight
tree twistie and contents 100% height
Add command to create branch from specific ref
Fire onDidHide only once (fixes #57852)
statusbar item highlight should start at window edge
Allow themeing of debug single step line highlight
update grammars
Split 'breakpointHasCondition' into two localized strings
debug: use debug scheme when parsing paths to uris
remove unused code
fixes #59950
Accept on with selection, work around all items becoming active (#57850)
Do not clear selection in single-select case (fixes #57850)
remove flex from splitview
use position relative for all split views
themes: TPromise -> Promise
tree: twistie rendering participant
:lipstick:
tree: missing disposeElement calls
Reset message in out-of-scope bot (fixes #58468)
fix #59364 -  Review #3
Not optional
Add option to only show Welcome page in empty workbench
avoid "NanTB" (for #50103)
tpromise => promise (for #53526)
Remove unused import
Removing or marking unused parameters
Enable noUnusedParameters in build scripts
Compile build in strict mode
Adding correct typings for event-stream this values
Remove some unused types and variables
Add explicit any typings for this
renamed variable to be pinned and added a check that data.payload is not null
Added link directly to main wiki (#59884)
Remove duplicated typescript dependency
Move some build specific packages into build
Remove unused gulp dev dependency
Switch to use standard @types/node types instead of our customized version
Switch to use `@types` for pump
Converting some `require` imports to `import from` imports
Less costly comparison
Add typings for emmet #59803
Switching to use @types where possible in build
Enable noImplicitAny in build
Enable strict null checks
Revert "themes: TPromise -> Promise"
Cleanup margin/padding
fix #59561
return of the dynamic menu (#59855)
debug: introduce debugConfigurationType context key
fix #59908
Focus interface overview (fixes #51983)
:lipstick: tests loading properly
themes: TPromise -> Promise
use FileDialogService with vscode APIs
less strict checking of rename locations, #58907
tree model: working!
fix compile error
data tree: first steps
outline - don't relayout when height didn't change
use measure util for font things
dom - use measure/modify to prevent layout trash in breadcrumbs
debug: some comments
move font info creation to the start of an animation frame
debug: clean up focus transations
Removed duplicate "the" from documentation.
Revert "clean up"
Preserve focus (fixes #51976)
clean up
perf - avoid layout trashing in breadcrumbs
tree: abstract tree
tree: rename
tree: perf
only have the n second timeout for prelaunch tasks that do not send an active event
tree: fix npe
tree: expose event
tree om: setChildren
tree object model tests
tree om: use start index
tree object model: first sketch
tree model: remove a few extra loops
tree: node.visible should be boolean
tree model: initial model recursive filtering
tree model: cleanup
debt - less TPromise usage
perf - don't compute config-context keys eagerly but on demand
#53526 Use Promise
fix alignment
debt - remove BufferPool because allocUnsafe already uses pooling
debt - don't delay extension host starting that much anymore, move (and fix) timer marks
#59861 Remove TPromise from extension management
#59861 Remove TPromise in Extensions
#53526 Use Promise
Getting closer to shared config #59803
Clarify git prune
Add git.fetchPrune to menus.menus.commandPalette
Remove duplicate blank lines at the start of some extension src files
Remove duplicate blank lines at the start of some files
SuggestEnabledInput - account for slightly transparent text selection, when matching native text selection
Remove use strict in extensions (part 2)
Remove use strict directives in main VS Code src (part 3)
Remove use strict directives in main vs code ts files (part 2)
Remove use strict directives in main vs code ts files
Remove use strict directives in extension code
Remove "use strict" directives in extension tests
Remove "use strict" directives in tests
Ensure that normal tsc compile still works
Clean up type inclusion logic
Revert including yazl types
Allow copying text from parameter hint widget
Import order
Prev/Next Sidebar View
Prev/Next Panel item
Track experiment id
Switch to use a few more @types packages instead of our custom versions
Try using @types for typings instead of our custom versions in src/typings
Adjust padding/margin so buttons line up
Add option to automatically stash changes before performing `git pull`
make sure `ensureLowerCaseVariants` has been called
better fix for test
do not use timeout
fix tests
Skip failing test
Add workaround some  completions unit tests failing with null access exceptions
Don't force update webview content when retainContextWhenHidden is set and contents have not changed
Vertically align welcome checkbox with text
#53526 Use Promise
Remove unused typings
Switch to use node module resolution
Update json server to use shared tsconfig
Use shared config for html server
Use shared config for css language features
Move configuration-editing to use shared tsconfig
Upgrade extension-editing extension to use shared tsconfig
Update html, css, andjson clients to use shared tsconfig
Change the git extension to use shared tsconfig
Update more extensions to use shared config
tree test: back to level 5
tree: collapsed visible node should still recurse when filtering
tree: fix filter & collapse
fix #59364 -  Review #2 - build failure fixed
#53526 Use Promise
:lipstick:
tree perf collapseall
perf - tweak defaultComparator
perf - pre-compute and cache lower case variants for label, sortText, and filterText
fuzzyScore - allow passing of lower-case variants of things, allow passing of start positions, move whitespace starts to completion model
remove console.log
- Use svg icon for record keys - Move clear action to search input
debug: tree clear focus and selection and focusing into input box in trees
Repeatedly seeing "Disable other keymaps" (fixes #55272)
fix #59364 -  Review #2
Off by default (#45853)
some more jsdoc
debt - remove suggest adapter and use CompletionItemProvider from modes.ts. Also fixes https://github.com/Microsoft/monaco-editor/issues/985
TPromise.join -> Promise.all
TPromise.join -> Promise.all
streamline APIs of chockidar and nsfw
TPromise.join -> Promise.all
Automated response for *as-designed (#42976)
debt - replace CompletionItem#overwriteBefore/After with CompletionItem#range
fix terminal test
debt - modes.ISuggestSupport becomes modes.CompletionItemProvider
fix settings state being persisted when it's closed while invisible
tree: update invisible node revealed count
tree test: refilter on load
list: fix scroll height issue
tree: recursive filter tests
:lipstick:
tree: more getNodeLocation tests
tree: getNodeLocation tests
debug: resolveConfigurationByProviders on restart
debt - one winjs promise less
perf - simplify cached data env var (enabled cached data for the extension host)
Remove synchronization
yarn lock
Ignore *out-of-scope
fix #59763
fix #59768
Do not open default keybindings by default
Make Open Keybindings File a primary action
different fix for #59733
fix #59752
optionally sign windows setup
more logging (for #59752)
build - auto release "exploration" builds
fix #59733
Update calendar
Revert overflow change and increase margin to show outline
fixes #59764
always restore grid, even on error (for #59752)
stop duplicating actions for tabs management when using macOS native tabs (#59793)
Removed duplicate "the" from documentation. (#59736)
Make sure the configs values are overriden properly
Onboard npm to use shared tsconfig
Onboard jake to use shared tsconfig
Onboard markdown to use shared tsconfig
Onboard vscode-api-tests to use shared tsconfig
Introduce a shared tsconfig for extensions
Enable no unused parameters
Enable no unused parameters in vscode-api tests
Enable noUnusedParameters in configurationHelper
Remove unused
Prefix unused with _
Use await for tests
Converting many test functions to use arrow functions
Convert test to use async
Convert test to use async
Convert to async
Revert "TPromise.join -> Promise.all"
Remove built-in toml basic language support
Simplify teterminal ID retry mechanism
Revert bad fix for unit test as part of TS 3.1
Build VS Code using TypeScript 3.1.1
fix #59364 -  Review #1
Adding pascalcase to snippet format
Adjust phrasing to sound more natural in CONTRIBUTING.md (#59749)
Remove TPromise usage in execution part
Remove TPromise usage in terminal part
TPromise.join -> Promise.all
feat: force mojave dark mode support on even though Electron is not built on the 10.14 SDK (#59742)
gulp-atom-electron@1.19.0
fix windows continuous build
vscode-xterm@3.9.0-beta1
Revert "vscode-xterm@3.9.0-beta1"
debt - use readonly instead of getter
more shared snippets
debt - make actions return a Thenable
update continuous build
prevent old yarn usage
bump gulp-atom-electron
debt - drop getActions() support for editors
Off by default (fixes #37932)
Prefill quick open (#55752)
persist settings target and search query
fix resources.test failures
implement [#53133](https://github.com/Microsoft/vscode/issues/53133)
debug: fix bad promise refactoring
QuickPickItem.alwaysShow (#59232)
debug: TPromise.wrapError -> promise.reject
debt - some TPromise removal in editor/contrib
vscode-xterm@3.9.0-beta1
explorer: TPromise.wrap -> Promise.resolve, TPromise.wrapError -> Promise.reject
debug: new TPromise -> new Promise
debt - lazy clipboard service
workbench/browser: TPromise.as -> Promise.resolve
register label service in shell
explorer: TPromise.as -> Promise.resolve
Add 'a11ymas' command
Added actions to the 'No Settings-Found'-message
debug: TPromise.as -> Promise.resolve
debt - slice once, loop once, sort once instead of three loops, three new arrays, and two sorts
debt - use native promise in async#always
debt - use statusbar service for global progress message
activity titile should be manage
linux build: limit child concurrency
linux build: use tmp for home
insta - use lazy instantiation on main side
fix windows tests #58985
insta - make sure to inherit lazyness
debt - less winjs-promise usage
debt - less TPromise usage
fix #58985
update darwin node and yarn versions
update linux build node and yarn versions
Running extensions editor: Convert workbench editor actions to commands
fix #59469
debt - command service uses real promise
debt - remove TPromise from opener service
Revert "build script: log dowload finished"
debt - remove TPromise from bulk edit services
Revert "debt - remove declaration for WinJS.Promise#any"
debt - let sequence and first use native promises
debt - simplify asThenable
debt - replace asThenable with Promise.resolve
use python 2 for builds
debt - asThenable returns a native promise
debt - remove declaration for WinJS.Promise#any
#59346 Use EditorTitle menu id
#59346 Convert keyboard preferences editor actions to commands
allow undefined publisher
compare fsPaths instead of a fsPath and a path
insta - implement set trap
fix telemetry
insta - use the right service...
instat - use IdleValue and Proxy to delay service creations
don't use performance.now
use proper proxy declaration
perf - use idle callback for lifecycle eventually contributions
debt - move tracing flag up and some tweaks
use IdleValue to prevent overly eager service creation
debt - move runWhenIdle back to async, add IdleValue<T>
:lipstick:
better instantiation tracing
add tracing to instantiation service
:lipstick:
debt - use TypeScript3 feature to nuke IFunctionSignature1 and its overloads
debt - move graph close to its only user
debt - remove unsued code
better fix for #8038
[StandaloneEditor] Initialize static field 'SCHEME'
October changes (#59712)
fix #59655
Add git.fetchPrune
catch node 9 usage
update yarn.lock files to use integrity
update build node and yarn for linux
use hosted build agents for linux builds
refactor code\windows: Add FileInputs, IEmptyWindowBackupInfo
complete IWatcherChannel
add NewWindowOptions
add FileDialogService
labelservice: match prefix, take longest match
polish
build script: log dowload finished
Version bump
Update swift integration test results.
node-pty@0.7.8
Use textmate/swift.tmbundle for Swift syntax.
Add missing return type
Only sdetect shell for the current OS
fix #59623
move sidebar location in sidebar title area context menu
Panel: remove the "toggle location" action in the panel header and move it to menu
mainThreadDebugService: adopt to success return result of debugService.startDebugging
debug: some comments
startDebugging method in vscode return true only when start is successful
Restructuring DebugService.startDebugging and DebugService.createSession
fixes #53325
Update doc
Activity action should have a name 'activity'
make sure to always prevent default when clicking links
fixes #47141
revert "files.guessableEncodings"
Signal that TS Server has loaded succesfully when any error event is received
Bump workspaceContains timeout - #34711
Pick up TS 3.1 final
update inno updater
Support odd indentation sizes (fixes #17639)
Do not read Octicons (fixes #58096)
[json] update service (fixes #59470)
remove wrong message
'Type to narrow down results' only for QuickPick (fixes #58105)
point macos users failing update to our github link
propagate update service errors to UI
debug: fire onDidNewSession when a session restarts
fixes #56136
fix #59539
fix #59538
Add leading whitespace offset to lookup offset (fixes #59343) (#59537)
fix #59517
fix #59486
remove warnings
#59517 Use absolute path
fix #59533
Register listeners early (fixes #58235)
tabs - only draw border on one side
:lipstick: variable name
#59112 Return file URI
#59112 Return string
#59112 Return URI
#59112 Return the downloaded location
use .txt extension (for #59302)
fixes #59485
update distro
tree test
update distro
fix #59507
Revert "cancelled git.checkout"
improve setting description
use "readonly"
Force search provider ext to activate on search
Add better error message about disallowed rename of directory in import path
Use rename cancellation token for file rename request to ts server
Ensure search cancel takes effect immediately, and still works when search failed
Don't rely on updatePathOnFileMove for path renames
rebase and remove check in catch
Return whether git.checkout succeeded
Make sure javascript.updateImportsOnFileMove.enabled also has enum descriptions
Use markdownEnumDescription for all js/ts enums
Return void instead of comment from editComment, fixes #59460
Disable path renames on TS 3.1
Remove unneeded any cast
list view: request scrollable element on next animation frame
releaseNotesUrl may be undefined on oss builds
add refilter perf stats
add todo
working filter demo
tree: more filter testing
tree model: refilter
tree: collapse and expand should refilter
Use better name for insertParamtersForFunctionCall setting
Pick up new TS insiders
Remove unnecessary svgs after settings editor moved to electron-browser
improve context view layout
Add focus offset for buttons
prevent portable in windows setup
fix #19400
Update distro
Refer to message for a11y (#58105)
fixes #59228
fixes #59342
label: authority prefix
changes to visible channel (code review)
debug:  shutdown session symetric to initialize
Handle relative paths (#58694)
debug: clean up activation events
build: sequentialize extension packaging
#59209 Update output channel when visible
fix reporter
build
fixes #59451
fixes #58818
canSelectMany can be undefined (#51824)
update tsconfig.json to escape node.d.ts hell
fix #59302
better fix for #58694
smoke test: fix debug failing test
fix #58694
fixes #59430
fix #59274
fix #59407
fix #59351
Do not change extensionDevelopmentLocation letter casing
fix  #59333
fix NPE for last edit location
fix #59370
fix #59332
fix #35935
more on #59381
fix #59341
fix #59381
add missing svg files
Respect the no-icons class in suggestWidget Microsoft/vscode#57380
Added tags for azure py packages in requirements.txt (#59282)
Pick up new TS insiders
Changed terminal split warn to info
Use latest applicationinsights in extensions too
Update appinsights to latest version
Use SelectionClipboard contribution in suggestEnabledInput (#59390)
revert changes
no source maps
#59209 Flush the content before revealing the channel
styles for diff on markdown preview (#59289)
#57935 Show recording badge
fixes #58541
wip: first filter test
diff editor is action free (for #59346)
wip: propagate filter result to tree nodes
convert diff actions to commands (for #59346)
#59322 Remove the options
tree: introduce filter
#59082 Reset filter focus on dispose
tree and list remove getAriaRole since VoiceOver only properly works for tree / treeitem combination
fixes #59331
debug service: minor polish
list: properly assign role to every list item
fix #59293
fix #59251
fix #55397
Bump node2 #57954
Rename previewOptions
Revert vscode-xterm update
Run oss tool
Use less than for TS version checks instead of inverting greater than checks
Better fix for #58518 to avoid possible duplicated configure requests
Don't cache file config options until we succesfully complete a request
Handle Run Active when terminal executible is WSL (#59136)
Don't send  @ as trigger character for ts 3.1
Update css language service in html
Update folding in commenting mode.
Minimum size for new split terminals (#59140)
vscode-xterm@3.8.0-beta5
Update CSS service
fix for: Cannot read property 'forEach' of null fixes #59227
update built-in dark themes as menus look pale (#59123)
:lipstick: "Copy Relative Path"
typing issue & null check in window.ts
Revisit chokidars multi-root handling. fixes #57256
restrictGuessedEncodings => guessableEncodings
list focus controller do not focus into elements that have tabIndex -1
Revisit `QuickPickItem.shouldAlwaysShow` (#59232)
tree getAriaRole is required
debt - SuggestionType -> SuggestionKind
undo fix tests to fix tests
related to #58966
breakpoint view adopt aria role
list aria role
tree accessibilityProvider.getAriaRole
fixes #58966
ignore keywords when sorting by locality #32170
add shared snippet file, add copyright header statement
fix #59044
fixes #58057
:lipstick: integration tests
merge configuration registries again, don't use whenIdle for contributions
Add more trace statements
fixes #47141
dirty diff: fix whitespace
use actual word range and block ranges to compute distance
fixes #59218
fix #59216
fix tests
try-catch for build stats telemetry
debt - move runWhenIdle into browser-layer because it's a browser thing
git init: show picker earlier
use block count instead of pure line distance
use Object.create(null)...
:lipstick:
fixes #58968
add locality bonus setting
cancelled git.checkout
Don't open debug panel on run
fix NaN issues
fix #59139
#58965 Do not reinstall the extension
remove todo
use word by lines only
notifications - secondary prompts should close too unless keepOpen is provided
:lipstick:
:lipstick:
fix #45749
address one issue of #59063
Check if the selection is empty
:lipstick:
remove todo
remove collapse all action
Prevent copying an empty string by accident
Adding missed dependency libxss1
Upgrade appinsights (#58999)
Add more terminal link test cases
Search provider - wait for all * activations before searching with provider
Use ProviderResult for search providers
feat(git): add display handling of files added by git add -N
Rename the GUI command title (#55397)
add toml fixes: #51704 (#59089)
Addd option to open markdown preview links in markdown preview
Remove onCommand from markdown preview
Reduce usage of postCommand in markdown preview
Added special handling of link over tooltip for DOM renderer (#59060)
 Wait to signal to the extHostTerminalService that the terminal is opened until the terminal has a name. (#58983)
Announce results of extension search (#59128)
Remove exec path from process argv reported by issue reporter
Use detailed text for reload button in extension editor (#59074)
Added new style to handle overflow behavior with find options (#58990)
vscode-xterm@3.8.0-beta4
Remove Delayer.fire
Use a notification for the Screen Reader Mode question instead of custom UI
debug: cleanup restart
Announce extension install,uninstall,update state (#59077)
fix global access
add word distance (by line) and rank suggestions by that
fix #24394
debt - in suggest use cancellation token instead of cancelable promise
add getWordRanges call to worker service
fix #58924
debug: task method renaming
debug: debug anyway simplifcation
debug: indentation polish
fix middle mouse click in quick open
Tree and list onMiddleMouseClick (#59106)
perf - use `runWhenIdle` for workbench contributions that are registered for phase: eventually
tree: collapse all
fix expand tree tests
Iterator.fromArray
debug: do not listen on task active event not needed
remove console log, #58929
requestIdle - less warning
implement chooseTab when connecting to the renderer, #58929
use requestIdleCallback for Eventually-lifecyclephase
fix compile
Conditional breakpoint prompt should offer to enable (not disable) breakpoints if breakpoint is already disabled
#58469 Move view descriptor collection to view service
Allow to navigate to last edit location (#59100)
fail more graceful when a process cannot be profiled, #58929
fixes #58589
modified languageScopeSchema,globalSchema to allow prefix of type array. modified _parseSnippet to push new snippet for each prefix (or for a single one)
debug hover: show horizontal scroll for tree
fix compile error
configure snippets offers to create workspace snippets, #8102
insert snippet groups by extension, user, and workspace snippets, #8102
add SnippetSource #8102
debug: there can be a session change event without a stack frame changing, thus we need to listen on both
tab complete - also accept snippets
debug issues to isidorn
40.000!
:lipstick:
fix #38695
debt - avoid canHandleResource when restoring backups on startup
Scope enum for settings more closely
Stop updating setting on blur
Settings editor - fix shadow layout
Settings editor - fix 'no results' layout
Change behavior for non-text inputs
Pick up new TS insiders
Remove redundant async
add DA Tracker API; fixes #55945
Check the path for spaces before sending. Avoids filenames to be interpreted as file and arguments (#56966)
restrict adjusting title for menubar to windows/linux
fix arg order in contextMenuHandler
Don't treat cancellation as an error
Make js/ts quickfix-all action last item in group
Add output channel for telemetry.log file (#58846)
Dont update disabled extensions  (#58723)
code review
first cut on project level snippets #8102
chickodarservice: setVerboseLogging & stop
more jsdoc related to #1800
move api out of proposed, #1800
add api tests for #1800
prep for #8102
debug: polish function breakpoint ux
git: cache isFreshRepository
scm: memoize count
fixes #57274
fixes #55313
Change to options with force parameter
throw if DA cannot be created
skip suggestions with additional edits when cycling, #28215
run fallback command when tab completion doesn't change text #28215
check constraints when registering debugProvider
webpack - fix search-rg regression
Use webpack also for small built-in extensions
Revert "Do not clear selection in single-select case (fixes #57850)"
[json] update service (fixes #58956)
updated lock files
better error printing when vsce fails
update vscode-extension-telemetry
Minor tweaks
Implement #49215
fixes #15581
less TPromise.as/wrap/wrapError
debug: fix faded color contrast in launch.json
git: expose repository ui state
fix webpack entries for merge-conflict and search-rg
[json] remove console logs
change panel toggle logic (for #19400) (#59019)
fix #59018
Update file icons to show logo on small versions (#58986)
update distro
Tweak survey message
Don't potentially allow showing survey multiple times if user does not interact with a previously shown survey
Add check js survey
Use results from _register directly
Remove use strict
Make sure we trace events from tsserver
Create uri from string correctly for ts server log
Trigger parameter hints when using insertParametersForFunctionCalls in js/ts
Support findFiles with a non-file URI workspace
Update distro
Refactor for simplicity
Show experimental prompt only once
use DAP 1.32.0
node-debug@1.28.2
prioritize tokens over brackets in find fixes #40658
Update to latest oniguruma
support EH based DAs
Include toggleMaximizedPanel in commandsToSkipShell
Extension Search Experiments
Don't set en_US.UTF-8 on Windows when setLocale is false
Update to latest css grammar for #57407
dismiss context menus on window focus lost (#58932)
Avoid shipping unnecessary files
Update to latest loader
Avoid warning from URI.parse when url is file path
Add keybindings to terminal find next and previous  (#58850)
Added a try catch around pty spawn to handle case where the file passed into spawn does not exist (#58912)
debug: state should take the focsued thread into account
Bump node2
update css/html/json dependencies and webpack cleanup (fixes #57431, fixes #58417)
[php] add webpack support #57680
uri - throw when having an uri without scheme (still warn in the extension host)
Register channels after delay
fixes #56504
debugActionsWidget -> debugToolbar
fixes #54407
fix #58888 and fix a little mem leak
git: handle deleted conflicts
webpack for search-rg, #57680
webpack merge-conflict #57680
use enumDescriptions instead of markdownEnumDescriptions
Improve labels
make tabCompletion be 'on' | 'off' | 'onlySnippets', only compute word end key when tab completion is enabled
fix build
move tabCompletion setting to editor
rename commands
add shy-flag that controls when/how the suggest widget shows, improve triggerSuggatAndAcceptBest logic works
fixes #50481
debug: Model -> DebugModel, IModel -> IDebugModel
fixes #49902
debug session become inactive when shutdown. Also more precise listeners for session changes
debug.ts -> debugSmoke.ts to avoid duplicate names
debug: do not force fire onDidChangeState on stop session
fix bad usage of setTimeout()
fixes #49723
missing await
better fix #58864
never use test.only, use --glob, --run, or --runGlob instead
support  boolean, string, and number types for `config.<setting>` context keys, #30845
towards #30845
some jsdoc for #1800
:lipstick: #1800
rename changeLanguage to setTextDocumentLanguage, #1800
make changeLanguage return a TextDocument, #1800
update vsce ignore file #57680
[html] update service, fix webpackaging
support  boolean, string, and number types for `config.<setting>` context keys, #30845
towards #30845
some jsdoc for #1800
:lipstick: #1800
rename changeLanguage to setTextDocumentLanguage, #1800
make changeLanguage return a TextDocument, #1800
update vsce ignore file #57680
fix #25600
fix #58864
fix ##43543
fix #51002
tab completion based on word ends
context menus on activity bar should appear in consistent place fixes #57658
Add test
reduce submenu indicator size on linux fixes #58873
Update appinsights in built in extensions
Use more reliable signal for ts project load complete
Add support for deleting comments, #58078
Show loading indicator while js/ts language features are first being initialized
Center the titlebar if possible fixes #56273 fixes #55438
Support typescript's fileToRename
Pick up support for TS's new triggerSpan property on rename
Use more strict type in _openReference
improve markdown preview scroll sync (#58852)
check debugServer property first; improved fix for #58847
fix legacy adapterExecutableCommand; fixes #58847
[html] no longer pack vscode
[html] update dependencies
[html] embedded folding ranges computed too many times (fixes #47712)
[html] test for #58435
file formater should display the authority if there is one
fixes #42909
Support use of category with other views (#58776)
Reduce language pack checks (#58563)
labelService getUriLabel noPrefix option
label: getUriLabel get an option bag since it is cleaner
fixes #39048
change active text editor logic to ignore blur events (#58887)
#23378 Set title for when column
Remove the limit for expansion
fix formatting mess caused by 'move to file'
fix snippet theme colors #32484
debug: only send function breakpoint to session that support them
run to cursor: listen on state change event of a session. Custom event does not contain stopped or exit events any more
debug: do not create unkown sources with no uri scheme
debugSession: _raw -> raw, also remove nullCapabilities
proper quote env vars for cmd.exe; fixes #50302
debugSession.dispose -> debugSession.shutdown
fixes #18807
fixes #18673
context menus - fix instantiation service warning
fixes #58820
move to separate file
skip snippets when cycling through other suggestions
fix #58849
fix #58668
fix #58807
ipc: fix electron ipc disconnect event
fix compile errors
first cut of suggest cycling via tab
More robust handling of invalid script values
Bump node2
Tests for #55790
refactor menu theming to be cleaner and remove css colors (#58568)
fix GDPR annotations
Make sure we don't log an exception for cancelled ts requests while server is still coming online
Make we always complete canceled ts server requests properly
#57935 - Single esc to come out of recording mode. - Update placeholders and aria labels
move focus to replace input if the focus is already in find input.
Added find options to terminal find widget with keybindings (#58457)
:lipstick: from #57380
Keeping find input value unchanged on replace action if find input is active, fixes #41027
Add support for editing comments, #58078
fix #57897 tasks cache not refreshed when workspace folder change
Pick up ts 3.1-rc
fix #58186
:lipstick:
fix #58736
fix #58801
fix #57933
check only dot at the end of the branch
Use the fast variant of TextEditor.setDecorations
ITokenizationService unnecessary
fix #32484
debt - remove SnippetType
add telemetry to know often completions are multi line, #57093
fixes #58642
make sure to use fsPath when populating the extension index #55340
fix #48748
fix #58799
fix #58798
update to marked 0.5.0, #56749
jsp => HTML icon
Provide file icons per file type (#58795)
ipc: warn about duplicate client ids
ipc: pass client ids to client routers
file explorer issues auto assign to isidorn
Enter Unresponsive state if at least 2 request are pending (#58672)
:lipstick: view actions
make startDebugging return a proper error; fixes #53874
Tests for extensionsView.ts
support env vars when creating a DA; fixes #56646
better doc for DebugConfigurationProvider.provideDebugAdapter
pass config to adapterExecutableCommand; fixes #45220
Telemetry for #34711 Capture workspaceContainsTimeout numbers
SelectBox: Lazy list create on open. Pass 1 addressing #58236 (#58722)
Emmet helper to fix #56082
Improvements to screenreader support in suggest widget #40597 (#58559)
Wait to call registerOnDataListener until the terminal id has been set (#58644)
Extension host terminal onData events need to be queued when the terminal ID is not yet set (#58627)
promises in ITokenizationRegistry
Clear bracket matching cached data when switching models (#58632)
fixes #53942
fixes #47743
scm status bar tracks open file
Add a Start Debugging Extension Host action in Runtime Extensions
scm.acceptInput command
:lipstick:
notifications - fix keepOpen not working (fix #58689)
Add documentation for --force argument
fixes #25281
Return error if extension to uninstall is not found
fix Microsoft/monaco-editor/#879
Simplify label and do not show the folder name
git: getBranch should resolve @ name syntax
git: getConfig should trim result
Update tsconfig.schema.json (#58582)
Base terminal bg on panel bg again
Microsoft online service
Pick up new distro version
Use async import for registering update paths
Register a single workspacesymbol provider for js/ts
Avoid uri parse warnings for markdown uris
remove meta.selector color rule (for #56813)
always show create a branch button
Refactoring to create TS Server object
improve error handling for socket DA
fixes #58603
Make ignored folders darker
fixes #50736
:lipstick:
:lipstick:
:lipstick:
cleanup git push force
:lipstick:
fix compilation errors
:lipstick:
html: fix test script
Git rebase detection (#57651)
:lipstick:
support remove event in LoadedScriptes; fixes #57546
breadcrumbs - add telemetry for select and open scenarios.
snippets - :lipstick:
fixing web packing
support to return null from resolveDebugConfiguration; fixes #54213
Focus output panel
Revert "Focus output panel"
Focus output panel
fix #58592
Introduce --force arg to install extension without prompts
fix #36951
webpack - use `mainFields: ['module', 'main']` for everyone
Clean up: remove background colour option from composite bar actions
debt - nicer regex for fwd and bwd slashes
remove proposed api usage
Dervie the color while registering
Clean up: Panel provides backgrond and foreground and Activity bar provides foreground
linux: set desktopName for url handling
replace url protocol in code-url-handler
cleanup linux gulpfile
fix #30770
fix #58520
Customizable menu seperator color (#58498)
SearchView#onQueryChanged :lipstick:
Re #27083. Alt+L should still work for selection endcolumn 1.
Re #27083. Update search scope once find widget becomes visible.
Update list focus background to be darker for cc ratio
Update list colors for our light theme to pass color contrast ratio
Update list focus background to be darker for cc ratio
Update list colors for our light theme to pass color contrast ratio
Re #27083. Find in selection should work even if the selection is a single line.
:lipstick:
better isElectron check
Vertically center actions in high contrast mode
fix mouse event typo for menu focus
fixes #58446
Prevent selection on labels in issue reporter, fixes #46843
Undo revert of markdown grammar
Check the correct previous text for suggestions
Adjust background position for decorations
Use webpack for all big extensions #57680
Re #46978. Add command for retriggering word highlight if it is not working.
update message in the out-of-scope bot
fixes #52531 (#58467)
fix #58027
Remove activityBarItem.activeForeground  reuse activitybar.foreground
fix #57428
git: fetch from all remotes
introduce git.fetchOnPull
fixes #39307
:lipstick: commit empty
Customising activity bar icon colors
fix #55627
fix missing resource
fix #35935
:lipstick:
fix #58494
Simplify AbstractCodeEditorService implementation
fix #53617
add copy relative path as separate item like in other IDEs (#57602)
:lipstick:
fixes #52037
fix #29553
fix #31619
:lipstick:
Simplifications in ModelDecorationOverviewRulerOptions
Do not leak _resolvedColor
Simplify usage of IModelDecorationOverviewRulerOptions
Use null when a decoration does not use overviewRuler
Use null when decoration options are not defined
fix #14638
fix smoketests
fix #58267
remove unused CSS
Clarify shell args
Sort the feature requests by votes
fix #36674
add compilation leftover
Allow folding icons to resize with editor.fontSize
AllPass F11 to vscode's keybinding system
Remove unused import
change GDPR annotation to account for the quirks in our pipeline
correcting GDPR annotations
Update setting description to fix #57869
Update setting description to fix #57870
Update the drag into terminal path used to be the fsPath (#58460)
fixes #53479
simplify rawDebugSession
fix DA error message
reset ELECTRON_RUN_AS_NODE properly
fix yarn.lock change
Show HTML setting descriptions as markdown, remove wrapAttributesIndentSize from #55743
Add missing access keys (mnemonics) for menu items (#58412)
Update yarn.lock from #52119
Split useCodeSnippetsOnMethodSuggest into js and ts specific settings
Reject renames with string message directly
Catch errors on navto requests
Show error early on invalid rename in js/ts
update out-of-scope bot message
Make sure lower case paths in a consistent way
Move OnEnterRule.oneLineAboveText to proposed API to respect API process (#58440)
Reimplement word part operations (#53899)
Improve test names
smoke: dont open dev tools on verbose
remove cp
smoke: cleanup workspaceOrFolder
smoke: cleanup multiroot tests
Update Electron to 2.0.9 (#58382)
should not refresh children which are collapsed
debt - replace winjs.promise#join with promise#all
ignore layout info when developing an extension, #55959
don't save parts layout when developing extensions, #55959
Add tests for oneLineAboveText and consolidate rules
fix #56245
Adding electron ARM and ARM64 tasks
debt - less WinJS.Promise usage
debt - less WinJS.Promise usage
fix #47842
fix #47842
Have the schema always propose as default the current vs code version
fix #48051
don't update markers when there is no real change, #57875
fix #42968
git: mergebase is a readonly operation
better error handling when calling prep-rename, #58394
move rejectReason into its own type,  #58394
debt - create native promise instead of WinJS.Promise
:dancing_men: remove WinJS.Promise#cancel and cancel callback #56137
remove remaining users of cancel and cancel-callback, #56137
qick open - tweak delay and cancellation further
goto symbol - proper cancellation and editor change handling
Cleanup
Show separate error when cannot connect to marketplace than when no extensions are found #57901
Initial work on signature help context (#58135)
fixes #58306
fixes #53006 #57604
Remove unused param
Change behavior of jt/ts jsdoc completions
Rename `javascript.nameSuggestions` to `javascript.suggest.names`
Add setting to disable all path based  sugestions in js/ts
Rename  typescript.autoImportSuggestions.enabled and allow it to be applied to js or ts separately
Rename `typescript.suggestions.enabled` to `typescript.suggest.enabled` to be more consistent with other extensions
Split suggestions.enabled into js and ts specific settings
add missing mnemonic for breadcrumbs
Only wrap rename request in try catch
New config to turn off TypeScript autocomplete suggestions (#58011)
Disable all commit characters when in spread contexts
Update editor widget bg color for light theme as well
vscode-xterm@3.8.0-beta2
adding issue labels
eslintrc: Mark as root config
Re #55990.
webview - change context keys away from DOM focus/blur (#58333)
Resolved conflict
Update README.md
fix #57984
remove last TPromise ref from ipc
remove last remaining TPromise from ipc.cp
remove TPromise from ipc.net
remove TPromise from ipc.ts
remove empty cancel callback from promise constructions #56137
assert unhandled rejection behaviour, #56137
DebugSession refactoring
missing git api call forwarding
rephrase
fix Microsoft/monaco-editor/issues/951
fix #58344
fix #58218
debt - let extfs.watch() return IDisposable
fix #58064
debt - implement cancellation in quick open universally
fix #55024
grow picker when nodes expand/collapse, #57437
fix #58228
bootstrap - move workbench.js to electron-code
add workbench configuration option for minimap opacity
Settings editor - avoid unnecessary renders, don't select text when "Show modified" is clicked
Settings editor - faster model creation and transitioning to search
Add support for force push and force-with-lease
fixed no user.email/user.name error message order
Reset when content is removed
Settings editor - faster setting count indicators in search
Settings editor - avoid unnecessary render
Settings editor - remove unnecessary theme listener
Settings editor - better way to listen to configuration group changes
Delegate js/ts code lenses back to vs code
Settings editor - fix changing scopes while a setting is focused
Use correct window on update scroll
Build with TS 3.0.3
Settings editor - use SettingsEditorOptions.query
centralize EH check into one place
Update editor widget bg color to be the same as the quick pick
fix typo
Throttle code action auto trigger (#58104)
Re #56886. Add test cases for lines with only whitespaces.
Try to keep one blank line after markdown block element folds
Allow folding of html blocks in markdown files
fixes #57786 (#58208)
another attempt at ASAR
resolves #56274
#57693 for find widget.
fix ASAR path again
Change comment widget collapse icon to 'x', fix hover text
fixes issue with menu mnemonics displaying raw html
fixes #58132
fix ASAR for windows
fix bootstrap issues
#58127 do not reset when there is no content
check for whitespace character when checking if key event produces printable char, #58079
fix #56638
debt - more readonly-ness
#58127 Watch by polling and checking etags
@ts-check for bootstrap JS files
Disable open event (#58124)
better height for breadcrumbs picker, #57437
fix ASAR bootstrap issue
Move log actions to output actions
no user.email/user.name error message now shows current values
Simplify the loading of the loader in the renderer processes
Cleanup bootstrap files (#58171)
Remote getLogLocation API
Ability to create log file channels from extension host
Use backup channels when spdlog fails and log telemetry
fix #58067
bundle stats - include all extensions
debt - cleanup some of async.ts
bundle stats - include commit
:dancing_men: remove asWinJSPromise #56137
:dancing_men: remove wireCancellationToken #56137
Add smarter filename suggestions, #57528 (#58009)
Mark events readonly
#57618 Cancelling the model update should reset the model update flag
:lipstick:
Add push option in createOutputChannel API
add push/pull option for output channels
Use more const enums
spdlog: set flush interval to 500ms
Do not crash if logger cannot be created
add more markdown extensions (#58072)
Use const enums (to inline their values in JS)
#56137 Remove wireCancellationToken from Extension editor
bundle stats: JSON stringify before sending data
Use some
Treat `;` as a commit character in js/ts
build stats - send one object with size and count properties
remove cancelableThen, overload timeout
Update yarn lock file
bump spdlog version that has the fix
Remove forwarding of cancel via winjs promises in rpcProtocol (#56137)
debt - remove TPromise from ExtHostDebug
remove bad return
fixes #53520
webpack - inline vscode-nls for our extensions
add missing vscode-nls updates
Remove WinJS.Promise#cancel usage (#56137)
node-debug@1.28.1
upgrade to DAP 1.32.0-pre.0
 debt - remove TPromise from ExtHostSCM and MainThreadSCM
adopt vscode-nls 4.0.0
add scheme filter to getLastActiveFile
debt - remove TPromise from ExtHostUrls
debt - remove TPromise from ExtHostTaskShape
Clean-up
debt - remove TPromise from ExtHostQuickOpenShape#$validateInput
debt - remove TPromise from ExtHostTree and MainThreadTree
debt - remove TPromise from ExtHostFileSystemEventServiceShape#$onWillRename
debt - simple removal of asWinJsPromise
fixes #58016
Do not clear selection in single-select case (fixes #57850)
bundle stats, rename event, tweak gdpr comment
Remove usage of ctor cancel in TPromise (#56137)
Remove TValueCallback from monaco.d.ts
webpack configuration editing extension, #57680
Better deprecate message
remove WinJS.Promise#timeout, #57866
remove cancellation wiring from treeView
app insights challanges
Webpack friendly (#57679)
fix #57661
fix #57997
node-pty@v0.7.7
Remove stub TPromise cancel handler
Remove leftover DiskSearch reference in extHostMain
Add nicer activation description to "Running extensions" editor
Allow folding fenced code blocks in md
Use configured excludes for workspaceContains activationEvent
update editor.copyWithSyntaxHighlighting description.
Copy with syntax highlighting command should always work
use editor.copyWithSyntaxHighlighting.
vscode-xterm@3.8.0-beta1
Updated the parameter descriptions based on feedback
For #34711 - run search for 5s, if it times out, activate the extension anyway
auto close eletric characters when necessary.
Don't re-encode webview source uri
Use providedCodeActionKinds to avoid calling providers that we know will not return actions of interest
Make open log file action independent of schema
#57330 - add details to suggestFontSize/suggestLineHeight to make it more clear
Try interuprting getErr requests for user actions
Use events on Reader instead of callbacks
Don't try restarting ts server after extension deactivation
Mark required properties as required on comments providers
:lipstick:
Remove usage of asWinJSPromise from comment service, #56137
Work around #57452 by allowing a raw string for terminal.integrated.shellArgs.windows
Webpack markdown extension
#57378 - add keybinding to settings context button title
remove usages of TPromise.timeout
Do not convert extensionTestsPath to URI
Use URIs instead of strings while passing environment to Extensionhost
Only call setEndPosition for non-hint markers
try different stats submission
adopt preLaunchTask type change; fixes #57945
Do not normalize paths (fixes #57475)
:lipstick:
more ipc tests
more ipc tests
event.once should beware of sync fires
ipc tests
ipc.test: first steps
event: once should beware of sync events
ipc.test -> ipc.cp.test
Simplify word operations tests
Simplify word part operation tests
Simplify tests
fix #57490
use non workspace extensions
fix #46538
Use webpack (#57680)
debt: cleanup DebugService and DebugSession
debt: improve debug abstraction naming
use CancellationToken over cancel-callback and cancel-calls
debt - introduce and use sanitizeFilePath (#18837)
less WinJS.Promise#cancel-callback, #56137
use vsce 1.48.0
use cancelation token instead of winjs promise cancel callback
Remove usage of TPromise.timeout (#57866)
Reduce usage of asWinJsPromise
add option for input validation foreground color (#57734)
debt - More precise typings
Exthost Output channels: generate id on the renderer side
Remove usage of wireCancellationToken where the promise cannot be cancelled anyways
debt: clean up DA error handling; fixes #57810
less asWinJsPromise usage, #56137
debt - quick outline cancellation token
debt - less asWinJsPromise-usage, #56137
debt - less asWinJsPromise-usage, #56137
debt - less asWinJsPromise-usage, #56137
debt - less asWinJsPromise-usage, #56137
debt - less asWinJSPromise-usage, #56137
debt - less asWinJsPromise-usage
tweak event name, add GDPR comment
debt - less asWinJsPromise #56137
ipc.cp: support cancellation tokens
Webpack friendly (#57679)
fix #57845
ipc.cp: use sets
ipc: ChannelServer supports cancellation tokens
ipc: ChannelClient supports CancellationTokens
ipc: native uninitializedPromise
Remove WinJS.Promise#cancel usage (#56137)
ipc: strict typing
ipc: use CancelablePromise
ipc.cp: use maps
Make text darker to work on selected background color
Update color to meet color contrast ratio
#57693 for serach viewlet
add markdown list folding, #57104 (#57899)
Add GDPR annotation for typescript-language-features/languageserviceerrorresponse (#57182)
Make sort icon 1px smaller so there's a gap for outline focus
Make keybindings.json link brighter when in focus
Update outline color to be slightly brighter
Build using ts 3.0 (#57906)
Don't auto expand decorate marker hint range
Use diamond for comment affordance to align with pull request file decorations.
- Remove windowId from IInitData - Send exthost logs location from renderer - IExtensionService: Expose an API to get exthost logs location
fix map usage
Remove usage of wireCancellationToken (#56137)
Reduce implicit usage of Promise.cancel() (#56137)
remove wireCancellationToken (#56137)
more TPromise.timeout() cleanup (#57866)
debt - less TPromise.timeout (for #57866)
debt: clean up sessions IDs
Update editor walkthrough (#56200)
Update editor walkthrough to latest synatx
Limiting args.text to unicode chars
debt - make file watcher verbose output readable in terminal
Reduce usage of TPromise in extHost.protocol
add baseFolder to RelativePattern
debt - use Thenable in ExtHostFileSystemShape and in FileSystemProvider
Adopt CancellationToken in ExtHostLanguageFeaturesShape
add proposed api for file system open/close and read/write, #41985
#57618 Enable logging output channels
#57618: ExtHost: Implement writable output channels using spdlog
debt: ipc cleanup
debt: ipc use maps
cleanup ipc
Add support for CancellationToken as last argument in RPC communication
debt - less promise construction
stats - send telemetry event about bundle size and file count in extensions
stop fs.realpath when opening so that symlinks are left intact (fixes #18837)
debt - use Promise#race instead of TPromise#any
debt: structure debugService logically
move telemetry out of way
done with done, #57695
use vsce packagedDependencies
Avoid no-op calls to the renderer
Improve ext host logging
Use numeric ids for rpc proxies
debt - remove TPromise.cancel() in quick open (#56137)
debt - improve isCancellationToken
less WinJS.Promise#done usage, #57695
keep error handler around, #57695
Revert "less done-usages, #57695"
less cancel-usage, #56137
add cancellation to symbol search, #56137
debt - more TPromise.done() removal and unhandledRejection handler (#57695)
debt - more TPromise.done() removal (for #57695)
:lipstick:
fix smoketest
:tada: debt - remove builder :tada:
debt - make sure to dispose Emitter
debt - convert title, menu to not use builder (#57196)
Bump node2, fixes #57830
#56137 - remove more TPromise#cancel from search
always fork for node runtime
Reduce usages of TPromise.done (#57695)
Adopt latest loader
remove builder from reference widget. #57196.
Remove builder from comments part. #57196.
debt - remove builder from feedback form (#57196)
partial undo of TPromise change
feedback
Revert loader breaking changes
:lipstick:
Adopt latest loader
wire in CancellationToken in quick open (for #56137)
debt - getWorkbenchElementId() => getWorkbenchElement()
debt - remove builder usage (#57196)
remove promise cancel
Builder removal #57196
Builder removal #57196
debt - remove toWinJsPromise which is just WinJS.Promise.wrap
less winjs.promise construction
debt - less winjs-promise construction
first pass of WinJS.done() usage (for #57695)
Use file service to listen to changes
fix #52943
correct handshake to end profiling, related to #55675
improve error message and tell user to quit vscode first, #55675
use random port for profiling ports, #55675
#56137 Remove WinJS.Promise#cancel usage
debt - builder => element
debt - remove builder from quick open (for #57196)
webpack - move __dirname-config up into shared config
debt - remove builder from binary editor (for #57196)
print all stats at the end of the package task
debt - fix layer breakers
uri - remove default export
uri - replace usages of default export with named export (part 2)
uri - replace usages of default export with named export
clean layer breakages in driver
fixes #57787
fix #57796
custom menu - enable by default again on Windows
fix #57795
debt - DOM.removeNode => node.remove()
less done-usages, #57695
debt - reduce electron.d.ts patching
add isCancellationToken
debt - do NOT use window.onFocus/onBlur
fix #54308
enable test for #57722
add disabled test for #57722
debt - less promise#cancel
debt - bring layering rules up to speed
#57196 fix search smoketest
#57196 - remove all Builder from searchView.ts
#57196 - remove Builder from searchview 'messages'
fix spelling of vscode:labelRegisterFormater
fix vscode:labelRegisterFormater data mismatch
correct state after failed debug session; fix #57726
support early customRequest
wrap up macos build
Remove unintentional white space
Revert back to 'Hosted Linux Preview'
The Ubuntu vmimage requires specifying sudo - 1
product-build.yml: use new VSTS YAML syntax
continuous-build.yml: use new VSTS YAML syntax
fix promise polyfill, chaining promises works
macos build: remove pkg
Pick up ts update with bug fixes
macos build
macos build
macos build
experiment with macos esrp
Check the list length before splicing (#57617)
add monaco.d.ts
easy on unhandledRejection for now
fix watchFileChanges
workaround #57661
delete function duplication
debt - less WinJS.Promise#done usage, #57695
debt - less builder is better
fix #40533
debt - handle SIGPIPE on more processes
max height of breadcrumbs picker is 40% of overall height
debt - upstream some changes from electron-3.0.x branch
fix #57594
open commands: disable keybindings when context is not correct
debt - introduce main theme.ts and use
explorer issues to bpasero
play around for #57661
debug issues to weinand
Delete i18n folder since we ship all languages in language packs
label: update explorer, titlebar and open recent list when formatter comes lazy
bump 1.28.0
fixes #57685
tweaks, add the stream to the bundle step
mainThreadDebugService: proper listeners separation
debugService: onWillNewSession
add a statsStream that aggregates the number of files and bytes so that we can handle them
related to #57620
fixes #57620
Improve #57447
Revert the default custom menu on windows (#57655)
label: due to sometimes slow registratoin of file formater rule, introduce a workaround for file label suffix
fixes #57622
Bump distro (whitelist)
update inno_updater
Add documentation for editor.autoSurrond.languageDefined for #57415
fix #57545
remove wrapAttributesIndentSize from settings for now (for #55743)
Revert "Make sure prefix detection starts from start of the file name"
fix #57584
Do not focus first in screen reader mode (fixes #57501)
fixes #56030
bump distro (oss)
webpack - fix regular expressions
#57418 also for builtin non-EH search
fixes #57476
Settings editor - add query-free telemetry
fixes #57386
fixes #57375
fixes #57358
Settings editor - Remove unused code to handle links in enumDescriptions, not supported
Refresh comments panel when it comes into view again, fixes https://github.com/Microsoft/vscode-pull-request-github/issues/334
Adjust width of comment editor widget input box, fixes https://github.com/Microsoft/vscode-pull-request-github/issues/333
Pull latest grammar and fix #55644
Update css service
[css/html/json] adopt webpack ignore pattern to windows paths
Add missing if
Revert "Revert "Kill processes immediately on shutdown, use SIGTERM""
Update css language service
webpack - even betterer logging
update json-webpack rules
:lipstick:
webpack - print extension name in context of potential failure
Use roles for native tab menu items (#57518)
debug: skip over %0
explorer view: cut down delay time till progress from 3.2s to 1.2s
file workspace suffix is empty string
Revert "debug: do not send terminate to EH debugging"
Synchronisation notification: - Show extension being synchronised - Delete the downloaded extensions
[html] fix tests
debug: do not send terminate to EH debugging
webpack - let build fail when webpack generates an error or a warning
node-debug@1.27.6
more complete fix for #57483
fix #57351
fix #57483
fixes #56015
dispose of RunOnceScheduler properly
fix #55607
debug: properly dispose a debug session
go back to doCodeActions from doCodeActions2
tweak line-height and height properties, #57349
fix #57462
Always set selection on show() (fixes #57295)
Make progress bit hide when outside container (fixes #57226)
loaded scripts view: use schedulers
make some pattern absolute, #57356
loaded scripts: register loaded srouce listener for all sessions
Sanitize texts (fixes #56518)
fix uninstaller message
fixes #57233
actionbar should handle dblclick
Settings editor - setting count is wrong on startup
Settings editor should expand TOC when entering filter mode, same as search
Add search-rg integration tests to windows
Settings editor - Remove inlined enumDescriptions for files.encoding setting
Remove unused reference
Remove "see new UI editor" ad from JSON settings editor
Label update #56042
Mitigate microsoft/vscode-pull-request-github#313.
Update js/ts grammars
do not always debug break EH
Update C# Grammar
Exclude test files from extensions #57426
#57422 Read and write into same storage scope
shorthand types for brackets removed
move loadedScripts view above breakpoints; fixes #57393
fix #57395
shorthand types for Monarch language action and brackets added
Set aria-label on each entry to avoid echo of entries with group heading (#56359)
Folding regions for Rust #55648
Use URIs for custom view item's icons
fix #57390
check if placeholder exists
#57294 Reset active composite first beore updating
fix 57353
Revert "Adresses #57148: Space in workspaceFolder break task run"
smoketest: fix keyboard platform specific  code
Revert "debug: when auto focusing session take the stopped one. Same for threads."
comment out failing smoke test
fix double title on windows (again)
#57373 Replace brackets as well upon creating a branch
explorer: Disable moving workspace roots in one another
fix css/html/json language clients
Deprecated task 0.1.0
Adresses #57148: Space in workspaceFolder break task run
fix broken menu on macOS
windows - fix double title
code-cli: update built-in extensions
make custom titlebar default on windows
Revert "Kill processes immediately on shutdown, use SIGTERM"
Settings editor - lazier paging when scrolling, looks nicer
Search - include onSearch activation for schemes in extraFiles
menu touch support fixes #54249, fixes #56903
Kill processes immediately on shutdown, use SIGTERM
fixes #52907
Update query (fixes #57160)
use fileDialog context when registering actions for the command palette
allow to specify when clause when registering actions via registerWorkbenchAction
Re microsoft/vscode-pull-request-github#70. Open the comments panel only for the first session.
Settings editor - fix cursor issues
Settings editor - expand all TOC entries when scrolling into them, even when a subcategory isn't revealed
Expose an async terminal focus method for when xterm.js is being initialized
[html] update dependencies
[css] update dependencies
do not try to terminate undefined raw session
fix tests
[json] update dependencies, support schema-draft7
Revert "when with panel service when figuring out the active editor, #55309"
Revert "know if we should look for panels or editors, #55309"
related to #57224
know if we should look for panels or editors, #55309
Read out active item when focus is in text box (#56359)
variables are fetched delayed: need a null check
Swallow pty kill exception
#57105 Remove notMultiRootAdopted attribute
debug: expose Capabilities via DebugSession not RawSession
[json] revert dist folder for server
Mark the VSCODE_NLS_CONFIG to have language pack support
watcher - perf: parse globs for excludes
when with panel service when figuring out the active editor, #55309
uri - export as URI and as `default`
Add emergency view model reconstruction (hopefuly fixes #56639)
debug only supported for proper scheme
fix #56805
breadcrumbs - fix not updating when toggling breadcrumbs
debug: when auto focusing session take the stopped one. Same for threads.
webpack: make sure to only modify package.json next to  webpack.config
bump vscode-chokidar@1.6.4 (fixes #57263)
fix #57105
use `getOrCreateMode` and move api to proposed-stage first
watcher - do not run extra glob matching
don't expose the filter on type option yet,  #55004
debug: reveal debugService.sendAllBreakpoints
file watching - tweak loggers for more useful output
debug view model: first set focused stack frame and thread and only then emit
bulkEditService: do not throw if there is a readonly model
update distro for OSS
strict warnings in pathCompletion
debug: make sure to dispose session if initialize or launc/ attach return an error
fix  #57115
Remove empty line in uri jsdoc
[html] webpack
[css] webpack
webpack json-language-features
remove transpileOnly flag from webpack
fix FileDialogContext not being bound
debt - more builder cleanup
debt - more builder removal
Settings editor - add min score to 'new extension' search results
node-debug@1.27.5
ignore auto attach timeouts; fixes #57232
fixes #53217 also just a clean up so there is one source for mnemoic regex
Settings editor - load settings in pages for much better perf #56296
#57033 don't show notification on cmd+s
#57186 - add tests for search-rg extension
#57186 - add API comments
#57186 add tests for TextSearchResult
#57186 - implement previewOptions for findTextInFiles
#57186 - fix findTextInFiles
Disable findTextInFiles test temp
Settings:  call onChange for checkbox toggle (#57184)
Enable live update of exclude settings
Keep display of exclude rows sorted
Simplify exclude state change logic and fix bugs: unable to edit a when setting in some cases unable to edit a defualt setting to/from a nondefault one and probbaly some others.
#56950 - telemetry for search folder uri scheme
auto-attach cleanup
Exclude control new items go to bottom of list rather than top, when conditions can be edited
Accessibility Updates for Mnemonics and Structuring (#57114)
improve handling fallback of terminal border color
Simplify and fix bugs in no results/result count message logic (#57116)
Add element with tooltip as modifided indicator
Remove "Copy Setting Name", move "Reset Setting" to top
Notify no need to save on save
Organize imports
Notify of no need to save on first edit
introduce isFileSystemResourceOrUntitled to be used for compare
search-rg extension - slight perf improvement
update ignore file
Remove stdFork since it is no longer used
update vscode-nls-dev to fixed version, share more config between extensions
debt - deprecate builder and remove usage in some places
explorer: always show root if it can not be resolved
Disable node_modules check for update paths on file rename
Don't request refactorings for empty selections
introduce fileDialog context
copy nls
wip
Don't try showing tiffs as images
debug: fix breakpoint line for dirty files
Don't explicitly de-indent on ) in js/ts
Remove out of date comments
git: expose error codes in API
fix test failure from `extensionDevelopmentPath to be a URI`
Use real buffers (since the RPC protocol can handle them now)
git: implement API
markdown toc should include full span to next header
Also log total messages size
allow extensionDevelopmentPath to be a URI
Add logging to RPCProtocol
wip: git api
:lipstick:
git api: repository state
Simplify binary message parsing
Extract getHeaderFoldingRanges
tweak all those copies of uriFromPath, #56691
Simplify binary protocol writing
Update markdown grammar
title: no need for null check
fix title part getting the workspace label
Update markdown grammar
add `ISuggestion#noWhitespaceAdjust` to internal suggest api, #57093
#56649 Add logs to diagnose
line height for breakpoints view
add `adjustWhitespace`-flag to snippet controller, #57093
Debt: avoid electron remote module (#57134)
Remove RPCMultiplexer; Add tests
Line breakpoint: fix disabled icon css rule
Settings: Only add label target for checkbox (#57129)
Enum descriptions in new settings editor via SelectBox widget (#57050)
Add underline on hover for links
Check other experiment dependencies before running experiment
Update distro
fixes #56990
Defer terminal process creation to allow container to be created
missing word in string (#57084)
Make stop icon smaller and less brighter
Use editor.fontweight in suggest widget #53469
Changed scop of function
Changed Declearation
improve handling fallback of background color
Update markdown grammar
back to old solution to fix #57056
Use allocUnsafe to benefit from buffer pool
First cut at binary encoding messages for ext host
Use Workspace Extension category
add filtering to breadcrumbs picker,  #55004
fix error when not having a code editor
labelService: allow to register workspace label formater
debt - reduce usage of electron remote module
IUriLabelService -> ILabelService
Customise workspace extensions from config
extract highlight knowledge as prep to filter,  #55004
breadcrumb - allow uparrow to move to tree
Trigger installing in all servers simultaneously
remove console.log
remove .name from IWorkspace
workspaces: toWorkspaceIdentifier utility
tweak node update/resue logic and add more info when errors happen, #56634, #57005, #57006
Updating theme scopes for new markdown grammar
keep editor position stable when revealing after previewing, #56983
Update js/ts grammar
fix rust region comments
fix #56983
add rust region comments
Disable only local extension when not running
:lipstick:
:lipstick: (more for https://electronjs.org/docs/tutorial/security)
align breadcrumbs hight with section header height (22px), fixes  #56022
fix #56979
#56950 - add details to text search telemetry
#56950 - don't swallow promise cancellations inside the EH
#56950 - add missing 'type'
Don't render images in comments panel, fixes https://github.com/Microsoft/vscode-pull-request-github/issues/214
Grammar fix
Bump node2 #57018
Remove out of date params from doc comments.
Guard proposed API createTerminalRenderer
Remove unused clean flatpak tasks
Properly dispose of newCommentWidget, fixes https://github.com/Microsoft/vscode-pull-request-github/issues/235
Adjust padding on submenu arrow
Make arrow smaller and increase padding
get rid of getWorkspaceLabel in workspaces.ts and adopt
move uriLabelService to be a core service. Configuraion service depends on it, not the other way around
perf - fix loader stats
Description of resource should be the parent of the resource
use the e.message as an error variable name
debug: npe
simplify copy path command
add log level change event,  #43275
fixes #57004
git api: remotes
fix formatting
tweak d.ts to avoid security and deprecation pitfalls
git api: onDidRunGitStatus
Add .eslintrc extension
Remove 'ELECTRON_RUN_AS_NODE' env var on fork
git: use simpler versioning scheme
git api: make cwd mandatory
git: cleaner exports
git extension: expose exec/spawn
Remove stdfork from processes.ts
debt - remove 'remote_schemes'-data, #48275
More small stylistic changes
debug: preserveFocus when automatically opening launch.json
bundle node_modules and (shallow) exclude them from the extension #56081
resources: introduce isFileSystemResource context key
git: api 1
git api: expose repositories
Small stylistic changes
[html/css/json] improve vscodeignore
explorer model: compare authority in a case insensitive way
debt - do not use deprecated Buffer() ctor
only reuse existing colors, #56864
debug quick open use fuzzy matching
Show the custom views contributed to custom view container by the same extension on the top
add filtering for breadcrumbs picker, #55449
prep for #55449
electron - move security related event handlers into one place
fix #56915
launch json faded decorations better contrast
fix #37129
Sync only if there are other servers
Debt: avoid promise.cancel in zip.ts (#56656)
Added new command for sending custom sequence to terminal
Added new command for sending custom sequence to terminal
#56950 - add search telemetry for EH-based search
Hide the feedback form after clicking Submit a bug (#55938)
#56950 - add telemetry for non-EH search
Add a message showing no results in settigns search (#56868)
node-debug@1.27.4
move some auto-attach code back to node-debug
vscode-xterm@3.7.0-beta5
fix double the
change to only check alt key is released
fixes #56652
Show warning when enabling proposed api for non-installed extensions (#55802)
Add a missing compilation step for vscode-css-languageservice development, other misc docs fixes.
Remove obsolete process.nextTick calls in search, not needed without promise progress
Launch config changes
Update Markdown link snippets to use https (#56851)
Use gallery to synchronise extensions
Do not consider system extensions while syncing
debug fix tests
debug remove stdFork usage
fix #56158
explorerModel: do not use isEqualOrParent in find
Remove std-fork
Serialize webview id
git api
Need to react with a timeout on the blur event due to possible concurent splices
git api: deprecation
git api: expose gitPath
webpack - check js files, declare params, #56081
debug: do not de-attach all session listeners  when raw session goes down
remove glob.d.ts
remove glob dep in package.json
remove dependency on glob
git: getAPI
perf - wait longer when no cached data was used
fix compilation
Mark optional property
Update yarn version used on build machines
Move packaging extensions to lib/extensions.ts
api.d.ts
remove unused code
Add debug extensions to workspace list
- Synchronise built in extensions - Check for workspace extensions while installing
Use fs readstream to upload buffer
Add builtin-extensions-dir property to environment
Make download service optional
fixes #56736
open editors: focus active group even if it does not have an editor. Make sure list is not empty
fix #56877
fix tests more
Update GDPR annotation errors
Don't request terminal processes before ext host is ready
Localize strings in commentThreadWidget
Give terminal process listeners a chance to init
Prevent undefined from showing up in terminal dropdown
Use URI transformer for download service channel
Preserve focus on comments panel when selecting comments, fixes https://github.com/Microsoft/vscode-pull-request-github/issues/198
fix driver copy task
fix tests
Use 'r+' with truncation when saving existing files on Windows (#42899)
Revert "open editors: focus active group even if it does not have an editor"
perf - tweak data for --prof-append-timers
fix broken layering
longTitle should be absolute
Update grammar tests
Update markdown grammar
Update markdown grammar
debug: npe
open editors: focus active group even if it does not have an editor
ipc: allow buffers to be sent over IPC
do not attempt edit operation for for read-only editors
debug: fix initializing state
:lipstick: remove outdated comment
debug: move firstSessionStart to view model
Update markdown grammar
Update js/ts grammars
debugService: run task return a success boolean
ipc: protocol should be buffer based, not JSON based
remove logDirectory, #43275
fix compilation
Implement download service using request service
Revert "Revert "remove proposed Logger-api, #43275""
:lipstick:
webpack - more defaults for extensions
- Use URI to install from vsix - Implement zip and unzip extensions APIs - Sync extension across management servers - Download service to download zips
debug: cleanup EH debugging
one more update...
remove webpack knowlegde from gulpfile.extensions
use vscode-nls-dev-loader
resource.isEqual / isEqualOrParent: use isIgnore default bahaviour
Reify "DebugSession"
move debug session to a seperate file in electron-browser
menu: integrated terminal => terminal
adopt new vscode-nls-dev, #56792
Update css-languageservice
DocumentContext to remove `url` dependency from service
empty commit
:lipstick:
fix #56715
#55883 - remove some TPromise#cancel from extHostSearch
Settings editor - fix context menu on 'exclude' type controls, format JSON copy better
Settings editor - clear TOC selection when searching. Don't show 'new extension' button when it's filtered out.
#54140 - add more setting context actions
Add URL handler support for Linux desktops
#54140 - add keyboard shortcut for setting context menu
node-debug@1.27.3
new mnemonics behavior (#56617)
Settings editor - enable settings in new extensions #49474
Settings editor - add "modified" to title tooltip
Also include markdownDescription in exported config
Settings editor - fix initially unselected TOC item
Settings editor - cache settingLayout regex patterns for perf
Settings editor - calculate labels lazily for perf
#48641 - add 'alwaysExpand' option
Push monaco.d.ts change
add a way to opt out of ts-loader so that vscode-nls-tricks survive
update comment
remove unused dependency
add a shared webpack conifg
prevent picker overflow, #56318
Automatically install Bash and Zsh completions in deb/rpm
Add Bash completion script
Package completions under resources/completions
Update Zsh completion script
Add Zsh completion script from Zsh sources
perf - make sure to compute startup metrics not too early, #56253
add `ellapsedPanelRestore` to perf metrics, #56253
move performance developer actions to perf-contribution, #56253
cleanup
remove console.log
fixes #56665
perf-stats: fix column header
Revert "remove proposed Logger-api, #43275"
node-debug@1.27.2
cleanup win32 continuous build
fix #56576
fix #55864
fix #56604
add more logging to diagnose #56553
:lipstick: sort lines in vscode-module export
remove proposed Logger-api, #43275
workaround #56633
fixes #56586
add ExtensionContext#logPath, #43275
Settings editor - fix height difference between light/dark themes
add 'search.collapseAllResults' setting
#56137 - remove TPromise#cancel from settings editor
Remove prefs editor TPromise#cancel - #56137
Re microsoft/vscode-pull-request-github#227. Cmd enter to submit comment.
Menu extends ActionBar  (#56509)
fixes #56457
fixes #56532
Remove unused variable
Remove right side padding of text area so scrollbar is flushed to edge
Add padding to comment text area
Update reply text area styling to match comment box
Add empty text for review title
better output from 'Startup Performance' action
workaround #56579
merge startup reflections into timer service, #56253
even more ITimerService simplifications, #56253
debt - a tiny bit of promise removal
improve overlay cleanup scheduler (fixes flicker seen with Electron 3.0.x)
improve npm.fetchOnlinePackageInfo handling
update messag
remove any-casts, wait for extensions to be ready
:lipstick:
real fix for #56360
make picker width depend on window size, #56318
comment
fix #56362
add doc to vscode.Uri, #56108
use ts-loader compilerOptions
also fix width issue when not using tabs, #56545
keep node_modules in extension bundle
enforce certain compile options
use ts loader, exclude node_module for now
fix #56545
Workaround #55649
fix #56540
protect tree against errors in render calls
fix #56384
Settings editor - tweak padding
Settings editor - avoid triggering reflow in layout()
debt - avoid deprecated buffer usage
Notify number of outdated extensions on Check for Extension updates action (#56053)
NodeBuffer => Buffer
Settings editor - bump search debounce times
Settings editor - fix "Open Settings (JSON)" command
improve function interface
Handle new error messages in ripgrep
Bump ripgrep to 0.9.0
override Ubuntu's default integrated terminal font options (#35901)
Settings editor - clean up leftover description styling
Update theme for error,rune types in Go #56515
#56296 - avoid unnecessary refreshes on startup onConfigUpdate is fired for every extension settings before the groups are in the model
Create new search input model for each instance of a settings editor (#56496)
Settings editor - use type=number for number input fields
#55800 - format a set of well-known acronyms
Settings editor - fix dupe cmd+, registrations
Settings editor - add missing TOC title
Prevent comment ranges from shifting on edit
fixes #56225
:lipstick:
fix unhandled error
fix #56302
update config util,  #56302
IUriDisplayService -> IUriLabelService
fix resources tests on windows (for #56403)
debug: do not use promise.cancel
better picker width #56318
set item max-width to 80% to of breadcrumd with, #56318
fix #56360
use resources.isEqualOrParent instead of path.indexOf
uriDisplay: if no formatter is registered fall back to getPathlabel
Update calendar
Open Editors: revisit order of groups to be based on visual order (for #56084) (#56264)
fix typo in color name #55960
add breadcrumb.background,  #55960
breadcrumbs - don't leak a listener
debug smoke: match ona a substring for a specific stack frame due to a potential sufix "readonly node content"
When checking snippet files, don't use indexOf but isEqualOrParent, #56403
letter,title can be skipped, #54938
prepare for warning for questionable fsPath-usage, #56108
Add openEditorAtIndex command (#56441)
update vscode-nls-dev dependency
make breadcrumbs picker wider, #56318
avoid double slashes; fixes #56450
simplify update-function (maybe get rid of it...) #54938
rename abbreviation to letter, #54938
:lipstick: #54938
remove unused import
set `keepFilenames`-option
copy nls-json-files, don't inline vscode-nls
fixes issues with menubar in fullscreen (#56414)
Settings editor - also show 'new' tag in suggestions
cleanup and rename
Settings editor - also focus control when revealing setting via setting link
Settings editor - avoid rendering templates every time during measurement. Actually use measurement template cache
Settings editor - fix setting links
Expand the set of types which we can render in enum pickers (#56412)
#55883 - remove some TPromise.cancel from file search
fix layout for reparenting in loaded scripts viewer; fixes #55448
Add aria alerts to validations (#56394)
Add more tests
Remove prompt to install packs for core languages #50588 (#52827)
Add authority and label to extension management server
ext host - improve printing of circular objects
Simplify extension management: - Remove server options while managing extension
improve loaded scripts hover; fixes #55459
another try
Revert "ensure uploading source maps happens *after* they have been created"
Revert "bla"
bla
merge IStartupMetrics and IStartupReflections, #56253
ensure uploading source maps happens *after* they have been created
debt - update extensions node dependency to 8.x
log what source maps we upload
Begin writing tests for validator
Rename settingsTreeModels.test.ts to match
Add edits that didnt make it into the merge for some reason
#55800 - Format category labels with >, use lighter color for label
Hopefully make install extensions smoke test less flakey (#56271)
fixes #55921
#55803 - watch other focusable elements inside the setting row, (link) not just the control
#55803 - update "modified" label without rendering the tree row
Sbatten/check menu items (#56179)
update calendar
leave upload path as /dist/
fixes #56185
Render description after deprecation message. Also spelling
Show recommended with popular when no extensions installed (#56186)
more tweaks
patch and save source maps so that they get uploaded
fix #56251
Revert "try different source map config"
try different source map config
uri - print a warning when an URI lacks a scheme, #56108
fix extensions actions test
fixes #56140
aria labels for loaded scripts view; fixes #55447
support goto for file uris arguments
remove unused dependencies
fix #56150
--file-uri /--folder--uri are advanced: remove from help
breakpoints: some promise error hanlders
move loaded scripts view to bottom; fixes #55463
merge with master
Electron 2.0.7 (#56256)
debt - move importing of entries to TS-world
debt - remove last usages of globals and any-casts when it comes to perf marks
more tweaks #56253
perf - add markers for workbench contributions
wip - send startup reflections as telemetry event, #56253
debt - simplify timer service
add jsdoc form timer service metrics, #56253
isEqualOrParent: compare authority according to case-sensitivity
detect PowerShell when using pwsh executable; fixes #55852
'backgroundColor' and 'baseTheme' no longer needed in IWindowConfiguration (for #55677)
protect against short running debug sessions; fixes #56252
incorperate review comments
Compute total weight from weights of all view descriptors
Tweaks
Change the default for "openDebug" to open on session start
Missing check (#56170)
explorer: middle click to open file pinned
debug issues to isidorn
:lipstick:
comment out test
Remove dynamic require call in the ESM case
fix other menu action-item references
first fixes #56151
Add workaround for #56151
Don't ship unnecessary files in /esm/
Remove unnecessary declarations
Bring back nls bundles for the editor
Create the ESM distribution from the tree shaken sources
Handle Promise errors caused by cancellation
#55803 - get rid of focus maintaining hack, allow refreshing single setting rows
Settings editor - split out settingsTreeModels.ts
Settings editor - reduce SearchResultModel special-casing
Settings editor - don't run search on '@'
#55803 - Don't refresh a setting currently being edited
fix build
Reset on null entry to null defualt valued entry
Add nullable numbers and validation for nullable numbers
The built in views are not used during search
Extensions in Preferences menu #56042
fixes #54058
Remove unused
Add MessageBox-styled validation
[theme] only restore colors if base theme matches
tree: fix expand/collapse
Extract autosuggest editor to own class; bring into settings (#55924)
Re Microsoft/vscode-pull-request-github#171.
Move sticky to suggestController (#56123)
Bump node2
Remove 'workbench.settings.tocVisible' setting
Missing checks (#29096)
move initial back-/foreground to rapid render code (fixes #55677)
tree: reveal when focusing
Compile it (#29096)
tweak source mapping url
Avoid Uri.parse('')
make sure to massage sourcemaps-url, make sure to upload sourcemaps from dist/folders
Remove dead code (#29096)
remove cancel calls from cache, extension editor
remove promise.cancel from treeView
Use QuickInput (#29096)
Implement smooth caret animation with toggleable option
debt - remove nsfw from build dependencies
Automate border choice (#29096)
Restore active item when filter is cleared (#29096)
Update smoke test (#29096)
remove promise.cancel from list paging
simplify PagedModel
Revert "disable tests for now in prod"
disable tests for now in prod
[seti] fileAssociationFile uses single and double quotes
Update smoke test (#29096)
Use QuickInput (#29096)
debt - towards scheme-enforcement, #56108
debt - remove some WinJS.timeout() calls
make URI#from more strict and URI#with more clear wrt schme-enforcement, #56108
Use QuickInput (#29096)
more jsdoc for the URI class, #56108
Use QuickInput (#29096)
debt - remove WinJS.Promise#is and replace usages with async#isThenable or async#isWinJSPromise
debt - accept a Thenable instead of a WinJS.Promise
debt - replace WinJS.Promise#timeout usages with async#timeout or with setTimeout
Use QuickInput (#29096)
Separator (#29096)
[seti] fileAssociationFile uses single and double quotes
fixes #56116 repair ipc for native menubar keybindings
FIx #56118 - setting highlights in high contrast mode
change distro
vscode-xterm@3.7.0-beta4
Add deprecation warnings below item. Initial messageBox implementation
Add validation to string and number settings
Start removing TPromise.cancel from search -  #55883
enable source map generation
use regex to parse jumplist argument
polish cli args parsing
Revert "pinch zoom is now disabled by default"
pinch zoom is now disabled by default
bundle into dist folder, copy ask-pass shell scripts into dist, some :lipstick:
storage.json: don't change existing format for recent files
merge with master
explorer: use isEqualOrParent
update smoke ts version
Diff editor: horizontal scrollbar height is smaller (fixes #56062)
fix explorerModelTest on linux
Revert "Don't include non-resource entries in history quick pick"
isEqualOrParent: use fspath for file URIs
pack emmet
isMalformedFileUri fix and tests
fix history check
Migrate menubar action registrations out of menubar.contribution.ts (fixes #54510)
move help contributions to origins (for #54510)
Use QuickInput (#29096)
resources: fix tests, normalize/join: use fspath
debt - compositePar is not really part in workbench
demote menubar from part (#56031)
debt - do not check for canHandleResource right on startup (for #48275)
change info => trace for "no grammar found for scope..."
#54039 - remove dead code
#54039 - don't leave focus on focus sinks
#54039 - cache row widths for faster rendering
#54039 - focus and refresh fixes
Add --allow-empty option
Add the ability to push empty commits
#54039 pool templates for faster measuring
Start #54039 - tabbing around the list without selecting things works
#55478 - switch all builtin settings to 'markdownDescription' instead of 'description' where needed
#55478 - render description vs markdownDescription correctly
Use npm view to populate info box
Middle Click to remove breakpoint.
Re Microsoft/vscode-pull-request-github#135. Do not dipose newCommentWidget when collapsed.
remove comments for more proper json
Improve UX for deprecated settings (#55977)
Add back changes lost on merge
Append "for '.xyz' files" in "Don't Show Again" menu item label #55814 (#55984)
todo to remove legacy support
improve fix for #55891
fix npe in hasToIgnoreCase (for #55916)
Ellipsis on text overflow in comments panel, fixes https://github.com/Microsoft/vscode-pull-request-github/issues/122
Removed unused dependencies
experiment: change default of closeOnFileDelete (for #47930)
Expand default text color to include items in the breadcrumb
Join All Editor Groups should preserve which editor is active (fixes #54955)
:lipstick:
Use QuickInput (#29096)
use production-mode for git bundle
invoke webpack when bundling extensions
:lipstick:
Addressing feedback
Exception when saving file editor opened from remote file provider (fixes #55051)
scm: SourceControl.selected and event
scm service: update selection on repository disposal
scm: selected repositories
fix monaco.FoldingRange spec (fixes Microsoft/monaco-editor#984)
Use `resources` instead of `paths` for dirname, basename, joinPath, normalizePath, isAbsolutePath
Use QuickInput (#29096)
Item action bar (#29096)
Make use of disposeElement()
Add quickNavigate (#29096)
Add contextKey (#29096)
[css] update service
Remove extraneuous declare
fix #25919 for the old menu
Adding the git.showStagedChangesResourceGroup config property
fixes #52537
revert monaco.d.ts change
comment range decorations should have its own color id.
Allow text color in outline view to inheirt default foreground color
Improve handling for comment creation failure
Use localized strings for telemetry opt-out
vscode-xterm@3.7.0-beta3
Markdown region folding (#55399)
`vscode.openFolder`: treat missing URI schema gracefully (for #55891)
Mark all json files under appSettingsHome as settings
resources must not use path library
Bring back the old menu due to electron 2.0 issues (#55913)
Make sure prefix detection starts from start of the file name
Add a command to open a new window as tab (Sierra tabs) (fixes #25919)
:lipstick:
update inno setup message
adding webpack.config.js
fix #55840
fixes #55696
fix unit tests on windows
show notification earlier
delay winreg import
Icons (#29096)
Reject invalid URI with vscode.openFolder (for #55891)
debt - reduce usage of builder
fixes #55840
use terminal.processId for auto-attach; fixes #55918
fix #55888
debt - use getPathFromAmdModule instead of 'URI.parse(require.toUrl(xxx)).fsPath'
towards scheme-enforcement in URIs, related to #55891
debt - make test renderer use a correct baseUrl (and adopt tests using require.toUrl)
Default 'Quick Switch Window' selection to be next window, closes #55166 (#55535)
Add toggle.diff.editorMode to the command palette (fixes #54974)
docs
docs
tweak tree height (workaround for #55887)
Add context keys for platforms (#54894)
Distro update for experiments
Update GDPR annotations
Log telemetry for opt out experiment
adding composer.json
Refactor parameterHints settings as per code review comments
Refactoring
Understand json file activity
Remove unneeded PPromise progress callback... #53487
fixes #55893
Disable add comment button when textbox is empty, fixes https://github.com/Microsoft/vscode-pull-request-github/issues/128
Remove terminal experimental restore setting
Remove texture atlas terminal setting
Update xterm
Use QuickInput (#29096)
Try improve typing
fixes #55696
fixes #55563
fixes #54399
:lipstick:
prep work for #54938
fix #54545
Use QuickInput (#29096)
remove more PPromise usages
fix #55866
make sure dots have enough space, fixes #53094
debt - use Promise and CancellationToken instead of TPromise
fix #55865
move "keyevent to printbale key"-logic into service, removes duplicated code and fixes #55387
fix #55388
fix #55482
[make] update grammar (fixes #55256)
fix #55455
remove coveralls badge
Update distro
Update OSSREADME.json for Electron 2.0.5
node-debug@1.27.1
builtin loaded scripts view; fixes #37767
Tests about to check the improvements: ${}, $$, and $(shell ()).
update version to 1.27.0
fixes #55547
don't display fallback menu unless we've closed the last window
don't ask to install an incomplete menu
Update Git modified color for contrast ratio, fixes #53140
Add enum descriptions to `typescript.preferences.importModuleSpecifier`
update electron for smoketest
debug issues back to andre
cleanup deps
fixes #54630
Use class with static fields (fixes #55494)
improve FoldingRangeKind spec (for #55686)
proper fix for readonly model
fixes #55335
Add two alternative language-changing interface functions
trigger menu only on altkey up
fixes #55439
fixes #55434
fixes #55435
Opening launch.json should not activate debug extensions
debug: do not show toolbar while initialising
readonly files: append decoration to label
only add check for updates to windows/linux help
fixes #55576
fixes #28979
fixes #55421
filter for spcaes before triggering search (#55611)
fixes #55456
fixes #55264
Use ctrlCmd instead of ctrl for go down from search box
fixes #53582
Settings editor - maybe fix #55684
Settings editor - fix text control width
Settings editor - fix navigation NPE
Settings editor - hover color in TOC
Settings editor - color code blocks in setting descriptions, fix #55532
Settings editor - fix multiple setting links in one description
reset counter on new label
node-debug@1.26.7
detect 'winpty-agent.exe'; fixes #55672
Update link colors for hc theme to meet color contrast ratio, fixes #55651
read out active composites properly
no need to always re-read "files explorer"
more tuning for #48275
Register previous ids for compatibility (#53497)
resourece: get rid of isFile context key
relative path for descriptions
Avoid assumptions about git: URIs (fixes #36236)
fixes #52332
fixes #55122
fixes #55490
use latest version of DAP
Remove accessability options logic entirely
Allow extends to work without json suffix
SearchProvider - fix NPE when searching extraFileResources
Settings editor - better styling for element count indicator
Settings editor - nicer filter count style during search
Settings editor - change toc behavior default to 'filter'
Show online services action only in Insiders for now
fixes #55515
fixes #55507
Setting to disable online experiments #54354
More setting description tweaks
fixes #55539
fixes #55451
fixes #55513
Minor edits
Update setting descriptions for online services
Settings description update for #54690
fixes #55561
Another change for #55598 - maxResults applies to FileSearch and TextSearch but not FileIndex
More settings crawl
fixes #55454
dont render inden guides in search box (#55600)
Settings editor - fix NPE rendering settings with no description
Settings format crawl
Avoid missing manifest error from bubbling up #54757
fixes #55522
oss updates for endgame
FIx #55524
Update vscode-css-languageservice to 3.0.10-next.1
fixes #55223
Don't show existing filters in autocomplete (#55495)
Settings editor - better overflow indicator
Settings editor - move enumDescription to its own div, because it disturbs -webkit-line-clamp for some reason
Settings editor - revert earlier '...' changes
Settings editor - work around rendering glitch with webkit-line-clamp
fixes #55538
Disable fuzzy matching for extensions autosuggest (#55498)
Select all not working in issue reporter on mac, fixes #55424
configuration service misses event
Polish embeddedEditorBackground
Use editor.next/prevChange keybinding for diff navigation
vscode-xterm@3.6.0-beta12
 Remove confusing Start from wordPartLeft commands ID
Better handling of the case when the extension host fails to start
remove unnecessary change.
Include epoch (#55008)
resolve conflicts for folding, git and comment in glyph
commenting range to be marker based.
put commenting ranges affordance into line decorations area.
Grey color.
comment affordance in line decorations area.
File/Text search provider docs
Settings editor - add simple ellipsis for first line that overflows, doesn't cover case when first line does not overflow but there is more text, TODO
Settings editor - fix extension category prefixes
fix linux build issue (empty if block)
Place cursor at end of extensions search box on autofill (#55254)
files.exclude - better styling
don't show menubar too early
files.exclude control - focus/keyboard behavior
files.exclude control - use same style for "add" vs "edit"
Pull latest css grammar
Allow extensions to log telemetry to log files #54001
Latest emmet helper to fix #52366
Disable snippets in extension search (when not in suggest dropdown) (#55281)
New env var to notify log level to extensions #54001
Disable push to Linux repo to test standalone publisher
explorer: refresh on di change file system provider registration
fixes #55288
Settings editor - Even more padding, use semibold instead of bold
update to officical TS version
fixes #55325
fix javadoc formatter setting description
Describe what implementation code lens does
Don't try closing tags when you type > after another >
settings sweep
revive path urls
Settings sweep (#54690)
workaround for #55051
Settings sweep (#54690)
change debug assignee to isi
fixes #54877
Settings editor - header rows should not be selectable
Settings editor - don't blink the scrollbar when toc selection changes And hide TOC correctly when the editor is narrow
Settings editor - Tree focus outlines
Bump node-debug2
Settings editor - TOC should only expand the section with a selected item
Settings editor - fix not focusing search when restoring editor setInput must be actually async. Will be fixed naturally when we aren't using winJS promises...
Allow terminal rendererType to be swapped out at runtime
node-debug@1.26.6
Contribute run selected to the context menu
prefix command with extension name
fixes #55248
fixes #54929
fixes #54452
Added command to Run the selected npm script
Support file-uris as arguments
Settings sweep (#54690)
Add option to enable cycling of parameter hints
change debug assignee to isi
fixes #54877
Settings editor - header rows should not be selectable
Settings editor - don't blink the scrollbar when toc selection changes And hide TOC correctly when the editor is narrow
Settings editor - Tree focus outlines
Bump node-debug2
Settings editor - TOC should only expand the section with a selected item
Settings editor - fix not focusing search when restoring editor setInput must be actually async. Will be fixed naturally when we aren't using winJS promises...
Allow terminal rendererType to be swapped out at runtime
node-debug@1.26.6
Contribute run selected to the context menu
prefix command with extension name
fixes #55248
fixes #54929
fixes #54452
Added command to Run the selected npm script
Settings editor - disable overflow indicator temporarily, needs to be faster
Settings color token description tweak
Settings editor - overlay trees so scrollable shadow is full width
Settings editor - fix ... for some short lines, fix select container width
Setting descriptions
Settings editor - ... fix measuring around links, relayout
Settings editor - show ellipsis when description overflows
More space above level 2 label
Settings editor - many padding fixes
fixes #55209
Settings descriptions update #54690
fix an issue with titlebarheight when not scaling with zoom
Minor css tweaks to enable eoverflow elipsis in more places (#55277)
settings sweep #54690
Allow users to opt-out of features that send online requests in the background (#55097)
Polish tag search as per feedback (#55269)
Should autosuggest dropdown on empty input (or at start of word) (#55197)
Prevent pasting multiple lines into the editor (#55202)
Allow users to see installed extensions while offline
increase specificity so that we can beat out shell.css definitively
Remove extra check
Don't lowercase all file paths on case insensitive file-sysystems for geterr
Remove new comment glyph on mouse leave instead of blur to allow adding comments
Absence of ai key stops only core from sending telemetry not extensions
Allow users to turn off automatic checking of extension updates (#55087)
Disable interuptGetErr until next release. Needs more testing
Support clickable folder projects refences
fix #55147
fix hover and outline behavior (#55200)
fixes #55221
Don't run remote search in old settings editor when local search found an exact match
"Edit in settings.json" searches for the selected setting
Settings editor filterByTag - focus search input and add a space after tag
Search provider interface methods required
merging menu/titlebar (#55100)
vscode-xterm@3.6.0-beta7
dnd use uri display service
vscode-xterm@3.6.0-beta6
workbench: adopt uriDisplayService
uri display: if no formater regeistered just return path
workbench: adopt uriDisplayService
workbench: uriDisplayService adoption
workbench: uri display service adoption
fix #54769
workbench: more adoption of uriDisplayService
debt - adopt UriDisplayService for reference search
preferences: use UriDisplayService
menubar: adopt uri display service
uriDisplayService: also create it on the main side and share registration between rendere and main
Show a terminal hint (fixes #50775)
debt - use const enums when possible
perf - ensure stable sort when marks happened at the same time
bc - remove useQuckPick option for now
:lipstick:
bc - fix missing highlights in file picker
[powershell] update grammar
[php] update colorizer tests
update markdown colorizer tests
[java] update grammar
update html grammar
update TypeScript grammar
adopt color changes in colorizer tests
simpleEditor: minor renames
bc - Focus Breadcrumbs command should focus and select the last item
Use focus tracker (fixes #53867)
Announce number of results in QuickPick for screen readers (fixes #52542)
Settings editors - fix \n enum value breaking json syntax
Search provider - avoid unnecessary joinPath in some cases Maybe fixes liveshare issue
Add temp registerSearchProvider stub to avoid breaking live share in Insiders
Add "new extensions" settings results button for #49474, but disabled for now
Remove old extension settings code
Run extension queries in sections only if applicable
Try to interupt getErr request for user opetions
Settings editor - use ellipsis instead of gear
Set global user preferences on updatePaths
Reduce duplication and improve errors around TypeScript execute types
Sort definitions
Use more explicit types for ts server execute
Renaming tag for settings for online services #54354
Use tags for filtering settings (#55198)
Pick up new ts insiders
Remove extra conditional
Expand js/ts document symbols to have entries for each span
Update ts/js grammars
Log warning when returned code action will be dropped (#55090)
SearchProvider - clean up FileSearchProvider, remove cacheKey
Search provider - clean up file index search, remove PPromise
Search provider - implement FileIndexProvider
SearchProvider - split out separate TextSearchProvider #47058
Update modified color to meet color contrast ratio
Update opacity to meet color conrast ratio
Renaming and pull text HTML style config out to extensions file
fix #55163
move WorkspaceEdit api additions to vscode.d.ts  #10659
Settings editor - remove some 'modified' handling code, use 'tags'
Implement "show online settings only"
quickOpen: adopt to uri display service
editorService: adopt uri display service
register uri display service early in workbench since other services can depend on it
debug: adopt uri display service
uriDisplay: drive letter polish
add more jsdoc - fixes #52919
simplify QuickInputButton#iconPath
uriDisplayService with tests
update doc comment #52927
save parts splash on editor layout change #55017
#54992 Temp fix
Flush scripts cache when the document changes
splash - move parts splash out of shell and into contribution
store data globally #55033
fix tests
add aria roles #54745
Include description and details (fixes #52040)
fix #54743
:lipstick: #55052
Add context to "more" and "others" links. (fixes #51978)
#55057 Consider built in extensions if they are dependencies while enabling or disabling
files.contribution register uri display formater
bc - properly cleanup selection and focus when leaving breadcrumbs
bc - honor explorer decoration settings
fix #54491
fix #55064
add space in the front to the related information entry
:lipstick:
cache the scripts for the hover
Replace lenses with hover links
Improve light bulb position in problems panel
Add API function that changes document language: #1800
Use more standard scheme across providers for getting TS response body
Prefer namespace imports for 'vscode'
Add base Disposable class to help manage disposables
Use VersionDependentRegistration for update paths on rename
Cleanup
Use resource map for storing formatting options
Add underscores and asterisks to surrounding pairs (#55054)
Always invoke quick fix command
Only return a single all code action per quick fix fixId
Use VersionDependentRegistration
Don't convert diagnostic set to array
Support tags on settings to filter in settings editor (#55094)
Don't include non-resource entries in history quick pick
Also serialize and restore webview icons
Settings editor - fix search.exclude link
Sweep setting descriptions for #54690
Settings editor - remove 'img' and 'a' tags from description markdown
Settings exclude control - enable for search.exclude
Remove extension folder path
Extract webview protocol logic to own file
Extract interface
Formatting and extration
Settings exclude control - Implement editing
Some setting descriptions cleanup, #54690
Refactoring
Relax condition on select all
#55055 Disable or uninstall only pack  extensions but not dependencies
Remove unused
Refactor simple widget editor config files
Bump node-debug2
Settings editor - change "Open settings.json" label, fix #55032
Settings editor - fix unused reference
Settings exclude control - implement adding patterns
Settings exclude control - replace fancypants List with basic dom manipulation
Settings editor - implement 'delete' in files.exclude control
Settings exclude control - add inputs for new item
Settings exclude control - add row title, sizing tweaks
Settings exclude control - move to own file
Initial exclude control
If the restart is automatic disconnect, otherwise send the terminate signal
uriDisplayService
Show the "method" icon for constructors
use underline for selected/focused items, #54745
don't use Shift-keybindings but Alt (mac) and Ctrl (windows/linux), #54745
Label Windows key as super on Linux
updating menu behavior for when to select first entry (#54953)
remove tab to select items from picker, #54745
boost weight of Escape to close picker, #54491
Require libnss3 >= 3.26 to match Chromium
fix #55020
add perf marks, #55010
allow breadcrumbs to be tabbed to, #54745
[json] use onFoldingRanges
[css] adopt lsp (folding, colors)
[html] adopt lsp (folding, colors)
fix #54995
Wrap up menu bar registration migration (#54510)
merge master
[json] update to latest lsp (folding range support)
Move more menu bar registrations close to the actions
Settings editor - fix enumDescriptions
Settings editor - fix scope tabs colors, other fixes
Settings editor - use lighter color for headings and active TOC item
Remove unused variable
Add WebviewPanel.iconPath (#54912)
zh-hans and zh-hant are invalid locales (#54696)
fixes #53808
Update icons for dark theme, fixes #54712
Settings editor - add badge to actions dropdown
fix #54723
More settings editor changes - hide actions behind dropdown
Settings editor - start fixing up to match new mockups
Update badge colors to be softer
Move Edit menu registrations next to the actions (#54510)
Add support for menubarOpts in commands
Remove unused code
Use a const enum for keybindings weights
Update colors for unsaved/badges so that it's easier to read
introduce uriLabelProvider
Towards using a const enum for keybindings weights
Have kbOpts.weight be mandatory
Simplify Command registration
Move Edit and Selection menu registrations into the codeEditor part
Add canUndo and canRedo context keys
Support toggling escape sequence logging
add special rendering for no-tabs case, #54370
add workspace folders to model and picker #54370
use FileKind in FileElement,  #54370
fixing bugs
clean up
Include list/tree in tab order and cycle within QuickInput/Open widget (fixes #51850)
Replace schema check with file service handling
typo
do not support folder paths on windows as folder uris
anounce once debug console and output get cleared via actions
history navigation: read out changes to screen reader
don't show title for symbol, #54747
fix #54741
Implement #47502
Disable npm code lens by default
remove unused imports
replace getDomNodePagePosition with more specific functions
ignore sidebar when workspace is empty
Reverted some changes.
more fields
clean up test name
use range for hightlight and selectionRange for revealing, #54857
use selection range for quick outline, #54857
breakpoint checkboxes with tabindex = -1
fixes #54853
show no symbols found message in outline tree, #54744
don't show ... when outline model is empty, #54744
Handle URIs with no scheme
Adopt folderUri changes
Same specialization for ts
Document jsx specialization
Add special case for js(x) template strings
update to tasks 2.0
Pick up new TS insiders version
Update settings description opacity to reflect themable setting for #52479
Dots
Update settings text for my chunk
Upgrade vscode-xterm
Try to checkout a new local branch when checking out a remote branch
Updating colorization tests
Cleaning up emmet setting descriptions
Updatting setting descriptions
Add periods for setting descriptions
Use code in setting
Use enumDescriptions
Update settings text to match new style suggestions
Upgrade vscode-xterm
Prevent duplicate terminal API data and input events from firing
Remove old show unused settings
Enable experiments
Update opt out msg
Add final tests
debug submenu
add go submenus
Restore trailing newline
Adopt 'enumDescription' in settings contribution
update grammars
Improve backwards compatibility case handling
Adds webview select-all command (#54851)
Remove more PPromise - #53887
#53887 - remove more PPromise usage
More terminal settings polish
remove unused code
Update tests
Recreate monaco.d.ts
Second round implementation of autoclose config
Update badge in panel title
Search - Don't show full paths to workspace folders in search results, to clean it up and match the explorer
Add missing comma
Implement #47502
Ongoing migration to if/when
update distro hash
update distro commit
Reserve revealed editor area after using git diff
Don't assume local file (#36236)
Update
Move to stable API (#53327)
debug: better overflow behavior for breakpoint name
Move back button to QuickInputButtons (#53327)
debug: more elaborate breakpoint input model resource to be able to create 2 at the same time
Update distro
Revert "Update to Electron 2.0.x"
Revert "node debug extensions go back to 1.26.4"
node debug extensions go back to 1.26.4
Add missing nls key in package.json, fixing #54714
Bump node2
Option to opt out of telemetry collection
GDPR annotation for experiment event
Settings editor - also fix setting links in enumDescriptions
Settings editor - descriptions cleanup #54690
Settings editor - better setting link format, write all enum values when one has an enumDescription
Settings editor - show enumDescriptions in old settings editor
node-debug@1.26.5
fix keybinding resolution
Update comments
Remove todo
show proper path in the dialog
check for folder uri
Revert "remove extensions to download (temp)"
remove extensions to download (temp)
comment out failing tests
Remove unnecessary quotes from terminal setting defs
Clean up terminal/execution settings
Update js/ts grammar
Use flatten in a few places to improve readability
Create links for files section in tsconfig
some fixes for mac menus
Make sure we disable suggestions properly
Use single diagnostic collection for js and ts
Use toDisposable in a few more places
Use toDisposable in more places in workbench and platform
Use toDisposable in more places in editor
Un-deprecate webviewPanel.viewColumn
Settings editor - fix 'code' font in setting description
Settings editor - clean some setting descriptions, #54690
Settings editor - don't write empty enumDescriptions
merges
#54483 Forward compatibility
#54483 Forward compatibility
markers: display paths relative to the workspace root
Task part of #54510
adopt IWindowInfo to folderURIs
support URI in openWindowCommand
debug: remove not in debug repl context key
Use the new optimize-editor task
Add an alternative optimize-editor task
Add a compile-editor-build task
Add extract-editor-src with treeshaking task
backupMainService :lipstick:
debug: simplify context keys computation
fixes #54011
Added setting to control visibility of code lens
Add code lenses to run/debug a script
removing the old menubar implementation
Sbatten/menu font size (#54695)
Settings editor - show enumDescriptions inline when there are more than 10. This specifically targets the files.encoding setting. See #53911
Begin move to if/when style
Update color to meet color contrast ratiom, fixes #52580
Update opacity to meet color contrast ratio, fixes #52479
Update line number colors to meet color contrast ratio, fixes #52420 and #52432
Autocomplete for extension search @-operators (#53915)
Down arrow moves focus to extensions list (#53616)
Check with respective owners
Remove usages of fspath
Bump node2
Settings editor - remove leftover reset button
Workaround an issue where the terminal could overflow into right sidebar
Remove usages of folder paths
menubar registration: layout menu to appropriate owners
menubar registration: appearance menu to appropriate owners
menus: move View menu contributions to appropriate owners
menubar registration: file menu
breadcrumbs - fix reveal before layout (once again)
backupMainService : test folderPath to folderURI migration
menu: move debug menu registration to debug.contribution
breadcrumbs - add "Toggle Breadcrumbs" to "View" menu
Migrate legacy folder paths
:lipstick:
breadcrumbs - disable min-width test
breadcrumbs - prevent scrollbar flashing
breadcrumbs - show hellip when outline info is available but not intersecting with the current selection
Allow to create a Client with a Protocol
Allow the Protocol to be disposed and extract buffered data
Improve type declarations
Add ability to generate standalone editor usages file
open editors: show actions for focused elements
breadcrumbs - don't use selection background color but an arrow
:lipstick:
Rename to SingleFolderIdentifier
fixes for backupMainService
Update workspace labels
Use folder-uri instead of folder-uris
list: simplify if statement
list: do not steal focus for hidden elements (properly get style)
list: do not steal focus for hidden elements
Use macOpenFileURIs to avoid confision with global.macOpenFiles
fix missing icons in symbol search picker
breadcrumbs - nicer picker creation
breadcrumbs - don't show folder icons, shrink items for less scrolling
fixes #52658
fix windowsFinder tests
Add support for folder uris using folder-uris parameter
Adopt backupMainService to folder  URIs
fixes #52658
breadcrumbs - make tab select an item from the picker, also tweak arrow key behaviour
fixes #52601
breadcrumbs - add 'Focus Breadcrumbs' command
fix microsoft/vscode-pull-request-github#43. Show comment indicator when editor has focus.
Allowed undefined options.filePattern
Trimmed file search strings in the search menu
Don't treat interpolated strings in make files as content strings
Format
Extract isValid hover check
Return results directly instead of using temp array
Refactoring
Use coalesce
Use DefinitionLink internally  instead of location
Make sure our internal DefinitionProvider has backwards compatible api
Finalize definition link (#54424)
Treat Xamarin .workbook files as markdown (#51167)
fix #53590 (#54257)
High contrast border in comments editor widget
Block quote in comments styling, fixes https://github.com/Microsoft/vscode-pull-request-github/issues/60
Move cancellation  files to own dir
Extract common type
Prefix unused with _
Only exec server call in try catch
Use toFileLocationRequestArgs
Remove unused property
Clean up provideDocumentSymbols
Remove old navtree call
Reducing scope of try catch to just exec
Remove precondition from run terminal commands
Add unit test helper, testRepeatOnly
Open release notes in product from changelog in built in extensions (#54522)
Add precondition for terminal menu items
Use URI instead of Path for folders
fixes #54479
Adjust comment glyph height
fix #54156
Prefer const enum over const object
Improve terminal ID and LABEL references
Prefix COMMAND_ID enum with TERMINAL
Organize commandsToSkipShell term commands
Reference terminal command IDs from common
Reference termiinal command id enum for menu
Move all terminal command IDs into common/
Properly remove diagnostics.ts
Move terminal menu to parts/terminal
Move collapseDeepestExpandedLevel action implementation out of tree
breadcrumbs - don't let editor group steal focus
breadcrumbs - use darker drop shadow in dark theme
set header size to its actual size, skip assertion when writing, #54570
Revert "remove diagnostics.ts"
remove diagnostics.ts
move perf-mark for local storage access to index.js
debug: fix tests
Support to run the selected script in the editor
fix #54554
fix scrollbar issue
fix color for title bar part
fixes #54075
fixes #53419
reliable way of creating workspace key
fixes #53520
fixes #53240
Revert "shell: use system-ui font"
debug: cleanup how variables with no value are rendered
fixes #54496
fix #54431
fix #54489
breadcrumbs - tweak spacing of icons in no-tabs-case
breadcrumbs - selecting a folder opens next picker
Disable flaky test
Navigate to next comment thread.
Bump node-debug2
Typo
Changelog for built in extensions #54098
add GDPR annotation
Removing PPromise - fix findTextInFiles
Settings: Utilize selectBox.setAriaLabel Related: #53821
#53887 - remove PPromise from SearchService and SearchModel
add preconditions to debug menubar actions
More descriptive More label (#54484)
fix #54444
Settings editor - warn for core settings missing from settingsLayout.ts
Settings editor - include Breadcrumb settings, fix #54442
Settings editor - exclude [override] setting entries
Add onSearch activationEvent for search providers
Settings editor - "File Explorer" -> "Explorer" - #53129
Custom TitleBar Randomly Becomes Unclickable (fix #52522) (#53209)
unify keyboard and mouse focus in menus (#54428)
breadcrumbs - fix title overflowing icons
#54483 Do not define new type of identifier for single folder
#54483 Prepare renderer to accept folders as URIs
use 'new' symbol icons also for quick outline
breadcrumbs/outline - add icon for local variable
breadcrumbs grow picker with item width
add todos
workaround for #52196
update d.ts (node.js, electron) to latest
ensure original-fs is used in all our AMD code (#54468)
debug: add loaded scripts view
fix #52583
symbols - get rid of sprite, use individual icons and rules
debug: don't send 'terminate' request for 'attach' configs
node-debug@1.26.4
initially hide filter box and reveal it when starting to type, #9418
breadcrumbs - fix npe when opening input without resource
breadcrumbs - fix picker tree height
fixes #54226
fix #54359
linux build scripts
Seed shuffle of recommended extensions per session (#53505)
Add new cases to lose focus (#54141)
Pull in third party notices from typescript
Add telemetry on organize imports
Don't enable commit characters when isNewIdentifierLocation is true
fix an issue with menu theming with dark themes
Update basic programming language icon (#54402)
fix telemetry event
ExtensionManagementChannelClient: Use URI transformer for outgoing calls ExtensionManagementChannel: Just review URIs
fix linux builds
fix #52923
fix linux builds
fix #54375
fix typo
debug: support termiante request
fix #54117
workspace edit - clarify size
publish linux
debug: simplify reacting to exit events
:lipstick:
breadcrumbs - more telemetry for settings
watch-client
node-debug@1.26.3
fix tests
better fix for #54295 & #54369
Revert "fix #54295, fix #54369"
fix compile issue
add setting to show/hide or show last part of file and symbol path, #9418
breadcrumbs - add setting to use quick pick instead of individual pickers
diffEditor.border
fixes #54378
breadcrumbs - also reset focus when moving back to the editor
fix reversed paths
add 'terminate' request to DAP
don't show separator on first part of relative path, #54370
differentiate between revealing and showing a picker, #9418
Add a reason attribute to filePUT and fileGET (#54244)
fix #54295, fix #54369
SelectBox Clients: Add aria-label value options (#54360)
Update css grammar for #53606 and #53797
#54204 add commands to apply stash
electron 2.0.5
Support multiple configurations in extension editor (#54116)
Edit pass on new built-in extension comments (#54277)
complex command typos and add dash between argument and desciptions
Add Focus search list command
Pick up new TS insiders
Use properties for commitCharacters
breadcrumbs - slashes and symbols
Only use  isNewIdentifierLocation to disable commit characers instead of all suggestions
Remove extra await
Improve the macOptionClickForcesSelection message
tweak shadow and some spacings
#52627 Get the code actions from markers model
fix #54094
Minimal fix #54255
#52627 Show quick fixes per marker
breadcrumbs - 'show-file-icons'-style
breadcrumbs - move config logic
hide overflow
breadcrumbs - differentiate between showing file or symbol icons and enable the latter for the no tabs case
refine type to find/highlight
symbol picker always shows all symbols
use weaker type-to-find from tree logic
fix screen cheese when using tabs and when breadcrumbs don't show
prepare for focus-input-as-you-type
extract HighlightingWorkbenchTree for future reuse
fix #54174
add _workbench.enterWorkspace (#54129)
menu ignores actionRunner
fixed spelling mistake from 'occuring' to 'occurring'
remove bug hunting code
Settings editor - tweak padding
Settings editor - fix leaking memory by creating controls for every render
Use contributes.grammars instead of languages to identify extensions that contribute basic syntax #54098
Link to docs in the website from builtin extension readme #54098
Link to CONTRIBUTING.md for built-in extensions #54098
Move how to contribute to a separate file for built in extensions #54098
Strip commitHash from reduced telemetry logs
Organize all imports in ts extension
Move resource map to utils
Also support regular json files for tsconfig document links
Add link provider for jsconfig and tsconfig files
Run organize imports on code action folder
Use destructuring
Don't create empty arrays to signal no return types
Renaming for clarity
Add option to use previouslyRunExperiments in experimentService
remove release.sh
fix #54171
Refactoring experiment service for simplicity
fix spacing issue when not using tabs
reveal then select, box input & tree in their own containers to prevent screen cheese
reset match highlights
operate on a copy of the outline view model
add find box to breadcrumbs picker
vscode-xterm@3.6.0-beta3
fixes #54186
fix arch references
fix arch
move auto-attach into new built-in extension; fixes #53586
improve linux builds
Make default terminal texture atlas dynamic
fix npe
add telemetry for win32 setup target
fixes #54148
Remove TODO
Remove comment from import
More clean up, add tests back
fixes #54014
breadcrumbs - reveal & focus select item in picker
An option to copy only plain text to clipboard.
fix #54087
change how snippet suggestions are computed, #53945
fixes #54105
fixes #54105
:lipstick:
theme custom menus (#54003)
:lipstick:
#48430 Add tests for extension pack disablement
#48430 Add disablement support for extension pack
#48430 Use extensionPack property in manifest
Do not use optional property
#48430 Do not activate optional dependencies
#48430 Skip optional dependents while disablement
#48430 Exclude optional dependents from uninstall
#48430 Read dependencies with new format (optional property)
#48430 Change return type
fix #54057
fix #54135
explorer - adopt parsed expressions
explorer - adopt faster lookup for siblings
Avoid repeated scanning of siblings array (#47187)
fixes #54047
update distro
update settings description
fix #54052
findTextInFiles - add second signature for optional options
Settings editor - remove redundant 'parent' field
Workaround TS DOM typing
Unused import
Settings editor - fix link tabbing
Settings editor - selected item theming
Validate comments are non-empty before attempting create
Standardize readme across built-in extensions #54098
Remove obsolete test
Remove ITerminalProcess.isConnected
Clean up and fix handling of environment
Search provider - remove file pattern checking code from extHostSearch
Settings editor - fix link color
Use Typescript's CompletionInfo.isNewIdentifierLocation
wip
Move execute into geterror class
Convert GetErrRequest to class
tagCompletion -> tagClosing
Extract getInsertionPositions
Hook up CancellationToken
Reduce nested statements
Prefix private members with _
Clear auto closing tag timeout
Pass shell launch config to TerminalProcess
add telemetry appender that writes to log (#53603)
Remove some comments
fix #54000
use pointer
Regroup view menu (#54077)
get paddings right...
remove unused class,  #54030
fix UI calls from shared process
tweak picker size
reveal focused crumbs, reveal last on update
support file decoration colors (disabled for now)
updating distro commit
hover style and backslash for windows
fix z index for context menus
use margin instead of padding for nice background color
hide breadcrumbs when not active, render item italic when not pinned
omit last separator for path breadcrumb
add active selection styles
rename style file
no tabs -> no icons, tab -> icons
fix margin/padding
simplify height computation
no outline for breadcrumb widget, no wrap around when focusing
add breadcrumbs to no tabs title
move breadcrumbs control to super type to enable reuse
shell: use system-ui font
put context view inside workbench
fixes #54031
remove monaco-workbench-container
windows - fix keybinding conflict
undo style change
urgent build fix
don't pollute context view dom node
correct icon height style
enfore contextView-styles that can get lost due to `monaco-workbench`-style
escape newlines in outline item labels
remove dead branch
Tidy up terminalProcess
Don't build terminalProcess module
Settings editor - description tweaks
Settings editor - allow linking to other settings from the setting description
Remove obsolete test
Remove normalizePath from BufferSyncSupport
Use resource map for pending diagnostics
Request diagnostics on synced buffer
Extract duplicated triggerDiagnostics code to function
Extract PendingDiagnostics to own class
Remove duplicate code for creating FormattingRequestArgs
Remove cyle around requestDiagnostic
Settings editor - fix clicks on the setting header or descritption stealing focus
Settings editor - render enumDescriptions
Settings editor - include missing "suggest" settings
dead code
renable disabled test. Seems fine now.
#53911 - render setting descriptions as markdown
Move terminalProcess to run in renderer process
Update js/ts grammar
Update distro
Pass in method directly instead of lambda for some events
Make sure we clean up config change registration
Don't try closing for cases like <div>> when user has just typed last >
Remove active editor listener
Reuse isTypeScriptDocument
Don't make extra `findFiles` call on TS 3.0
Minor typo fix
Don't check nav tree for directory rename
Gate workaround for #52967 to TS 2.9
use alt to focus the menu and and navigation, better focus management (#53924)
Permit to update path when export(s) keyword in file (#53964)
Allow text selection in comments
Add buttons to go to extensions config files (#53508)
remove debug setting
cleanup splice types
list: IVirtualDelegate
more color fixes
only hide breadcrumbs when last editor goes
focus editor, unfocus breadcrumbs when dismissing the picker
fix breadcrumbs styles
move breadcrumbs into title control, enable different style depending on tabs vs no-tabsfor a start breadcrumbs only show with tabs enabled
fix win build
list: disposeElement
remove bad timeout
list: optional renderer.disposeElement
tree: left/right arrow navigation
tree: node.collapsible
Transform languageId of zh-cn,zh-tw to zh-hans,zh-hant when pull translation from Transifex.
update node-spdlog to 0.7.1
list - list.clear only when there is a selection or focus (for #53950)
Added contrib extension to have focus follow mouse (fixes #25685).
Update out-of-scope comment, add /needsMoreInfo
more windows build error catching
use exec in win32 continuous build
fix product build
update path
fix build paths
use yml templates for continuous build
use 32 bit  env variables
tfs: use build templates
make git activation async
use Shift-keybindings to workaround eager list/tree keybindings, move picker when visible and focus changes
back to systemPreferences.registerDefaults
focus first element in tree
check for disposed buffer
fixes #53898
consider title part
fixes #53773
safeguard list splice calls
async execution order tests
diff editor border set to match regular editor border. Solves issue with no shadow showing no diff between editors.
Add initial support for auto close jsx tags
Move isTypeScriptDocument to languageModes
fixes #52239, allow for redirects from travis-ci.com
fix an issue with having to double click the menubar on context changes also greatly reduce the amount of recreation for menubar changes
Bump node2
Update colors to meet color contrast ratio, fixes #53140
Update colors to meet color contrast ratio, also fixes #51984
Simplify increment decrement of currentSignature
fixes #53881
Increase opactiy to meet color contrast ratio, fixes #51984
fixes #52911 #53070 and aria roles with menuitem and submenuitems (#53289)
adding context change listener and buffering calls to setup the menu (#53622)
Settings editor - change keybinding and actions to open new editor by default (for insiders)
Settings editor - fix offset scroll shadows
Changes for feedback
Update markdown grammar
Update to TS 3.0 insiders
update comment
add shadow/border to breadcrumb picker
add log statements to catch weird bug
node-debug@1.26.1
don't access disposed model
remove ppromise usage from task
remove PPromise from IPC
fix  #53836
keep focused item, reset focused when item has changed
Use m for Terminal menu mnemonic
remove app.getPath('userData') calls
better selection/focus management in breadcrumbs
Adresses #53752: executeTask Cannot read property _key of undefined
Rewording of sentences in Formatting section (fixes #53548)
:lipstick:
don't access disposed buffer
Restore "snap to minimize/maximize" feature with grid editor layout (fixes #51614)
add setting to enable/disable breadcrumbs
fix typo in fileSearch
split outline styles into outline tree/panel styles, style context views
wire up pickers
fix #53837
protect against terminated debug adapter; fixes #53834
Remove commas
fixes #53849
:lipstick:
less styles for breadcrumbs
use collpase icons to separate elements
fixes #53668
fix #53749
#53139 Remove zh-hans and zh-hant from the proposals list
Bump node2
keybindingsEditor GUI follows settings now.
Close param hints if you reach out of bounds of list instead of cycling
Make sure  quickSuggestionsForPaths is respected on TS 2.9+
Increase opacity to meet color contrast ratio, fixes #52684
Update colors to meet color contrast ratio, fixes #52586
Increase opacity to meet color contrast ratio, fixes #52587
Incrase opacity to meet color contrast ratio, fixes #52026
Prevent restoring a disabled panel
Remove returns
Update color to meet color contrast ratio, fixes #52570
Correct term char width calculation under DOM renderer
Increse overrides of renderHeaderTitle vs renderHeader
Don't show participants label for new comments
Move header logic to parent class
vscode-xterm@3.6.0-beta2
select sidebar, activitypart, and statusbar
fix #53675
special handling for status bar part
align lstree implementations
cleanup git relative path calculation
fix #53713
Read results also when filtered
support empty, folder, and workspace case
:lipstick:
:lipstick:
remove command from scm title
:lipstick:
capture & restore dimensions and background colors of our parts
:lipstick:
use more resource level settings for git
move successful push notification into repository
improve selection restoration
whitespace
update docs
Addressed #53673: Cake Extension for VS Code no longer fully working in 1.25.0 release
git: extract categorizeResourceByResolution
fix #44106
improve conflicts during git rebase flow
debt - less array creation in stable sort
remove arrays.last
debt - use more minimal edits when virtual documents update
add option `editor.suggest.snippetsPreventQuickSuggestions` #50776
disable quick suggestions when in snippet mode, #50776
darwin cli: delete symlink as admin
suggest user setup for windows users
Removed OS specific text on 'Open in Terminal' command. #53604
Update colors to meet color contrast ratio, fixes #51831
Revert "Reformat test .asar file, fixes #53194"
Reformat test .asar file, fixes #53194
Update colors to meet color contrast ratio, fixes #51974
Handle spaces in portable install path on Linux for process explorer calculations, fixes #53166
Increase opacity to meet color contrast ratio, fixes #52023
Make terminal access APIs stable
:lipstick:
Add telemetry for toggling view visibility
move height into control
kein bock auf mock
enable test (for #52414)
slightly better fix for #52447
fix #52447
add tests for breadcrumbs model
add comments
some breadcrumb work
debt - avoid WinJS.Promise.cancel
remove ppromise usage from chokidar
:lipstick:
fix watcher errors
remove more progress usage from QuickOpenController
remove extra types
remove progress usage from QuickOpenController
less nervous breadcrumbs model
remove PProgress from QuickInput
fix bad typing
review comments
better fix for #53459
add missing null check in case not our submenu fixes #53566
fix #53532 again (#53568)
update spacing for menu items and separators (#53564)
cleanup submenu container when disposed fixes #52917
remove ppromise usage from nsfw ipc
accessibility: fix debug section names
outline model work
align watcher interfaces
fix tests (revert #53532)
fix compile issue
add missing monaco.d.ts changes
missing monaco.d.ts
Revert "menu: remove terminal menu"
use HKLM for classes root key
use events instead of PPromise for search IPC
debt - use Thenable in IProgressService#showWhile
debt - less TPromise-usage
fix #53533
debt - avoid promise cancel
debt - avoid WinJS.Promise.cancel
debt - use TimeoutTimer instead of WinJS.Promise.timeout
menu: remove terminal menu
Editor: load changes to file in the background if file already loaded (fixes #53532)
debt - remove one Promise.join overload, #53526
debt - avoid winjs.promise, add cancelation token
debt - use TimeoutTimer instead of TPromise.timeout
debt - use TimeoutTimer instead of TPromise.timeout
debt - avoid winjs.promise, add cancelation token
debt - avoid winjs.promise, add cancelation token
remove ProgressCallback from monaco d ts recipe
debt - avoid winjs.promise, add cancelation token
debt - avoid winjs.promise, add cancelation token
debt - async winjs.promise, add cancelation token
:lipstick:
debt - async winjs.promise, add cancelation token
debt - use TimeoutTimer instead of promise
Go through error handling for unhandled rejection errors
more PPRomise cleanup
debt - async winjs.promise, add cancelation token
fix ipc tests
clean VSCODE_PID from terminal environment
debt - async winjs.promise, add cancelation token
remove more ppromise usage from theme picker
debt - async winjs.promise, add cancelation token
fix format
use electron 2.0.4
cleanup types
cleanup types
cleanup types
monaco.d.ts
ipc events should not use TPromise
fix NPE
fix bad smoketest launcher
register disposables for menubarPart (#53467)
findTextInFiles vscode-api-tests test
findTextInFiles - change includes/excludes from array to single object to match findFiles
Search Provider - delete unused search stats
Search Provider - implement clearCache
Improve word part move and delete for capitalized snake case
Search Provider - docs for registerSearchProvider
Use correct type
Include organize imports actions in vscode.executeCodeActionProvider results
Clean up file
Update js/ts grammars
Test for joinPath
Search provider - remove absolute path checks from extHostSearch to match fileSearch.ts
Search provider - fix cancellation in extension code
Search provider - give different cacheKeys for different folders
Bump node2
remove progress usage from theme picker
Added new Actions
fix #53459
Make subsections of viewlets also have heading titles
Use HTML headings for viewlet titles.
Search provider - Make provider methods optional again
Search provider - add docs to proposed API
New new setting
add product name and commit to timings logs
debt - less winjs.promise
Generalize the debug argument matching
debt - avoid forceOpen if possible and rename to forceReload
#53130 :lipstick:
#53130 Do not use new chinese locale id everywhere
debt - use cancellation token for outline
Move to latest vscode-nls for corrupted cache support
debt - add switch to append the ellased-time to a file and then shutdown
remove progress from async
remove progress from winjs promises
Reduce usage of winjs promise progress
cleanup more disposable usage
update inno_updater
empty -> Disposable.Empty
Add support to regenerate nsl cache if corrupted.
Exclude all build folders to make the TS file watcher calm
:lipstick:
:lipstick:
use electron 2.0.3
use HKLM for environment changes
fix compile/api issue when using es6 (which is actually correct)
avoid async and winjs.promise, #53442
avoid async and winjs.promise, #53442
avoid async and winjs.promise, #53442
cleanup more async
debt - combine native promise and cancellation token source in 'CancelablePromise' type
update distroy commit
Remove unused import
Change SearchProvider to be URI-based, not string-based. #50788
Search provider - some clean up
Add missing methods to strings.ts
Clean up strings.ts
SearchProvider invoked on every keypress
Don't use tpromise + async in webview methods
moving the resizer to be added last and fixing sizing
Focus on input for new comments, fixes Microsoft/vscode-pull-request-github/issues/14
Show reply button on newly created comment thread
Adding workaround for release notes not having syntax highlighting on first load
Don't try injecting vscode api into webviews that have scripts disabled
only use the builder pattern for menubarPart refs #52884
remove query selector call refs #52884
remove auto save ipc
Make titlebar more consistent with Windows 10 (#53211)
fixes #53309 (#53456)
Force crosshair cursor in column selection mode
Expose macOptionClickForcesSelection terminal setting
Update typings
Update xterm.js
(doc) Corrected Stack Overflow tag name (#53431)
Remove title attr from review-comment
remove more async TPromise
clean more async
#53442 Avoid async and winjs
Avoid aync and winjs-promise
cleanup more async/await
cleanup more async
#53442 Avoid async and winjs promise
fix dirty diff provider order
cleanup more promises
be careful with getSettingsSearchBuildId
cleanup
node-debug@1.26.0
#45072 Add a prompt to update the extension
:lipstick:
avoid async and winjs.promise, #53442
unsafe canHandleResource usage (part of #48275)
avoid async and winjs.promise, #53442
avoid async and winjs.promise, #53442
avoid async and winjs.promise, #53442
avoid async and winjs.promise, #53442
avoid async and winjs-promise, #53442
fix sign.ps1
comment out settings search stuff
move snippet-suggest option to new internal model, #42750
fix build order
add extension path mappings when extension path cannot be found, #53295
fix nuget restore
Add tests from #52412
temporarily disable hygiene
64 bit only
fix #53434
wip: attempt to sign uninstaller
fix #53408 (for 1.26)
wire up `editor.suggest.filterGraceful` #52789
add editor.suggest-options bag, toward #42750 and configure graceful filtering for #52789
simplify async method
FIx #53426
Have a "Copy Relative Path" action as alternative to "Copy Path" (fixes #53435)
debt week code cleanup
fix #53424 (#53425)
Remove unused reference
findTextInFiles - 'null' skipes configured excludes
findTextInFiles - hook up includes/excludes
fix #52915 (#53313)
fixes #53254
Adding workaround for TS trying to update paths on file without exports
Add telemetry on TS refactoring usage
Use ts 2.9.2 for building vs code
Enforce node boundaries in places where it matters (#53192)
fix #52647
fix #53322
fix #53277
adopt api changes
update version to 1.26
fixes #53319
wip: tree keyboard navigation
tree: do not rerender on collapse state change
:lipstick:
tree: fix recursive visibleCount adjustment
fix smoke test
[css] update service (fixes #53159)
Add outline settings title
remove z-index from menu code (#53242)
Settings editor - don't show outline on editor background when clicked
fixes #53049
removing dummy commands from menubar
make it easier to use the mouse with submenus refs #52939
resolve file before resolving contents fixes #53204
fixes #52355
remove rule `'${' int '|' text (',' text)* '|' transform '}'` #52931
remove support for `'${' int ':' any transform '}'`, #52931
remove unused import
Prevent race condition where onDidChangeActiveTerminal wouldn't fire sometimes
remove workbench.action.openFolderAsWorkspaceInNewWindow
remove editor.debug.action.toggleColumnBreakpoint
Rename integrated terminal to terminal in view menu
Re-enable terminal menu
Disable terminal menu
update distro
update inno_updater
fix #53234
fix #52962
:lipstick:
only check for system install if not silent
fix update notification
Update (#49341)
fixes #53193
check for latest version in standard startup
add IUpdateService#isLatestVersion
menu knows best (#53214)
fix bad type in setup
Make it explicit that `deleteFile` will delete a folder recursively (#53205)
node-debug@1.25.4
fixes #53183
createQuickPick and createInputBox should document when to use them (fixes #52938)
fix #53179
Tweak settings editor sizing for #53111
Settings editor - special-case "Commonly Used" settings height so it lines up with the top of the TOC
Bump node2 with fix for #52953
Clairify webview serializer docs
Ignore Recommendation button on zoom/small width (#53079)
fixes #52359
fixes #52909
Simplify recommendations (#53178)
Ensure maximumDimensions have changes before firing onDidChangeMaximumDimensions
Make TerminalRenderer.terminal synchronous
Ensure ext host is told about first active terminal
support var substitution for multiroot workspace
Include cpuUsage.sh in out, fixes #53166
fix label
Update labels first
Set extension only if exists
Null check RegExp exec result
Validate initial value (fixes #52908)
breakpoint view: fix title
fix #52576
Select whole value when valueSelection is undefined (fixes #52906)
markers: use label for ui
improve win32 archive update notification
Make dimensions and maximumDimensions nullable
fixes #53089
fixes #52879
detect system installation on user installation
fixes #52991
fixes #52964
fix #52874
fixes #53058
use data folder for win32 and linux portable mode
fix #52948
fixes #52982
fixes #52892
win32 update service should notify url update on zip
more doc, fixes #52927
add recrusive-flag to deleteFile-function, #52941
fix #53144
fixes #52957
Update to new command for F8 (fixes #52186)
use DAP 1.30.0
check that document is still good to use, #53030
fix #52985
fixes #51660
no hover feedback for readonly folders
fix #53030
fix #52975
fix #53056
Revert "don't accept suggestions with tab when in snippet mode, fixes #50776"
fix #52962
#53043 Disable multi selection in extensions
fix #52963
fix #53087
fixes #52505
Add recommendations back to side bad after restore (#53025)
Use VS Code with a space in built-in extension descriptions. (#53080)
User VS Code with a space in built-in extension descriptions.
Use VS Code with a space in comments (#53078)
Use VS Code with a space in comments
Use hierarchical markdown document symbols
Don't use questions for webview property docs
this.fileService not available inside array.map
Make TerminalDimesions properties readonly
Mark events readonly and use const
Settings editor - fix editing settings during search
Use ReadonlyArray for window.terminals
Rename cols to columns
Move webview serializer api out of proposed
Never edit files under `node_modules` on update paths
fix colorize test failures
Rename terminal ext APIS to match convention
More tweaks to texture setting comment
Improve experimentalTextureCachingStrategy comment
update distro commit hash
[json] fix test failures
light theme: remove trailing comma
[themes] report theme loading problems when switching themes
remove unnecessary try catch aroud json.parse
[json] allow trailing comma by default
[json] problem with comment after literal. For #52523
fix #52893
Settings editor - fix setting float values. #50249
use systemPreferences.setUserDefault() to workaround #35361
Experiments (#52848)
Handle --enable-proposed-api without extension IDs as "enable all"
[css] Update grammar from octref/language-css
#52815 - Settings editor - 'enter' edits setting
#52815 - Better settings editor KB navigation
Add "Add to Recommendations (Workspace)" (#52837)
supporting #51954
Never apply an update path edit that tries doing something with node_modules
fixes #52284
Settings editor - fix refreshing when settings target changes. Add right-padding to setting
Settings editor - add "workbench/settings" group
Settings editor - shorter bool rows
update service
Separate grammar for jsonc (fixes #42539)
[json] fix for schema assocations in workspace settings
#52810 - Tweak settings editor header padding
UX Changes to ignore recommendations (#52514)
Submenus for Menu Widget (#52780)
Settings editor settings should be 'window' scope
[css] Update css-language-service for css/html
node-pty@0.7.6
fix #52807
Override light color for function and params in md code preview
Ensure terminal scrollbar is visible when find widget is focused
Remove 'absolute path' search service test which is now obsolete
#51597 - PR feedback
Documentation (#49340)
fix #51673
uri handler api: improve docs
Add an option to configure hover stickiness (#15667)
outline - don't unset selection when not finding an item at the editor position
remove logging entries
explorer decoration provider refactor
document onUri activation event
promote uri handler api to stable
improve Url handler docs
uri handler can return promise, we'll log any errors
fix #47553
build stuff
fix #51667
API: UriHandler, rename and docs
fixes #52550
fixes #52748
fix #46266
max_old_space_size flag out of range for 32-bit builds.
Review comments and fix tests
Code review feedback and remove double click command
Introduce double click command
update doc
Add doc
Add support for visibility and focus
selection change event
Support uninstall action for multiple extension management servers
Adopt recommendations - Get recommendation source along with recommendations - Add recommendation source to extensions - Adopt recommendations for muliple management
fix #52615
show snippets that start with a trigger character, #37166
fix #52491
ipc: log signal also when process crashes
Show lang pack availability msg in English as well (#52706)
fix #51769
Update to Electron 2.0.x
revert electron 2.0.x update
Bump node-debug2
remove unused code
tree: hide twisties for files
tree: quick demo
tree: missing visibleCount update
Add "Recommend" action to extension viewlet (#50419)
tree: iterators are optional
tree: make ITreeElement easier to use
Settings editor - fix measuring items with wrong template
tree: expand/collapse on click
tree: simply expose ITreeNode objects to list
tree model: set parent chain
Improve Extension editor UI (#52126)
Settings editor - left-align reset button
more tree
first tree showcase
tree: more wrapping code around list
treeModel: setCollapsed
node-debug@1.25.3
:lipstick:
list > view
tree: first sketch
tree: cleanup
tree model :lipstick:
tree model: better error handling
more tree model tests
unify tree models
Settings editor - checkbox/textbox styling
Settings editor - :lipstick:
Settings editor - force double-click open mode on TOC
Settings editor - sync scroll from settings tree to TOC tree
first successful CollapsibleTreeModel tests, woo
CollapsibleTreeModel
tree with iterators
iterator filter
Settings editor - use inline checkbox control
Change custom Checkbox to expose an onChange Event instead of taking an onChange callback in options. Otherwise it's impossible to reference the checkbox from inside the callback while constructing a Checkbox
Settings editor - move checkbox next to description
Settings editor - larger space between description and value
use iterators in tree model
Revert expanding only non empty views as that would override user choice #52442
Avoid Installed in default to avoid duplication #52442
Settings editor - tweak padding and spacing
fixes #52192
monaco tokenize API polish
monaco tokenize2 fixes
tokenizer2 APIs for monaco
move trie out, flesh out setCollapsed
improve user setup background update flow
fix tests
fix bugs
tree.getElementPath
Allow to customise background color of the editor pane visible on the left and right side of the centered editor layout
Make hover delay time configurable (#15667)
Show hover from action immediately (#15667)
streamline win32 user updates
remove unused import
Pass server to install action
Add a method to get default server
Adopt to multiple local extensions
add install action to disposables
Check and pass locals
Extension management - an extension can have multiple locals
Avoid NPE
Ignore updateOptions calls which do not change anything
fix compile error
first cut of FileWillRenameEvent with support for workspace edit, #43768
add AsyncEmitter #43768
fix product json path
Allow editor.hover to be an object
better typed Trie
inno: no external files
list view: make sure all templates are disposed when list is disposed
fix #51768 (#51849)
Add 'contributedByExtension' field to IConfigurationNode and ISettingsGroup. We want to keep track of which setting groups come from extensions, so they can be displayed separately in the settings editor
Localize settings category names
Add "Click to view details" on extension list items' aria-labels (#51805)
Use property shorthand
node-pty@0.7.5
Documentation for autowrapping configs
Add html specific auto close config
tests and bug fixes
Implementation
Remove avoidable dependency of tipsservice in extworkbenchservice
debug: allow toolbar to be in two different vertical lines
With Joh remote file service: throw when doing a mutating action
Do not compute active indent guide if it is not needed
Add and implement check if dragged item can be dropped on open editor
make sure jsflags are send asap #52581
fix main.js/mkdir #52581
T extends QuickPickItem (#49340)
Copy extension-provided arrays (#49340)
Revert to old selection behavior (fixes #52365)
explorerResourceIsReadonly -> explorerResourceReadonly also add negative context key for simplicity
readonly: disable remaining modification actions / commands
outline - markers for every outline group, replace splice with inplace-coalesce
fixes #51651
file line detection: allow whitespace after shebang
outline - prefer active group when revealing outline element
path labels: if resource belongs to a root to show relative label use paths not toString (it encodes)
add jsdoc comment, fix #42631
Adding periods at the end of these sentences
Prevent possible NPE
Show disabled extensions separately and collapsed in default view #27061 #27061
Remove log
Clear Terminal's reference to custom key event handler
Bump node-debug2
Adding the git.syncRebase setting
propagate target notion
Make sure we correctly update local resource roots when switching previewed markdown file
fixes #52516
Add check to limit focus class on open editors when dragging
fixes #52421
Update deps
Swapped order of algorithms
Implemented algorithm for determining code preview popup content based off matching brackets
Make unused params with _
Flatted out abstract class with only one impl
fixes #52376
Definition link API (#52230)
EH search - Centralize vscode-ripgrep import in search extension
Settings editor - filter result list when a TOC entry is clicked during search
Settings editor - add setting to configure TOC behavior during search
Settings editor - show result count in TOC when searching
Use ignoreIfExists for creating new files during refactorings
outline - use better twistie knowledge
Tweak keybindings on Windows
Update documentation.
Disable history navigation because up and down are used to navigate through the suggest widget
Add test for snippet transform with indention.
Add word part selection commands & tweak mac keybindings
use posix path math with uris
Stylistic edits
Remove disclaimer (#49340)
fix isClickOnTwistie
tree: expose shouldToggleExpansion
More title polish (#49340)
build and publish win32 user setup
fixes #52428
_allEntries isn't API, #10659
some jsdoc #10659
update distro
add ignoreIfExists-option #10659
debug: stop support for debug.hideActionBar
better grid 2x2
preferences editor needs a min height
Don't let DOM renderer render outside cols
Type terminal smoke tests
propagate isReadonly properly
Update reaching into xterm.js internals to work after layering merge
vscode-xterm@3.5.0-beta14
override -> overwrite, #10659
add partial test #10659
rename/create should be able to define override behaviour #10659
Ensure unique decoration keys
Polish title (#49340)
splitview: left align all elements
centered layout: propagate dimension constraints from view
center view: do not reset grid
vscode-xerm@3.5.0-beta13
Writeable active and selected items (#49340, fixes vscode-azure-account#67)
manifest ideas about better names in WorkspaceEdit #10659
nicer import
fixes #52409
remove centered editor layout from layout menu
fixes #52370
remove extra center action
title :lipstick:
Shorter duration
Settings editor - hide TOC during search
Settings editor - move TOC back under header
Use workspace edit to create new file on refactor
Adding note on webview persistence
Remove button that shouldnt show up (#52360)
Extend the default enabled before set
Add config option for when autoclosing is enabled.
Add ability to ignore recommendations both globally and at a per-workspace level (#51941)
Treat comma as a commit character in js / ts
removing invalid classes from extension actions
Keep deleting lines when triggering deleteAllLeft on column 1 (#28392)
Make sure we trigger js/ts completions on /
Add tag closing completions
Separete scanning and filtering extensions
fixes $52275
grid - tweak autoFocus in quick pick depending on active editor group being empty or not
initialize title in custom titlebar
fix #52212
Update js/ts grammars
Update markdown grammar
debt - avoid async import when chained with WinJS promises
grid - fix bad overlay height value when dragging
Minor edits
follow up: lastResolvedDiskStat can be null
Open readonly files as readonly editors (#52337)
disable actions and commands for readonly resources
JSONValidationExtensionPoint: use extensionLocation
fix comment for #51695
add test for #42638
more testing on #10659
delayed loading of vscode-textmate
enable more tests #10659
Use posix.join
update doc comment
add proposed onWillRenameFile event, #43768
add (internal) api for onWillSave #43768
explorerResourceIsReadonly context
win32 use install: first steps
move onDidRename to filesystem-events things, #43768
fileSystemProvider: isReadonly
fix #50187
bulk edit provider listens on operation events only, add more test (partity disabled due to #52212), #10659
fixes #52156
Back button constant (#49340)
fix #52208
fix #52201
Use fsPath if scheme is file
centered view: double click to reset size
fix #52095
centered view: no need to distribute view sizes
grid - some centered layout cleanup
centeredView: store ratios and restore them properly
Remove core language pack from build
tabs - ensure tab border draws over title border
splitview: split sizing tests
splitview: more :lipstick:
splitview: better naming
:lipstick:
fixes #52251
Revert "Revert "adding titlebar icon svg""
fix #52273
Revert "adding titlebar icon svg"
Re-enable 32-bit builds too
fix #51939
Re-enable rpm publish
Re-enable rpm builds
Settings editor - prevent settings list expand/collapse
Settings editor - Flatten settings list and style
Settings Editor - fix multiword category label cases
Settings Editor - tweak setting update/refresh behavior
Settings editor - restore Commonly Used group
Settings editor - cleanup from rebase
Settings editor - TOC :lipstick:
Settings editor - move TOC out to the left
Settings editor - sync selection between TOC and settings
Settings editor - focus tree on TOC selection
Settings editor - Make TOC and settings tree share a model and filter on 'show modified only'
Settings editor - hide TOC on search
Settings editor - fix search results
Settings editor - implement scroll on right based on left
Settings editor - Attempt 1 at introducing parent to the tree data model
Add TOC to settings editor
Clairify ts version requirements
Remove periods after required version numbers
Remove version notes for TS versions < 2.3.0
Use the model we already have
Position may be null
Move constant to private static
adding titlebar icon svg
Settings editor - debounce setting updates so onDidChangeConfig refreshes are less likely to conflict with editing
Settings editor - make enum and string type controls full width. Also lots of pixel pushing
re #50689, name cursor.undo as soft undo.
More robust workaround for path preservation
More restrictive regex for rename
SCSS unknown at rules
portable mode
remove console.log
[css] Add css launch config for testing grammar
Move diagnostic tags api out of proposed
fix link
fix typo, thanks @KamasamaK
fix compile error
less commented out test for #10659
add proposed api for workspace edit #10659
add proposed api for #10659
Formatting
Add test in insiders note
fix portable in linux
Extract common method
Explicitly mark accessibility of all methods
Remove unused param
status: remove unused CSS rule that gets inherited from parent
:lipstick:
Properly setting the default cursor of all statubar parts (#52149)
centeredViewLayout: height 100% to show watermark
fixes #52198
adopt CompletionItem#preselect in TypeScript #35551
add CompletionItem#preselect, #35551
update vscode-textmate (async loading)
use helper functino to clarify toSplitViewView cast
fix portable env state propagation in linux
adjust return type signature, #34968
move DocumentSymbol API to vscode.d.ts, #34968
renames: range/selectionRange #34968
properly pass onDidChange and react to other feedback
outline - don't reveal elements when expanding/collapsing them
more on #51666
fix #52165
outline - add twistie knowledge to event
outline - add twistie knowledge to event
show outline elements in picker
centerd view: address feedback
electron 2.0.x: force srgb color profile
Support controling the URI generated by problem matchers
also disable rpm for 64
centered layout: respect separator style
center layout by adding empty views, do not reparent html elements
debt - remove unused IFileService#rename() method
fixes #52150
fix #42640
merge master
linux: disable rpm builds
Revisit sensitive window split / group behavior on drag and drop (fixes #52063)
Update statusbar.ts
remove args
fix reaching out to grid element
fix #52093
fix #51915
portable: check folder
'README.md', One line is missing from Related Projects. (fixes #51911)
fix #52045 (#52160)
fix #52080
Revert "set portable mode"
safer method of setting mnemonic
only do mnemonics on menus
switching to accessKey, way cleaner
Clear up references causing dispose issues in terminal
Also test window.activeTerminal
Add test for onDidChangeActiveTerminal
some cleanup and :lipstick:
Add activeTerminal and onDidChangeActiveTerminal
Removed unneeded patch file
Added ARM64 build support
Expose the Terminal on the TerminalRenderer
Reduce setProcessId delay, use constant
Add test for sendText -> onInput
Add some more terminal API tests
Refactor ext host to share code
Delete unused file
Clean up
Don't manager xterm data event, it's done by the lib
Clean up API declaration
More event simplification
Simplify events
Get onData working for renderers
Support sendText in onInput
Rename onData to onInput
Add support for dimensions APIs
Improve documentation of terminal renderer APIs
app icon url
Introduce webview.active
Remove inline git revert confirmation alert (Issue #43625)
Update marked
polishing the title position with menubar
fallback to old menubar when using macOS or native title
fix bad side by side bottom margin
Remove unused variable
remove reference to triggerKind
:lipstick:
Clean up dispose
Don't show lightbulb if we only have a selection
Add support for multiple extension management servers
revert unintentional change
Add missing file update
Make sure we handle line number links correctly in preview
Add workaround for https://github.com/Microsoft/TypeScript/issues/24968
Show correct directory name in prompt
Slightly more opaque fade out
Remove extensions actions in electron browser
update the content class name depending on who is direct chald of editor part
editorPart: plugin centeredViewLayout
add centeredViewLayout
fix #42640
leave todo-tag
Tooltip typo (#49340)
Move action bar to title bar (#49340)
Title and steps (#49340)
outline element ftw
use absolute imports
fix update of file elements
remove unused icons
outline - also move icons
outline - move outlineTree to editor/contrib
outline - prepare tree classes for move
outline - more correct request caching
outline - only cache model request, not result
outline - don't cache canceled/errored promise
outline - use Provider#displayName instead of extension id
outline - remove unused
move outline model to editor/contrib
more cleanup
splice and editor tracking experiements
:lipstick:
fix errors
:lipstick:
Remove unused code.
Adress PR comment
empty editor controls should still have minimum width & height
expose layout constraints up to layout.ts
Add placeholder transformation tests.
Rewrite transform handling in marker.
Improve i18n of new task identifier related strings
address feedback
fix #51647
outline - cache a few requests for fast reuse and to prevent duplicated requests
move OutlineModel to common
splitView: inverseAltBehavior
Button event on InputBox (#49340)
Enablement flag (#49340)
fix #51872
grid: container as a readonly property - to make it easier to move the grid to another parent
fix - set missing background style
fix item height
add simple sorter
preferences editor dimension constraints
side by side editor dimension constraints
open editors view: make sure to dispose groupDisposable when view disposed
tweak styles
forgot to dispose
support styles in breadcrumb widget
BaseEditor exposes onDidChange, EditorControl forwards event
BaseEditor with dimension constraints
:lipstick:
splitview: expose minimum and maximum size
fixes #51936
Have enabled and recommended by default in Extensions view
doc: fix doc for `window.onDidChangeTextEditorVisibleRanges` (#51865)
prevent double registering event listener
move maximized into getUrl
fixing close icon coloring for light theme
reducing the size of the menus so view doesn't take a huge amoun of space
adjusting relauncher for settings change
addressing CR from ben
handle zoom for menubar
handling zoom for titlebar controls and icons as well as toggling title
Detect duplicate extensions
transform uri in install event
Move uri transformer to uriIpc.ts file
replace experimental resizeobserver with mutation observer
Make sure we always re-queue a diagnostic request after changing documents
fix splitview tests
Streamline QuickInput API (#49340)
focus group when selecting breadcrumbs
remove unused lines :)
add picker brackground color
fix focus issue
remove separator
enable icons
splitview: handle last sash with alt
splitview: alt key while resizing
splitview: alt resize exploration
fix tests
update color docs
Settings editor - show enum settings with unspecified type
API tweaks for grid editor (#51876)
fix compile
remove parts/breadcrumbs
move breadcrumbs into editor group view
Get terminal renderers working with name, onData
fix tests
Use URI for extension location
Use URIs for snippet files
Use URIs for language configuration files
splitview: round view sizes
set portable mode
product.portableTemp
Use URIs for contributed activity bar icons
add focus/next/prev/back commands
Don't freeze shelllaunchconfig
use master build badge
Use fsPath over path for terminal cwd
drop status bar playground, towards editor contrib
More platform work on terminal task system
Improve platform handling when executing tasks
Use path over fsPath for terminal cwd
fix #51866
adopt getPathLabel changes
Revert "show alternative actions when alt is pressed, not only on mouse over"
add symbol-kind-label as title, #51864
add setting 'outline.icons', #51864
Add missing new line
Allow an optional platform to be provided to mergeDefaultShellPathAndArgs
fix #51793
Remove unused vars
Working on fixing some webview leaks
Use type converter to convert location
Cleaning up implementations code lens
work with menubar visibility toggle
Use nameSpan for getting basic symbol range
Always normalize resources in resource map for drive letter on windows
Use global scope for checking dependent registrations
Using resource map for storing diagnostic
Remove unused api version
Support basic path updates on directory rename
Update to TS 2.9.2
Mark a few properties readonly
fix build.
show comments in diff view sidebyside.
Use first for stopping early when getting suggestions
Use first instead of sequence to pick best occurences
Don't reverse and mutate arrays  unnecessarily
Use first instead of sequence to pick first result
Use first for picking first sig help result
Allow updating webview settings after creation
Settings editor - Change description to a single line, remove arrow expand indicator
Indicate unused variables in high contrast mode
Extract resource map to own file
Extract ResourceMap
Move case normalization onto SyncedBufferMap
fix from merge and make titlebar position more reliable
merge master
Settings controls to bottom
refactor variable resolving
portable mode
fix #51666
fix #51670
Do not set focus when QuickOpen opens (#49340)
Action bar (#49340)
Clean up color theme URI usage
Clean up icon theme uri usage
add rendering for document symbol detail, #34968
outline - remove unused css
add DocumentSymbol#detail,  #34968
breadcrumbs fake integration
hello breadcrumbs widget
main.js cleanup
file labels: show root name separated by ‚Ä¢. Also absolute paths only for file schema
Revert workaround for black bar in terminal
fix build
fix build
fix #51751
Don¬¥t show npm explorer commands in the command palette fixes #51196
getPathLabel clients pass contextService when possible unles you explicitly want an absolute path
improve EH detection
emptyView: use DragAndDropObserver
empty view: fix hover feedback
Have ICommandAction use URIs for the icon location
fix #50933 and #50677
distribute view sizes on sash reset
fix #51678
several fixes and cleanup for native side
Only use one paths rename handler
reverse variable substitution passes; fixes #51075
Add editor.showUnused setting. Fade out unused instead of full grey out
maximize window in window configuration
handle menu/title overflow interaction
Make sure we use correct resource when accessing the `[markdown]` config setting
add editor layout menu, localize top levels
QuickInput Proposed API (#49340)
Minor formatting
getPathLabel: make only rootProvider optional
fix xml reference
Clean up terminal setting of options
copy pathL do not use getFileLabel, should be only used for labels
Add terminal option drawBoldTextInBrightColors
Add experimentalTextureCachingStrategy terminal setting
vsts: report smoketest results
Add a null check for terminal process
complete integration test results
Simplify terminal onData listeners
wrap up 2x2 grid
fix integration tests
grid - add action to split orthogonal
update proposed API to DocumentSymbol-type, #34968
internally talk about DocumentSymbols and WorkspaceSymbols. #34968
Handle all cases
fix #51679
grid.maximizeViewSize, grid.distributeViewSizes
empty view: drag and drop polish
debug: refactor how tasks are run and errors handled
:lipstick: action wording
fix preferences right hand side editor layout
fix #51680
removedKeybindings add repl.action.historyPrevious and repl.action.historyNext
Update history actions
drag feedback on empty view
validate invalid files
fix #44969
woops
dirty diff should not include char changes
history: simplify so that the first previous and next do not skip first and last element
Always allow workspace shellArgs []
editor - memento bugfixes during shutdown
editor - introduce and use editor memento
Allow customization of the viewlets in the default Extensions view (#47766)
unrelated
move lines back in workbench.ts
Update md grammar
Extract constant
Use lazy for creating output channel
Use _private
layout.ts
Language pack descriptions are the local language name (#51628)
start debug terminal from ext host
titlebarPart.ts feedback
window.ts move listeners
workbench.ts feedback
tests: scope xml file per platform
fixed review notes
wip: build show integration tests
Support for updating extensions from CLI
clean up custom title check
addressing some css feedback and resizability
name unit tests suite
Feature request: remove auto-closing of extension details (#51399)
Make Emmet: "update image size" consistant with "follow link" (#51630)
Use the `reasonText` atriburte of the extension reccomendation in aria-label (#51473)
Update comment panel visibility earlier on startup
move toggle autosave action to fileActions
move find/show references command back to editor
removing addMaximizeListener IPC, no references
:lipstick:
Simplify terminal launch logic
remove empty line.
debug repl: adopt IHistoryNavigationWidget
Support multiple workspaceCommentsProvider contributions in comments panel, fixes #51622
fix #51598
unit tests: use mocha junit reporter
repl: reuse HistoryNavigator
:lipstick:
grid - fix various icon issues
continuous build: dont publish artifacts for PRs
smoketest: continue build on error
Execute placeholder transformation on moving to next placeholder.
Add support for parsing transformations in placeholders.
editors - ensure setInput() always wire in the promise
Dont do async work on process.on('exit')  (#51411)
- Define IHistoryNavigationWidget interface - Ability to register a context scoped history navigation widget - context to enable / disable history navigation
Update xterm typings
Update xterm.js
#50730 Move progress service 2 to workbench
move filter/find action into overflow menu #49922
remove v-sash, use splitview instead
fix unit tests
select suggestions based on select property, #35551
fix npe
update grammars
folding: handle view states without provider
splitview layout should keep view proportions
fix #46818
fix #42726
Allow closing notifications with middle mouse button (fixes #51440)
fix #51358
Support grid descriptors (#51337)
about: node => node.js
Add V8 version to about dialog and prettify it (#51511)
workaround #47555
electron 2.0.x: disable experimentalFeatures
fixes #51245
Rename to context scoped widget
go back to regular yarn
update release name
hydrate menus and bring back checked functionality
Clean up svgs
Remove top margin and set height for flexbox to vertically align dropdown
Vertically center the restart icon
fixed:generator method of class autocomplete causes star(*) to be added to next line
Do the same for prevChange
Avoid an unnecessary settings target search, and correctly clear the lastFilterResult
small menubar toplevel view fix
fix duplicate editor action and keyboard nav issue
bugfixes and menubar hiding fix
more fixes from merge
cleanup from merge conflicts
Apply padding to each line rather than the whole box. (#51487)
Dont allocate space for details when there is none #27868 #10371
Better fix for #48619 as completionModel differes for each keystroke when there are completions of the incomplete kind
smoke
smoketest: bring back action clicking
Revert "smoketest: use commands instead of actions in git"
smoketest: more debug
git: parenthesis
smoketest: more debug
smoketest: more logging
handle diff editor for comments population.
Revert "remove experimental features flag."
smoketest: add logging
node-debug@1.25.2
remove experimental features flag.
Bump vscode-ripgrep
Update css-language-features contribution readme
Electron v2.0.0 (#48290)
wip: 2x2 grid
Revert "sash: use linked sashes as arrays"
Revert "sash: rename"
#12645 Use cmd+up/down as defaults for navigating
smoketest: more tracing information
#12645 Bring back focus next/previous input actions
sash: rename
sash: use linked sashes as arrays
#50583 Remove the existing history navigation commands
Show a warning if a filename includes leading or trailing whitespace
outline  - tweak icon size
Reenable unit test
nuke setting and add control in input box, #49922
Quick fix for failing test.
fixes #51381
smoketest: delay mouse click duration
smoketest: use commands instead of actions in git
fix compile error
#50583 Remove keybindings for existing commands and assing to new commands
use improved `openView` api, nuke singleton, #49922
add command and setting to navigate between highlighted elements only, #49922
node-debug@1.25.1
Return view in openView API
debug: adopt to new taskIdentifier
tasks definition schema add "type" property
taskService: getTask can now also get a Taskidentifier
fixes #51409
Provide method to fetch the JSON schema for task definitions.
grid: fix broken orthogonal sash updates
sash: prevent unnecessary state changes
sash: increase sash corner area
sash: debug flag
add setting to toggle between filter or find, #49922
cursor: do not spam console fyi @rebornix
debug: "console was cleared" when auto cleared
outline - polish padding around inputbox
outline - some lipstick
outline - show loading message when not yet showing a tree, show progress while artifically delaying update
hover feedback on toplevel menubar
outline - show progress bar above input box
some updateMarkers polish, more tests,  #49924
cleaning up titlebar, making context menus match
fix #51408
Search provider pattern switches should not be optional - #45000
Bump vscode-ripgrep
Notify user of need to restart code on locale change (#51400)
fix #50313. Statusbar selection info should honor content change as well.
Disable failing test, see #51409
Disable failing test, see #51408
Bump node2
Ganrantee compositionend is tested.
Lack of feedback when searching for similar issues in extensions when reporting an issue on an extension, fixes #50656
Add in experimental support for js/ts multi-line diagnostics
Update js/ts grammar
html context menus
sash: fix overflow dragging issue
sash states
#50583 Show deprecated warning message when previous history commands were used
Revert "Move keybinding editing service to platform"
Dim reccomended badge on extensions which have been disabled. #51106 (#51367)
options to enable error/warnings in outline #49924
make sure to always reset markers,  #49924
Increase visibility of Install buton focus. #50883 (#51268)
Clarify contributing steps for css-language-features
box shadow around menus
splitview sash container should ignore pointer events
Move keybinding editing service to platform
In extensions list, dont pass up/down keys when inpus is focused. (#51273)
use correct casing with imports
Settings editor - \r and \r\n are invisible in enum
aria roles
fix tests #49924
workaround #51358
use wsl.exe on builds as of 16299 (#51182)
show markers in outline view, #49924
#50583 - Implement Context scoped history input widget - Adopt to context scoped history input widget
#50583 Adopt to HistoryInputBox
#50583 Adopt findInput to use HistoryInputBox
#50583 Implement Input box with history
Dispose the panel after removed
Improve UI that prevents user from starting debug session multiple times
build: continuous build should proceeed even if PublishBuildArtifacts failed
fix tests
fixes #51246 fixes #51257 fixes #51245
grid: fix broken layout by switching to flex
Some cleanup for PR: #44461
grid: multisash resizing
debug smoke: Force load from disk since file events are sometimes missing
debug: sessionOnly breakpoint event and propering toJSON for breakpoints
debug: breakpoints should give some properties based on session
multi sash resize groundwork
Showing warning just once per document
sash: remove baseSize option
:lipstick: sash enabled property
bring sash to the 21st century
outline - fix tree height issue
fill in document uri when document symbol location lacks uri, #51297
Remove old proposed task API
fix #51188
1.24 released
Update close buttons in tabs and when tabs are disabled (#51249)
Process monitor on Linux shows wrong process load, #51200
Update CSS Language Features extension README.
Remove toLowerCase calls from inner loops, fix #50904
Adding warning when tokenization is skipped
Clarify css-language-feature contrib doc
Enable emmet to function inside script templates. #51180 (#51256)
Add parallel build scripts for html-language-features
fix #50689. Populate cursorUndo in command palette.
Sanitize task identifer against registry
Parallelize tasks for watch/compile language servers for #51168
Center viewport for nextChange/previousChange using keys
[folding] collapsed regions are not always preserved. For #51230
move jsonc associations to configuration-editing
Improve theme label for #50683
fix #45079
fixes #42688
delay shared process to improve startup times
cleanup build/tfs folder
fix #49628
Revert "debug: send events to adapter in a queue. Step requests cancel all pending requests"
Revert "queue.cancel"
support grid styles using CSS variables (#51204)
collapse outline by default
remove duplicated code
don't accept suggestions with tab when in snippet mode, fixes #50776
tweak uri for simpler export to vscode-uri
debug: send events to adapter in a queue. Step requests cancel all pending requests
queue.cancel
smoketest: more search assertions
outline - assign weight 30
smoketest: fix Search flakyness
smoketest: replace should be specific on which file to remove results
remove old, proposed activation event #50859
properly wire-up cancellation, #51096
debug: adding a new debug configuration should not prompt intellisense
don't delay updates when model is small, #49975
smoketest: avoid more flakyness in search
emptyView: use drop handler
remove grid.html
#48535 SCM viewlet has unregistered views
fix #51150
textModel validate position handles NaN.
Allow Emmet "Go to matching pair" to work inside script tags (#51173)
work for fullscreen and menubar visibility
Add description to searchrg setting
Remove testing code
Use case-insensitive synced buffer map on case-insensitive file systems
re #38746. Implement dispose method
Update js/ts grammar
Move all public event definitions together
Move buffer sync support into client
Move bufferSyncSupport out of language providers
Prevent multiple calls to listen
Move validate setting checking into bufferSyncSupport
Split toPath and normalizedPath
Extract out toKey function
Hoist fileConfigurationManager up to service client host
Update notification for --disable-extensions state to have option to reload, #47506
#48535 Use title instead of name
#48535 Use scm viewlet id as location id
Make "Reload Window with Extensions Disabled" only disable extensions for that load
fixes #49277
Add instruction to develop css-language-features
Search view - when removing items, only expand previous item if a Match was selected - #48740
fix #51096
back to more conventinal api proposal, #34968
Include all colors in color theme (fixes Microsoft/vscode-docs#1588)
debug: polish breakopint / logpoint hover
fix tests
#48535 Check if views are there to add
#48535 Adopt to contributable views model
emtpy explorer view: open droped folders as a workspace
debug: configurations respect files.eopl
test for undocumented colors
smoke: remove flakyness from search smoke tests
don't throw with invalid regexes, #51109
smoke: use trace log level
smoke: save logs as artifacts
debt - don't refer to WinJS.Promise as Promise
fix  #45795
unhook provider later, #48192
smoketests: fix infinite loop
debug: fix statusbar service listener timing
smoketest: careful with stackframes
fixes #51138
smoketest: improve active element reporting
outline - add progress bar
a bit less ugly css rule #51135
fixes #51135
fix the build
break the build
fix #49843
less todos, more logging
Meant to guess noon
[default themes] assign `entity.name.variable` to variables
Update monaco.d.ts
Allowing disable the submodule auto detection warning
Delete .pullrequests.yml
Create .pullrequests.yml
Tests and fix for 86e6f5fed99b3e2a83a49e231f042205f697399d - #50001
monaco.d.ts update
sidebyside
Use ConfigurationDependentRegistration to remove more boilerplate code
Introduce the concept of a ConfigurationDependentRegistration
Remove unused code
Remove unused interface
Remove old large directory watcher
Remove boilerplate around VersionDependentRegistrationDelegate
Change API  to use constant values
move comments service into comments part instead of registering it as a global service.
Update file names to remove 'provider'
Move workspace symbol provider to use standard register as well
Move js and ts code lenses to use standard registrations
Moving some version checks to use VersionDependentRegistration instead
Move all version dep providers to use generic helper class
Extract version dependent provider
Use manager for registering and unregistering folding provider
Move formatting provider to use standard registration
Moving more providers to use registration method
Move completion providers to use register method
Moving features to use registration method
Use event for ondelete
Use vscode namespace
toggle mnemonics, add checked functionality, add auto save
Update spacing so tabs are uniform when dragged
Update clear icons
minor improvements
Build VS Code with TS 2.9
Extracting common code for getMarkdownDocument
Introduce the concept of a SkinnyTextDocument that provides minimal interface to generate toc
Use fault tolerant parser for collecting launch config metadata, fixes #51100
adopt new grid APIs
bring titlebarplus up to date
Update clear icon
Make sure fenced code blocks properly get line numbers assigned
Update close icons so they're consistent with panel icon updates
Move language configurations registration to manager
Update toggle more height to avoid border overlap
Refactoring refactor provider
Only catch errors on request
Don't use active text editor for rename
:lipstick:
git: :lipstick: no_push feature
smoke: reduce flakyness
#48535 Make views service generic
clarify workbench.panel.defaultLocation
smoke: fix dataloss flakyness
fix #49687
fix #51074
fix #48745
Automate 'new release' label
enable outline by default
add option to allow for weak match as first match, use that option for outline (experiment) #50724
make fuzzy score more strict and don't treat a match on a subsequent upper case latter as stong match (but as simple match),  #50724
fix #50879
fix #39710
associate npmignore with ignore language (for #51026)
remove old, proposed fsp api, #50859
fix #50856
fix #50945
swap bot assignments
notifications - show title and message together if provided (for #50932)
fix #50654
remove commented out lines
Picker: matching highlights should show up in bold (#51038)
use unused span for unused locals/parameters
Saving and closing file can result in the file getting empty (fix #50942)
Adjust padding and line-height so they align horizontally with right actions
Markdown and common toolbar icons consistency pass (#50484)
fix #50948
fix #50957
Add gitignore language
Register onData listener
Refactor common items into BaseExtHostTerminal
Prefer const
Implement start of terminal renderers
Update issue templates, #49380
get keybindings in menubar
Update version
delete comment left in the code
Make sure unused diags are still updated when suggestions are disabled
Remove now unneeded any
Use localizedLanguageName instead of languageNameLocalized which doesnt exist
Update distro commit and third party notices
makeFsPath without regexp
:lipstick: grid, cleanup getViews()
let toJSON use cached values but don't let it trigger computation of those
grid - fix bad === for editors
smoketest: go-to-definition is flaky
grid - prevent multiple confirmation dialogs for the same editor to show up (for  #50539)
implement encodeURIComponentFast, #50800
beware of keybinding command null arguments
one more time, fix #50321
use string-concat (with little improvement) #50800
add uri perf test, #50800this calls toString and toJSON uris of all files in our src folder
grid - tweak some groups access order
update description (for #50677)
open editors: click on groups should activate them
show alternative actions when alt is pressed, not only on mouse over
fixes #50926
grid - :lipstick:
grid - assign some default keybindings for focus group
Reapply fix for #50790
grid - close all groups should preserve first group
grid - use viewColumnToEditorGroup in more places
grid - fix issues with touchbar updating
Left-align settings editor preview prompt
Add proper contribution schema for ts server pluguins
Use localized language name when available
Add specific `refactor.move` scope for js/ts move to new file action
update message
Update GDPR annotation
grid: add todo
grid: getNeighborViews perf
grid: use boundaries for neighbor finding
grid: more getNeighborViews tests
grid: fix neighbor npe issue
Still gray out vars even if user has disabled suggestions
Pick up ts 2.9.1 final
Try using fixAllDescription for js/ts quick fixes
Remove inconsistent use of active in terminal API
fillInActionBarActions and fillInContextMenuActions for clarity
Some menu action clients (ActionBar) handle alternative actions on their own so the alternative actions should be ignored
grid - adopt wrapping
grid: getNeighborViews
[css][html] update service
open editors: use actionRunner for contexts
open editors: close group action
grid - add workbench.action.closeEditorsAndGroup
grid - adopt new getNeighborViews() method
grid - todo@grid => todo@ben
fix #50479
fixes #50870
Clarify for translation (fixes #50634)
Add support for `1.txt` format in incrementFileName
fix #50867
fixes #50737
Use `MAX_SAFE_SMALL_INTEGER`
fixes #50864
open editors: clear focus when group without editors is active
fixes #50812
#48901 Expand by default only in custom viewlets
smoketest: bring back search tests
smoketest: update to package-lock.json
minor rename
smoketest: clear state from failing search tests
smoketest: remove verbose from yarn
Don't include imports in js/ts document symbol results
fix #50678
Shorten showUnused setting name
Moving webview api back to proposed for more polishing
Use better colors for markdown code blocks
Hide settings editor feedback button in stable
Restore default settings editor keybinding
Moved the option under task.presentation property
Spelling fix Ouoting -> Quoting
Showing the message only when the option is set
Moved the option to task settings and globally defined
Removed the option from terminal.integrated namespace
Switched show to hide, defaults to false
Added option whether to show terminal reuse alert
Remove duplicate strings and small cleanup
Clean up importModuleSpecifier wording
Make sure we use normalized path for compare
wip: grid.getNeighborViews
Remove unused variable
better fix for #50710
build: remove npm auth
Move previewOptions, #50788
continuous build: use vsts feed
continuous build: use vsts npm feed
fixes #50787
fixes #50794
fix #50711
missing compilation
polish debug.toolBarLocation
fix #50741
fix  #50207
fix #50774
splitview: dont propagate white-sapce property
remove preview rant from search.location
fix #50734
fix #50727
grid: resize views when branch is demoted
fix #50726
grid - for now remove editorGroup.activeEmptyBackground
grid keep sizing after branch node demotion
fix #50700
polish for #50667
fix typos
don't show outline when there are more then 7500 symbols, #50575
improve perf of findId and getElementById, #50575
fix  #50773
:lipstick:
fixes #50026
fixes #50609
fix #50722
Improve description (#43208)
fix #50710
smoke: run yarn verbose
careful with path comparisons on windows
grid - allow to close empty groups via middle click (#50733)
smoketest: use yarn
smoke: uncomment debug suite
part of #50760
fix #50691
enable mnemonics (need to clean this up)
fix #50742
EH search - replace search.enableSearchProviders with a search-rg specific setting
search-rg has no icon
Include recommended extensions in telemetry events to determine success
Change parameter name to match interface name
Try serializing webviews even if they have not called setState
Restore restart
Mark unused parameter
Use correct failed error code for webview resource load error
Use language name instead of locale in the prompt #50738
Avoid prompting for same file type in the same session #50537
Make sure we update the webview's state on setState
Extracting methods
Issue Reporter should clear the error state when selecting an extension, fixes #50702
Issue reporter and process explorer windows should close when the parent window closes, fixes #50716
Add branch name validation and whitespace config
fix #50670
Make spacing adjustments for all action icons
Adjust panel title spacing
fix #50321
fix #50672
Improve rendererType description
adding keyboard navigation
add User-Id to marketplace build requests
grid - fix compile
Added background ANSI colour codes
changing to svg
[html] update services
[css] update service
#45663 Get all asset types
eliminate code duplication; use resolveWorkspaceFolder()
Removed duplicate loop
Add `logicalLine` argument to `mutlicursor.insertBelow` and `mutlicursor.insertAbove`
#49145 Store placeholder states for all viewlets
use upper lang id
Avoid command palette entry (#49340)
fix index computing for editor close case
Add Endgame for 1.24
go to next / previosu breakpoint minor polish
polish
return context if it has a groupId
Simplify implementation
fix off by one issue
return passed context if resourceOrContext is not useful
change openBreakpointSource to use IBreakpoint
#45663 fix compilations
remove from schema
Include enabledOnly in debug model interface
Implement Go To Next/Previous Breakpoint editor actions
do not append logLevel
remove todo
grid - stronger border top color
grid - log previous UI state upon error
Support to run npm install from a package node
grid - allow to close dirty diff editor if master is still opened in same group
#45663 Use core translations asset
grid - action wording tweaks
cleanup integrated terminal support for debugging
grid - get preferredSize from grid
grid - allow to close empty group when closing all editors of a group
grid - drop outline as focus indication and rely on dimmed state
Hide interactive playground commands from command palette (fixes #49706)
debug issues back to isidorn
grid - log serialized state if restoring failed
yarn.lock changes
Cleaning up some typos in vscode.d.ts and vscode.proposed.d.ts (#50533)
fix #50560
Improve getmac test (#48804)
Pass unregsitered views to super update views
grid: export minimum and maximum width and height
Update keytar (#48804)
Update getmac (#48804)
Remove first cut of QuickInput API (#49340)
Remove first cut of QuickInput API (#49340)
Make variable resolving for tasks async
notifications - print error stack if possible to console
grid - ensure to update context keys when editors are restored
grid - use correct service interfaces
Edited the "editor.wrappingIndent" preference to allow the value "deepIndent".
Remove unnecessary commented out code
Added unit tests for debug ANSI handling
Simplifying ANSI logic when no sequence found
mode-debug@1.24.0
Grammar Injection - Consider broader Scopes
grid - reduce flicker in openEditors call
grid - some cleanup
grid - fix some lifecycle issues
Align GIT light colored check icon with dark
grid - fix npe when closing editor
EH search - enableSearchProviders default to 'false'
grid - fire active/visible editor change event on statup as before
grid - fix isOpen() method to work with diff
grid -never instantiate child code editor service
grid - :lipstick: title bar
EH search - add tests for non-file: schemes
Remove erroneous changes from past merges
Revert changes to hygiene file
EH search - fix lost error messages when multiple search providers are run
Remove git-extended folder
EH search - fix search providers using non-file schemes
Use translations from manifest to prompt to install lang pack (#50322)
Small fix to comment icon calculation
Remove unused code
Settings editor - replace selection indicator bar with outline. Also fix header margin
Handle badly formatted launch config files when calculating workspace stats
Minor cosmetic changes to issue reporter
Settings editor - split out "open the settings.json" button from the preview notification
group comments related api in a region and add warning comment.
Settings editor - tweak reset button
empty string is a valid branchName parameter for git fetch.
Settings editor - change reset button to text link
fix infinite loop patch parsing.
Settings editor - smaller title headers, remove 'description' cursor pointer
Settings editor - eliminate "show all settings" button. The UI is weird and maybe it's not necessary. Could use a checkbox in the header instead
Settings editor - Get rid of green highlight on setting title. Keep it on the "modified" label next to the setting title.
Settings editor - "experimental" -> "preview"
Settings editor - fix "also modified in", only show "also" when modified in current scope
Use more specific onWebviewPanel activation event
Move webview serializer out of proposed
generic comment icon
Use blacklist for puctuators
Don't strip special characters in slugify
Inject slugifier into markdown engine
grid - fix missing icon
More polish
remove unused code.
Improve notification
Add fallback to editor.fontFamily tests
Use absolute path for import
grid - fix delegating editor service behaviour for diff editor
Retain terminal ext API onData listeners in reused terminals
grid - some cleanup
refactor EH setting
grid - fix tab border when tab container has border
grid - only draw border around tabs as needed
Run a normal shell under Mac.
grid - fix miuse of title.active / title.inactive
grid - let centered editor layout be a real grid layout
grid - fix close icon getting inlined by using a version that is not referenced from any CSS
diff - temporary console log to debug diff reveal issues
grid - improved implementation of applyLayout()
refactor of tree view nodes.
EH search - unblock search provider dev
EH search - invoke all providers during a search to unblock search provider extension development
Pick up new ts build
#50414 - Give settings editor tree its own stylesheet so it can be styled independently from other trees
A bit of code cleanup
show review comments and diffview in description page.
Support TS's noGetErrOnBackgroundUpdate flag
Use modal for move file alert
Next TS insiders
textarea in iframe keybinding issue.
First cut of #50416: Add support that FileSystemProviders can control the URI of a generated problem marker
Remove second copyright header
Less options
Add markdown to integration tests
Start encapsulating slugifier
grid - open empty group instead of artifically copying over editor from active group
grid - add actions to create empty groups
grid - let "close" action be  a command and support alternative execution
grid - let "open side by side" editor action be a command with alternative command support
grid - apply editor layout in grid order
grid - fix broken preferred height
grid - try to restore editors when changing layout
grid - restore focus properly when removing empty group
grid - more commands for empty group
Add helpers for repeating mocha tests, and a search smoketest helper
Settings editor - add row aria labels
rg search - Properly anchor relative globs in text search
Initial terminal menu
Settings editor - narrower focused row indicator
Settings editor - fix row measuring after width was moved inside the scrollable container
Remove count badges from comments panel
Ensure widgets and file decorations are removed when exiting review mode
Update powershell test fixture
Settings editor - keyboard access, theming
Use key of instead of key in
Avoid  updating diagnostics when we don't need to
Extract scheduleDiagnosticsUpdate
Batch diagnostic updates
fallback to partial diff when the commit does not exist locally.
Add inline action for running 'debug scripts'
Unregister data providers from comment service
warning message for comments whose base commit doesn't exist locally.
show commit id in the file path for comments outdated
css for comment markdown content.
Settings editor - Rename test file
md renderer for description view.
Settings editor as tree - fix expand sizing and padding
[json] update dependencies
[html] update dependencies
[css] update dependencies
grid - fix focus not restored when closing last editor of group
smoke - disable flaky search test (for #50355)
smoke - more disablement for #50337
smoke - more disablement for #50337
[powershell] Update PowerShell Editor Syntax (PS\ES\529562f).
grid - fix commands context lookup
grid - fix compile error
smoke - disable flaky debug tests
fix #49587
build - comment out flaky test
skip chockidar tests
#24396 :lipstick:
multi root chockidar
follow up for #50190
50190 (#50255)
grid - menu wording
grid - add editor layout menu
grid - introduce and use command for predefined editor layouts
grid - fix touchbar update exception
Settings editor as tree - expand/collapse settings with long descriptions
Settings editor as tree - hook up "show configured only" checkbox
Unbreak settings-related smoke tests
Organize imports
Settings editor - hook up down arrow listener
Settings editor - hook up search to tree
Settings editor - hook up event handlers, setting edits
Track all comments with _comments property in ReviewManager
Settings editor ported to tree - first take, basically works
refactor...
Add 'Pull' button when local branch is out of date
use DiffLine whenever possible.
Also trigger js/ts signature help on <
Move signature help trigger characters onto class
Split arguments to own lines
Refactoring signatureHelpProvider
Dispose of comment widgets in editor contribuation dispose
added two new commands
Workaround for extra ts folding range
Remove cast
Remove unused
Remove obsolete settings search feedback mechanism
Document code action kind usage
Update paths phrasing
show diff view editor for outdated comments.
Show outdated comments.
Remove deps of lodash.
Include file name in update paths prompt
Don't delete diagnostics on file close if file still exists on disk
Pick up updated js/ts grammar
Make sure we have closed old resources before performing rename
grid - empty editor group context menu
grid - first cut of more actions for grid
Clean up icons so they consistently fit on a 16x16 square
Update spacing
change auto assign for debug
fix #50282
exapnd connect
grid - reduce active change events when closing last editor in group
revert jade language id change
grid - fix api docs
grid - open editors in active group when no ViewColumn is provided
grid - add and use editorGroupToViewColumn
grid - enable smoke and integration tests again
grid - fix editor events to be proper
grid - :lipstick: for viewcolumn conversion
Settings editor - fix ellipsis indicator when editor is narrow
grid - :lipstick:
grid - reduce event spam a bit
grid - extract some methods into IEditorPartService to hide from usages
grid - some more tests
Disable CSS smoketest that relies on settings, since shortcut is changed
Disable settings smoketest since keybinding is changed
Settings editor - fix clicking on setting values
Settings editor - change default keybinding
Settings editor - move ... indicator further right
Pick up new TS insiders
git: Detect conflict markets in BOTH_ADDED files when staging
Settings editor - theme "show all" button
Settings editor - add feedback button
Add code action trigger to proposed API
Some styling tweaks, fix status calculation
Settings editor - add "..." in a fixed position to indicate that a description is expandable
Settings editor - left-align preview label
Add PREVIEW label, change up text
Workaround for comments panel not opening
Better message
Prompt user to install language pack
Some small fixes to overview page, fix remaining build errors
Still show squiggles if you disable unused variable fade out
Prototype update import paths on file rename/move for JS/TS (#50074)
Extracted handleANSIOutput function from replViewer.ts
Extracted appendStylizedStringToContainer function from replViewer.ts
fg -> foreground in repl.css for naming clarity
fix build error for upstream merging
Use member shorthand for more adapters
close pull request
description node for changes in pr treeview.
send create issue comment request and update UI.
comment textarea in description page, styling
vscode-xterm@3.5.0-beta8
Change EH search back to use URIs between EH and renderer process
Settings editor - make settings tabbable
Make settings editor list items focusable and selectable. This is temp code to test the experience, it will actually use the Tree control
Add "this is a preview" label to the top of the new settings editor
Log a couple extra items from EH search
updated logical line logic
grid - track focus of editor properly
grid - some cleanup
grid - add action to close/join all groups
grid - move EditorPosition to exthost
grid - more rename of nexteditor => editor
grid - rename nexteditor => editor for imports
grid - remove old group/editor services
grid - maintain ViewColumn API compatibility (webview)
grid - maintain ViewColumn API compatibility
grid - allow alt+click on split
grid - more cleanup
grid - polish some jsdoc
grid - more editor service interfaces for editor types
Add emoji fonts to default font families
Remove unneeded forced SearchModel refresh when search is complete
Re-enable tests
Improve code flow
Format terminalCommandTracker
grid - fix state key
grid - implement split action properly
grid - first cut nexteditor => editor
grid - move classes into editor namespace
grid - bye bye editor part & editor groups control
grid - finish action adoption
grid - more editor actions adoption
grid - adopt move editor commands
grid - adopt editor picker
Change 'send' to 'include' in issue reporter, fixes #50127
Include anon functions and class in symbol view if they have children
Cleaning up ts symbol provider
fix failure for api change
Styling update
Restore focus to webview when vs code window is refocused
Changed the behavior of the 'show similar keybindings' button to only display items based on the same keybinding. Also reworked how conflicting keybindings are searched for.
Explicitly implement IStandardWindow
Remove unneeded alias
Use HTMLElementEventMap
Add checkout button to overview
preferences does not fallback currently, moved to render side
adding holders for the remainder of menus
Pick up updated md grammar
adding selection menu
Improve when dom renderer notification is displayed
edit menu
cleanup of main process menu and moving preferences and recent to top-level
ignore js error for webpack
webview infra
Double DOM renderer suggestion time
Prevent error when hitting No button
vscode-xterm@3.5.0-beta6
Simplify dom renderer notification
Refactoring
update comments in editor when a data provider is registered.
Bump node2
grid - implement actions to navigate views up/down/left/right
fix issues with active group and closing of editors
show debug actions bar also while initatising
allow to stop an initialising session
minor polish
grid - change EDGE_DISTANCE_THRESHOLD to 0.3
grid - add and use IEditorService.editors
grid - ensure group when saving view state
grid - allow to split even editors that do not support splitting
grid - fix to set height: 100% on editor container
open editors better reaction to events
grid - add editor index to group change event
grid - fix pin event
open editors view: react to events
grid - fix NPE in getControl() of status bar
grid - remove "structural" from group change event
grid - add and use overrideOpenEditor()
grid - remove onWillCloseEditor() from editor service
grid - cleanup getCodeEditor()
grid - some cleanup
grid - let IEditor.group be INextEditorGroup
grid - :lipstick:
grid - introduce aggregated group change event
Remove unneeded file search test helper
Change File search result API to only return a string relative path to the search folder
Change TextSearchResult API to only return a string relative path to the search folder
Add "showLoading" option to tree to allow trees to opt out of the loading indicator, since setTimeout/clearTimeout has a large perf impact
Settings editor - left-align "open in settings.json" button
mouse interaction starting to make sense
Add webview description
grammer fix (#50063)
Mark unused parameters
_private
Add unused diagnostic subtype (#49646)
more cleanup of ipc and adding fallback mechanic
EH search - change frequent substr check to charCodeAt, seems like runtime should optimize this anyway but this is faster
EH search - remove slow ES5 async/await from inner loop
EH search - send limitHit result back to frontend
Remove enableSearchProviders in vscode workspace settings, now it's enabled by default
EH search - add simple search duration log
EH search - implement max results for text search on the ExtHostSearch side
description svg
description
dispose empty comment widget and hide others.
remove duplicate comment editor background.
Add link, restore old render function
Add null check to mapCommentsToHead
Render comments as markdown in comments panel
Tweak dom renderer message
remove unsed command service and reorder constructor paramaters.
Show notification for DOM renderer
fix save all for untitiled
grid - fix compile
grid - add onDidOpen event to groups
open editors view: react on group events
editorActions: adopt close actions
Call selected elements - selection
editor commands adopt to grid
grid - more service adoption
Add link to package homepage in package.json files
grid - more service adoption
configuratoin resover service fix build errors
debug issues to roblourens
wait a little when between edits the ratio of symbols and lines changes by more than half, #49975
grid - more service adoption
Add more separators and support for trailing zeros
files leftovers adopt to using grid
debug adopt to grid
grid - more service adoption
FIx #47262
grid - adopt some more services
debounce at 150ms rate, #49975
fix #49582
fileCommands: tackle todos
fix tests
Add tests for incrementFileName
grid - make code editor service proper (standalone)
Add case for prefix version for folder
editor - move some workbench specific commands to workbench
grid - adopt some services in workbench core
dynamically refresh the view when the npm.exclude setting changes
explore Hierarchy<T> idea, #34968
fix #50024
Allow rgb css theme colors
grid - fold texteditor service into codeeditor service
Pick up new TS insiders build
fix compile error
clipboardService: handle resources (#49964)
EH search - add fileSearch telemetry
Disable TextSearch perf test, needs to be fixed for EH search
EH search - enable by default for Insiders feedback
adding separators, more file menu actions, hiding when native, and better ipc contract
use explict api instead of commands for commenting.
Settings editor - add italic "modified" tag to all modified settings
EH search - respect sibling clauses in text search
Add ExtHostSearch test for FilePattern
Adjust first panel title so there's 20px spacing from the left side
Adjust dropdown margins so it matches icon margins
Adjust icon margins so they are even
Vertically align dropdown and input using flexbox, adjust margins
Make sure we inherit the correct border-color
Add prefix case for incrementFileName
Update comment position when reopening dirty files
max img size should be 100%
EH search - simplify code that handles excludes across multiple folders in a workspace
EH search - fix max results in file search, add tests
make menubarpart independent of titlebarpart
grid - fix tests
grid - remove closeEditor() from IEditorService
Add rendererType terminal setting
Replace deprecated call
Update xterm typings
Guard canvas renderer check before option conditional
vscode-xterm@3.5.0-beta5
send `startupTimeVaried` event and change `startupTime` to be the standard startup
use editor group label
outline - don't accidentially stop listening
open editors: inital adoption to grid
grid - cleanup
to read nicer
grid - replaceEditors() on editor service
do not open to the side
fix #49973
Make selected elements readonly
bye bye old editorService and old groupService
FIx #49972
Remove check for existing tooltip
Change tooltip captions
Add activePanel context key
fix #49895
grid - back to TPromise for services to avoid toWinJsPromise() spam
Add following to TreeView - Events to listen to when an element is expanded/collapsed - Property to access selected elements
grid - lift activeTextEditorControl to text editor service
grid - remove SimpleEditor
grid - make platform editor service specific for code editors
:lipstick:
Clean up views viewlet - fix store and load views states - fix toggling visibility
debug: no need for session.INACTIVE state
Incooperated API review for tasks
minor polish
grid - move opener service into editor
FIx to show outline view on toggle
fix #49553
grid - follow up fixes from closeEmptyGroups setting
grid - add and use closeEmptyGroups setting
Settings editor - change "configured" to "modified"
Only show code action progress indicator when manually triggering
EH search - add unit tests for text search eh implementation
Ensure error output from tests is readable
EH search - file search sibling clauses and test
EH search - factor out pfs so it can be mocked for testing
EH search  - logging in output channel
Try canceling previous code action requests on re-trigger
menubarpart and ipc for native construction
Show progress while computing code actions
Add move to new file refactoring for JS/TS
wording
Add openOnDebugBreak for openDebug
remove unused code
git refactor
Remove redundant '6' in stdFork.ts (#49869)
grid - change label to be creation time based
have outline view collapsed by default
synthesize a hierarchy based on range containment
grid - simple solution to grid-neighbour issue
Introduce hideByDefault property for views
Clean up
Revert "errors appeared after 216151379f09aefe0b4cae4671feca085ac9e027, ee36a84ff1abb0b8bc7509f651b0d97a734cd14c and 8578f0241e1a64fb5af8ee1b030e42579ef9cd6f"
more stability
protect against empty results
#49511 Access selected elements
#30535 expand and collapse events
use WorkbenchTreeController
Render pre/post scripts different from regular scripts
remove filterPrePostScripts
better keyboard hack logic
grid - ensure group is always set
implement focus-function for panel
better left click logic
grid - memento :lipstick:
color provider server capability doesn't define boolean (yet). For Microsoft/vscode-languageserver-node#349
expand one level into the interesting bits
correct height for tree, better reveal logic of best match (still imperfect, tree issue?)
debug: propoagte the unresolvedConfiguration to more than the first restart
#49816 check for element
double click focuses editor, alt/cmd click opens to the side
Have esm/vs/editor/editor.api.d.ts be an external module (Microsoft/monaco-editor#871)
grid - :lipstick:
simplify file name validation
explorer: when renaming ExplorerItem make sure to update parent
titles
grid - introduce and use preferredSize and events
better one vs two providers handling
grid - fix compile
select tree item from input box, ignore some keys from tree
Replace sysnative with system32 in a pure x64 setup
fix dto/revive issue
bring back outlutLinkComputer create
grid - finish tests adoption
grid - more tests adoption
replViewer changes per code review
keyboard navigation and aria
Settings editor - click description to expand
focus on comment and highlight
reveal comment in thread.
Use css vars for more webview styling
Expose VS Code colors in webview
add setting to define whether pre or post scripts should be filtered
Make new setting editor telemetry event names consistent
Add events to listen on process start / end for task executions.
no escape in new comment editor and use random number as model id when there is no thread.
use monaco editor for commenting.
Update C# TextMate grammar with important bug fix
Prefer single quotes in vscode codebase
Make sure we still can run organize imports on empty lines
handle arrow up/down from input box
fix top match selection
Don't try to revive webviews without a reviver
fallback to location range when not having a defining range
run organize imports
Working on webview persistence API
Do not show new comment button on files with no possible commenting ranges
EH search - add opt-in setting to vscode workspace settings
show providers when needed
use extension name as provider name
false positive of bracket matching.
Reveal comment range in center
grid - more tests scaffolding
debug: do not show focus session dropdown when debug toolbar is docked
have a root per provider
grid - introduce some next editor tests
Some code cleanup
fix hygiene
Add ubuntu 18.04 path to windows shell helper
Add other WSL distros to windows shell helper
grid - towards a better layout
fix update issue
add extensionId to DocumentSymbolProvider interface
Add tooltips to extension navbar
grid - first cut workbench layout adoption
Multi-step input API (#49340)
Update extension download calls to Marketplace with install or update parameters
persist user selection for 'follow cursor'-mode and 'sort by'-choice
fix _getItemById
add collapse all action
output smart reveal more code reuse
add command to reveal outline
grid - add a way to get a label for a group
Small tweaks
prevent id duplication
better filter on type, know what key code will be handled, also restore selection/focus after filtering
grid - add and adopt setInput() cancellation tokens
Settings editor - tighten vertically, tweak colors and spacing, remove "is configured" indicator circle
Settings editor - left-align checkboxes
Use current editor position
Add command to open raw user settings.json
Configure output panel editor word wrap
grid - openSideBySideDirection :lipstick:
Added a setting for configuring open direction for "open to the side" (#49523)
grid - some :lipstick:
grid - clarify active/visible text editor control to support diff as well
grid - fix issue with delegating editor service
grid - per group editor view state
grid - use group identifier in IEditorIdentifier
grid - drop editor group label
grid - towards GroupIdentifier over Position in IEditor
Rewrite of ANSI code handling method
Show terminals separately in Quick Open View
Resize Extensions icon to make it pixel perfect
Show terminals separately Terminal Quick Open
grid - some cleanup
Prevent scrollbar to be considered as a drop target for drag-and-drop
grid - still allow copy operation when dropping onto same group
grid - adopt delegating editor service
grid - adopt IOpenEditorEvent
grid - reduce drop operations a bit
EH search - fix unit tests on windows
EH search - fix file paths on windows
EH search - File search tests and fixes
EH Search - add extHostSearch.test.ts
Dispose all zone widgets in editor contribution; show low opacity icon outside of diff chunks
EH search - promisify File Search
Remove new comment when no content is entered on collapse/escape
Don't show reply button for first comment in thread
dipose -> dispose
fix file references
EH search - clean up types used for file search
Rename dipose.ts to dispose.ts (#49659)
EH Search - File search working with cache, sorting, filtering, all in EH
addressing some commit feedback
Add wsl.exe and ubuntu.exe as shell exes on Windows
grid - allow to get groups in grid order
fixes #19508
debug: add callStackItemType context key to be used by node debuggers
debug: if a session supports restart request make sure to run the post debug adn pre launch task
debug: get specific source name
Remove extensionFolderPath
Reduce usage of extensionFolderPath
configuraiton resolver service: also resolve keys in objects
repl: destructure imports
Refactor: Remove useless event interface
grid - more dnd tweaks
grid - do not allow cross window DND for group when tabs enabled
grid - simplify and polish
Update calendar for 1.23.1
grid - show errors after being restored (for #46765)
check null and undefined.
Support TS string completion item kind
context menus working on windows
Move new comment button to content widget
show indicator for current pr branch
show local branches for PR
position comments at right position for scm tree view
Use vscode.*
Use / as a trigger character for jsx
Re-enable syntax based folding for js/ts by default in insiders
API allowing CodeActionProviders to reliably get the current editor selection (#49081)
open PR in browser when clicking on status bar item.
Allow class names to begin with an underscore in textModel.ts
Singleton and commands registration
Pick up new TS insiders
Update C# TextMate grammar
Check dirty workspace before switching to Review mode.
Progress bar for pr switching
start error handling
Introduce experimental fade out of unused variables
use _ to mark some unused params
Add setting to control show unused variables
grid - wording
debug.toolbar: 'dock' | 'hide' | 'float'
grid - some follow up fixes
grid - some :lipstick:
grid - first cut DND support for editor groups
duplicate workspace action
debug: column breakpoint -> inline breakpoint
font-weigth => font-weight
fixes #49548
fix test failures
fixes #49540
variable susbtitution: only strings are supported
grid - hide close button for group when just 1 is showing
grid - show close action for empty groups
:lipstick:
Allow to configure a top tab border color (#49313)
fix #49552
fix #49549
grid - update todo
grid - implement replaceEditors()
grid - implement closeEditors/closeAllEditors
grid - add mergeGroup()
grid - support to flip editor layout
Settings editor - add description tooltip
Settings editor - add tooltips
Settings editor - implement collapsible group titles
Only track first time installs for recommended extensions #49583
EH search - quickopen basically working (without filtering, batched results, etc)
Add GDPR annotation for extension update event
Updated debug icons for "continue", renamed default to "start"
EH search - extension API updates
EH search - downcompile to es5 for perf. Test again with electron 2...
#47058 - Search provider running in EH with switch to enable
use git-branch icon for PR
Use status bar item to indictate review mode switching.
Support terminal.integrated.letterSpacing
restore PR branch from git status
Revert "vscode-xterm@3.5.0-beta1"
handle tree typing
only expand symbols when twistie is clicked
null guard
focus editor when symbols are selection via keyboard
reveal selection on model change
make follow cursor off by default and make it reveal items in the center
do not rtrim whitespace
stop listening on hide
fix typo
less dependencies onto singletons
simplify message
add variable completions for launch and tasks.json
grid - simplify active editor event handling
add message when no editor or no providers are available
grid - tweak DND
async loading, keep state when editors change
explorerModel: ExplorerItem is root when this.root is itself
grid - do not layout editor if dimension is null
fixes #49355
Composite bar: Save state on change and do not save on shutdown
some comments
QuickNavigate (#49340)
prevent conflicts in outline item identifiers
check for iconUrl
workbench: store centered editor layout per wrokspace not per user
Better compile (#49340)
grid - adopt some next editor services in quick open
check for iconUrl
capture/restore expansion state before/after filtering
debug: do not show value changed decoration if the expression is unavailable
fixes #47747
grid - change getViewSize to just return one dimension
grid - implement group arrangement
wait for reveal when following cursor
select/focus/reveal the top match when typing to narrow down on symbols
Separate types from QuickOpen (#49340)
grid - implement resize() functionality
Naming: CheckboxList > List (#49340)
use arrow down to move from search field to tree.
grid - retire editorGroup.background and add new colors for empty groups
grid - allow to open settings and keybindings
Update smoke test to Quick Input (#49340)
add 'follow cursor' action
Ensure inactive focus background is overridden (#49340)
bump sudo-prompt@8.2.0 (for #48804)
bump iconv-lite@0.4.23 (for #48804)
make find highlight bold
:lipstick: absolute imports
fix #49177
fixed dropdown only working the first time (#49290)
follow up polish on #49044
fixed a case when a notification was infinite but purged after a timeout (#49202)
Update files.ts (#49271)
grid - some DND polish
grid - more complete DND implementation
no git extension api hack
overviewruler foreground should be controllable.
Prefer non-relaitve paths in vscode codebase
Make geterr async
Mark fields readonly
support debugPort in EH
Remove now unneeded cast
Ensure we send file configuration before running organize imports
Avoid double counts (#49340)
Quick Pick tests (#49340)
Navigation and inQuickOpen context key (#49340)
Use QuickInput for single-select showQuickPick (#49340)
Annotate common ts telemetry properties
Mark suggestionActions as resource scope since this setting can change per folder
Use textLink.activeForeground in issue reporter, fixes #49263
Set style tag instead of using Color.fromHex in issue reporter, fixes #49409
grid - add action to close all editors and groups
grid - some DND polish
grid - fix bug with active context not updated
debug model: keep unresolved configuration tied to the session
adjust padding
grid - add action to open editor side by side
fix compile issue
align sort action label with extension viewlet
add sort by position, name, kind
smoketest: drop keybindings.json
splitview: dont let split views wrap
Added a function for getting VSCode base folder with an isWindows check for working around inconsistent behavior. (#49467)
fixes #49355
fix kind icons
better icon support
grid - :lipstick:
use Object#setPrototypeOf, #49386
use highlight label when filtering
Have all paths used in the trie go through the same URI treatment (lower/uppercase drive letter issue on Windows)
fixes #49413
tree: collapsed resolved parent should update children visibility
add input box and filtering
grid - first cut DND support for editors
grid - tweak events firing less
grid - improve legacy UI state restore
grid: sashResetSizing
remove console.log
grid: onDidSashReset
[html] return max number of ranges (for #46687)
outline baby steps
hierarchy for TypeScript outline
Settings editor - fix setting key formatter, add test
Settings editor - use color for configured settings
Settings editor - "show configured settings" should show all settings
Settings editor - pack settings target tabs tighter
Settings editor - nicer "open in settings.json" buttons
Settings editor - dim category and show * next to modified settings
Settings editor - switch to "clean" icon from git extension
Settings editor - remove blue highlights
Mark user preferences as resource scope
Add folding range kinds for TS
Support running organize imports for background files
Try canceling ts geterr requests
Marking fields readonly
grid - enable legacy state migration back
Use textLinkActiveForeground in webview
Use IFileSystem to load resource view resources
grid: missing division by zero check
:lipstick:
grid: forgot to update referenceView when deserializing
grid: split sizing should use correct resizing priorities
Revive extensionLocation when reading from cache
Add IExtensionDescription.isUnderDevelopment
grid: use single Sizing enum
grid - finish with global events on editor service
grid - implement moveGroup()
Introduce and adopt extensionLocation
Viewlet service: Open viewlet wait until extensions are registered
todo
Remove console.log
grid view: call layout after addView
Add support for multiple extension hosts
panel part does not need to open composite when enabled
grid - allow to split even empty groups
grid - add copyEditor()
grid - notification prompt is coming a bit too early
grid - use distributed sizing for add/removeView
grid: split size distribution
grid: automatic sizing
splitview: automatic sizing
grid - make sure to layout tabs when toolbar changes
grid - more error protection and handling for now
grid - add code to migrate previous UI state (disabled for now)
Add undefined check to Quick Input command code path (#49354)
Revert "Bump node-debug2"
more tweaks #34968
Set context menu action enablement from activity action
Escape related information in Hover message
Naming: Select -> Pick (#49340)
grid - first cut restore editors adoption
put pre-existing file consts back in node since they depend on process fixes #49321
Disable live preview of wrap feature when multiple selections in same line #49138
Placeholder icons for custom viewlets
Remove extensions knowledge fro viewlet service
Remove options from composite bar and use addComposite for adding
Cache and dispose composite actions by the creators
Don't use code annotations for related diagnostics
skips to next logical line
grid - some cleanup
Update GDPR annotations
grid - basic editor tests
grid - tests back to green
grid  - first cut persistence support
grid - rename Direction => GroupDirection to avoid name clashes
grid - add very basic "centered editor layout" using empty groups
grid - adopt related code to support --wait
grid - fix focus to work when views get reparented
grid - add some more tests
grid - implement invokeWithinContext()
grid - some fixes
grid: keep view size proportions on first layout
fix test
typo
Add setting for highlightActiveIndentGuide
Update GDPR annotations
Show the action if it is active
Compute sizes when composite is added
Refactor composite bar - Create a composite model - Show the context menu in the same order - Retain the position after unpin
Go back to old terminal clear behavior
grid - move focus back to grid container when last editor closes
grid - more context keys and commands
grid - restore watermark and letterpress support
grid - fix removeGroup() to never keep active group undefined
grid - add more events and adopt hideTabs() support
grid - first cut of editor change related methods for editor service
grid - adopt textCompareEditorVisible context key
Use button widget
Small styling changes to comment editor contribution
red color in the overview ruler
Make sure we use the correct ctrl key for refactor action on windows
Allow multiple revivers to be registered for a given webview
Temp workaround for ts not understanding that dot is a trigger character
Support TS disable suggestions setting
Add telemtry for TS/JS quick fixes
Bump node-debug2
re #49231.
Use button widget in issue reporter, fixes #46490
Properly handle links with title
Add test for #49011
More pinning tests for markdown links
Start adding some basic document link pinning tests
vscode-xterm@3.5.0-beta1
adding a minimum for max-memory cli arg fixes #46772
debug: logLevel
type converters, use namespace in more places
type converters, use namespace for DocumentHighlight
type converters, use namespace for Hover
type converters, use namespace for ViewColumn
type converters, use namespace for Diagnostics
type converters, use namespace for Position
type converter, use namespace for Range
type converters, use namespace for Selection
experiment with internal hierarchical model, #34968
add detail field to proposed api, #34968
grid - more cleanup
grid: should restore view size on deserialize
debug: filter for getBreakpoints
grid - some cleanup
[folding] gracefully handle errors in provider (fixes #48526)
grid: serialization should store sizes
remove moveView
Rebuild grammar files from source repo
Update script to build additional grammar file
remove moveView
update todo
Update classes while rendering
Push item at the right index
Improved color descriptions
grid - fix issue with opening editor
grid - fix copy group to not always copy entire group
grid - first cut of editor options handling
grid - extract some interfaces to editor2.ts
grid - add split actions to commands to test out
:lipstick: lift less
Clarify editor focus related methods
protected -> private
Revert "comment out flaky tests"
use Text blur/focus events, #49125
Added inline action to run a script
remote - only support absolute paths in remote uri
Test is improperly skipped (fixes #49101)
Mention the mouse middle button drag to rectangle select feature in the Interactive Playground
debug: initialize raw session on eh attach
grid: getViewSize should return width and height
remove dnd from grid
grid: deserialize simple layout
debug: move getCustomTelemetryService to debugger.ts
grid: deserialize empty test
grid: serialize simple layout test
SerializableGrid: first test
Automatic wrapping with `` (backticks) for SQL
Automatic wrapping with `` (backticks) for PHP
Debt: Remove workarounds for Chrome v56
remove unused import
retry focusing the search input
grid - make sure the editor always opens the active editor if it changes
Use one extension for language packs
comment out flaky tests
debt - stay away from mixing TPromise and Promise
grid - finish title controls to update efficiently
Move issue reporter data section below steps to reproduce, fixes #49087
Pick up new TS insiders
Use single diagnostic source for both js and ts
Use 'auto' for default TS preference values
Update calendar for 1.23.0
fix preferences smoketests due to broken keybindings
Make sure webviews can load svg resources
Use fileservice for loading webview resources
debug: rename process to session
tabs - ensure disposeables are not out of sync
grid - implement moveEditor() in title properly
debug: polish
debug: move contertPaths to debugUtils.ts
debugAdapter: minor polish
debug: move schemas to seperate file
grid - adopt more title methods to update directly
Simplify diff computations
Improve diff computer
grid dnd
debug: base debug view tests
grid - optimize some tabs-title update methods
Revert "comment out broken tests"
Revert "comment out unused code"
don't use file-uri when creating untitled-files, just pass path information along the side, #49078
grid - more title control refactorings
fix smoketest npe
grid branch: only run continuous unit tests
Minor tweaks
smoketest: report current active element when failed
todo
grid: moveView
grid - ensure active editor comes from model
grid - get rid of scoped editor service need
debug test: get encoded debug data
debug model tests
grid: cleanup addView method
:lipstick:
:lipstick:
more grid tests
Update README.md
Update README.md
Update README.md
Update README.md
Update README.md
Update README.md
splitView -> addview
add exclusivness to document filter
the Grid
debug unit tests: get exact expression start and end
Move context menu action to composite bar
debug: simplify helper function for hover
GridWidget tests
debugUtils
rename SplitGirdView to GridWidget
:lipstick:
grid - more cleanup of title controls
Update distro commit
remove travis & appveyor
use TFS build badge
grid - first cut title control cleanup
git: cleanup ipc handles on deactivate
comment out unused code
grid - fix focus tracking
comment out broken tests
grid - implement "Close Editor" action
grid - improve copy editor for new group
grid - add proper split actions to title
grid - :lipstick: LongRunningOperation
fix compile
:lipstick: from #48999
New keybinding prompt now includes a clickable link of how many existing entries exist for the same keybinding. Clicking the link searches the list of assigned keybindings for all commands matching that specific keybinding.
Removed dependency accidentally added to package.json and yarn.lock.
Conflicts are now displayed when defining a new keybinding.
sorting folders and line matches also
Add importModuleSpecifier specifier preference
Basic support for TS preferences
Include mdn-data in root OSSREADME
Add 'copy' and 'copyAll' commands to Process Explorer, fixes #48961
Adding more pinning tests for jsdoc -> snippet
Start adding some basic pinning tests for jsdoc -> snippet
Add C# TextMate grammar support for 'in' parameters
Use property shorthand for CodeActionAdapter
debug.trace
Latest fixes for C# TextMate grammar
Rename goToDeclaration files to goToDefinition
Document that code actions edits and command are not exclusive
Make collectWorkspaceStats asynchronous, fixes #45163
Revert "Restrict html/css to only handling file and untitled files. Part of #48777"
grid - add tests for recently active groups
grid - find group based on openEditor() configuration
grid - introduce and use LongRunningOperation
Do not silently swallow debug errors
Distinguish DA exit events from debugee exit events
test for #48049
add window-check, #49059
don't detect relative path links for fsps, #48951
make sure workspace folder paths are absolute, #48951
grid - more realistic startup sample
fix smoketest in tfs
add tests discussions, #34449
ensure path-component of file, http, and https-uris is absolute, #34449
grid - better event handling for group
ensure absolute paths for file-uris, #34449
comment out broken tests
fix builds
fix task
update continuous build
grid - :lipstick: factory methods
Debt: Reduce implicit any
Debt: remove usage of globals
smoketest: poll should report last error
print raw performance marks, #41712
fix terminal smoketests
smoketest: show devtools when using --verbose
update README.md
grid - focus group when clicking on title area
grid - fix bug removing active view
remove old command and use executeEdits everywhere, #47107
debug: use readonly more
Debt: var -> let
add comment about symlinks #47475
add FileSystemError.Unavailable, #47475
WinJS and ES6 Promises
search: update view location a bit earlier on startup
Use unique pipe names from ipc.net.ts
Use unique pipe names from stdFork
debug brekapoints hover messages: fix copy paste mistake
grid - adopt new services in title controls
fix #49003
grid - implement moveEditor()
grid - :lipstick: on editor options
grid - depend on editor.contribution for now
grid - rename stacks events to follow onDid-scheme
grid - handle editor close properly as before
save pr status to git config
Pick up newer marked version
Add API for storing state in webviews contents themselves
Use different problem colors for editor and tree
Use destructre
Make sure we have a model
Always cancel parameter hints when document changes
Use TS 2.8.3 for building vscode
continuous build: stop windows on first error
search results copy All with sort like tree
grid - add more todos about missing functionality
grid - signal todos in editorPart and adopt some of it
grid - add tests for removing group
grid - keep a most recently active group list and use it
grid - add copy editor/group to addView() method
Made unverified breakpoint icons thicker
Don't try creating a new synced buffer if we already have one
Allow open preview from markdown file title context menu
Auto trigger suggest on jsdoc parameter names
Trigger completions on < inside jsx
Add support for TS trigger characters
Allow cmr+r reload from webview developer tools
Remove onmessage wrapper
Use arrow functions
Show window title as part of process name in process explorer, fixes #48626
Don't include param tags in js signature help provider
Don't need to remove class that is never set
Make sure we treat jsdocs sig help as markdown
switch to use config context key over manual context definition.
Show message when no scripts were found
Add GDPR annotation back for property that are relevenat for older versions of the product
splitview: swap views
Improve registerFoldingRangeProvider doc (for #48526)
grid: improve demo
grid: automatic orientation
gridview: flip
debt - don't let strings-util depend on map-util
grid -  fix active/inactive editor behaviour when opening
Document nodeAcceptEdit through tests
Revert "fixes #43516"
grid - set editor group open options properly
fix #47988
add test, #47988
grid - TPromise => Thenable
Introduce and adopt ICodeEditorWidgetOptions
grid - better error handling and events
grid fix removeView
fix remove
Eliminate CodeEditor
gridview: swap views
Eliminate CommonCodeEditor
grid - actually implement removeGroup()
Have the TestCodeEditor extend from CodeEditorWidget
grid - first cut of actions to close editor and remove group
fix #45764
update dependencies, #48804
fix #41852
wtf file watching
debt - make bulkEdit a service so that we can add create/delete/rename file to it
Avoid inner-loop closure allocation
grid - keep note about split actions
fix grid.removeView
move: first steps
splitview: move is a simple add/remove
:lipstick:
grid - first cut empty editor groups
Remove IQuickOpenService.input() (fixes #48940)
debug: use readonly modifier more
fix #48807
add comment about symbolic links, #47475
debt - better way to track keys in tst
update yauzl
update semver
update proxy modules
Pass focus to editor when closing (#48847)
grid - pin editor and active editor change event
grid - introduce some simple tests for next editor part
grid - implement better active/inactive group tracking and updating
Switch to use the JSON parser
cache the provided tasks
grid - track focus of active editor for active group tracking
grid - add empty group example to play with
Understanding user interaction in the activity bar
Settings editor - make "edit in settings.json" buttons functional
Await git.pullFrom and gitt.pushTo to ensure any failures display an error dialog to the user
Add SettingsEditor2InputFactory so the settings editor can be persisted open
Understanding user interaction in the extension editor
Updating tests for light+ escape coloring grammar changes
#3355 - ensure UI is rerendered when changing a setting, even if it doesn't result in a onDidChangeConfiguration firing
#3355 - implement setting change telemetry
#3355 - Implement telemetry for new settings editor
errors appeared after 216151379f09aefe0b4cae4671feca085ac9e027, ee36a84ff1abb0b8bc7509f651b0d97a734cd14c and 8578f0241e1a64fb5af8ee1b030e42579ef9cd6f
fixes 48891
change debug autoassign to isi
grid - implement first cut of editor control
Add preserveFocus option for webviews
Make webview  options optional
#3355 - Change "Show overrides" to a checkbox for now
adopted renderless grid views
document panelview
splitview: remove render from panel ctor
wip: splitview without render
#3355 - Keep setting value width, shrink description first
#3355 - Maintain focus across a settings list render
#3355 - open correct settings scope when "open config file" is pressed
remove experiment
ignore warnings
Use model.isTooLargeForSyncing to avoid syncing
1.24 begins
better logging for #48662
grid - adopt new grid widget API
wip
fix need to call layout before adding view
dont need to call layout
more grid example
SplitGridView!
wip: gridview getRelativeLocation
#48832 filter out synthetic install tasks
grid - assume tabs for now
grid - add another todo for the gridview
grid - add some group borders
jsdoc polish
fixes #43516
fix #48813
Do not activate on  '**/package.json' but only on 'package.json'
grid - adopt some latest changes
non generic grid
amend to fix for #48806
grid borders
remote - more jsdoc polish
FIxing #48806 npm.enableScriptExplorer requires reloading the window
grid: cleanup
grid: clean onDidChange event
remote - fix jsdoc
grid: fix branchnode's minimum sizes
wip grid: it works
print more information when flacky test fails
fix tests on win
grid: size changes
FIx #48794
wip grip: introduce Grid.IView
[css] update service to pull out #48601
grid - scaffold next editor control
#3355 - Move "also configured in..." to next to title
#3355 - move "open config file" and "show overrides"
#3355 - Style configured setting value inputs
#3355 - Move "Show all settings" toggle to list item after Commonly Used
Settings search in GUI - #3355
Basic GUI for settings - #3355
#48373 Use read entry api
Better fix for #48570 Ignore errors when resolving files to get workspace stats
Remove old package lock file
Use specific document filters for file and untitled
remove FoldingRangeProviderMetadata
Only register markdown for file and untitled schemes
Disable syntax based folding again by default for stable
Restrict html/css to only handling file and untitled files. Part of #48777
Delay fetching performance data unless it is requested in issue reporter, #48617
Update the localizations fwd link
fix #48767
fix #48766
rename it to prepareRename, #48700
#47883 Use old workaround
grid - some polish
Add a Learn More action fixing #48538
Remove unneeded keys
grid - bring back title controls
#43645 Do not override view containers
grid width/height
make grid example work again
grid: more todos
documents with the untitled-scheme are consider untitled, #48269
Limit the maximum distance of the active indent guide (#48721)
Uncomment test
Limit active indent guide computation to viewport (#48721)
improve extension URL opening interface
call url handler even when all windows are closed
Address pr feedback
jsdoc fixes, #48527
fix mkdirp and use it more, #48527
workaround #47883
fix errors
explorer model: rtrim a bit less
paths: fix dirname for paths that end in slash. Explorer model fix find for paths ending with extra slashes
no implicit stat objects, #48527
Log as soon as an entry is called
fixing #48590 use task API to fetch tasks
fixes #43687 Renaming a file in explorer creates a one second glitch in input box
#43645 Lift off proposed api flag
debug: debug.hideNonDebugHovers
pick different folder names for git clone
use native dialog for git clone
add workspace folder after git clone
properly handle exists-errors, #48660
add NoPermissions-error, more jsdoc, #48527
deal protocol handler registration during user prompt
prevent double protocol handler registration
no more FileOptions, #48668
For performance reason check for .json files and deletes .vscode folder first
remove unused/underspecified options, #48527
fixes #47947
use progress notification API for git clone
remove CancelationTokens,  #48527
fix NPE
have only {overwrite} in rename/copy, #48668
Add notes on what retainContextWhileHidden does to scripts
Add acquireVsCodeApi to get handle to vscode api inside webview
Bump node-debug2 #47274
Change cursor to default in process explorer, #48585
Show context menu on right click in process explorer, #48498
Update windows-process-tree to 0.2.2
[css] update service
SmartStep for css debugging
[css] update service
Add vscode namespace in webview
Create appInsights client only if user has opt-in to telemetry
Revert "added the key bindings for first and last selection in suggestions." as per user feedback in #43511 This reverts commit be5030b70ca62a1a05ad070743d1452614a4a7bb.
Update the height only after processing all the change events (#42317)
Don't track selections if tracking is not needed (#42317)
Correctly handle when webview.reveal is called without any args
Handle a few edge cases where extension host may try accessing a disposed webview
Make sure we still delete the webview handle when the extension event has an error
Use string symbol kind for markdown symbols
cleanup git clone error
Left align 'Name' label in process explorer, fixes #48500
#43645 Update views schema to show 'test' location
grid - tweak initial sample
grid - hook in title control and update CSS
#43645 Out of the box test view container
grid - move title controls over to editor2
grid - add and implement addGroup
make sure that 'runInTerminal' request returns a 'body'; fixes #48680
have a FileType and make readDirectory slimmer, #48527
update inno_updater v0.4.3
fixes #47551
fixes #46854
debug: fix activation events
no optional fields in watch-options, #48527
OSS update
unsure what's  happening here...  #48662
#48529 Handle scm viewlet views
:lipstick:
Make taskExecutions a ReadonlyArray
Rename `isTooLargeForHavingARichMode` to `isTooLargeForSyncing` (#44897)
jsdoc-polish, #48527
breakpoint widget: ovewriteBefore magic to get proper suggestions
fix #48502
breakpoint widget: allow to delete condition or message
debug: run to cursor keep track of added breakpoint
Check if list is displayed (fixes #48652)
Log Point -> Logpoint
grid - some feedback wip
fixes #48211
grid - towards clear group service API
Bump node-debug2
Fire onDidOpenTerminal event for split terminals
Make sure we rehydrate uri in resolve rename location
More webview rephrasing
Extensions list in issue reporter should be sorted in a case insensitive way, fixes #48614
Rephrase some webview docs
Update js/ts grammars
node-debug@1.23.3
onDidChangeDiagnostics is now stable, don't check proposed
Revert "eh debug: Do not end process on initial attach"
Document Terminal.onData API
add new comment range is marker based now.
fix #48550
argument names, #48527
Move Pull Request Panel to SCM
#48535 Get progress location from view location
fix markdown-links in vscode.d.ts, #48527
do not steal keybindings from find widget
fix bad relative import
#48373 Add logs
polish message
debugL fix select box lifecycle
explorer: ExplorerItem initialize children when a child is being added
remove localStorage migration code
fixes #48504
add todo
fix broken auto-attach; fixes #48452
debug: tweak confirmation text for breakpoint deletion
macOS: print the error when setting feed URL fails
allow resolve for all, not just for proposed-api-users, #7340
grid - NextEditorViewer wip
update classifier
New keybinding prompt now includes a clickable link of how many existing entries exist for the same keybinding. Clicking the link searches the list of assigned keybindings for all commands matching that specific keybinding.
Don't include node_modules in markdown results
Make sure we update markdown workspace results when editing a file wihtout saving
activate git by *
Revert "disable failing smoke test."
disable failing smoke test.
Catch errors on signature help provider
follow-up on #48296
added some additional interesting packages
changed packages from azure packages to node server packages
added gdpr tag comments
added remaining azure packages to look for
refactored to use async await
changed package.json scan to look for list of packages instead of just react-native
vscode.range is 0 based. mouse up on gutter should be marker based.
comments need paging as well
the position mapping between diff hunk and file is correct now
Bump node-debug2
Add new locale ids for zh
Use correct extension id for zh languages
For #46733 - fix npe from 9ce5816
Task 2.0.0
[css] update service
Bug fix from emmet helper
Null check
reveal and expand comments
collapse action
auto expand for comments in PR view
filter comments by file
Make sure we fire view state updates when changing the webview position
null check
Command can now enable/disable a breakpoint. Removed default keybinding.
Remove disableBreakpoint from global menu
Update issue template to mention feature requests
grid - open some editors right on startup for testing
move filesystem provider api to stable, #47475
talk about `File`, not `Entry` #47475
more jsdoc, #47475
:lipstick:
ask user to open extension URL
remove experimental setting
rename FileSystemProvider2 to FileSystemProvider and the whole ripple.
fix compile error
make product build scripts stop when any command fails
clone repo by url
fixes #48393
Update for tests (#48116)
Send non-empty default value through validation to replicate old behavior (#48116)
Error decoration (#48116)
Implement password (#48116)
Implement valueSelection (#48116)
Validate input on Enter (#48116)
Prompt and validation message (#48116)
Move text input to QuickInput (#48116)
Cache debug viewlet actions
grid - some more title widget polish
disable terminal smoke test
fix bad localize usage of localize
Do not set width for viewlet icons
grid example
first cut of _proposed_ api for hierarchy of document symbols, #34968
a bit more jsdoc, #47475
grid - show simple title control to see something
Ask user to install core language packe extension
grid view: addView deep nested
node-debug@1.23.2
gridview: add view nested
gridview: addView tests
gridview: first tests
grid - more scaffolding
gridview: getViewSize
:lipstick:
gridview: dispose
gird view: resize child
debug:  use platform specific line delimiter
grid view: get views
:lipstick: & jsdoc #47475
grid: remove view
use `onFileSystem:<scheme>`-activation event, #47475
debug repl: take into accounts source length for wrapping strategies
grid view: finish addView
Check for word boundaries around word-only brackets (#11856)
allow to run unit tests from vscode again (workaround for #48205)
debug: if output event does not have a column use column 1
Update calendar
some comments
Emmet: Allow css completions in style tag/attribute, html completions in script tags with html type
Move emmet from html extenstion to emmet extension
collapsable comment widget
onUri
ProtocolHandler
keep @ts-check happy
[loc][Query] Typo in source text for "ancester". fixes #48214
[html] update service
Revert "debug: do not listen on launch.json changes, re-read it before debug start"
Update package.json
Update cshtml.tmLanguage.json
Add missing yarn updates
Don't ship php-language-features src
Bump node2
added config option whether the explorer should be enabled.
Enable clear search even if there are no results found
Properly preserve focus when opening editor
Add counter to comments panel title, collapse all action
restructure command variable resolving
make validateState a no op when prNumber hasn't changed, revert previous
Avoid multiple calls to status when switching PRs
Separate WorkspaceCommentProvider and DocumentCommentProvider
commentProvider can control collapse state of a thread
Add editor.codeActionsOnSave (#48086)
Update js/ts grammar
small reply textarea
Add Terminal.onData API
Update vscode-extension-telemetry version
Stop sending OSVersion as PlatformVersion is used post Nova
inactive extension url handler
rename uri api
scm viewlet: call setVisible on contributed panels
Show comment threads with one level of indentation
back to IWorkbenchEditorService for creating file input (for #48275)
minor rename
localStorage: restore from backup if any
Revert "Electron v2.0.0 (#47289)"
Revert "Require gtk 3 on Linux"
:lipstick:
fix for deleting multiple directory message 47892 (#47956)
fix #48209
remote - pushing down more methods to the IFileService interface
add dev-warning, adjust FileEditorInputFactory-deserialization, #48275
add registration change event, #48275
remote - only remember last known schemes, not all known schemes
inline`FileType2` as booleans into IStat, #47475
remote, todo update, #48269
remote - one todo less
expose scm view location
proposed open url api
remove getEnvironmentService from IVariableAccessor
eh debug: Do not end process on initial attach
fix compile error
only allow events from a provider's scheme, #47475
improve error handling in variableResolver
less bitmasks, replace FileOpenFlags with FileOptions, #47475
Migrate pinned states fix. Do not add new composistes if it is old data.
fix #48210
fix #48138
explorer: FileViewletState use an object map since ExplorerItem objects do not change and resources have a bad difference between rename and new child
a bit of error polish, #47475
make ResourceMap always strict, #48258
wip: grid API
allow file system providers to express that they are case-sensitive
rename FileError to FileSystemError, #47475
Upstream bug fixes
Cancel ongoing provideSignatureHelp requests in some cases
Pick up TS 2.8.3
Flat list of comments for each resource in comments panel
Refactoring few emmet unit tests
comments decoration for file explorer
tree view does not support decoration now, use icon
some decorations for scm
Make sure we handle webview position updates when an entire editor group moves
dispose comment provider when switching between branches
[css] update service
#43645 Update schema
[css] update service
huge refactoring, remove getNewCommentRange
Import absolute paths
Increase delay before sending ext host process requests
Dispose of proxy listeners properly
Promote webview Api to stable (#47989)
explicit reply comment thread command
update comment cache
Listen to update comment threads event in comment panel
export ExtHostVariableResolverService
support configResolver in EH
fix bad loading root indentation
don't count already resolved items, #44846
explorer: do not allow to creatae a new file / folder while in the process of creating a new file
add an arg to resolve code lenses, #44846
context menu on title area is specific for sidebarPart thus move it there
grid - scaffold more things wip
add DeprecatedXYZ-aliases, #47475
resources: use fsPath for comparing file resources
base tree
Give a different id for SCM location - Views are contributed to a container inside SCM Viewlet
move grid view
debug: surface all errors from the variable substitution via modal dialogs
grid - first cut open next editor action
grid - restore previous editor service indirection
grid - editorGroupService => editorPartService
grid - restore watermark and background color
grid - create a editor blank slate container
add (empty) option bags to provider function to be save for the future, #47475
mistype
debug: report error for postDebugTask
Put contribution behind proposed flag
Compute 'enableProposedApi' property on main
back to FileError, #47475
Change the extension point - Call it viewsContainers - Take the location where containers are contributed
debug: do not listen on launch.json changes, re-read it before debug start
debugStatus: always update the style since it is affected by debug state
fix #48140
comment out smoketest from product build for now
fix CSS smoketests
fix search smoketests
improves error message
Transition combined include/exclude patterns back to split include/exclude boxes For #46315
Restore split include/exclude boxes
Compare comment threads instead of comments
update comment content.
Add polling for updating comments
Update markdown grammar
fix reply new comment
rough incremental update.
increase CSS test timeout
Update processes.ts
Remove contributed property
Register views outside viewlet
Register views outside viewlet
Polish exit, fix input
Hide the contributed viewlet if no views are registered
update grammars
Improve handling of process exit
Return disposables for proxy listeners
Change document selector to include the schema explicitly
Move from shell launch config option to setting
Improve naming
Use correct $name for onDidDisposeWebviewPanel event
Add proposed API checks for new terminal APIs
Remove debug logging
Clean up process creation and check connected before sending
Move TS/JS to use organize imports codeAction instead of command (#47850)
Support WSL for multi-line prompt clearing
Highlight active indent guide (closes #14017)
Add TextModel.getActiveIndentGuide
Remove empty imports
debug: fix action labels for log points
set icon mask size to 22px
Improve terminal clear command to work with multi-line prompts
remove code duplication by using StartAction member in RestartAction
monaco folding api (for #47808)
fixes #46899
make build stop when a script errs
fix unit tests
make folding api public (for #47808)
Simplify terminal process paths
fixes #47740
fixes #47738
Pass terminal shell launch config through
smoketest: improve preferences smoketest reliability
add (optional) copy function #47475
go a little slower on well-defined errors, #47475
single build artifacts folder
fix bad log
save collapsed state
debug: prompt before removing breakpoint with condtion or message
scm: save sizes
publish log files
log file
incorperate folding api feedback
smoketest: log last poll message
fixes: single trailing slash results in a confusing message
debug: terminate thread as a context menu and command palette action
FIx #47828
merge conflicts resolved
merge conflicts resolved
scm: move views
debug: only respect column breakpoints for column > 1
be more strict when registering a provider, #47475
Add stop()
Add uri transformer
scm: panel dnd
Add scheme transformer
first cut of explict watch, #47475
add explicit function to register v1 file system provider, #47475
improve smoketest docs
fixes #48109
improves validation on rename
add validation check to allow only relative paths - prevents weird message in inputbox
unit tests for multi-path validation
refactoring after PR review
publish screenshots
publish screenshots in TFS
screenshot support
:lipstick:
Use standard arrays.equals instead of custom function
Remove the old referenceInfos editor config option
no need to implement comment provider api in comment service
comment service fetch
Add onDidCommentThreadsChange
Clean up naming
Use standard 'postMessage' name
Pass Webview into ExtHostWebviewPanel instead of creating it inside the ctor
Pass through shutdown and resize
fetch from the pr branch directly
Clean up
Get terminal process running on ext host
Fall back to comment's original position if position is null
tiny changes.
Anonymize paths only from error telemetry else data like mimetypes get anonymized
fix microsoft/monaco-editor#817.
fix build error
account for substituations made by the pipeline
Make service responsible for attaching the process proxy
get ready for incremental update.
comment thread should never be null
Unregister webview reviver on dispose
Update to use more consistent WebviewPanel naming
no infinite loop
- Store all current composites with pinned state - Retain the composites states - Compute pinned composites from loaded composite states and  current composites - Store on shutdown - Parameter in add api to activate the added composite - Pin the added composite at currect location
- Add to composite bar when new composite is added - Sequential order for in-built viewlets
[html] adopt folding APIs
[json] adopt new folding APIs
- Store all current composites with pinned state - Retain the composites states - Compute pinned composites from loaded composite states and  current composites - Store on shutdown - Parameter in add api to activate the added composite - Pin the added composite at currect location
move proposed search api logic into its own world, #47058
DRY
new PR group
[css] adopt folding apis
[css] fix path completion participant
[css] remove emmet dependency
Open script on single click
:lipstick: #48062
Display message when PR has no comments
use $.
debug: rename resolveConfiguration to substiuteVariables. Also getEnabledBreakpointsForResource should also respect enabled property
debug model: use a ReadOnlyArray
fix bad imports
add mkdirp-option and honor it in the remote file service,  #48062
debug actions: disable those depending on evaluateName when evaluateName is not present
Rename context key
fixes #47208
debug: Log Point to new breakpoint menu entry
reveal in os and copy path can work on active editor, no need for explorer focus
explorer commands: fix computing context
Move TestNotificationService down to /platform/
fold ExtensionHostDebugAdapterProvider into MainThreadDebugService
Improve code style
add fwd link to doc-page, #21886
smoketest: configure git user name and email
drop column attribute if value is 0; see #46784
add comments
debug: remove type and label from IDebuggerContribution
move api to stable, #7340
allow to return range or range and placeholder, #7340
remove console.log
scm viewlet: persist view states
Check in missing monaco.d.ts
backslash
just have `createDirectory`, #47475
fixes #46744: inputbox hides again if all slashes are removed
smoketest
- Add to composite bar when new composite is added - Sequential order for in-built viewlets
fix bad reload call
download builtin extensions in continuous build
missing compile
Committing new JS file
refactoring
empty
run smoketest in continuous build
Restore failing test
Refactoring and attempt to fix broken tests
Adjust monospace check names
Add monospace terminal warning and tests. Tests currently do not work
Initial work on fixing monospace issue
Add helper function checking if font is monospace
Implement word part move and delete
feature: add support to manually add repositories
use localFileChanges for getting all comments, fix file label
Add user name and icon
Add provideAllComments method to comments provider
map file change from PR directly to SCM scheme
explicit return types and remove unused files
Fetch PR when switching to or storing from review mode
Move onDidChangeActiveTextEditor into Preview
Update js/ts grammar
Change Hover#range to be optional
translation reminder typo
move comment widget out of editor
More types!
Type messages emitted from terminal ext host bridge
Start of allowing terminal process to live on extension host
refactor
add new comment.
Align command id naming.
[html] update services, add folding for embedded css (for #47808)
commented out test for line/command selection
made test for line/command selection OS-generic
fixed test for line/command selection
Webview panels start out as visible
weview -> webview
Also fire webview dispose event when dispose is called
added test for line/command selection
Move terminalTab to browser layer
Remove terminalTab dependency on electron-browser
Improve terminal layering
Use paths
Move term env and cmd tracker to node layer
Move preparePathForTerminal to terminalEnvironment
Remove use strict in terminal
Add back terminal env/cwd tests
Move environment helper functions into own module
Clean up
Mark manager props readonly
Make the child process provide to manager
Make processState readonly, send via write
Move resize to manager
Clean up terminal dispose and reuse
scm viewlet: first contributed views
panel viewlet: expose panels
scm view location
more contributable views tests
Move process title handling into manager
contributable views: fix bad onDidAdd event
Move data event to manager
Clear event arg
#43645 Remove unused imports
#43645 Create contribution point `activityBarGroups`
#43645 Remove unused imports
Move process state to manager
fix merge conflicts
contributable views: isvisible
#43645 Prepare for activity groups contribution
[json] update service (folding api for #47808)
[css] update service (for #47788)
css/html/json typos (for #47894)
baseEditor: supportsCenteredLayout
welcome page: changes wording of settings and keybindings section
expose both viewDescriptors and visibleViewDescriptors
contributable views model: emit right events
explorer model: children can have no name, guard against that
Revert "explorer model: guard against children with no names"
changes wording of keymap extensions to also include settings
fix #47306
user can now select next/previous line in integrated terminal
open the document at the script¬¥s offset
fix: meaningful warning message when formatting
Change view name to title case
only show the view when there are package.json files
properly register debug types
remove explorerVisible configuration setting
Support the all the debug argument flavors
feat: add support for ignored repositories list
Automatically navigate to the next merge conflict upon resolving a merge conflict
Give cols/rows to createProcess
Add global functions to completionItemProvider.
Allow process not to be created
Move emitter init
Clean up
Move more create process over, remove node dep on terminal instance
Fire process ready event
Move onProcessReady over
Move prelaunchinputqueue over
Move processId over
Move processReady over
Move process over
Move ProcessState over to process manager
Introduce TerminalProcessManager
Regenerate functions.
Add buttons terminate and restart to "already active" task notification.
Support for filing feature requests on extensions, fixes #47508
temporary disabling failing tests
Use debugService to start debugging and cleaned up isEnabled
Be more lazy computing symbols
Update results on file create
Handle delete document
Adding test for file change
Adding multi document workspace symbol  provider test
Adding single file test
Name cleanup
Switch to using watcher
Dont depende on workspace settings for tests
Don't depend on lodash
added the workspace symbol provider for markdown #46406 (#47610)
Update markdown grammar
change bogus 'envVars' back to 'env'; fixes #47848
Moving code action contributions to own file
More cleanup to getCodeActions
Clean up isValidAction
Cleaning up getCodeActions
Clean up naming
Renaming tests to CodeAction
Require gtk 3 on Linux
Organize imports, removing use strict
todo
move tests
#47154 Expose 'isComplete' property in Configuration data to know if configuration is complete or not
contributable views: setVisible tests
todo
rename misleading function
contributable views model tests
ContributableViewsModel
clear output should not focus output
#47154 Ignore case for non file schema providers
languageSurveys: listen on models saved, not generic file events
remove console.log
editor: move ids to editor.ts editorGroupControl do not center binary editors
Temporary fix in getLineCharCode (#47733)
allow to resolve completion items via an argument, #44846
#47154 Use cache for configurations if schme is not file
more ContributableViews
add open flags to rename, #47475
:lipstick: #47475
explorer model: guard against children with no names
A bit more document selector clarification, #21886
debug: on did change breakpoints do not fire an undefined event
Commit always using sign off flag setting  47395
#47154 Use path and scheme of folder in file service configuration
Remove unnecessary code
update some docs, #47475
remove console.log
smoke: better reload, better extension search
fix peek race condition
smoketest: fix quick open code stealing
add FileOpenFlags, FileErrors, and a bit of polish, #47475
Electron v2.0.0 (#47289)
remove localStorage workaround in prep for electron 2.0.x update
 set background-color explicitly instead of shorthand declaration, fixes #47752 (#47785)
monaco-editor: workspace symbol need Uri information
Navigate to comment in editor from comments panel
implement push success notification for issue #39039
Use readonlyarray for providedCodeActionKinds
Rename webview.viewColumn to the more generic webview.position
Tweak WebviewPanelOnDidChangeViewStateEvent to only provide a webview panel
Using consistent internal name
[html] intersecting regions test
Associate comments with files, open editor when selecting top-level node in comments panel
Rename `WebviewEditor` to `WebviewPanel`
CodeActionProvider.providedKinds (#47702)
organize disposals
Exclude yarn-error from hygiene
Reduce the size of input box
#47154 - Split folder configurations into node based and file service based - Reload configurations after acquiring file service
add open file action to diff view
print an info message when the extension your are developing is using a 'generic' document selector, #21886
ContributableViews class
fix test
explorerViewer: null guard when getting children
debug: do not look at breakpoint column when finding breakpoint for widget
Wrap task API into proposedApiFunction
support IResolveContentOptions#position, #41985
better implementation of end-methods, #41985
startup timeout
smoke: improve wait for welcome
:lipstick:
have chunked writing (internally) wired up, #41985
move stream implementation into their own files, chunked reading, towards chunked writing, #41985
fix --skip-getting-started
smoketest: fix openFile
Safer loading of spdlog
Safer loading of native-watchdog
Added missing comma.
Added fold markers for YAML.
create named pipe in windows
Ship monaco-editor-core
setImmediate is not available in browsers
fix buildfile
files - extract resource encoding related helper
files - cleanup & remove obsolete importFile action
monaco editor support ctrl/cmd + p worksapce symbol
remove unused.
use content provider for pr diff view.
Absorb upstream bug fix for #46511
Update settings description typos
merge vscode master
move review model logic out of tree view.
Comment provider with correct registration and dispose.
should not run providers twice.
unregister comment provider when dispose, otherwise we see duplicates.
Add comments panel
support to launch debuggee from EH
Use ... after  code action comand labels to indicate they require further input
Add source code action kind
new comment.
temp
#22289 Show files exclude filter inside inputbox
Collapse review zone by default, no review toggle overlay, show all reviewers' names.
Reply comment.
#22289 Show messages with actions
Split out `Webview` from `WebviewEditor` in proposed API (#47370)
Show my prs with correct filter
jsdoc
Remove obsolete TODOs
Allow processId and name access on disposed API Terminals
fix handleLocalStorage logic
Implement #22289
Use items width to compute overflow
further cleanup of driver API
green tests, more cleanup
:lipstick:, #47475
more wait calls
allow to return results async and sync, #47475
remove API
fileservice :lipstick:
don't allow double read, #41985,  #47475
remove spectron references
reuse getEncoding/getPreferredEncoding in remoteFileService, #38776
tweak file change event,  #47475
be more resilent when parsing RFC 2822 header in DAP
bug - make remote-read-stream push `null` eagerly
make readDirectory return string/stat-tuples, #47475
forward extraArgs to app
cleanup
remove screenCapturer
:lipstick:
green extensions tests
ref #44776 Removed the test for deleteRef method
ref #44776 Only test the logic of parsing `git show` output
green search tests
green preferences tests
green debug tests
fix #47325
error, missing compilation
start debugging with command
remove slow timeouts
green git smoke tests!
streamline build
remove smoke2
some jsdoc, #47475
:lipstick:
remove console.log
Return access denied and log on webview resource load error
Organize imports
clean up electron 2.0 localStorage remainders
Comments based on markers
No review overlay when there is no comment.
Add review mode overlay in the editor.
Prototyping declarative action contribution for threads
Removing webview widget api. Will go with more declarative approach
attempt to fix VSLS regression
Make sure js/ts blocks folds show ending bracket
foldering -> folding
fix translation issue #47580
rename rawAdapter to debuggerContribution
Use extension displayname as well when searching using custom views #47405
Emmet can return empty array for css #47429
fix #47346
catch bad stack
remove selectorExecute
add provider to readable-stream logic,  #41985
add `toDecodeStream` to enable seamless encoding handling, #41985
typeInEditor API
Late update for 1.22.1
ref #44776 deleteRef instead of reset if commit has no parents
ref #44776 Added DeleteRef operation
ref #44776 Introduced `deleteRef` method on git.Repository
ref #44776 Refactoring test
ref #44776 Cater for the cases of multiple/no previous hashes
ref #44776 Get previous commits as part of commit info
ref #44776 Wrote a test for Repository#getCommit
attributes, children on IElement instances
Remove left-over console.log
dispatch input event
forward driver calls
lower timeout
dispatchKeybinding from main
:lipstick:
dispatch keys!
stub out more methods
enums starting at 1, add more xyz2-types, #35449 #47475
arrange IDebuggerContribution attributes logically
rename  IRawEnvAdapter to IPlatformSpecificAdapterContribution
rename IRawAdapter to IDebuggerContribution
smoke: run compile on postinstall
ignore generated d.ts
symbols - fix version
naming, add cancellation tokens,  #47475
:lipstick: symbols upload
monaco-editor: web ide app `worksapce/symbol` Reuse document/symbol search ui
Add  opacity decoration option
Add process explorer, #41045 (#47530)
New comment actions.
Update telemetry tests for GDPR related changes
Update GDPR annotations for error telemetry
Minimal code change to the git extension exposed API.
Fast return if the content doesn't exist.
Restore Review Mode, Git content provider and extract comments provider out of TreeView.
remove viewzones when disposed.
Add a basic 'refactor' context menu
Don't upgrade ts unused diagnostics
Show message when code actions are requested but none are available
Update markdown grammar
Cannot assign to read only property in nested settings #47316
Update C# TextMate grammar with latest bug fixes
wip: driver ipc
Use windows-process-tree module to list processes, #46433
Build vscode with TS 2.8.1
Pick up new TS insides
Add terminals
driver: dispatchKeybindings
Add more details to commented out test
Disable failing test
Allowed preceding spaces in fileActions.ts file names
Work in progress for exposing all terminals via API
Update xterm.js
Build: automatically upload symbols and create versions (#47491)
disable `monaco-typecheck-watch` because it seems to stall
Add tests for select/scroll to terminal commands
Add tests for TerminalCommandTracker
move -> rename,  #47475
rename debugAdapter.test.ts to debugger.test.ts
rename 'Adapter' to 'Debugger' to avoid confusion with real debugAdapters
make case-insensitive debug type
more cancellation token, #47475
files,remote - more utimes removal
files - remove touchFile method
fix Unit Tests for Windows
Add ViewModel.getLineLength (#46942)
Improve package.json extension schema
add FileSystemProvider2 for rapid changes, add readFile/writeFile, simplify delete,  #47475
fold path hooks into debugAdapter
rename v8Protocol.ts to debugAdapter.ts
rename debugAdapter.ts to debugger.ts
text file - ignore load() request if a pending save is running
Rename options
fix #47388
fix #47363
fix #45538
:lipstick:
SelectBox: Bounds check/adjust selected option (#47445)
Tiny typographic change
make debugger registration case insensitive
Pull in node-pty types from upstream
Updating js/ts grammars
Targeted fix for markdown special character links in #37079
Make sure we don't try posting mesages to disposed markdown previews
Reduce duplicate state for active webviews
Rename webviewInput to webviewEditorInput
gravatar, title bar for comment thread, show comment titles when file opened.
deleted lines should be ignored.
Allow closing webview widgets
Simplify tests
Show at a specific position
Fail build when settings search build id generation fails (#47359)
Prototype webview widget
use 64 bits for user gravatar.
typing is always good
Moving common code out of prProvider.
open correct workspace
driver all the way to the windows
Avoid large function.
Gravatar is cool.
reify the DebugAdapter; fixes #45129
Add test
Rename the option
less error spam when editors fail to open on startup
add api-test, #30075
make diagnostics read api public, #30075
Revert "SelectBox: Add bounds checking on selected option.  Addresses: #43475, #44309 (#47044)"
electron - save some changes that are OK with 1.7.x
Revert "Update to Electron v2.0.0-beta.6 (#46552)"
Make sure we don't try posting mesages to disposed markdown previews
Reduce duplicate state for active webviews
Rename webviewInput to webviewEditorInput
Properly await on revive
Add test for registering duplicate webview serialiers
Delete now unused webview.state
Move all private properties together
settings - mark more as Scope.APPLICATION
debt - introduce a helper to store editor view state with a upper limit
fix "Close Editors to the Right" action (fixes #46887)
Extract out duplicate webview event handler logic
Use correct promise type
Show error when webview restore fails
Handle exceptions in webview serialize
Extracting out duplicate code
Chagne webview element file name
Move main webview contributions from html to webview
Webview -> WebviewElement
WebviewService -> WebviewEditorService
fetch PR branch (readonly) and checkout locally
bad copyright
crazy idea of injecting resource groups into git scm viewlet
Show comments in problem panel.
collect and kill loose code instances
wip: launch code without spectron
client -> api
:lipstick:
extract driver
Timebox webview serialization
verbose, cleanup
more api cleanup
offline smoketests
Use clearer name
SelectBox: Add bounds checking on selected option.  Addresses: #43475, #44309 (#47044)
Mine PRs.
review requested PR.
Make markdown preview revive wait on content populated
Working on progress indicator when loading webview
Refocus webviews on reveal
#31039 Reuse the settings editor in the active group
remove explicit monaco typecheck because it is now part of the compile
make sure sequence terminates as soon as formatting results are in,
slim down driver API
clean API
green!
Focus terminal after select/scroll to commands
Move terminal theming to a theme participant
46785 open root folder when no file is in focus and reveal in finder is invoked via command pallate
#47041 fixed the scrolling of the editor and cursor after the revert from inline diff viewer
Revert "use cp.fork"
Remove back up buffered output channel
#46750 Mark extensions.autoUpdate as application setting
wip: cleanup API
Error code for rename
#47180 Report install/uninstall events in extension management
more cleanup
Introduce and adopt IModelDecorationOptions.zIndex (#46995)
cleanup API
Better usage of editor API
explain magic
use cp.fork
add monaco-typecheck tasks and add them to the compile/watch tasks
implemented feature but unsure of isEnabled due to condition for calling StartAction.isEnabled
Bump node-debug2
diff view when the file does not exist in a commit
move comment analyze to common
remove uncessary code.
configuration for github tokens
Use octokit/rest.js instead of octokat.
Do not show comments panel when there is no comment.
Remove "Preview" from search.location setting description
Zoom in issue reporter, fixes #46801
#46750 Expose application scope to extensions
#46750 - Set update channel setting as application setting
Implement #46750 - Introduce Application scope - Update configuration service and models to respect the application scope - Update settings editor to respect the application scope
debt - notifications should talk about closing not disposal
:lipstick:
fix prebuild scritp
woo: smoke infrastructure up and running
wip: code driver
Change explorer model to a Map to fix #47120
Add isBasicASCII to RenderLineInput (#22352)
Simplify ViewLineRenderingData (#22352)
driver as a standalone module
Handle the case where typing occurs at offset 0 after a focus gain (fixes #42251)
Make readFromTextArea a static method
Increase retry time to 30s
fix  #43429
debt - further reduce Builder usage
:lipstick:
debt - make notification#prompt() nicer to use
Format.
Bump node2, fix Microsoft/vscode-internalbacklog#181
click should always work
better icon
remove commits provider
Dispose view zone.
Add webview restoration api proposal (#46380)
add missing copyright
Working on adding comment api
#42120 - Implement Copy All
#8594 - implement copy path context menu item
Retain paths starting from node_modules  and match escaped backslashes
node-debug@1.23.1
[css] enable strict on server
Show notification when running with extensions disabled, fixes #46817
Get GPU information in issue reporter, #46960
fix test --debug after electron adoption
wip: driver
notifications - more use of prompt() API
continuous build
fix linux continuous build
Welcome: Overlay could mention new notifications location (fixes #45061) (#47134)
Mark 'Languages' as deprecated (for #47103)
fix tests
debt - reduce usage of Builder pattern
debt - reduce amount of work when file events occur
Increase the timeout to retry and remove the fallback
files - refresh visible files when window gains focus
:lipstick: wording
Built-in group header: Languages -> Programming Languages (for #47103)
Languages -> Programming Languages (for #47103)
macOS: Add a setting to enable acceptsFirstMouse for window (fixes #24634)
Workspace file: encoding should always be UTF-8 (fixes #46935)
debt - merge node/mime.ts into node/encoding.ts
Marketplace category "Languages" changed to "Programming Languages". For #47103
Allow to open binary files in the text editor as explicit user gesture (fixes #1218)
Support UTF-16 w/o BOM (fixes #22564)
Compare View loses scroll position when switching tabs (fixes #10663)
zip - implement cancellation support for extractZip
Update to Electron v2.0.0-beta.6 (#46552)
fix #44305
Avoid global CSS rules (fixes #469460)
fix #46971
Revert "always clean repos before building"
always clean repos before building
Use existing button widget (fixes #46947)
don't read null range, #46893
remove debug log
ReindentSelectedLinesAction
Update js/ts grammars
Update markdown grammar
Remove space
Split terminal based on workspace. Close #45694.
Created Split Terminal (In Active Workspace)
:lipstick:
Sort extensions list in issue reporter, fixes #46968
#43813 Revert rename
Inherit user env in issue reporter, fixes #46914
Cover case where find widget is visible
bug fixing
No initial focus item (fixes #46949)
Reveal focused item (fixes #46752)
Clear any selection (fixes #46926)
#46860 make git delete popup modal
externalize strings
add action to clear terminal selection
cleanup breakpoint class hierarchy
improve breakpoint model api
fix return types to interfaces
avoid unnecessary uri.toString()
avoid unnecessary work
add missing attribute to interface
use getSourceForUri
add comments
fix silly loop
make IProcess.sources private
fix typo
Add null check when there is no active file
refactoring: extract task related code into tasks module
added icons
improve error message
honor the package manager when launching for debugging
bump version
Revert "OpenSearchViewlet before all search smoketests so they can run independently"
OSS tools
GDPR reclassification
Adding setting for disabling partial parsing in stylesheets (#46979)
Cacheddata file is created by VSCode and so is not customer content
adding open for script
add Debug script command
OpenSearchViewlet before all search smoketests so they can run independently
Anonymize file paths before sending telemetry
Adding tests for stylesheets partial parsing (#46977)
Bump node-debug for #46782
Revert "Overwrite inactive focus and selection colors (fixes #46924)"
Respect ownership on code command installation
Revert "Remove file paths from telemetry data"
Move terminal ipc handling to service to fix unit test debugging
reset cwd right before relaunch (#46876)
fixes #45479: different border styles for HC
Remove file paths from telemetry data
Overwrite inactive focus and selection colors (fixes #46924)
node-debug@1.22.12
fix #46938
Pass focus back to filter text (#46926)
Pointer cursor for button (fixes #46929)
follow up on #46880
Focus filter text after clicking Select All box (fixes #46928)
cap textual suggestions at 10k, #46930
Show Select All unchecked when none visible (fixes #46927)
fix #42602
fix  #43559
bring back listInactiveFocusBackground
fix #41081 - cancel action computation when editor goes off-dom
fix #43052
fix #46239
fix #46880
Bump node2
Publisher info is now considered SystemMetaData
Css partial parse refactoring (#46894)
split long change buffer.
Allow a space between # and `region` for folding in Python
Change similar issues section to have a max height instead of a fixed height, fixes #46124
[css] update service
Store the first visible line in the view state (#41968)
Don't show help text when filing against an extension, fixes #46787
Rearrange the fields in the issue reporter, fixes #46786
Move command to middle when selecting to terminal commands
Avoid allocation in most-likely case for validateRange and validatePosition
breakpoint widget: more precise context
Add more terminal logging
Ctrl+A to select all (fixes #46665)
revert throw error for unknown variable
configuration resovler error message put quotes for better readibility
Multi Quick-Pick: Performance with many items (fixes #46666)
fixes #44411
Multi-select picker API: use 'canPickMany' and 'picked' (fixes #46803)
Fallback extracting to extension path if rename fails
Arrow up to go to last item (fixes #46752)
Detect out of date scripts
hc theme - use contrastBorder to separate from title
Stay focused (fixes #46749)
HTTPS link
fixes #45208
No scrolling on editor tabs when enabling them (fixes #46845)
Fire only once per item (fixes #46669 and #46671)
Using correct newline
fix blast from the past
update inno updater
only detect git encoding if files.autoGuessEncoding is enabled
Tab / Shift+Tab should remain in picker (fixes #46661)
restore listInactiveFocusBackground for suggest widget
Show error message if data provider is registered for  unregistered view
Make description optional (fixes #46657)
Multi-select picker: Add left/right padding to OK button (fixes #46652)
Remove LinesTextBuffer
Remove ChunksTextBuffer
improve windows update ux
Show telemetry notice on first start (fixes #46623)
fixes #46824
breakpoint widget: set cursor on end of line
simple debug editor: hide curos in overview ruler
list/tree: be consistent about not supporting inactive focus colors (for #46129)
fix #46715
fix #46632
notifications - limit stack height
fix #46619
fixes #45526
fixes #45911
Progress API percentage is ambiguous (fixes #46743)
Change default search replace keyboard shortcuts again to match editor find
:lipstick:
fixing validation on maxMemory setting fixes #46767
Absorb upstream fix for #45790
Use 'bugs' url if present, fixes #46773
updating wording for large file error fixes #46748
node-debug@1.22.11
Add old properties back until we retire them post nova
fetch only npm tasks
Have distinct js/ts commands for organize imports
Pick up TS 2.8.1
node-debug@1.22.10
use latest final DAP module
added npmExplorer
Offset is relative to position when finding comment
Avoid parsing file  when abbr is invalid #43470
Handle undefined extension displayName, fixes #46727
explorer: do not react on events if you are disposed
Use partial parsing for stylesheets for Emmet command #43470
fix memoize warning
postDebugTask-schema default value is ''
Simplify FormatCommand (#44870)
fixes #45806
fixes #46180
Progress can go backwards (fixes #46717)
fix #46631
fix #46650
properly dispose tree items
fixes #46648
fixes #45162
progress - fix debouncer initial value
Progress API: Can block renderer (fixes #46642)
reduce debounce
english
fixes #21146
Progress API: Can't create multiple progress notifications with the same title (fixes #46637)
Progress API: Can't report 0 progress (fixes #46636)
need a break
breakopint widget fix intelisense
[html] fix compile error with participant
[css] update service
Init folding provider on client ready
debug issues to weinand
[json] update service
[html] update service
Add missing null check (fixes #46617)
Added key binding to  "Disable Breakpoint"
Remove unused variables
Send publisherInfo as new properties for extensions from gallery. GDPR
Skip emmet inside comments in stylesheets when running the command
Skip emmet inside comments in stylesheets #46434
Stylesheet partial parse (#46376)
Search for similar issues for extensions in issue reporter
dynamic height review widget
Add "toggle search view position" command
Allow disabling JS/TS suggestion actions
Use _ prefix for private
Case insensitive filesystems...  (#45589)
Use latest emmet helper to fix #46305
onDidSelectItem (#45589)
Progress bar theme color (#45589)
Progress bar (#45589)
Subscribe to cancellation token (#45589)
Not implementing onDidSelectItem for now. (#45589)
Transfer focus to list on arrow-down (#45589)
Move badge inside filter field (#45589)
matchOnDescription, matchOnDetail, ignoreFocusLost options (#45589)
Count badge (#45589)
Toggle only visible items (#45589)
API update (#45589)
Select All checkbox
Documentation (#45589)
Max height
Cmd+Space hint (#45589)
Show only one picker at a time (#45589)
Label, description, detail (#45589)
Single OK button right of filter text (#45589)
Keyboard access (#45589)
Input box and checkbox list (#45589)
Multi-select list (#45589)
path changed to fsPath
breakpoint widget: make sure to dispose completion item provider
Turn syntax based folding on by default for TS 2.8
Avoid re-parsing for emmet completions when triggered for incomplete completions
breakpoint widget: do not propose for log messages outside of {} and for hit count
breakpoint widget: bring back placeholder text as decorations
Avoid string allocation
breakpoint widget: hook up completion items
Prefer length comparison
add AllowInsecureLocalContent option to MarkdownPreviewSecurityLevel (#46473)
merge master
explorerDecorationProvider also react on added roots
Add support for filing an issue on an extension within the issue reporter, #45673
PR feedback
Add context menu to search tree
Update windows-process-tree version to 0.2.0
Reduce tokenization of viewport if they are already correct.
explorer model: when merging ExplorerItems respect isSymbolicLink
composite bar: fix order when removing composite
avoid isEqualOrParent for tildify method
Debug: log whole json object in case of parse error
enable background updates for stable
faster linux build
compoiste bar: removing a composite make sure to deactive it proper
Task query and execution polish
node-debug@1.22.9
always hide F8 when going to a related marker, #10271
Polish command tracking, fix mac keybinding
linux build
linux builds
enable 32 bits
fix #46442
build
build on our own machines
Avoid CSS variables for IE11 (#46029)
explorer model: do not use paths.isEqual
fix tests
[css] update service
[docker] fix OSSReadme
Revert "fix: change default keybinding of cursorColumnSelectUp to ctrl+shift+up on Windows"
pass on resolved range when calling rename, #7340
simplified resolve rename location proposal, #7340
debug: fix breakpoint focus action
Configuraiton resolving evaluate missing envs to an empty string
update log point message
debug: introduce breakpoint editor
fix new window not opening on correct display
Depend on vscode-languageserver-protocol-foldingprovider
Updated initial version of css folding
:lipstick:
fix(feedback): use the Button widget in Feedback form (#46503)
Skip logging publisher info unless it is coming from the gallery
fixed terminal dodn't open when window has no folders, closes #46139
bump node2
refactoring
Remove old-duplicates option-disabled class (#46477)
use vscode-languageserver-protocol-foldingprovider
Revert "bump electron to 1.7.13"
Update js/ts grammar
Update js/ts grammars
Change to prevent fakeFireContinued when initiating time-travel
Issue reporter: load the loader as a file instead of as a script to improve perf, fixes #46335
Don't request ts/js quickfixes for possibly stale diagnostic locations
Use namespace import
Show git under Features not Basics
Updgrade marked version
Rename typescript to typescript-language-features
Re-render suggestion item when resolved Microsoft/monaco-editor#781
Ensure ELECTRON_NO_ASAR doesn't make it into terminal process
Enable search of local Typescript Language Service Plugins (fix #45856) (#45858)
Reset suggestWidget height when hidden
Use C: for external Windows terminal when not on Windows
use ellipsis for hint, fix hc-hint-rendering, #44141
add related diagnostics to hover, #10271
Allow webview contents to fetch vscode-resource: scheme uris
Don't save theme and model service on WalkThroughPart
Mark that getViewStateFor can return undefined
let -> const
Mark most IEditorOptions readonly
Relaunch the application to accept jsflags.
better notification for large file reload
Read token state if a line is already correctly tokenized.
Tokenize viewport with some context and ensure they are fast enough.
if the token warmup tokenizes part of the viewport, let it finish.
tokenize viewport before we render.
Keep a link to newly created terminal until disposed
Run gulp builds in parallel
Reset split view after resizing views
node-debug@1.22.8
[css] polish
adress comments and some renames
[html] unnecessary import
[html] move path completion inside html mode
ExplorerItem: make children private and address comments
add logMessage to Breakpoints API; fixes #45643
pass breakpoint id properly; fixes #46325
fixes #46240
debug: move idFromAdapter and verified to IBaseBreakpoint
stubs are bad for compile time errors
refactoring
bump electron to 1.7.13
Use promises instead of callbacks for tests, for #45209
Hide tab fade until text overflows with sizing-shrink and close-button-left/off (fix #45728) (#45815)
Bump node2
Rename logPoint action to match other breakpoint actions
Bring back sections, rename headers, search shouldnt have sections #45921
Revert "Skip sections, keep grouping in built-in view #45921"
Auto reconnect for attaching LS
Add test for empty path
Test for not completing remote paths
Remove unused function and do not export by default
Refactor html path completion test
Refactor path completion
Implement command tracking
Update vscode-xterm.d.ts
Update css to follow xterm
move getEditorOptions to simpleDebugEditor
warn about memoize
:lipstick:
Leverage notification progress support for progress API (#45958)
url handlers
test-integration fix for windows
Focus terminal after toggling via `workbench.action.terminal.toggleTerminal`
explorer: ExplorerItem use map for children
JSON Language Server 1.0.1
[json] readme fixes
Group extension host process fields
vscode-xterm@3.3.0-beta8
JSON Language Server 1.0.0
[json] publish json language server in npm
[json] fix OSSREADME
explorer: FileStat -> ExplorerItem
Avoid registering api commands on the renderer
#45872 Update message
first cut of rendering diagnostics severity hint, #44141
debug: if last active workspace has no launch configurations try to find another one
better timeout-error messages for format on save and onWillSave-event, #45421
no need to do any checks if there are no children
explorer: use binary search to FileStat.find
more logging for #46199
#45872 Prompt to update language
fixes #45971
Do not deprecate registerTreeDataProvider
Skip sections, keep grouping in built-in view #45921
Enable hiding of built-in extensions sections
Add test to check for 46075: NOT WORKING
Add tokenType for css to trigger path completion too. #46145
Add button to reload window with increase memory limit (#46220)
Make sure the two css extensions have unique ids
Override tokenTypes in html for #46145
Update build scripts for css
Rename webview.show to webview.reveal
Use standard title entry for ts commands
Don't set resource on webviews
Keep search action buttons on right side, after moving count badge to left #45063
Standardize 'replace' keyboard shortcut for all match types, and include keyboard shortcut in label. #45063
Move search result count badge to left - #45063
[css] split extension (for #45900)
Use viewType instead of uri for webviews
Use `activePreview` when running markdown commands
Move webview to use onDidChangeViewState event
Update deps, remove applyEdits
Implements #45664: Add API to query and execute tasks
Bump node-debug to fix #46215
avoid global find clipboard on macos for large files.
Use offical TS API for folding
Ts suggest diagnostics (#45433)
Use shift-alt-o for organize imports
fix #46174
refactor url service
debug: ReplInputEditor -> SimpleDebugEditor
Remove not needed `userExtensionsHome`
move breakpointWidget to electronBrowser
debug: "Add Log Point..." in command service
debug: add some breakpoint actions inline
debug: rename EditConditionalBreakpointAction to EditBreakpointAction
Reduce extension host IInitData
:lipstick:
 CancellationTokenSource.dispose() should not cancel() (#46102)
honor RenameContext#message, #7340
textModel: add isForSimpleWidget property so these model are not synchronized
Remove resize terminal pane keybinding on Windows
[folding] improve api doc
include json/css in integration tests
fix npm scripts after extension rename
type suggestSelection
[folding] remove experimental flag for json/html
Keep constants as static props
wire up progress/cancellation, #45000
tweak query options -> isRegExp, #45000
honor that the internal search model is 0-offset based, #45000
remote - move out search provider, #45000
Implement createTreeView API
API - Expose TreeView in API
#10271 Sync with F8 representation
repl: be a simle editor widget
suggest: also work for simple editor widgets
remote - also remove addWorkspaceFolder from protocol
remove FileSystemProvider#root
editor commands: start using 'textInputFocus' Also rename variable textFocus to editorTextFocus
use colon as separator, not &ndash; #10271
navigatable related diagnostics in F8, #10271
#10271 Show related informations as list
simple editor: adress comments
introduce 'inputFocus' context key
fixes #45966
introduce simple widget editor. Use a command delegate so extensions do not intercept commands
fixes #46163
fixes #46144
null check for markers
#10271 Show diagnostics with children in problems panel
Parse resource uri of related information data
Adapt message for users who have already opted out
Organize imports for js and ts (#45237)
Pick up TS 2.8 insiders
Rename markdown to markdown-language-features
cmd+d can leverage chunk based searching.
For large files, we throttle research events.
Use decoration tree to search when not exceeding limit.
Use `isInString` for highlights
locations cannot be null
asUrl cannot return null
Extract getUri
Remove old commented out compile on save TS api
Mark client property readonly
Add location converter
:lipstick:
Extract toWorkspaceEdit
Remove duplicate code edit converter
Sections for built in extensions view #45921
Use consistent name for workspaceedit converters
Move workspace edits into type converters
Move remaining basic type converters into namespaces
Start moving typeConverters into namespaces
Rename Convert to typeConverters
Use additionalTextEdits for edits in the current file
findMatchesInNode should take startColumn into account.
Make find widget opt-in for webviews
Update css server deps
Mark import paths as `other` type instead of string
Simplify pendingDiagnostics sort
node-debug@1.22.6 & node-debug2@1.22.3
Convert time variables to localized versions
Move log level API to env
#44141 Ignore hints in Problems panel
:lipstick:
Use stricter types for terminal env setting
Pointer capture when moving sashes or scrollbars (fixes #21675)
light theme - assign a lighter input placeholder color
Notification expand/collapse arrow should be reversed (fixes #45850)
fix #46104
fixes #45828
more renames, #7340
Tests and handling of quotes
path completion for css. fix #45235
Honour "preserveFocusHint" attribute of StoppedEvent
explorer: root folders must be directories
DAP: add preserveFocusHint to StoppedEvent
Revert "debt - dispose one CancellationTokenSource"
:liptstick:
show actions in the right editor only
#45197 User Capital Casing
debt - dispose one CancellationTokenSource
Prepare for node >= v8.0.0
Editor release
Use `require` instead of `self.require`
Remove unusued env
Serialize vscode.DocumentSelector
Small tweaks
Can't click buttons on new notifications with a touch screen (fixes #46055)
use empty selection when navigating/showing results, #44414
explorer: no op when 0 roots dragged
Use window with focus
Status bar spinner is white in light themes and hard to see (#46083)
Restore focus on message field when git include multiple projects.
add custom color for files added to index
#21423 | Add underline styling to debug console
Workaround smooth scroll issues on Windows (#46063)
node-debug@1.22.5
postinstall: remove hardcoded extension list
Add more time-based variables for snippets
Removing unnecessary lines in .travis.yml
Add getWorker to MonacoEnvironment
info messages better reflect action
update grammars
46027 - fix build
[html] split extension (for #45900)
fixes leading slash
displayCurrentPath() didn't make use of param projectFolderName
[json] split json extension (for #45900)
adds validation check: file must always be a leaf
Refactor
removes unused param in TriggerRenameFileAction.validateFileName()
refactoring of alreadyExists()
Update simpleWorker.ts
re #45770. Test case for chunk based search.
Support quickSuggestions in JSDoc Types (#46001)
When folding markdown headers, leave single new line before next header
Move logDirectory to ExtensionContext (#45922)
configurationResolverService: do not greedly match
notifications - do not dispose actions unless created within
[html] improve incomplete foldings (for #44712)
Mostly fix multi-line links
proposed logMessage API; fixes #45643
fix #45990
Revert "explorer: introduce explorer.open command to be able to open multiple files via keyboard"
Telemetry opt-out notice
remote - use posix.dirname of uri.path
keep focus really stable... #44414
keep focused element stable, #44414
debug: bring back toString it is used for copyAll action
[html] folding for embedded JavaScript
[json] update sefeRunner
[html] validate: check if version is still current
make sure to reveal the current symbol in the references tree, #44414
Cleaner API to query tasks
explorer: introduce explorer.open command to be able to open multiple files via keyboard
[html] enable strict, cancel support
[html] use TextDocument.applyEdit
[html] test fold regions
[html] fold multi line comments
[html] folding for self-closing tags
remote - use posix-path-logic for path-math in URIs
debug: 'Add Log Point...' context menu action
debug: always remove the selected expression from the view model when wrapping up rename box
fix #45861
update to electron 1.7.12 (#45953)
Move fix into getWordAtPosition
Update js/ts grmmar
Pulled two lines closer
Bump node-debug2 - fixes #45657
node-debug@1.22.4
debug: add log point support
Revert "Revert "Avoid using import x = require('...')""
First cut of #45664: Add API to query and execute tasks
added the key bindings for first and last selection in suggestions.
add goto next/prev reference command, #44414
debug: introduce IBaseBreakpoint
select box: do not set height, make sure it is still centered
explorer: do not show error for roots since we already use an explorer decoration to notify user
Add all lower case value
try a different variant of getDiagnostics... #30075
debug: get into initilizing state immediatly
actions: trigger actions wait for running state of workbench before checking for enablement
More fixes to monaco.d.ts
New editor release
Slight changes to the shape of monaco.d.ts
Release editor
Enable folding in standalone editor
Bump editor version
Update .d.ts shape
Remove edcore.main
Publish standalone editor
Separate API creation from importing editor contribs
Align standalone editor CompletionItem
Better support for ESM workers
Ship editor in ESM format
Simplify marked usage
Simplify WinJS usage
Make modules ES6 friendly
Add 1.21.1 to calendar
editorOverviewRuler colors should use transparency. For Microsoft/vscode#45710
add DiagnosticRelatedInformation, #10271
fix build error
composite bar: when removing composite remove it fully
don't leak vs/nls into workers, #45839
fix #45831
Revert "Avoid using import x = require('...')"
Remove minSize and maxSize as they are unusde
Remove builder border methods
Mark fields readonly
Extract duplicate contribution loading logic
Use _ prefix for private
Mark fields readonly
Auto save "onFocusChange" and saving as admin is hard (fixes #45827)
show warning when a user enters only whitespaces in the commit message box
Bump node2, fixes #44785
node-debug@1.22.3
Don't try parsing `undefined` as json
Improve migrating from split include/exclude inputs to the new merged one
[html] format
[html] limit ranges
Avoid using import x = require('...')
Make Event a named export
Disallow the non-generic version of Registry.as
Mark private emitters as readonly
Mark public event properties readonly
More property readonly marking
Clean up
Switch to use `vscode-resource` scheme in webviews
explorer: better message for root move
debug: polish inline values scheduler work
use #region in proposed API
Remove 'zh-cn', 'zh-tw' from systemLanguages and use another way to fix #30450
fix npe
first steps in rendering related diagnostic information, #10271
Use scheduler
macOS: cannot quit with 0 windows open from dock anymore (fixes #45776)
[html] update dependencies, extract folding, folding tests
better fix for #45561
fixes #45763
let F8 only visit errors and warnings, #44141
only show errors and warnings in explorer, #44141
update gulp-atom-electron
fix indentation
allow to query for certain severities, #44141
add MarkerSeverity, #44141
make sure yml extesion is default for yaml files
back to simple getDiagnostics-function, #30075
#43813 :lipstick:
zenMode: on shutdown make sure to get out of zenmode
increase timeout for #45745
debug: variables controller react on mouse up to allow double click to set value
adding `IRelatedInformation` to the marker model, #260
upload sourcemaps
update DAP
fix upload vscode configuration
add DiagnosticChangeEvent #30075
add tests for DiagnosticsCollection events, #30075
rename build files
fix linux 32
phase conditions
use matrixes
fix variables
use matrixes
build: remove verbose flag
Allow to open notifications center if there are no notifications (fixes #44509)
Polish #43037
Update file extensions for the ini language
Adds workspace config for submodules detection limit
Adding Live Preview for Wrapping Individual Lines with Abbreviation (#45453)
Adds source filtering logic directly from keybindingItems
publisherDisplayName is PublicPersonalData
GDPR catalog doesnt uses <NUMBER> in property names
Search text in settings is customer content
exceptionBreakpoints do not contain any customer data
PII is removed from data filename, so we can keep it as non CustomerContent
Avoid line feed replacement if possible in getValueInRange.
Find model tests on Piece Tree.
re #45690. Find in chunks.
Remove any cast since we now have proper types for this
Update grammars
New webviews should allow svgs by default
Update js/ts grammars
format vscode.proposed.d.ts
Properly set electron version in env scripts
The two lines were too close at default editor scale due to sub-pixel rendering. Revert back to longer distance for the sake of small size.
One more round of tweaking...
GDPR updates
Update GDPR classification
More tweaks for #45406
Adding vscode.executeTypeDefinitionProvider command
Extract duplicated mapping code
names
one product build definition
revert appveyor change
re #45564. Test cases are always good.
[folding] add maxRanges to folding provider request
proposed event for when diagnostics change, #30075
dont be stupid isidor
remove appveyor references
layout: use default sizes for sidebar and panel when no state saved via storage service
dont fail when there are no errors/warnings, #14783
some early sketches of a read api  #30075
fixed typo (Prefered -> Preferred)
allow centered layout in horizontal mode
Schema adoption.
missing linux ia32 dep
linux 32
#45651 Rename reinstall to reinstallFromGallery
get electron for tests
debug: fix open config action on startup
explorer: do not overwrite name on root drop
simplify multi root DnD
Keep scroll position stable when closing a tab in the tab well (fixes #45527)
refactored according to comments
align names, add RenameContext-type #7340
Pass "Visual Studio Code" as a new attribute "clientName" in the "initialize" request
add 'clientName' to 'initialize' request
Updated task documentation
debug: fix type in context key
zenMode: properly get in and out of center mode
enable tests
fix arch
fix bad variable
build.yml
disable horizontal scrolling in quick open
open editors drop: increameant index of each drop open editor so their order does not get reversed
trace linux build
emmet.test: add missing semicolons
[folding] hook up cancellation
'instanceof' highlighting (for #45405)
[json] folding tests
[json] update dependencies
[css] fix invalid import in emmet.test
[json] improve folding stability with comments
debug: use history service to get last active root to simplify code
Remove obsolete code as html emmet completions are now coming from html extension
Add March timeline
main - stackTraceLimit = 100
Validate position for emmet using best guess fixes #45634
Remove obsolete code as html emmet completions are now coming from html extension
revert some things for #45527 that do not work anymore
node-debug@1.22.2
Refactor methods out to handle -
Use yarn rather than gulp for building tests
progress - switch to translate2d for better perf of animation
Adjusted breakpoint icon size to fit default editor line height beter; Adjusted debug green arrow icon size to match stop icon.
debug: better selection of launch
pkg config
fix #42763
:lipstick:
first cut of #14783
save file as: give priority to active editor if triggered from menu
pkg config
workbench.tree.horizontalScrolling setting
explorer decorations should update element's width
null guard
pkg config
fix pkg config path
Make problem counters consistent, fixes #45592
32 bit deps
commands: ignore list if the command is triggered from the main menu
Making test pass.
wip: tree user-independent horizontal scrolling
prep marker model for circle, #14783
fix #45561
explorer: give priority to explorer view when focusing
support shit for alternative commands on linux also
fixes #45554
debug: fix breakpoint-hint rules
compositeBarActions: null guard for updating badge when it is not yet constructed
debt - share CSS styles for workbench lists and trees
Revert "Revert "Bump ripgrep""
Git merge / commit -a / focus back the integrated terminal
Add multicursor support to "Select to Bracket"
Standardize transpose logic. Add basic support for transposing multi-byte characters.
files - prevent move/copy when target is child of source
fix #45430
update classification for common properties
update classification
update classification
Emmet: when wrapping, skip lines with no characters selected (#45224)
For #44414, only apply the search F4 shortcut when search results are available
classify properties as measurement
Update GDPR annotations
breakpoints: delete breakpoints and enable / disable via keyboard
32bit linux
build
require to be vertical in order to center
linux build
linux ia32
Use latest emmet helper fix for #45032
Emmet in Interactive Playground (#45434)
fix hygiene
Separate xterm.js typing changes different block
Add / for folder path completion in html. fix #44815
fix #44813
clean up tests
Support multi-line links
Don't also show popup when we open release notes
Made restart icon slightly smaller
Use _ prefix for private
reader onerror is always supplied
Don't have DiagnosticsManager dependecy on client
Use await
Extract SyncedBuffe mapping to own class
enable multi root DnD
merge with upstream
Added breakpoint-hint.svg back as a separate file; fixed drag-area position; fixed start button size; fixed breakpoint icon container size in viewlet.
fix yaml
unified product build
wip: explorer horizontal scrolling
better shared process disposal
Only trim last non-wrapped line when sending line data to tasks
fix issue with quit requested being a function
publish linux build
Move split terminal ctx menu below new terminal
more tweaks to lifecycle service
main - introduce and adopt new onQuit() event
:lipstick:
simplify root drop update folders arguments
debug: bring back breakpooints-activate-inverse
debug fancy new icons
centered mode: allow when horizontal layout
debug: only remove process on error if the disconnect is not being called
debt - codewindow => icodewindow
debug: update glyphMarginClassName for breakpoints
fix #45157
fixes #43161
remove bad timeout
bump up unit test timeout
update inno_updater
fix #42878
fix #29210
Bump node-debug2
add window.openWithoutArgumentsInNewWindow (#45322)
Linux: ENOSPC error message tweak
Adding Emmet preference for changing fuzzySearchMinScore (#45240)
Use uris instead of string paths in more locations
Moving syntax and semantic event null checks into dispatcher
Make logging methods private
Remove ITypeScriptServiceClientHost
Use events to tell host about syntax diagnostics
Extract duplicated disposeall code
Use memorize for channel
For let -> For const
Build with TS 2.7 (#45348)
Move Feature Request before Performance Issue, fixes #45334
Vertically align closed/open icons in issue reporter, fixes #44660
Use memoize for documentSelector
Remove return statement snippets for ts
Revert whitespace formatting changes from 387f8153b54f71353ed6c05ac800c0e679ba66dd
For #43813 - Clean up Platform import
For #43813 - add null check for error
For #43813 - retry rename when it fails with EPERM on windows, for 5s
Properly wait for unzipped file handle to close - #43813
vscode-xterm@3.3.0-beta4
layout: always make sure the sidebar with and panels have more than minimum values
typo
debug: do not run prelaunch and postdebug tasks for automtic restarts
support ignore-case-flag for the regexp context key, #42605
listService: forget about disposed lists
bump up unit test timeout
update inno_updater
linux build: skip tests
fail release script on erro
linux build
fix #42878
fix #29210
Bump node-debug2
add window.openWithoutArgumentsInNewWindow (#45322)
Linux: ENOSPC error message tweak
Adding Emmet preference for changing fuzzySearchMinScore (#45240)
Use uris instead of string paths in more locations
Moving syntax and semantic event null checks into dispatcher
Make logging methods private
Remove ITypeScriptServiceClientHost
Use events to tell host about syntax diagnostics
Extract duplicated disposeall code
Use memorize for channel
For let -> For const
Build with TS 2.7 (#45348)
Move Feature Request before Performance Issue, fixes #45334
Vertically align closed/open icons in issue reporter, fixes #44660
Use memoize for documentSelector
Remove return statement snippets for ts
Revert whitespace formatting changes from 387f8153b54f71353ed6c05ac800c0e679ba66dd
Hide ahead push arrow if remote push URL is no_push
Consolidate changes from previous commits
For #43813 - Clean up Platform import
For #43813 - add null check for error
For #43813 - retry rename when it fails with EPERM on windows, for 5s
Properly wait for unzipped file handle to close - #43813
Removed unused dark theme icon css; tweaked drag-area css to keep icon size & position; tweaked start-debug container size for the responsive svg icon; added breakpoints-active-inverse.svg file that was missing.
vscode-xterm@3.3.0-beta4
increase mocha timeout
layout: always make sure the sidebar with and panels have more than minimum values
fix windows build
increase test timeout
linux publish deb and rpm
increase test timeout
typo
debug: do not run prelaunch and postdebug tasks for automtic restarts
win32 publish
linux build
slow tests
support ignore-case-flag for the regexp context key, #42605
listService: forget about disposed lists
fix netrc
null guards for checking if list has focus
generic linux build
cleanup windows build
test variables
composite bar: respect order of composites when adding
windows build
Win/Linux: allow window.openFilesInNewWindow:default (for #48)
debug win build
fix linux tests
debug: postDebugTask
windows build
linux product build
lightweight reporter
Revert "Debug icons consistency and housekeeping work"
cleanup darwin build
notifications - remove toasts from DOM that are not visible
move markers panel into electron-browser
settings wording
vscode-xterm@3.3.0-beta3
fix build
fix #45195
fix directory jumping
:lipstick:
tests - favour native promise over winjs
remove tests from build
fix build
fix build
improve pull/push specificity
return promises for mocha tree model tests
remove debug
build
build
pass variables
test darwin build
tests - favour promise over done callback (for #45209)
yaml
yaml
fix syntax
test secret variables
test cases fix
removed un-related changes + moved @source check to fetchKeyBindings method
fixes tests
Use the same gear icon as in debug area.
The red dot path was accidentally turned off by my icon script. Turning it on.
Will use light theme icon file and CSS style
Debug icons consistency pass and housekeeping.
Revert "Debug icon consistensy pass"
Bail out from launch for unresolvable variables
node-debug@1.22.1
update calendar
attempt to fix #45025
fix yaml
publish tests in tfs
Use fork of nsfw with linux symlink fix
nope this don't work
add integration
run hygiene in windows too
i don't even
what the
debt - fix dialog button massaging
hmmm
Force a scroll bar refresh when the terminal is visible
windows build
win tfs
remove comment
build
fix windows build
skip powershell
add correct bp location; fixes #44433
builds
fixes #44715
:lipstick:
fix continuous build
tfs: continuous build
windows yaml build
fixes #45181
fixes #45182
debt - use dialog service over bare windows service
jsdoc :lipstick:
builds
debt - remove choice service in favour of dialog service
back to dot tests
improve test reports
debt - add new prompt method to notification service
fix integration tests
debt - add new method to dialog service to show dialogs
update build definitions
fix bad imports
fix tests
endl monaco.d.ts
debt - confirmation service => dialog service
fix #44957
debt - merge confirm methods into one
Remove unused import
Emmet - Wrap with abbreviation with live preview (#45092)
Avoid Ememt test failures in updating workspace config
Move html into electron browser
Rename file
Enable alwaysStrict for src
Annotating a few properties that can be undefined
Move find widget dispose to widget itself
Don't take parent in webview ctor
Use more specific name for renderOcticons
Marking more properties readonly
Make onKeyDown optional
Remove noanimation on find widget since this does not seem to be used anywhere
Mark fields private
Remove html preview editor css file
Move some command ids into command objects
Make webview showFind a command instead of an action
Case insensitive comment string matching
formatting is pain
Debug icon consistensy pass
#43813 Do not consider user extensions starting with `.`
#43813 Extract to temp folder and rename
Improve Call Stack performance with many threads, fixes #44248
fix line endings in monaco.d.ts
debug: better updating of debug toolbar
debug: more precise place to send activation event 'onDebugInitialConfigurations'
stop using any
actually use view model sort, #14783
fix tests
fix tsfmt
Include user input and NFD glob on Mac (fixes #43691)
#39576 Use proxy only for extension calls
fix hygiene
Avoid use of "*" selector in CSS (fixes #45060)
remove console log from tests
fix hygiene
fix line endings
#45122 - Use ILocalExtension as an input in IExtensionEnablementService
fix #45132
The scrollbar transparency fix
Top shadow fix
css debt - remove more expensive rules or make them conditional
fix #45124
fix memory leak in dirty diff decorator
dispose dirty diff controller disposables
move sorting and filter-state into marker view model #14783
Don't check parent folders for settings / settings folder (fixes #45121)
fix #44899
Slugify document links in markdown files
Moving more fields out of BaseWebviewEditor
Move scroll storage into html preview
Remove extra webview editor class from inheritance hierarchy
Move loadReleaseNotes into ReleaseNotesManager
Switch release notes to use webview editor
Remove create on webview input
Prevent layout on terminals that are in the background
Move webview editor and input to own part
debug repl elements: no need for toString method
Check-in preview scripts
panelViewlet: only update title area if no longer a singleView or becoming a singleView
Use lodash throttle
Cache settings
Move active line marker to own file
Start moving some scroll sync logic to own file
Extract onceDocumentLoaded to function
Move style loading monitor to class
Enable strict mode
Move strings to own file
make csp alerter a class
Move common command logic to own file
Type settings
Extract duplicate settings logic to own file
Move over csp and loading to use webpack
Create basic webpack for markdown preview
Proper fix for markdown font csp
Alt click in terminal only move horizontally in normal buffer
Add run-agent script for snap package
Only reset terminal layout when orientation changes
Use copy of config object to avoid making changes to the readonly objects
fixes #45069
Add fix for EACCES socket error
Ignore copyright header in electron-launch
Execution oncancel callback
remove machine id from crash reporting
Remove old code from when suggest docs was shown inline Microsoft/monaco-editor#553 (#44951)
fix splitview tests
fixes #44857
remove unused code, make some things readonly, #14783
[json] update server & services
Import and type windows-process-tree
Rename windows-mutex to .d.ts
exclude extensions from npm task detection
css debt - cleanup some ugly rules
Task part of #44745.
css debt - remove custom select-box from dom once hidden
Add link to the task documention.
split gotoError.ts into widget and commands/control, preps #14783
fix tests
fix #44980
fix #44993
removed space - marketplace is only one word
debt - fix bad relative imports
ui debt - align status bar flyovers closer to each other
fix line endings
use git attributes
bad casing
remove line endings check by hygiene
when split view panel is added update title area only if it is explorer
simplify when expression for open to side
debug status: respect debugging foreground color for icon
remove console.log statments
center layout: hide sahses initialy until center layout gets activated
darwin: build
Allow font extension resources
bump to 1.22.0
fix #45026
files - tweak delete confirmation on error
reclassify commitHash
reclassification of a couple of common properties
move huge file params to user config for Microsoft/vscode#44986
Remove flatpak task
Using ContextKeyExpr.and for consistency
Enabled 'Open to the side' command only for files
Use flexbox for issue reporter layout, fixes #44516
Add markdown header based folding (#44795)
Handle special characters in markdown slugify (#44788)
GDPR classification for json language server
GDPR classification for html language server
Issue reporter replace default outline over links, fixes #44818
Put .split-view-view's into a container
enable CLI when invoked from WSL on modern (RS4) hosts
fixes tests
adding guards for split search query
removing un-related changes
Adds context menu actions for source filters -
fixes flickering info box #44934 #44690
linux build
linux build
Extends test for source: filter
Allow to filter keyBindings by 'Source'. Usage ->  'source: user'  or 'source: default'
Up/down in notifications should reset focus (fixes #44587)
fixes #44802
fix test, refine skeleton, #7340
more strict type conversion #7340
cleanup rename-flow, #7340
rename to RenameInformation, #7340
linux build
:lipstick:
save / revert actions only when autoSave off completely
use object instead of {}
debt - wire in dispose calls properly for workbench list/tree
debt - avoid extra attachListStyler in references widget
debt - clean up and polish some CSS rules in base
debt - markdown renderer is leaking click listeners
linux build
debug: no need for a root in order to execute the adapterExecutableCommand
fix #43523
debug: better undefined check for updating breakpoint properties
ignore and blame bad content provider events, #44398
breakpoint widget: close when breakpoint gets removed
linux build
debug issues to isidorn
linux build
linux buidl
linux build
linux build
linux build
linux build
linux: install libxkbfile-dev
linux yaml build
move build definition file
argh
yarn installer
fix yarninstaller reference
node-debug@1.21.8, node-debug2@1.21.2
bring back absolute cordinates for centered sash
commands be honest about arguments
Add link to documentation (#43978)
Update distro
breakpoints: do not use use exlcamation mark icon for unsupported function breakpoints
tab title - back to 5px shadow width
Added Mac specific text for link follow tooltip
Edit pass on built-in extension descriptions (#44875)
Add emmet icon as png #44626
Edit pass on built-in extension descriptions
Improve similar issue open/closed tag style, fixes #44659
#44838 Show restart message when failed during removing
Pull in updated md gramar
[folding] check for disposed folding model
Run OSS tool and update distro commit hash
There must always be at least one visible line (#44805)
Keep view model in sync with model (#44805)
update diff.tmbundle license
fix #44842
fixes #42229
node-debug@1.21.6
smoke - need to wait longer for window reload
Revert to 1.20
fix #44301
one more for #44487
Add test for #22717
fix #44812
search.location: mention that it is a preview
Add tests
fixes #7717
fixes #44714
update description for vscode:uninstall
Add monaco.d.ts
fix #44784
function breakpoint
Use vscode.X for basic extensions and vscode.X-language-features for lang features extensions
resolves merge conflicts
fixes #44513
Revert "Update icon for Emmet"
fix breakpoint sizes
Normalize all drive letters going out from vscode to debug adapters so we are consistent with our resolving
fixes #44487
fixes #44489
fixes #44309
Show builtin themes in the end #44626
logo -> icon
Add icon
Use standard name
Split markdown extension into markdown and markdown-basics
Add logo
icon and cosmetics for php extension
add icon for seti file theme extension
Cleaning up class and method names
Move previewConfig to own file
Enable command uris in the markdown preview
Formatting
Move isMarkdownFile to own file
Move topmost line monitor to own file
Move preview to own file
Batch visible line updates for markdown preview
Remove extra calls to isMarkdownFile
Only show toggleLock when in markdown preview
Use native promise
Clean up scrolling logic to be smoother
Remove duplicate getBoundingClientRect call
Extract createNewPreview and make isScrolling private
Make sure we clean up disposed webview
Route reveal line through markdown preview instead of command
Wrap markdown preview command messages
Clean up preview update logic
Issue reporter closed/open icons are not vertically aligned, fixes #44660
Dont recommend langpacks for core langs #44012
Make open webview tools command name clearer
Restore markEditorSelection
Document getVisibleLine
Improve terminal.border wording
Add deprecationMessage for scrollPreviewWithEditorSelection
Mark more properties as readonly
Make sure toggleLock works from the command palette
Use clearer name
List public method before private ones
Mark properties readonly
Split previewManager out into own file
Use "markdown.preview.*" name for commands that are preview specific
Improve how layout is disabled/share code
Prevent terminal layout when panel position changes
Use more standard name for markdown preview context key
Add command to toggle markdown preview locking
Rename markdown pinned preview to locked preview
Update icon for Emmet
Change process list formatting to raw instead of table, fixes ##44733
Issue Reporter: Copy data to clipboard when url exceeds max length, #44733
Disable termianl layout when split panes are being added
Move the split terminal button to the left of the bin
[less] update service (fixes #42271)
node-debug@1.27.0
upgrade DAP to 1.27.0
Increase min terminal width to 120
centered layout
Change scope of exclude setting to resource
Make moving focus between panes circular
Wrong placeholder in the .desktop file
'async' breaks onCancel chain (fixes #44740)
update inno-updater
fixes #44541
:lipstick: #44725
css/json/html: improve icon colors
better error message when trying to open huge files #43861
open editors: do not react to group layout changes if groups are not visible
fix #42530
better launch support in user settings
open in terminal: open even if multiple items with same paretn select. Respect primary selection
CSS/JSON/HTML icons. For #44626
fix #44488
use z_commands as group id
The alternative key on all platforms is alt. On windows we also support shift as an alternative key
center mode: do not center preferences editor
externalize strings
use setImmediate instead of timeout, fixes #43232
cancel quick fix compute when line disappears, fixes #43662
better fix for #44588
debug repl: collapseAll focus back into input
fixes #42494
debug repl: change back to click behaviour on mouse up
fix #43892
fix #44514
debug: errors use modal dialogs
bring back columnbreakpoint command shortcut
update API docs on isCloseAffordance
Don't try opening virtual markdown preview on showSource
Delete webview input on dispose
Add title to webviewCreate
console - restore findFirstFrame
fix #44636
Search built in extension by display name #44626
Update md,php display names/descriptions #44626
Use same icon for all builtin themes #44626
Remove and other language features from description of basic builtin extensions #44626
Json should be features not basics
Update displayName, description for Go extension  #43978 #44626
Update ReadMe for Emmet
Version 1.0 for builtin extensions #43978 #44626
Update displayName, description for Emmet #43978
Use dependencies in package.json to determine react-native workspace
Move similar issue container over
Issue reporter: icon for duplicate issues are not aligned, fixes #44659
Issue Reporter: align input fields, #44518
re ##42260. cache for last visited line content.
re #42260. use getValueInRange in SplitLine.
Revert "ignore diagnostic-channel-publishers in console.log" to fix vscode-extension-telemetry/issues/12 the right way This reverts commit a9b44c2065a3ba151638573f610df44d9bd64baa.
Use xterm's to calc terminal char dimensions if available
Bump markdown exension version
Bump TS extension version
Bump TS-basics extension version
change classification of tsserver.exitWithCode
handle fs exceptions gracefully. fix #44506
fix #44511
notifications - do not hide automatically if focus is somewhere within
Show default cursor when alt is held in terminal
fixes #43234
notifications - let buttons shrink when there are many (for #44538)
Show rotated terminal split icon when panel is on right
Align non-bottom terminals to the top when panel is vertical
fix #44588
fixes #44555
fix #44591
fallback to stat if lstat fails
remove code for no-unused-variable check
better fix for #44543
Bump version number
Bump version (#43978)
fix #44583
fixes #43973
file stat: handle error case proper
fix #44581
fixes #44389
notifications - fix potential npe
list: do not focus new elements when selection range change
style according to wiki
update inno_updater
built-in extensions: version to 1.0.0 (for #43978)
built-in extensions: version to 1.0.0 (for #43978)
debug: rename "Copy Path" to "Copy as Expression"
fix #44561
Make workspace folder modification API stable (#44049)
mainThreadWebview: activeEditor can be null
#44504 Add comment
Update language-configuration.json
bump git version
fixes #44553
patch
fixes #44304
[powershell] update grammar (revert to 1.20)
hygiene: handle deletions
use git index in hygiene
notifications - increase purge delay
ignore diagnostic-channel-publishers in console.log
Disable creating a program for the tsling hygine
fix hygiene
fix tests
Remove `resourceColumn` logic for markdown previews
Avoid setting completion items as undefined
Annotate param with jsdoc type
Prevent out of range line acecss on markdown preview scrolling when user scrolls to end of document
Show built in actions in command pallette
Scroll sync markdown editor with markdown preview (#44454)
Update js/ts grammars
Prevent multiple markdown previews of the same type in the same editor group
correctly handle new value and range from html service
Avoid running pathCompletion in languages other than html
Make sure we dispose of markdown preview on webview dispose
Use `onDid*` type event names in webview
Rename webviewOptions.keepAlive to retainContextWhenHidden to make it more clear what this option does
Use fspath for reveal line to fix drive letter case differences
address ramya's feedback on html completion participants
Use latest emmet helper
Improve wording of see all running extensions
More fixing invalid JSON in typescript extension that breaks the build
I18n issue in the issue reporter, fixes #44203
typescript.experimental.syntaxFolding (#44444)
Adopt log service in terminal
Avoid view model inconsistency
Avoid NPE
compile errors in html
Add webview.show method to show a webview in a given group
Move onDidChangeTextEditorSelection into Markdown preview
Move onDidChangeTextDocument into MarkdownPreview
Hook up markdown preview onDispose
Make resource private in markdown preview
Move webview creation into MarkdownPreview
Add a way to 'pin' a markdown preview
Set markdown context based on scheme
vscode-html-languageservice: 2.0.17-next.3
rev version
fix vscode-languageserver version
Make terminal outer margins 20px
Add tests, update version
Webview API prototype 3 (#44307)
notifications :lipstick:
notifications - more commands
Add proper readme, images and localization to grunt, gulp and jake
delete diff extension
missing build compilation
fix #42991
add inno_updater OSSREADME.json
better instanceof check fixes #43877
notifications - avoid column-reverse for toasts
terminal: open split terminal with alt/ctrl click
Send text editor properties updates in a single event
TextEditor.document is readonly
Issue reporter mark down polish, fixes #44405
notifications - prevent layout on hidden toasts
#43978 Generate read me from extension name and description
breakpoint icons (include function breakpoint icons)
:lipstick: documentation
notifications - fix broken height compute
#43216 Set icon from theme when just theme icon is provided
debug launch: if there is only 1 folder take that one for resolving
Improve ThemeIcon documentation. For #43216
debt - avoid deprecated Buffer ctors
Warn only if grammar paths are different
improve git smoke test stability
debug user launch: resolve variables against a folder if you are in a folder vscode
Open Welcome page as a preview editor (fixes #32416)
Breakpoint tooltip polish
node-debug@1.21.4
Log use of file search (fixes #43605)
30000
:lipstick: #43216
Improve documentation  #43216
Disallow drag splitting of non-splittable editors (#44308)
follow up change from PR 44269 to preserve command IDs
Renaming Close Unmodified to Close Unsaved (#44269)
fix bad ctor
Name, description, icon for merge-conflict extension (#43978)
use links in messages
notifications - tweak some or convert to modal dialog
fix #44301
fix #34367
fix some list template leaks
move to textedit
make sure test is included
Attempt to fix hygiene error
Keep item expanded after rename
Update typings in model.ts to allow nulls
Add support to clean up language pack caches
Refactoring
better scope try catch in `provideCompletionItems`
Remove TS 2.6.1 import path workaround since this was fixed in TS 2.6.2+
Remove unused cast
Use vscode namespace instead of specific imports
Extract should trigger to new method
Pick up TS 2.7.2
Use latest version of telemetry module
Address feedback
Update tasks to 2.0
Split out ts syntax and grammar to ts basics
Move  package-json extension to npm extesion
ThemeIconCategory -> ThemeIcon
Correct import path
Add terminal.integrated.experimentalRestore
Upgrade xterm.js, use new webLinks addon to allow dbl/tpl click on link
fix tests
active line number adoption for dark themes from @usernamehw.
Always take the latest presentation hint from adapter
search: some more renames
tabs shrink: larger shadow
search: introduce SearchViewLocationUpdater workbench contribution
panel and viewlet enablement rename
searchViewlet.ts -> searchView.ts
[html] add include to server tsconfig
[folding] filter single line folds
notifications - polish some extension messages
viewlet, panel: remove notion of search.location, instead add api to enableViewlet enablePanel
Implement #30288
#30288 Refactor: Hold treeItems in the node
Upgrade to use web audio api in xterm.js
Move IExtensionService up to /workbench/ (fixes #44281)
Move extension points up to /workbench/ (#44281)
Move MenuService implementation up to /workbench/ (#44281)
Move CommandService implementation up to /workbench/ (#44281)
Simplify IExtensionService.onDidRegisterExtensions
Apply action css class using super ctor
Add split terminal action to terminal panel
Use winctrl+shift+5 on mac to split
Use cmd+\ to split terminal
update inno_updater
[html] syntax folding (disabled by default)
[json] setting for syntax folding (experimental)
[folding] fix in FoldingRange API
Revert "Bump ripgrep"
Revert "Bump vscode-ripgrep"
notifications - better message size compute
notifications - theme color tweaks
Add option to hide/show release notes on update #44020
Don't alias ThemeIconCategory
Allow extensions to specify custom tree view resoure type
fixes #43580
fixes #43528
debug: Adopt new "capabilities" event
notifications - add header to center
Treat full-width character as two visible columns.
fixes #42801
update yarn.lock
Unit Test, solve corner cases and use TextEdit
fixes #43051
improve git logging
show `show git output` command
[folding] fold comments / region
notifications - fix scroll preserve for real
notifications - preserve relative top
tweak some local storage telemetry data
notifications - keyboard navigation in buttons
Prompt to look for language pack extensions #44012
Reduce url length limit for issue reporter on Windows, ##44245
Remove unused .vscode folders
Remove unused file
Split package-json specific logic out of javascript extension
Prototype experimental folding API for TS/JS
node-debug@1.21.3
Mark properties readonly
Use async
Json format
Add real displayName and descriptions to the typescript extension
Add real displayname and description to the javascript extension
Provide real name and description for markdown extension
Update package.json
notifications - update icons
notifications - limit toasts by number
notifications - fix border shadow
notifications - add container to prevent bleeding
update DAP to 1.27.0-pre.0
remove console.log
more tweaks to animations
merge master
notifications - better animation
merge master
list: keep element order in DOM
fixes #44179
fixes #44177
compositeBar: addComposite, removeComposite
center title when using centered layout
Implement #42770
activitybar and panelPart react on changes of search.location
folding provider: first version
Refactor pattern construction and update tests
Locking version for language client and server
fix #44140
Installer toast notification doesn't show full message text (fixes #44151)
search and panel: support search.location setting
search: do not make assumptions that search view is in viewlet area
Symlinks are not the same on win, and we can not create them programitically without adming privileges
fixes #44188
proper casing
fixes #44181
Delayer: support Task that return a promise
notifications - fix status message
notifications - disable scrollbar in toasts
fix #43750
Update php grammar file
Revert "Set active line number color for default themes"
Remove unneeded disableExtensions arg
Pass disable extensions as part of CLI configuration
added separator
Support additional term alt sequences
use replace for TextEdit
move completion logic to lang service
Add localResourceRoots to webview options
Remove old way of changing an html preview's input options
Move useSameOriginForRoot into options
Remove tslint disabling
removed unused-variables and disabled tslint rule if needed
Enable linting for extensions and tests
Open website download page on Linux instead of downloading tarball
Explicitly mark public webview methods
Move theme change logic into webview itself
Call webview style directly instead of using onThemeChanged
Extract render functions
Move layout and focus ot base class
Mark injected services readonly
Mark injected services readonly
Remove unused events
Added reload webviews command
Add offical webview toggle dev tools action
Add null check for terminal focus when showing panel
notifications - proper center rooting
more logging
attempt to fix #43683
fixes #44001
reclassify machineid
merged master
editor centered layout: coupled sash move
sash: expose if alt key is pressend in ISashEvent
basic completion
notifications - fix action context issue
notifications - hide when secondary action is invoked in some cases
centered layout: unset margin-left, width, border-color when not centered
zenMode.centeredLayout -> zenMode.centerLayout
notifications - do not add a "close" action for extensions
Readme tweak
added config to center the layout when turning on the zen mode
Add zsh.exe
notifications - source should overflow with ellipsis
fix compile
notifications - status item polish
do not center if editor is a diff editor
centered layout add color to vertical sashes
notifications - fix bad layout in toasts
polish
use png icon for git
panel -> view
notifications - add some API docs
notifications - same icons as problems view
notifications - dispose markdown callbacks as needed
:lipstick:
Heading of an issue created by the issue reporter should be more compact, fixes #43934
Added focus to quick fix widget click so that behavior of pressing CMD+. is mirrored
fix theming for terminal with activecontrastborder
node-debug@1.21.2
fix terminal high contrast border
removed extra class
applying new GDPR classification guidelines
removed unresolved fragment reference
Use duplicate search API in issue reporter, fixes #43519
Open File: unable to open a file with spaces in name if absolute path is provided (fixes #42726)
search: do not presume search is a viewlet, it can be in panel area
Git multi select and stage is broken (fixes #43787)
compute autoDetectHighContrast correctly
git readme
added collapse all to context menu
Missing FS events (fixes #44036)
git extension icon
consolidate git extensions
Force terminal renderer to resume on layout
make breakpoints API final; fixes #43492
ctrl+shift+5 to split terminal
Use time zones for readability
log: cli
log: windows service
logs: platform/url
Revert "added a 1px border to indicate the sashes"
english
fixing indentation
fixing indentation
merge master
use basename
fix revert file when no resource passed as context
notifications - clean up save error handler
win zip
added a 1px border to indicate the sashes
use pfs.statLink
stat link unit tests
pfs, extfs: add statLink
tests - more reliable tests on windows for workspaces main
- displays root folder name in multi-folder workspace project
removed TextResourceEditor import
removed instanceof-check for non normal editor widgets
renamed saveCenteredLayoutData -> storeCenteredLayoutData
fix openanythinghandler
aligned centered layout data storage key with the one from workbench
fixed import warnings for toggle centered layout actio
description & name for built-in languages (#43978)
fix tests
notifications - tweak wording of messages
notifications - restore support for arrays
Update distro
fix #43465
save position and size of centered layout in the global storage scope
initialize centered editor width with golden ratio instead of 50%
removed redundant layouting from onCenterSashLeftDragEnd
removed visibleSilos getter
simplified store to centeredLayoutActiveStorageKey
renamed isCenteredLayoutActive -> isLayoutCentered
removed shortcut for ToggleCenteredLayout action
fixed upper case consistency with other menu entries
added collapse all in debug console
#43978 add details
notifications - back to showing actions when expanded
#43978 Use nls
notification - visual tweaks
#43978 Add details to editing extensions
notifications - better error handling
#43978 Add more details to theme extensions
clean up
notifications - remove old message service and adopt new one
Implement #17068
fixes #43565
notifications - clean up choice service
- fixes test - displayCurrentPath: file/folder not bold anymore
Enable core node_modules ASAR
improved code based on code review feedback
notifications - extract choice/confirm service from message service
notifications - add onDidHide to notifications handle
fixed #38232
Use C++ for '.ipp' file extension
notifications - some context view tweaks
notifications - tweak aria label
notifications - allow to update severity too
notifications - :lipstick:
notifications - animate toasts
notifications - more methods to update notification afterwards
notifications - more work on progress bar
notifications - add progress bar and API
Update telemetry module
added centered layout
Pin editors opened via terminal links
Remove scroll refresh on _getDimension
notifications - fix drop shadows
notifications - more commands for toasts
Return cached term font dimensions to reduce layouts
Use ctrl+shift+d for split on windows/linux
notifications - purge toast after timeout
notifications - first cut of toasts
fix tests
editor.insertSpaceAfterComment setting
Remove unnecessary toLowerCase
Dispose splitview listeners
Rename context menu action to split
Don't reset term panes after resize pane command
Make sure we use a stable sort for code actions
Allow manual resizing of panes
Add jscheck casts
Clean up reveal line logic
splitVertical -> split
Draw split border in vertical orientation
Support vertical resize commands
Support up/down focus pane keybindings
Rotate terminal pane when panel position changes
Add commands to resize pane
Simplify terminal split model, only allow one dimension
explorer: allow root folder drag and drop
list: select element when increasing selection range. Do not select element when removing it from selection
Add findDuplicates command
Note on being experimental
notifications - introduce notifications center container
- moves word-wrap into .css - removes unused interface and enum for ellipsis
search into panel
notifications - extract a reusable notifications list
- fixes: slash as last char would add it to the front, too - adds word-wrap to inputBox messages - adds whether file or folder is going to be created
border colors for text decorations (for #30793, #43761)
notifications - toggle expansion on double click
Adopt latest loader (which is snapshot-friendly)
fixes #43432
minor polish
Make code snapshot-friendly
show symbolic links as decorations in explorer
notifications - more markdown config
notifications - tooltip for overflowing messages
notifications - introduce secondary actions
notifications - add tests
notifications - some :lipstick:
Use set instead of map and set active only on primary instance
Rename ext host / main thread `editor` to `textEditor`
Hookup basic webview.viewColumn
Clarify diffEditor.inserted/removedTextBackground (#41201)
Tag issues generated by issue reporter, telemetry improvements
Use onEditorsChanged to fire webview onBecameActive and onBecameInactive
Mark injected service properties as readonly
Move webview commands to own file
Move webview keybindings to own file
Mark ids readonly
Cleanup webview findwidget
Don't use default export for webview
Remove duplicate types
Combine emitter and event definitions
Extract getActiveTheme
Move scrollbar-thumb css logic into webview
Extract registerFileProtocols
Make webview.contents a string instead of an array of strings
Improve Issue Reporter UI
- shows the user the path while typing (when a slash has been typed) - text-overflow handled by elliipsis appearing at the beginning of path
Ensure tab has instances before showing in dropdown
notifications - dom focus back to tree on changes if it had focus
notifications - better keyboard support
fix build error
fixes #43752
bring back open editors visible
notifications - first cut keybindings support with commands
debug: show breakpoint icon in view
Do not include line number value in exception message
Exclude more than 100 duplicated __generator definitions in workbench.main.js
Enable duplicate detection on new issues
notifications - tweak colors and focus
debug: breakpoint glyph handle function breakpoint not supported
fix compile errors
notifications - introduce theming
notifications - introduce event for center visibility
notifications - max size tweaks
Improved the regex and added a unit test
notifications - more ux tweaks
Update calendar
notifications - bring back some borders
notifications - position above status bar
notifications - better status bar alignment
Remove extra logging statements
notifications - adjust height computation
Webview Api Prototype (#42690)
Manage Extensions from gear menu fixes #43708
Rename setting to showRecommendationsOnlyOnDemand #43471
Add action to reload the window with disableExtensions set, #43156
Setting to disable eager recommendations fixes #43471
make setting overridable
Issue Reporter: Differentiate between open and closed GitHub issues, #43549
make the timeout for formatOnSave configurable
Bump vscode-ripgrep
Update duplicate search endpoint in issue reporter
Evenly spread out term panes on sash reset
Allow more than one split
Add split vertically terminal context menu action
Correct terminal action names
Make terminal pane focus directional generic, add up/down
notifications - new icons
ship the right vcruntime140.dll version
Revert "temporarily disable fast updates"
Update terminal dropdown when closing left split pane
notifications - tweak status icon
temporarily disable fast updates
notifications - :lipstick:
forward and backward slashes are allowed as user input
debug: move getBreakpointMessageAndClassName to breakpointsView so it can be reused
notifications - status bar support
notifications - :lipstick:
adds platform specific slash validation & unit tests
notifications - introduce action runner for buttons
adds platform specific slash validation & unit tests
notifications - introduce simple alerts
Move webhook to https
debug: fix layering a bit, move things to /browser
context keys introduce "listMultiSelection"
Move webhook to https
Add multi-path creation from file explorer
notifications - renames
notifications - introduce and use model
notifications - some polish and lifecycle handling
notifications - shuffle things around
notifications - avoid action runner and use context instead
notifications - add configure dropdown
Absorb upstream fixes from emmet helper
Update telemetry module to fix issue of missing version in events
Set focus only after widget is shown to avoid showing details too soon
layoutContentWidget gets called after show(), so not needed in updateListHeight
updateListHeight needs to be called only when list content changes, not on focus change
--max-memory and fix test failture.
Make focusLeft work on > 2 + nested panes
Add keybinding for split vertical on macOS
Remove logs
Have terminal.border fallback to panel.border
Remove TODOs
Make terminal split border themeable
Resolve TODOs
Improve dropdown action names
More fixed related to scroll bar and correct padding
Addressed review comments
Use standard background-clip
Only refocus after removing tab if the tab had focus
debug: after breakpoint update send them immediatly if condition changed, if line number changed send when resource changed
notifications - details row should never overflow
fixes #43350
notifications - tweak message size compute
vscode-xterm@3.2.0-beta2
protect against failure; fixes #43490
Remove bottom padding from terminal
Set active instance in tab when instance focus changes
Allow already branched splitpanes to be split again
Update dropdown when killing instance
debug: some cleanup around getting launches
Add focus left/right that work on 2 instances
debug: no need to default to the selected configuration
Ensure a RootSplitPane knows about dimensions when branching
notifications - adjust height
notifications - add more actions to expand/collapse
Reuse listener code between create and split
notifications - add a toolbar with close action
ship vcruntime140 along with inno_updater
[css] update client (for #43317)
[json] update client (for #43317)
[html] update client (for #43317)
fix compile error
request service: logs
contextview: logs
debug: null guard
notifications - proper message size computation
remove bad empty dirs
move inno updater into tools
notifications - allow to click actions and links without expanding
notifications - some polish and validation
Get emmet completions from css extension (#41652)
#42557 fix
Update markdown grammar
Update markdown grammar
Add logging to issue reporter
Get panel resize affecting inner terminals
Revert "Use keydown instead of keypress to close terminal"
Revert "Don't close waitOnExit terminals when pressing modifier keys"
Pick up new version of marked
Get creating new tabs and switching working
Remove extra padding on zoomed in image view
Add toggle for duplicate search API in issue reporter, #43519
Working on correct state
Create split vertical command
fixes #43480
notifications - first cut source and actions support
debug: startDebugging take launch as an argument
file actions cleanup
Setter and getter for data provider in tree viewer
Work on removal of splits
update grammar script: remove unused properties
update grammar: improve reporting of exceeded github rate limit
notifications - simple expand/collapse
Remove unneeded code
Draw the split boundary
Set active line number color for default themes
notifications - simple icons support
hook in opener service
simple markdown with links support
notifications - show something top center
notifications - scaffold a notification service
fix formatting
:lipstick:
:lipstick:
explorer: new file and folder command in command palette
address #43228 for insiders
Bump node2
Log settings search remote errors to log service
Added margin-left: -1px to remove effect of the left border
Added copy property path action to debug viewlet
Layout orientation correctly
node-debug@1.21.1
Move title code to tab
Get 2 terminals showing
Making the script work with both Python2 and 3
Keep the previous feedback widget, taking the place of the issue widget when the setting is set
Add extensions to IFilterMetadata so it can be passed directly to the issue reporter
Rename to "IWorkbenchIssueService" and IRawIssueService->IIssueService
Use new IssueService for report actions
Split IssueService/RawIssueService so renderer proc consumers have a simpler interface to launch the issue reporter
Make markdown show preview command multiselect aware
Revert commands title change
Reverse pinch zooming  direction in resource viewer
mark a few interface properties readonly
change css attach to inspector protocol
#28974 Introduce place holder icons for nodes without icons
Refactor custom views: - Custom view service to get tree item viewer - Custom view service to register the data provider
tweak download url dnd
fix some dnd issues after getting feedback
Make diff gutter decorators width configurable
:lipstick:
fix #7950
fixes #17722
inspect context keys action
debug: no need for debugService to select the launch. This knowledge should only come from status and dropdown
explorer multi selection: only focus an element if it joins the selection
remote - fix more places where we assume file schema or add todos
fixes #7717
Introduce terminal group/tab concept
'about' global command
:lipstick:
debt - make dnd fit for remote resources
[json] compile error in languageModelCache
[sql] update grammar
[log] update grammar
[ts/js] update grammars
[java] update grammar
make grammar file names consistent
[go] make grammar file name consistent
[fsharp] make grammar file name consistent
[cpp] add platform.tmLanguage to update list, consistent file names
[clojure] update grammar
avoid hardcoded extensions list in update all grammars
use Schemas.untitled everywhere
missing yarn.lock changes
debug: more specific string config values
Explorer: allow to drag and drop files between windows to copy them over (fixes #43307)
improve input validation setting description
open editors debt: remove openEditors.visible === 0 to hide the view
debt - consolidate URL/URLS transfer into one
[json] enable strict checks on server
dnd - make sure to focus window first before handling drop
:lipstick:
watcher - error handling within extfs
debt - ensure extfs.watch enforces error handler
debt - remove some implicit any
Don't send searchError telemetry for generic network issues
Update markdown grammar
Also fix formatting in tracer
Format extHostLanguageFeatures.ts
Update extensions for TS 2.7
Use extracted markdown grammar
fix #43229
Call a script on update
fixes #43215
debug: variables and watch quit with the highlight business. Introduce selected wath context key
fix ref widget not showing focus properly on click
related to #42532
fixes #43014
Extract Tree viewer from Tree view panel
fixes #42532
fixes #42514
fix bad git commands
fixes #42650
Remove unused code
Use URI for the SCM part of the protocol
Move extensionPoints.ts to /node/
Use URI for ExtHostDocumentsShape methods
Use URI for IDocumentsAndEditorsDelta.removedDocuments
debt - reuse drop handler from editor also for open editors view
clean up tree view panel
fix windows background updates enablement
debt - encapsulate all drag datatransfer into one place
fixes #43066
:lipstick:
[json] fix strict typing issue in server
:lipstick: octicon handling in quick open
Add aeschli for css-less-sass
fix various quick pick issues (fixes #43114)
Sleep for 10 seconds instead, don't bg
Add dropdown.listBackground color (#43168)
Grammar tweak in extension enablement message
Add doQuitAndInstall impl for snap/linux
Update dockerfile
Add telemetry in feedback part
Moving openDocumentLinkCommand to own file
Make data2String static
Adding more tests for toc provider
Use find for toc lookup
TOC lookup returns toc entry instead of line number
Mark all toc entries properties readonly
Adding basic test for markdown
Small formatting fix
Make slug a whole value
Don't use nan to signal undefined table of contents position
Use `alwaysStrict` in markdown extension
Mark property reaonly
Avoid cons-string flattern in indentation guesser.
Check for rule.settings before using it #43129
Turn on PieceTree.
When EOL is normalized, we can simply do substring instead of replace.
add search cache.
Do not create new object for nodeAt2 method call.
If eol is normalized and there is no CR, we don't need to validate.
[json] set client to strict
[json] adopt language-client with colorProvider support
[json] update service / jsonc-parser
[css] update grammar
ensure to only lint files in the src program
Remove postRefreshHook reference
fixes #43133
fixes #43113
1.20 released
Update distro
Remove post-refresh hook
Respect VSCODE_QUALITY in generate-vscode-configuration task
bring back windows background updates
prevent opening files that are not folders as folders
File label creates description DOM nodes even if description is empty (fixes #40208)
configuration resolver service: remove unused statics
remove todo
debug debt: introduce debug.openBreakpointToSide
debug: move commands to debugCommands
debug debt: cleanup column breakpoint actions -> commands
Quickpick items search reveals octicons used in the items (fixes #21243)
debug: remove debug.logToDebugConsole command
fix typo in GDPR annotation
Bump node-debug2
Upstream emmet fixes
Wait for telemetryReporter to complete dispose before deactivating extensions
Issue reporter sys info/extensions drop down UX issues, #42564
"Set Log Level" command name should end in ...
Detect code insiders version in smoke tests on Linux
debug: refactor updating of breakpoints
debug: reduce usages of selectedLaunch and some refactoring
Remove ITerminalService.onDataForApi
Issue reporter scrollbar is non-standard/looks out of place, fixes #42568
Bump ripgrep
remove electron specific tests
Can't read full InputBox validation error message if it is too long. (fixes #33181)
Update .vsts-ci.yml
Don't close waitOnExit terminals when pressing modifier keys
clipboard - back to custom solution for files
Leverage native clipboard for file copy/paste (#43029)
Timed configuration
Move Editor Left / Right actions incosistent when tabs are disabled (fixes #42997)
Revert "Bump ripgrep"
Bump ripgrep
minor changes which fixes #42795
Issue reporter responsive CSS (#43007)
disable global find clipboard tests temporarily.
New setting terminal.integrated.rightClickBehavior
Pull in new xterm.js
Bug reporter opens multiple URLs when title has double-quote, fixes #42951
Issue reporter: Loading process information takes a long time, #42860 (#42983)
Update url length limit text in Issue Reporter, #42985
Add missing space to l10n string
bring back keybindings for obscure commands
Stylistic and grammar fixes in Emmet messages (#42893)
invalidate extensions manifest cache only after the fact
Unexpected events for single updateWorkspaceFolders operation (fixes #42639)
Quick open shows weird truncation when highlighting matches (fixes #42501)
list/tree - control open behaviour in one place and prefer to open on mouse down vs mouse up
Tree: allow to expand with single click when clicking on twistie (fixes #42621)
history - only allow file inputs for persisted history
Remove magic number (#42871)
add more log calls to some services (for #41680)
Cancelling opening a folder from a multi-root unsaved workspace corrupts the current worksapce (fixes #42799)
Update config
Open Editors: "Open to Side" with keyboard still activates group (fixes #42399)
window.autoDetectHighContrast setting not visible on Windows (fixes #42946)
Allow middle mouse click to open file entry in the background (#42769)
Fade out tabs when sizing is set to shrink (fix #39417) (#39829)
fixes #41502
Simplify check lang.mimetypes
Remove needless check for array in ContextKeyChangeEvent
Share a common tslint.json between the language service and the hyiene task
Update issue reporter description on input instead of blur
Issue Reporter: UX issues, fixes #42856
update distro reference
Update .vsts-ci.yml
Set up auto updating for snap
Add SNAPCRAFT secret vars
use proper zip command on windows
fixes #42830
Inconsistent buttons on warning dialogs (fixes #40224)
fix bad english
Perform the tslint checks in the context of a program to enable checks which require type information
bump to 1.21.0
Update to changed id (fixes #42808)
open editors: ony allow editors with a resource to be dragged
typo
#28634 Use ContextAwareMenuActionItem
make locale comparison case-unsensitive; fixes #42304
typos corrected
debug issues to andre
improve localstorage telemetry
Setting search - fix groupId telemetry when setting is configured on the RHS and add displayIdx
Telemetry for dynamic workspace recommendations
Log recommendation reason in telemetry for install,uninstall,click events
Issue Reporter: display message if url length exceeds limits, #42603
Add a test post refresh hook
Add move to line start and end commands
Generalize terminal delete word left right action
Reworking log upload message
Ignore .git in the end when hashing remotes
Use ctrl + click on windows/linux for zooming out
Add missing variable
Defer quick fix all ts call
Remove unused net declaration
Shuffle other recommendations, update reason #41054
Clear dynamic workspace recommendations when workspace changes #41054
Use args based confirmation for log upload instead of using stdin
Set IS_FROZEN
Build everything again
Auto push and release snap
Use named pipe for stdio in upload logs
Add revision to snapcraft version
Issue reporter: Improve 'API rate limit' label, fixes #42725
Echo snapcraft vars
Don't ls dir
Don't look for version
don't build snap package
don't build
Login to snapcraft and publish
Move snap Dockerfile to new dir
#42741 Separate local search from remote search
Add snap Ubuntu 16.04 dockerfile
Add release snap that only builds and publishes the snap
#42739 Listen to theme changes
Always show twisties for custom views
Proper fix #42739
Add snapcraft version to snap task
#41156 - Search viewlet should only write to global find clipboard when search.globalFindClipboard is enabled
more names #42477
fixes #42485
more ts-ignore
fixes #42732
fix #42534
fixes #42452
undo workspace edit changes for now, #10659
fixes #41970
fixes #42626
Remove inline license (See https://github.com/nojvek/noice-json-rpc/pull/6)
Remove asar files & folders (fixes #42711)
enable checkJS
wording
fixes #42716
fixes #40421
fixes #40947
fix #41363
Don't show fix all in js/ts if we only have a single dianostics of that type in the file
Add "rawQuery" to remote settings search request
Updating OSS tool results
Include more stage packages in snap
Display text when no similar issues are found or when API rate limit is hit, fixes #42545
Tune image zooming to be less finicky
Support vendor prefix in emmet #35951
Semicolon is nolonger required to reset emmet
Prevent scrolling while zooming in image viewer
Use set zoom levels on click
Don't show float zoom levels
Issue reporter extensions disabled checkbox could be more obvious, fixes #42562
Publish snap package
check breakpoint validity; fixes #42478
Remove unnecessar snap deps
node-debug@1.20.10
Update distro
Update distro
Use correct folder for nvmrc
Build snap and print folder
Move .nvmrc before nvm init in CI
Revert "Move .nvmrc before nvm init in CI"
Update snap build
Move .nvmrc before nvm init in CI
Add type links to code action docs
Clarification of to codeaction documentation
Pick up TS 2.7.1 final
Don't add empty documentation for js/ts completions
Issue reporter: detect 'reproduces without extensions', fixes #42405
Issue reporter UI tweaks, fixes #42569, #42565
remove configurable threshold
fixes #42494
Revert "remove table from print action, only have new command, #41712"
fix #42500
fixes #42452
Randomize test name to avoid collision when executing in parallel (fixes #42614)
fixes #42469
fix #42632
register log action after creating log channels
disable fast updates by default
fix #42637
:lipstick:
fixes #42454
fixes #42626
fixes #42495
fixes #42502
fixes #42597
fixes #42526
fixes #42527 fixes #42612
remove spdlog flush
fixes #42584
fixes #42589
fixes #42518
another fix for #42542 (fix it also when encoding is used)
#42594 Do not flush if there are no contents to flush
API: clarify that vscode.openFolder also works with workspace files
fix  #42488
Do not ship core node modules as an ASAR (#36997)
fix  #42531
fix  #42552
fix #42553
fix #42542
fix #42439
fix #42424
Typo
Move default vendor prefix whitelist to emmet helper
change to validateInput
debug: introduce UserLaunch
fix #42503
fix #42429
define keybinding precondition fix
debug: do not send evaluate requests for expressions with no name
node-debug@1.20.9
Update to latest vscode-nls-dev
fix bad markdown links
fixes #42280
experiment with unused variables
fixes #42398
fix a couple of list/tree issues to enable testing
[i18n] extension resources missing on transifex
Revert "provide original english translations for git"
builtin: dont delete when disabled
builtin: manage extensions
[html] update service
[css] update service
Updated distro for recommendations url
Adding default values for CSS vendor prefixes in emmet (#42385)
Allow vendor prefix in emmet #35951
Change log levels for SearchService to not show up by default - too noisy
Workspace recommendations based on telemetry (#42294)
Issue reporter: changes to "reproducible section", fixes #42365
Upgrade to latest language pack format
Add very simple process indicator for log file uploader and improve uploading event messaging
Log response body on log upload failure
Add keybinding for refactor
Update the telemetry module used by extensions
node-debug@1.20.8
no longer package extra languages with insiders
Include extensionAllowedProposedApi extensions in OSS product.json
Include windowId in per-extension log folder name
osVersion re-classifying
Allow mouse wheel to scroll term apps when in alt buffer
Open issue reporter on 'Report Performance Issue' as well
Mitigate #41472. No selection highlight when file is too large.
Restore automatically putting TS Server in debug more if TSS_DEBUG is set
Provide command aliases for TS extension
Add alias for markdown commands
"Report Issue" command opens issue reporter, fixes #42269
provide original english translations for git
[i18n] pseudo language support
[ia8n] fix update script
close other editors: cover the case when run from command palette
remove asJson header restriction
allow to close dirty editors when auto save is on
Have the default be TextBufferType.LinesArray, add VSCODE_PIECE_TREE env
More removal of process.env['HOME']
fix #42295
Populate absolute paths in the language packs file
fix builtin
[i18n] lang pack update script: add extensions list
fixes #42159
debug npe
start with a test for #40570
comments
We need to clone the configuration in order to be able to make changes to it
Localizations: Update extension point to describe extensions and adopt to it
addressed review feedback
:lipstick:
:lipstick: settings wording
clean up
Use IEditorCommandsContext across tab, open editors. Drop IEditorIdentifier as context
Add support for node_modules.asar in the shared process
handle List properly with open mode
support for debugAdapterExecutable; fixes #33801
getResourceForCommand: if the resource is passed it has to be a part of the returned context
fix #33528
built in extensions control file
rename
fix #42012
malicious > problematic
Support theming of active line number
rename setting
move file results navigator into list service
introuduce a setting to control open behaviour in list and adopt in some places
:lipstick: list service consumers
Settings search - fix up GDPR comment, include installed extensions in feedback
Settings search - don't send extra settings values with feedback
Settings search - split remote settings search into multiple requests to stay under the filter size limit
Settings editor - fix settings appearing in results right after clearing search input
Settings search - don't include disabled extensions in settings search
node-debug@1.20.7
Localize xterm.js strings
Upgrade to vscode-nls-dev 3.0.6
:lipstick: multi root API
Skip emmet in selectors #42245
Remove terminal nav mode, terminal supports SR's mode now
vscode-xterm@3.1.0-beta12
fixing #41613
Pick up latest TS insiders
fix tests on linux
Reclassify common.osVersion
Consider pluginHostTelemetry a common property
node-debug2@1.20.3
Settings search - fix error thrown when searching with no workspace settings
Settings search - show individual Folder settings counts in dropdown
Absorb upstream bug fixes for emmet
Issue Reporter: Change keys to submit and close to Cmd+Enter on Mac, Ctrl+Enter on Win/Linux
correct GDPR annotations
Adding examples of code action kinds
Rename to cursorWidth as per feedback
Update rust grammar
Settings search - clear settings.json Problems when settings editor is closed
Avoid querying gallery when not configured fixes #42204
Settings search - Add duration to feedback page
Issue Reporter: Checkbox for 'reproduces without extensions'
leave a todo, #7340
fix error which happens when a provider doesn't support resolve, #7340
make `resolveInitialRenameValue` be proposed api
[i18n] fix paths for external extensions
[i18n] fix paths for external extensions
[i18n] more checks for missing/obsolete resources
fix post merge headache
lineWarningLength -> validationProvider
Pack the core node_modules to node_modules.asar as part of building
add API tests that run on a workspace
better settings name, #41060
node-debug@1.20.6
optionally show Open File action
:lipstick:
Shy -> LRUMemory, fix capping issue, #41060
more fixes for multi root API
enable windows background updates for insiders
numeric langid isn't stable, use name #41060
add setting, need to finalize on names, #41060
implement different memory strategies, #41060
#42202 Generate id from manifest only for user extensions
#42202 Generate id from manifest always
explorer model do not presume resources are local
Identify current and default log levels in the log level picker
:lipstick:
make addBreakpoint/removeBreakpoint sync
explorer: refactor and improve expansion
Introduce a configuration to test threshold
smoketests: always enable debug tests
fix smoketests
explorer: properly pass actions context
fix git smoketests
fix running dev smoketest
debug: remove info to setup launch configuraiton file
#39807 Adopt the rotating file format change in output panel
more tests
[18n] find obsolete resources & add externalExtensionsWithTranslations
adopt spdlog 0.6.0
extract common delta code
add test and fix issue with swapping folders
actually implement and test live objects
Forward stdin for loguploader
node-debug2@1.20.2
Add 'Cancel Search' button, #30336
corrected typo (#42182)
Settings search - don't lose navigation position when remote results load
Settings search - write out result counts to feedback editor
Wait until extensions are registered before getting mime fixes #42154
debug API to create/remove breakpoints; fixes #42173
Change 'Report Issue' in help menu and in feedback part to open issue reporter, fixes #42025
Update js/ts grammar
Also capture dots in jsdoc property names
Update resource viewer zoom label
Add support for Language Packs
Settings search - highlight word matches in description for results from bing (still not using it to filter settings locally)
Settings search - show tab result counts for folder settings
Show pref search result count badges for user and workspace settings
Persist scroll position in image view
Get rid of flash on scaled image load
Restore persisted zoom
Move zoom level to left of size info
Issue Reporter: Search GitHub issues on input instead of blur
debug: proper fix for restart not saving
use modal dialogs for preLaunchTask errors
no verbose tsfmt
debug: when new raw source comes update the original reference
#40357 Probable fix
fixes #42115
update inno_updater.exe
debug: improve compound schema for suggesting folder names
debug: call stack view do not react on selection changes caused automatically by the view
#42115 handle error
fix tests
:lipstick:
more tests and fix liveness issue
updateWorkspaceFolders tests
fix #42144
boost fully covered matches, #41060
add test to verify $acceptWorkspaceData keeps existing workspace folders live
debug: on extension host debug restart do a bit more including saving
configuraiton resovler service use Object.creat(null)
use live objects and avoid promises
:lipstick:
Settings search - Don't send error telemetry with no details
Settings search - limit size of request Stopgap fix for Microsoft/vscode-bing#54
Inline setImageScale
Make settings editor navigation order predictable - fix #42126
Better keep resource centered while zooming
Continue working on zoom
Never pixelate scale to fit image
Use click instead of mouse down
More desriptive name for scale to fit
Move resource viwer into workbench
Adding status bar zoom control
Display enabled extension information in Issue Reporter
Settings search - tweak hidden lines
Settings search - enable settings + extension settings search by default
Settings search - disable search settings group headers
Settings search - Disable "new extension search"
node-debug@1.20.4
Settings search - don't refresh the default settings side when the editable side changes
Display truncated VSCode version in issue reporter
Update .vsts-ci.yml
Mark extract constant refactor as `refactor.extract.constant`
fix: add word boundray to check markdown italic (#41466)
fix extension tests
Remove bad test filter
Better wording for configuration option
remove unused variable
Make it possible to change the minimap position setting dynamically
fix bad NPE
debug: allow scoping of configurations inside compounds
Simplify code
actually implement test properly
configuration resolver service: allow to reference a worspace folder by name
configuration resolver service: introduce VariableResolver
debug: compound configuration name error handling
Remove support for custom marshaller (#40169)
:lipstick:
periodically check for installed malicious extensions
Remove custom marshaller in tasks extension host communication (#40169)
refine regexp value, #26044
:lipstick:
improve isMalicious ext attribute
simplify code
fix warnings
some message telemetry (for #22388)
malicious in UI
remove internal API for accessing the value of a model directly
extension report cache and load
#41071 Update the view quickpick list and add open view in views menu
fix tests on windows
avoid loading entire backup content for hot exit
Show progress while searching for settings
:lipstick:
fix #41987
another try, #41408
Revert "Revert "add 'configuration' (read uri/path) of workspace config file, #41408""
add main-side logging for save participants, #42013
rename gulp tasks
some more jsdoc, #10659
add IJSONContributionRegistry.notifySchemaChanged
:lipstick:
Bump distro
fix issue #40848 show extension tab if extension has previously been installed
Settings search - fix feedback and telemetry to handle extension setting results
CSS tweaks to issue reporter, fixes #42064, #41993, and #42054
Install builtInExtensions on windows too
piece tree perf is propotional to edit cnt so 10/100 edits are not necessary.
update find results limit comment.
Settings search - tweak labels
Settings search - fix JSON-encoded default values from remote search
Name InstallCountWidget correctly
Use choice server for log uploader
Used pixelated scaling when image is zoomed more than 300%
Settings search result message -> match>found
make BASE64_MARKER static constant
check log uploader result type
Revert "Revert "Use special prefix to tell TS that a resource is in-memory only (#42001)""
Localize issue reporter and fix flickering on load, fixes #41995
Sanitize OSVersion
New property for OSVersion with possible PII from self compiled linux kernels stripped
Place terminal textarea below rows, fix nav mode reading wrong item
Update Swift snippets (#42048)
workaround #41987
#39574 Implement log level transmission to extension host
#39574 Define interface ILogLevelSetter
:lipstick:
FIXED: issue window opened as child, fixes #42024
debug: schema for  compound configurations names
updateWorkspaceFolders - add some validation
Add fontWeight/fontWeightBold terminal settings, remove enableBold
vscode-xterm@3.1.0-beta8
#39574 Revert extension changs
Remove node-debug and node-debug2 obsolete marker files
builtInExtensions.json keeps pointer to repo
#39574
Implement #39574
missing merge change
make WorkspaceEdit more sane
use 32 bit version of inno_updater
scripts/code.sh picks up marketplace built-in extensions automatically
address some feedback
add extensions control url
fix bad state change in darwin update service
fixes around mr compound debugging
fix leak
polish from feedback
Show localizations contributions in the extensions editor
Paint secondary cursors with the same opacity as the primary cursor
ext dev - delete untitled workspace on close
respect index property when adding folders
make =~ actually be a regex test operation, #26044
fix #42031
Remove default keybinding for SelectToBracket
handle single folder case better
Revert "add 'configuration' (read uri/path) of workspace config file, #41408"
add status message when not showing confirmation
#36967 Support writing launches in workspace configuration file
debug: simplify openConfigFile
more API docs
polish API docs
update: should not show progress if user quits code
#36967 - Support reading workspace launches in mulit root workspace
debug: introduce WorkspaceLaunch
Revert - move striping logic back to javascript for running extensions
add 'configuration' (read uri/path) of workspace config file, #41408
use windowsVerbatimArguments
fix bad state expectation
cleanup list alt key change
Allow to copy from extension contributions
reduce test pressure
linux - disable failing test
fix #41940
update distro
Revert "Use special prefix to tell TS that a resource is in-memory only (#42001)"
Settings search - Remove unused css rule
Remove unused import
Prevent local settings search from searching setting descriptions
Move rbtree logic out of piecetreebase.
safe guard of search cache in buffer.
Settings search - add setting to switch to new POST request format. And fix setting matcher for core settings from remote
Revert "First attempt of search caching."
Test cases for pieceTree.equal
Use special prefix to tell TS that a resource is in-memory only (#42001)
Make sure log body is properly encoded
Dont load loguploader using import expression
Extract largeImageView
Make sure we preserve pixelated property on zoomed images
Mark static constants readonly
Show codelenses for new extension search results
Issue Reporter: Preview on 'Shift Enter', fixes #41996
Add refactor editor action
Use flatten
Add ability to zoom in/out on all images (#38538)
Also filter settings search by extension package id
Use POST request for settings search
Update issue reporter wording, fixes #41994
fix integration test save for untitle file
snapshot for empty file
No resizing of inputs in issue reporter, fixes #41992
Update .vsts-ci.yml
Take kind instead of edit in CodeAction ctor
Use CodeActionKind.append
CodeActionScope (#41782)
fix #41918
remove duplicate method
Keep notification consistent with recommendations #38543
turn on piece tree for insider.
fix #41989
Add workbench.fontAliasing.auto option (#41895)
remove textEditorModel.getValue
#41752 Add default value for translations folder
#41752 Update extension point
less tuple type usage
adopt more snapshots
Add screen reader keywords to navigation mode command
fixes in bulk edit
fix inno updater
Announce terminal to screen reader
first cut of proposed updateWorkspaceFolders API
fix bad build script
Remove duplicated code
add a todo
[i18n] push compiles js file
add log statements to update service
show progress bar for update in progress
move inno_updater into app when building setup
add download limiter to build/i18n script
[themes] add 'support.function' to functions (for #41612)
move inno_updater.exe to windows build directory
post merge fixes
Show diagnostics as warnings (#41952)
linux: missing checking for updatse
first cut updateFolders API
Bump node-debug2
Remove unnecessary telemetry property
move BackupSnapshot around
snapshot support for getFirstLineText
wire in ITextSnapshot for backup writing
grid example
splitview.addView should set low prio to new view
[monaco] bind ILogService to NullLogService by default
add more text snapshot tests
fix fdatasync working properly
GDPR annotation fix and remove unused prop
Support macOptionIsMeta
xterm@3.1.0-beta5
first cut stream support for updateContent
Update .vsts-ci.yml
Update .vsts-ci.yml
Update .vsts-ci.yml
Update .vsts-ci.yml
Update .vsts-ci.yml
Update .vsts-ci.yml
document update state machine
Update .vsts-ci.yml
Update .vsts-ci.yml
Update .vsts-ci.yml
Update .vsts-ci.yml
Update .vsts-ci.yml
introduce writeFileStreamAndFlush
Revert - move striping logic back to javascript
fix issue with useAltAsMultiSelectModifier
Log ripgrep cmd from quickopen to logservice
Switch search output panel to logservice
Use absolute paths for webview core resources
Explicitly hide TS version status when in ts/js file with unknown scheme
Add command to search for extension by ID
Show section for settings from new extensions, with decorations on each
First attempt of search caching.
Request settings for new extensions
Pick up latest TS insiders
win32: code should run after regular update
enableWindowsBackgroundUpdates
linux: state should be idle after download
fix state check
Avoid double-counting same settings search query
Use latest emmet helper that has fixes #33818
Remove settings search @groupId filters - since group ids can now be extension guids, and nobody uses this anyway
unify update services across platforms
backups - make sure to use "utf8" as encoding and not "utf-8"
Catch any errors that onLineData users throw
use uuid as extensions configuration id
Update .vsts-ci.yml
Update .vsts-ci.yml
fix format on save problem that occurs when a provider returns no edits
support interleaving file and text changes, basically rewrite bulk edit...
Update .vsts-ci.yml
fix #41724
some menu polish for issue reporter
log asset
rollback update mechanism if user cancels
Simplify edits handling in TextModelTokens
fix badge, win32 flag file
some polish and fixes
commands: if only one resource is selected explictly call save since the behavior is a bit different than save all
load mutex later
wip: windows fast updates
Suport Polish in terminal
better adapter picking when multiple adapters registered for same language
remove table from print action, only have new command, #41712
Protect against malformed problem data.
Add extension version to language packs extension cache
avoid layer breaker with settings
Provide a setting to configure the multi selection modifier key (fixes #41799)
fix tests
Add edcore to benchmark; Support iterations in benchmark.
inline rbTree get/set NodeColor.
Support searching preferences with installed extension filters
add detailed comments for piece tree snapshot.
avoid unnecessary code change.
Add winjs skipFiles pattern to launch config
disable piece tree.
Remove extra logging statement
Add quick fix all for JS/TS
Move files under vs/code/electron-browser/issue
CreateSnapshot for piece tree.
[fix-panel-auto-maximize] removes unused var
[fix-panel-auto-maximize] removes condition which contraints panelHeight
Use uint16array to store numbers smaller than 65536
Defer terminal init to LifecyclePhase.Running
Implement snapshots; prepare for merging to master
#41759 Show the status in the viewlet
Disable insiders label
#41755 Add canChangeEnablement check to disable actions
debug: launch schema in workspace settings
state - persist pinned views/panels when they change
reduce hacks in getMultiSelectedEditorContexts
publish windows builds as supporting fast updates
copy/print factory times as csv, #41712
fixes #41796
node-debug@1.20.3
update inno updater, selectively launch code after update
log some localStorage perf counters (for #18439)
Add TextModel.createSnapshot (#32503)
debug: no need to open config file on failure to resolve configuration provider anymore
fix #41738
update inno
Refactor benchmark utilies.
adding suggestion to search for extension for files are of unknown mime type (#40269)
Show single prompt even if file matches multiple important recommendations
Remove any cast for completion items now that we've picked up TS 2.7
Avoid comma due to array, put tags under quotes as they can be multi worded
if we disable folding model for large file, we do not save view state as well.
Remove unused param
Make a code action request for each diagnostic
Preferences search - fix local/remote typo
implement operations reduce and correct search and replace benchmark.
Pick up new TS version
Better implementation for buffer equals and charCodeAt.
Trying the Server 2012 queue
Memoize TS API version checks
Added some additional output
Some more styling tweaks and bit of code cleanup
Use theme information to style the reporter
Add a unit test
Correctly pass machineId, some text and styling updates
Add TelemetryService to reporter
Some refactoring, form validation, and ability to opt out of sending system info
Search github for issue title and display first ten results
Move VSCode version and OS info out of System info, styling updates
Some styling update
Get new diagnostic info and render them
Add command for opening issue reporter
Some basic polish to the Issue Reporter View
Return diagnostic information as structured objects instead of strings
Basic Issue Service and renderer
Issue Reporetr - CLI flag & platform service
Switching to powershell for scripts
Changing queue
Changing queue
Update .vsts-ci.yml
Create .vsts-ci.yml
Use ctrl+n when terminalFocus to enter nav mode
Update to work with latest xterm.js
Refactor piece tree to hide tree related logic from Buffer API.
Pull in latest terminal screen reader changes
Rename to PieceTree which reflects its data structure more precisely.
Correct "branchs" to "branches" typo
Implement #41759
#41752 Show contributed locales in the intellisense in language file
Implement #41751
:lipstick:
Introduce more error categories
fix close all editors in group when triggered via keybinding
bring back save all files to command palette
Folding is not supported for huge files
Add more TextModel tests
Clarify argument type
Optimize away looping through lines for huge files
Validate offset before passing it down
Move RawContentChange events creation to TextModel
Implement more efficient getLineCharCode
fix cmd + w not working when wrong list selected
explorer input box: restore focus based on blur
multi select - wire context keyservice properly
"Toggle Side Bar Location" -> "Toggle Side Bar Position"
Improved implementations
fix save all across groups
fix close unmodified command
TreeViewsViewlet no action if expanded state does not change
Handle BOM (if present at the start of the first piece)
Implement ChunksTextBuffer.getLineLastNonWhitespaceColumn
Add more TextModel tests
restore "..." menu for inactive editor groups
RBTree invariants validation.
Test pass.
Move RawContentChange events creation to TextModel
Add tests for time snippets
also add the workspace name, #41408
remove duplicate code.
EOL normalization.
Include groupId in copySetting pref telemetry
Allow loading webview outside of file: origin (#41698)
add TextSearchOptions, only search in folder contributed by provider, #41536
Use first rename provider for resolving initial value
Implement functionality in rename contribution file
Make range required
Add new API to communication layer
Add types and interfaces
remote - a few more todo-tags after a 'file'-scheme search
use extfs#watch, #41700
set `problems.decorations.enabled` to `true`, #782
slight follow up on #38636
#35462 Store the hidden views in global storage
:lipstick:
log editorGroupMoved
fix cmd+w not working
fix #40224
Remove unnecessary prefixsum related types.
Avoid CR  at the end of chunk.
Add test cases for piece buffer.
#41071 Show the view on selected if hidden
#41071 Add view category to the commands
Remove the handle from the system when handle changes
Use existing pad helper
todo@isidor
open editors: multi select dnd
getMultiSelectedEditorContexts
udpate explorer.openEditors.visible docs
get rid of IEditorContext, use IEditorIdentifier instead
close editors and close other editors multi select aware
Optimize away looping through lines for huge files
Folding is not supported for huge files
Optimize buffer creation
close editors multi select aware
open editors view: remove unused actions
Validate offset before passing it down
close all unmodified multi select aware
Implement ChunksTextBuffer.setEOL
Add alias for commands (#39778)
Better edits sorting
open editors multi select: save all
open editors: need to pass an {} when there is no uri to keep the order of arguments
getMultiSelectedEditorContexts
:lipstick:
Doc feedback for id attribute
Increase timeout for search tests (fixes #40013)
Updgrade markdown-it (fixes #40099)
Implement ChunksTextBuffer.equals
explorer: do not make file assumptions in shouldRefreshFromEvent
Implement getLineFirstNonWhitespaceColumn
add actions to keybindings registry
polish closeEditors API more
Make separate class for time sinppets
Redundant temp variable
Add time variables for snippets
safe point before new line starts.
hygene
fixes #26044
link detection for remote file systems, #41482
write meta.json file #41408
limit suggestions that can be remembered, #41060only items from the top bucket will be remembered and pre-selected the next time suggestion happens
don't encode special character for labels, #40662
:lipstick:
more type fixes for #36946
allow to closeAllEditors across multiple groups
tackle, #41637
wire up types, #36946
provide cross-position closeEditors methods
fix list styling with decorations and selected item
:lipstick:
Adding more doc to `id` attribute
files.ts rename helper functions and add getMultiSelectedEditorContexts
Correct sorting of edits before applying changes
open editors: save and revert multi select aware
Better EOL normalization
Normalize eol
Hook up editing
open editors: compare selected
getResourcesForCommand respect open editors view
open editors enable multi select
fix warning
Move RawContentChange events creation to TextModel
fix grammar in walkthrough
fix terminal commands
alt key open to the side for breakpoints and markers
#41535 Adopt TreeItem to have resourceUri
fix: wrap current node when no selection and cursor on opening or closing tag (#41602)
Add win32x64AppId to product.json
tweak smoke test
[monaco] fix Microsoft/monaco-editor#642: sync CompletionItemProvider api
clean up icon path confusion
Keybindings editor theming impovements - Using css instead of typescript
implement closeEditors properly when passing in editors
Running extension theming impovements Focused even rows not using proper colors Using css instead of typescript
add copy command action to keybinding editor context me
Set the minimum vertical scrollbar height to 20px in order for it to be consistent with the editor defaults
Set the minimum height of the xterm scrollbar thumb to 35px
Safe point for dropping off line start prefix sum.
When trigger suggest for incomplete completions, use new kind
remote - manage some todos
root in fs provider is optional, #36177
Allow hex color completions from emmet
Add rename/create/delete file to workspaced edit
align goto error/warning with #16852
workaround for #41547
workaround for #41543
editor service - add method to close specific editors of a group
include scheme in path label unless file or untitled, #40662
more bot updates
changing back to resourceUri
remove explorer.openEditors.dynamicHeight
refine text search api, #41536
update classifier
references widget: alt click open to side
Implement more methods
new file and new folder command only when explorer has focus
explorer multi select - distinct parents for DND
Implement offset -> (ln;col) conversion
paste action: make sure to use distinct parents
command id polish
multi select - add and use distinctParents method to avoid duplicates
Better implementation for getValueLengthInRange
Improve getValueInRange
remove root folders multi select aware and move helpr commandArgument methods to files.ts
hey bot do not assign labels to my issues, thanks bro
Use handle for id if it is of type string
Better EOL handling
Reduce GC
#40018 Revert to use label as id. Do not use index instead have a counter for duplicate labels
#41377 forgot to return
First cut
fix "open to side" not showing up in empty selection menu
quick open: alt open to the side
find in folder: make ready for multi-select
Windows fix for #37589 (compound launches in Integrated Terminal)
let "open to side" win over reveal options
breakopints and open editors open to the side on alt key
linux: fix tests
FileResultsNavigation: open to the side with alt key as default
explorer: polish context, always pass focused as second at least
setData DataTransfers.TEXT multi selection aware
another fix for integratedTerminal & compound launches
use modern and short ids
workbench.action.files.saveFiles
update bot to not assign workbench label anymore
add vscode.removeFromRecentlyOpened command (fixes #41391)
bring back workbench.action.files.copyPathOfActiveFile for a milestone
add more labels
code review comments
remove hasChildren for #41497
Use HTTPS for npm package.json auto-complete
better fix for #41322
fix #41429
Move absolute path check to avoid dependency on path in emmet helper
New settings search UX - #40957 (#40958)
File based recommendation trumps exe based recommendations #41368
remote - sketch up find in files logic
Remove hard-coded zebra in running extensions
use multiple integrated terminal for composite launches (mac + linux)
Use multiple buffers.
remote - some renames, prep for more search
remote - remove reads after reading
Removed extra 'if'
pass --no-use flag in build script
add commands list.expandSelectionDown and list.expandSelectionUp (for #1023)
alt click to open to the side
do not include directories in data transfer
compare selected command
introduce doubleSelectionContext
pass in the selection as an array of uris as the second argument in the context
fix: change default keybinding of cursorColumnSelectUp to ctrl+shift+up on Windows
multiple selection drag and drop inside workbench
fix #41322
dont optimize for travis
open to the side use new openEditors sideBySide api
open to the side multi select first cut
drag and drop multi select first cut
reveal in finder adopt multi select
copy path adopt multi selection
share getConfirmMessage
deleteFileAction handle multiple stats to only confirm once
copy file action adopt multi select
explorer: delete and move file to trash respect multiple selection
explorer: multi select with keyboard
explorer: multi select with mouse
fix #16852
Add log uploader command line util (#41318)
Explan callback logic/why its a bit convoluted
update comments.
update piecetable insert method signature.
Extract CR/LF validation method.
Extract createNewPiece method.
refactor, remove repeated computation.
remote - unhook providers on dispose
remote - less readdir calls
editor service: allow to open multiple editors at once side by side
Add optional id property to the tree item
fix opening urls as files
API: Add resourceUri property to TreeItem
Register content provider (again) (fixes #40557)
improve open url handling
fix bad cast
some when condition polish (#41388)
more fixes for #41374
copy path command for all elements that have a resource
:lipstick:
Don't set TS completion entry details when passed a zero length display parts
[ext/yaml] add indentation rules configuration
fix #41363
Add option to control width of the line cursor  (#41169)
format benchmark output
remote - use etag-check to prevent repeated loading
Add benchmarks for Save, Replace, Random and Seqential edits.
Run hygiene in a dedicated Travis job
progress
More
remote - better reads
move auto test helpers out
wait for calling restore, not for finishing restore, workaround for #41322
some more todos
fix  #41207
test
always quote args for PowerShell; fixes #39530
fixes #41347
Use node_modules.asar if present
Check url fix
remove console.log
fixes #41145
remove done todo
fix buffer log
buffer spdlog calls in main until singleton
commands use precondition for enablement
fix npe
commands in explorer now support alt commands, no need for the warning
Commands resource proper computation
fix #40114
fix weight for "open to side"
list.select should not register on CtrlCmd | Enter
fix #41196
fix more issues
fix broken "open to side" with mouse
Pre-support for backeted property completions in js/ts
Move escapeRegExp to own function
rename benchmark getLineContent
fix #37005
Revert "disable failing CR test cases temporarily for custom build. will revert later."
benchmarks
add ICommandAction#precondition, #41103
remove ICommand#precondition, #41103
Remove incorrect HistoryNavigator test case - Doesn't test what it describes. 'adding an existing item changes the order' covers this. See https://github.com/Microsoft/vscode/commit/c84be6409a0e515f19ce71ff2c0582b5cec9732d
fix an issue with fs events, #13182
fix #41298
Clarified documentation for Position functions
protect '--status' against customized 'ps' command; fixes #40660
üíÑ
Add note to differentiate btw TextDoc & TextEditor
vscode-xterm@3.1.0-beta2
Mark TS optional fields with ? in suggestion list
Revert includeExternalModuleExports for now
Update to latest TS 2.7 insiders
Save off full ts completion entry
disable failing CR test cases temporarily for custom build. will revert later.
use uri.isUri
contextMenuService.onDidContextMenu
cleanup
fixes #41174
:lipstick: feedback
Touch (x) to close tab doesn't work anymore (fixes #40616)
fix #41272 for explorer
remove unused event
fix #41272
Adopt list commands for editor's "Find References" peek UI (fixes #21692)
Adding message about collecting CPU and memory information under Windows
Proper reject promise when ps fails under Windows
fixes #41273
:lipstick:
Revert "workaround #41268"
explorer: only enable paste file when file is copied
Update copyright year to 2018 (#41088)
workaround #41268
fix #41151
move piecetable logic out of text buffer
üíÑ Indentation corrected.
Open link action should support multiple selections.
fix wrong linestarts
Ensure getPostion returns valid value.
getRangeAt parameters are start+len, not start+end.
Get Value in range should normalize line feed.
Update CR Count.
vscode-xterm@3.1.0-beta1
Hide extension list in issues under <details> tag, #41008
Don't deepClone config every access
Move terminal instance config listening from service to instance
normalize line feed.
Special case rendering of @param in TS hover and completion items
Extract getTagDocumentation
Rename typeScriptMain -> typeScriptServiceClientHost
Move LanguageProvider into own file
Move goToProjectConfig into commands
Simplify CachedNavTreeResponse api
Don't return promise from onReady in TS service client
Don't store promise on `RequestItem`
explorer: better root dnd
menu actions: respect alt key when pressed
Add basic test for queryBuilder.file - would detect NPE fixed in c4065a8ba5261456338f850a37e67732d98bf57a
Remove cast; organize & rename new code
tweak snippet creation & customization #13182
Renames and simplifications
Go through an implementation switch for ITextBuffer
tweet feedback button - make it hideable (fixes #7893)
Encapsulate ITextSource in ITextBufferFactory
Introduce ITextBufferBuilder
Move interfaces to model.ts
show global snippets atop, #13182
composite bar: when a new composite is activate make sure to automatically deactivate previous one
permantlny delete file when alt pressed in explorer context menu
fixes #40870
smarter SnippetFile#select, #13182
improve error logging...
fix grouping in config-snippet-picker, #13182
Rename
Remove any form of hash computation from ModelBuilder
explorer: only pass uri as a context
allow code-snippets-files from extensions, #13182
Reduce usage of `var`
Rename MirrorModel to MirrorTextModel
Move computeIndentLevel to TextModel; renames
Move TokenMetadata to modes.ts
Simplify IIdentifiedSingleEditOperation
fix order
fix NPE in quick open
:lipstick:
adopt ITextBuffer
safe point
safe point
Pull in latest C# grammar
Remove unused code action enum and mark edits as always being a workspaceedit
Use actual set for SupportedCodeActionProvider
Extract SupportedCodeActionProvider into own class
Move reset logic out of Promise
Make startService private
Move forked ts server process into own class
temporary bring back old command id
less use of prepareActions method
markdown - put a group to actions for editor/title
adopt fileResultsNavigation in debug callstack
use the revealFileInOS id
more fixes for commands in editor title
fix grouping, #13182
Rename IModel to ITextModel
add global snippets and create action to configure action, #13182
fix #40910
Extract model types out of editorCommon.ts
dispose repl editor model when not visible
use better group for "close" related actions
add schema for code-snippets-files, #13182
remove duplicated command revealFileInOS
snippets - add missing name when missing desc
use commands for editor title context menu (for #40910)
fixes #41097
menu service test: use ID for unit tests to not clash with search.contribution
expect snippets for different scopes/languages from a single file, #13182
slight color tweak for light theme
commands: special group for search
Eliminate extraneuous model interfaces
Rename Model to TextModel
Make parameter non-optional
Move ts server log directory into vscode logging dir
:lipstick:
:lipstick:
Use code action class for TS quick fix provider
Use https link for SO in issue template
Mark a few fields in ExtensionMemento as readonly
Initial terminal screen reader support
only send breakpoints on file changed, not on decoration changed
add Snippet#scopes and SnippetFile#select, #13182
set resource context to be the root if clicked on top level
fix compare with save action
fix open in terminal command
fix compare commands
Introduce ITextBuffer
#40483 Add user snippets line in the cog button
debug: better handling of selection changes in call stack view.
Simplify editing code
fix terminal commands
tree: scroll position is 1 if scrolled all the way
another test for #40289
Remove TODOs
Extract common logic for adding a new adapter in exthost
Move new CodeAction Api from proposed to vscode.d.ts
Remove all PTYSHELLARGs from environment
Add region markers for Markdown (#40312)
Update js/ts grammar
Allow alt+backspace in terminal/bash to delete word
Switch all schemastore.org URLs to use SSL. (#40737)
Improve comment
so long happy holidays
Warn that terminal exited when showExitAlert is false
Remove language constant from dimmed monokai
only hide message box
Support "(file path)", line x links in terminal
Use key instead of keyCode
vscode-ripgrep@0.7.1
vscode-xterm@3.0.0-beta3
Allow alt+F4 to close window in integrated terminal on Windows
vscode-xterm@3.0.0-beta2
Replace xterm with vscode-xterm
Don't render terminals in the background
Use foregroundColor from theme for recommendation badge #40549
fix close editor actions
polish
register commands in quick open in order to get rid of unnecessery actions
fix file actions
code main - partition windows into subfolders
:lipstick:
cli - remove stdin argument properly
:lipstick: cli help format
More tests for file based recommendations
workbench: Adds actions for moveEditorToFirstGroup, moveEditorToSecondGroup, moveEditorToThirdGroup (#40635)
More tests for workspace recommendations
use TerminalConfigHelper instead
:christmas_tree:  SelectBox: First character navigation (#40874)
minor polish
fix broken workspace commands
fix tests and groups
Ensure xterm exists before creating WindowsShellHelper
add option to disable terminal exit alert
allow for problem patterns that address whole files
fix typo
Support terminal bell
Upgrade xterm.js
Remove log
fix spelling of issues to issue since "report issues" can't be found in the command palette
Improve some comments, fix merge
fix test case
Add an option to display minimap to the left.
workbench: Adds 'Show Code Version' Action
Remove GOOGLE_API_KEY from term env
Dispose of terminals on shutdown, not willShutdown
node-debug@1.20.2 (nvm feature)
codeBlockRenderer only used to return thenables
docs: rephrase
fix: remove unnecessary line from config
Invalidate tokens correctly
Move more tokenization related methods out of TextModelWithTokens
dnd - add more data transfers to open editors
Remove unused code
:lipstick:
Option to disable Touch Bar controls and leave control strip (#38333) (#40692)
Extract text storage to its own class
fixes #40674
debt - leverage new "include" property for settings
Register action for "Search: Collapse All"
Remove LineTokensIterator
[html] catch exceptions in handlers
[css] catch exceptions in handlers
markdown contribute to 2_navigation
remove scope.EDITOR
select for compare context
set folder context if single folder and click outside of tree
fix group names and auto save context key
:lipstick:
clean up context keys
better protect against failing custom request
Support log grammar for log.* files
actions: properly pass the resource to commands
Missing icons in activity bar (fixes #40531)
Clean up in Output panel: - Do not create a channel if not registered
clean up
try to get rid of Scope.VIEWLET and Scope.PANEL
find actions to commands
copy and paste to commands
Reduce usage of old ViewLineToken
use protected save lines
:lipstick:
Disposing of inputs is taken care by the workbench editor
Retire ViewLineTokens: introduce memory-friendly SlicedLineTokens
[js] update request-light
[json] update request-light (fixes #39344)
move file to trash as command
rename command
new folder command
Align shape of LineTokens and ViewLineTokens in preparation for merger
Use an abstract text resource editor instead of real resource editor
Use a different id for log viewer editor
fix tests
Add tooltip on links in markdown preview #30201 (#40572)
Add return to top button to extension detail webviews
Extract markdown preview scheme to constant
Extract DiagnosticSet collection type
Extract getLabel in TS workspace symbol provider
:lipstick:
tree model: trie
more tree model tests
#40368 Add more logs to uninstall flow
Bump node-debug2
new file command
Use node file watcher to watch the log file
update grammar: use github token
[sh] update grammar
[ts] update grammar
[js] update grammar
[go] update grammar
[bat] update grammar
[css] update grammar
move menu registration to fileActions.contribution
:lipstick:
save as admin - back to previous solution for now
more workspace actions to commands
Reduce usage of ViewLineToken
more workspace commands
[seti] Update to jesseweed/seti-ui@188dda3 (2017-12-13)
open folder setting as command
#40575 Remove action in the output panel. Instead provide a command to open the log file
#40575 Do not auto reveal last line in log viewer
Introduce ViewLineTokens
Resolve left-over TODOs
workspace commands in explorer
#40575 Command to open log viewer passing file
#40575 Implement log viewer for showing output channels in the editor
Windows: improved saving as admin (#40573)
windows - update ico of file watcher
first argument to commands should always be an uri, and the second one a custom context
:lipstick:
add todo to remove logging later
dialogs - add logging
hello tree my old friend
issue: #40373 default setting for panel location
Tests for #36792
Further improve schema construct
Remove temp variables
Apply comment filter when wrap with abbr fixes #40471
Update size
#40196 Check if rotating file has changed to know if main file was reset
Update the size
#40196 - Output channel backed by file - Supporting rotatitng files - Handle the case when the model is being resolved from file - Fallback to BufferredOutputChannel on error
explorer: more command contributed via menu
ups
get rid of ExplorerViewersActionContributor
execution: properly contribute actions to explorer
explorer: do not use contributable action providers.
commands: register keybinding with the command
commands: use proper ids for file commands. Tie shortcut with the command registration
close commands: also register keybindings
Move constant out of loop
Rename and add type to schema
Better schema construct
commands: fix labels and fix open terminal action
editorWithResourceFocusedContext
Revert "Delay the start-up of the shared process (saves ~40-90ms on startup)"
autoSaveNotAfterDelayContext
fixes #32681
clean up
holiday fixes
Use current window id and time stamp for creating an output logs folder
Cannot read property 'language' of null (fixes #40484)
Be resilient while creating output writers
Loosen remote settings search score cutoff
Use case-insensitive environment vars on Windows
Validate workspace recommended extensions against the marketplace (#40270)
Update the PHP grammar Now it breaks out the html grammar into its own file
Cache code-line elements for md scroll-sync
Remove redundant property lookup
De-prioritze auto-imports
Remove empty jsdoc
#40196 Do not dispose writers as they block reload
#40196 Do not drop logger on shutdown as it blocking reload
#40196 Dispose output writers on shutdown
cleanup
happy holidays!
#40196 Check active panel before revealing last line
#40196 Cap size to 30 mb with 5 rotating files
updating the typescript extension codelens to cache requests for the navtree (#40402)
updating the md scroll sync to use binary search over linear search (#40401)
#40196 Write into model directly when a message is appended
#40196 Read the content since last read by passing position to file service
#40196 Refactor Outputservices - Listen to model added/removed changes to start/stop watching the file - Clean up and simplify implementation
#40196 Use files in the background for storing content of output channels
#39638 Clean up Output services
Simplify code
[json] missing Promise.reject
[themes] ANSI, not ansi
Need help with several theme color props: #40419
Add custom placeholder for new terminal command
Add workbench.action.terminal.newInActiveWorkspace command
fix build
introduce some order into commands
saveAll actions as commands
fixes #40439
better layering
Require to use "-" when reading from stdin (#40424)
fixes #40411
files - add a method to read content from a position
Adopt new TestRPCProtocol; renames
config resolver: use slash for relativeFile as before (for #40256)
fileCommands: some restructuring
null check for 'workbench.colorCustomizations' (for  #40329)
properly handle git uris in getOpenRepository
improve git.autofetch suggestion
Absorb upstream fix for #39789
fix #40333
array coalesce tests
admin - do not show warning on windows for now
Removed dependency accidentally added to package.json and yarn.lock.
Conflicts are now displayed when defining a new keybinding.
node-debug@1.20.1
Update editor.lineNumbers description
Make double-clicking icon close window
Add hover transitions
Make framless window draggable on LInux
Remove unused import
Titlebar fixes for linux
Make Linux compatible
Remove unnecessary console.log
Use consistent casing
Use async in completionItemProvider resolve
Clean up useCodeSnippetsOnMethodSuggest
Defer TS completion item resolve of range
Support isRecommended property for TS completion items
Split emmet abbreviation tests
Add git debug step commands to skip terminal by default
Update mainThreadTerminalService.ts
open editors: more actions to contributed commands
compare actions via menu and introduce first context keys
fix  #40307
:lipstick:
:lipstick:
:lipstick:
Add option to disable sourcemaps for those in a hurry
Do not write .d.ts files to disk, as they are not needed there
actions to commands: register some via menu service
remove unecessary `| undefined`
git: fix opening deleted file
fixes #36885
[html/json] set language server debug ports
[json] increase validationDelay
[html] increase validationDelay
just move a single repository up
Remove unused code
MainThreadLanguageFeaturesShape, #40169
Also ignore special characters for comments
Update Ruby indent pattern
open editors: introduce contributable menu id
use CommandRegistry directly, skip keybindings
fix order of registration
tiny rename
registerExplorerCommands -> registerEditorCommands
debt  - less TPromise<any> in extHost.protocol
debt  - less TPromise<any> in extHost.protocol
debug: restart debugging should not reuse session id
Only accept WorkspaceEdit,  #34664
#40169 Remove reference to custom marshaller
Don't use custom marshaller for ext host init data (#40169)
remove custom marshaller
Log stdout if JSON.parse fails
find git in LocalAppData and PATH, win32
debounce and queue decoration request, fixes #40210
Revert "only listen after getting data once, #40210"
#40169 Remove usage of custom marshaller
fixes #40261
Add cp936 encoding (for #39664)
Slightly better "logger" comment
Pick up TS 2.7 insiders
Remove unused import
Basic test for workspace recommendations
Distribute paste to multiple cursors only if it originated with the same number of multiple cursors (fixes #16155)
Keep track of what text got copied from what cursor and use that information when pasting (fixes #4996)
Remove usage of CustomMarshaller for DebugService (#40169)
move more actions into commands
rename method (fix typo) #40210
hook open/close repository events to decoration change event
"No Country for Old Electron"
save as admin - handle windows hidden files
fixes #40156
fix exthost commands issue
only listen after getting data once, #40210
fix null ref, #40169
file - allow to overwrite as admin
save as admin - handle case for readonly files
ExtHostCommands, MainThreadCommands, #40169
fix #40209
ExtHostLanguageFeaturesShape, #40169
remove URI usage from SCM API protocol
fix bad uri duplication
Remove action to open the channel in editor
file - make sure to check if file is write protected again after running chmod
#39638 Use id if label is not available
Don't rely on custom marshalling for $setLanguageConfiguration (#40169)
fix git submodule decoration
#39638 Action to open channel in editor
Use the async version of Electron's dialog API (#40211)
git submodule decorations
clean up
Maintain clipboard metadata across editors (fixes #5639)
revert submodule change with update command
ExtHostEditorsShape, #40169
ExtHostFileSystemShape, #40169
cleanup stage/unstage submodule changes
- Dispose inputs when not used - Clean up creating input - Clean up showing channels
ExtHostDocumentsAndEditorsShape, #40169
native json for exthost/mainthread-workspace, #40169
a little language features, #40169
Try to make window draggable before load
Refactoring extensionTipsService
Make frame show by default on Windows
Change Language Mode doesn't search by language ID (fixes #39921)
Adding test for integrated terminal font-size overflow
Mark static ID properties as readonly
Use properties instead of getters for ID
Support odd-indent sizes for jsdoc on enter rules
clean up
Log output - Implement Buffered output channel and file output channel in output services - Allow to register a file output channel - Register log files output channels
More ExtHostLogger tweaks, and remove logLevel syncing code, for real investigation later
Make logger API proposed, add jsdoc, and match some extension API conventions better
Update appinsights module fixes #40095
Remove extra new lines (#40160)
fix integration test, #40169
more native json, #40169
Lazy load vscode-textmate (#40147)
more native json, #40169
watch: fix minor reveal issue
debug: introduce explicit focusedThread
more UriComponents in mainThread-land, #40169
yet more UriComponents in mainThread-land, #40169
more UriComponents in mainThread-land, #40169
debug: better reacting to events in watch view
Reduce usage of CustomMarshaller (#40169)
don't bubble no provider error
migrate MainThreadDecorations, #40169
Remove usage of CustomMarshaller for MainThreadDocuments (#40169)
Remove usage of CustomMarshaller for MainThreadEditors (#40169)
some jsdoc for #34664
explorer: initial actions to commands transition
align snippets/selections and clipboard lines, #40153
Have the marshalling kind be a property of the proxy identifier (#36972)
more submodule support, diff colorization
Rename RPCProtocol.get to RPCProtocol.getProxy (#36972)
Add RPCProtocol.getFastProxy (#36972)
remove console.log
debug: do not support link detection in long strings
Further simplifications (#36972)
Simplify AbstractThreadService usage (#36972)
Simplify RPCProtocol usage (#36972)
Allow for messages not using marshalling to flow through rpcProtocol (#36972)
Improve shape of RPC messages (#36972)
Add better typing for RPC messages
Mark messages that need reviving (#36972)
fix NPE from #40110
debt - convert our dialog API use to async (for #39536)
:lipstick:
Load fast-plist async.  For #40147
add CLIPBOARD snippet variable, #40153
separate lines with \r\n on Windows
detect submodules, make them a part of status
debt - remove appReady from timerService, use perf-marks
debug: no need for 1px to be specified in border
debug: first set active session then fire event
lazy load gc-signals #40147
:lipstick:
debt - remove last public writeable field from timer service
Menu: keybinding Cmd+O does not show up in File menu (fixes #40145)
Bump node-debug2 (loc)
Move extension logger to extension context
Add ExtHostLogService with logger and lazily created log folder per extension
Support link with line number in md editor
Remove logging of TS Server start error message
Make name clearer
Clean up inferred project config logic
Remove unnecessary transparent border
Use es2016 for JS/TS inferred projects by default
Support extension-less links in the markdown preview
test-integration.bat must check the errorlevel after each 'call'
Use SnippetString to construct TS method snippet
Update javascript jsonc
reset focus context key when the webview is disposed (#40130)
Rename PUBLIC_GITHUB_TOKEN to GITHUB_TOKEN for use
Skip parsing docs when emmet suggestions are disabled
Remove log
More positioning changes
Make titlebar render correctly on reload
More consistency
Make window resiable from top
Make sizing consistent with Windows
Use setting, standard titlebar
removed console.log
Run configurationResolver on terminal env vars (#40059)
Update request-light in JS extension
Relax vscode-nls deps
Update to latest C# TextMate grammar
Remove trailing closing paren in --status OS version
load sudo-prompt async
update node-debug package-lock
Simplify OverviewRuler (fixes #38418)
node-debug@1.20.0
input box length warnings
Simplifications in OverviewZoneManager (#38418)
Simplify OverviewRulerZone (#38418)
Dynamically import xterm.js
Update extHostTypes.ts
debt - more timer service debt
Inline OverviewRulerImpl (#38418)
debt - more timer migration
debt - remove before/afterLoadWorkbenchMain, those are already perf-entries
fix not reachable code
Remove editable range code (fixes #38633)
allow to run CLI as root when running --write-elevated-helper
:lipstick:
open editors: reuse elementCount
Remove diff2.ts (fixes #38490)
:lipstick:
fixes #40079
fix yarn build issue?
fixes #39880
lipstick
Allow to save files that need user elevation (fixes #1614) (#40107)
running extensions: option to disable extension
#40098 Updated jsonc version dependency
eng - less WinJS promise construction
eng - less WinJS-promise construction
check standalone editor also on tfs
Double click in watch panel triggers to add a new watch expression
debug: do not display debug status when there are no launch configs
debug: add configuratino do not trigger suggest if launch.json just created
eng - less TPromise use in tests
Move license entries to root OSSREADME.json
Add "(Administrator)" suffix to window title when running as administrator in Windows (fixes #19707)
show generic progress message when running save hooks, #40030
withProgress should return the promise/thenable of the nested task
fixes #40060
status - add process.argv to output
fix #40078
log failures of on-will-save-listener, #40030
scm.diffDecorations config setting
adding pid to --status, implements #40055 (#40058)
fix merge conflict
short names windows processes, fixes #39895
Carefull with autoimports as it doesn't handle imports order.
Test case for #39750.
Point to correct keybinding in smoketest
Move that along with the others
Update regexp
Handle Ruby auto-indent issues
Remove some unused terminal code
add logs to extension management service
Add logs to extension management service
Error code while scanning extensions
adopt lifecycleservice in integrity check
fixes #22769
Do not filter unisntalled extensions again. Scanned extensions does it already
know the extension id when calling on-will-save, #40030
move autoRepositoryDetection implementation
more detailed error code while extracting and install
Mark an extension as uninstalled when Uninstalled and do not delete it.
debug issues to me
:lipstick:
align amend commit message preserving
layout: second vertical sash should be hidden if panel is not visible
panel part title: tweaks to the size
cleanup 'scm.enableDiffDecorations' setting
debug: fire on did change breakpoints event when exception breakpoints change
fix promise issue
Open editors view: render drag image same as in tree
fix #35098
fixes #40014
fix #38772
eng - don't use TPromise in dialogs api
eng - use Thenable in progress service
eng - less TPromise
fixes #40022
eng - no TPromise in save participants
eng - less TPromise (mainThreadMessageService)
open editors: keep focus when dragging editors across groups
dnd - make sure to stop bubble
eng - less TPromise in extHostCommands
explicitly set --noEmit
add monaco-compile to travis and appveyor
improve cross window tab dnd (support dirty, restore UI state)
editor picker: open while going through results (fixes #34324)
Enhance tab (hover) styling (fixes #30901)
debt - call shell.dispose and forward to workbench when window closes or unloads
perf - pass over window ID instead of accessing via remote call on startup
make sure that revert never fails whenc losing (fixes #39885)
fix #28153
debt - clean up some todos and migration code
:lipstick: uri
add unit-test for  #39893
Make positioning of icons same as otherWindows apps
Make icon sizes independent of zoom
Update issue_template.md
eslint-compact to use absolute pathnames
Expose border style for debug toolbar
Remove more formatting changes
Remove formatting changes
Remove debugging statement
Implement button actions, make maximize icon change
Add hover states for titlebar
Revert vibrancy changes, cross-platform support
#38854 - search viewlet should respect seedSearchStringFromSelection setting
Bump node-debug2 to fix Microsoft/vscode-node-debug2#156
Immediatly stop counting when MAXFILES is reached
Update JS/TS grammars
Use switch for ipc-message
" -> '
fix: #39738 Replaces starting tilde with home directory when entered in git clone prompt
append messages instead of resetting them in multi-line patterns
Update to new state if there is no current state
Retain sizes on refresh
Open define keybinding widget on dbl click
smoketest: data migration tests :fireworks:
align hight of reference search widget, fixes #36563
fix #39873
Open master for business
fix smoketests
runtime extensions: some null checks and remove .icon
OSS
depend on 0.0.7 of inspect-profiler, #39898
Add warningLength to SourceControlInputBox
Add character countdown to commit message input
OSS
Disable flaky TextSearch test - to investigate in #39894
Remove unused import
Revert c585fc65b72295513f4428ccead6d80ae93c0ac3
fixes #38245
fixes #35801
fix #39594
fixes #39616
[json] catch and log exceptions
fixes #36887
#37677: Add tracing in the extension host around activating extensions
fixes #37810
fixes #39870
cancel snippet mode when errors happen. this prevent repeated errors, #39594
fix #39865
fix compile
fixes #39798
fixes #39817
add logging to narrow down #39594
fixes #39856
move list event filter up
fix npe
fixes #38298
less log spam on startup
fixes #39855
log - avoid double log to dev tools
Update comment
fixes #39203
fixes #39577
fixes #39815
debug: fix incomplete message
fix #39713
Revert "fix #39713"
change distro
use classes for breakpoints API; fixes #39639
remove plural from comment
Skip emmet when open tag is not closed even when no parent node #35128
terminal scroll cursor set to default
changed distro
:lipstick:
Use id for markdown open document link command uir
Test task for Windows console program fails unless the task is of type shell
Add .nvmrc file
fixes #39623
fixes #39668
logging perf
update spdlog
fixes #39806
fixes #39805
clear VSCODE_LOGS in terminals
explorer: if all roots are local resolve them in parallel
fix #39518
make ext API SourceBreakpoint use Location; fixes #39647
fix bogus breakpoint position; fixes #39665
fix #39569
restore old ext host debug port logic, #39569
improve layout performance
Add check for empty key
fix #39713
update spdlog
do not inline data URIs into title (part of #39710)
update spdlog
fixes #39690
[html] update service (for #39712)
better workaround for #39510
Revert "workaround #39510"
fix error
fix #39685
runtime extensions list ux polish
fix spdlog file handles in windows
fix #39780
Change 'marker regions' to 'regions' only
fixes #39721
running extensions: reuse extension-action
workaround #39510
#37643: getWordAtPosition ignores tokens, except in the mixed language case
#37643: Avoid allocating LineToken's when iterating
fixes #37559
fix #39770
close editors - use mru list
fix #39522
remove profile for 5secs command, #39679
#38609 Show cancelled message on cancel
fix #39722
#39422. Add an option for disabling global find clipboard.
Remove the onEnter rules from html in php as they will never get applied in a php block #39142
Allow resize open editors
fixes #39723
Use proper path check for TS/JS refactor on windows
log disposing of logger service
edit breakpoint in context menu
#39659: Fallback to noop log service when spd log service is failed to create
Add the newly supported emmet preferences in package.json
log - do not use colors on windows
log - less spam on startup when files do not exist
fix spdlog service not closing file handle on reload
:lipstick:
status - guard against EPERM errors from workspace stats
Allow decorators to change font-weight and font-style.
add category, #39679
fixes #39689
check log level before sending log to spdlog
fix bad log
debug: do not send breakpoints like crazy
fixes #39667
fixes #39669
enum descriptions for debug.showInStatusBar
Add onDebugInitialConfigurations and onDebugResolve to extensions schema
fix #39664
fix #39654
fix #17552
Support local install of Git Bash
fixes #39624
debug: activate every time you have to pick the adapter
fix missing reference
more tab layout tweaks
remove unused GDPR fragments
Update vscode-debugprotocol in yarn.lock It was updated in package.json but not yarn.lock
remove shudown event
remove extensionKeymapRecommendations:open event
node-debug2@1.19.2
remove UserIdleStart and UserIdleStop events
remove zoneWidgetShown event
remove workspace.settings.unsupported.* events
remove search.useExcludesAndIgnoreFiles.toggled event
remove search.useExcludesAndIgnoreFiles.toggled event
remove search.toggleQueryDetails and searchResultChosen events
remove revealInDocument event
Update distro
remove replace.open.previewEditor event
remove replaceAllInFolder.action.selected event
remove replaceAll.action.selected event
remove replace.action.selected event
Colorize TS/JS function property names the same as method names
remove problems.used event
remove problems.collapseAll.used event
remove openExternal event
Move markdown providers into own directory
Extract inner functions in loadMarkdownExtensions
Move markdown extensions logic to own file
Move markdown TelemetryReporter to own class
:lipstick:
Extract loadMarkdownExtensions
Finish moving commands over to own file
Continue moving over commands
Extract show source command to commands
Start moving markdown commands to own file
removing disposingInput and resolvingInput events
fixes #37376
remove disableOtherKeymapsConfirmation event
fixes #37324
composite bar: fix broken overflow math
Only register TS providers for known schemes
Move file schemes to own file
Add better error message
Add missing key for profile extension host menu item
Cache extension manifest data
Validate extension manifest cache lazily
debug: opacity: 0.5 for virtual properties
Bypass execution policy to gather CPU load
fixes #39528
log - handle unexpected error in log
log - main side :lipstick:
allow log service in cli process
fix logs formatter
improve main logger
[html] update service
[json] update service
[css] update service
Add ps-win.ps1 to out build scripts
fix #39557
Windows work for #39262
Extensions: error handling
Improve error handling while installing extensions
node-debug@1.19.7
use DAP@1.25.0
fixes #37497
fixes #38389
add test skeleton, #38623
:lipstick:
fixes #35031
:lipstick:
Use element as handle when element is a string identifier
implement custom revive (cuts parse time in half), #36972
fix bad merge
fix build
fix main log service calls
cleanup main log service
log: use local dates for log folder names
open editors view: fix initial open editors size
use global log service
Escape label while generating handle
try to detect terminal encoding when reading from stdin (for #6161)
fixes #13049
Revert "Specify the UTI types for files in the Info.plist"
Towards caching extension scanning result...
GDPR: remove wildcard telemetry event
Introduce & Adopt ExtensionScannerInput
Adopt async/await in scanExtension
set VSCODE_PID only from first instance
fix #38852
Window freezes when opening multiple dialogs (fixes #39527)
Copy OnEnter rules from html to php #39142
Fox #39340
node-debug@1.19.6
add selectedText to variable substitution
Update quietlight-color-theme.json
excluded -> included, and property is included by default if 'included' is unspecified
Refresh only top level elements
Improved HTML atrribute coloring
Update quietlight-color-theme.json
Update Quiet Light theme's JSX
Add unit test
Restrict creation of TS client to known schemes
Also apply manged file contex to jsx files
Use const
Use electron webview tag instead of WebviewElement
add first cut of proposed breakpoints API; fixes #23188
Include common word delimiter (fixes Microsoft/vscode-azure-account#22)
Support '../' and '..\' for specifying relative paths in search, fixes #38144
Mapped languages shld be excluded if in emmet excludes for expand cmd #39369
Report specific error messages to user (fixes #39061)
Remove unused import
Absorb upstream fix for #38766
Mark onDidChangeActiveTextEditor can fire with undefined
workaround #39303
onDebugInitialConfigurations and onDebugResolve:type activation events
adding support for *dev-question labels
touch: dispatch on END event
[html] use proposalprovider for region snippets
[css] use proposalprovider for region snippets
touch: prevent default and stop propagating if found an appropriat target to dispatch
get toolbar width only once
parts: do not layout if not visible
open editors view: only react to non structural changes if a structural refresh is not scheduled
code-ps: rename renderer => window and change cli to "-s, --status" (for #39262)
Add launch configs to the workspace state
Show only top ten file types
open editors view: no drop feedback when dragging outside open editors
open editors view: fix get index for groups
Open editors view: allow to drop on the editor group
openEditorsView: better size computation
open editors view: better index computation
print extension errors to console
[html] update service
enable proposed api usage via product.json
Environment service: sync read access to UUID file on startup (fixes #39034)
Save dialog in new workspace window has wrong current directory (fixes #39336)
Skip failing quickopen test
Bump node-debug2
Update webview on theme change using variables instead of setting entirly new css each time
Update ts grammar
Don't force creation of serviceClientHost from ManagedFileContextManager eagerly
Introduce basic lazy type to encapsulate the idea of a lazy value
Implement IPreferencesSearchModel
Tree views: Use paths as ids
Remove unused import
Use const instead of let for loop
Hide TS commands when not in js/ts file
Setup basic typescript.isManagedFile context
Move standard TS commands to own file
:lipstick:
Extract a few functions in TS activate
Move TS/JS language descriptions to own file
Move TS extension activate to own file
Remove unused "Range"
Remove 'openAnything' event
Don't show ts status bar entry for non file: uri schemes
Do not fill in optional/rest paremters for TS Snippets for function calls
Simplify snippetForFunctionCall
Convert isValidFunctionCompletionContext to use async
Add literal match highlighting to NL settings search
Catch up with recent change for extensions (fixes #38726)
always show dirty indicator in tabs
Delay the start-up of the shared process (saves ~40-90ms on startup)
perf - load the loader as file, not as script, saves ~15ms
Report issue in english
open editors view drag and drop
list: drag and drop reveal elements as dragging over
fix #38687
Added environment service mock to query builder tests
openEditorsView: plugin in contributed context menu actions
"Report Issue in English"
open editors view: use a list
Add and adopt IExtensionHostProfileService
use zero-width space character to separate * and /, #38464
Revert "use backslash when writing pattern samples inside jsdoc, fixes #38464"
work around slow configuration reading, #39329
Tilde expansion for files to include and exclude (fixes #36792)
set log level action
Log levels
[html] don't show closing tag proposal with "html.autoClosingTags": "false". FIxes #34435
[php] folding snippets
Define log level enum in spdlog d.ts
rename foldRegion to foldMarkerRegion
Intoudce log level env variable
[scss] add region support
[less] add region support
cleanup old logs
Tweak ShowRuntimeExtensionsAction: remove keybinding, move to "Developer:" group
[css] region snippets
[bat] region snippets
[java] add region snippets
flush logs on exit
[coffeescript] snippets for regions
cleanup spdlog when building
Actions to show logs in workbench
properly propagate VSCODE_LOGS
ps - basename folder for less PII
Add code-ps.ps1
use bug octicon
show runtime errors
ps - better output
remove blue color from save profile action
save extension host profile in editor title
have window id for renderer and exthost processes
Only warn once about `workspace.rootPath`
hook up log service in shared and main processes
ps - shuffle things around
scope the logs per date folder
added workspace statistics to '--ps' (#39326)
ps - better window resolve
[jsonc] add tsconfig/jsconfig
clean up telemetry events
tab shrink: do not reserve room for close button (for #15048)
Localize rated by message  #39337
Add reviewer count on ratings #39337
Make sure TS service client host also listens to onDidChangeConfiguration
Don't access config API for every TS/JS marker
Improve profiling animation, open editor when done
Add code folding #region support in coffeescript
Stop Profile button on Status bar
update spdlog
extension host profile in context menu
Remove PII from extension host profile (if running in built version)
Add context menu to save profile
add spdlog
activation times format
more labels less colors
do not use icons, just labels for clarity
UI tweaks
Render the real data
Move types to v8-inspect-profile
report extension issue
ExtensionHostProfiler fixes
fix compile errors
Render an svg timeline for the profile info
Implement startExtensionHostProfile
log ext host commands, ext hsot scm
drop global log service
log decorator
more :lipstick: ps
ps :lipstick:
ps - show window information
Render fake profile times
profile stop inverse icons
report issue button skeleton
add `runtimeErrors` to extension status
Update fontInfo.ts
tweak PS output
ExtensionHostProfileAction in the editor title area
Add API sketch for profiling the extension host
Add code --ps (#39302)
use logservice in shell
further sketch log service
fixes #39271
fixes #39211
Trim whitespace from command.stash
Improve wording when launching from sudo
Small UI tweaks
Render messages
patch more of process
Change icon based on startup or not
Render activation cause on hover
expose workbenchState context key
sketch up log service
use realpath
Have an activation reason
measure
Less loops (fixes #34033)
Render activation times
Get a basic list of running extensions
don't use progress service but status bar service
profile extension host for 5 seconds
Setting to always show Source Control Providers
more changes for #16690
More jsonc adoptions
fix list double context menu on windows
update classifier
stdin - ignore if a file path is passed in to open
Switch node2 to package-lock.json - see #38947
Mitigate #29896, #36294.
Adds "Accept All Current" to command palette
Avoid eager start of search process (fixes #38235)
Report errors while updating extension as Updates
Try using tsc path next to tsconfig for ts build tasks
Remove unused imports
Improve obsolete extension failure message
Surface editor part size in event to avoid having to recompute it (fixes #38556)
Put auto import label first in suggestions
Update messages (#38372)
more friendly bot messages
Pick up TS 2.6.2
Defer RichEditBrackets creation (#38659)
Also treat `default` as code in jsdocs
Additional labels
stdin - ignore tmp files from recent history
associate code-workspace with jsonc
remove more code (for #38414)
Show remote branches in 'git pull from'
Revert "Show remote branches"
Show remote branches
remove the gulp-tslint.d.ts
#38414: Remove some more unused code
git.enabled as a resource setting
cleanup git commands enablement
fix git commands
fix #39085
Cmd+Q no longer works in this case (fixes #39191)
Added typeings for gulp-tslint
updated tslint.json
add a suggest memory and select completions based on that,  #22839
Closing tabs using mouse wheel click turns cursor into auto scroll (fixes #16690)
Allow to shrink tabs instead of keeping a minimum width (fixes #15048) (#39176)
Allow reading from stdin (fixes #6161) (#39177)
linting
Change Twitter character limit (#39109)
findFiles broken in Insiders? (fixes #39158)
fixes #35615
fixes #39173
fixes #38963
remove extra layout call
debug: remove onDidSelectFunctionBreakpoint event
debug: polish issues in breakpoints view
breakpointView: minor polish
Separate json and jsonc (fixes #3641, fixes #26830, fixes #19992)
fixes #25354
fix bad diff labels for untitled inputs
Absorb latest changes from emmet helper
Untildify for Windows (or any platform)
more logging (for #39125)
macOS: try to flush localStorage earlier before quitting (for #39125)
fix NPE when updating tabs
list: prevent recursive splicing
Quick open: bad results highlighting in this case (fixes #39123)
support for deleting env vars; another fix for #38510
node-debug@1.19.5
prevent potential infinite loops
node-debug@1.19.4
support for deleting env vars; fixes #38510
breakpointView: no multiple selections
breakpoint list: react properly on keyboard and mouse events
fix #38880
list: multipleSelectionSupport
expose list keyboard events
export list mouse events
use graceful scoring when possible, #15419
when the 'query' string is getting longer it's save to score afore scored/filtered items only, #15419
list: allowMultipleSelection
Git: "Discard Changes" dialog button defaults are flipped (fixes #31006)
inline listStyler in WorkbenchList widgets
Debug: views do not refresh when not visible
cleanup ListService
polish test
breakpoint view: render input box for new function breakpoint
Remove unused code #38414
prevent sync access to install source on startup (for #39034)
debug: breakpoints  view use a list
CLI Process: missing machine identifier (fixes #39044)
storage2 => state
:lipstick: around machine ID
fix #36491
resolve machine ID in main side and pass through (#39045)
disable auto fetch
debug views: cleanup a bit usage of instantiation service
Let the internal API only talk CodeAction, #34664
debug: remove not needed telemetry
debt - remove named saveparticipant
update gulp atom electron
fix #35325
fixes #39077
node-debug@1.19.3
Formatting
basic select to bracket; unit tests
fix #39050
debt - more unused telemetry removal
debt - remove unused telemetry
Introduce TreeViewsViewletPanel which is soon to be destroyed
debug model: keep breakpoints sorted in the model
main - some renames of services
fixes #36785
storage => main storage (storage2)
:lipstick:
remove more unused code, #38414
set outdir in tsconfig.json
remove ossreadme.json from debug. fixes #38947
more cleanup of file storage
storage - cleanup and tests
debug views: move each pane into seperate file
debug: move views to seperate files
fix #39001
remove PII and better filename when profiling a product build
redo `--prof-startup` with the new protocol based profiler, also profile extension host startup
add and use writeFileAndFlushSync
fix #38588
remove some telemetry events that are not needed anymore
Add custom titlebar
Add comment for removing obsolete extensions first
Add confirm command
#36148. Remove indenation rules for c/cpp
Tabs: dragging tabs around causes the cursor to flicker a lot (fixes #38753)
Add XHR timeout handler
fix handleANSIOutput so that it can handle more than one graphics mode in one escape sequence
debug: if one process verifies a breakpoint it is veriifed
touch: do not prevent default and stop propagation
update bower registry URI
touch: listwidget and sash register nicely
Setting position of underline
#38609 Remove obsolete extensions before removing outdated
Size down SCM discard icon
Added selectToBracket()
add comment
touch: we need to get all the dispatch targets on the start of the inertia event
add node-debug's package-lock.json
Make underscore chars more visible in links
dom listener: fix passive default value
touch: global event listeners are passive so they can be cancled
addDisposableListener support passive flag
touch: fix initialTarget setting
debug: breakpoints only update size if max is not inifinity
Keyboard Shortcut to Skip Preview Using Quick Open (fixes #30530)
debug: reduce usages of instantiation service
clean save participant telemetry
input for #38414
disable new-release bot
remove timer2 in GDPR annotation
Clean up (#38324)
rename console to activeDebugConsole; fixes #37279
#37524: Faster WorkbenchKeybindingService._getResolver
debugViewlet: listen on pane size changes to update the breakpoints max size
touch: remove prevent default which causes warnings. And respect initialTarget also for the move event
Remove unused code in extensionsActions #38414 (#38813)
glob - fix tests on windows
added a warning when user tries to commit, and there are unsaved files
ops initialize array
fix tests
debt - change glob to not require paths.relative anymore
Load extension host after workbench is running phase (fixes #38323)
introduce extensions registered event (for #38323)
touch: simplify and only use one Gesture which has global listeners
fixes #38796
touch: introduce SimpleGesture
[json] descriptions for package completions
clarify resolveCompletionItem, #26622
#38664: Create MinimapCharRenderer only when needed for painting
fix #38818
fix #37367
#38414: Remove unused code
Reuse last commit message for amend
fix broken name for "new file" in explorer
debug: append the * configuration provider at the end of resolving providers
No feedback when startup fails because other instance runs as admin (fixes #38858)
#37401: Allow both before and after inline decorations on empty lines
Have InlineDecorationType make it to viewLineRenderer (#37401)
remove getId() (for #38414)
Switch to last tab with cmd/ctrl 9 (fixes #36567)
Bump distro for settings search URL
Update settings search param names
fix tests
Don't send refactor requests when there is no selection
update GDPR comment
Respect timeout option in XHR-based requestService. Add timeout to remote preferences search
Add timeout for jsdoc navtree request
Add strictNullChecks for emmet #38820
Update a few interfaces for TS 2.6.2
Pick up TS 2.6.2 insiders
Remove duplicate tmlanguage grammar files
Mark most private static constants as private static readonly
Mark public static fields readonly
Target es2017 for markdown extension
Restrict where jsdoc completion is shown
Update script (#38324)
Emmet strict mode move, part 2 (#37840)
Use `-addfile` instead of `-addpkg` (#38324)
fix scm groups count badge
fix tree traits
list: incremental dom access
scm viewlet: delta changes
introduce ISequence
use ISplice in scm
sequence module
Prompt recommendations only when uri schema is file #37569 (#38666)
Align needs-more-info comment with others
DAP@1.25.0-pre.0
debt - move explorer to electron-browser to avoid our faulty paths.relative() method
Persist icon theme data as well (for #38683)
debt - avoid paths.relative in search
ActionBar: only add touch listeners if on a touch device
remove more unused code, #38414
remove unused code, #38414
validate composite bar pinned memento state
fix #37562
fixes #38674
fix #37568
fix #20182 again
use backslash when writing pattern samples inside jsdoc, fixes #38464
Have InlineDecoration keep track of its type (#37401)
deco - prevent stale markers
fix mocha tests launch config
Dragging a tab can show visual glitch when tab not fully visible (fixes #18733)
about - add mnemonic for copy button
:lipstick:
Help -> About text can't be selected (fixes #37608)
fix tests
fix leaking focus tracker listener
Remove BoundedMap
Implement LRU Cache on Linked Map
fixes #38628
Report label as error not taskName
fix tests
:lipstick:
debug: do not use scope ranges for hover since they are unreliable
introduce and use getBaseLabel()
Add telemetry for remote search falling back on local
Tests #35363
refactored code around middle click folding
implemented recursive folding toggle when folding decrator is clicked with middle mouse
added yarn-error.log to .gitignore
Remove unused code #38414
Use keydown instead of keypress to close terminal
Correct spelling of Message in reloadMessaage
cache icon data optimistically like color themes
fixes #38501
Update CONTRIBUTING.md (#36673)
Add production Hubot to webhooks
Update out-of-scope message
Update locker.yml
#38625, create hover widget lazily.
Resolve completion items on click accept
#38625, create parameter widget lazily.
Don't try resizing find widget when it is not visible
#38625, create find widget lazily.
Remove unused code (#38414)
Update vscode-ripgrep bc 0.3 was a bad publish
debug: start debug contributions in later phases
fixes #38370
Localize large number badge string
create debug hover lazily
create SuggestWidget when suggesting is triggered not sooner, #38625
fix missing scm resources
Remove usage of EventEmitter (#38417)
Reduce usage of EventEmitter (#38417)
<=> (for #38414)
bloat - remove unused code
use node.js path#relative (for #31667)
document --inspect-extensions and --inspect-brk-extensions
remove unused code
More code removal
Simplify logic for displaying thousands
:lipstick:
alert when git is missing
fix ListView.splice references
Update Number badge to show hundreds in full, show thousands with k
empty view: dispose listener
menu: remove mnemonic clash with 'v'. SaveWorkspaceAs does not need a mnemonic, not a common command
fix in-order event delivery, #38522
monokai: improve selection/word colors (for #36376)
Add way to disable markdown preview security warnings in a given workspace
Use requestService for remote settings search
Treat jsdoc `@example` tag body as code
Treat tsx as jsx in markdown preview
Move previewer into utils
Respect setting to disable settings search feedback button
Add server context to settings search telemetry
Use "natural language" instead of "fuzzy" everywhere
Enable locker bot
Clean up TypeScriptReferenceSupport
Switch a few more TS providers to async
Build ts extension to target es2017
Update label
Configure bot commands
update new release label
Update vscode-ripgrep to fix issue with yarn
Git branches sorted by committerdate, latest first.
Show quick pick when ts returns more than one code action on a suggestion
remove event emitter from focus tracker
button: missing dispose
remove event emitter from button
remove event emitter tests
remove more event emitter from tree
fix tree tests
contextview no longer an eventemitter
remove last @ts-ignore
Remove bulk listeners (#38417)
Reduce usage of IModel.addBulkListener (#38417)
Remove ViewModel._isDisposing
remove EventEmitter reference from event.ts
remove usages of EventEmitter from tree
more cleanup (for #38414)
Reduce usages of IModel.addBulkListener (#38417)
Windows: Open with... list shows logo with blue background (fixes #38353)
make order gurantee optional for now, workaround for #38522
Reduce usage of model.addBulkListener (#38417)
Simplify cursor event listening
fix error when a symbol provider doesn't return a result
remove package.json electronVersion
introduce build/lib/electron
remove unused locals
update distro
fixes #38439
deep clone the launch configuration since we make edits to the object
remove more code (for #38414)
[yaml] add yarn.lock
remo unused code
[themes] remove migration code (for storing themes in config)
json: remove unused functions. For #38414
Clean up code according to 38414
remove unused code, #38414
remove some unused bits, #38414
ensure in-order delivery of events inside events, #38417
adopt yarn in scripts
use yarn in extension scripts
Remove more unused code (#38414)
:lipstick: clean tfs builds
improve preinstall script
fix nsfw for gulp watch
do not execute actions from menu when window does not have focus (fixes #11928, fixes #25907)
Provide for using settings search url from vscode-distro, make relevant settings invisible
#37613, bad layering of file size check.
write panel position to local storage
Drop EventEmitter, #38417
Drop EventEmitter in ReferenceModel, #38417
Remove unused code for #38414
remove some unused code (for #38414)
ActionBar: drop event emitter
sash: ditch event emitter
[themes] remove unused code
fix tfs windows build
:lipstick:
use add instead of install
themeService: improve configuration event handling
Remove unused code (#38414)
Remove references to EventEmitter
tfs: yarn cache dir windows
update tfs builds to use yarn
use yarn in appveyor
cache yarn in travis
Using 'new' event in diff navigator, #38417
travis: cache apt
use yarn in travis
remove unused code
remove unused code
use vscode-chokidar
remove unused code
remove unused code, #38414
npm > yarn
remove unused code, #38414
remove some code, bring some code back
debt remove some unused code
Ensure Replace box's width when showing
omit stderr from yarn deps
Error: Lifecycle cannot go backwards (fixes #38325)
Have `editor.autoIndent: false` be honored when pressing Tab (#38261)
Improve test-integration.bat
Trigger default settings change only after updating the model
fix test-integration
perf - schedule tabs layout at next animation frame (for #34745)
perf - prevent 2 page layouts in one method (for #34745)
fix dependencies
clean up test scripts, bring back html server tests
update vsce
update gulp tsb
fix #38294
perf - remove duplicated mkdirp method
perf - remove unused code
add type annotation
Fit promise error in fileServices
ensure all cases are handled
Use octicon lightbulb for fuzzy search toggle button
layout: keep size before maximized in storage to be preserved across sessions
debug: pass in name when checking if debug start is enabled
debug: option to control when to show debug status
#38329 Always compute most relevant line offset
debug: simplify reacting to breakpoint decoration events
upgrade vsce
gulp-tsb remove from yarn
move down to 2.0.4 based gulp-tsb
use patched gulp-tsb to fix @types compilation mess
Reapply #38328 with fix
fix build error
more compossed twitter icon
adopt latest vsce
upgrade vsce
Dock context menu is useless (fixes #38199)
stop reading only when 0 bytes that been read, #37541
fix  #38331
Remove old/unused scripts
Simplify (and remove some customization) around line numbers as intervals
Limit the line length of the minified code to 1024 to make the chrome dev tools work with workbench.main.js
:lipstick:
Simplify renderLineNumbers implementation
:lipstick:
[folding] add test for level folding & regions
Uncomment tests again
fix vscode gulpfile to use yarn to discover dependencies
`code --add` breaks if executed repeatedly (fixes #38138)
bloat - remove unused css
RunningForABit => Eventually
revisit object.derive and ConnectionError (fixes #38234)
strict null check issue in cssServerMain
run scm contributions after running (#38286)
restore accidenllty deleted test files
dispose task listeners on session end
debug: start listening on task active event earlier
fix bad tabs title scroll issue
fix npe in fileservice
User Settings editor tab crashes when re-opening editor (no-provider error) (fixes #38267)
debt - fix sync-then-behaviour in polyfill-promise
:lipstick:
log close() errors (for #37541)
delay NodeCachedDataManager a bit more (for #38080)
build/monaco/yarn.lock
remove @types/semver from yarn.lock
update css|html|json dependencies
update language client to 3.5.0
remove shrinkwrap references
yarn import css|html|json server
fix language servers dependencies
Make IFileService.resolveContent() faster (#38074)
don't send event for nothing, #38301
Adds "copy on select" feature (with setting)
adopt lifecycle phases for workbench contributions (fixes #38080)
Cannot read property '0' of undefined (fixes #38190)
Only show fuzzy results with a score of >.5 of the first result's score
Remove alts prompt from settings search feedback page
Persist fuzzy settings search enablement
Improve telemetry for settings search - fix Microsoft/vscode-bing#34
Don't include @types/semver since we already have a local copy
yarn: missing yarn.lock files
yarn: replace most shrinkwrap files
fix extensions
fix postinstall
remove npm shrinkwrap
Tests for inspect in MR workspace
remove clone
yarn: initial commit
fixes #38244
introduce and use LifecyclePhase.RunningForABit (for #38080)
:lipstick:
startup - convert more to workbench contributions
Make v8-profiler, css-parser URI http-proxy friendly (#38181)
startup - convert workspacestats to workbench contribution
cleanup workbench startup
allow to register workbench contributions per phase of instantiation (#38080)
bloat - remove unused code
fix mnemonics in file menu
debug: cleanup how breakpoint decorations are handled
linting
Startup: delay spawning file watcher until workbench is running (fixes #38230)
debt - rename clone to deepClone
debt - remove unused deepClone
Freeze contents from inspect and keys call
Tests #38215
Render selections on top
tabs: push pixel dimensions to control
tabs scroll via touch: make sure to update scrollbar properly
fixes #38197
fixes #38186
switching to noUnusedLocals : for #37212
clone configuration when needed
fix tslint in hygiene
store marks and measurements flat, only create objects when needed
Cannot read property 'length' of undefined (fixes #38193)
Uncaught TypeError: Cannot read property 'toString' of null (fixes #38191)
fix no-unexternalized-strings rule
Tests #38200
fix #38185
Add config option to disable multicursor collapse
Add 'folderMatchFocus' context key and keybinding for "replace all in folder" action - #31260
Expand query details by default if 'use excludes' button is in the _non-default_ state
Add cwd to TerminalOptions for extension API
Update monaco-editor-setup.js
Add firstline match for Makefile
update classifier
Removed unnecessary comma.
cleanup from 1f4ec25
Format extensionsWorkbenchService.ts
Mark some constants are readonly
Support for wiki links in the markdown editor
Optimize strings.lcut - fix #34665
Use current selection instead of range for refactoring
Remove `ICommonCodeEditor` (#37834)
Reduce usage of ICommonCodeEditor (#37834)
Add logging snippets for Javascript & typescript (#37889)
Use async for findLanguage
Mark more fields as readonly
Don't create duplicate typingsStatus
Mark a few more fields as readonly
Use initilizers for some wire protocol constructs
Add jsx-tags to languaegModeIds
Use Uri to identify file in Diagnostics manager
Clean up validation update logic
Move language configurations to own file
Remove unused not function
Remove unused count and countToArray functions
Remove unused function and action interfaces
don't spawn `git` on Windows
node-debug@1.19.1
git rename: missing update
:lipstick:
:lipstick:
:lipstick:
git: cancel clone
#37212 Remove unused locals
fix keybindings editing test
Rename getConfiguraiton to getValue
#35996 Use getValue in ResourceConfigurationService
missing compilation
[shell] update OSSReadme
[folding] compute parents on demand
Reduce usages of ICommonCodeEditor (#37834)
use -z --stdin when running check-ignore, qualified guess for #37857
lock documentdb
[scss] update grammar (for #36923)
[less] update grammar
[ts] update grammar
[js] update grammar
[java] update grammar
[fsharp] update grammar
[coffee] update grammar
[shell] switch grammar to atom/language-shellscript
:lipstick:
Compare with Clipboard (#37841)
Alt+F S no longer a single action (fixes #38006)
Bump node-debug2
add split pane to preferences editor
:lipstick:
Don't generate an apt Packages file
Capitalizing contains
compile stuff
Do no react on decorations changed event when triggering it yourself fixes #37880
fix compile error
git image diff: fix index
Welcome page needs to update Python extension id (fixes #37745)
config - fix issues now that config if frozen
git: data uris
multi-root folders: excluding dot files from a folder makes it invisible in file explorer (fixes #37899)
Make lineNumberInterval setting a single type instead of a union type
Remove log statements
Add option to show the line number for the current cursor position
No need for this setting here
Use line number instead of line index for proper scroll behavior
Add line number interval setting
2017/11/7. Final localization merge for October update from Transifex.
FIx compilations
Move back to using walk on complete config as getValue for multiple keys is slow
Bring ICodeEditorService to /browser/ (#37834)
object - don't use recursion when freezing
Consolidate EditorExtensionsRegistry (#37834)
Reduce usages of editorCommonExtensions in /common/ (#37834)
[html] more strict null preparations (but still disabled, due to dependencies)
Reduce calling clone
implement data editor input and hook up to resource viewer
only call getValue when needed, #37539
Update taskTemplates.ts
[css] adopt strict mode
set noEmit on tsconfig.monaco
[folding] avoid regions array
[folding] move indentRanges out of textModel
[folding] optimize mouse click listening
[folding] undefined access on HiddenRangesChanges
[thems] remove default token colors
Add platform info in code --version #37793 Done (#37824)
fixes #37835
workbench.action.reopenClosedEditor should work with preview editors (fixes #37849)
Extension tests cannot use test frameworks that call process.exit (fixes #37708)
Only render search results when viewlet is visible - mitigate #37818
Use as for casting in a few more tests
Prototyping new CodeAction API (#36316)
vs/editor/contrib is /browser/ by convention (#37834)
Configure for release
Remove credentials code (fixes #37822)
Clean up (#37212)
Enable "search.useIgnoreFiles" by default (fixes #37211)
Encapsulate TS/JS diagnostics in class
fix targetoffset in quick open to be proper
Reduce usage of ICommonCodeEditor (#37834)
Renames (#37834)
Move mockCodeEditor to /browser/ (#37834)
All /contrib/ tests are /browser/ by convention
node-debug@1.19.0
Remove @ts-ignore (#37212)
debug: cleanup breakpoint event reason
fixes #37493
registerEditorAction accepts the ctor (#37212)
Remove usages of @editorContribution (#37212)
Remove usages of @editorCommand (#37212)
configuration resolver service: respect diff editor input when resolving file
fix #37539
fixes #37506
label/description
Remove usages of @commonEditorContribution (#37212)
Remove usages of @editorAction (#37212)
git: raw buffer
use a stronger gray for unimporant debug configuration attributes
set phase to Restoring *after* kicking off restore, #37541
wip: git: send pngs as data uris
panel: improved icons
promise: make sure as() returns promise like and fix errors
fix #37702
fix bad typing
:lipstick:
scm: move placeholder format to the outside
fix #37505
debug: Make sure to append output in the correct order by properly waiting on preivous promises
extract event helper and add tests
get rid of joinCreation in favour of lifecycle service (for #37541)
remove ts-ignore
fix tests
jsdoc
fixes #37809
Clean up unused code
perf - add marker when starting workbench
remove `extensions` tag from bot
debug: remove more unused locals
debug: remove unused locals
rename - show messages inline when editor is still the same
any -> string
fix #37808
debug: cleanup open on session start
Enabling the 'noUnusedLocals' compiler option for extensions
layout: reziePart use editorCountForWidth
rename tsconfig-file
skip deb and rpm publish if release is frozen
debt - @tsignore
Toggle Tab Visibility (#37735)
Don't register a new TypeScriptWorkspaceSymbolProvider for each mode, only for each language
Don't register TS/JS code lens providers twice
Restore having both javascript.goToProjectConfig and typescript.goToProjectConfig
Remove some blank lines
Move remaining command to use command classes
Use command manager for refactoring
use vscode namespace for imports
Use command manager for completion item provider
Start moving emmet extension to strict mode (#37740)
Restore whitespace in emmet test
Move code action provider to use new command manager API
Use map to hold command registrations
Adding a command helper class to start cleaning up command registration
Remove const declarations
Use async for openOrCreateConfigFile
Move interfaces for showInformationMessage  into function
Use shared snippets for js and jsx, and ts and tsx
use import mocha instead of <reference> for some tests
Include buildNumber in remote settings search query
region folding for css
Use `as any` instead of `<any>` for casting in a few places
Remove some unneeded <any> casts
Add instructions comment to top of setting search feedback page
Stricter branch name check for exporting configuration.json in build
Uplevel xterm.js
Rename to openDebug
Enable noImplicitThis compiler option
Remove unused members
Remove unused generic types
Remove unused properties
Remove unused generic parameter
Remove unused types
Resolve merge conflict around unused locals
Remove unused interface and IEditorService member
Remove some unused private members
Remove unused locals in sash
Remove some additional unused locals and write only members
Remove some unused locals and write only members
Remove unused generic type
Remove some unused locals and types
Add additional no unused checks for merge-conflict extension
Add additional no unused checks for php extension
Clear tsignores under suggest folder #37212
Add noUnusedLocals to emmet extension #37212
Clear tsignores under extensions folder #37212
tslint input for #37212
fix compile
Rename to openDebugOnStart
debt - remove some ts-ignored things
don't unneccessary fire event when calling ContextKey#removeValue
Enabled the noUnusedLocals and added @tsignore
restore editor first (for #37541)
add a new lifecycle event `Restoring` which is set when the editors/viewlets are being restored (start). also in the lifecycle service replace `onDidChangePhase` with `when`
tslint5 adoption - fix semicolon rule
update to tslint5
Speed up `registerTextMime` (fixes #37521)
inline electron references (#37766)
debug: process.session.root can be undefined
undo late extension host launch,  #37751
Explorer: loading progress shows without delay on startup (fixes #37622)
Add setting to specify auto-ingesting settings search feedback
Enable noImplicitAny and noUnused in js extension
Remove Python for upcoming rename (#37745)
Start moving html ext to strict mode compile
Move css extension to strict
Move PHP extension to strict mode
Move vscode-api-tests to strict
Use const where ever possible in JS ext
Move python extension to strict
Move python extension to strict
Enable strict compilation settings in git extension
Enable strict mode in JS extension
Split some long function sig lines
Enable strict in a few more extensions
Set strict mode in a few extensions that already have strictNullChecks
Use class for NullTelemetryService
Format main.contribution.ts for ts 2.6.1
Use clear on Callback map
Remove warn form ITypeScriptServiceClient
Remove logTelemetry from ITypeScriptServiceClient from
Rename to use standard casing for TypeScript
Use ITypescriptServiceClient in task provider
Uplevel xterm.js
rename startupTimer to performance, support mark and measure, drop promise support, add more marks to slowly phase out old timers
ticks - don't send timers2 anymore
Update label #37717
Support to report TS style checks as warnings (#37616)
fix format
debug: use ids to manage breakpoint decorations, not their line number
fix #36087
fix #37637
move crash reporter to electron-browser (for #37610)
Layer breaker: browser/dnd (fixes #37611)
Removing Disabled Extensions while Issue Reporting (#37705)
fixes #37676
start extension scanning late, #37541
fix #37701
fix compilation error
Add a method to check if an extension is enabled or not
throttle editor change events on startup
ticks - add raw/csv data to startup perf action
api - document glob support
glob - be stricter about syntax
tst - prevent more recursion
glob - support [!...] syntax
fix #9413
editor dnd: no feedback for last editor in title
:arrow_up: iconv-lite@0.4.19
:arrow_up: jschardet@1.6.0
fix #37675
tst - make forEach use just one array
Cannot read property 'isFullScreen' of null (fixes #37674)
Touch: hard to switch editors by clicking into title when tabs disabled (fixes #37671)
Add buildNumber and new alts to settings search feedback
Add missing sources of extensions installs in telemetry
Make npm logs less verbose in CI
Uplevel xterm.js
Bump version to 1.19
Update distro hash
Install dependencies in the end when installing recommendations to avoid collision
Separate CollapseAll and CollapseDeepestExpandedLevel actions
Get latest recommendations from distro
Avoid error when recommended ext not found
change l10n key of status bar's Indentation action
Update a few more vars to const in js/ts snippets
Don't ship tsserverlibrary.js
add a monaco-tsconfig.json which is just about the standalone editor
Closing tabs using mouse wheel click turns cursor into auto scroll (fixes #16690)
fix #37596
removed un-necessary property on terminalInstance
debug run: ctrl + F5 on mac
fix too many unresolved root issue
Update distro for oss tool output
OSS tool output
Revert changes to view name so that cached data still applies
Disable fuzzy search in stable
Localize npm.packageManager
Print progress output from gulp hygiene
Don't apply editor font to inline code tags in hover
Send includeExternalModuleExports on ts completions request
Modernize js/ts snippets
better fix for broken explorer: use delayer
Add a null check in
use oction-dot for bubble #37228
decorations for bad roots
explorer: do not do refreshes in parallel
fix test failure, #37228
avoid slow getConfiguration-call, #34282
show generic tooltip on bubble,  #37228
change label of indentation action in status bar
don't forward toJSON-calls, #37484
Revert "fix #37484"
fixes #37245
fixes #37491
icon: ensure icon refresh on macOS for new stable icon
panel: fix large panel maximize icon
fix #37484
fixed quotes (for #31197)
[coffee] update grammar test
xterm element mouseup handler no longer needed
opacity tweak, #37228
#34937 Consider built in extensions
better max panel width / height computation
fixes #36867
fix #37468
fixes #36751
fixes #37432
"search.useIgnoreFiles" as resource setting (fixes #37291)
Show the extension recommended in the pop up on top #37418
Indicate path of auto import in completion item
Handle projectInfo failures better
#34685 Collapse search results one level at a time
[html] update server
[css] update server
[json] update service & server
pref - don't use recursion for tst#set
perf - don't use recursion for get/findSubstr/findSuper
polish error message; see #35340
fixes #35340
fixes #37160
render a bubble as roll-up badge
fixes #37333
any cast to satisfy ts
Exclude more folders from searching
improve git isIdle implementation
fixes #31197
panel: do not draw outline on focus
panel: fix focus bottom border
fixes #36424
debug: show status on debug change state, not sucessful launch
only remove unused css
fixes #37226
fix color description
fixes #37326
fixes #37121
fixes #37233
fix #37331
fixes #37229
fixes #37255
tweak extfs tests
api - remove add/removeWorkspaceFolder (for #37301)
also control icon appearance with `git.decorations.enabled` setting, #37299
add git.decorations.enabled setting, #37299
fixes #37260
fixes #37253
fixes #37353
fixes #37256
fixes #37355
fixes #37358
fix #37403
panel: proper icons for left right
fixes #36730
fix #37365
panel: show keybindings in title hover
node-debug@1.18.3
fix it for good
debug quick open: auto focus select launch config
fix bad return
npe in scm world
warn about uncaught exceptions inside LazyPromise
fixes #37332
Windows: window on secondary monitor does not restore at exact position (fixes #36122)
hover polish
Panel layout: take into account the 1px border when layouting
layout: restructure min / max height / width getting
separator messages with bullet, fixes #37235
:lipstick:
Workbench explodes when renaming folder (fixes #37243)
fix #37231
remove winreg
Warning not shown in readonly settings editor for commands such as copy paste (fixes #37360)
Cannot read property '1' of null (fixes #36332)
unintuitive name "explorer.confirmDragAndDrop" for "move" operation (fixes #37265)
useExperimentalFileWatcher: false by default
Add seti icon for webp files
Revert workaround for duplicate install missing types actions
Support source on JS/TS import completions
Locks vscode smoketest typescript to specific version
Pick up TS 2.6.1 final
Make sure we use a lowercase module type in generated jsconfig
Explorer: double clicking on sash no longer sizes explorer optimally (fixes #37247)
Restore smiley
fix compile error
layout: fix editor count for width / height computation
fix min panel width computation
layout: when resizing give priority to source of resize
remove sqm tests
fixes #37251
Enable 'insiders' label for endgame (#34432)
layout: simpler math
layou: fix sidebar width computation
fix eslint tslint tasks
fixes #36956
layout: fix some layout logic
Going from untitled to saved workspace should not show message again (fixes #37303)
"Copy Path" action puts lowercase drive letter on Windows (fixes #37302)
tweak confirmation dialogs
debug status fix padding fixes #37280
copy from terminal doesn't work #31902
fixes #37191
Lazy load emmet helper to ease startup #35120
Don‚Äôt exec command when every selection is sorted
Update recommendation text #36650
Sort all selections, not just primary
october smiley
add tsserver version property to every event (#37066)
Set size for extension views in split view
Rename to make intended diagnostic ordering more clear
Make casing in playground table of contents consistent
Add JavaScript type checking to playground
Add CSS color picker mention to playground
Add refactoring via extraction to playground
Add better confirmation that settings search feedback was sent successfully
Change color when theme changes #36650
update css service (fixes #36883)
use vscode-textmate@3.2.0
Show msg when recommendations are already installed
Emmet completions in script of type text/template
Always show 'Add workspace folder...'
update keytar to 4.0.5
update keytar to 4.0.5
Always show 'Add workspace folder...'
Support Finnish in terminal
some more menmonic use in dialogs
fix tests
Adopt new terminal API
reset lang id key
tst - compare strings inplace instead of allocating
deco - align git color names
fixes #36605
fix formatting
fixes #36213
fixes #36326
fixes #36331
perf - avoid one event on model creation (isInOrphanMode)
Revert "dont read XDG_RUNTIME_DIR"
bubble up errors from workspace add/remove
Provide a parameter to bubble up the error while adding/removing workspace folders through API
debug: better previous state computation to only fire update state in case of an actual change
debug: null guard
Provide additional workspace API to add/remove workspace folders (for #35407) (#36820)
fix #36563
cancel snippet mode when editor contents got flushed, #36329
fixes #36984
when parsing escaped fwd-slash don't sallow next token, #36715
fix test failure
:lipstick:
more use of resource.dirname()
add tests for kebab case, #36089
fix FormatString when no value matched, #36089
debounceEvent
quickfix - simple debounce
deco - fix broken folder/file labels when multiple decorations apply
Increase find options reveal timeout (#36682)
confirm: ignore checkbox when canceled
increase panel selectbox min width by 10px
ext install pub.name
make model-add-case fast, #35996
:lipstick:
disable automated smoketests
add multi root docs link to message
Add platform check to tests that check global clipboard
Add tests to test globalFindBuffer read and write
Update emmet helper version to absorb bug fixes
Use same color as install button for recommendation indicator #36650
Replace another label-less action - #35735
Specify the UTI types for files in the Info.plist
Move workspace rec related logic to its own view
Show workspace recommendations only if workbench is not empty
#35735 :lipstick:
Simular wraparound mode in the terminal on Windows
Configure recommendations in mulit root mode
Revert use of version label to show recommendation #36650
Fallback to /bin/bash when /bin/false is /bin/false
Allow renderer to catch up before initing terminal dimensions
Add a key deletion Windows test
Consolidate env merge logic and add tests
Write settingsSearchBuildId to exported config instead of 'version'
node-debug2@1.18.4
Show Install All in split view for recommendations
Add feature for findWidgets to pick up from the global buffer. Add platform checks
Add setting to disable auto import suggestions
Use async for openTsServerLogFile
Remove extra error logging for compilerOptionsForInferredProjects
Extract getCompilerOptions to own method
üíÑ
Convert dispatchEvent to  switch
Extract getTsServerArgs
Remove mainWorkspaceRootPath
Uplevel xterm.js
Set "module": "CommonJS" for default jsconfig
Skip sorting recommendations when fetching with reason
Marking markdown settings scopes
Ensure we use the proper formatting settings for js/ts
Move format / validate enable to window settings
Move tsc autodetect to window scope
Use resource setting for jsdoc completions config
Use window scope for implicit project config
Make sure we use resource specific config for TS/JS formatting options
Make sure we dispose of formatting config manager
üíÑ
Get completion config for resource
Use async for completion item provider
Update Install Recommendations Action as per review comments
Send last line terminal data when process exits
node-pty@0.7.2
Rename settings search build number per Microsoft/vscode#36948 comment
don't use array, sorting, and array#delta but map and set, #35996
Revert exposing problems context menu
git: use resource configuration
Improve error message when task provider fails
revert disabling no-unused-variable rule
Reject promise when there is a parse error in a package.json file.
Show provider errors in output panel.
Use label instead of taskName
#36623 Pass null resource to get resource configuration value for any resource
git: Sort RepositoryPicks to rank active repo first
#36623 :lipstick:
[css/html/json] use fixed version of language server/client
Updated atom coffeescript tmLanguage file
ExplorerDecoariontsProvider
Implement #36623
If a task is missing the problem matcher the promise will never complete, so we need to have a workaround
don't report progress when running check-ignore, #36754
compute more minimal edits in format save participants, fixes #30010
remove unused argument, #30010
Do not report error statistics for extensions not mapped to gallery
debug: reuse Source.getEncodedDebugData
remove debugService.findProcessByUUID, there are alternative ways to do this
global is undefined while polyfilling the native promise
Move js/ts language mode ids to own file
Set checkjs when generating jsconfig if javascript.implicitProjectConfig.checkJS is set
Remove unused functions in ts extension
Move versions status details into class
More small cleanups in ts extension
Add setting to disable experimental decorators in implicit js projects
Remove extra space in definition providers
Clean up definition provider
Update remote search query fields for new API
Store metadata for Local extensions - While installing from zip - While syncing with gallery
Provide an ITerminalInstance.onLineData internal API
Anchor patterns (fixes #36438)
do not corrupt debug URIs; fixes #32845
bring back the crowd favorite maximized panel action
deco - use correct/overwrite decorations in scm viewlet because the same URI can have multiple decorations
deco - allow to derive new decoration from existing decoration, add IDecorationData#source
Increasing timeout
Implement #36475
polish: get rid of extra filter call
minor polish
tests for #35357
smoke: fix screenshots
:lipstick:
tweak wording (for #31182)
panel: fix height of toggle more action
Store expansion state globally only when there are items.
smoke: multiroot
remove trailing ;
make createAndEnterWorkspace fit for any resources and optional name (for #35407)
smoke: fix localization
Make type property optional
#36033 Revert the related change
smoke: fix git
git: Throw fetch error
smoke: localization
smoke: statusbar
smoke: git
smoke: debug
fix sidebar width
manually track workspace symbols for later resolving, #36941
composite bar: remove unneeded OpenPanel action
git: Include GitErrorData in GitError.toString
expose splitview.onDidSashChange
[bat] region marker improvement (for #36911)
Activate emmet on * instead of type command #36575
Update bg and fg color of recommended label #36650
Log failure cases
Add experimentalFuzzySearchBoost so we can test changes to the 'boost' parameter in the search query
Compute buildNumber once
Add unique version number
wip: single application run in goddamn smoketests
[folding] fix for max folding regions
Don't cache indent level in ModelLine
tweak css for icon label overflow
Rename New Window action to New Empty Window
add codeSnippet-lazyness test, #36796
report bogous snippets only when developing extensions, compute codeSnippet lazy,  #36796
show message when entering workspace (for #31182)
Remove ITextModel.getIndentLevel
Improve check for cached line below with content
warn about bogous snippets only once per extension, #36796
Implement a batch version of getLineIndentGuide in getLinesIndentGuides
deco - fix selection color
Have the view ask for indent guides in batches
[sql] replace grammar
also use darker red for git deleted
git color decoration: a bit different colors for light theme
Add REM support
Add Region folding for bat
speed up getSnippets, getSnippetsSync, and updateSnippets, #36427
vertical panel: fix typo
[sql] switch to Microsoft/sql grammar (fixes #36853)
vertical panel: toggle maximized panel calls into toggle panel position for backwards compatibility
vertical panel: increase min panel size
indent ranges: use number[]
vertical panel: fix elipsis alignment
touch: allow to scroll through tabs via touch gesture
debug status: fully qualify name and do not hide overflow
indentRanges: no need for indent ranges
deco - simplify css
API: expose workspace.name property (fixes #36802) (#36803)
vertical panel: fix sidebar right layouting
deco - enforce via css that selected/focused items inherit base color
vertical panel: fix sidebar max value
deco - shrink description of file label more than name
deco - show '+9' when 10 or more markers exist
vertical panel: proper icons
do not expose addFolders/removeFolders as API from context service
:lipstick:
debug bugs to weinand
deco - priority
deco - fix styles cleanup logic
Especially account for VS Code in dom.windowOpenNoOpener
make sure error bubbles up
always make sure to start ext-host when entering workspace, even in error cases
fix issue with wrongly restarting ext host
workspace editing: allow to add/remove folder in non-workspace setup
another test (for #36810)
fix Keyboard dispatch help message typos
Enable click and open mailto links in Markdown preview (#36795)
fix https://github.com/Microsoft/vscode/issues/36854 (#36855)
Show recommended label in view and reason in editor #36649 (#36865)
Add support for macOS globalFindClipboard #11233
Open extension editor when user chooses to Install extension from viewlet
Trim recommendations #36649
Option to install recommendations from pop-up and workspace recommendations view (#36861)
Revert "Reverting hashservice"
Revert "Stop sending path in telemetry data as it isnt used anywhere"
Implement #34812
Remove whitespace fontStyle from monokai dimmed
Run json formatter on a few builtin themes
Show markdown security command in command palette when inside markdown preview
deco - disable cleanup for now
Remove optional argument, document reason for looking at args
deco - fix test failure
deco - show badge in scm viewlet when no icons are provided
deco - tweak padding
Stricter keyboard when rule
Remove flickering when jumping between highlights: Ignore cursor position changes caused by the jump
Style changes
Turn off new release label
[folding] fix test failures in textModelWithTokens.test
Remove the telemetry part
composite bar fix min width issue
vertical panel: use tmp hacky transform to get a inverse icon
layout: remove unneeded todo
layout: better min and max boundary computations
vertical panel: fix borders
vertical panel: react on changes from second X sash
remove ToggleMaxmizedPanelAction
Vertical panel: initial layout
vertical panel: add a secondary x sash to the workbench layout
vertical panel: action to toggle
deco - always use color for badges and allow for colored badges and normal labels
Remove telemetry related part of the PR
deco - correct overflow behaviour in open editor section
onEditorsMoved => onEditorGroupMoved
deco - make letter be a after-pseudo element
make workspace service fit to add a workspace folder with a name (for #35407)
API: expose debug console; fixes #36753
deco - use just a letter, not a badge
prevent null ref
[cpp] update grammar
[scss] update grammar
[rust] update grammar
[r] update grammar
[php] update grammar
[java] update grammar
[go] update grammar
[fsharp] update grammar
[css] update grammar
[coffee] update grammar
fix hygiene script
[folding] delete indentFoldStrategy
[folding] IndentRanges to manage indent ranges efficiently (for #36555)
:lipstick:
See #35972
smarter open/save picker default paths (fix #22697)
rename event.any to event.anyEvent
debug: noop when click on breakpoint with inrenal source and session is offline
Future-proof for next API
:lipstick:
Consider any two DefaultPreferencesEditorInput to be the same, to prevent opening more than one in a group
Implement new model editing changes on top of Sandeep's edits
Move convert function into MarkDownstring namespace
Don't treat regular string SignatureInformation documentation as markdown
Add some extra logging for TSServer start
Uplevel xterm.js
Enforce a minimum terminal font size of 6
improve DebugConfigurationProvider.resolveDebugConfiguration doc
Separete default settings model and default settings editor model so that the latter can reuse the former. Have a complete dipose cycle for all editor models
Increase timeout for search tests
fix function scope
improve touch support for editor groups (for #22523)
don't always listen to cursor changes, #36427
use correct namespace for registerDebugConfigurationProvider; fixes #36118
open workspace: option click to open in new window
fix missing NFC normalization
node-debug@1.18.2
ResourceGlobMatcher is reacting to all configuration change events (fixes #36478)
config change handling :lipstick:
:lipstick:
more tests (for #35572)
Make sure both composites are known to this composite bar in move
Add overrides to find widget toggles
use native promise, no async-await, no winjs promise, #36427
Introduce MultiCursorSession for easier state handling
fixes #36725
easy on the error message (for #36703)
add test ensuring getWorkspaceFolder doesn't fail on drive letter casing, #36221
Reduce SelectionHighlighter flashing when moving within the same word
more tests
fix too permissive search.exclude
Add BibTeX description to .bib filetype
Recognize the old prefs URI as a defaultSettingsResource, to prevent an error when upgrading with the settings editor in history
Pass filter flags correctly
SelectHighlightsAction also enters find widget state disconnection mode
Have Ctrl+D be disconnected from the find state when starting with a collapsed selection
disable crash reporter during smoke tests
Have terminal listen to fine grained events
Move logic to MultiCursorSelectionController
Move Ctrl-D related code from contrib/find to contrib/multicursor
Introduce MultiCursorSelectionController
Insert an undo stop when typing space (#34073)
Don't forget to push undo stops when executing edits (#36234)
Do not capture task shortcuts in terminal
Refactoring extensionsTipsService
Move xterm interface typings into module
Pull in latest xterm.js
Don't prompt for workspace when creating terms with <=1 folder
Refactoring extensionsTipsService
Remove duplicate code for applying a code action
Remove unused lines
Auto import dependencies when accepting a global suggestion
Stop sending path in telemetry data as it isnt used anywhere
Reverting hashservice
Added support for sorting multiple selections
Prototype TS Codefix commands (#35002)
Use NDCG query format in remote search feedback
Dont use hat for TS version
tests - more unique test folders
debug: show add config actions on debug quick open
Revert "disable smoketests"
compositeBar: smarter show of active composite
disable smoketests
Saving file after it has been deleted from disk saves empty file. (fixes #36573)
use play icon for debug
composite bar fix icon
Settings can be open more in more than one tab (fixes #36447)
decrease overflow width
compositeBar: always show active one
panelPart: null guard
fix #36431
fix npe
CompositeBar: relayout on panel open since different panels have different action bar width
introduce a new command for #26977
CompositeBar: Do not layout if not visible. Otherwise the size measurment would be computed wrongly
SelectionHighlighter should not highlight the exact same matches as the find widget
[folding] CollapseState -> CollapseMemento
[folding] Cannot read property 'getCollapseState' of undefined
fix global action background color
CompositeBar: fix overflow math
Increase slow test timeout
Avoid needless checks
More overflow checks
Renames
Avoid flickering by painting the overview ruler with colors in the same order
Bump find limit to 20k given all the perf work around decorations
Improve message
set files.useExperimentalFileWatcher to true by default
CompositeBar: fix ellipses in the dark theme
Tests for #36625
composite bar: fix drag and drop colors
remove unused file
tweak scoring to prevent match scattering
Simplify ViewModelDecoration
Query model for decorations only for visible model lines in the viewport (in contiguos visible model lines batches)
explorerModel: better isDirectory setting
use SetupMutex
CompositeBar: respect icon setting in CompositeActionItem
Approximate find matches in the overview ruler if there are a high number of results
Tweak the way find decorations are managed
More aggressive merging of overview ruler decorations
Encode overview ruler decorations in a number array
Move getAllOverviewRulerDecorations to IViewModelLinesCollection
:lipstick: add type
Add support for localizing ts errors (#36451)
Update settings to hold the endpoint and key, and remote the hardcoded endpoint details
Always dispose the default settings model, instead of caching it.
[foldig] fix for restoring folding
Tests for #33323
[folding] refactor fold/unfold (remove CollapsibleRegionsHierarchies)
Add prompt to try fuzzy search, when no local results are returned
fix ports finder for node.js 8
Revert "smoke: let's catch the sucker"
Handle integer overflow around delta in the IntervalTree; also, make it highly unlikely that it would ever happen
[folding] fix restoring collapse state (for #36555)
Pull in xterm.css changes that resolve .terminal naming issue
CompositeBar: badges
fix insider hardcoding for smoketest
fix sizes of elements in panel title
more specific terminal panel css selector
fix elipses in activity bar
CompositeBar: colors
dont run git status after check-ignore
:lipstick:
More tests to configuration service
CompositeBar: better overflow math
Reimplement the decorations overview ruler
ActivityService
Store decorations in two trees, one with all decorations that appear in the overview ruler, and one with decorations that do not appear in the overview ruler
[folding] performance refactoring - first (for #36555)
minimal icon theme to use naming icon theme naming convention
better fix for global action touch
Track if decoration is in the overview ruler in IntervalNode.metadata
Avoid NPE in removeAllDecorationsWithOwnerId
update distro
Do not emit events when deltaDecorations is a no-op
Revert "debug: decodeURI before sending it out to adapter"
fixes #36529
Use ThrottledDelayer instead of debounce
Optimize IModel writes - don't clear the whole thing every time
Add "most relevant" group to all settings groups, and remove MostRelevant renderer
Update decorations when there is an EOL change
Update code.iss to associate `.bib` files
Address feedback - resolveModel only handles Default Prefs editor models, both of which should have an IModel
Adopt to new configuration change event
remvoe compositebar.css
smoke: use textarea for typing in editor
Adopt new configuration change event in markers and preferences areas
smoke: more timeouts...
Binary encode node.stickiness
Binary encode node.isForValidation
Binary encode node.visited
composite bar fix rendering issue with the overflow
compositeBar: compute sizes by initialiy filling out the action bar and get the size from css
panel: adopt CompositeBar
Binary encode node color
fixes #36237
Adopt to new configuration change event in explorer
Remove ClassName duplication
Add ModelDecorationOverviewRulerOptions._resolvedColor
Adopt new configuration change event in extensions land
Adopt debug to config change event
fix bad shrinwrap for windows-mutex
fix tests
windows: alert if windows-foreground-love is missing
uri - export UriComponents
warn if windows-mutex can't be loaded
Adopt to new configuration change event
Adopt to new configuration change event
smoke: use pasteboard to edit editor
deco - don't call check-ignore without files
smoke: comment out folding
easy checks, #36427
fix #36336
:lipstick:
Check for workspace existence - Extension host will not contain workspace object in empty workspace scenario
:lipstick:
deco - don't check for ignored files outside the repo
telemetry - add a workspace ID tag to workspace stats
fix layering rules in workbench services
context - more precise config change event listening
debug: decodeURI before sending it out to adapter
fix tests
Send workspace configuration change event data to extension host
config context fixes
deco - remove opacity, use colors only, remove provider label from proposed api
telemetry: do not log fileGet on settings JSON files
fix #36244
deco - update decorations when gitignore-file changes
debug: change start without debugging keybinding
deco - show file decoration also in open editors sections
update electron.d.ts (1.7.9)
deco - use a color for ignored files
Send the configuration change event data to Extension host
Update context key service to listen only on config section changes
Adopt menus using new configuration change event
Pick up TS 2.6.1-insiders.20171016
Simplified method to check active file
Reenable edit action, group title, and navigation for "most relevant"
Style checkbox and fire search again on toggle
Reset results when the search box is empty, and fix math when fuzzy search returns no results
Allow term workspace selector command to work when no folder is opened
Add "code" to copied marker metadata info
Don't show "no settings" for "most relevant" section
Add fuzzy toggle button and correctly hide ranges for most relevant section
Update coffeescript grammar
Configure for 1.17.2
Change "Remove" to "Dismiss" - fix #36440
Emit a decoration change event only when methods are called on the change accessor
Small tweaks
force a change
deco - decorate ignored files
Simplify usage of lineStarts in model
fix activity bar context menu
Simplify TextModelWithDecorations
electron 1.7.9
activityService: move pin methods to composite bar
Log 0 for count telementries not undefined
Delete LineMarker and associated code
fix tests
Ask to publish branch if there is no upstream
fixes #36340
deco - move scm decorations to git extension
Remove TextModelWithMarkers
Remove old decorations implementation
Flip the switch
Further reduce reliance on _addMarker for editing commands selection tracking
Reduce reliance on _addMarker for cursor tracking
return threadId as the context for actions in the callstack view
fix explorer exploding
deco - expose decorations as proposed api
Rename IConfigurationService onDidUpdateConfiguration to onDidChangeConfiguration
telemetry - delay fileGet until model is loaded to properly resolve mimetype
Capture current side editing behaviour
Tweak filterSettings interface
WIP - Remove 'most relevant' renderer, do IModel changing from prefs model
Refactor so that default prefs model owns the IModel - awkward
node-debug2@1.18.3
Mark markdown yaml frontmatter as yaml embedded language
Change a few more ts providers to use async
Clean up - Remove configuration target in configuration editing service - Remove configuration editing service
Use IConfigurationService.updateValue instead of IConfigurationEditingService
Add fast path for vscode.TextEditor.setDecorations
Optimize deltaDecorations
Update interval tree when edits occur
fix decorations service test
Implement IntervalTree.acceptReplace
:lipstick:
Always emit a model decorations changed event when the model is being edited
Adjust tests for USE_NEW_DECORATIONS
update title area faster when opening a new group
composite bar polish css classes
Do not overload getConfiguration for sending it to extension host. Use getConfigurationData
composite part: move pin / unpin / mode to compositePart
deco - proper explorer update on config change
deco - tweak config listening
show message when no formatter is installed, #36303
bump node debug version
debug: enable / disable all breakpoints should not touch exception breakpoints
deco - tooltip -> title
color - move color provider api to stable api
color - jsdoc and tiny tweaks for color provider api
fix #35582
Reload after editing
quick open - add and use prepareQuery
Revert changes in preferences
deco - fallback to tree color only when an element is focused *and* selected
Use wrapper pattern for Workspace Configuration Change Event
Correct mistyping
tests for workspace configuration change event
move ActivityActinos into compositeBarActions.ts
move CompositeBar into workbench/parts/compositebar
Tests for configuration change event
fix #35765
fix #33526
:lipstick:
Document current decoration behaviour
Cleaning up handling of Git Submodule status
When clicking on a changed submodule in the git window, do nothing.
Improve consistency of Emmet messages (#36251)
add missing awaits
Notify test bot
Show preview tag on extention page if extension is in in preview
Changes new terminal actions to show workspace selector
Only update terminal display settings when visible
Add option to disable quick suggestions for js/ts paths
Update ts grammar
Update TypeScript to use new task API
Add support for terminal.integrated.enableBold back
Pull in latest typings
Update xterm.js to support enableBold
Removing env variables (#36242)
Focus terminal when clicking a link that doesn't activate
Add support for dim text in the terminal
some cleanup in intervalTree.ts
Add a flag that switches between decorations implementations
settings - editor options travel through
move editor service into common
remove todo comments
getCompositeSize dynamicaly
Implement interval searching to be non recursive and not use a stack
Write tests for ConfigurationModel
guard against empty tooltip
More tests (#35236)
Reduce usage of `Interval`
Open full settings editor when clicking on settings.json in explorer (fixes #35579)
take out composite handling from activityBarPart into compositeBar
add failing, inactive test, #36089
IntervalNode implements IModelDecoration
deco - scm decorator hacks to make things look nice. time for extension api...
support to merge decorations
Sorting repositories when searching by Uri to ensure nested repositories are found if appropriate.
deco - enable marker decorations but disable them by default
Improved error message for task not found
Return error when terminal creation failed
theme-schemas: set color defaults (for better code completion)
smoke: let's catch the sucker
Smart merge of override contents
Gulp watch fails to trigger recompilation while TypeScript compiles (fixes #36214)
Warn about usage of token background colors
Update IJSONSchema: v6 and custom properties
[json] update service
[themes] use 'color-hex' in JSON schemas
deco - create css rules for decoration as late as possible
Use all keys configuration change event when configuration is initialized
deco - use weight instead of severity
Addresses 35734
deco - more boxy badges
deco - use relative line height for badge
debug: better state wrap up, make sure to not end up in INITIAZLING forever
Execute msbuild as a shell task (see 35752)
deco - check for unused css rules every N change
debug: make createProcess private and remove startDebugSession from exHostDebugService
deco - move badge letter into css rule
support opacity
fix broken terminal
IntervalTree.insert gets passed in the node to be inserted
[folding] add java folding regions
Pick up first TS 2.6 insiders
Make sure we rewrite contentName for jsx grammar
Update js/ts grammars
First, naive pass at supporting submodules. Scan for submodules when a module is added, and add those repositories immediately.
Added setting "git.autoRepositoryDetection"
Let workspaceContains trigger use rg --quiet (fixes #35236)
For line comment, always use start line of language for line comments that trigger block comments
Pass env via extension api when creating terminal
deco - split between decorations (reading) and decorations data (providing)
Eliminate IModelDecorationsChangedEvent.changedDecorations
deco - never ending settings tweaks
deco - properly update on theme change
Reduce usages of IModelDecorationsChangedEvent.changedDecorations
git - once again fix broken selection syncing
Simplify IModelDecorationsChangedEvent
some :lipstick: to reduce editor opening flickering
Use a configuration event that can answer if a configuration has changed or not given a resource and override identifier. Requested configuration can be full key or section
deco - also use className for badge
deco - stronger className
deco - use css classes for label colors, enabled proper selection colors
Reorganize code
Folding regions broken
arrows not showing anymore (for #35856)
Eliminate RelativeInterval
Implement interval searching
Implement a relative interval tree
debug: go into initialize state earlier
debug: use an array for providers since it is easier to manipulate with
update marker decorations
make use badges, use colors an explorer setting
deco - explorer item should use flex
update colors on every update
adjust scm colors
deco - update settings
use a single letter and render that
api - make sure RelativePattern is exported
Aquire instantiation service after workbench is intialized
diff: click action
hide exporer arrows improvements (for #35856)
diff: better animations
test for showWorkspaceFolderPick
remove 'rebornix' from autoAssignees
debug translation
better handling of roots that can not be resolved
Adding "base" to files.exclude breaks VS Code (fixes #36081)
Relayout terminals when they are set to visible
Use single setting to control autodetect of tasks
add new typescript.tsc.autoDetectType to enable either detection of build or watch tasks
Track source of extension install for dependencies
Auto-assign markdown and html labels
Enable for 1.17.1 (#34432)
diff: use border color per change type
diff: hover decorations
remove prefix/suffix from decoration
[folding] add work boundries to folding markers
diff: fix stage/revert ranges
fix typo
diff: react to changes
[json] update server & service
[html] update server
[css] update service & server
debt - remove apiUsage telemetry
diff: model change
diff: snappier stage
diff: inline actions
Correct the EBNF for snippets
diff: fix title
dirtydiff: title
zone widget: dont grow markers
dirtydiff: show keybindings in command label
dirtydiff: reveal zone in center
debt - remove obsolete URI casts
panel has to be expanded in order for the actions to be visible
promote showWorkspaceFolderPick to stable API
debug: fix guess adapter
remove some todos
enable multi root in all releases
scorer - better distance compute
remote - tweak read call
dirty diff: previous/next changes
deco - expect icon uris with spaces
dirty diff actions
decorations - only bubble up color status
fix dirty diff widget positioning
:lipstick:
remote - don't read another time when encoding guessing already read the while file
fixes #36010
Revert "Only set LANG env var in term if setLocaleVariables is true"
Use consistent style for inline code in hover/suggest/parameter hints
Autoshow intellisense for import with no side effects
Use unique grammar and scope for JavaScript react to avoid conflicts when overriding plain old javascript grammar
Only set LANG env var in term if setLocaleVariables is true
debugStatus: only style icon if it is constructed
fix scm.fileDecorations.enabled setting
fix bad src of files in hygiene
better matchCompactness computation
fix merge/rebase hickup
label tweak
improve test
provider dispose test
sync/async results, add unit test
adjust git colors
move extra icon into label
add useColors/useIcons settings
disable markersFileDecorations for now
have markerFileDecorations in one place
error/warning icons
re-use scm icons
add back untracked color, remove suffix for now
remove icons, use tick as suffix decoration
keep scm data around
add explorer setting for file decorations
have just 1 option
support leafOnly option
support suffix/prefix label
simplify git decorations...
tweak label
add tooltip, prefix, and suffix text
add setting for scm, handle de-registration
use a provider-style api for resource/file decorations
yet another missing change...
missing labels change
move render/update logic to file/resource label, rename fileDecorations to decorations etc
refine interfaces
TST#clear
use ColorIdentifier instead of Color, define some git colors for untracked, modifed, and ignored
add setting 'problems.showOnFiles'
refine service, allow to set only one decoration per type and resource
one scm color
start with scm file decorations
add FileDecorationsService and use it with markers
Disable 'new release'
tests
smoke: fix electron types
upgrade spectron
remove unused variable
:lipstick:
remove kludge that adds history item when new input is set on an editor (#35682)
New setting "workbench.editor.labelFormat": "default" does not work (Linux) (fixes #35721)
Missing workspace prevents start of vscode (fixes #35871)
message
test: drop usages of keys() for typing
fix tests
debt - additional quick scorer result tweaks
fixes #35898
support `findFiles`
avoid disk search trouble when having workspace folders that aren't on disk
fix keys implementation
git content provider checks the wrong cache key
disable lookup for GitHub's version of Git
Correct condition
Return HtmlElement from renderText and renderFormattedText to remove need for casts
Bump ripgrep
Bump node-debug2
enable dbus on linux docker containers
Force DejaVu Sans Mono font in terminal on Fedora
expand editor code region styles
Update js/ts grammar
add appendCodeblock, #33577
Colorize in debug console for evaluation results
debug status: do not show until first debug session gets started
be more careful with git init
Update classifier.yml
preserve the spacing
allow hiding explorer arrows via icon theme
fix indentation
Region fold in python
#24400 pass cursors, not boolean
#24400 support the "reason" arg for trimming trailing whitespace
Remove dupes from mostCommonlyUsed group
Support sending feedback on settings search results
Add setting to enable remote search. Only debounce when enabled.
Settings search from remote service
Revert "replace bash shebang with '#!/usr/bin/env bash" for portability"
Renaming
Reveal position when cursor is moved
Small refactoring
Register command
debug status bar
Add move next/back methods
Add context key for word highlighter
:lipstick:
Add confirmation window while drag-dropping project files in the "Explore" panel (fixes #1414)
Git - show there are no changes to stash message only if there are neither staged nor unsataged files (#35645)
Delete should respect user preferences regarding confirmation (fixes #1538)
messages - add workbench API to add checkbox to confirmations
Remove new context from editorContextKeys and rename
Update workspace configuration with memory configuration
Commit unstaged files after pop-up confirmation (#35185)
Use freeze instead of clone to prevent users to tamper data
Configuration: Use proper names for getting sections and values
Do not create a new empty model for merging
debug: fix state transitions regarding initializing
Remove unnecessary generics in configuration area
- Ability to write configuration into memory - CLean up: Separate models and interfaces
smoke: log main and renderer processes
paths.join should use .path not .fspath
smoke: simplify screenshots, artifacts
Text in Tweet Feedback will be broke by Hashtag (#) (fixes #35668)
:lipstick:
Watermark: Adopt to new configuration update event. Check if key has changed.
:lipstick:
Populate override identifer keys in the event correctly
Populate register configuration event correctly
Tasks
Enable 'new release' tag (#34432)
Refactor Configuration Service - API to get a value given a key - API to update value smartly - Fine grained configuration change event - Smart reload API - Remove unnecessary APIs
Support auto-closing quotes in Python raw string literals, etc
Get latest emmet helper
Move css  generation to fileIconThemeData
Warn on mispelled color names
Fill in default color value when completing
Remove support for experimental.colorCustomizations
workbenchThemeService: extract stores
workspaces - make sure to always use massageFolderPathForWorkspace
fix tests
smoketest: fix logs
smoketest: logs permissions
explorer: load roots sequentally
open folder settings in context menu
PanelAction -> OpenPanelAction
smoke: mkdir logs
smoke: fix darwin launcher
make TST#findSuperstr return another TST
:lipstick:
workspaces - allow to create workspace with URI
redefine IIterator to be a ES6 iterator
tweak WinJS.Promise definition
smoke: collect chromedriver and webdriver logs
fixes #35537
smoke: comment
Workspaces: add a command to open a folder as workspace in separate window (fixes #35619)
Enables #35333
smoke: get more screenshots
expose "Save All Files" command
update diff editor with correct event
deliver missing changes
tests - less output when running
remove unecessary warning
smoke: prevent 64bit ad
Wrong window put to focus in this case (fixes #35295)
bump node-debug (loc)
smoke: kill all testuser processes before smoketest
disable updates in smoketests
Only generate config.json for master and release branches
Convert terminal focus by index actions to commands
Revert "Move terminal command registration to new file"
Use strict version-identifier for @types/node in emmet #35561
Move terminal command registration to new file
Bump node-debug2 (loc)
Add snapcraft.yaml to copyright filter
fixes #35584
update php colorizer tests
Improved fix for #23850
Typing fix for IJSONSchema.dependencies
fix tests
simplify command registry
linkedlist - push/unshift
smoke - fix compile error
make keybinding service log workbenchAction-event
don't generically log telemetry from workspace commands
fix #34565
fix compile errors
use anonymous class
add native promise polyfill, #35516
fixes #8826
Smoke tests: take wait time as argument
remove commented code
fixes #35513
fix tests
polish empty view
properly filter out yaml files from indentation
lock git @types deps
Disable telemetry in smoke tests using an env arg
Disable telemetry in smoke tests using setting
Smoke tests: Add a comma at the end while adding a setting
debt - remove hasResource() usage
empty view: also show when workspace is empty
fix #35502
Confusing explanation for `activeEditorMedium` in `window.title` setting (fixes #35534)
dirtydiff: show diff editor
make the registry be just a forwarder
fix #31591
Use strict version-identifier for @types/xyz-modules . For #35561
Explorer view expansion on root changes
commands - use default generic
more predictable recent files sorting (#10690, #20546)
fix bad === check in history
explorer: update when saving a workspace from a single folder
Using strict version-id for @types-modules, #35561
:lipstick:
Adopt to new configuration API
Configuration API blueprint
Replace envvars in windowspath when looking for exe
Update distro hash
node-pty@0.7.1
Use "search.useIgnoreFilesByDefault" in QuickOpen (fixes #34991)
Check search.useRipgrep for file searches (#34999)
Show plain message (#34999)
No fallback (#34999)
Don't kill process tree when terminal is killed
Correctly get apt dirs in debian postinst
move id into ICommand
allow to provide a precondition when registering commands
debug: breakpoints view initial size
debug: actions to focus debug views
smoketest in unsigned windows builds
wip - make IWorkbenchActionRegistry not hold any data but make it just a forwarder
fix linux-ia32 smoketest launcher
debug: use clone instead of deepClone
integrate smoketest in product builds
prevent getQuickOpenElements() issues
fix #17443
update scm viewlet based on initial selection
prevent recursive splitview mutations
fix tests
improve scorer on file paths
Remove AsyncDescriptor usages  (#35496)
debug: fix preserving state on step
simplify arrays#flatten
encoding - map big5 auto detected properly to iconv
:lipstick:
fix findSuperstr
don't use groupBy in resolveFiles because it will merge interleaving groups, fixes #35512
use stable sort for groupBy, #35512
detect conflict markers when staging
debt - keep scoring, highlighting and sorting in quick open predictable
allow `InputBoxOptions#validateInput` to return a thenable, #34532
Revert "my 1.17 input"
my 1.17 input
No need to backtrack when eager approach did not match (fixes #35346)
Split sort in batches (fixes #33613)
Don't build snap packages in CI yet
Remove epoch from snap package
Clean up comment
smoke: remove wait
smoke: fix dataloss tests
Update README.md
fix "..." help handler in quick open
update distro for icons
repl: renaming
debug: remove start session command
Use new xterm.js branch, fix emojis issues
add - TST#delete
remove support for `debuggers.initialConfigurations` command contribution
debt - avoid layer breaker for input factories
remove vscode.startDebug
Stop supporting vscode.startDebug command
Remove workbench.customDebugRequest command
Stop supporting onDebug:type activation event
Revisit file filter usage in quick open (fixes #34958)
:lipstick:
more aggressive cleanup,  fixes #35359
Provide `Remove folder from workspace` global command (fixes #35221)
refilter completions on model change, fixes #35269
:lipstick: align styles
Workspace with special name cannot be modified (fixes #35370)
fix compile error
move compareResourcesByScore
fix bad highlighting in view and terminal picker
filters: trim word before checking for camel case
debt - extract and use fuzzyContains method
simplify smoketest launch
debt - remove unused 'usesCommandLink' telemetry
debt - use SearchTree over Trie'ish
debt - implement findSuperstr
debt - map'ish names for trie
debt - a better search tree to replace trie
use --skip-getting-started in integration test
darwin/build2
fix: use single remote automatically
Cache npm cache in CI
Use local gulp in CI
Update PHP grammar
more touchbar icons (fixes #35244)
Set NODE_PATH when forking TS server
fixes #35345
smoke test: fix debug console
Hello 1.18
enable macos signing
Javadoc cleanup
build: publish asset size
fixes #35360
don't trust MarkedString, #29076
Clarify debugRequestNotSupported message in debugService.ts
fix bad macOS version check (for #35361)
Clarify parameters and add missing 'id' to the error message in viewRegistry.ts
tfs: fix build names
add workaround for #10442
better "step out" icon (for #35244)
fixes #35140
Absorb fix for bem modifier customization in emmet
Shuffle extension recommendations a little
Add a null check when fetching terminal line string
node-debug@1.17.17
create tfs win32 unsigned build script
Set terminal font details on xterm construction
Clarify "Editing evolved" (fixes #35287)
help for #35304
Add ia32 and arm snap builds
Revert "remoteFileSystem: do not blow up on errors"
debug: use correct threadId
node-debug@1.17.16
update distro-property
remoteFileSystem: do not blow up on errors
update ThirdPartyNotices.txt
mark @types/node as dev-dependency
xterm - change version to what is actually in node_modules, fyi @tyriar
fix xterm version - fyi @tyriar
fixes #35216
getWorkspaceFolder return a workspace folder when called with one, fixes #34843
debug: fix multi thread stoppedDetails passing
Repository.close
quick pick fails on umlaut (fixes #35125)
[css/html] update service
fixes #31197
[loc][query] Typo in source string: exits => exists (fixes #35285)
[loc][query] Typo in source string. distinguinshing->distinguishing. is->are (fixes #35286)
RelativePattern difference in behavior for single star glob patterns (fixes #35257)
fixes #34358
fix tests
fixes #35205
fixes #35294
Revert damage from npm 5
RelativePattern not limiting watching to workspace subdirectory (fixes #35255)
Activate Emmet on type instead of * #35120
Save conflict: left hand diff editor does not update on changes to file (fixes #33792)
distro for icons
Skip test on Linux (#35046)
Pick up TS 2.5.3 final release
Use em dash for title sep on mac
Bump node-debug2
Disable auto complete on quotes since this now gets in the way for path quick suggestions
Show std err msg for rename errs not from extension #35177
Use npm 4 for markdown shrinkwrap
Clean up keytar (fixes #35046)
Clarify parameters with backticks in error messages
Kill rg when maxResults hit (fixes #34823)
Disable `new release` and the `insiders` labelling (fixes #34432)
Rename context and small fixes
fixes #35127
Add extension context to ResourceContextKey
fixes #35044
node-debug@1.17.15
Auto expanding/collapsing console entries (fixes #35226)
fixes #34959
fixes #35028
fixes #35047
fix bad scm event order
fix #33692
await then restructure
fixes #34511
debug: check if config.configuartions is array
fix test
debug: improve breakpoint handling
Full stack traces are annoying (fixes #35222)
Ensure terminal rows and cols are always >= 1
viewViewlet: wait for view creation
clariy showOpen/SaveDialogs, #35141
better names, better jsdoc, fixes #35141
VSCode opens off-screen (fixes #35148)
fix jsdoc indent
add hide context action to repositories
never unselect repos when there are available ones
git.ignore should detect workspaces
debug: mime type guessing only use path
No need to inline license details, as they can be fetched from the repo
fix build error
Untitled editors hang around in history but should not (fixes #35095)
debug: do not throw when sessino stopped and user trying to expand elements
opening a file using code --wait does not wait to quit (fixes #35049)
improve docs, fixes #35063
repl: display source on non mac platforms
fix #35059
improve warning for bad links, #35017
Use strings instead of numbers for error codes
fix #35018
Console.logs from command handler not linked to origin (fixes #35140)
fix #35061
fix #35053, fix #35051
doc: remove link
updated touch bar icons
Listing for Encoding Confusing (fixes #35146)
Bump vscode-ripgrep
Remove extra space in string
Relax check on  TS path completion trigger
Build snap package in release.sh
Allow emmet in script tag if mimetype is html, plain  or x-template #34921
Add snap path echo to release.sh
Add support for building x64 snap package
tweak settings description
docs for #35017
validate ctor arguments (fixes #35112)
jsdoc tweaks (fixes #35108)
Consider to change RelativePattern ctor argument order (fixes #35103)
Missing jsdoc (fixes #35107)
Disable autoClosingBrackets when screen reader is attached
Use correct indentation for snapcraft.yaml
just do schema === 'untitled'
replViewer: better class name reset
fileActions: also take untitled scheme into account
smoke: loosen smoke test requirement
smoke: increase timeouts
[css/thml] update language services (reduce footprint)
Revert "debug: polish process focusing on continued"
fixes #35015
test for #35003
smoke: all platforms are slow
smoke: slow windows
fix searchResultsShown event
fix typos
add missing commas
indentation changes
formatting change
add description for new common property
update extension install, update and uninstall events
fixing classification
update GDPR todos
GDPR comments
omit endPoint where it defaults to none
correct wildcard usage
review GDPR classifications
GDPR classify timer2 on IStartupMetrics
GDPR classification for save participants
GDPR classification for git extension
gdpr classification for markdown extension
classification for TS extension
use wildcard for files.joined
change wildcard property
inline values
replace invalid value
correct property names
correct typos
more GDPR classification
correct typos
more GDPR classification
more GDPR classification
fix typo
fix typo
fix typo
more GDPR classification
remove unused files
fix GDPR value
parse source comments
update snippets
gdpr tooling
first batch events
classify common properties
Use bem preferences #33631
Special case TS dev version detection
node-debug@1.17.13
[fsharp] add folding region markers and snippets
[swift] fix invalid characters in snippets
[html] fix invalid characters in snippets
[ts] invalid tab characters in snippets
[folding] c & cpp snippets for folding region markers
[folding] snippets for folding markers
smoke: more pitfalls
smoke: pitfalls
what did I do to deserve this
smoke: bad selector
smoke: this breaks more often than I'd like
report tsserver response error as telemetry (#34860)
[folding] add folding marker to API and schema
Pull fixes for #33994 and #34906
Update js/ts grammar
fix smoketest script in windows
update smoketest docs
Adding folder name to error message when auto detecting tasks
windows ipc handles should be scoped to user data dir
Task output channel cleared to eagerly
tweak URI to keep it compatible with gitlens, fyi @eamodio
reduce usages of toResource(filter: 'file')
Uplevel xterm.js
[seti] missing semicolon in update script
smoke: better rimraf in main
Bad contribution registration (fixes #34952)
debug: pass locale to adapter
[sh] update grammar
[r] update grammar
[ts/js] update grammar
[css] update grammar
[cofeescript] update grammar
Listen to schema change events (for #27816)
upde DAP 1.24.0
less use of toResource with filter: file
revert shebang
override old splitview
add dependency workaround
Revert "Revert "allow to reuse the same function/context when listening to events""
node-debug@1.17.12
Revert "allow to reuse the same function/context when listening to events"
debug: remove ISource
Style changes
splitview: fix bad appendChild
allow to reuse the same function/context when listening to events
Update the schemas model on schema changes
fix size restore issue in extensions viewlet
replace 'Courier New' with 'monospace' in Linux font list
Hook extension console into debug console (#34938)
views viewlet: restore view size on show
build: publish unsigned builds
debug: polish process focusing on continued
Language specific encoding is not used right on startup (fixes #34943)
remove profiling hint as it isn't reliable/valuable enough
show console.log from extension host top frame in dev tools (#34936)
mark `commit` as optional, #34523
handle missing product.commit, #34523
safepoint
:lipstick:
better fix for #34796
Scroll to selection after cursorUndo command
touch bar: reuse groups
Ensure ripgrep is killed when vscode exits, for #34434
node-debug2@1.17.4
node-debug@1.17.11
Disallow wrapping in link hover widget
Remove dead code
Alternate fix for #34162 using minscore for fuzzymatching
Add editorFileExtension when clause context
smoke: fix another focus issue
fix missing dirty diff decorations
fixed hygiene
fix vscode #32681
disable test on proposed API
lookup files.encoding properly
Enable proposed api in api-tests
Check type of token that triggered the quick suggestions
Add sourceInfo when installing from welcomePage or cli
Really fix test on options
Prototype TSC watch task contribution (#33865)
Update TS insiders version
Telemetry to differentiate all recommendations view from the others
Autoshow suggestions for jsdoc param
Localize markdown preview title
Use async in refactor provider
node debug version bumps
smoke: use debug inspector protocol
smoke: add tracing message
smoke: dont use :focus selector
smoke: dont use monaco-editor.focused
smoke: dont use monaco-editor.focused
:lipstick:
fix bogus compare of resource
Add a word or two about the query-argument, #34605
move node cached data clean up into shared process
linkDetector: remove elative paths supported
remote - refine utimes
:lipstick:
workspace: remove fsPath
better (the same we already have) binary file error
debug: when constructiing source path take scheme into account
read most of the encoding from stream
explorerView: do not use filter: File
smoke: fix quick open focus issue
:lipstick:
[folding] fix cpp regions
:lipstick:
Introduce GlobPattern and adopt in DocumentFilter/FileWatcher/FileSearch (#34695)
[folding] fold regions, initial, preconfigured support. For #12146
FoldingRules language configuration simplification
debug: do not allow breakpoints in settings files always
debug: remove fsPath usage
showWorkspaceFolderPick not enforced as proposed api (fixes #34819)
actually invoke a function... #34704
workspace.openTextDocument works incorectly when passing { content?: string; } as argument (fix #34796)
move open/save api into stable api, #13807
debug: custom telemetry service should be per session
tweaks for #34449
log api usage for getWorkspaceFolder
Given URI impl a more special name...
debug: fix adapterData being passed around
breakpoint event 'update' for backward compatibility
add perf-ticks for extensions handling
tweak deprecation comment
fix #34751
[html] update vscode-languageserver-types to 3.4.0
[html] fix build error (shrinkwrap not uptodate)
clarify WorkspaceFolder#uri
Non standard Delimiter Used in title/Caption bar (fixes #34742)
Also trigger completion items for require and import expressions
Add source when installing extension via uri
Trigger intellisense on / in ts paths
Auto show path intellisense when typing ' or " in import statement
Include extensionId in telemetry event for recommendation popup
Make sure we send format requests before code actions / refactor
Rename to FormattingConfigurationManager
Move ts and js config manager into same object
Don't export config from formatting config manager
Split formatting config manager to own file
Move formatting options manager to own class
Cleaning up formatting provider to use async
Lowercase extension ids before check
wip: dirtydiff show original contents
Recommend only if files exists
Sort extension based recommendations based on recommended date #34233
dirtydiff widget: styles
wip: wire up dirty diff machine
wip: dirtydiff widget
#34714
allow to define byte-offset and byte-count when reading from a provider
save workspace is always enabled (#34622)
null check
debug: polish quick open entry label
fix tests
better error handling when resolving non-existent files, stop using async/await
operations that create a file/folder should return a stat-object because we want it anyways
add id to FileStat and remove resource, make readdir return tuples, sketch up error codes, add todos on the API
allow workspaces with 0 folders (#34622)
Removed () from folder name qualification
More code cleanup
Defer folder setup computation
Only paint the dirty image data rectangle (#34170)
debug: location of repl messages
fix missing dirty diff decorations
ensure that the scheme is 'file' detecting scripts
[html] provide colorpresentations in language server
[json] provide colorpresentations in language server
modesContentHover: remove console log
Do not search for empty glob patterns (#34487)
better default config (for #30864)
clean up styler
[css] move colorpresentations to language server
vscode.d.ts: add ColorPresentation constructor
Tweaks to content widgets renderings (#34716)
fix #34464
make room for full debug toolbar
UI polish for tasks in multi folder setup
fix context for commands run from touchbar
add --install-source to cli process
one more comment #13807
add jsdoc, #13807
add filters, #13807
Cache content widgets dimensions (#34716)
debt - move more static props out
debt - make vscode.Uri compatibile with URI, declare private ctor
splitview: use preferred size in onDidChange
touch bar: reuse entries to avoid flickering
Add note about trigger character
Revert chnage to languages.test
Adding completion item kind enum
Take context as last argument
Update based on comments
Add optional CompletionContext to provideCompletionItems
Make display string optional in ts/js hover
Look only in default paths for recommendations (#34528)
provideColorPresentations should have document in paramaters.
color space 0...1
update bracket matching on language configuration change
node-debug2@1.17.2
ViewsViewlet: persistence, dnd
Adopt support for multiroot folders
Add import statement snippet to .js(x) files (#34682)
Settings button does not support touch (fixes #34678)
panelviewlet: dnd
fix bad merge
have TrieMap and StringTrieMap for more flex
Also listen to folders change event
:lipstick:
createFile errors when file is already there
add missing create options
add index to IPickOpenItem
Move toResource method to IWorkspaceFolder
Rename to IWorkspaceFolder
Workspace folder picker command (for #32936) (#34648)
call addFolder when a provider adds a new root
Delete comment out
viewsViewlet
fix #34645
views2 > panelViewlet
:lipstick:
explorer: fix expand
remove usage of URI.file
explorerView: remove fsPath use
Revert "use IWorkspaceEditingServce to add workspace folder, support to store uris in the workspace file"
use more proper types for workspace on main side
Compare to correct Ressource-URI when fetching content
use IWorkspaceEditingServce to add workspace folder, support to store uris in the workspace file
fix bulb resolve for remote providers
explorer: expand root folder properly
remove some schema === 'file' checks
Test offSide indentRanges (for #3353)
add IModelLanguageConfigurationChangedEvent and ViewLanguageConfigurationEvent
Move indent ranges to ITokenizedModel
alex: first remove decoration types and only then fire a model change event
more fixes for #34490
Use workspace folder picker
merge master
polish label
Use workbench state instead of checking on workspace config
fix #34520
introduce IWorkspaceFoldersChangeEvent for onDidChangeWorkspaceFolders (for #31195)
fix npe
git: leverage new ViewColumn.Active
Add support for Stash (Include Untracked)
Uplevel xterm.js
Continue moving vs loc to ts loc location into single set of functions
Continue moving range/position conversion to single location
Replace duplicated textSpan conversion logic
Uplevel xterm.js
Pick up latest TS 2.5.3 insiders
Run --export-default-configuration with fresh user-data-dir and extensions-dir
#34659 Use error code in uninstall event
Implement #34659
panelview: animation
wip: debug viewlet title fixes
wip: fixes to extensions viewlet
wip: several fixes to explorer, extensions viewlet
Update .tsx import statement snippet to be consistent with .ts (#34653)
wip: ViewsViewlet extends PanelViewlet
views2 > panelViewlet
:lipstick:
pickWorkspace => pickWorkspaceFolder
:lipstick:
:lipstick:
fix npe
ftp: fix drag and drop
a somewhat sane way to know how to open a file
find in folder only for local folders
Closes #27408 - Adds ViewColumn.Active
scm: more actions
scm: typo
splitview: dont save layout size
scm: show actions, display focus
first check for file-schema and then call super, send activation event for others
don't let the file service track editors, let the file tracker do it
add todo@remote tags
introduce resources.dirname, fixes label in no-tab view
always use uri.toString() when comparing uris for equality
add _workbench.pickWorkspace command
fix merge breakage
undo explorerView-change
untitledEditorInput: title and description
Using node 7.9.0
Using node 7.9.0
minor change
Allow writing into workspace folder settings file irrespective of workbench state
clean up
scm: proper add/remove repository views
Settings folders drop down should also depend on folders length
Open folder settings action enablement should also depend on the workspace folders length
Use toResource method in workspace context service
do not assume folders[0] is there
better file watching bootstrapping
fixes #34624
More work to make task multi folder aware
debug api: use uri not workspace folder between extension host and renderer
FIx #34406
scm: provider counts, styles
debug: use WorkspaceFolder
adopt more of workspace.name
scm: remove checkboxes
scm viewlet: multiselect
splitview: fix layout code
support name property of workspace folder in FileLabel
${workspaceRoot} -> ${workspaceFolder}
debug: process.getSource
debug: react to breakpoint event
Extensions suggestions in workspace configuration file
Re #34366. Extensions define color formats.
handle listeners properly
enter workspace: update backup path properly
clean up for workspace transition
remove log
splitview: round sizes
Map version string to single number - Microsoft/vscode-bing#7
Rename to export-default-configuration, and write sorted settings
Add ability to start vscode just to write out a blob of all config details - for Microsoft/vscode-bing#7
Mark markdown fenced code blocks with correct language mode
Add schema for contributed markdown API
node-debug@1.17.8 (WSL auto detection)
Mark inline js expressions in js with language javascript
wip: splitview tweaking
Allow injection grammars to specify embedded languages (#34327)
splitview: remove exceptions
Add extensions schema to workspace configuration schema
Fetch extension recommendations also from workspace configuration file
Adopt Multi root support for Workspace recommendations
Revert "Uplevel xterm.js" to fix #34563
migrate storage properly
node-debug@1.17.7 (WSL)
relauncher: prevent duplicate ext host restart
better workspace name change event handling
clean up workspace service and trigger name event on name change only
update menu properly after transitioning workspaces
:lipstick:
more on workspace transition without reload (#32945)
Have `workspace.applyEdit` correctly account for model version changes and reply with false if a model was loaded and changed in the meantime
[r] use grammar from https://github.com/Ikuyadeu/vscode-R
move ftp provider into an extensions, expose things as proposed api
wip: SCM Viewlet
PanelViewlet.movePanel
config: trigger events from workspace initialize (for #32945)
configuraitonResolverService: use WorkspaceFolder
restart extension host based on workbench state change (for #32945)
[json] `additionalItems` can be a schema (from #34546)
wire in changes to transition workspaces without window reload (for #32945)
wip: more panelview work, PanelViewlet
Support actions to show up in the macOS touchbar (#34574)
Reduce the facts to depend on
update tests for debug URI
document debug URI format
introduce PanelViewlet
cannot read property 'resourceJSON' of null (fixes #34490)
explorer.sortOrder: 'mixed' no longer works as of 1.6 (fixes #34516)
adopt onDidChangeWorkbenchState()
panelview: hide/show headers
Improve format of workspace paths when writing
prevent double login attempt
prevent too much work in whenDeleted()
resourceScheme context does not work in in menu.commandPalette contribution (fixes #28211)
Listen to workbench state change
Take workspace folder as an argument in toResource
An event to listen when workbench state changes
Introduce WorkspaceFolder model that wraps information about a workspace folder. Use WorkspaceFolder instead of URIs in IWorkspaceContextService
Uplevel xterm.js
splitview: :lipstick:
panelview: dnd background color
panelview: dnd
splitview: moveView
replace bash shebang with '#!/usr/bin/env bash" for portability
panelview: animation, collapse states
panelview: first steps
splitview: clean interface
splitview: animation
splitview: more tests
node-debug@1.17.6
make debug URIs robust; fixes #23194
splitview: cleaner main algorithm
Uplevel windows-process-tree
Uplevel windows-process-tree
Improve search aria label generation performance
Make problem matcher work in multi folder setup
Add varaible workspaceFolder
Address #34434 - don't fail when ripgrep exits with 1 and no stderr
Updated the license to MIT
Updated the license to MIT
fileEditorInput: getDescription, getTitle
editor history: do not clear history when replacing entry
Navigate back after cross-file goto-definition takes me to a new location (fixes #34389)
Properly implement toDeepIFileStat for explorer expansion
splitview: more resizeView tests
ftp: fix hover in explorer
splitview: resizeView
Only show base name
resources.isEqualOrParent
Add multi root support to Jake auto detect
basenameOrAuthority
Cannot read property 'dispose' of undefined (fixes #34467)
[html] multi folder settings optimizations
[html] use vscode-uri
introduce resource.ts
move lightbulb enablement logic into lightbulb, #27961
Revert "more strict (and correct) URI.file, #34449"
smoke: forgot await
smoke: different slow number
smoke: prevent nested waitFor calls
smoke: --sticky-quickopen cli option
smoke: enable concurrent debug runs using different ports
smoke: fix broken http ping
more strict (and correct) URI.file, #34449
Make grunt auto detect multi folder aware
Make gulp auto detection multi folder aware
turn off deep stat, don't log when files don't exist
readdir return IStat-array
dont read XDG_RUNTIME_DIR
smoke: omg, they were all using the same port!
make workspace.ts ftp aware
move add remote root hack one level up
be ready for deep resolve
support touch and utimes
:lipstick:
Adopt task multi folder API
Add workspace folders to task API
Making tasks.json parser workspace folder aware
parse pattern for file watching
smoke: more debug screenshots
smoke: careful with screeshot capturing
fix copy path command
git: open change enabled only for local files
reveal in finder, open in terminal only for schema === 'file'
smoke: wait for marketplace for longer than 5 seconds
smoke: loosen up localization assertions
Create File overwrites existing files without warning (fixes #33899)
Find exe based recommendations only when needed #34371
node-debug@1.17.5
Tweak colorization of regexp for light+ and dark+
splitview tests
more splitview tests
support for sourceRef query param in debug uri
Maintain focus on stopped thread when stepping a multithreaded session
Everyday typo
del on overwrite, some comments for shortcommings
do not overwrite existing backups when migrating workspace
prevent overwriting a workspace that is opened inside another window
start with empty deepStat-function
arrays.range, arrays.weave
use authority as label
smoke: more screenshots
have unlink and rmdir
properly stat files and folders
splitview: initial tests
smoke: - introduce data-uri attribute in editor to know if the editor is ready - fix editor focus class name issue
debug: remove stale focus code for no folder workspace
[file icons] annotate schema with 'color' format
fix root label
less verbose tests
fix hanging --wait processes
debug smoke: remove timeouts
fix compilation
debug smoke: use fs to get launch.json content
fix panel
fix some URI.file (for #34296)
Rename roots to folders
ImportFileAction doesn't use URI (fixes #34235)
event relay
fix inputbox npe
revert URI changes for now on master and continue on branch
do not use fsPath when using URI.with()
Uplevel xterm.js
fix some URI.file (#34296)
Update TS/JS grammars
Use consistent name for marking markdown docs
Make sure we use old pre-wrap settings for non markdown docs
Remove Azure Deploy experiment
Correctly set terminal columns on layout
Speed up terminal parsing on Windows by minimizing timer restarts
Uplevel xterm.js
node-debug@1.17.4
Create workspace object always and adopt accordingly
Use dp0 instead of ROOT in test-integration.bat
smoke: improve status bar tests
smoke test - improve waiting for active editor
debug smoke test
Continue tweaking default dark and light colorization for escape characters and regular expressions
Add editor.lightbulb.enabed setting (#33982)
debug smoke polish
ImportFileAction doesn't use URI (fixes #34235)
fix issue with editor history navigation merging
debug smoke test tidbits
debug: exceptino widget background non transparent
Add indentationRules to lua
#33963 Revert the changes 1c7479e970499383d292e1264cfaeda794a24864
smoke: fix typo
[html] change default of html.format.unformatted to empty
[html] remove console log
wip: checkboxes iteration
[json] Provide a flag in json schema to ignore a property in proposals. For #33083
configuration contribution point: support for array of settings sections, deprecate the 'allOf' trick used in CSS.
don't 'normalize' authority
fix smoke test for debug console
scm: rootUri api
debug: do not colorize in repl based on heuristics
:lipstick:
Rename WorkspaceState to WorkbenchState
Avoid checking for workspace exists or not. Instead use the EMPTY workspace state
config - do not report file change event for files that are unrelated
fix #34098
add git.stageAll to provider menu
list: dont cancel list mouse events
Use workspace state to check for empty workspace and remove hasWorkspace method
Legacy text search (#24074)
Relative file match (#24074)
Convert globs to NFD on Mac (#24074)
Enable Ripgrep (#24074)
fix compile
Uplevel xterm.js
Uplevel xterm.js
Colorize python placeholders in strings
Bump vscode-ripgrep to get fix for quickopen+rg
Remove duplicate event firing of onDidClose
Uplevel xterm.js
Formatted `cliProcessMain`
[html] update service
[css] update service
Introduce WorkspaceState representing Empty, Folder and Workspace. Adopt to use getWorkspaceState instead of hasFolderWorkspace or hasMultiFolderWorkspace
Revert "Prevent to use hasFolderWorkspace instead check if workspace has configuration"
Prevent to use hasFolderWorkspace instead check if workspace has configuration
Find the index of the root instead of storing it on the model
Update focussing recent workspaces list
Add rules for regex groups to vs dark+ and light+ themes
Further improve colorization of embeded expressions
Update groovy and cshtml colorization tests
Improve colorization of embedded start end puctuators across languages
Simplify autofocus in recent workspaces list
Introduce an API in workspace contet service to check current workspace is with given workspace identifier
wip: better scm view management
list: dont cancel list mouse events
debug: only show exception widget when exception frame is focused
rename and copy
debug repl: do not focus element on context menu
fixes #34209
move interfaces
fix #34159
update splitview
toolbar: update options
splitview: clean addView
remove allow-async tslint rule
IViewletView
:lipstick:
Remove legacy workspace. Use first root of the workspace instead of legacy workspace resource.
refine readdir and write functions
better hack to workaround textFileService.models
proper streaming
smoke test - improve quick open and report screenshots
update node debug version
smoke test: Improve quick open behaviour
debug: allow threads with threadId === 0
slightly better workspace saving format
save workspace: preserve comments and slashes in paths if used
better del (file or folder)
#34206 comment the terminal tests
create file/folder, emit operation events
much more, del, streaming, etc
fix adoption issue
Disable failing terminal link tests
hacking my way around
Only apply pre-wrap inside of code blocks for suggest and parameter hints
Reset Styling for meta.embedded for other themes
Convert Red theme to json
Uplevel xterm.js
Use MarkedString for js completion and sig help
Allow ctrl+j to toggle panel when terminal is focused
Quick open history does not restore untitled files (fixes #34156)
remove unused code (window-all-closed)
:lipstick:
Shortcut when there are no siblings clauses with ripgrep
Show file paths in inactive panes (fixes #29932)
extension editor: add icon themes
extension editor color box: set high contrast color
implement getTitle/getDescription for untitled editors
Add template system for tab descriptions. (#12965) (#33815)
build: lock gulp-tsb
Allow to configure files.encoding and files.autoGuessEncoding per language
fix #34120
Editor loses focus when you click or drag the window title bar (fixes #30967)
Add some more encodings to the picker
remove legacy workspace migration code
fix tests
remove todo: legacy backup format
remove todo: migration of previous git viewlet
label consistency
:lipstick: import commented
Support 'code -rw' in running instance and wait until tab gets closed (fixes #24327)
Bump node-debug2
Remove enableBold and fontLigratures terminal settings
Uplevel xterm.js
Tweak terminal selection defaults
Add copyright statement
Support terminal.selectionBackground theme key
Support new terminal theme model
Uplevel xterm.js
smoke
Uplevel xterm.js
Remove duplicate require.
smoke: take screenshot when waitFor times out
smoketest: debug
remove no longer needed todo
Pick up new TS insiders
Tiny optimisation to tree sorting
Add a rootIndex property to FileStat to ensure sorting roots is stable
Don't require panel to exist for xterm.js to init
smoke: debug, wait for elements before clicking
debug: setup screenshots properly
Align signatures with other providers.
Handle user information in URI
Add merge-conflict label
Guess color format.
smoke: improve wiki
smoke: improve search tests
Support for uninstalling extensions given paths to their .vsix files
smoke: update wiki
Defer loading of keytar (fixes #33998)
Load Markdown and XML parsers on demand (fixes #33141)
smoke: improve data loss tests
smoke: windows
Debug: Call stack view use more ellipsis
smoke: fix screenshots
smoke: make terminal tests more reliable
smoke: better screenshot folder management
smoke: make editor tests more reliable
debug: proper error when running a launch config with a missing "request" attribute
smoke: screenshots perms
paths are hard, #33709
electron - disable _readIsISOKeyboard for now to test new version
smoke: fix localization test
smoke: pimp up screenshots
smoke: await for screenshots
smoke: copy screenshots to outdir
smoke: fix darwin timing
debug: move into debug mode a bit earlier
don't normalize input paths, normalize results, #33709
node-debug@1.17.2 (debugConfigurationProvider)
smoke: change terminal focus condition
Also support MarkdownString in signature help, #11877
disable test because manual-trigger logic is no special
smoke: add timeout descriptions
smoke: fix more focus issues
smoke: fix debug test focus issue
smoke: use precise command names
smoke: waitForTextContent
snippet suggestion use markdown for preview-string, #11877
Allow CompletionItem#documention to be also a MarkdownString, #11877
introduce MarkdownRenderer to avoid code duplication and to have the one place for keeping the renderer options, #11877
Smoke tests: Add wait labels
Use number for screenshot names
[objecttive-c] fix grammar version stamp
fix #34007
feat(git): allow url to be given to git.clone
[shellscript] update grammar
[shaderlab] update grammar (fixes #33316)
[scss] update grammar
[php] update grammar
[make] update grammar
[f#] update grammar
[css] update grammar
[coffeescript] update grammar
don't register resolve method when there is none, #4352
use pushd and popd to change locations of smoke test in mac builds
smoke test in windows builds
electron: leverage new 'treatPackageAsDirectory' property
missing awaits
clean up repo before each test suite
update electron.d.ts to 1.7.7
:lipstick:
Editor history lost when closing inactive group (fixes #33997)
smoke: git restores repo state
:lipstick:
relax extension host inspect method
update the order of tests
test mac build
fix save dialog options, #13807
Update test
Telemetry on raw file search
Use unused param
Dispose of ataProgressReporter
Pick up TS 2.5.3 insiders
Disable ripgrep for QuickOpen on Windows (#24074)
Explore using ripgrep for QuickOpen (#24074)
Update to released version
do not break existing debug extensions
GA parameters for release notes links
Use new tooltip callback
Remove telemetry prefix
run smoke test in mac builds
fix debug tests
Test smoke test on build
Smoke test enable screenshots in builds
also add showSaveDialog-api, #13807
fix formatting
Create tests for newline trimming option
Implement setting that trims addtional newlines (implements #16599)
better transform resolution
node-debug@1.17.1
smoke: make smoke tests run on linux
fix if/else thing
Smoke tests: add all tests
update doc
Smoke test: Revert the change in command pallette
Smoke test: Do not define build dep tests if build do  not match
Improve editor history navigation: merge locations (fixes #29027)
Smoke Test: Get back the change to compute vscode build type
some tweaks to editor history navigation
Smoke test: Capture screen shots
smoke
git: internal git._syncAll command
fixes #33878
Smoke test: Capture screenshots in tests
use suggest lifecycle instead of automagic heap tracking, #18682
add ISuggestResult#dispose to allow for optional lifecycle
Smoke test: Screen shot support
smoke: fix linux
debug smoke: continue
debug: smoke test
smoketest: allow two minutes for setup
fixed the terminal and find widget key presses
more efficient iconlabel
:lipstick:
:lipstick:
Update icon in explorer (or search,...) when language mode changes in editor (fixes #26260)
fix #33033
command palette: run command
Revert "smoke: Need to retry multiple times due to late context switches might eat up some keys (e.g space)"
add commands for native tab actions (for #33884)
more changes to electron.d.ts
:lipstick: action labels
:lipstick:
scm: move method down
Partial support for new link API
Smoke test: clean up data migration tests
smoke test: adopt editor tests
Use async in jsDoc and in ts main
use async for create config file
Create more helpful initial JS config
Inherit font-family (fixes #33146)
Reset VS Dark + Light styling for meta embedded (#33866)
electron@1.7.7
Replace 'Clone' with 'Add folder' link
move parts/views into workbench core land (fixes #29921)
Implements #33902 - "Go Last" (#33715)
smoke: Need to retry multiple times due to late context switches might eat up some keys (e.g space)
debug: fix selected launch setup
scm: use arrays.sortedDiff instead of LcsDiff
arrays.sortedDiff
scm: don't send resource states commands back and forward
scm: better comparators
scm: don't send events if nothing has changed
scm wip: move sort down to ext host, move splice up to viewlet
scm: use diff algorithm for ext host communication
scm: split scm provider events
scm: bulk resources update
uncomment npm install
Smoke test: Clean application
update our node.d.ts to 7.x
fix #33737
more d.ts fixes
Adopt official electron.d.ts (fixes #32363)
fix #31199
smoke test: remove tasks
smoke tests: enable debug title test in localization test
smoke test: adopt terminal tests
smoke-tests: clean up
smoke test: adopt localization tests
smoke tests: clean up
debug: initial smoke tests
smoke: run npm install for setup
macOS: show more native tab related actions when tabs are enabled (fixes #33884)
macOS: Cmd+A does not work in native parts (dialogs, search) (fixes #19003)
fix #33691
fix #31528
quick fix: select first entry in menu automatically for fast access (fixes #13631)
:lipstick: context menu
some cleanup for #27461
smoke: delete test data when test is successful
smoke: create test_data in tmp
smoke: linux x64
smoke
fix smoke extensions dir
smoke: cleanup
remove azure-account translations
Make reference links in md docs scroll to reference block instead
Can no longer open image files from the git viewlet (fixes #33739)
test suggest sorting
load user and extension snippets only when needed
Explorer: dropping file with same name overwrites without confirmation (fixes #33848)
fix compile
debug: activate "onDebug" when a user is about to start debugging or about to setup debug configurations
debug: keep track of all processes created, for eh attach
fix smoke!
smoke: linux
linux smoketest
[loc][Query][VSCode] Please clarify meaning (fixes #33830)
hide lightbulb when dragging over it, less flicker when showing (again) on the same line
don't grow light bulb on hover
evalute watch expresisons once variables value is set
linux smoke
linux smoke
fix smoketest launching
smoke: finish git test
:arrow_up: jschardet
use correct name for VisualElementsManifest.xml
do not ask to save untitled workspace in extension development window
:lipstick: color
smoke
reduce flicker on startup
update distro
Windows: logo does not have a specific background (fixes #33362)
Introduce a --inspect-search CLI argument, and enter debug mode by default when built locally
Create unique extensions dir
Use status bar model in extensions test
clean up status bar test files
More improvements
Respect file order when opening files from command line (fixes #30364)
:lipstick: tab drop feedback
debug: introduce onDebug activation event
expose spectron client in application
smoke start git tests
update icon paths, #28726
move peek widget to begin with something, #28726
remove and add unused code
double cancel dummy cancellation token
fix division by zero
remove unused service, #28726
fix test data path
mocha task
ignore top level test_data
don't run perf tests all the time
some more perf tweaks for #15419
use mocha for smoke test
use updateModel() when accepting changes from conflict resolution
smoke: omit warnings, clean imports
debt - don't use an array as result counter
save conflict: make sure to close diff editor when conflict resolved
save conflict: show better message when trying to save active save conflict diff editor
fix #33147
further smoke test improvements
fix #33699
debug: fetch all threads on stop event
try to fix CI build
Save conflict: left hand diff editor does not update on changes to file (fixes #33792)
only select diagnostics that are contained by the code action range
remove unused param
trigger lightbulb on selection as is
Diff editor breaks when running `vscode.diff` twice in a row (fixes #33593)
remove bad folder
ignore search smoke out
Debounce on file read (fixes #33529)
remove bad folder
fix compile error
revert args in application
Improve smoke tests
update smoketest launch
Check for provideDebugConfigurations not the provider
avoid more implicit any and some :lipstick:
Improve activity title behaviour
fix compile error
fixes #33777
missing compilation
node-debug@1.17.0
On open focus window which the user explicitly wants (fixes #33660)
Bump node-debug2
Make fontSize a number
Align terminal to bottom
update node-debug OSS modules
Support lineHeight
Update shrinkwrap for emmet
Get fonts displaying correctly
Add CSS changes
Update typings
Scroll in terminal using correct ydisp value
support both startSessionCommand and resolveDebugConfiguration
better typing for resolveDebugConfiguration
promote proposed debug api
Detect markdown reference links as document links
Mark inline markdown code as strings for bracket matching and other editor features
Mark TS settings as resource
Bump markdown-it version
Use specific TS version
Build using TS 2.5 (#33705)
bump vscode version to 1.17
wip: clean up smoketest launching
update distro reference
fix up smoketest dependencies
run smoketest npm install as postinstall step
show lightbulb inline
add another test
resolve transform strings
fixes #33383
fix #33503
fixes #33655
support escaped fwd-slash
remove gitContentProvider warning message
remove azure-account extension
fixes #33615
Opening WorkSpace opens wp file instead after upgrade (fixes #33614)
add `vscode.env.appRoot`
fixes #33153
Also @types/form-data
Add back production @types dependencies
Avoid error for invalid css emmet abbr
pick up new distro
Avoid saturation box repainting when unncessary.
Latest emmet helper for fixing #33579 and #33601
Update to TS 2.5
fix for no-folder case; fixes #33367
node-debug2@1.16.7 (Microsoft/vscode-node-debug2#135)
FormatString#toTextmateString
early support for format strings
Have two animations when jumping at large distances (#33347)
Smooth scroll when jumping within the same file (#33414)
list: respect selectOnMouseDown
Update distro
Update OSSREADME.json for electron1.7.3
do not show newFile / newFolder action for nonexistent roots
fixes #33309
fixes #33498
gray out nonexistent multi root folder
remove close repo command
Improve settings and keybindings smoke tests
result of first run of OSS tool
Revert "fixes #30323"
fixes #33383
clarify doc, #27939
remove devDependencies from shrinkwrap: see #33587
add a license override for "request" npm module; see #33587
Undo after external modification does not turn editor dirty (fixes #33580)
debug: do not allow to launch compound twice
linux: remove background color from icon for now
update distro
Set placeholder text in SourceControlInputBox
updated distro
Add option to show emmet suggestions as snippets #32346
#re #33344, revert the mouse move monitor checking as the bug is introduced by hue loss.
Only register for file: and untitled: (fixes #33133)
Trigger emmet on closing square brackets
Prevent multiple requests to windows-process-tree at once
Properly dispose of WindowsShellHelper
Allow waitOnExit when process is killed during launch
add 'editorOverviewRuler.wordHighlightStrongForeground' (for #26606)
use DAP@1.23.0
error/warning colors in overview ruler (for #26606)
fixes #33521
fixes #33452
make name mandatory; fixes #33361
Modifying report issues url to include command line options and smarter extensions table (#33225)
Editor: `reveal*` family of methods take a `ScrollType` which can be `Smooth` or `Immediate`
debug: never open internal modules pinned
fix #32993
fixes #33419
fix #33480
fixes #33359
don't show lightbulb for empty selections, #33241
debug: also propose adapters that have a contributed config provider
fixes #33499
fixes #30178
fixes #30323
fixes #31019
debug: remove unused MRU config list
fixes #33341
debug: when restarting extension host simply send a broadcast to reload to the EH
Tests for #33440
fixes #11918
fixes #33498
fixes #33383
Allow to open workspace files that are invalid JSON files (fixes #33502)
multi root - do not store empty paths back, fallback to "."
fixes #33394
fixes #33401
fixes #33464
fixes #33389
Empty path in the folders should be ignored (fixes #33393)
fix #33494
more fixing for #30674
--add of multiple folders should add to existing instance, not open new instance (fixes #33469)
Drag/Drop of folder named "tmp" does nothing (fixes #33466)
use getPathLabel also for recent menu
tfs: update git in linux build agents
better fix for #33462
Drag/Drop of folder shows "Move" action (fixes #33462)
Alt+letter file menu shortcuts no longer work in Linux (fixes #33479)
fix #33486
fixes #30624
node-debug2@1.16.6
Uplevel xterm.js
Refine noise check on js variables in emmet
Enable the use of comment filter in emmet
Support partial emmet preferences #32496
Clean up markdown preview fixHref to take resources instead of markdown uri
Remove filter by resource group from API (#33431)
Update distro
Allow WindowsShellHelper to compile on non-Windows
Revert "Use dynamic import for WindowsShellHelper"
Wait for login status to finish transition (#33138)
Remove filter by resource group (fixes #33431)
Change activation of azure extension
Update classifier for Editor area. May the force be with you, Alex.
debug: use one array instead of two in debug action item
fix #33365
#32962 Retain folders view if it was hidden
fixes #33395
fixes #33153
hide splitview in scm viewlet when empty
pop stash...
fixes #33251
fixes #33288
fixes #33325
fixes #33309
fix #30674 for real
Hey bot give debug issues to me, thanks bro
Improvement to configuration view suite
[json] match only schemas of current folder
[html] rename setting to 'html.autoClosingTags'
Set charset on contributed markdown scripts
Remove useless file.
OriginalColorBox in ColorPicker Header should render mouse as pointer.
Do not flush content change when moving cursor in ColorPicker
Absorb bug fixes from upstream
Avoid emmet suggestions for abbr that match document symbols #32647
Context key should be manipulated outside of common find widget component.
Use Find whenever it's Find Widget. Search is for Search Viewlet.
History support for Terminal Find Widget.
Add comment
Use the TextSource EOL when updating the model
Remove unnecessary change
Switch to using our existing diff algorithm
[json] update service (NPE in provideDocumentColors)
[theme] find widget: use widget border instead of panel border (layer breaker)
#issue 33155: treate .pac file as javascript file (#33245)
New triggers for extension recommendations (#33050)
[json] complete colorProvider adoption
[css] adopt languageserver colorProvider.proposed protocol
Create process using correct shell launch config on reuse
Store timestamp for filebased extension recommendations (#33105)
Relative paths in .code-workspace files are turned into absolute ones on save (fixes #33188)
fix #31351
:lipstick: resolveWorkspace
[json] adopt colorProvider.proposed protocol
make sure there are always stats
:lipstick: remove dummy provider
Refer to the CODE of Conduct file
No more need for workaround to Microsoft/monaco-editor#5
use async module loading for typescript, #33141
CLI: Allow to open multiple folders in one workspace (fixes #30599)
upgrade to DAP 1.23.0-pre.0
better gallery error telemetry
remove splitview weights
Revert bad merged PR (#32113) due to #33240
:lipstick: cli help
CLI: Allow to add additional folders to a workspace (fixes #30598)
IWindowToOpen => IPathToOpen
add aliases for xyzPluginHost, #11638
wire things up, use String#replace to implement transform
fix npe
fixes #33251
fixes #33136
Tasks: reveal: always / never / silent not a clear distinction
Move canUseTranslate3d to listView.ts, its only consumer
move API to stable
fix #31599
fix missing actor
Cannot Open my old workspace (fixes #33239)
add api-test for MarkdownString, #29076
clean up conflict staging prompt, added to stageAll too
Don't wait an entire frame to begin smooth scrolling
Compute max line width synchronously if possible (i.e. fast)
Small tweaks
Save a timer schedule call on editor scroll
Use Unicode characters instead of some HTML entities when rendering
Avoid Array.push
Use a single StringBuilder instance to paint lines
Use a StringBuilder for rendering view lines
enable dnd for problem files (#33243)
node-debug@1.16.7
node-debug@1.16.6
dnd for file search results
fix marketplace telemetry events
:lipstick:
:lipstick:
dnd - add text/plain as transfer data
add TM_FILENAME_BASE, #32737
node-debug2@1.16.5
Convert old style markup emmet snippets to new format
node-debug2@1.16.4
Also set documentListener to null after dispose - #19872
Update commonEditorConfig.ts
Initial changes
Create CODE_OF_CONDUCT.md
multi root - migrate hot exit to new workspace id
macOS: window not correctly restored in some cases
fix #33111
fix tests on windows
Use simpleFind.xyz for simpleFind command IDS
Review cleanup
SimpleFindWidget Re-Factor next,previous,history, single global commands Cleanup1
Working SimpleFind Service, isolation - pre- cleanup
Reveal Find on find n/p, add delayed update history
Hide input focus tracker, cleanup
simpleFind Add next,previous,history fix
More lazy loading of ts providers
Lazy load some ts providers
Pick up TS 2.5.1 8/25 insiders
Move rename provider to use async
Remove onDidChange handlers.
Update comments for editor.colorDecorators.
CSS/JSON extensions are using spaces...
Remove onDidChagne events. Deprecate [lan].colorDecorators.enable and use editor.colorDecorators for all.
Config migration
Move renderColorDecorator options to core settings.
Monaco API uses IColor
Remove useless color controller.
Color Decorator sits together with Color Picker.
Use single quote in imports
Update decorations in next tick when content changes.
Avoid memory leak of anonymous decoration types.
Limit color decorators count to 500 in one editor.
ColorPicker. Remove useless decoration class
Add a new option to control whether to render inline color box or not.
Uplevel xterm.js
multi root - be nice and also migrate UI state for new format
Use queryOptions to pass extensionView to telemetryData (#32998)
Change the default `editor.smoothScrolling` to false (match stable default behaviour)
Revisit code-workspace format (#33097)
scm: keep `scmProvider` context key
fix lint warnings
smoke test: fix bad code
smoke test: fix require issue
update smoke test local instructions
careful with Promise(async () =>
[css] update language server
[html] update langauge server
change polling frequency in smoke tests
Add MarkdownString to Hover and Decorations API, #29076
trusted -> isTrusted, #29076
Have a `startup` flag in the extensions activation times
Record extensions activation times and show them in the `ShowStartupPerformance` action
use ~~ for deprecation
use uuid for marketplace queries
fixes #33106
macOS: help icon refresh
update azure account url
Allows action on links with embedded tags (#29082)
update welcome url
Uplevel xterm.js
Welcome page icon needs to be updated (fixes #33095)
views: PersistentViewsViewlet
Downgrade Electron to 1.7.3 with debug fix
views viewlet: deregister doesn't remove splitview
move out util-methods to make MarkedString API ready, #29076
FIx #31577
Add test for #31953
MarkdownString#enableCommand -> trusted, #29076
first snippet transform ideas
:lipstick: multi root initialization
:lipstick:
fix smoketest
Include command id in error message
fix build
fix  #33047
Revert "Set electron version to 1.7.3"
Update imgSize tests to not use local file to fix build break
Editor model creation options do not honour folder scope yet (#32695)
windows-process-tree@0.1.3
Mark some ts extension settings as window
Defer code action edit creation until action is actually accepted
Workaround for #32470.
Set electron version to 1.7.3
update distro
Telemetry for Ext recommendations pop ups (#32995)
git: gitOpenRepositoryCount
:lipstick: #29076
git: init
native-keymap@1.2.5
remove todos
scm: show single scm actions in title
fix git.pullFrom group
replace MarkedString with object-type IMarkdownString, #29076
Add more data to extension telemetry - search text - index in the list
[html] remove document settings on buffer close
[css] remove document settings on buffer close
git: cant open resources starting with `.`
remove console.log
remove gitState
add Powershell '&' if necessary; fixes #33020
know decorations using command links v2, #29076
Revert "know decorations using command links, #29076"
know decorations using command links, #29076
know hover providers using command links, #29076
:lipstick:
have MainThreadTelemetry instead of fake telemetry service
Correct 'modifiedStop' deadstore by using it instead of 'modifiedStart' in line 863
fix #32961
Support themable active tab border (fixes #29333)
git: focus editor when opening file/diff from editor title
update distro for new icons
set background color for code icon on linux
üêõ include setext heading levels (Markdown) (#32987)
Support inferred TS/JS project per root
improve quoting args; fixes #21635
show progress indicator for implementation cmd (#32838)
Use async for releaseNotesEditor
Address feedback
Strongly type windowsProcessTree
Clean up imports
Use dynamic import for WindowsShellHelper
Remove watchdog for now
* more windows tests for the physical mouse wheel classifier; * adopt the classifier;
dropping multiple folders: open workspace
speed up config editing by disabling save participants
remove unused overload, #29194
Add a physical mouse wheel classifier with tests
remove unused IFileService#resolveContents, #29194
git, scm cleanup
git: status bar commands scope
Remove unnecessary line
mr - do not leak to stable release
make default uri optional, #13807
git: status bar
:polish: folder drop
Add smooth scroll on mousewheel with new heuristic
Add `editor.smoothScrolling` that controls if smooth scrolling should be on/off
expose some of the open-options, #13807
scm: remove switch provider action
scm: remove activeRepository from dirty diff decorator
No JS smooth scrolling in the `mousewheel` case
* switch to using ease-out-cubic in smooth scrolling * use `dom.scheduleAtNextAnimationFrame`
scm: remove activeRepository from SCMActivity
scm: commit from input box
scm: SourceControl.inputBox
make internal variant of MarkedString be a string, #29076
Replace all instances off "Focussed" with "Focused" except ContextKey (#32904)
scm: remove global input
Use a cubic ease-in-out function for the smooth scrolling animation
Validate outstanding animated scroll position target when the scroll dimensions change
:lipstick:
scm: deprecate scm.inputBox
ensure there are token before asking for the word at a position,  fixes #32756
rename git stash actions
No longer possible to drop a folder into Code to open folder (fixes #32537)
#32508. Emmet only force tokenization only when it is cheap.
Integrate native module for WindowsShellHelper
node-pty@0.7.0
* separate scroll dimensions and scroll positions * have explicit methods for changing the scroll position (delayed/smooth vs now/direct) that bubble up to the editor internals. * have all other clients of ScrollableElement not use smooth scrolling
fix #31768
[make] typo in OSSREADME
[make] update grammar to fadeevab/make.tmbundle
lint - single-quoted-imports only
fix issue when message has no extension
style - use single-quoted imports
scm: input boxes
git: fix same repo multiple times
fix #32877
git: lowercase all
show extension name with id, show title also on severity-label, #21302
scm: add/remove views
polish #31498
scm: better view ids
remove log
always quote env vars; fixes #28193
remove LC_ALL and LC_NUMERIC workaround for chrome issue of fat SVGs
git: improved discard all
quick open recent: handle case of untitled workspace better
fix #32874
fix imports to single quote
Bogous message when reordering workspace folders (fixes #31562)
fixes #32816
ext restart - do not throw error but warn if extension still talks to disposed host
fix wrong call of function in ext service
mr - do not prompt for window reload anymore
first cut of option-less open, #13807
multi root - carry over UI state to workspace
disable failing test
use highest placeholder index instead of placeholder count when merging final tabstop, fixes #32211
smoke test - increase pollTimeout
Trigger emmet for ! in xsl as it is a snippet prefix
Support for canvas,td,tr,th in emmet suggestions
No emmet suggestions inside script tag fixes #32732
Integrate official xterm.js types
Uplevel xterm.js
Add new Azure category
Update Interactive playground for emmet #32850
Continue emmet expand even if parsing doc fails
#32323, test case for formatter.
Float Alpha
Handle most of the forceTokenization callers (#32508)
Remove unused code
node-debug2@1.16.3
Pick up TS 2.5.1 insiders
Add shrinkwrap.json
Pull in latest xterm.js
Adapt the terminal for xterm v3
Naming
Revert custom application id
Surface credentials
Include azure-account extension
Remove proposed credentials API (#31131)
Use #welcome
Make language identifier case insensitive for markdown code blocks
Make sure we use the normalized path in the task provider in all locations
node-debug@1.16.5
Have terminal env config apply case insensitively
[css] update language server & client
fix #32788
fix splitview header actions
git: multirepo autofetcher
git: improved multirepo model
Deploy to Azure quick link experiment
show message source in title, #21302
focussed -> focused (#32521)
remove unused code
Disconnected proxies resolve all outstanding and future promises with a canceled error
send extension id to main thread and decide there how to show errors, #32766
properly spec error data,  #32766
prefix stack with extension id, #32766
don't log errors twice, #32766
scm: ignore uniqueness of `SourceControl.id`
fixes #32381
keep array in sync; fixes #32337
Move off RGBA in base/color, as it will soon move to floats
Update to native-watchdog@0.2.0 (fixes #32620)
use api version for uninstall telemetry
mr - migrate backups when entering workspace
Update Promise definition  (#30268)
Only send TS plugins that have registered for the document's language
Whitelist quickOpenNavigateNextInViewPicker in terminal
Show Azure extensions link
Show invalid version string if ts version cannot be determined
Trigger rename after refactor in JS/TS
Update comments for getModelMarkers.
Support commands for standalone language completion items
Use the fspath when dropping file into terminal
Uplevel xterm.js
Add null check in TerminalInstance.onExit
[python] update grammar
[themes] 'italic' on fontStyle marked as error
inline PathSplitter for less code
Implement extension host restarting
Have ExtensionService handle extension host process crashing
Towards being able to free all resources associated with the extension host process
Lift resources to members
Style changes
mr - simplify workspace actions in renderer
:lipstick:
remove unused telemetry
do not overwrite selected config name by contained name; fixes #32318
ignore menu items that have no command, fixes #32673
move find-file logic into fsprovider, wire things up end to end
fix glitch with badge in multi root search result
multi root - ensure unique tab labels when root names are identical
git: fix content provider events
git: multiroot content provider
api-ify search provider, needs query logic...
disable dummy provider
prototype - add ISearchResultProvider interface and wire things up
Make the compare action label easier to understand when file names are identical (fixes #30515)
Tab labels fail to identify "~" as a root path (fixes #32701)
safeguard deregisterViews
fixes #32652
fixes #32610
Copy Selection Not Saved (fixes #20269)
node-debug2@1.16.1
Add publishsettings to list of xml file types (#32641)
Automatically restart ts server after disableAutomaticTypeAcquisition config changed (#32412)
Remove overly wordy "Smoke Test Suite", change 'context' to 'describe'
Revert "Don't scroll to factional line positions in the markdown preview when wordwrap is off"
Don't scroll to factional line positions in the markdown preview when wordwrap is off
Add plugins property on TSServer open requests
Remove js indent on if/for/while block
Bump electron version to 1.7.5
Increase spacing between actionbar items
Improve error message when the extension host process is terminated by the watchdog
Cache proxied methods
Initialize extension host customers only after a connection has been established with the extension host; retire IThreadService
Handle RPC incoming messages in a single tick
node-debug@1.16.4
remove _isNodeDebugType when context
introduce DebugConfigurationProvider; fixes #32086
wip: register multiple source control providers
Further reduce usage of IThreadService
git: contextual repositories
scm: always show scm actions
fix smoke test for good
Revert "fix multiroot smoke test"
More adoption of @extHostNamedCustomer
scm: multiroot refresh
fix #31518
fix multiroot smoke test
scm: title
git: multirepo range staging
:lipstick:
ignore dispose-errors, fixes #30578
git: multirepo stageAll, unstageAll, cleanAll
Revert "Reduce logging (fixes #30578)"
Have MainThreadDocumentsAndEditors follow the lifecycle of the extension host
git: multiroot discard
git: multiroot unstage
use scoped scm label
fix hygiene in tfs
Use native proxies for renderer <-> ext host RPC communication
More adoption of @extHostNamedCustomer
run hygiene in tfs
remove unnecessary options for node
remove unused services
use properties
fix npe
ColorPicker: remove unused decoration hacks.
Keybinding text is not upadated on the menu (fixes #32574)
Use wmic path explicitly, add null check
enable loaded scripts explorer form debug type 'chrome'; fixes #32445
node-debug@1.16.3
Revert "update distro"
Address comments
eng - move the document content provider part out of document/editor management
git: open file, open changes
git: model -> repository
Add a mechanism to be a customer of the extension host (share lifecycle) and begin reducing usage of IThreadService
git: remove git init
fixes #32578
git: repository == scm provider
node-debug@1.16.2
git: multirepo clean
git: multirepo revert
git: multi repo stage
git: remove splats
Cleanup in ExtHostExtensionService
More cleanup around AbstractExtensionService
Simplify the implementation of ExtensionService
Simplify the implementation of MainProcessExtensionService
Simplify AbstractExtensionService
git model remove run
git multirepo stage
Added support for recursively collapsing directory using alt-click (#32475)
colorizer test fix
[php] update grammar
[docker] update grammar
[css] update grammar
[java] update grammar
[rust] update grammar
[scss] update grammar
[ruby] update grammar
fix spelling of 'iff' and 'idenifier' (#32401)
--debug => --inspect
model -> repository
Ampersands in context menu not displayed (fixes #31787)
Show terminal octicon and tooltip for commands in hovers, #29076
Not intuitive behavior of showInputBox (fixes #32186)
update distro
remove Resource from git model method interfaces
fixes #32459
Cleanup in RPCProtocol
Remove statics from proxy protocol
Clean up implementation of the proxy protocol
cleanup git stash functionality
wip: add across multiple repositories
:lipstick:
Use r+ with truncation when saving existing files (#31733)
Close untitled editors when confirmed to not save (fixes #29572)
Update left-hand side of "compare with saved" diff when changes occur (fixes #31569)
macOS: support native tab "+" button to open new window
Update cases to force tokenization for indentation
Upstream fix for #32263
Load stashes only when needed
Escape $ when not a tabstop or  #32420
Add commands
Repository and Model changes
lookahead not needed when running emmet expand #32478
Extract LazyPromise to its own file
Move more workbench code up to /workbench/
Add remove action for FolderMatch
Move code managing the extension host process closer to the extension service
Move extension service code to vs/workbench/services/extensions
Remove cyclic dependency between IExtensionService and IThreadService
towards ext-host-restart: properly implement dispose-methods in variouds MainThreadXYZ-types
remove unused property
different command syntax
Do not install the watchdog if the extension host is debuggable (#26445)
fix #30652
Add a watchdog mechanism to detect when the extension host JavaScript event loop is unresponsive (#26445)
fixes #32379
:tada: Change vscode launch configs to 'protocol: inspector' :fireworks:
Move the checks on abbreviations to helper module
Update PHP grammar
Transfer extensionHost from node-debug to node-debug2
Add empty problem matcher to "Run Dev" task
[json] Protect from incompete colors (for exception in #32298)
Using Color.fromHex with invalid input should return null
Ignore 'null' as color values
Remove fallback to html as this will enable emmet everywhere
When file cannot be parsed, dont try validations #32354
keytar should be a regular dependency
Add keytar back
Fallback to tab for non empty selections
Avoid error when tabbing on selection that is not abbreviation
Improve "uninstall first" messaging/grammar
More checks on css abbr
Global settings: bad overflow behaviour (fixes #27820)
Option to trigger emmet expansion on tab (#32334)
Change name of scss mode to SCSS
report uninstall telemetry
fix recursive next color format
export color formatters in modes
fix css color formats
cleanup formatter can format
ColorFormatter tests
add a missing 'no' to the WorkspaceFolder description
luminance != luminosity 2
luminance !== luminosity
color api: remove ColorRange.format
color api: docs
Color alpha isn't optional
fixes #32296
fixes #31649
update description (for #31529)
Explorer sort order: rename description (fixes #31513)
If explorer.sortOrder has an invalid value then it should fallback to default (fixes #31502)
Remove validation based on location for sass file #32281
Address comments
Return promise from emmet expand method
Add .cake file extension for C# language
Add error codes and func for rename branch
Implement rename branch command
Add rename branch command
update typedoc for getModelMarkers
ts format does not add space for type declarations
:lipstick:
git: cleanup tag
VSCODE_APPDATA
Colorizer tests: Accept tests when only scopes have changed
fixes #27779
Warm up tokens if tokenenization changes
Improved "Go To Bracket" to jump to next bracket. (#32110)
Spelling fixes
updating distro reference
color picker: pimp up sliders
color picker: more cleanup
color picker: minor fixes
color picker: finish widget refactoring
color picker: opacity strip
saturation, value box refactoring
:lipstick: more color picker cleanup
fix tests
color: simplify Color class
color picker: remove header dependency from model
color picker: more widget cleanup
color picker: merge widgets
color picker: remove widget dependencies
IColorFormatter
:lipstick:
color picker: remove decoration hack
:lipstick: color picker
remove comment
Remove tags that exist in MimeTypes
Remove unnecessary property
Towards deducing desired editor selection from a selectionchange event (#27216)
Use 'selectionchange' to detect when a Screen Reader positions the cursor in the textarea (#27216)
node-debug@1.16.0
color: HSVA, tests
color: remove getHue
color: HSLA
color: fix tests
remove public qualifiers
color: private rgba, hsla
introduce Color.Format
Closes #27410 - support multi-select on open file/changes commands Also stops the opening of an editor from stealing focus -- so that it is much easier to keyboard around (it also aligns with the behavior of the main file explorer)
Added ability to use tilde as home dir in config for cloning repos - See #31878
README for Emmet
Address changes
Add kill terminal option
Add More Info link to markdown preview security settings dropdown
Address changes
Add check to webContentsDestoryed on webview layout
IColorTheme.tokenColors is always present
[json] grammar update script for new repo
Revert "adjust another smoketest"
Revert "temporarily disable faling smoke test"
convert string into IContent; fix for #32135
Add markdown preview refresh command
Add create new terminal action to term quick pick
adjust another smoketest
Remove webview telemetry event
temporarily disable faling smoke test
Update yauzl and vscode-ripgrep
Default for showExpandedAbbr setting to always #29968
bump vscode version
fix tests
debug: use more general description for other stopped threads in allThreadsStopped case
Reveal debug configuration when pressing edit
documentSymbolProvider for launch.json
debug: consolidate process name
update distro reference
Update distro commit hash
Update repo url for json tm
OSS tool update
Update Go indentation rules
Reduce logging (fixes #30578)
fixes #31125
Remove debug option
debug: first fire process start only then change active
Debug: fix debt around preLaunchTask
Debug events: sessionId should live one level up from the body
[json] enable color picker
[json] update service (fixes #29949)
Temporary fix for #31972
debug: drop support for variable substition for program and runtime in package.json
Set saved process to null
Fallback to html only if emmet supported
Don't kill ptyProcess on Windows
Delete rogue line
Make sure we don't set diagnostics in js/ts when validation is disabled
Fallback to html when syntax is not supported by emmet
Update PHP grammar (temporarily from a fork that contains the previous version + an important change to fix #30448)
Cleanup markdown security setting selector UX
Use emmet helper from Microsoft repo
Make sure we only mark one selected TS version in the picker
Configure Exclude status bar item should open config directly
respect allThreadsContinued in ContinueReponse
Tests for the new wrap abbreviation command
Emmet wrap individual lines with abbr #31814
Reduce flickering in the markdown preview
Always use fileSearch to pick up tsconfig.jsons
Since wrap with abbr is not supported in css, it can fallback to html
test for nested groups in emmet
Present all possible local ts versions in the selector
Absorbing fixes from upstream
Use umd module for expand abbreviation
Don't seed terminal find for mulitline selections
better desc for linkify setting
Add linkify setting for the markdown preview
VSCode -> VS Code
Do not throw on top-level property access (fixes #31854)
Populate rename for terminal
Remove redundant markdown name in change security command
Show error message in TS Version picker when TS verison cannot be loaded
Configure for 1.15
Treat style tag contents as css when commenting fixes #31685
Deprecating old emmet  (#31783)
Set machine id in shared process
No need to use our own fork as upstream fixes are now in
Improve php language config
Capitalize cmd name
Use async for TS code action provider
Use fork of emmet modules to get latest fixes
Allow selecting invalid TypeScript versions if you have configured these in the typescript.tsdk setting
Use async in workspaceSymbolProvider
Code cleaning for simple find widget
Use %F for new windows too
Use %F in code.desktop instead of %U
Do not open Welcome page on reload (fixes #30997)
Cleaning up version provider
Use TextEdit in Emmet extension
Map Sysnative paths to System32 on non-WoW64 envs
Use label instead of path for typescript task info
Use async for hover provider
Support LESS and SASS in color picker. Resolves #31753
Resolves #31646
Corrected hue calculation.
Bump node-debug2
Bump node-debug2
Move emmet config to extension
Remove non abbr related emmet actions from core
Emmet Toggle Comment CSS Improvements
Allow 'esc' to cancel search from include/exclude boxes
Remove task panel experiment
node-debug@1.15.19
Add "Learn More" link to search viewlet when no search results are found
Search include/exclude patterns are not applied to open files - fix #29658
Remove "in x folders" text on the search result message
Support excluding ./ and / paths in search viewlet - fixes #31492
Added indenting on "local function"
Add indentationRules for Lua
More changes
More comments
Address comments
Remove experiment
Add context key and refine quickpick for terminal
Add rename action for terminal quickpick
Disable some menu items without window (fixes #30514)
Improve warning messages (fixes #30434)
Uplevel xterm.js
Clean up windows shell helper
Address more comments
Address comments
Update dotnet build task
debug: simplify debug start enablement
make vscode.d.ts-link detector fit for multi root
update doc comments, rootPath and workspaceFolders
context key service seems to send null-events... #30942
Resolves #31645
Add markdown links; fixes #31594
fix typo
update API
update API doc
fix #31553
re-escape choice elements when checking for bogous snippets. fixes #31521
comment out test
Improve wording #31564
fix hygiene
Improve wording #31564
No user selection on the hover
Update header when next color mode selected.
Revert "Implement include/exclude precedence for non-rg search"
Revert "Implement search include/exclude precedence per #27226"
Revert "Include/exclude precedence tests"
Revert "Enable multiroot folder exclude precedence test"
Add comments and add keypress listener
Remove sysnative advice from shell.windows setting
Uplevel xterm.js
fix spelling setActiveSCMProdiver -> setActiveSCMProvider
#31541 Improve description
Reorganize terminal termination logic
fixes #31546
Integrate API changes into extHost
Do not close color picker if selection has happened within it.
IColorFormat -> ColorFormat
css color formats
Simplified extHost <-> mainThread communication by having color formatters map on both sides.
debug: some select options should not remain selected
make color contributions internal
missing monaco.d.ts
node-debug@1.15.18
Do not reschedule hover operation when color picker is opened. Removed redundant property.
Corrected formatting
Add vscode-nls to shrinkwrap
Bump node-debug2
Toggle comment shld ignore whitespace when fetching nodes
Tests for Emmet Toggle Comment
node-debug2@1.15.1
Use --inspect to debug the extension host
Tests cleared and updated.
Repository link added to extension workbench:
Support added to extract repository url from extension data
Move non abbr emmet cmds from core to extension #29969
node-debug@1.15.17
add parse-color to css extension
Support bem filter in emmet fixes #30395
introduce modes.IColor
introduce IColorDecorationExtraOptions
Disable emmet for excluded languages, add tests #31453
Indent Rules for Less
Indent Rules for PHP
Indent Rules for C and CPP
Reverted redundant changes
Bug fixes
css: report colors through provider
fix file name casing
Added proposed api to CSS
debug: do not delay variables request on explicit focused stack frame change
:lipstick: remove more things from Promise that are winjs specific
explicitly restart extension host on eh debugging
fixes #30640
:lipstick: remove usage of Promise in favor TPromise
fixes #27779
wip: Color provider implementation start for Joao
update explorer title on change workspace name
fix 64 bit ad
fixes #31019
fixes #27229
instruct about 64 bit windows
fix an issue with snippet choice
debug: do not reveal mru list yet
Live edit in the editor model. Sort colour picker hovers to be the first messages on the hover.
fixes #28639
Add debug to views location extension point
Update description for scope property
#29462 Improve wording
node-debug@1.15.16
debug configuration: store on shutdown
debug: use mru list for configs
debug: "Show More..." in select dropdown
Simplified colour picker model construction
Corrected color model changing logic.
Revert 32 - 64 bit update
also disable snapshot creation for mac/linux
more precise mksnapshot version, tho doesn't help...
Update opacity and hue slider when color is picked up initially
debug: launch.name
debug: make root not optional in start debugging
Added surfacing multiple color formats
Update description for workspace config properties
bump electron-snapshot version
#29462 Show an info icon for unsupported workbench settings in workspace settings
debug: take the first launch if none was previously selected
Root folders need a different icon as regular folders
FIx #31436
Use built-in snippet formatting instead of custom for emmet
 Tests for Wrap with Abbreviation
Debug config for emmet tests
Renaming for clarity
Tests for Expand Abbreviation
Clean up
Add emmet tests to test-integration.bat
Tests for Emmet Balance In/Out
Remove loader snapshot
Emmet Tests for Next/Prev Item for scss with nested rules
Emmet Tests for Next/Prev Item for css
Emmet Tests for Next/Prev Item/Editpoint for html
Updating name of the command in tests
Command added
Set errorlevel to 0 if it's 255
Enable multiroot folder exclude precedence test
Implement include/exclude precedence for non-rg search
node-debug@1.15.15
update to DAP 1.22.0
Refining position validations for emmet completions in scss #30188
promote 'startDebugging' and remove 'startDebugSession' from debug API
#29462 Improve wording
Extension download count - use current locale for number formatting
Adjust debounce time
Update C# TextMate grammar with support for #r and #load directives
Map reflect css value command to the one in emmet extension
#29462: Improve message
#31246 Revert changes - Revert auto saving settings - Revert virtual editor for workspace settings in MR workspace
debug: varios todos
Updated API to declarative way for supplying color format.
Implemente feedback
debug: configuraiton manager check name before selecting it
debug: do not resolve program and runtime if there is no root
debug: multi root debug dropdown
fix an issue with variable names and snippet rewriting
normalize selected text variable when resolving it, #31124
prep for #31124
follow up changes to @enabled query PR
Make @enabled extensions part of installed extensions
Version 2
debug: start debugging select configuration
multi root configuraiton resolver service
fixes #31376
fixes #31364
#31034 Register resource configurations schema
Escape $ when its not a placeholder
API version #1
Include/exclude precedence tests
Implement search include/exclude precedence per #27226
Escape $ only when wrapping with abbreviation
Uplevel xterm.js
Support multi cursor in Emmet Update Image Size
Kill process tree when killing terminal
Show multiple node_modules versions in TSVersion picker
Block svg images in markdown preview by default
Listens to newline or linefeed
Multi-root querybuilder tests
Tests for Remove, Split, Join and Match tags
Renaming utilties for clarity
Emmet Reflect CSS Value in html files
Tests for Emmet Reflect CSS Value in css files
Commenting emmet integration tests
Route ReflectCSSValue command to emmet extension
Emmet: Reflect CSS Value in extension #31298
Emmet update dependencies
#29462 Indicate unsupported settings on a folder level
#29462 IConfigurationService.keys - Provide folder specific keys
Implement #29831
scm: fix contents not visible
git: model commands
fix compile error
node-debug@1.15.14
missing change
#31191 Use deboune event instead of delayer
some after math for #30829
#31246 Use the default conf value of `files.autoSaveDelay` for auto saving settings
Keep throwing but add a little more context, #30942
Revert "fix #31124"
add root folder to startDebugSession
debug configuration manager: multi root preparation
fixes #24119
call createInitialConfigurations command with root folder
call createSession command with root folder
start with a test, #31275
better choice handling, #17545
Added ColorMode to API.
fixes #31226
node-debug@1.15.13
Treat inline as block only for multi line text #29898
Route updateImageSize cmd to emmet extension
Updating shrinkwrap for emmet
Refactoring UpdateImageSize.ts for simplicity
Emmet Update ImageSize inside style tag
Emmet Update Image Size command
Source terminal dimensions from only the outer container
Indent adjustment not required for single line #29898
support hot registration emmet (#29986)
add WorkspaceFolder to proposed debug API
Always disable on stable build
Provide commonly used tags as suggestions
Add dependency on libsecret-1-dev
Tsconfig provider handle workspace folder changes
Disable failing emmet test
Test for Emmet Update Tag #8454
Use @types and import in markdown extension
Make keytar a required dependency
First set of tests for Emmet commands #8454
fix ia32 Dockerfile
ia32 x64 docker files
update v8-profiler, #31096
Uplevel xterm.js
update grammar/snippet document, #17545
better parsing of choice elements, #17545
#30955 Implement virtual editor for workspace settings in MR workspace
Add fromHSLA and fromHex methods to API
special hover message for command links in the editor, #17545
first end-2-end for choice in snippets, #17545
window picker: allow to close window from picker
Updated color API and color info conversion between extHost and main. Added color picker disposal, more listeners.
add Choice to syntax tree, #17545
picker: allow to remove an item easily
:lipstick: wording
fix casing in recently opened
properly detect insiders for smoke test
clarify TaskProvider#resolveTask
simplify things
32 - 64 always bump
Allow to remove files from the Open Recent list (fixes #15340)
#30955 Auto save the settings
less title updates (wait for workbench created)
more title updates on window load
fix build
Move indent tests to the same suite
Uplevel xterm.js
First cut supporting tsconfig task provider for multiroot workspaces
Move formatting provider registration logic into a manager that enables or disables based on config
Remove attach to ts server from launch.json
Don't register language configuration for TS plugin languages
Move jsx tags mode language config out of language provider
Add support for workspace relative tsdk settings
Re-enable TS refactoring provider
Show path labels for TS version picker in multiroot cases
Added API to access markers
Call debounce on enter
node-debug@1.15.11
node-debug@1.15.10
Move folder entries into main list
#31008 Implement Open workspace config file global command
#12976. FSharp auto closing not in string
Normalize file watcher paths on Mac with NFC
add test for incomplete placeholder `${1:}`, fyi @aeschli
wip: create dockerfile for 32 bit linux build agent
basic parser support for choice, #17545
Remove some comments
more prep for #17545
api: WindowState
Set the stack frames for exact position we requested. To make sure no concurrent requests create duplicate stack frames
smoke test: only run multi root test against insiders edition
add token types for a start, #17545
add "Find in Workspace..." to mutli root context menu
multi root: allow target extension development window to be a workspace too
Smoke test for multi root (#31059)
Use FileKind.ROOT_FOLDER
Only render folder matches if in workspace
Group extraFileResources into Other files group
Directly use TrieMap rather than Workspace
Include result count in informational message
Add .foldermatch CSS rule
Ignore empty FolderMatch in search tree model
Specify SearchResult.query in viewlet and result test
Specify folderQueries in SearchModel test
Use file count for folder count badges
Result count text includes folder count
Render search result path relative to repo
Render FolderMatch icon as folder
nit: Remove parens on single arg lambda
Use original name of replacingAll
Use FolderMatch in RemoveAction
Revert "Avoid typecasts in RemoveAction"
sort FolderMatch by order defined in input
Move query into FolderMatch constructor
Auto-expand FolderMatch
Group FileMatches by QueryFolder
Avoid typecasts in RemoveAction
Use SearchQuery.maxResults for SearchResults
Use SearchQuery rather than Pattern in SearchResult
Use the root folder name for the short path
assume window starts focused
dead are getters, long live readonly
API: window.isFocused, window.onDidChangeWindowFocus
rename event
fix #31124
multi root: restore untitled workspaces based on untitled workspaces on disk
show IntelliSense window when having multiple tab completions,  #22216
one less service dependency, prep for #22216
wording (#31033)
wire debug API with new debugService.startDebugging
Shortening the path name for scripts
Implement configuration based 'startDebugging' debug API
introduce windowService.onDidFocusChange
introduce createDecorator
One URI is enought..., fixes #31038
guard against roots being empty
tweak 32 to 64 bit upgrade
Allow to open *.code-workspace file as text file (fixes #31008)
simplify workspaces menu (fixes #31005, fixes #31036)
remove "New Workspace" (fixes #31080)
support for root folder icons (for #30998)
improve wording (for #30966)
Root folders need a different icon as regular folders. For #30998
Remove context key not being used
[scss] update grammar
Refactoring
Refactoring
Address comments
node-debug@1.15.9
Make selectionSearchString indepedent of context.
Ensure it works even if no editor is open.
Tests for getSelectionSearchString: simple position, with simple selection and with multiline selection.
Remove timeout and fix event trigger
Copyright header.
Moving code incorporating feedback.
Remove errant queryBuilder test
Remove `suite.only`
queryBuilder unit tests
Reduce dependencies
Remove check.tscVersion setting
Address feedback
Combine custom snippets from base syntax #29146
Added support for multi root folders
npm task provider should not provide pre, post scripts - #30843
Do not use special color for multi root workspace (fixes #31007)
debug: Ignore attach events for session that never existed (wrong vscode windows)
fix #27989
simplify snippet parser
emit events
Added color provider to proposed API.
:lipstick:
fixes #30946
more tweaks for (#31014)
fix #31040
improve wording (for #31033)
streamline update process
better wording (for #31014)
windows update noLink: true
store arch in auto updater win32
stricter layering rules
debt - avoid heavy dependency of debugService to extensionHost
get rid of workbench IOptions
EH debug: create new session and dispose old for every attach
Correct type check on the hover provider.
Moved colour picker to a hover.
fix #30508
:lipstick:
Change 'Closed Workspace' to 'Closed Folder' when we are not using a Workspace (fixes #30970)
Revert "Deployment experiment"
Revert "Collapse deployment view"
Revert "Spelling (fixes #30611)"
Revert "Update Azure URL"
Proposed credentials API: Patchwork
Solarized light: make brwhite contrast with bg
Remove "files excluded through settings" box - #27226
Add terminal quick picker
Rename searchQuery.ts to queryBuilder.ts
Proposed credentials API: Linux dependencies
Block Comment - Leave cursor after token and Space
Proposed credentials API
#30955 Protect from unknown targets
#30955 Implement a workbenc action to open folder settings
#30955 Initialie workspace config file with empty settings object
:lipstick:
#30955 Update the input name
#30955 Introduce Settings targets dropdown widget
#30854 Improve wordings
add proposed 'startDebugging' API
Remove redundant block comment tests.
uri - fix windows tests
:lipstick:
Add workbench.fontAliasing configuration option (#30628)
mrw: only set status bar color for our default theme (light & dark)
Some settings for customizing the statusbar colors are missing (fixes #30780)
node-debug@1.15.8
improve doc for startDebugSession
pass on --debugId from extension host to debug
mrw: enable "new workspace" when no window opened
mrw: make sure "open workspace" is enabled when no window is opened
node-debug@1.15.7
debt - only have one parse method on SnippetParser
fix npe
simplify API to pickAndOpen
getMostSpecificScopes: if there are multiple scopes that contain a range return all of them.
node-debug@1.15.6
simplify URI implementation
always expand single folder workspace and multi folder workspace with only 1 root
add _isNodeDebugType key
move back to vscode-ripgrep 0.0.12
Revert "Make npm install work again with NPM 5"
add telemetry to opener service
wip: breadcrumbs for michel
make window finder fit for workspaces
:lipstick:
debt - convert workbench action to comand
polish callstack expansion
better fix for #30769
save workspace: always use parent of first folder as default target
Revert "fix #30769"
Prevent recursive compound launch configs
revert the changes
"Load More Stack Frames" do not blink while stepping
add a method to fully resolve a workspace on the main side
Investigate #30902
:lipstick: and remove unused code
merge findWindowOnFolder and findWindowOnWorkspace into one
Added oxford comma and fixed macOS spelling
simplify closeExtensionHostWindow via broadcast
MR: allow to drop workspace file into window to open
polish mr dialogs
debugHover: first layout then scanDomNode
fix #30769
Try#30902
fix workspace name style
:lipstick:
:lipstick:
Add Block Comment tests
#27226 - include folder glob when global include isn't specified
Add null check before updating extensionsPath for emmet
Avoid producing empty IExpressions - empty include matches nothing
Handle empty folderResources for file query
Absorb changes to the vscode-emmet-helper 0.0.19
update grammars
Clean up SearchQuery, move the glob portion of paths to ISearchPathPattern
Update seti theme to jesseweed/seti-ui@c44b29c (2017-06-26)
Change filename
debug API: add onDidStartDebugSession
Refactoring
Ensure resource path is set
Update markdown extension to support multiroot
Get rid of searchPaths - cleanup for #27226
Get rid of glob buttons for #27226
Exclude input box should take precedence over the settings excludes on folderQuery (not taking into new precedence rules, to be implemented later)
Reenable test-int-mocha.sh
Update vscode-ripgrep with temp fix
Rework wording of insecure content message
Address changes
Allow running security setting command from md file
First cut of new markdown securty levels
Improve wordings
enable "clear recently opened" also when no window is opened
Comment out test-int-mocha to unstick builds
show distinct workspaces in history even if ID is the same
tweak workspace label
Disable search integration tests
Extracted saturation box to a separate class.
Workspace can't be saved with same name error (fixes #30786)
MRU list for workspaces does not show the recently opened workspace (fixes #30863)
node-debug@1.15.5
fix corrupted vscode.d.ts
Ensure opacity is preserved when saturation changes.
back to rootName as default in window title
title: update title when workspace name changes
fix window closing
handle errors in config watcher
Cleanup
Rename 'Save Workspace' action to 'Save Workspace As'
Handle workspace actions in an empty workspace case
Work correctly with HEX mode touches.
propose 64 bit windows update
show save dialog on correct window
make `asRelativePath` include the workspace name if there is more than 1, #28526
only ask to save untitled workspace when not quitting
Opacity background to be more transparent.
Saturation box to compute saturation based on colour blending.
vac prep
fix enablement of menu
set enablement accordingly
only open empty windows when no other windows opened
fix button labels
#30856: Register schema for workspace configuration file - Both saved & unsaved - which supports intellisense in the files
only restore windows on initial startup
always validate workspaces
:lipstick:
:lipstick:
fix #26511
debug api: rename createDebugSession to startDebugSession
fix npe
:lipstick: align deprecation comments
implement "hot exit" for untitled workspaces
lifecycle: allow main side unload participation
fix
#30838 : Naming of files explorer section - Always show workspace name - Section root should be folder in case of single folder workspace
moved issue_template to .github folder
Added colour overlay back to opacity strip
fix #30581
Moved Hue strip to CSS gradient, changed calculation over hue and opacity.
restore previous code to support opening same workspace with different config path
delete untitled workspace after saving
Fallback to document lang when no args are passed to emmet cmd #30600
[perl] update grammar
introduce and adopt workspace save event
simplify workspace actions
Workspace files.excludes for sub-folders no longer works (fixes #30723)
Add showTextDocument(uri|file)
Keep undo history even when file changes outside Code.
small typing fix
Remove inner whitespace on toggle block comment
electron@1.7.4
Do not reload when saving a workspace
Create electron main process services in workbech main
Remove unused electron window variable in window
Update yauzl to a newer version to fix electron mksnapshot extract errors. Possibly due to a dependency chain mismatch pulling in an incompatible extract-zip version.
fix: "No Results" error message color in find widget
First cut of watch for tsconfig task
Prep task provider for muiltiroot
enable markdown extension API
fixed typo (#30653)
Update Windows process name in integrated terminal on enter
Add bottom padding to integrated terminal
:lipstick:
simply snippet parser
start with fwdslash token,  #6920
get rid of unuseful onPathsOpen event
fix compile
Added default Windows behaviour to reset slider to top 0.
move mult-root API out of root, #28526
make `getWorkspaceFolder` return the parent workspace if a workspace is presented, #28526
:lipstick: windows switcher
improve workspace label
name it `getWorkspaceFolder`, #28526
enable EH debugging for multi root workspaces (workaround for #30698)
lazy load jschardet (#30688)
always use default window state when running extension tests
windows: fix issue where removing workspace from jumplist would not work
lazy load https module
lazy load https?-proxy-agent
add test, fix getContainingWorkspaceFolder, #28526
remove some unused code (part of #29460)
add jsdoc for multi-root api
teach lint rules new dynamic import statements
fix npe on startup
:lipstick:
temporarly disable failing test: getAbsoluteGlob_win
Use sysnative on 32-bit process on 64-bit Windows
Remove terminal onData API test
Implement combining search paths with glob patterns - #27226
Don't throw errors from QueryBuilder for now
Implement ./ and absolute path searching per #27226
Update Azure URL
Type Terminal.loadAddon
Address comments
Add thumbs up/down icons
Address feedback
Add feedback functionality and improve layout
Task panel version 1
Removes picture and adds hard-coded task panel mockup
adding picture for task panel
Refactoring
Add buttons to task panel
fix task panel
Add actions to task panel
Task Panel prelim changes
Improve xterm.js typings
Uplevel xterm.js
Remove Terminal.onData proposed API
added silent setting
update distro reference
Spelling (fixes #30611)
:lipstick:
have an explicit WorkspaceFolder with some extra bits and pieces, #28526
:lipstick: introduce type for single folder case
mr: unify recent history for workspaces and folders
fix #29933
naming :lipstick:
mr: reload window when opening same workspace with different configuration path
simplify Windows.closeWorkspace()
clarify jsdoc for word at pos, #29102
improve whitespace detection when searching for word at position, #29102
associate JSON mode with code workspace files
fix tests
mr: reload window when first root changes
.code => .code-workspace
Sort by type doesn't affect folders (#30572)
fix default button
fix distro commit
multi root :lipstick:
try to fix flaky linux tests on travis
Feature 30055 - Disallow staging of files with unresolved conflicts
Collapse deployment view
Render markdown content codeblock as actual block elements instead of a span containing a div
Deployment experiment
#29455 :lipstick:
Disable TS refactorings
node-debug@1.15.4
Unused import.
Changing ShowAllSymbolsAction to use ICodeEditorService for prefix and preselecting the word in search too.
update distro reference
Update TS grammar
Use partiation for all webviews, but lump all svg-webviews into same partiation
Delete unused interface
Move webview dev tools command to contributions
Move webview style changes to after we set all other attributes
file association for code workspace
first cut actions to save/open workspace
MonacoEditor. process is not available in browsers.
Update open in terminal name
Remove webview stats telemetry event
Force kill tsserver on ts extension shutdown
Build VSCode using TS 2.4 (#30473)
support workspace identifier in broadcasting API
#30249 Add Hide Side Bar action
adopt workspace for getWindows() call
node-debug2@1.14.5 - fix #30458
:lipstick:
:lipstick:
linting
fix issue with used windows
first cut workspaces in recent history
recently opened: some renames
log api uage only once, fixes #30486
introduce new status bar color for multi root
adopt multi root for title variables
:lipstick:
delete cached data for insiders sooner, #29960
#29455 Actions to create a workspace. Support add folder to workspace only in multi root workspace
node-debug@1.15.3
#29455 Create apis in workspace context service to know the type of workspace that is opened
typo
prevent empty workspaces
Close Folder => Close Workspace
remove unused method
export define and require functions
#29455 Mulit root support in - Workspace context service - Workspace configuration service - Configuration editing service - Workspace editing service
remove assertProposedApi from debug API
Moved to global mouse monitor for saturation box.
set exec bit in .sh
fix #30407
tree: listen drop on wrapper, not window
fix eslint warnings in gulpfile.vscode.js
HTML saving as RHTML (fixes #30444)
Move our watermark to resources so that distro can pick it up (#30256)
IWorkspace => IWorkspaceIdentifier
prefer workspace object over workspace config path
Remove use of module path
Move API to own file
workspaces main tests
add more debug API
Remove the checkTSC warning
üíÑ
Restore previous property highlighting for Monokai dimmed
Revert back on terminal related explorer context actions registration point. Move them back to parts/execution. Dan may want to refactor it and merge with Terminal.
Remove terminalCursor.foreground defaults, in favor of terminal.foreground
IWindowsService.openWorkspace()
increase mooncake blob service timeouts
first cut workspaces service
added Config information
[WIP] Added support for -S for signing git commits
fix #29469, remove unsued code
Reverting the changes. Show root as section in when single root.
remove need for --remote switch just go with proposed api
:lipstick:
keep workspace config path as UI state property to restore
fix npe for good
refactor workbench startup code for new workspace metadata
fix issue
[cpp] update grammar
make arch a script argument
[razor] update grammar tests
[razor] update grammar (fixes #30084)
wire in support for opening workspace config from the main side
Removed color mode toggle button
[scss] update grammar
[php] update grammar
proper loader path for win & linux
add linux build step, remove gulp tasks
windows build step to create loader
Add a schema association for babelrc #30380
add snapshot as build step instead of gulp task
update mac paths
wip: model registry
tweak mac, windows build scripts
more targets with snapshots, #28492
:lipstick: backup main service
clean up backup main service
use logservice in more places
Added an Enabled menu item to extensions
Add rebornix for editor
Adding mjbvz for JavaScript and TypeScript
Remove redundant order initialization
Move Open In Terminal registration and config to File part
incorporate debug API feedback
Register corresponding terminal in ExplorerViewerActionContributor.
Preserve all key presses, sanitize sendText()
Delete html zone experiment code
Update desc and strong type terminal env setting #14973
Seed terminal find widget with current selection (#30351)
Preserve '\n' (fixes #26786)
Set TERM_PROGRAM in terminal (#30346)
Shrink terminal find widget to max terminal width (#30348)
explorer - always expand single root folder
Add setting for passing env var to terminal. #14973
Added opacity behaviour.
guess linux file paths, #28492
proposed API and its wiring
move things that belong into window into window
more simplification of file opening within folder
reuse code to open files in a specific folder
Minor tweaks for show running tasks
wip: scm menus
starting with remote file service
fix ambiguous IWindowConfiguration declaration
let debugContentProvider support sessions
wip: adopt ViewsViewlet in SCM
make single-folder case more explicit (rename workspacePath => folderPath)
fix #29041
fixes #30085
more :lipstick: around window finder helper
:lipstick:
:lipstick:
Show unsaved file modifications by opening a diff view (#30210)
Select for Compare disables context menu in OPEN EDITORS (fixes #30269)
node-pty@0.6.9
debug api: fix _findProcessByUUID
Remove deprecated xterm.js call
Align delete word terminal actions with editor
alt+delete to delete word after cursor in terminal on macOS
Support delete after cursor and adjust keybindings
Make some terminal instance code less verbose
Support multi-root in terminal link handler
Use same font size and fg color in terminal widget
nsfw@1.0.16
Find in webview based views (html preview, release notes, extension editor) (#30016)
Uplevel xterm.js
Tweak file limits based on experiments (#30180)
Added more colour models
explorer: always show root folder and name the section "Folders"
fix npe in quick open
Do not sync large models to web workers (#30180)
Hint lines array size for faster model creation (#30180)
The indentation guesser only looks at the first 10k lines (#30180)
Do not compute a hash if it is not used (#30180)
Also enter the large file case based on line count, not just on file size (#30180)
Avoid `(sliced string)` slightly faster (#30180)
Removed editable text area, extracted dom elements dimensions to CSS.
fixes #30214
Add API to open a file or diff editor on a specific selection range (fixes #30241)
#30120 Feedback
Reverting #30215 since it looks like a TS compiler problem.
fix issue with closeEmpty
Add prefix argument to Quickopen command (CTRL+P) (fixes #28617)
Added InputBox instead of text div for manual colour change.
closeWhenEmpty: default enabled is a bit too aggressive (for  #7930)
Avoid usages of `.row` in command palette
Added missing async
Added waiting for viewlet to be opened.
Corrected rejection description.
fix tests
Add 'useRipgrep' to search telemetry
pulled master
node-debug@1.15.2
proposed debug api: add support for custom DAP events
Avoid `(sliced string)` (#30180)
Add and use `IdentityCoordinatesConverter` (#30180)
Extract IViewModelLinesCollection (#30180)
Expose TextModel.isTooLargeForTokenization() (#30180)
vscode.TaskGroup.Test should be Test, not Clean
Add tests for TerminalPanel.preparePathForTerminal
Support reordering of views in split view by drag and drop
#30120 :lipstick:
#30120 Sort always by default order
#30120 Disable ordering from view state
#30120 resolve compilations
#30120 Let debug and extension views to be display toggled
Code tweaks
Implemented opacity slider
Remove unusued arguments
Added better hue strip listeners. Extracted opacity strip to a separate class.
Add lazy markers assignment to MinimalModelLine (#30180)
#30120 Support for reordering views in side bar
Add and use MinimalModelLine (#30180)
Restrict usages of new ModelLine (#30180)
Clarify usage of TextModel.isTooLargeForHavingAMode() (#30180)
Use IModelLine in split and append (#30180)
Extract AbstractModelLine (#30180)
Explicit getters and setters for IModelLine.isInvalid (#30180)
Extract IModelLine (#30180)
debt - simplify text editor options
Remove ModelLine._lineNumber (#30180)
Eliminate ModelLine._lineNumber usage in ModelLine.append (#30180)
fixes #27271
diff editor: do not auto reveal first change when selection or viewstate is provided
git: remove unused command
fixes #30179
fixes #30162
tfs: increase retry count when publishing to azure
Commands picker: search value no longer trimmed (fixes #30174)
Addresses #26184 - use configuration for pinned default (#27357)
:lipstick:
avoid "empty window" term
Various kinds of sorting in explorer (#29509)
node-debug@1.15.1
fix typos
Debug API for tracking current debug session; fixes #30157
node-debug@1.15.0
Disable open trigger file in configFileEvent
Render default settings editor contributions immediately after model change
Access views from Splitview
Clean up terminal prelaunch input queue
Added model update on hue value change.
text diff options support (for #30085)
fixes #21439
Use builder pattern to be consistent
Added hue slider UI.
More deprecation
Implement #30120
tfs: check both azure and mooncake when uploading assets
fix smoketest
Remove usages of `var`
Q data during pty launch delay
Implement context menu actions in CompositePart
Added general event listeners, slight touch on UI
make proposed Debug API official; fixes #30096
use nvm in tfs build agents
Shift diff up to get to boundaries (#30087)
prettier diff (#30087)
Better template properties order
remove task.api.ts
Changed UI draft.
More functionality
Colour picker schematics
Pick up TS 2.4.2-insiders.20170630
Escape text (fixes #29893)
Resolve timeout issue
Properly format file path on drop in Windows
Separate exeriments from telemetry (fixes #29339)
Show git clone progress in status bar and source control feed
fixes #30054
getWorkspace2 => getWorkspace
Please support custom titlebar border on Mac (fixes #30020)
debt - move workbench.main into workbench folder
Untitled files show up with "/" as description in some places (fixes #29936)
debt - more cleanup of window services
wording
debt - some more var => let/const
debt - shuffle some windows service methods around
Allow pickers to provide an action to show in the pick list (fixes #29716)
When using --wait and a file is passed, close the window when last tabs closes (fixes #28661)
code --wait should return control when closing window (fixes #18199)
Space is used to expand select box, do not propagate it (prevent action bar action run)
OSX: Automatically close (non-project) windows when their last editor is closed (fixes #7930)
fixes #29884
Add *.props as a recognized file extension for XML
tfs: linux, remove xvfb-run support
disable xvfb-run
update linux build agent
simplify unnecessary Math.min (#29902)
"Deleted from disk" indicator is removed once any new file event kicks in (fixes #29950)
TypeError: expressionForRoot is not a function (fixes #30034)
bump to 1.15.0
tfs: debug linux unix tests
debug: fix wording
debug: only check id when launching preLaunchTask
Integrate smoketest-express project tasks 2.0 changes.
classifier: andre for debug issues
Uplevel xterm.js
Reset JavaScript expression coloring in template expressions (#29966)
Update "distro" key
Indent cases should specify autoIndent option
re-enable emmet 2.0
re-enable autoIndent
disable autoIndent for stable
disable emmet 2.0 for stable; fixes #29908
Update ThirdPartyNotices.txt
Updated comments on the new emmet settings
Remove devDependencies from npm-shrinkwrap
Updated comments on emmet settings
remove dev dependencies from shrinkwrap
Updating version to absorb the change in url
add shrinkwrap file for merge-conflict
update dependency on vscode-extension-telemetry
Updated setting value to be more intutive
monaco-editor-core - 0.9.0
More packaging fixes for the standalone editor
Ignore more standalone editor duplicated modules
Always split quick links
Update README.md
Update README.md
Added step to run npm install
Await wait
Switched to HTTPS requests for Transifex. Added check for empty keys in .nls.json when preparing XLFs.
[css] update service (for #27189)
fixes #29624
Use new emmet commands only when useNewEmmet is true
Removing dead code
More trigger chars #29758
Mitigate #29722. No indentation change if there is no indentation rules even autoIndent is true.
Small word smithing
Wrap partial line with abbr #29857
Do not raw attach straight away due to wrong event ordering
Use original scheme (fixes #29872)
Emmet html suggestions after typing : #29758
[json] update service (for #29848)
Uplevel xterm.js
Doc for proposed config api
Add documentation for proposed configuration api
[css] update service (for #27189)
fixes #29729
Revert "fixes #29729"
fixes #29729
fixes #27422
debug: use inline decoration to remove token colors in HC theme
Small code cleanup
Info about screenshots
fixes #29777
fixes #29839
findClosest
better message for gulp watch failing with nsfw
fixes #29448
more output for failing nsfw watcher
disable unit tests for linux 32
debug remove counter in repl
Wait until git extension is loaded before checking for localized viewlet title
tfs: linux
tfs: fix linux 32
tfs: debug linux build
I can not change the encoding of a file (fixes #29797)
Move single line does not need selection readjustment
Reactivate windows nsfw tests
Revisit #29457. Auto select one more character if the selected whitespaces are shrinked due to auto indent.
put cache of old selection at top
Fallback to warn on label
Robustness towards invalid URIs
Update comments
Uplevel xterm.js
Use proper path equal or parent check in file watcher
Have terminal use editor's hover widget styles
Support multiCursorModifier in terminal
updating distro
Stop supporting both syntaxProfiles, includeLanguage settings in new emmet #29678
Emmet suggestions for jsx only when expicitly asked for #29532
Focus terminal after closing find widget with mouse
Support space after comma in links like '[x, y]'
Emmet suggestions in non markup/stylesheet languages #29532
Retain suggest docs stickyness with new editors
fixes #29537
node-debug2@1.14.4
extension install count formatting
Switch to scheme blacklist for links in markedstring
add jsdoc comments, #29759
remove extra console.log
fix compile errors
#29756 Much cleaner fix
#29609 Check for split view existence
fix #29641
remove unnecessary code
fixes #29547
add telemetry for new multiroot workspace API, #28526
Correctly configuring nls for use. #29098
fixes #27595
fix tree multi root expansion
fixes #23774
Document current keybinding behaviour for TCIM.Zhuyin (#28237)
debugHover: fix scroll for complex hover
fix Select for Compare action
with incomplete suggest results, only re-trigger when still typing a word, #28400
More functionality
only ignore whitespace a completion selects, not whitespace users type, #29353
disable "copy" for roots
Rename customize -> configured
fix tests
Improve wording
add arch to telemetry, #507
don't freeze suggestions when not on a word anymore, #29353
:lipstick:
Add insertSpaceAfterTypeAssertion formatting option
"Add root folder" on windows adds "file:///c%3a/Users/..." (fixes #29691)
simplify explorer title setting
fixes #29581
use final DAP 1.21.0
node-debug@1.14.8
fixes #29728
Allow 3 trials to wait until editor is drawn.
fix compile errors
Trying to fix #29731
onDidTerminateDebugSession do not fire when debug session doesn't start successfully
remove outdated debugService.enabled
Support group and presentation in global schema
Configure git for testuser, rather then for root.
Decide on multi root actions naming (fixes #29434)
fix imports
introduce and use ResourceGlobMatcher
Feature 29241: Add option to disable git indicators in gutter
Support both syntaxProfiles and includeLanguages until #29678 is resolved
Use emmet.includeLanguages to enable emmet abbr in non supported languages #29678
adopt official release of TS 2.4.1
reenable command: links in hovers; fixes #29076
Add tests for getAbsoluteGlob
add hashed remotes
Trim C:/ correctly
ensure we use version 2.3.4 for building
Removing emmet.variables that arent used by emmet snippets
Adopt tasks.json to new schema
Support updating existing item in tasks.json with problem matchers
Add editor sublabels, perf-profile
Added git\src\model tooltip for decorations.
Restore trimForExclusions to fileSearch glob.parse
Do not trimForExclusions (fixes #29520) (#29632)
auto assign snippet issues
fix #29594
clear quick open input if user canceled dialog
More detailed error when obtaining editor text fails.
fixes #26034
fixes #27488
fixes #29349
fixes #29350
fixes #29535
fixes #29537
Updated readme after JS->TS refactorings.
Editor response is slower now, wait before navigating within it.
rename and null check
fixes #29239
resolveFiles returns IResolveFileResult
failover nsfw to gulp-watch
use files.exclude for filterToAddRemovedOnWorkspacePath
Use instantiation service
Embedded SVGs not valid
Save search history when shutting down and load when starting up.
Add history navigation for file includes and excludes patterns in the search viewlet
Reposition suggest docs when editor resizes #27676
Check storageservice availablility the right way
Widget offset is relative to editor in standalone editor
Don't regress ./ in "files to include" box
node-debug2@1.14.3
workspaceStats: support multi root (fixes #29085)
Some FileSearch tests
Add comment for the character delete word uses
Add terminal delete word action/keybinding
node-debug@1.14.7
Return if there was parsing error
Add typing for emmet node
Add F7, Shift+F7
Add a close button and a way to jump to a line to the diff review pane
Added schema for config, cleaned up, and addressed PR comments
Add select all to terminal context menu
Revert "Hold back new setting (#12387)"
Ask if it repros without extensions (fixes #28733)
Remove merge keyboard shortcuts (fixes #28376)
Support GNU patch --merge results (fixes #28360)
Move state check ahead to ensure stale docs are not made visible #29468
Use new emmet for all emmet actions other than expand and wrap abbr
Pass syntax from core to Wrap Abbr just like Expand Abbr
Only show when Emmet commands are shown (#27890)
while handling onEnter for for moving lines, we still need to handle decrease indent for moving line.
Improve clicking targets, add a key to hide the diff review pane
Have the diff review pane follow the modified editor selection
explorer: gracefully fail when folder not available
aria roles and labels for diff review pane
Add mouse & keyboard handling to the diff review pane
Add Tyriar to hot-exit label
I will regret this
fix potential npe
add joaomoreno to github classifier
Don't use a table for the DiffReview
Revert "remove translate3d from list"
null guard
remove translate3d from list
auto assign debug to isidorn
:lipstick:
use lower-case `beforeend`
git.pullFrom
:lipstick:
Do not screenshot until webdriver result is available.
:lipstick:
Render diff headers, fix copyright headers
Always reject Promises with Error instances
Restore mocha --browser
Add a diff review pane
fixes #29429
null check for no folder workspace
multi root: launch and tasks read the master  for now
debugConfigManager: destructure import
Add type constraint to wrapError
Add no-string-throw to TSLint
Code tidy up
rename ignore action
Refactored main.js to TS
Added markdown to trace all smoke test failures to understand their patterns. Resolves #27906
Adopt folder pased excludes config for history (fixes #29164)
add support for snapshots on windows, #28492
windows paths for snapshot generation, #28492
#28538 Proposed API to read configuration in a multi root workspace
Only offer task problem matcher attach in V2
Error spam in the console when transitioning multi root folders (fixes #29423)
Pasting a conflicting file into unresolved explorer folder is no-op (fixes #29178)
Operate on sample extension for smoke test, instead of contributing to third-party extension download count. Resolves #28876
catch merge conflicts
Deprecate isShellCommand
:lipstick:
Added check for build task not to progress until it's been resolved.
See #29427
streamline git ignore
make vscode-darwin-snapshots run on minified code, #28492
fixes #29424
multi root - relax reload window restriction
multi root - restart watcher based on multi root change
fix #29410
remove console.log
remove package-lock.json
Use nsfw for gulp watch (#29203)
fix tslint warning
Use latest vscode-emmet-helper to use right regex for validating abbr
Interface should start with an additional I. IIndentConverter.
more tolerant comparison
Add linting for extensions
fix compile errors
update distro reference
whitelist badge providers in extension editor
remove access to http resources
remove embedded svgs in content shown in extension editor
Adding options to disable svgs in webviews
Adding whitelist
prototype webview options
Disable svg loading in the main render process
node-debug2@1.14.2
Create initial tasks.json file with comments
Make tthe source attribute mandantory for tasks defined in extensions
node-debug@1.14.6
Show progress when fetching build and test tasks.
#28538 Make editor and files exclude settings folder scoped
#28538 Support workspace and folder configurations for multi root
#28538 Introduce WORKSPACE & FOLDER configuration scopes
#28538 Prepare configuration object to take workspace and folder configurations as inputs
Show configure dialog if no test or build task is found
More fine grained settings rewrite
First working prototype
Make the instructions hide when rendered
For next release
Add hover telemetry
Don't re-render hovers if nothing has changed
Add support for primary tasks.
Absorb change that will give better ordering for emmet css #28933
Correctly apply search excludes to local file matches
Refactoring and validate abbreviation
Add tests for path with backslash
Remove stray jsdoc
Make "find in folder" multiroot aware
Add path to fix test
Remove task experiment 1.4 - not stable ready yet
Disable emmet completion provider for mapped modes #29318
Refactoring
Remove action wrappers and fix key bindings
add support to snapshot the loader and its plugins, #28492
Clean up formatting.
More loose build and test task detection
Don't rebase on pull from
Provide more info about test failures thrugh catching more webdriverio exceptions.
Determining editor line index for variables and folding dynamically.
Determine first change row index by traversing dom instead of hardcoding.
Added check for string in output, instead of querying the known element.
Traverse extensions viewlet when looking for an extension to install.
Determine staged count based on SCM viewlet text traversing. Add more error catching.
JSON parse launch.json to determine whether program configuration was correctly added.
fix vs/nls
fix formatting errors in smoket test
break loader plugins into build and runtime version to keep the size low
adopt loader #bfe3f60
Make task v2 the default
Remove obsolete code
More schema tweaks. Support for label in task customization
Add pullFrom command to package.json
Add pullFrom command
Add branch and remote args to pull in model and repository
adopt loader #1fe04a2
add commandExecuted event
Do not use `mix-blend-mode: difference` for `hc-black`
Handle legacy customize and terminal property
Support new task configuration in schema
Incooperate API feedback
Implemented latest feedback from #28235
win32: update cache path per arch
set up tslint for smoketest source
Render inline text selection if the theme is hc-black
Don't try to search when no folders are open
Add newline when wrapping with abbr #29283
Update filesearch to work with folder queries
Remove terminal selection theme key for now
set editor.autoIndent default to true
Get latest vscode-emmet-helper to fix #29276
Address changes to task menu
Added tips and tricks to the help menu
whitelist autoIndent correctly
#24063 Enhance search in settings editor - Find matches in editable settings editor - Focus matches first in editable and then default settings
fix win32-x64 updates
Ensure pty is not told to resize below 1x1
Storage Service not available in monaco editor
Sign up for php and search tasks from vscodebot
add proposed debug API; fixes #28234
Improve multi cursor in abbr actions #27621
tfs: publish x64 setup
windows x64 setup
Same treatment for vs-dark as for vs (Microsoft/monaco-editor#472)
More Edge High Contrast (Microsoft/monaco-editor#472)
Enable classifier for inbox tracking
First check if parent is resolved when adding child
Honor emmet.excludeLanguages setting
Emmet Increment/Decrememnt commands
Add git amend commands in package.json
Add git amend commands
for now, restore false rootPath, #28526
Render selection inline with the text on Edge (Microsoft/monaco-editor#472)
Edge high contrast (Microsoft/monaco-editor#472)
Filter settings from no search results link
fix compilation issues
fix file actions (copy / paste)
FileStat.root is a FileStat
#28538 Introduce folder value for look up
#28538 Support writing configuration given a resource
explorer: when there is no focus 'new file' nad 'new folder' in title should run on the first folder
fixes #29239
fixes #29166
Use testuser home directory for npm install
Call correct promise progress callback
node-debug2@1.14.1
Adding some logic behind the gitignore entries.
Adding apply edit to the gitignore file.
Registering and handling commad
Util function to append string in file
Make nsfw service watch call private
Handle global includes/excludes and encoding
mostly works
Tidy up files.watcherExcludes refreshing
Evaluate Math Expression using new Emmet
Multi cursor for Wrap with Abbreviation command #27621
Multi cursor for Emmet Expand Abbreviation command #27621
Update shrinkwrap
Address comments
Wrap tasks cmds as Actions for telemetry
Initial working version of files.watcherExcludes
Moved emmet completion provider to vscode-emmet-helper
getNode is not needed by the helper module
More prep for moving completion provider out
Prepping to move completion provider to a re-usable module
Add debugger type in extension view
Bump timeout for test involving search - fix #28794
Move releasenotes baseurl into html
Initial work on making ts extension multiroot aware
Set the base url to be the resource url instead of the workspace root. #29191
Add tests for [line, col] terminal link handler
Add [line, col] to terminal link handler
Disallow file watcher to watch sub-folders of other folders
Do not expand abbr if syntax is not valid
Use internal emmet logic to figure out syntax as emmet extension is not aware of embedded languages
Enable classifier for some areas
Revert "Bump timeout for test involving search - #28794"
Bump timeout for test involving search - #28794
debugService.onDidEndProcess
files.exclude per root
use vsce to determine what to package when bundling extensions
Colour picker schematics
more :lipstick:
one file, one coding style
explorer: get rid of references to getWorkspace()
polish IProcess return value
debug.createProcess better signature
use first workspace (for #29085)
#28663 Do not search in installed and recommended sections
multi root - use getPathLabel over toWorkspaceRelativePath
multi root - better check for isSettingsFile
multi root - make output link detection fit for multiple workspace roots
Filter installed extensions from recommended
#28663 Default sections should not overlap with those while searching
FIx #29171
#28663 Refresh extensions view on visibility change
do not pass options fillInActions for Model
fix test
polish context menu multi root actions
:lipstick: add folder
fix compile error
very first proposed API for multiple roots, #28526
make getPath return undefined when there is not just one root, #28526
IAccessibilityProvider: comments
Improve 'iconTheme' description (For #28616)
multi root - adopt for title bar variables
multi root - adopt more folder specific settings
Git: Pull from specific branch
Explicit mapping for langs whose parent are emmet supported #28545
Check more nulls
#29101 Tests for configuration inspect api
Check for roots to be null
Revert "Update coffee grammar tests"
Update coffee grammar tests
Change memento name
Combine Expand/Complete Emmet abbreviations #28556
Change memento
Uplevel xterm.js
Refactoring to support #28556 eventually
Implement #28663
Update coffeescript grammar
Honor emmet.extensionsPath setting for variables and profile
Get latest emmet expand abbr module to exlcude mocha from dependencies
Remove unnecessary dependencies
Reduce dev dependencies of emmet #28874
Update js/ts grammar
Support variable customization in emmet snippets
Support xhtml as output profile
update php grammar
Uplevel xterm.js
Get copy context menu state from correct place
Have a good SimpleConfigurationService
Add `ToggleHighContrast` that toggles the use of the high contrast theme to the standalone editor
Remove unnecessary code
multi root - focus explorer after adding root
remove console.log
multi root - add buttonLabel option to folder picker and use it
multi root - support files.trimTrailingWhitespace and  files.insertFinalNewline
AccessibilityProvider getPosInSet and getSetSize
AddRootFolderAction in context menu
remove root only for multi root
:lipstick:
AddRoot and RemoveRoot actions
show 'folders' when there are mutliple roots
add eslint to hygiene
tslint import warning: link to our wiki from warning
:lipstick:
tslint for smoke tests
resolveFiles tests
multi root - reload on changes that need reload
multi root - enable nsfw watcher when running in multi root
move actions to browser
use view.name
FileStat.isRoot helper method
multi root - menu entries
update to uglify-es
multi root - not yet in stable
tfs: use npm_config_devdir
Add aria-setsize, aria-posinset for the list
fix tests
:lipstick:
multi root - add action to add folders
Prevent additional layer breakers, enforce ts lint import rules in /platform/ tests
renames
Chown of root home folder to prevent EACCES errors when running 'npm install' programmatically.
Move standaloneThemeService to vs/editor/standalone
Move inspectTokens to vs/editor/standalone
Remove vs/editor/standalone/browser/media folder
Move iPadShowKeyboard to vs/editor/standalone
Move menuPreventer up to /workbench/
fix build
more tslint rules
Move standalone editor quick open to vs/editor/standalone
Move most of the standalone editor specific code to vs/editor/standalone
Move standalone editor specific code to vs/editor/standalone
multi root - introduce and use new method to retrieve last active file workspace
fix build
Use emmet.syntaxProfiles in new emmet
more tslint layering rules
Prevent navigation on main window
Adjust csp
More control over webview
Register regular commands and look up active editor (fixes #27584, fixes #27585)
Pass some tests please
Consolidate emmet expand action and emmet completion
Continue refactoring html content renderer (#29060)
Increase Indent should have higher priority when inheriting from above lines.
Normalize indentation when type
Capitalize VS Code
Address comments
Add telemetry and AB test options
Address more changes
Address changes
Add notification - when user opens grunt/gulp/tsconfig file and hasn't run a task, points user to command palette (>tasks) - add common actions for quickopen
Hold back new setting (#12387)
Remove experiments and add new setting (#12387)
node-debug@1.14.5
Customize indent rules in language configuration
Ensure terminal process is connected when sending resize
Make substr column correct when indent paste
fixes #28992
remove comments
do not sort root folders
FileStat.root
parse category: and tag: in marketplace queries
Continue html renderer cleanup (#28913)
Give testuser access to /root/npm instead.
fix #28893
Clean up
polish
react on comments
Move monarch code to vs/editor/common/standalone
Allow working with npm modules
Optional to trigger change event while initializing configuration
#28538 Remove passing roots from roots change event
#28538 Initialize roots during configuration initialization
#28538 Introduce Resource configuration service to get configuration for a resource
open extension url when all windows are closed
Do not use standalone editor types in vs/workbench
merge master
fix merge conflict
Chown of source repository to allow git clone inside.
List: set aria-setsize and aria-posinset
Wrapped chained commands in functions.
debug: respect supportsDelayedStackTraceLoading
No need to ship vs/base/common/uuid in standalone editor
fix #28610
Don't ship extension points in standalone editor
Move languagesExtPoint up to /workbench/
:lipstick:
fix #28983
Chained user switching with password change
Use chpasswd instead of passwd
fix tests
tslint rule tweaks for workbench
Don't depend on editor/contrib from editor core tests
Delete unused code
Do not depend on vs/workbench from editor tests
Don't depend on /contrib/ from editor's core sources
More layering clean-up
debug: more precise handling of presentationHints
Rename vs/platform/platform to vs/platform/registry/common/platform
More TSLint import enforcement
TS Lint rules tweaks
fix npe
A hint on a Source is a pure presentation style
Cannot read property 'webContents' of null (fixes #29000)
Cannot read property 'length' of undefined (fixes #28999)
Cannot read property 'style' of null (fixes #28984)
debug null guard
TS Lint for platform/*/common
Add tslint rules for editor/test/common
more adoption of IWorkspace2
tfs: dont overwrite userprofile
Move modelBuilder up to /workbench/
Move all TM related code up to /workbench/
fix #28991
multi root - clean up & move workspace into config service
Move /electron-browser/ code up to /workbench/ from /editor/
remove unused service
fix #28718
debt - fix some layer breakers
debt - less explicit any
some TS 2.4 fixes
Linux smoke test script not to swallow messages when adding new user
fix tests (hot exit related)
migrate setting properly (for #207)
node-debug@1.14.4
#27823 Prepare toggling views
Uplevel xterm.js
Add terminal.selectionBackground theme key
Have navigate workbench commands skip terminal shell by default
Improve grammar of config setting description
Add files.useExperimentalFileWatcher setting
Clean up
Support basic multi root watching
Improve nsfw logging
Start working on multiple root file watcher support
Allow nsfw file watcher to work alongside others
Improve typings
Support ignored paths
Add ThrottledDelayer and event normalization
Improve nsfw types
Increase contrast of bright black in solarized terminal
Update vs_code_welcome_page.ts
Cleanup
Rework ext install flow a bit
Add spaces, use MarkDown, recommend Help > Report Issues (#28696)
Add CSP to shared process
Prototype TS/JS Refactoring Provider (#27166)
Refactor and test cases
Nested langauge issue.
Moving lines beyond the first nonempty line now uses indent 0.
Make sure indent adjustment is executed on correct markers.
AutoIndent on paste, remove all indent whitespaces.
AutoIndent: Indent on paste
AutoIndent: MoveLines, draft version, it already works but have potential bugs.
AutoIndent: Type, put this feature behind a flag.
AutoIndent: Type supports selection.
AutoIndent: Type!
AutoIndent: Thanks you tests, without you I will have another sleepless night.
AutoIndent. Correct behavior of indentNextLine for Enter
AutoIndent: Enrich TypeScript and HTML rules.
:lipstick: no tricks, implement a stable sort
fix build
Don't split words at U+2019, the right single quotation mark.
Enforce more dependency rules via TS Lint
Bring "hidden" code out in the open
Add tslint rules for vs/base/test/common and vs/base/test/browser
Added smoke test environment configuration for Linux.
debt - move codeLenseWidget into its own file
fix issues with having multiple of the same files in different roots
move codelense to /browser/-layer
fixes #28650
fix drag and drop
fix revealing of elements
fix #28880
properly react to workspace change events
node-debug@1.14.3
merge with master
update DAP
Remove 'terminal' as a used term from tasks.
#28538 Initialize all folder configurations at once
Better TS Lint import enforcement rules for vs/base and vs/editor/contrib
Remove unnecessary import
Remove unused code
Add support for old-style require statements in linters
Add the possibility for restrictions to be an OR array
Move InspectTMScopes up to /workbench/
Move SelectionClipboard up to /workbench/
#28538 Let Configuration object gets the root given the resource from workspace
#28538 Take workspace as input in Configuration model
#28538 Move getRoot method to Workspace object
#28538 Extract and expose new Workspace object
#28538 Rename new IWorkspace2 to IWorkspace
#28538 Rename old workspaces to legacy
fixes #28393
:lipstick:
Revert "suggest: improve element aria label"
refresh all parants properly
tfs: windows build
tfs: windows build
tfs: windows build
tfs: windows build
tfs: windows build
tfs: fix windows build
tfs: fix concurrent windows builds
remove tree.refreshAll
#27823 Prepare views to suppor toggling
better fix for NPE in editor.hide()
Small tweaks
update distro
fixes #28506
Remove outdated explanations
More TS 2.4
suggest: improve element aria label
fix potential npe in editor.hide()
Adopt ext host to use configuration tree data
Restrict index csp
Added functionality to toggle break rendering mode for markdown preview (#28713)
Collapse html,css completion provider for emmet
changed command palette text
Pick up TS 2.4.1 insiders
#28538 Implement resource overrides for settings
#28538 API to get settings by override identifiers - language - resource
Add CSP To Root Document (#28670)
#28538 Prepare for sending configuration data to extension host
#28538 Expose Configuration Data through Configuration service
#28538 Simplify workspace configuration service api
Use stream reader for TextDocument for more efficient parsing
Remove Unused Html Content Renderer Extensibility (#28760)
Convert nsfw rename events to delete and create events
avoid slice-calls, avoid searching for best result when you know it, #18682
:lipstick:
#28538 Remove configurationEvent.config property
:lipstick: #28526
increase timeout of search integration tests (for #28794)
:lipstick:
Removed exposure of require as it led to not working Spectron.
Simplified element waiting code.
Corrected spelling mistakes.
show Developer Tools action in case of ext host crash
multi root - implement isInsideWorkspace properly
fixes #22593
Add support to focus terminal and to control terminal instance reuse
show roots in explorer only when there is more than 1 root
fix #28789
explorerViewer: steps towards multi root
explorerView: remove use of root fully
fix #28213
:lipstick:
merge with master
multi root - stable workspace.id
fix #28791
test
:lipstick:
#28538 Support settings for multi root workspace - Refactor configuration services to read settings from multiple folders - Implement merging strategy for multi root workspace settings - Implement a configuration model that can be reused across layers - Implement getRoot API in workspace context service
Missing indication of requireName added as a follow up on 47794539771b5e755fe1886466af6ea0b64eece3.
Expose require to Spectron if running smoke test.
debt - fix more ts 2.4.1 compile issues
fix ts 2.4.1 compile errors in workbench/api
node-debug@1.14.2
let->const
Converted mocha-runner to TS, indicated to exit smoke test on mocha tests termination.
log exthost output
Correct screenshotting logic.
explorerView: header area, also update on change workspace roots
Pass screen resolution argument correctly.
fix tests
merge master
fixes #28740
Run smoke test build in higher screen resolution.
multi root: workspace name
:lipstick:
fix windows zip
Provide a command to close all unchanged files (#25692)
Introduce a new keybinding context per quick open for quick navigate (fixes #28462) (#28784)
fix #28781
Focus terminal find on ctrl+f when it's visible and terminal is focused
node-debug2@1.14.0
Terminal Find Widget context
Use map for buffer sync support pending responses
Find Widget in Terminal
Update marked version
Get nsfw file watcher sending events back
Undo changes to files that shouldn't be modified
Highlight this in Monokai (#28748)
Uplevel xterm.js
Initial nsfw prototype
Configure copying to test repo
Remove #28565
hygiene
Add task entry to top-level menu
The unsaved (dot) indicator doesn't update when file is opened from the source code diff section (fixes #28515)
Text disappeared after update to 1.13 [Bug] (fixes #28619)
explorerView: reduce use of root more
[json] update service (for #28010)
explorerView: use isCreated to minimize use of root
explorerViewer: take into account the model when getting children
fix decoration render option test failure
explorerModel: Model
fileService.resolveFiles
fixes #26642
#28538 Create a configuration model that can retrieve and merge contents
Removed integration and unit tests from smoke test.
Use will-change to hint browser layers for the lines content and the margin layers instead of using translate3d ((Microsoft/monaco-editor#426))
canUseTranslate3d is no longer a ScrollableElement option
Do not use translate3d in overview ruler, use will-change instead (Microsoft/monaco-editor#426)
Do not use translate3d in scrollbars, use will-change for scrollbar sliders instead (Microsoft/monaco-editor#426)
also don't alert when command finished, #17245
multiroot - get rid of workspace.uid (only used for local storage)
tfs: call xvfb-run in linux smoke test
fixes #27367
remove aria.alert, bring back aria-provider, set isAccessible #17245
Added explanation where to look for test data.
first read basename, then full filepath
#22622 - removed ScollbarVisibility reference
adopt IWorkspace2, implement proper workspaceContains, #28526
fix linux build?
Updated win32 smoketest variable references.
chmod +x
Added smoke test build script for Windows.
Added necessary mixin password arg.
Refactor tfs linux builds to suit smoke test.
#28538 Introduce IWorkspace2 in IWorkspaceContextService
Only update viewlet switcher if it has already been rendered (#28568)
fix some typescript@next compilation errors
Added smoke test step.
Hint GPU layers for editor sliders
Do not paint minimap unless a line inside it has changed
explorerViewModel.test -> explorerModel.test
merge master
debug: source should be regarded as not available if presentationHint === `deemphasize`
introduce and use extfs.realpath
Update OSSREADME to have only modules that dont have a explicit license file
Only label upcoming recovery build
Adding some validation
Uplevel xterm.js
explorerViewModel.ts -> explorerModel.ts
debug: have a scheduler per thread
debt - simplify stuff
debt - remove boilerplate code
Code tidy up.
First cut of #23752: Task dialog switches to output view
rename ITextModelResolverService to ITextModelService, #10547
:lipstick:
refactor tfs darwin builds
:lipstick:
Taking the top most available stack frame for exception widget. Resolves #27903
üíö fix cursor pos
üíö fix tests for block comment
#28538 Remove existing workspace configuration service. Update tests.
#28538 Remove existing workspace context service - Create a simple workspace context service for standalone editor - Use the test context service for tests
React to changing the `editor.links` option
Corrected necessary dependencies to match only minor versions #27537
Rename `editor.urlClickable` to `editor.links`
Keybindings in quick open aren't vertically aligned (fixes #28602)
fix typo
missing compilation
debug: make sure to fetch the remainder of the callstack for the same thread
Fail the test if the key binding was not found.
Adding correct command to open git viewlet as it was changed.
Resolves #27903
hot exit: prevent duplicate empty windows from opening
Add options to theme notification buttons and badges (#28471)
Remember all UI state even for empty windows (fixes #207) (#28580)
Hot exit: set backupPath as configuration to windows (#28350)
shrinkwrap, OSSREADME for emmet (#28570)
Use async in TS documentSymbolProvider
Workbench colors (#28507)
Handle diff3-style merge correctly (#27405)
Use real map for languagePerId
Addresses changes
Cleaning up html renderer
Found better place for memento
Address review changes
:lipstick:
fixed misspelled occurrences and occurred
Add memento for running a task
node-pty@0.6.8
Add entry for tasks in menu
Add defaults for terminal selection
#28538 Do not initialize event again
#28538 Clean up onDidChangeFolders event
minor copy all polish
make asRelativePath work with multiple root folders, #28526
Possible bug where method is not invoked (fixes #28527)
add $acceptWorkspaceData to push new info about open folders, #28526
start with a step back and use IWorkspace where needed, nuke workspace context service from ext host, #28526
better workspace format
#27458 Move fileResultsNavigation to files namespace
fix npe in config service
debt: Replace custom Map object with Native Map
debt - prevent accidentical exposing of APIs by being too relaxed
workspace - wire in some new apis to get at folders
VS code icons is distorted when invoked from the command line (fixes #28345)
Implement correct silent bahviour for terminal task runner.
Tweak #28351
extract more functionality into IWorkspace
Revert "extract more functionality into IWorkspace"
Move LinkedMap into map.ts
Added try/catch not to break on file not found error for 'resources to pull from Transifex' file.
extract more functionality into IWorkspace
Ensure pty gets resize event on layout
Added missing newline.
Added deregistration for title change check on the terminal message event.
#22622 - final version
Update parameter hint setting desc
Disable http resources in releasenotes
Use selection.background for the terminal
Apply terminal.foreground to the terminal cursor too
Check for null/undefined before assigning kind
Enable contextisolation in webviews
Uplevel xterm.js
Uplevel xterm.js
Untitled: picked encoding is not restored after restart (fixes #28364)
check in compiled js
:lipstick: storage service
Tweak label and alias
Added Hungarian and Turkish to Insiders. Resolves #28062 and #27608.
perf - ask less often to profile
debug: fix ts 2.4 errors
debug: on restart only read out the launch.json if it was changed
Resolves #28336
fix ordering and rename select icon theme
:lipstick:
:lipstick: windows main
debt - remove "over-api", align styles
multiroot - send telemetry event when workspace#rootPath is accessed
#27823 - Debt reduction. Clean up views. - Implement Composed views viewlet - Adopt explorer debug viewlet to composed views viewlet
Debt: Use viewlet view settings
Debt: Composed views viewlet - Implement a viewlet composed of views - Adopt Explorer viewlet to extend Composed views viewlet
Debt: Move viewlet views to views package
Debt: Rename views to viewsRegistry
Revert "load main.js while waiting for app.isReady, #17108"
ref - apply editor font to reference search tree
:lipstick:
add more settings to gear menu
main - move some events into app.ts
main - extract service for handling recent paths and jumplist
node-debug@1.14.1
Remove terminal selection colors
Uplevel xterm.js
Configure plugin for labelling issues for new releases
get rid of LegacyRenderer (fixes #27705)
stop using legacyrenderer, also nuke (newly) unused left-right-widget, #27705
main - more shuffling around
spaces in block comment (like line comment)
debug: better hc color for focused stack frame
make Placeholder#index a number, fixes #28185
more docs about doc change event, #28077
Resolves #27922
debt - extract IWindowsMainService
more renames
delete unused code
vscodeWindow => codeWindow
debt - some cleanup on main services
:lipstick: main side
dialogs - set type properly
less eager snippet suggestions, #26275
#22622 - implemented DomScrollableElement
Remove ` as autoclosing pair in markdown
use tripple equals when comparing
Revert "fixes #28198"
fixes #28198
Monokai: Use tab well color for title bar
Restrict markdown preview to markdown files
Default Markdown language configuration (#28172)
Add insertSpaceAfterConstructor Formatting Option for TS and JS
fixes #28198
Simplify logging of TS request errors
node-debug@1.14.0
Concat instead of reduce
filePromise
Don't hardcode number of result providers
Integrate new xterm.js changes
Use beta xterm.js build
Enable new emmet by default, add toggle comment feature
Separate Completion Provider for Emmet Css
Add Debug Output Copy All command
change formatOnPase default, fixed 28176
Refactoring toggleComment
Always show group label
fix  #23728
Pass extensions-dir as VS Code arg, instead of Chrome Driver one.
Pass the argument to the VS Code executable, instead of  a chrome driver.
break from the loop instead of returning
filters - simplify findAllMatches
Resolves #27921
prune when total is going bad, fixes #26423
remove unused code
Reactivate pickers for build and test tasks.
Improve terminal default
fix integration tests
fix tests
fix #28141
add "quick open recent" to file menu
Improve commands picker (#28184)
fix #26275
Added missing workbench parts and services to pull from Transifex.
Have the minimap slider be constantly aligned with the scrollbar slider (#21346)
TS 2.4 fixes
:lipstick:
More explicit typing (#28148)
debug menu: enable all breakpoints
debt - better restore empty workspaces
more improvements for #25145
debt - improve usage of untitled editor service
toggle comment across css  nodes #27629
toggle comment across html nodes #27629
Extract dispatch blocks to own functions
Use map for syncedBuffers
Remove buildstatus
Remove experimental autobuild
Update C# TextMate grammar with latest fixes from csharp-tmLanguage (#28120)
remove double semicolons (#28110)
extract snippet suggest provider, #26275
fix #27949
debt - remove commented out stuff
More tests for ScrollbarState (#6710)
debug: improve hc colors for variables
Move slider position computation into ScrollbarState (#6710)
Add tests for ScrollbarState (#6710)
:lipstick:
debug: fix debug console string counter
disable minimap in output
Do not use object.deepClone on the incoming editor options (#28093)
debug: respect that '[2J' is the ansi escape sequence for clearing the display
cleanup duplicate semicolons in minimapCharRenderer
fix #27902
debt - remove last bit of old snippet syntax
eng - print test failure to renderer console for easy reveal in dev tools
debt - clean up view state for resources/untitled when input gets disposed
fix some typos
debt - less dependencies to untitlededitorinput
Next group action should not create new group (#27967)
debug: fix callstack focus/selection weirdness
:lipstick:
use tildify in more places
tweak path labels with environment
align command alias with labels
inputs: open context menu where mouse is
always have a representedFilename
tweak menu (for #25145)
improve window picker (for #25145)
fix casing
Extracting callbackmap to own class
Extract basic request queue to class
Mark a few more fields as readonly
Stringify Telemetry Fields in the TSExtension
Include border when setting details height to remove the workaround of setting calc width that caused #28058
Layer-breaker in telemetryUtils (fixes #27141)
Update js/ts grammar (#27957)
node-debug@1.13.10 (translations)
Update node-debug2 for #28020
Add `.rhtml` to html extension
Truncate publisher name in extension list #27987
Exclude extensions that only contribute themes from the extension list - #27987
Skip unnecessary |s in extension list for #27987
Added urlClickable in equals and createChangeEvent
Added editor.urlClickable setting to enable/disable clickable URL
Set maxheight on docs dynamically #27954
Enforce a minimum for markdown.preview.fontSize
Ensure terminal pty is ready before sendText is called
Remove old tscheck migration logic
Title case (#27569)
Extract typescript service configuration to a class
Continue tweaking tsc mismatch message
Configure automatic labelling of issues for insiders (#26223)
Bump to 1.14
don't scan snippets-dir on startup, only re-scan files with changes, #27908
Recipe -> prerequisites. More cases.
fixes #27835
Improve tooltip (#27893)
Guide the false-positive case towards the setting (#27893)
fix brekpoint selection on click
fix schema comment, #27090
Have other places respect `editor.accessibilitySupport` (#27833, #27893)
null guard
Have a good aria label when the editor has accessibility disabled (#27833)
Updated instructions to add new area and test
Show views in extension editor page
imports style
Make tree data api public
fix #27898
Add a way to open VS Code's Accessibility docs from Alt+F1 (#27833)
theming - apply panel.background to editors in panels
Telemetry for expand/collapse suggest docs
Cleaning up messag for tsc mismatch warning as part of #27826
Removing toggleComment from new emmet features as it needs more work
Use jsx transformations in emmet
Adapt to "editor.multiCursorModifier" setting (fixes #27884)
Explicitly specify that typescrip.tnpm should point to the executable
node-debug@1.13.9
Details for extension being installed (fixes #27659)
Re #26106. Reduce null check.
Improve screen reader experience on install buttons (fixes #27661)
Updated title for merge conflicts
Add aria-label (fixes #27666)
Add margin for outline (fixes #27662)
Revert "theming - remove panel.background as we currently do not support it end to end"
Use outlines in high contrast (#27580)
Tools and languages label too long (fixes #27510)
Revert "Handle progress results in quick open controller (#27152)"
Revert "Update controller, simplify telemetry (#27152)"
Revert "Implement oncancel (fixes #27638)"
startup profiler listens on lifecycle event, #27852
add phases to lifecycle service, #27852
Test failures in decorationRenderOptions.test (for #27790)
fix compile errors because who needs them
Add possibility to turn on `editor.accessibilityOptions` from Alt+F1 (#27833)
Move accessibility help up to workbench (#27833)
use more precise ids for stack frames to avoid time era collisions
debug: null guard
Moved contribution section to readme.
Present screen reader status in Alt+F1 info (#27833)
add more ouis from VM
[decorators] only inclode border and outline styles if color is set. For #27790.
fix double click focus movement when clicking in debug trees
Removed wait from the test. Ref #27841
Iterate over the language names, rather than objects.
Added waiting to give enough time for VS Code to type the text in the editor.
merge snippets, don't stack them, #27543
Target only core languages for the stable build. Ref #27818
node-debug@1.13.8 (translations)
use final 1.20.0 version of DAP modules
Activity bar: active item decoration lost when hovering (fixes #27822)
don't have unit tests that take multiple seconds
fix #27753
Addresses #27672: Task Detection For Gulp
Add pt-BR locale only in non-stable build quality.
Update distro hash
#26948 Publish tree api
renamed and make TextSnippet extend Marker, #27543
Update thirdpartynotices
Git: rename 'Publish' to 'Publish Branch' (fixes #26133)
Use customize instead of identifier for customizing tasks
global settings action: trigger on mouse down and space/enter
Update distro for #24538
node-debug2@1.13.1
Correctly set ts version in package.json
Implement oncancel (fixes #27638)
Initial work on #10023.
ATA is Automatic Type Acquisition (#27760)
Check for special URLs (fixes #27603) (#27781)
Avoiding a number of Android IME keyboard issues by turning autocomplete to off in the text area. (monaco-editor)
Make sure we don't apply decorations to disposed editors
Make sure we decorate all visible editors (fixes #27574)
Improve tree data provider documentation
Make terminal path dragging more robust
ExthostTreeView: Check if children are null or undefined
Comment
Track pending updates per editor (fixes #27570)
Title case (fixes #27569)
Title case (fixes #27569)
Remove extra package.json (fixes #27754)
Only bold press any key text
Hid Git actions from merge conflict (fixes #27563)
ATA is Automatic Type Acquisition
Click on menus on explorer title bar collapses the explorer (fixes #27648)
Add descriptions to the activation events snippets (#27663)
Turn off minimaps (fixes #27502)
Use focus border color (fixes #27501)
Use 'textLink.activeForeground' (fixes #27499)
Color names (#27497)
Reduce number of colors used (#27497)
Change workspaceContains snippet to use filePattern; add * snippet; (#27663)
start with a failing test, #27543
add update badge as soon as update is availble on linux (since it is never ready on that platform)
Provide feedback when check for updates has no updates
Extension host crashes on MacOS when crash reporter is disabled (fixes #27735)
debug: tryToAutoFocusStackFrame
output: reveal last line and column, not only line because some users only use append in output and have a long line
Added description on how to debug smoke test.
First cut of a version converter
debug: save all before sending a custom restart request to be aligned with regular restart
debug: toString of OutputNameValueElement do not take name into account if it is not defined
Breakpoints/Call Stack: clicking on entry with column info jump to that column
cancel snippet mode when undo'ing to the 'before' state, fixes #27612
More work on #27581
debug actions widget: more precise centering
copy all: remove ansi escape code
"Check For Updates" -> "Check for Updates"
fix #27541
fix #27710
Rename multicursorModifier to multiCursorModifier (#27680)
fix windows build on appveyor
Triple equals for keybinding find.
theming - guard against missing colors
Remove bit about path from npm warning since it may be confusing. Will update documentation
Correctly mark typescript.npm as isExecutable
Add npm location setting
Use existing colors (#27497)
Pick up ts 2.3.4
Revert "Improve issue template"
Update to latest C# TextMate grammar
Style the terminal press any key text
adopt some new color keys in our built in themes
Add null check on extra bag
Toggle full screen for reading out output console due to editor redrawing div elements.
light update: use number badge
light update: enable for win
Prefer the American English spelling behavior
light update contribution not for windows
Improve naming and doc comments
Move stickiness onto DecorationRenderOptions
Added darwinHelpBook and darwinHelpName to build process for MacOS
Make dependsOn work with labels
Minor tweaks to how annotation tasks are merged.
#26948 document view locations in menu entry contributions
#26948 Update doc
#26948 Update documentation
format hygiene
#26948 Update the doc for  view data provider in API
Documentation for context value in tree item
#26948 Provide none collapsible state
Make smoothScrollDuration value explicit
:lipstick: global action
actionBarRegistry.ts => actions.ts
Shutdown glob pattern searching process after 1s of idle time
global settings - enable when running "out of dev" and show keybindings
Allowed more time for build task to prevent native dialog popup that blocks the test. Added missing comma in search test.
Explorer viewlet - Dispose listeners - Expand the view if it is only view - Check sash index before disposing
Dispose tree view listeners
[html] update services
[css] update services
Have Ctrl+E go to line end on OSX
Have Ctrl+A go to line start on OSX (#19644)
node-debug@1.13.7 (translations)
debug: suport presentationHint = "subtle"
do not use a special badge for update notification
node-debug: add 'subtle' value to 'presentationhint' attribute
Attempt to fix git test 'element not visible' error.
Make identifier computed to better support task customization
add more actions to the update activity
update activity: action labels to better reflect os
use a wrench icon for the update activity
show update activity for all platforms but only for insider quality
Implements #27087: Simplify task activation events
Added debug log to find out where Windows build fails.
Implements #27399: Separate the task provider name from the task name in the task API
update to vscode-textmate@3.1.5
remove variablesDealy setting we used for experimentation
Intercept child process exit and exit from the main process as well.
Adopt #27338
Added wait time for peek widgets to be loaded.
debug actions widget: default position go back to center for discoverability
Workbench theme customisation for forground tab colour of inactive group appears to be missing (fixes #27067)
debug repl input disable minimap
macOS: custom titlebar double-click not consistent (fixes #27382)
Extensions: double-click should open new extension window pinned (fixes #17048)
Search viewlet doesn't get selected text from diff editor (fixes #25293)
Extension viewlet high contrast mouse over borders only highlight a single border for top and bottom entries (fixes #15859)
theming - remove panel.background as we currently do not support it end to end
Revert "theming - remove hardcoded list color in keybindings editor"
Added script to compile.
Make the workspace build / test task win over contributed tasks
Added npm install to the list of discovered npm tasks
Ajust test to new defaults. See #26893.
Update markdown extension contributes key names
snippets - remove unused css
make final tabstops of nested snippets normal tabstop, #24855
make SnippetSession single insert again, #24855
basic support for nested snippets, #24855
debt - renames
Mention keymaps (fixes #24727)
Update controller, simplify telemetry (#27152)
Handle progress results in quick open controller (#27152)
[bat] add test for #26825
More work on the task v2 json schema
snippets - fix test failures because 'deleteLeft' is gone
Remove ProblemMatchers from API.
Allowed async for smoke test folder.
Support customiying tasks
Code sanity.
Updated tasks tests with respect to new Express eslint config. Code cleanup.
Modularised tests.
Updated the way to run the smoke test.
Testing build definition.
Changed executable name.
Corrected path to binary.
Moved to test directory.
Added smoke test source code.
snippets - fix leaking listeners that break subsequent snippet insertion
support %%(fix #26825)
fix #27231
Code sanity.
simplify tests, fix tests, promise ftw
followup fix from  fix #27245
Updated tasks tests with respect to new Express eslint config. Code cleanup.
fix #27277
fix #27245
Select single words in property value
Pickup all TSConfigs in Workspace for TSC Build Task (#27306)
node-debug2@1.13.0
Safer change for #25422
Use 'descriptionForeground' (#27289)
sourceMaps is enabled by default, remove from launch configs
Add Unit Test launch config (not sure why it was deleted?)
Actually save the file this time :'(
Move VersionStatus into a class
Add TSC Task Provider (#27093)
Tune merge-conflict colors (#27299)
Extract merge-conflict colors as workbench colors (#27299)
Comments
[seti] add information_for_contributors
[seti] Update to jesseweed/seti-ui@f78d623 (2017-05-11)
Start crash reporter inside child processes (#27180)
Add null check to terminal link handler
Add null check in terminalPanel click listener
Overlay color (#25798)
Playground colors (#25798)
More welcome page colors (#25798)
Remove deprecated css property
Move terminal.foreground defaults to JS
Add information_for_contributors to grammars
[php] update grammar
[less] update grammar
[typescript] update grammar
[css] update grammar
[cpp] update grammar
[clojure] update grammar
update all grammars script
[ini] add update script
[scss] update grammar
[docker] update grammar
theming - fix color clash when dragging over selected or focused item
Uncaught TypeError: Cannot read property 'isActive' of undefined (fixes #27257)
clean up unused code
a18y: avoid duplicate events when navigating trees (for #26730)
linting: convert double quote imports to single quote
How to configure a window (also for reload case)? (fixes #27192)
[lua] update grammar
theming - remove hardcoded list color in keybindings editor
Reverting prev fix as it adds gap between docs and list
Clean up termianl imports
Show correct link hover when links open with Alt
Implement editor.multicursorModifier
Extract clicking link logic to its own file
Encapsulate opening a link gesture in LinkGesture
Group method logically
Encapsulate trigger modifier logic in goToDeclarationMouse
Introduce `multicursorModifier` editor options
use alwaysStrict in TS extension
Allow extensions to use theme colors in status bar
make input box responsive when widget or editor resizes
Flex Box
draft version
Clean up var name
Allow decorations to use theme colors. For #26974
Remove debug logs
Fork terminalProcess using amd, convert to TS
Add node-pty typings back
Move terminalProcess to node/
Add mementos to shutdown
Enable needs-more-info bot plugin
theming :lipstick:
Tweak error message for extension table in github issues
don't score when the word is the empty word, #26096
make fuzzy match skip leading whitespace in pattern, fixes #26096
Revert "allow offsets for fuzzyScore, towards #26096"
fixes #26184
don't double print messages from the extension service
use getAccessibilitySupport for F8, fixes  #18366
use process.hrtime for tick timers
Add trailing new line to current page (if there is one)
Add tests for PagedScreenReaderStrategy
theming: extension buttons
localize
handle git branch delete error ("not fully merged")
add git delete branch command
Select single words in property value
Pickup all TSConfigs in Workspace for TSC Build Task (#27306)
node-debug2@1.13.0
Safer change for #25422
Use 'descriptionForeground' (#27289)
sourceMaps is enabled by default, remove from launch configs
Add Unit Test launch config (not sure why it was deleted?)
Actually save the file this time :'(
Move VersionStatus into a class
Add TSC Task Provider (#27093)
Tune merge-conflict colors (#27299)
Extract merge-conflict colors as workbench colors (#27299)
Comments
[seti] add information_for_contributors
[seti] Update to jesseweed/seti-ui@f78d623 (2017-05-11)
Start crash reporter inside child processes (#27180)
Add null check to terminal link handler
Add null check in terminalPanel click listener
Overlay color (#25798)
Playground colors (#25798)
More welcome page colors (#25798)
Remove deprecated css property
Move terminal.foreground defaults to JS
Add information_for_contributors to grammars
[php] update grammar
[less] update grammar
[typescript] update grammar
[css] update grammar
[cpp] update grammar
[clojure] update grammar
update all grammars script
[ini] add update script
[scss] update grammar
[docker] update grammar
theming - fix color clash when dragging over selected or focused item
Uncaught TypeError: Cannot read property 'isActive' of undefined (fixes #27257)
clean up unused code
a18y: avoid duplicate events when navigating trees (for #26730)
linting: convert double quote imports to single quote
How to configure a window (also for reload case)? (fixes #27192)
Allow to contribute actions to other quick open handlers (fixes #27197)
[lua] update grammar
theming - remove hardcoded list color in keybindings editor
Reverting prev fix as it adds gap between docs and list
Clean up termianl imports
Use 64-bit cmd as default external terminal
Show correct link hover when links open with Alt
Implement editor.multicursorModifier
Extract clicking link logic to its own file
Encapsulate opening a link gesture in LinkGesture
Group method logically
Encapsulate trigger modifier logic in goToDeclarationMouse
Introduce `multicursorModifier` editor options
use alwaysStrict in TS extension
Allow extensions to use theme colors in status bar
make input box responsive when widget or editor resizes
Flex Box
draft version
Clean up var name
Allow decorations to use theme colors. For #26974
Remove debug logs
Fork terminalProcess using amd, convert to TS
Add node-pty typings back
Move terminalProcess to node/
Add mementos to shutdown
Enable needs-more-info bot plugin
theming :lipstick:
Tweak error message for extension table in github issues
don't score when the word is the empty word, #26096
Modularised tests.
make fuzzy match skip leading whitespace in pattern, fixes #26096
fix instantiation service warning
Revert "allow offsets for fuzzyScore, towards #26096"
fix typo
Updated the way to run the smoke test.
fixes #26184
fix update state changes
don't double print messages from the extension service
use getAccessibilitySupport for F8, fixes  #18366
use process.hrtime for tick timers
Add trailing new line to current page (if there is one)
Add tests for PagedScreenReaderStrategy
theming: extension buttons
update service: get initial state
More work to make v2 the default
theming - dirty diff colors
move everything into snippet/browser
debt - remove unused snippet code
Remove no longer necessary selectionToken from TextAreaState
The Paged Screen Reader strategy works really well for Narrator
fix #23978
theming :lipstick:
update distro
rename css-file
language surveys: add surveyID
separate commands and mouse navigation
debt - remove goToDeclaration/common
debug repl: smart acceptSuggestionOnEnter
Added npm extension that contributes tasks for npm scripts
Added 'pt-br' to supported languages.
Make Task api fully official.
Use dot reporter under Windows since spec doesn't handle ANSI color characters due to the fact that tests are executed as an electron app
theming: Expose status bar debugging and no-folder foreground colors
Adopt accessibilitySupportEnabled in the editor (#26730)
clarify doc, update default, #24420
Revert "LightUpdateContribution"
LightUpdateContribution
wip: update contribution 2
wip: global update activity
wip: ViewletActivityAction in activity bar
Add sideBarSectionHeader.foreground color key and... (fixes #27118)
Initial commit for builtin emmet extension #21943
Update monaco.d.ts
Build requires second argument to localize to be a string literal
Added xcodeproj and xcworkspace extensions to supported file extensions list for Darwin build.
polish description for seedsearchstringfromselection
Track document changes per callee
Remove performance logging
Localize compare conflict window title
Remove proposed api references, update configuration title localization.
Change document tracker to be opted out of per callee origin.
Show accessibility status in the status bar
Ensure that changing codeLens.enabled responds immediately
Update extension configuration options
Update setting section name
Cleanup and comment conflict parsing code
have base browser.ts know the current accessibility support
Add merge-conflict extension to postInstall
properly set retrigger-value when seeing trigger characters, #26995
LightUpdateContribution
Wire up accessibilitySupportEnabled to the renderer process
Disable for now screenReaderMessage in ViewCursorStateChangedEvent
Move static initializer below class declaration
:lipstick:
send telemetry message when extensions generate warning during real world run, #27090
make message a warning, #27090
Review cursor position/selection change listeners (#26730)
wip: update contribution 2
massage bogous snippets when reading them, show info-message, #27090
wip: global update activity
wip: ViewletActivityAction in activity bar
node-debug@1.13.6
Add entry file of oniguruma when packing
Update grammar for var related bug fix
Remove git merge conflict decorator
Remove legacy parser
Update accept actions for new conflict parser
Show Warning When a markdown.styles fails to load (#27105)
Move default for expand docs to const
Update compare command
Add line by line parser for merge conflicts.
Formatting change
Add temporary timing logging to merge conflict scanning
Markdown preview support the UNC path files. (#26710)
Bring in latest xterm.css changes
Suppress console warning from new xterm.js
Uplevel xterm.js
Properly attach press any key to close terminal listener
:lipstick:
Localization for codelens and warning messages.
Update codelens peer command names
Rename content provider to match extension name
Command titles and category localization support
Initial merge of 'better-merge' extension into core extensions.
Generate screen reader explanations for cursor movements
Improve issue template
#26948 Remember the view collapsible state and size
Show languages instead of extension packs
First attempt to make the terminal the default runner.
Make SearchWidget dependencies injectable
add nodePlatform and nodeArch to telemetry common data
Testing build definition.
Simplification in cursor eventing
Have all cursor state changes go through the same _emitStateChangedIfNecessary method
Update tree view item context keys
Udate context key for tree items
Update names in Tree api
update test/README
Changed executable name.
Corrected path to binary.
more accurate percentile values
send size of workbench.main.js
send telemetry when invalid timers have been computed
tfs: fix typo
compute sha256 hash of published assets
Moved to test directory.
Added smoke test source code.
add runGrep as alias
fix test runner doc
remove assertion that checks number of common properties
allow offsets for fuzzyScore, towards #26096
make `acceptSuggestionOnEnter` a tri state, #24420
fix #26851
Use pre-#25570 fonts as a fallback for system-ui (#26912)
Tree views: Use light icon path for dark icon if not provided
don't send vm hint as common property
fix aria role for expanded (do not use "undefined")
Let the view get cursor state change events first
Clean up accessibility tree
do not do FilePUT for all files inside .vscode folder
hc theme status bar: back to black like amy winehouse
fix #26995
tfs: darwin still publish build, but not asset
tfs: fix darwin build
tfs: upload darwin signed only
Launching Code to edit a file with an unsaved file from prior hot exit focuses incorrect file on start (fixes #26973)
Add commands to "list" for focusing the first and last child of the current tree (fixes #26827)
Theming: introduce border colors for individual components to override contrastBorder (fixes #26530)
Better support to use tree background color with contrast border (fixes #26218)
:lipstick:
Theming: Allow to change the colour of warning/error squiggles (fixes #9819)
node-pty@0.6.6
Remove node-pty.d.ts
Cursor fires a single state change event containing both position & selection change details (#26730)
Cursor position and selection change events are always emitted together
Simplify cursor events
Avoid extension registry lookups for multiple equal activation events
Add User settings column to windows keyboard mapper test suites
Add suite for Russian keyboard layout
Optimize allocation and comparison of static model decoration options
Add "pullFrom" git command
[#25575] Add Git Tag feature.
Move focus to docs only if docs is open
fix tests
update tes tests to show off function name with nbsp
Improve files.eol description (#2957)
Simplifications in textModelSearch.ts
Add feature to close TMScope inspector with ESCAPE keyboard event
Make TMScope inspector togglable (#19675)
Do not log write to settings.json as a filePUT event as it ruins our JSON usage data
update distro
add generic surveys
Theme: Debugger task dropdown inconsistency
Change all respects find state only if the find widget is revealed
var -> let, const
Config for automatically closing 'needs more info' issues
Implement #26948 - Initial version of custom views and tree data provider API
Simplify key code to string mappings
rename parts/nps -> parts/surveys
add quick open seperator for scm and debug quick pick before 'install more...'
Remove synchronous layout in the editor resize case (#26566)
Ensure the diff overview slider has the correct size on the first diff computation
The cursor gets passed in the ViewModel
Move ViewEventEmitter out of viewModelImpl
Simplifications
Simplify cursor handlers
Simplify cursor.trigger
Bring editor command classes together
Move editor command registration to coreCommands.ts
remove build gulpfile.js
add timers2 which is the startup timer ticks
get tick by name
Removed handling multiple '--user-data-dir' as no need for Spectron any more #25291.
log telemetry event how many extensions have been discovered
have only one insert-call, towards nested snippets...
simplify snippet session
remove extra console.log
:lipstick:
fixes #26602
next try to fix #26524
Theme: Sidebar default color foreground (fixes #26720)
remove unit test launch configuration
update hockeyapp for win64
filterText must match when it is defined, fixes #26874
fix  #26914
fix typo
Markdown: Capture right parenthesis as part of url (#26449)
Split tracer out into own file
Record when tsserver exits with code or errors
add tsserver.debug option
Add error handler for reader
Mark a few members readonly
Remove some unused functions in reader
Remove flicker when docs are expanded below
Refactoring css file for better readability, again
Renames
Move more editing operations out of cursor.ts
Move LineInsertBefore out of the cursor
Clarify editor API
Extract command execution out of Cursor
Add ICommand.insertsAutoWhitespace
Simple rename
Eliminate IMultipleCursorOperationContext
Cursor handlers take an input argument
Simplify cursor handlers
Stylistic changes
Use correct reporter instance
Split reporter out into own file
Revert inadvertant change to product.json
Quick link for tools and languages (fixes #22098)
Reorder / relabel help links
add ILifecycleService#startupKind
Name polish for editor.showFoldingControls (#4812)
tfs: fix 32 bit
send telemetry when an update is available
tfs: remove bad arch
tfs: publish setup only ia32
don't cancel snippet mode when inserting a nested snippet, fixes #26869
add restored viewlet and count of restored editors to workspaceLoad-event
scm: install additional scm providers
fix es6
tfs: publish x64 correctly
send more data about cached data rejection
tfs: fix global variable access
[xml] update grammar
[swift] update grammar
[shaderlab] update grammar
[rust] update grammar
[ruby] update grammar
[r] add update grammar script
[html] update grammar
[groovy] add grammar update script
[go] update grammar
[git] add grammar update script
[f#] update grammar
[diff] update grammar
tfs: win64 package and setup
tfs: fix win64 build
tfs: win build scripts arch dependent
develop in win-x64
tfs: linux builds
tfs: try to get a free xvfb server number
node-debug@1.13.5 (translations)
tfs: fix windows distro deps
tfs: enable linux unit tests
make linux 32 bits build run unit tests
perf - polish profile, create issue, restart flow
add telemetry about profiling invite acceptance
move startup profiler into perf.contrib
win32-ia32
[java] switch to atom/language-java grammar
[coffee] update grammar
fix install distro step
:lipstick:
remove `prof-startup-timers` option
enable tslint for our workspace
prompt some users to profile after slowish startup
clean crash reporter
Remove browser.enableEmptySelectionClipboard
Move emptySelectionClipboard out of contribInfo
Simplify cursor creation
hc theme - improve colors (inspired by high contrast ms word)
[php] update grammar (fixes #26543)
increase max_old_space_size
test fixes for #17178
[less] update grammar
[scss] update grammar (fies #26837)
hc black: use more token colors (same as dark+)
Move ViewModelCursors out of the ViewModel
[css] update grammar
configure .eslintrc to use ecma script 3 for things in src
add 32bit libasound dependency to dockerfile
tfs: fix linux32
Only show a certain subset of decorations when they are collapsed
tfs: fix windows build
no ES6 in JS
tfs: create env.ps1
WorkbenchKeybindingService._cachedResolver stale after ElectronWindow.setup (fixes #26823)
Theme: inconsistency for text field inside extensions sidebar (fixes #26798)
Update environmentService.ts to enable ENV defined extenstions-dir
Update paths.js to allow use of ENV variable instead of command-line override for userDataPath
Re-ordering css for better readability
Load script async in markdown preview
Use full width only when docs are expanded
Move close icon to fix case when there is docs but no details
Use focusBorderColor when details is in focus
Remove scrollbar from small suggestion docs
Add close icon to close expanded suggest docs
small cleanups to webview
Screenreader support for when docs are expanded
Preserve Webview Scroll Position (#26426)
fix windows build
Toggle expanded docs, add stickyness to expansion (#26783)
node-pty@0.6.5
Add interactive playground to Help menu (fixes #23481)
fix bad merge
:lipstick:
Add hint about preview to theme selector (fixes #26057)
Add 'more' to the Recent section (fixes #25583)
tfs win build
fix windows build
fix
tfs: fix npm distro install
support to profile a tick, move to /node
Move tslint settings to tslint.json
less ES6 in JS files
less ES5
more ES5
use ES5
update distro
Support crashReporterHockeyAppSubmitURL  (#26814)
add startupTimer, use it some places
remove build from test script
debug toolbar: default position all the way to the right and introduce telemetry
tfs: remove windows build step
Bracket matching box too large (regression from #26104)
tfs: improve win32 step
Split editor command (Cmd+|) throws exception (fixes #26801)
fix build
tfs: update bash step function
theming - search viewlet
tfs: update dockerfile
tfs: linux build stats
Make TextEditorOptions.fromEditor static (#26779)
Add option to exclude unique names from suggestion lists in JS files
Always Show File Names in Symbol Search Results (#26518)
Move getting active line out of inner openTextDocument
Split Quick Links section (fixes #22097)
tfs: better build perf measurements
Default to not updating scroll position if no valid editor is found. Part of #25910
tfs: fix darwin build
Remove unused Writer type
Mark some buffersync members readonly
use Switch instead of map for looking up modes
Remove linkedmap
tfs: clean vsda
using json-parser to get existing recommendations
Clean up
Add support for terminal scrollbar active theme color
Quick link and embedded editor background color (fixes #25798)
tfs: fix dependencies
Address comments
tfs: fix windows build
dynamically fetch product dependencies
adopt stableSort for ext host diagnostics
use stableSort in code-lens
Remove old code
d'oh
remove console.log statement
Move IRegExp to languageConfigurationExtensionPoint.ts
adopt loader with correct electron renderer file paths
comment out linux tests
dockerfile: go back to 14.04
debug console: add copy all action
adopt new loader with 'onNodeCachedData', send telemetry for successful cached data generation
Using Spanish locale on Mac shows "Open new command prompt" instead of "Open new terminal" underneath Spanish text (fixes #26652)
compile build scripts after npm install
Add .git/subtree-cache/ to files.watcherExclude (#26665)
:lipstick:
tfs: disable linux ia32 tests
update distro
consolidate build package.json
Terminal: adopt scrollbar colors (fixes #26286)
Add logging of PATH to investigate ATA issues reported in #24961
Use more const
Extract TypeScript logger to own file
Remove unused paramter
Added feature per #26630 - detailed search now persists
Prototype of Supporting Additional Language Types for TS Plugins
Adapt to theme's background (fixes #18905)
Use getDomNodePagePosition to position suggest docs (#26676)
Protect against disposed snippet (fixes #26587)
[theme] remove vs-whitespace color from css
[theme] theme 'inspect tokens'
[theme] externalize more hover colors
[theme] add support for inPlaceReplace (for #23506)
[theme] style 'inspect tm scopes' (for #23506)
exclude vscode-markdown and already entered extensions
Allow theming of parameter hints #26671
:lipstick:
fix linux build
tfs: add linux ia32
tfs: fix linux build
[theme] remove editorOptions.theme
extract edit making logic, #24855
Sidebar is not clickable after changing Date & Time (fixes #25830)
Add "list.hoverForeground" and "list.focusForeground" (fixes #26277)
Allow to theme editor scroll shadow (fixes #25528)
window.newWindowDimensions: inherit not working with minimized window (fixes #26586)
Cannot read property 'loadURL' of null (fixes #26588)
File icons were not updated (fixes #26526)
editorScrollbar: move off editor.viewInfo.theme
tfs: fix linux build
tfs: use bash
tfs: add fakeroot to linux Dockerfile
empty commit
tfs: add linux docker file
swap commands id and context keys
debug: filter out variables with no name specified
build: wire in mixin password as GH token
a little more height, #25506
remove unused import
add "open old file" git command
Attempt to fix #26373
#16580 Provide option to not to notify error by default. This is needed for extension API
Add commands to control workspace shell settings
Don't show extra empty lines in the Search output channel when searching with ripgrep disabled
Split js and ts setting for references code lens
extension/php: detect language via shebang (#26581)
Pick up TS 2.3.3-insiders
Intelli-sense in extensions file
move emmet to electron-browser, make it use new controller
update distro
tfs: linux build exec bit
#16580 fix tests
#16580 Show open settings only for appropriate errors - File dirty - Errors in file
[php] update php grammar
don't search for nothing, fixes #26423
update distro
tfs: linux build first steps
clean publish scripts
[theme] css fix, dots left over
debug: use false as the default value for allThreadsContinued
[theme] remove ITheme.selector
[theme] remove back/foregrund colors from editor.css
goto-definition-link-hover no longer used
fix tests
sync font size and line height with editor,  #25506
debug: reduce callstack flashing by showing a stale remainder of the callstack
fix #26544
fix #26168
debug: fetch the rest of the callstack lazily
fix #26512
Cannot read property 'className' of null (fixes #26525)
fix #26510
fix  #26508
Cannot read property 'isFullScreen' of null (fixes #26520)
fix #26465
:lipstick:
debug: tmp setting variablesDelay
debug: refresh the variables tree lazily
debug: fetch first call stack to improve perf
Uncaught TypeError: Cannot read property 'style' of undefined (fixes #26514)
Cannot read property 'push' of undefined (fixes #26513)
add accept command, not (yet?) bound to enter tho
tfs: accept source maps access key
tfs: use scoped npm cache
tfs: fix darwin build
tfs: fix darwin build
tfs: darwin get secrets
tfs: darwin use agent specific npm cache
wire up new controller and main thread editor
split things up into api/node and api/electron-browser
bring tfs scripts to repo
show final tabstop
better support for nested placeholders
improve build logging
debug: viewer get cached callStack
commands: handle label clashes better
allow for undo stops before/after
remove linux build todo
:lipstick:
Don't dispose terminal link hover handlers too early
Track terminal link underline on the link itself, not the panel
node-debug@1.13.4
Remove Need for File Extensions in TypeScript Language Definitions (#26413)
tfs: darwin build
tfs: darwin wait for signed build
Implement select command for tree views
test for later
debug: respect stack frame endLine and endColumn coming from adapter
implicit final tabstop for 'modern' snippets
wire up controller with suggestions
tfs: darwin build
increase lazyenv timeout
Revert "Revert "fix #24435""
be a little stricter and leave snippet mode when cursor move out of placeholders
update gulp atom electron
rename -> editorSnippets -> snippetSession
wire up new controller to keybindings contribution
Add 'Command Palette...' action to the Editor Context Menu (fixes #26442)
[loc][query] what is "ellapsed" (fixes #26439)
debug: decorate stackFrame ranges if provided
Revert "fix #24435"
Update to native-keymap@1.2.4 (#23685)
fix bad imports
Renamed --noGettingStarted to --skip-getting-started argument #26386.
wire up most of the old snippet controller tests
wire up tab completions with new controller
win32 build
some electron deprecation fixes
Improve plain text display of jsdocs tags
Further tweaks to jsdoc tag rendering
node-debug@1.13.3
Address VSCode component of #26415
Correct LC_ALL.  Resolves #26227
[theme] update overview ruler cursor and decorations colors on theme change
Ensure correct language mode is used for onEnter (#26358)
correct afterEnterText of selection
:lipstick:
:lipstick:
Try to disguise inputarea by using a transparent color for it
wire up variable resolver, resolve variables per selection
Document funny line height value (#26279)
add TextmateSnippet#resolveVariable
debug: introduce breakpoint endLine and endColumn to the model. On bp click select the renage in editor
debug: add StackFrame.range to model
cache & freeze snippet placeholders
Do not auto-close quotes after a word character (#25658)
support insert none snippet text
Restore window to size and location when starting app (fixes #26353)
win32: handle secrets
win32: read keys
win32: get keys
Added --noGettingStarted flag to disable 'Getting Started' page from opening when such provided. Implements #26386.
prepare for final tabstop insertion (conflicts with old world today)
[theme] add theme to the view context
add SnippetParser#escape for those that don't want snippet magic
properly handle reversed selections
start adding command and wireup with insert snippet
Use Chromium's new system-ui font alias
streamline windows build
update distro
improve win32 tfs scripts
debug: when there are duplicate configurations with the same name always take first to align with native select box behavior
Viewlet progress bar is broken (fixes #26365)
debug: if no scope is found containg the range try to search across all scopes
git: don't use fs.watch
debug state null guard
fix #26368
Move getParseErrorMessage
Move getParseErrorMessage
Keep JSON nls free (for Microsoft/node-jsonc-parser#2)
single snippet controller to begin with
Cleanup some TS files
update highlight js version
clarify settings description
:lipstick:
theming - progress bar
add missing lua goto keyword
Use for of loop
Preserve newlines in signature help display
show jsdoc  tags in sig help and for completion items
Support Tags in TS/JS Hover Provider
Simplifications post moving viewLayout into viewModel
Move viewLayout management into viewModel
üíÑ
Add Filename to JS/TS Workspace Symbol Search
Code Folding won't be remembered after latest update. (fixes #26157) (#26319)
Don't allow terminal to overflow to the right of the panel
node-debug@1.13.2
add overwrite[Before|After] to SnippetSession
Simplify view model event handling
explit SnippetSession#insert
improve typing at edges
also store and restore view state for ResourceEditorInputs (#26317)
first sketches of new snippet controller
DAP: properly extend type of TerminateEvent.restart
comment in spammy console.log
Support arbitrary data to be looped from one debug session to a restarted session
windows build
fix new windows build
add workaround for #24820
DAP: extend type of TerminateEvent.restart
remove unused code, rename Placeholder#name to Placeholder#index
Reduce view model responsibilities
simple test for nested snippet sessions
validate editor selections
Added Services Submenu for MacOS (#26248)
fix startup
Added handling for multiple '--user-data-dir' to enable Spectron smoke testing in #25291.
Simplify content widgets
fix
streamline win32 build
Use errorForeground in preferences editor (for #26267)
theming bugfixes
remove breakpoint.respectColumn, no longer needed
win32 tfs builds
drop support for substituing "command.", "env.", "config."
theme - send a smile
properly spelled out decoration options
debug: auto remove duplicate breakpoints
yet another test
Debug Hover Widget Not Themed (fixes #25905)
better decoration management, more tests, finish at final tab stop
debug: do not use special arrow character on windows
theming - do not expose badge.border
theming - inherit badge colors in activity bar
remove git menu
theming - badge colors (fixes #25493)
theming - initial "send a smile" work
Use EditorGroupinfo to decide if to swap/reposition suggest widget (#26250)
add tests for query option persistence
fix keyword type to fix tests
support FROM...AS in dockerfile
Simplify editor configuration
Simplify editor options handling
Simplify IConfigurationChangedEvent
Move default option values to editorOptions.ts
First validate editor options, and then compute the result based on env
Move editor options related code to editorOptions.ts
Add Suggestion Provider For TS Directives (#25806)
proper placeholder sorting
[theme] code lens color name fix
tests for final tab stop
:lipstick:
theming - keybindings button and widget
more correct snippet session
`list.activeSelectionBackground` seems to have no effect for custom themes (fixes #25788)
themes - let more specific border colors win over contrastBorder color
panel.border isn't being applied when contrast color is specified (fixes #26074)
Support for list.inactiveSelectionForeground (fixes #25774)
theming - introduce input.placeholderForeground for placeholder foreground
Pick up updated js/ts grammar (#26094)
make inline the default snippet sort, fixes #26182
make text edit, set selections
more getLeadingWhitespace-tricks
Expand docs on the side in the suggest widget (#25812)
Add theme key for selection (#26093)
Issue: Select element border radius and color (fixes #26045)
UI Sizing: Contrast Border Lines (fixes #26113)
Default dark theme too low contrast on inactive tabs in inactive editor (fixes #26132)
Added an option to disable the mnemonics in the main menu (#22669)
localize
handle git branch delete error ("not fully merged")
Windows in fullscreen mode does not restore to correct monitor (fixes #25400)
Enable ts-check for webview-pre.js
L is a good key as it is not often used
Use Shared TypeScript to Compile VSCode Colorizer Tests (#25858)
Clean Up JSDoc Completion Provider Implementation (#25981)
Add "Include" to extension TSConfig Files (#25860)
Add terminal colors for solarized themes
fix build?
Remove log
remove unused code now that git classic is deleted (fixes #22275)
Support terminal bg and fg color keys
Remove no longer existing theme key from Red
Monokai: Don't use transparency in terminal colors
wip
Removed redundant instantiations of LinkDetetector for each ANSI output. Corrected regex description.
more getLeadingWhitespace-tricks
Added clarification to the regex and public method.
remove legacy git
debug: introduce internalConsoleOptions in settings
fix #26021
TextmateSnippet#value, #16037
more tests, #16037
make sure adjust indentation creates a copy of the snippet, #16037
add indent adjust logic to snippet, prep for #16037
more snippet parse info, prep for #16037
:lipstick:
Contribute explorer views - Adopt proposed API to contribute explorer views - Adopt extension host and main to contribute explorer views - Implement contributable views in explorer viewlet
show ahead/behind while git syncing reverts fab6f8871ad
Always have a size >0 on Chrome for the textarea (#356)
correct snippet handling, #25959
fix #25959
make it possible to change a SCMResourceGroup's label
Add .mjs to known JavaScript file extensions (#25747)
update distro
Monokai: Use standard fg for list highlight
Position textarea with the primary cursor (#356)
Convert TextAreaHandler to a ViewPart
Check stats for undefined (fixes #25902)
load main.js while waiting for app.isReady, #17108
add SCM Providers as marketplace category
git commit with input bail early
use global settings
some api test love
cleanup
merge extension config contribution
Only show context menu on "real" variables. Not on array chunk nodes.
debug: remove heuristic for evaluate name
clean up #24950
adopt new loader, fixes #25229
Extract text area related CSS to textAreaHandler.css
Move text area creation to TextAreaHandler
Move focus related code to TextAreaInput
ITextAreaInputHost provides screen reader content
Rename TextAreaHandler to TextAreaInput
debug: show columns in callstack view
debug: respect breakpoint.column when sorting
debug: better handling of configuration actions when there is no folder open
remove references to ArraySet
node-debug@1.13.1
Enable Semantics Diagnostics for Inline JS (#25850)
add git delete branch command
Debt: Simplify TextAreaState
Treat Script Tag Contents in HTML as JS (#25847)
Debt: Simplify TextAreaHandler
Debt: Simplify TextAreaHandler
Debt: Simplify text area handling code
Got rid of fs.stat for validation. Amended regex to be more precise with resource schemes.
Move text area related code to /browser/
Debt: Remove dead code
Remove unused ResolvedKeybinding methods
Debt: Correct types for ResolvedKeybinding.getParts()
Simplify registrations
Unroll key combination registration loops
Prepare for special handling of combos without ctrl+alt+
make sure default editor position is set, fixes #25801
Mac: Watcher fails on folders with glob characters in name (fixes #4586)
:lipstick:
Windows: changes to node_modules folder are ignored due to watcherExclude setting (fixes #23954)
Can't split file when dragging from explorer (fixes #25789)
node-debug@1.13.0
Use TypeScrit 2.3.2 for building VSCode (#25753)
Restore monokai dimmed background
More Monokai refinements
Pull in updated clojure grammar
:lipstick: or-types ftw
:lipstick: remove unused code
:lipstick: remove check for qunit
Quick open: Editor history selection lost once file results kick in (fixes #20828)
set stickiness in codeeditorservice
Restore action to report negative startup times (insiders only) (fixes #25020)
Color registry documentation order
FIx for terminal color descriptions
expose stickyness decoration option
use native classlist when possible, fixes #25771
fix #25645
fixes #25316
:bug: don't use extension.uuid for download path
Keybindings are not highlighted in Keyboard shortcuts editor (fixes #25762)
fix #25712
Closing a tab using middle mouse button on the 'x' causes the tab to the right to also be clsosed (fixes #25529)
List: bad color when focus moves out of selection and hovering (fixes #25634)
theme - :lipstick:
fix compile error
more theme updates (for #25327)
[WelcomeUX] Windows: Filter current folder from Recent section (fixes #25750)
Redo monokai colors
Tweak Quite Light theme badge color.
Remove unnecessary parentheses (#25573)
Tomorrow night blue: Style debug toolbar
#10542 Ability to merge local git branches
Revert "commands - shortest match wins"
Make debug status bar readable in tomorrow night blue theme
Add workbench/editor colors to our built in themes (fixes #25327)
2017-04-28, merge in translation from transifex.
1.13
Pass results limit (fixes #15778)
theme - fix broken scrollbars in hc mode
theme - flip active selection colors
theme - get rid of list.focusAndSelectionBackground
Run distro tool
theme - get rid of list.focusAndSelectionForeground
theming - inherit some
standalone editor color id rename
Peek view color mixup in update script
WorkspaceEdit type mismatch in css server (for #25623)
Remove keybinding migration prompt
More fixes for 24153
fix #23524, again...
themes - get rid of tab.activeWithInactiveEditorGroupForeground and inactiveWithInactiveEditorGroupForeground
themes - get rid of masterDetailsEditor.border
Consider to use dots instead of camel-case (fixes #25428) (#25621)
node-debug@1.12.14
:bug: fixes #25622
remove console.log (fyi @aeschli)
:construction_worker: proper IPCRunner, IPCReporter for electron mocha test runner
improve error message
fixes #25613
:bug: remove text model resolver service promise cache
re-enable removal of duplicated helpers
fix #25578
:lipstick:
Monokai UI theme - first pass for #25327 (#25599)
:lipstick:
use more transparency (for #25482)
Route emmet actions to extension (#25587)
A few more tweaks for tomorrow night blue
Wrapping paths with spaces in quotes, and encoding properly
Inserting file path on the terminal, when dragging a file to it
node-debug@1.12.13
[json] fix for color decorator regex
Apply foreground color (for #25519)
[themes] color validation fix
Remove jsconfig/tsconfig activation for ts extension. Part of discussion in #25559
Gate pluginProbeLocations to only global ts installs
Pick up TS 2.3.1 final
Don't use the CLI for the desktop entry
quietlight: go back to purple
fixes #25104
:bug: use event echo instead of buffer for url handling
fix #25379
node-debug@1.12.12
small comment fix
fixes #24487
highContrastBorder => contrastBorder, highContrastOutline => activeContrastBorder
:bug: SourceControlResourceDecorations.faded
focusedElementOutline => focusBorder
fixes #24979
theming - use highContrastBorder in more places
panelTopBorder => panelBorder
fix #25426
editorHeaderBackground => editorGroupHeaderBackground
remove unused percentage-value from progress step, fixes #25534
fixes #24308
enable valid test, #25539
use correct uri manipulation, #25539
fix #25399
fix #25462
All cursors should do the same thing when deleting left
fix #25461
fix #25483
fix #25495
workaround #25493
:bug: remove git init icon
introduce listHighlightForeground (fixes #25496)
add --enable-proposed-api <my.ext>, #25378
fix #25369
fix #3282
:bug: make git.cleanAll more alarming
:bug: choice service needs cancelId argument
Go Back / Go Ahead not the best match for swiping (fixes #25449)
Improve wording in of editorHeaderBackground (#25476)
Workbench colors for tomorrow night blue (#25464)
2017-04-26, merge in translation from transifex.
Update ripgrep - fix #24050
Bump node-debug2
Add focus color for red theme
More tweaks to red color theme
node-debug@1.12.11
use final version v1.19.0 of DAP
Un-allowed double quoted imports (for #25451)
solarized dark (for #25327)
:construction_worker: hygiene for vscode.d.ts and monaco.d.ts
fix hygiene issues
update monaco.d.ts (copyright, whitespace)
update monaco.d.ts generation, recompile build-folder
:bug: fixes #24052
:bug: fixes #25225
:bug: fixes #25252
:lipstick: remove dead code
:bug: dont call iconv with unsupported encodings
:bug: git status errors are incomplete
:bug: fix git throttle decorator
fix #22680
update quiet light theme
abyss theme (for #25327)
build
...das andere links
:lipstick:
Prevent redundant enableSmartCommit prompt This prevents a prompt for enableSmartCommit if there are no changes at all
Check git enableSmartCommit if no staged files
Add git enableSmartCommit setting If false, this setting will prompt the user if they want to commit all files if none are staged
A few more small theme updates
More updates to red color theme
Show message when Git is not found (#24402)
A bit more styling for red theme
Pick up 04/25.1 TS 2.3.1 insiders release
Add some basic colors for the red theme
Added red-color-theme json file
Update TS/JS Grammars (#25337)
Color of buttons on welcome page (fixes #19454)
[json] update service
[html] update html grammar
Introduce resource context actions
Pick up next TS 2.3 insiders
[theme] update kimbie dark
[theme] don't cache default values as they are invalidated by color customization changes
Continue fixing TS 2.3.1 Compiler Errors in VSCode Codebase (#25315)
remove gallery url from product json
Show terminal on run active file
Show terminal on run selected text command
activity bar forground color for Quite Light Theme.
theme - let focused/selected items in tree/list win over :hover style
theming - buttons
Rename setting for expanded abbr in suggestions
fix  #25268
Move more core commands out of cursor.ts
More more core commands out
Move more core commands out
Begin moving cursor core ops out
fixes #24263
node-debug@1.12.10
:bug: git always show stderr
:bug: better git push error message
update doc string
rename TextDocumentShowOptions#column to TextDocumentShowOptions#viewColumn
align `vscode.diff` options with API
[themes] fix custom color updating
commands - shortest match wins
theming - add sideBarSectionHeaderBackground for split views
:bug: fixes #21143
node-debug@1.12.9
fix #25300
[theme] convert kimbie dark
[theme] deprecate 'workbench.experimental.colorCustomizations'
fix #25279
theme - adopt severity colors from base
theming - info/warning/error for input box
:bug: fix git command labels
[themes] revert uiTheme-> type change
Changes ShowTextDocumentOptions to TextDocumentShowOptions Changes pinned property to preview Adds ITextDocumentShowOptions as main-side DTO
Update tree explorer extension point to tree views
theming - use widgetShadow in more places
Adds ShowTextDocumentOptions interface Moves column into the options Removes overloads from the proxy
Adds editor options overload to vscode.diff
Adds editor options overload to showTextDocument
theming - scrollbar colors
Implement smooth scrolling feature
add deprecation warning, #18066
show extension name in tooltip, #18066
rename `ProgressLocation.Scm` to `ProgressLocation.SourceControl`, #18066
adopt git to final progress API, #18066
finalize progress API, #18066
Enahance tree api - API to create a view passing the data provider - Have methods on created API to refresh
[theme] clean up IColorTheme
[themes] Generate Color Theme From Current Settings
[themes] add type to color theme file
fix #23947
fix #25190
:bug: range (un)staging should be line based
make sure chord message is all the way to the right on left hand side status bar area
theme - better dropdown color in hc theme
debug: edit expression
Remove tree node api
tweaks for hc theme
:lipstick:
Remove tree model api
Remove the tree model api
tweak outline width
theme - opacity only on activity action icon
clean up failing test
manually alert when focusing items in the symbol tree, #17245
set CWD when running tests
theming - fix outline in activity bar after webkit-mask trick
Disable emmet expansion on tab if autocomplete is enabled (#25255)
2017-04-24, merge in translation from transifex.
Implement custom viewlet tile actions
Enhance Tree api - A new approach to register tree node - Support on change listener to refresh node
Update Go grammar to atom/language-go@6de3f61 (#25216)
[theme] support theme references
node-debug@1.12.7
clean up tree model interfaces
Make extractLineColumnInfo more concise
Only evaluate lineAndColumnClause once
Tidy comments
Consolidate link regex variables
Ensure trailing \r on terminal sendText
Revert "open editors: always refresh the whole group not just the element"
debug: breakpoint column polish
debug: always respect bp.column response from adapter
debug: add internalRestart flag
OSS input
update distro
theming - more hc offenders
debug: pass source.name when able
theming - always allow high contrast outline and border color even when not in hc theme
use webkit-mask also for custom explorers
:lipstick:
theming - introduce and use colors for notifications box
update DAP
Inlined js file with the latest i18n.ts changes.
Moved code resource under the correct project variable.
:sparkles: fixes #24031
:bug: update distro
announce results from definition/reference search, #17244
:sparkles: merge git.open* commands
rename to activityBarForeground
Allow to configure foreground color of icons inside activity bar (fixes #25160)
fix #17191
Removed exception widget break mode for now. Resolves #24463
Added safety check for misbehaving DAs. Closes #24411
:art: cleanup git show code
don't decode stderr
[html] update service
have valueSelection instead of noValuePreselect, #10582
:bug: fixes #25153
Normalize Windows paths on terminal
node-pty@0.6.4
Task spinner is misplaced in status bar (fixes #25051)
add todo for electron update related workaround
Bump node-debug2
tree model: more tests
tree: iterate on the fly
Make terminal workspace setting message consistent with PHP lint
Uplevel xterm.js
Tweak ripgrep error handling - whitelist errors instead of blacklist
Pass Source and Level For TS/JS Errors (#25167)
2017-04-21, merge in translation from transifex'
Lazily Fetch Supported Code Actions for TypeScript (#25164)
Use './' syntax for "Find in files", #18334
Don't persist the value of the 'useExcludeSettings' button
Prototype Extension Contributed TS Plugins (#24917)
tree: initial tests
Add setting to disable NPM Not installed error (#25112)
cleaner separation between TreeModel and TreeNode
Add Setting to Enable JavaScript TypeChecking Checking in Implicit Projects (#25116)
move treeModel into list
extract spliceable
Mitigate #25103. I might be the only Quite Light theme user.
[css] update service
Add libgconf-2-4 as a .deb dependency
Simplify cursor code
Extract cursor move operations to a separate file
Move common types out of oneCursor
Clean up CursorMove command
Reduce usage of _invokeForAll in cursor
Cursor handlers don't need to return a boolean
:bug: fixes #24646
:bug: fixes #21285
fix #24849
:bug: spinning sync icon
fix #21550
:bug: fixes #24026
use --nolazy when starting renderer processes, #25019
fix html formatting test lint warnings
fix html test
:bug: fixes #21601
Move CursorUndo out to /contrib/
Remove unnecessary code
:bug: fixes #24673
:bug: fixes #24598
Show more error messages from rg. For #24050, but we will also update rg to get a better error message for bad globs.
Pick up new insiders release of TS 2.3.1
Disable Autoclosing Pairs for Quotes in c++ strings and comments (#25100)
EditorScroll: Get rid of cursor -> view -> cursor recursion
EditorScroll: Get rid of cursor -> view -> cursor recursion
EditorScroll: bring related code together
EditorScroll: parse arguments
node-debug@1.12.6
update distro
Move context keys out of editorCommon
Move more types out of editorBrowser
update distro
update distro
[powershell] add grammar update script
wip: tree model
Bump node-debug2
Remove requestFailed telemetry event
Sibling clause info in search output, and escape values
node-debug@1.12.5
Change method name.
#24653 - Adds a new user configuration `extensions.ignoreRecommendations` to enable or disable extension recommendations.
Revert "Show ratings and download count even when extension explorer is narrow."
Show ratings and download count even when extension explorer is narrow.
[python] update grammar
Some view cleanup
correct keycode enum
update distro
Revert "debt - add action to report negative startup times"
update distro
update distro
update distro repo
theming - quick open group label and separator
Move more types out of editorCommon
Move cursor events out of editorCommon
More clean-up in editorCommon
More usage of Position vs IPosition
OK capitalisation fix
workaround #9225
Activity bar: need dark/light icons (fixes #23693)
Add TypeParameter symbol and completion kind, #2628
get rid of unstable test
:lipstick:
:bug: catch `git fetch` errors
:sparkles: git: huge repo prevention
webkit-mask for status bar icons (fixes #23526) (#24997)
Bump node-debug2
Increment version of vscode extension telemetry module
Remove explicit Z-index setting #24902
favor multiple strong matches over equal strong matches, fixes #24904
test for #24904
:lipstick:
debt - add action to report negative startup times
Adding code to generate links tests cases.
moving object level constants to class level, seprate method to format links.
Adding tests for getting information of line and column along with link url
Adding space along with non-breaking space in regex, fixes for unix paths
WIP: Adding line and column support for terminal
:bug: fix git test compilation
Move ISelection out of editorCommon
More usage of Range
:zap: git: run status without buffering whole output
fix tests
Move IRange out of editorCommon
Move IPosition out of editorCommon
adding event and operator symbol kinds, #2628
adding event and operator completion item kinds, #2628
theme - fix issue with checkbox color
Move editor options out of editorCommon
Move model events out of editorCommon
Strong typing for ViewOutgoingEvents
Disable `translate3D` for list when scaling (fixes #24599)
:lipstick:
:bug: catch `git fetch` errors
Focus outline around extensions list as soon as I select an element (fixes #24932)
clicked/hovered problems always display in a dark theme (fixes #24842)
added config option git.cloneDirectory, defaulting to os.homedir()
fix #24457
Clean up editor/diff editor events
Simplify eventing
Introduce/Adopt ModelRawContentChangedEvent
Improve handling of unexpected errors in tests
Do not extend EventEmitter
Remove IEditor.onDidChangeModelRawContent
Disabled input box in search viewlet is badly colored (fixes #24700)
validate if model is really orphaned or not (helps #13665)
ts 2.2 fun
Update typescriptMain.ts (#24892)
Added support for encodings for Git.
Pick up next version of TypeScript 2.3 insiders
Dispose all terminals if not veto in onWillShutdown
Remove temporary Windows terminal column cap
Update VS Code source list if disabled by OS upgrade
#22622 - removed z-index
Use SnippetParser to find maxtabstop
Move search channel output to SearchViewlet
For #24717, fix search results doubleclick
Grunt autodetection for terminal task runner
Revert "Revert "Use TS 2.2 to build VSCode (#24734)""
Do not remove duplicate TS boilerplate until we find a good way to handle TS updates
Revert "Use TS 2.2 to build VSCode (#24734)"
More EventEmitter cleanup
Rename EventEmitter methods
A single model content changed events contains the list of changes
Add IModelContentChangedEvent2.isFlush
Clarify extension host protocol
:lipstick: remove code duplication
stable quickfix model test
remove topScoreIdx which is always 0, towards #22839
fix builds: don't use ES6 in js
add accessibility provider and alert when action is done, #17245
Small doc clearnup
Use TS 2.2 to build VSCode (#24734)
Use correct document when creating base node
Address old iframes potentially not being freed as part of #24671
Added PII note on ts server trace and log settings #24696
Show ripgrep command and output in Output channel - For debugging purposes and transparency.
Set insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces to default to true to keep with existing behavior
Expose insert..Braces rule in VS Code settings (#21649)
Treat emmet snippets as textmate
Pick up ts 2.3 insiders (#24725)
Small formatting cleanup in markdown
Changed link to use https
[theme] suggest widget match highlight
[theme] searate list selection outlines for high contrast suggest widget colors
[theme] suggest widget
:art: simple refactoring
:bug: handle proxy auth window closing
Nested code lines now no longer display the hover border left. (#24686)
Reverted back to iconv-lite dependancy until discovery why iconv module breaks the build.
Updated iconv version to latest.
Added task that generates nls.metadata.json as a  dependency for translations pushing.
improve proxy auth dialog
:lipstick:
announce summary after renaming a symbol, #17247
announce accepted suggestion label and text, fixes #17236
fix #24435
fix #24457
fix #24640
update test lifecycle
make xvfb an arg
pass on args
add xvfb test script
:art: git.ignoreLegacyWarning
adopt tree/list styler
extract tree/list css into dynamic stylesheet
Adding 'never show again' in Git Extension
Allow Code Lenses to Provide only a Title
Use js/tsconfig schema for jsconfig.*.json files (#24637)
disable translate3d for tabs title control scrolling
:bug: fix instantiation warning
[theme] complete renameInputWidget: box-shadow, border
[theme] editor accessibility widget
fix typo
[theme] rename editorFindWidgetBackground to editorWidgetBackground, add editorWidgetShadow and use in findOptionsWidget
:bug: remove extension sort order
improve test script help
[seti] fix vertical alignment on Windows
Keyboard shortcuts not visible in command palette (fixes #24531)
NPE in selectBox.ts (fixes #24584)
:bug: better handle uris in windows
[setuip] update theme (fixes #22667)
disable failing test to have a build...
[theme]  consistent style parameter names for input checkboxes
some blind test fixes
theming - add more default styles
theming - fix editor background during DND
Theme changes cause most workbench elements to not use ClearType (fixes #24532)
File from UNC-folders twice time opened in same instance after changes (fixes #24003)
Revise some code :sushi:
Changed git renamed icon to orange color
Update markdown grammar to allow better injection into unknown fenced code blocks
Remove hot exit default message
Don't reload release notes when clicking on tab
Ensure we use an encoded URI for the markdown styles
node-debug@1.12.4
Gate some ts code lenses in the providers themselves #24548
Align action label with menu label
Initial background according to theme, need to set backgroundColor window color
Initial background according to theme
Update Exec param at code.desktop
also debounce quick fix request when markers change, #24066
#20418 Clean up
Show resource group actions on keyboard selection
:bug: fixes #24521
:bug: fixes #21096
add comment back
:bug: fix intellisense title layout
Prefer #RRGGBB over rgba(...) in dynamic css
add SideBarBackground in SolarizedLight
:hammer: cleanup
fix #24507
:construction_worker: update distro
Add zenMode.hideActivityBar option :sushi:
Remove "JOAO" from Readme title
commit
oss update
Remove non-"debug:" case
Tests for #24299
Porting a couple of community complex command fixes
Switch md button to open to side by default
Document enableExperimentalExtensionApi for insiders
Use load event listener instead of onload in markdown preview
:lipstick:
Workaround for #23924 - only highlight first line of ts/js implementation range
node-debug@1.12.3
Enable contextIsolation for webview
Tweak HTML Preview Styling (#24280)
Clean up some editor input debt and lifecycle issues (#24439)
#23912 Adopt actions
Removed old regexes.
Added file link validation.
Updated regex to handle relative paths and paths without column number.
Added multiple link detection for debug console and exception widget.
keep profile while extensions are being looked at, #23994
adjust tests (#24446)
:bug: git: don't wait for idle when git show
:bug: isolate git uri handling
restrict newline-on-enter only when suggestions came via 24x7, #11944
debt - adopt templates in tree explorer and delete actionsrenderer (!)
debounce cursor change events in quick fix oracle, fixes #24066
:bug: fixes #17768
vue tour - avoid "." for non file editors as description
:bug: fixes #14238
Revert "revert electron tests"
:bug: use fsPath when getting paths out of URIs
try to fix build again
fix tfs build
Unable to change encoding for untitled files (fixes #24356)
n.onMetadataChanged is not a function (fixes #24354)
tildify path label if possible (fixes #24045)
Update to electron 1.6.x (#23842)
debt - avoid left/right widget and fix actions overflow in search viewlet (#24397)
Added missing . to hc-black so that it displays the correct scm action icon colors.
node-debug@1.12.2
Adds ... to long extension names.
fix Solarized Light theme highlighting  #24040
Add restart TypeScript Server logic (#23877)
File explorer opens file under cursor on [Esc] key. (fixes #24232)
FileLabel can't handle UNC paths very well (fixes #24235)
Debt: More tests for keybindings editor model filtering
After hotexit file.encoding —Åhanges to UTF8 (fixes #24185)
Added file link validation.
Revert ":bug: use `pipe` for stdin when getting the user shell env"
:bug: git: don't show progress on fetch
:bug: git: remove lock file checking, replace it with try-catch
#24146: Cannot run build after upgrade
fixes #24076
debt - one less createInput() call
cp1252 encoding not detected in this case (fixes #23997)
node-debug2@1.12.0
Update some Markdown Snippets to Surround Selected Text
Add marker class to markdown preview body to allow better css styling overrides
Attach languge server: set "protocol": "legacy",
node-debug@1.12.1
Debt: Tests for keybinding editor model (Cont...)
Debt: Test for keybindings editor model (cont..)
Debt: Tests for keybindings editor model
revert electron tests
Move to tests folder
Hot exit: Lost editor contents on upgrade (fixes #23999) (#24053)
Debt: Tests for keybindings editing service
:bug: remove withScmProgress from proposed
:lipstick: back to es5
#23374 - Disable keyboard support for keybindings list widget
Updated cultures list to match Transifex. Code tidy up.
debt - avoid createInput() on workbench startup
Separated Default.isl and messages.isl in two separate projects. Introduced language parameter for pulling XLFs.
#23400 - Convert the icon for dark themes
use a different icon for `variable` than `field`, #2628
Implement #23400
#23368 Improve filtering keybindings - More accurate results by detecting parts - Support exact matches - Support meta key
Exported necessary members back.
fuzzy score - stop after find 10 matches
Separated pulling from XLF->JSON conversion for Translation Team PoliCheck process.
cap peek view height to view port height, #23310
:lipstick:
move windows mutex after window open
getCenteredRangeInViewport might return null, fix #22924
debt - decouple app from main code
Scoped xml2js module to build folder only.
Some cleanup in LanguagesRegistry
Reverted typings folder refactoring. Made build pipeline to break on failures in parsing or in communication with Transifex.
try to get tests green
debug: add global launch.json in settings inteli-sense and hover
stable sort for edits,  #22703
towards better quit handling (for #22138)
register command properly
fix dependency issue
more timeout for diff tests
debt - remove referenceSearch/common
debt - remove suggestion/common
debt - remove rename/common
debt - move api tests to electron-browser
make commit id part of the cached data path, #23883
make terminalProcess.js ugly compatible, fyi @Tyriar
debt - move relaunch into lifecycle service
settings - prompt for restart for some
debt - adopt templated rendering for the explorer
Split markdown security selector into own file
Support new completion items in TS
Revert to using full uri for markdown scroll sync
Further tweaks to markdown scroll sync paths
do not clear list, just dispose as before
#23368 - Improve keybinding search - Implement APIs in ResolvedKeybinding to expose parts - Implement APIs in ResolvedKeybinding to get labels without modifiers - Adopt tests to above API changes - Use above APIs to search and highlight keybindings - A new keybinding label widget to render a keybinding - Adopt above widget in Keyboard shortcuts editor and define keybinding widget
node-debug@1.12.0
debt - no more legacy non-template rendering in quick open
:lipstick:
Added package.json to 'build'.
document --runGrep, #23742
renames: test -> test-mocha and test-electron -> test
support --runGlob, #23742
add --coverage option #23742
document --build option, #23742
debug: do not cache action items
actionBar: always dispose action items for now.
Revert "actionBar: always dispose action items for now. Debug always recreate focusProcessActionItem"
actionBar: always dispose action items for now. Debug always recreate focusProcessActionItem
Updated regex to handle relative paths and paths without column number.
native-keymap@1.2.2 (fixes #23833)
add --build option, #23742
quietLight: do not use custom inputBoxBackground
JSON does not mark a tab inside a string as an error. For #23731
listen for auxclick in base (chrome 56+)
fix vsda filter
applicationinsights 0.17.0 => 0.17.1
theming - use flex for tree actions to avoid background color duplication (#23882)
Let the debug UI reflect the state of a focused thread
fix overflow
theming - use flex for tree actions to avoid background color duplication
Handle typesInstallerInitializationFailed events (#23876)
Remove unused TS setting string
Remove class snippet comment (#23209)
Use setInterval/classes over animations for terminal cursor
Add note about references code lens required TS version
Ensure no data events occur after a terminal's exit event fires
Create terminal after selecting shell on Windows
Add an option to enable/disable JSDoc autocomplete (#23704)
Disable terminal copy context menu action if there is no selection
second try to fix #22933
adjust test to new completion item sort order
remove unused code
Use better libxkbfile dep
use native path#join in menusExtPoint
Added multiple link detection for debug console and exception widget.
avoid string creation when lengths don't match, #11944
Don't bind Enter when suggestion is already fully typed, #11944
sort completions by score, #23643
prefer longer seqeunces after good characters, #23643
'Open Extensions Folder' command opens upper folder to 'extensions' (fixes #23845)
increate pattern limit to 1000, #23782
Limit fancy blinking animations to blink 10 times after cursor idle
cancel future code action compute, fixes #23433
Wordning tweaking
call showItem with profile-file-path, fixes #23524
Adopt menu service and commands for save conflict actions (for #23420) (#23838)
SCM: Text-only navigation action misaligned (fixes #23583)
Windows: rename casing of file shows "file deleted on disk" in editor tab (fixes #23750)
Set relaunch command for window (for #13905)
Add noValuePreselect option to showInputBox
Check for string not truthy (fixes #23765)
Don't run `install --force` on Appveyor. This causes errors to be ignored and we don't do it on Travis or the official build.
Check for string not truthy (fixes #23765)
:lipstick:
Use buffer properly (#23722)
fix #23259
make 'test-electron' part of the build
fuzzyScoreGraceful accounting for typos
fixes #23745
bump version to 1.12
make dash a separator character, fixes #23746
quitelight theme: use darker shade for sidebar
#18095 - Remove descriptions from commands as they do not need args
#18095 Rename Keybindings title to Keyboard Shortcuts
udpate to latest distro
#18095 Record telemetery events - Opening keybindings - While performing actions
ossreadme: remove non ansii characters fyi @bpasero
node-debug@1.11.17
:bug: split git open file/changes into two sets of commands
Wrong casing on import of statusbar
always append a new line for output coming from an extension such that seperate logs go to seperate lines
show viewlet activiy progress after 150ms and show for min 150ms, #23725
:construction_worker: remove buffers from build streams
:construction_worker: split linux tfs build
Add missing types
Show terminal link hints outside of viewport
Clarify enableBold terminal setting
Parts for #23449
OSS input for jschardet
Revert ":bug: text only title actions"
:bug: expect resources, not uris in commands
:bug: getCommitTemplate throws in non-git repo
:bug: remember the last scm provider per workspace
:bug: text only title actions
:bug: remove the notion of active scm provider
fix #23696
theming id changes
Bump node-debug2
avoid new Date() and Math.round() for performance numbers
:bug: fix npe
check array.length, not array, fixes #23404
Align code on all operating systems
[theme] color descriptions to end with a dot
[theme] rename editorPeek* -> peekView* (for #23464)
[theme] rename editorPeekResultsSelected -> editorPeekResultsSelection (for #23464)
:bug: show current scm provider in viewlet title
[theme] rename editorGuide -> editorIndentGuides (for #23464)
:sparkles: make SourceControlResourceState.command optional
revert for #22527 since hot exit is now case sensitive
Revert "fix #22899"
Code sanity.
Missing details null check added per DA protocol specification.
:bug: add missing menu intellisense
:bug: pick up activeEditor for git commands
[json] update service (fixes NPE  in color requestor)
:bug: fix commands naming
:bug: change scm/resource/context to scm/resourceState/context
:bug: any resource can come in via command arguments
debug: remove stale distinct breakpoint call since we now support multiple breakpoints per line
[theme] rename editorPeekBorders -> editorPeekBorder (for #23464)
[theme] rename checkedBorderColor -> inputActiveOptionBorder (for #23464)
[theme] rename editorInvisibles -> editorWhitespaces (for #23464)
[theme] rename peek view match color names (for #23464)
[theme] rename editorCurrentFindMatchHighlight -> editorFindMatch (for #23464)
[theme] rename editorSelectionHighlightColor -> editorSelectionHighlight (For #23464)
[themes] solarized-dark polish: add colors for peek, hover (#23638)
:art: unhook scm from marshalling
[json] update service (for #23424)
recurse with gap-penalty, fixes #23458
automatically marshal scm resources
Add extra theme colors to Solarized Dark for #23294
Listen on configuration change (#20832)
Bump node-debug2
Reset selection and focus on filter
Add libxkbfile-dev(el) as Linux package deps
node-debug@1.11.16
fix #23616.
scm: move from pull to push model
[theme] fix quietlight theme path
[theme] change setting to workbench.experimental.colorCustomizations
#23379 - Make action bar visible on row focused
node-debug2@1.11.11
Add defineKeybinding action to the context menu
Don't search files.exclude when disregardExcludeSettings is set
:lipstick:
gap penalty, -Number.MIN_VALUE is smaller then -1, fixes #23581
prevent reload window closes the debuggee; fixes #23390
Cannot save file "deleted from disk" (fixes #23349)
quitLight theme: tmTheme no longer needed
undo monaco.d.ts api breakages and keep using enum #23293
fix #23472
fix #23469
consistent color names (#23464)
fix #23441
fixes #22928
encoding normalization (reported in #23322)
revert selector changes, #21886
vscode-textmate@3.1.2
createMatches should handle no matches, #23190
add single/double quotes as boost character, #23190
debug: do not allow compound to start if some process is already running which the compound wants to launch
debug: better error handling for missing task
attempt with full encoding, #23346
use file-uri in css, #23346
:bug: make askpass work in no-workspace environment
Streamline prompts for workspace executable settings
quitelight theme update
workaround #23537
fix #23404
:green_heart: cmon build machine
fix #23402
more debuggers -> additional debuggers
fix #23401
:green_heart: hopefully fix the linux tfs build
:bug: mouse doesn't work in intellisense any more
:green_heart: possibly fix tfs linux build
fix #23228
:sparkles: new scm icon
:bug: omg everything breaks
:green_heart: fix linux build due to excessive output
:bug: cant commit no more!
:bug: fix intellisense focus height
Removed category from title name for restart task.
Addresses concerns in #19624
don't forget return statements,  #23332
:bug: don't fwd menu action args automatically
:lipstick:
comment out failing test
fix encoding guess in picker
:lipstick:
:lipstick:
:lipstick:
jschardet 1.4.2
pick up TS 2.2.2 final
untitled - ignore default language when associated path
fix tests
New search viewlet icons
Add unit tests for files.defaultLanguage setting
Centralize language mode enumeration in settings completion provider
Bump node-debug
Add keyboard shortcut for Settings on Windows and Linux (fixes #22424)
Add telemetry to new git.clone action - take 2 (fixes #21563)
expose scm-progress in stable api, #18066
fix #23215
Updated correct destination for localized json files.
:sparkles: make scm the default behaviour for everyone
:fire: remove git readme
:sparkles: stable-ish scm api!
:memo: improve scm api docs
:sparkles: log registerSCMProvider telemetry
theming - quick open (initial cut)
#18095 - Check the index before setting the focus
#18095 Include when and source label in Search
add Arrow enum
MIN_value ain't negative.... #23215
Allow to record chords in define keybinding widget
[theme] polish Abyss theme (fixes #23214)
[theme] merging default options bug
Resolved merge conflicts
Updated imports for i18n with typings. Removed 'request' module dependency.
Synchronised pipe to prevent its ending before all of the API responses received.
Added i18n tests.
Implemented transifex push and pull for translations together with json->xlf->json parsing.
Implemented transifex push and pull for translations together with json->xlf->json parsing.
fixes #23216
:art: fix scm api based on @jrieken's recommendations
:sparkles: make SCMProvider.onDidChange optional
:sparkles: scm provider switcher
[json] color decorators
use DAP v1.18.0
Improve handling of modifier only key presses in define keybinding widget
Missing logical check added to hide exception widget when execution is resumed.
#18095 Json edit - Test to remove last item in the array if there is a comment in the beginning
Added missing curly brace.
fix Microsoft/vscode#22997
use node-path in theme service, #23258
Add CursorContext
#18095 - Improve focussing
[theme] fix warning on theme path
:boom: scm state -> stateContextKey
:boom: scm id -> contextKey
Added chars limit for extensions listing to prevent not responsive behaviour as in #21737
More link matching work in tasks
:boom: scm input onDidAccept
:lipstick:
apply eol-changes from formatting edits providers
better jsdoc comment
#18095 - Let match command's default locale label while searching in keybindings editor
Bump node2?-debug
theming - focus outline
theming - first cut of focus color & more cleanup
fix interactive playground
theming - activityBarDragAndDropBackground
theming - activity bar badges
Clean up in cursor
Clean up cursorMove
Extract delete word commands outside of core
Extract word move commands out of editor core
Restructure WordOperations
Add new "files.defaultLanguage" configuration setting
theming - debug toolbar background
:lipstick:
Feature/part resize: Add key bindings to resize focused view (#22861)
theming - :lipstick:
#22622 - removed comment
#22622 removed comments
#22622 - comment out MAX_VALUE_RENDER_LENGTH_IN_HOVER
#22622 - preliminary version
theming - debug dropdown
Update C# grammar with fix for named ref/out arguments
Split type interceptors (#20891)
bump node-debug2
use single line and underline clickable part
Adds button to open unsupported resource types or large resources in a desktop program
Support `...` terminating Yaml FrontMatter (#23195)
theming - cleanup
theming - input and select forms
Don't run 'test' in the terminal integration test
Add integration test
[theme] support custom theme
Bump node-debug
Send machineId in crash reports (#23131)
theming - fix border issue when moving groups
Remove styler from exclusions box
Polish
Initial terminal API onData impl
Remove background color from last box in search viewlet
Add telemetry for query details and 'exclude' buttons
fix npes
Update to latest C# TextMate grammar
‚ú® "Use exclude settings" button to control using search.exclude and files.exclude
Allow registering links before terminal is attached to DOM
Uplevel xterm.js
Show terminal link popup for custom link matchers
üíÑ
:sparkles: scm: require uris on resources and groups
Add 'search.useIgnoreFilesByDefault' setting
fix compile
theming - styleable inputbox
more separator character that boost a match, #22153
remove double trim
make typeConverter eol-aware
more separator character that boost a match, #22153
prep format edit operation for making eol changes
:bug: make registerDiffInformationCommand proposed api
:hammer: change how ids work in scm providers. remove drag
:bulb: scm api docs
:fire: removing scm.drag
add TextEdit#newEol, adopt for workspace edit and onWillSave-event
:sparkles: registerDiffInformationCommand instead of computeDiff
:sparkles: ICodeEditorService.listDiffEditors()
use native path#{join,normalize} over our custom stuff
:lipstick:
add TextDocument#isClosed, #15723
fix merge problem
Add short cut for define keybinding to the action title
Revert "adding TextDocument#isVisible and internals for a visbility change event, #15723"
First step to add problem link detectors to the terminal.
remove old scorer
fast-check for no-match, #22153
Support title actions in tree explorer
Added alias and category back to statically registered commands. Added additional check to create ILocalizedString only for title or category.
test-electron: don't show window when running without --debug
test-electron: print test failure to window console too
test-electron: don't throttle when in background
[theme] rename to workbenchThemeService.ts, use IThemeService where possible
proper test fix
make tests green'ish
:bug: always call git in english
[theme] move find widget colors to colorRegistry
Corrected typo
add topScore tests, #22153
#22768 - rename
Extract markdown preview strings to constant
Prototype allowing scripts to be contributed to markdown preview
#22768 - changed according to code review
Allow data font sources in markdown preview
Add null check to non-attached xterm.js on exit call
Pick up updated coffeescript grammar  (#23123)
Update doc links in comments
Consider initialText when reusing terminal
Update Go grammar to atom/language-go@11ad31e7 (2016-12-30) (#23065)
:bug: cant use stdin in windows cli
[theme] style find/replace widget
zoneWidget: Improve default options mixin
Mitigate #22900. Use setInterval instead of animation for blinking on mac and linux.
use fuzzyScore in completionModel, #22153
boost prefix-matches, #22153
more tests for fuzzyScore, #22153
[theme] exception widget theming
:bug: add commit box message
column breakpoint better precondition
Added spacing between the title and exception details. #22078
[theme] css rule tag function
[theme] marker navigation widget
theming - editorSideBySideBorder
fuzzyScore using Needleman-Wunsch style implementation, #22153
Showing original command names next to translated. Resolves #17549.
debt - get rid of custom binary diff editor and use side by side instead
:memo: todo
:zap: list traits shouldn't splice
:pencil2: fix types
[theme] references: unregister theme listener on dispose
Support quoted commands under Windows.
update node-debug
:lipstick:
debug: fix restart frame action
launch.json: add compound config to debug main and renderer from one launch
fix #22920
also add EnumMember and Struct to SymbolKind, #2628
make sure user snippet are sorted before extension snippets, fixes #22933
use CompletionItemKind.Constant in TS provider, #2628
add CompletionItemKind.Struct, #2628
Make the keybindings decorators aware of scan code based keybindings
Add ResolvedKeybinding.isWYSIWYG() and tests
adding TextDocument#isVisible and internals for a visbility change event, #15723
Renames
debt - allow to somewhat work with a closed editor
Add IKeybindingService.resolveUserBinding
Add auto guessed entry to encoding picker
Introduce minimum threshold
Rename autoDetectEncoding to autoGuessEncoding
Add flag to decide whether to automatically detect
Add jschardet to shrinkwrap
detect encoding
Allow focus 1,2,3 editor group commands to skip terminal
Use warn severity for workspace shell choice
Allow terminal workspace settings again
Use const for shell select storage key
Lint
Add null checks
Add autoexpand test
Add warning message when tsserver log fails to open
Allow TreeModels to expand items as they are initially loaded, rather than expanding them later, which is much slower
Tweak rg test
Add support for reading scan code based keybindings from user settings
[theme] linenumbers theming
[theme] hover: group theming code
[theme] selections: ie/edge specific rules
[theme] goto-definition cleanup
Add font-src csp rule for default markdown content to allow custom fonts
Suggest only when a new terminal was requested by user
22768
Improve Inspect KeyMap data
Suggest shell change when terminal is launched
Improve KeybindingIO.readKeybinding
KeybindingIO.readKeybinding returns a Keybinding
fix debug console output end of line
add CompletionItemKind.Constant, #2628
React to changing keyboard layout
fix EnumMemeber for dark theme, #2628
a little more testing
[theme] peek widget theming
allow extensions to work with closed documents, #15723
Make command set the config
Update jsdoc for openTextDocument, #15723
add CompletionItemKind.EnumMember
add icon for enum-item/member, #2628
don't try to match pattern longer than word
native-keymap@1.2.0
[theme] references peek theming
:sparkles: proper shift selection in list
:bug: snappier list multi select
Remove redundant check as it is already checked in the thread attribute.
Introduced an exception abstraction, moved the exception info check logic to the debug model.
:lipstick:
better fix for #21709
:sparkles: multi-select (un)stage & discard git commands
:bug: actionRunner for native contextmenu service
:sparkles: multi selection actions in scm viewlet
:sparkles: add list selection classes
Revert ":sparkles: menu actions: context provider"
:sparkles: menu actions: context provider
Added letter spacing to the telemetry whitelist
Convert shell selector to action
Remove promise based terminal creation
Revert "Add safe fallback if detection somehow fails"
Update distro
Avoid firing unnecessary SearchResult changed events
Move html preview commands docs to vscode docs repo
Promise cancellation is slow. Use a timer instead since this may run many times.
Add letterSpacing to config to address #18715
Add null check
[theme] remove css colors for cursor
[theme] remove selection color css rules
[theme] remove indent guide colors css
[theme] remove glyph margin css
[theme]  remove line highlight css
[theme] remove goto-definition-link css
[theme] editor hover colors
[theme] remove links css rules
[theme] remove wordHighligher css rules
Set '"' and ':' as trigger characters for package/bower.json
[json] enable quick suggestions in strings
Run the terminal as a login shell on macOS
Send request to search proc ASAP, and send local results ASAP
Make git icon in search viewlet smaller
Make more descriptive appdata summary field
output: buffered content more tests
Introduce, test and adopt MacLinuxFallbackKeyboardMapper
output: buffered content tests
Avoid preferring IntlBackslash if possible
Add mac_en_us test
move suggest media resource to separate folder
Add a Priority column
with @jrieken use BufferedContent to optimize output appending
no EOLEdit for now, no replacement yet
Resolve integrity optimistically if integrity service has not resolved it in time.
Remove flaky test - will fix and move to test-integration.sh
fix tests
Updated MockSession with exceptionInfo signature.
fix #22899
Improve the ScanCode -> KeyCode guessing strategy
backups: stop lowercasing file paths (fixes #16591)
files.indexOf() :lipstick:
Break out of the loop on false.
ScanCode : KeyCode is N : N
revert back to old path handling (for #12448)
Print the real results
fuzzyMatch - dot is a separator char
Prepare for a scan code mapping to N key codes
[theme] clean up css rules for colors in editorColorRegistry
[theme] introduce IStandaloneThemeService
[theme] adopt ITheme in standalone editor
Also assert/debug user settings and electron accelerator
:bug: improve allow async node warning
Added missing null check.
:art: use async in ExtensionsViewlet
Added exception condition message. Moved exceptionInfo query logic to debugEditor.
Extract ScanCodeKeyCodeMapper out of MacLinuxKeyboardMapper
:construction_worker: tslint: allow-async rule
:construction_worker: allow hygiene to run on a single file
:construction_worker: update build files
Renames
Rename KeyboardEventCode to KeyboardScanCode
:apple: :rewind: remove legacy cli check
Update mac_de tests
fixes #22930
fixes #22911
:ambulance: update distro
add tests, add ctor
add some tests
add `EndOfLineEdit` and allow it to be returned from onWillSave
allow bulk edit to change EOL sequences
TextDocument#eol
Added support for querying the debug adapter for the exception info.
Send search message to search process before clearing old results, for perf
Send telemetry only to vortex (#22867)
Cleanup click handler
Follow up on #22914. Log TS Server in own directory so that typings install events are also place in dir with it. #22915
abyss as theming testbed
Add TSServer Log Collection Commands (#22914)
update node-debug
Expose mergeDefaultShellPathAndArgs on ITerminalConfigHelper
Prototype Support for TSServer Request Cancelation (#22437)
theming - workbench drop overlay
Correctly duplicate files with numbers in filename by appending a version instead of incrementing the integer.
Pick up new TS 2.2.2 insiders
theme - window foreground, sidebar background
Second prototype of markdown extensions (#22836)
Respect 'when' clauses in files.exclude - #19983
fix #22896
Add Inspect Key Mapppings action
fix win test failure
#22799 Implement reset keybinding action on user defined keybindings
#22799 Enhance json edit to support removing elements from array
IKeybindingService.resolveKeybinding can return N (>=0) ResolvedKeybinding
First cut at integrating keyboard mappers
Add IKeyboardEvent.resolveKeyboardEvent & more tests
Correct bad merge
Correct setting type
Allow setting to be changed mid-session
Make css selector more specific
Bump node-debug2
Move css into terminal.css
debug viewlet fix focus switching
don't convert backslashes when calling URI.file on none windows systems
More edge cases
theming - title bar
debug menu: fix mnemonic
:bug: fix git clone command
theming - more on sidebar, status and views
theming - status bar items
theming - editor dnd colors
disable updated perf test
wire in fuzzyMatchAndScore
:bug: add sorting to scm viewlet
Updated imports for i18n with typings. Removed 'request' module dependency.
remove lcs approach
Implement getElectronAccelerator(), getUserSettingsLabel() in the mac/linux NativeResolvedKeybinding
Assert mac/linux dispatching string
Share test utils between keyboard mappers
[theming] place editor theming participants next to the css
[themes] do default computations in color definition defaults
debug: polish top stack frame decoration heuristic
more tests from #22153
Add WindowsKeyboardMapper.resolveKeybinding & tests
fuzzy and lcs
don't use charAt, make lcs-match almost work
cleanup, different lcs attempt
higher score for case-senstive match
score case sensitive higher
add more tests for fuzzyMatchAndScore
recursive fuzzy match
LCS match
landmark
fuzzMatch3, more perf
add perf tests
fuzzy2 and toLowerCase
simple fuzzy match
#18095 Show kyebinding label if has highlights
#18095 Use ResolvedKeybindingItem instead of IkeybindingItem2
add .disable-bold to xterm.css
Add enableBold prop
Remove fontWeight
Remove trailing commas in object
Provide "terminal.integrated.enableBold" setting connected to #22422
Use new chrome-debug 'urlFilter' to attach to renderer process
theming - tab and editor borders
Remove PrintableKeypress
Prepare KeybindingService for dispatching based on `code`
Enable ripgrep by default
Bump node-debug
Use property syntax instead of array syntax.
Use ES6 Map properly
Introduce index signature
some C++ keywords not colorized correctly. fixes #22419
themes - more todos
Uplevel xterm.js
Renames
Respect files.encoding setting in ripgrep search - #19983
theme - restore tabs flicker protection
update seti theme to jesseweed/seti-ui@f7e582f (2017-03-14)
Adopt RuntimeKeybinding
Begin adoption of RuntimeKeybinding
Introduce and adopt RuntimeKeybinding
USERDATADIR => VSCODEUSERDATADIR
Synchronised pipe to prevent its ending before all of the API responses received.
#18095 Copy action to copy keybinding entry
[shell] update grammar to textmate/shellscript.tmbundle@ba95d7b (2017-03-15)
Run integration tests on a new user data directory
[themes] check if persisted theme matches the loaded theme
#18095 Reveal and focus keybinding item after define action
themes - editor title background color (tabs, no tabs)
Search in settings editor is showing invalid results for search term '4' (fixes #22401)
Added i18n tests.
Cache a theme to apply it fast on startup instead of waiting for extensions. fixes #22137
Extract USLayoutResolvedKeybinding to its own file
fix css
Rename NormalizedKeybindingItem to ResolvedKeybindingItem
NormalizedKeybindingItem uses ResolvedKeybinding
#18095 :lipstick:
skipRevealIfOpen if a specific position is provided
themes - editor title foreground
IKeybindingService cannot give out Keybindings anymore
#22282 Support searching in override settings
#18095 :lipstick:
exception widget: dispose the scheduler on dispose
debug inline values: sort values by column
Implemented transifex push and pull for translations together with json->xlf->json parsing.
#18095 :lipstick:
Move KeybindingIO up to /workbench/
list hc theme tweaks
Add test for windows en_us
Improve printing of mapper info
Update tests to a Windows version where dead keys are correctly reported
fs - more avoidance of toLowerCase()
Add WindowsKeyboardMapper
Avoid missing out on some modifier combinations
Add linux en_us mapping test
Assert entire mapping
fix tests on windows
files :lipstick:
watermark: fix live disable
ripgrep should follow symlinks
Add ripgrep to OSSREADME
Try to reenable ripgrep tests
Bump node-debug2
Improve comments
Only show "use ignore files" button if useRipgrep is enabled
Provide a way to enable/disable gitignore support for #19983
Search within './' per BurntSushi/ripgrep/issues/410
Remove todo
Prototype Allowing Extensions to Extend the Builtin Markdown Extension (#22421)
#18095 Keybindings Editor - Do not navigate by Enter from search box
#18095 Keybindings editor - Down arrow to navigate from search to list
#18095 Keybindings editor - Register keybinding for remove action - Make other actions as just keybinding actions
#18095 Keybindings editor - Define keybinding action with keyboard shortcut - Search keybindings action with keyboard shortcut
update node-debug
[theming] Support late themingRegistrations, css participation only through themingRegistry
#18095 Keybindings editor - Open default keybindings while opening keybindings file like before
#18095 Keybindings Editor - Use List widget to render keybindings
[themes] migrate terminal colors to new APIs
Hide hint whenever data is sent to terminal
Implemented transifex push and pull for translations together with json->xlf->json parsing.
fix test failure
remove unused code
debug: do not dispose of internal module models on session end
less code to care about for #18350
workbench.tips.enabled
Disable ripgrep test for now since it's breaking on linux
Check if there are more characters on a line after a "configurations": [, if yes enter a newline
make quickSuggest-setting differentiate between comment, string, and other, #9504
revert wordBasedSuggestions-settings to boolean
No keybindings in menu when running with Brazilian Portuguese layout (fixes #22399)
#18095 clean up - remove unused files
#18095 Move keybinding editor contributions to preferences - Reuse define keybindings widget
Cannot read property 'dark' of null in colorRegistry
Revert unintended change to solarized light selection color
Compute all mappings up front
fix bad assert
theme - add Color.transparent
themes - use rgba in defaults to preserve knowledge
theming - panel border top
add missing svg
follow up :lipstick: on #12448
Disable rg integration test for now (travis oddity or linux binary problem?)
Enable gitignore support by default
Bump vscode-ripgrep (removes broken dts)
Bump node-debug2
üíÑ
Run search integration tests against ripgrep
Windows ripgrep fixes
#18095 Implement first cut of keybindings customisation editor
Add search.useRipgrep to turn on ripgrep searching, and restore original search code. Should work exactly the same when !useRipgrep.
Set max filesize, fix off by 1
Add safe fallback if detection somehow fails
Improve prompt
Return single items
Disable navigation in webview
Ripgrep search
always use 0 as unknown keycode
Add 'url' to attach config - (workaround for chrome-debug bug)
null guard
:lipstick:
Diff highlighs for Abyss theme
solarized light: bring back diff color rules #22672
themes - status bar background color
repl: set the filterText correctly when computing suggestions in repl
themes - avoid extra listener from search viewlet
use correct theme
debug: aslo invalitdate variable children cache on set variable
debug: cache children, helps with REPL which does a lot of tree refresh
themeservice in all components
less use of monaco-editor-background
fixes #22609
fix styles
move themeservice into shell
workbench: move ThemeService creation ahead of UI services
themeservice: remove constructor dependency on IConfigurationEditingService
cleanup
more tests
themeservice: remove IFileService dependency
wip
Include usr\bin\bash.exe for git bash
Remove random semi-colon
Start of shell selection picker
bump node-debug2
Support IShellLaunchConfig.initialText
Bump vscode-ripgrep
:hammer: create IContext
fixes #22608
fixes #22605
debug: allow PresentationHint to change during a debug session
Add NativeResolvedKeybinding & tests
Handle combining accents in keyboardMapper
Eliminate KeyCombo
A keybinding can be triggered by multiple HardwareKeypresses
More keyboardMapper cases & tests
fix compile error
Allow a stack frame with no source that has a presentationHint
:zap: list: fix list sorting to use numeric sorting
:memo: list: docs
list: only touch the absolute necessary rows, when working with traits
debug: polish multiple breakpoints glyph context menu
adding theme.isDefault, fix editorSelectionHighlightColor
debug: move saveAll and reloadConfiguration to the correct method
theming: first cut get rid of monaco-editor-background
debug: introduce debugState context key
fix #22604
Formatted code using tsfmt
debug: do not send empty string to adapter for evalute on hover
DAP: add presentationHint attribute to StackFrame
debug: emit state on onDidChangeState event
Deprecate old watchedTask* properties
Reuse schemas defined in problemMatcher.ts
panel: polish restore label
panel toggle maximized action polish tooltip
fix compile error
Polish affordance to maximize panel
fix #6772
fix  #22349
fix #17426
[themes] api polish, split editor colors
[themes] color by name
tweak setting, update defaut to only suggest outside of comments and strings, #9504
Bump node-debug2
Add navigateAcrossEditorGroup and remove unused fields
Change navigation actions to move between editor groups
Bump vscode-ripgrep
Add vscode-ripgrep as a dependency
Clarify comment
Support terminal shell args as string
update node-debug
Uplevel node-pty@0.6.3
Add backwards search to preferences view
Introduce keyboardMapper
shell/workbench css cleanup
open editors: always refresh the whole group not just the element
fix #22527
Better column indicator icon
File gets closed when a parent folder is renamed to different casing (fixes #22545)
list: first steps of multi select
Edit breakpoint conditions with multiple breakpoint on same line
workbench - more CSS cleanup
Adding check of full folder name instead of suffix
workbench - more css shuffling
:lipstick: improve unfocused list styles
:bug: improve git commit error reporting
tslint
fix #22453
Allow custom keypresses to NormalizedKeybindingItem
:bug: list keyboard context menu events
:pencil2: fix nls key
:art: improve list context menu event
Eliminate KeybindingLabels
:bug: fix intellisense focus color
make light bulb only show on one line
Improved behaviour of dealing with deleted files (for #11642) (#22506)
Change label for navigating between views
Add test for cycle arguments in editorStacksModel
update node-debug
Temporary fix for wide terminal layout breaking on Windows
Added missing monaco.d.ts
Addresses #14221 by reading wordPattern from the language-configuration.json
Prevent unnecessary switchings of active editor or group in JoinTwoGroupsAction
Add option bag IMoveOptions for move editor methods
Rename JoinEditorsAction to JoinTwoGroupsAction with code refactoring
Allow inactive option when moving editors across groups
Underline terminal links only when ctrl is held
Pick up new c/c++ grammar fixes #22339 (#22358)
new theming API fixes (fixes #22361)
FIx abyss theme
label providers
Adopt PrintableKeypress in HTML label provider
Introduce PrintableKeypress
Add tests for KeybindingLabels
Fully convert message to tooltip on hover
Move keybinding reading out of keybindingLabel
debug: only show debug breakpoint hint decoration and react on clicks when glyph margin is empty of non debug decoraionts
debug: adopt description
:lipstick:
use decoration for light bulb, #17540
update debug protocol
do not automatically pop up devtools when running tests
debug: bring together all ways to start debugging
debug: restart process action must have a process
:bug: git: don't push on sync if unnecessary
Implement join editors command
Consistent usage of Map in KeybindingResolver
Remove chords map from KeybindingResolver
Move KeybindingIO code to abstractKeybindingService
Add null check to TerminalPanel.focus
Extract KeybindingIO to its own file
Extract NormalizedKeybindingItem to its own file
KeybindingResolver works with keypresses
themes - more workbench css theme cleanup
Initialize pty process with correct dimensions when term instance is hidden
theming: clean up statusbar colors a bit
:bug: exclude extensions from git menu actions
debug: remove illogical distinct call to get only one bp per line before sending
debug: simplify css since top stack frame icon is same for light and dark theme
fix #21046
KeybindingResolver: hold on to NormalizedKeybindingItem
Contain bubbling information in keybindingResolver
:sparkles: handle proxy authentication
theme: registerThemingParticipant to return IDisposable
Let KeybindingResolver work with NormalizedKeybindingItem
debug: add data if launchJson exists on debug start
color defaults API
:bug: fix list styles in dark theme
Sort default keybindings in keybindingsRegistry
:lipstick: list: blur styles for selected rows
Remove unused TS extension constants
Add timeout for jsdoc completion
Update PHP snippits
Add NavigationActions to main.contribution.ts
Add NavigateDownAction implementation
Add NavigateUpAction implementation
Add NavigateRightAction implementation
Add NavigateLeftAction implementation
Change space to pass Hygiene
IThemeService in platform, rename old service to IWorkbenchThemeService
fix tests for tokenize line to html
Work towards hover tooltips
Uplevel xterm.js
Make messages consistent with markdown link hover
:fire: remove saveLastScrollTimeOnClassName
:fire: list: remove use of saveLastScrollTimeOnClassName
:fire: tree: remove use of saveLastScrollTimeOnClassName
:pencil2: git: use discard instead of clean
Roll data dir into extensions dir
[themes] convert default themes to new format
add option to toRGBAHex to omit A if not needed
Keep scroll position stable when closing a tab in the tab well (fixes #13001)
Focus is not restored to editor when closing an inactive tab (fixes #22292)
fix #21258
Move KeybindingLabels up to /platform/
Introduce and adopt IKeybindingService.lookupKeybinding
fix linux build better
Remove IKeybindingService.getLabelFor
use higher timeout for 'Finds a free port (no timeout)'
disable failing tests
don't yet run tests in travis/appveyor
Remove IKeybindingService.getElectronAcceleratorFor
Remove IKeybindingService.getHTMLLabelFor
:lipstick: hide IMenuRegistry#commands
Remove IKeybindingService.getAriaLabelFor
Introduce ResolvedKeybinding
implement settings proposal, #9504
Reduce usage of BinaryKeybindings
Reduce usage of BinaryKeybindings
:bug: layout scmviewlet when inputbox height changes
:bug: disposing reference should never happen twice
debt - resource input should not dispose on model dispose
Keybinding changes take a few seconds to take effect (fixes #22240)
Add abstract class BaseNavigationAction
Relax release notes style csp
TypeScript should use double quotes for string. (#22255)
add default value for debugServer attribute
update node-debug
[theme] color key update
[theme] conversion script
[theme] add color theme schema
Update mouse pointer style while DND
Revert "Update test (#22166)"
Send machineId to main process (fixes #22169)
env variables are not passed to extension host in debug mode (fixes #22233)
debug: only one evaluate on new watch expression
VSCode default language extensions override custom language extensions (fixes #20074)
don't warn when our extension use proposed api
debug: save all files every time a new process is created
Add "userInstalled" property for mime associations (for #20074)
:bug: mkdirp before git.clone
Use a bulk model content changed listener in the cursor (#21434)
Add faster path for a large replaceAll (#21434)
Changing setting programmatically can open settings (fixes #22229)
debug: offer to open launch.json in 'type not supported' message
:bug: listen on workspace change, when no git repo is init
:bug: fix disposables push with anyEvent
:bug: fixes #22059
debug: open deemphesize sources. Also keep track of the same instance of a source object in the map
Add a faster code path for searching simple strings (#21434)
:bug: open file when git resource isnt there should work
fixes #18675
debug: deemphesizeSource no longer needed in process
check token type, run with default config, #9504
word-based completion item provider gets its own class, #9504
Use a bulk model content change event listener (#21434)
fix theming test failure
All preceding characters (including whitespace) are ignored in the pattern that checks for the deprecated style.
Preceding whitespace is now ignored.
debug: save all untitled non dirty files before debug start
Rename hideOverviewRulerBorder to overviewRulerBorder
debug: do not add column to a breakpoint after user edited the file
make profiles more friendly when running out of dev
ISuggestSupport need full IModel to be able to access tokens, prep for #9504
debug: sources should be a map of uri string to source
debug: only save current file if dirty when starting to debug
fix #17246
:lipstick: jumplist
explorer: bring back missing cmd+down command for opening
better support nested lists for markdown scroll sync
Add ending marker for markdown scrollsync
Hint cmd for Mac
Allow inline styles in markdown preview
update node-debug
:lipstick:
Move terminalWidgetManager to browser/
Add animations, build out widget manager
Follow up to PR #22021 to respond to feedback
Pull terminal message code into a widget manager
use specific origin for postMessage in webview
Update test (#22166)
Rename common.machineId in main process (#22168)
Remove a lot of duplication and simplify config helper further
Simplify terminal config
Clean up terminal config helper
Add confirmOnExit terminal setting
debug: install debuggers sort by install count
disableExtension during API tests
adopt api-tests to new match logic, #21886
update doc for vscode.ts/match, #21886
make score always return a number as spec'd, #21886
DocumentSelector matches on file and untitled only unless scheme is given, #21886
debug: introduce map for sources, remove reference from source uri in workbench
:zap: spawn shared process after first workbench window
:zap: shell should wait for shared process to be up and running
Use patched fs (fixes #22019)
add 'source' to SourceArguments
:bug: text model resolver service should not cache errors
:lipstick:
adding theming registry
User settings reset/lost on upgrade. fixes #21676
debug: simplify internal uri schema
debug: do not use 'internal' for inMemory sources
:pencil2: update electron ProxyConfig type
:bug: catch windows going down
Add option to always reuse open editors (#21815)
:bug: use `pipe` for stdin when getting the user shell env
:bug: linux BrowserWindow don't inherit env
debug: fix type when executing add configurations command
:fire: remove unused themeing for shared process
:lipstick: remove unused property
Formatting issue
The show previous search term now also adds search term to history when not present
Open window on first monitor upon first launch (fixes #21990)
Add ability to open untitled document with initial content (#22021)
Use Gulp To Generate Markdown Langauge Includes (#22117)
Don't remove TS version info when clicking in the debug or output panel  fixes #16478
Collapse replace box on cmd+f, same as search viewlet - see #9513
node-debug2@1.11.2
Add Specific No Result Found Messages for Implementations and Type Definitions (#22112)
Save All keybinding for Windows (fixes #21937)
node-debug2@1.11.1
Split common parts of terminal service out
Add terminal kill confirmation message when exiting
allow copy and paste in drag and drop #22094
use uuid instead of randomBytes, #22086
zen: do not show tabs on zen mode exit
:lipstick:
fix #21484
build build/lib folder with latest
MainThreadDocumentsAndEditors.test don't make it worse...
fixed typo in jsdoc of function tail
try larger timeout for huge model w editor test
#19152 fix test case [windows]
return of the 3mins rule, fixes #21709
:bug: closing shared process window crashes on windows
tests for orphaned file models
:bug: fix electron-main request service to use proper protocol
:bug: hide shared process window on startup
:bug: only dispose shared process on last window close on non macos
Add an option to disable closing open files that are removed from the directory (#21962)
:sparkles: command to toggle shared process
fix build
update node-debug
Auto save triggers save conflict error very easily (fixes #22050)
Shortcut key is displayed incorrectly (fixes #21891)
Navigate-back does not work for "Go to definition" < 5 lines (fixes #21922)
Only call setJumpList() after first window is opening (fixes #21963)
:lipstick:
improved auto save (for #21948)
:lipstick:
Clean up webview click handler
Have appveyor badge display master branch status
Exclude CVS directories
Add cycle argument to  IStacksModelChangeEvent
Start terminal click hinting
Uplevel xterm.js
Properly initialize xterm link handler
Wrap raw terminal link handler
Use new xterm.js API
Uplevel xterm.js
Run gulp watch
Only show implementations code lens on top level interface
Add Enhanced Security Settings to Markdown Preview
Show Reinstall VSCode Error Message when our Bundled tsserver.js is Missing (#21690)
Simplify usage of ViewLayer
fixes #21884
workbench: getTabOptions should always return the correct state
fix build
hide shared process window
kill shared process when last window goes away
Use directly the RenderingContext
configurationResolverService: do not use cascading replaces
disambiguate zero result from file collator
fix tree bug
Simplify viewport data
Replace remaining usages of VisibleRange with HorizontalRange
Reduce usage of VisibleRange.top
Move LayoutProvider to /common/
fixes #21894
debug: just call 'saveAll' action
Introduced a better solution for the problem
[html] update service for #21717
save if dirty label do not use elipses
fix build
hide shared process window
Used tslint to format
Adjusted formatting
use electron net for update checks
#19685 Revert changes in Extension Description - Revert changes to id in Ext description. No lowering of name. - Implement an equal function to check equality of extensions - Use above function to check the equality with extension description
more logging for #13665
update electron.d.ts to 1.4.6
Clarify file names
Group all renderViewLine tests together
Make forced tokenization explicit
Add & adopt forceTokenization
Explicit inaccurateTokensAcceptable in getLineTokens
shared process: use xhr request service
fix shared process window startup
editorInput.getTitle() for #16623
ViewLineChanged -> ViewLinesChanged
Simplify model creation args
#19685 Adopt getExtension by id to be case insensitive
proposal to fix issue 21600
node-debug2@1.11.0
Undo changes to monaco.d
Add typescript and javascript format.insertSpaceBeforeFunctionParenthesis (#21712)
Center panel header hit boxes
Make custom terminal links higher priority than generic local link
Uplevel xterm.js
introduce SaveIfDirtyAction
Remove ITextModel.toRawText()
Clean up IRawText usage
Extract more code to textSource.ts
Move ITextSource2 out of editorCommon
Reduce usage of IRawText (send only what's needed around)
fix bad import
fix types, build
debug: do not allow watch expression and hover evaluation while not stopped
Output disposal update input of output panel
debug.hideActionBar
debug menu: open and add configurations
actually turn off suggestion to profile...
dirty diff doesn't clear on commit
throw error instead of null string for missing release notes
update distro
debt - dispose model reference
Install apt repository as http, not https
Use common TS install for both the TS Extension and Html Extension (#21578)
Relax Language First Line Match (#21586)
Move webview loaded event to fix extensions using previewHTML
#19685 Workaround to sync with gallery - Use uuids along with names to sync with gallery until market place team fixes the query issue
#19685 Use lower case id - In Extension description in Extension host - In Extension enablement service - Rename identifier to id in IExtension
#19685: Scanning local extensions - Adopt to gallery extension id (lowercase) while scanning local extensions in Extension management and Extension host
#19685 Use uuid to query local extensions from gallery
update node-debug
Rename SearchWorkerManager -> SearchWorker
Implement terminal link validation
Uplevel xterm.js
run shared process in a browser window
use uri query to store the reference number
debug menu
remove pii from url-property
turn suggesting to profile for now
add v8-profiler to node module clean up
rename flag to `prof-startup`
use nicer package dependency
create issue and show profile files
add logic to suggest to profile
add performance-startup-profile flag
add IWindowService#relaunch
monaco-editor-core: 0.8.2
Expose missing standalone editor API
git: use different uris for quick diff
bring back extension loading indicator
fix tests
add more logging for #13665
fixes #21596
use etag to decide if a file model has changed when restoring view state
fixes #21560
format
fix: touching a file needs to update its model metadata
fixes #21576
customDebugRequest: return response to caller
create `_git.clone` command
Refactor stream.ts
Refactor mime.ts
Refactor encoding.ts
Toggle Word Wrap can unwrap also minified files (#21552)
reload typescript node module only at build time
:lipstick:
File does not reload in editor when quickly changed externally after making modifications (fixes #12077)
simplify FileEditorTracker
FileService.resolveContent() should check for not modified since as first thing (fixes #21604)
File models get disposed when contents change on disk (fixes #20901)
Change class name and Action ID
Sw9tch Objective-C to Use the Atom Objective C Language
Add ForceCloseEditorAction to main.contribution.ts
Implement ForceCloseEditorAction in actions.ts
Declare revert() in interface IEditorInput
Show references on enum values
Prototype of Implementations Code Lens Provider for TypeScript (#20784)
Restore document write
Isolate webview contents better
Open recent folder in a new window with Cmd/Ctrl (fixes #21045)
#19685 Introduce `id` in IGalleryExtension and IExtension (workbench) -  id is pub.name. name in lower case. - use id to match sync installed extension with gallery extension - use id to identify extension while installing and uninstalling - Clean up - Remove IExtensionIdentity - Add util methods to create gallery id and local extension id
#19685 Rename gallery id to uuid
Add telemetry to new git.clone action (fixes #21563)
debug: update breakpoint column as file changes
zen.mode restore should be workspace setting
debug: allow rename on double click enter even if elemnt has children
Try to free memory after TS compilation finishes
Update vscode-textmate (fixes #21310)
use single quotes for imports
debug: null guard
[clojure] update OSSREADME (for #21529)
cannot use object type yet
only apply editor settings that changed (for #21487)
Remove unused parameter
Update tests
Use Atom-Clojure Grammar
Write to a variable in a closure slightly less, to make search a little faster.
Add base url to tsconfig.json (#21327)
Treat podfile as ruby (#21440)
bump version for 1.11
:lipstick: commands
fix mixin
Last active window is not always restored when reopening (fixes #20770)
debug: also select focused process on call stack change fixes #17401
update node-debug (translations)
fixes #21384
reset cached range when markers change, fixes #21060
:lipstick:
[json] support patternErrorMessage for #21384
No longer possible to paste into explorer without selection to duplicate a file (fixes #21469)
Exception in fileActions.ts (fixes #21460)
Add setting to hide overview ruler border
debt - do not call editor.updateOptions() unless options have actually changed
debt - simplify calls to editor.updateOptions()
On macOS sheets appear in the wrong location (fixes #21367)
Change overview ruler border color
Avoid request id collisions in pendingRPCReplies
Add workbench.action.debug.pause to commandsToSkipShell
Don't include [ and ] in local terminal links
OSS
Add workbench.action.focusActiveEditorGroup to commandsToSkipShell
update shrinkwrap for git extension
Telemetry for emmet expansions (#21332)
Do not close zone widget when showing it (#19460)
Better event for keyboardLayout
Use enumDescriptions for editor.wordWrap schema (#21341)
Rename wordWrap settings (#21262)
Update distro version (for vue recommendation)
fixes #21121
Take the type from the process since the debug extension might overwrite it
Rename minimap.renderText to minimap.renderCharacters (#20947)
Explorer commands are overly specific (fixes #21102)
fixes #21297
re-request code action after applying them, fixes #21060
fix regex for command replacment fixes #21297
[markdown] enable wordWrap & disable quickSuggestions
Change behavior of home/end button
Add LineStart, LineEnd to CursorMovePosition
Tidy up.
Allowed wrapping for exception message text.
Merging upstream/master with local branch.
Use ellipsis when token text is large (#20511)
Install while waiting for confirmation (fixes #21077)
Use * in jsdoc comments but don't select the star in the snippet
disable copy with syntax for plain text
Log kb layout
#21214 clairify that only project wide intellisense is being disabled when configure excludes shows
Revert to using any to avoid weird selection behavior for *
Compute scrollWidth when entire file is in viewport
use {*} instead of  in jsdocs
Tweak jsdoc snippet to go to params first
Indicate which keymap is installed (fixes #21076)
quickopen and quickoutline will now show the field icon for field symbols instead of the property icon
Added "Git: Pull (Rebase)" to workspace actions.
Add 4x2 block rendering (#20947)
Use completion item to trigger jsdoc item
update node-debug
Do not force new window when opening file or folder with launch on Unity (fixes #21133)
Make terminal focus by index numbers names align with editor
Uplevel xterm.js
Track status bar item (fixes #21116)
Have the drag event contain a good target
Drop 'quickly' (fixes #21117)
Adding test
debug: fix default repl overwriteBefore
fixes #18751
Update configuration.ts
fixes #19528
Remove duplicate calls to URI.toString()
fix #21177
debug: debounce launch.json decorations
add logging for node.js file watcher
fixes #21154
fix #21272
fixes #21080
fixes #21152
fix #21273
remove mixed indentation, fixes #21173
[json] update service (fixes #21222)
fadeIn/Out editor message widget
fix #21064, also support dismiss on ESC and 3s timeout, move out code to its own file, tweak message
Revert "Made exception message text selectable."
Made exception message text selectable.
Exception widget message to preserve whitespace.
Made exception message text selectable.
Use schema allOf property to get independent error reporting
fix #19287
TypeError: Cannot set property 'enabled' of undefined
fix #21260
fix #21227
fix #21098
find in folder invoked in file should search in parent
fix #21097
fix #21093
fix #21086
fix #21166
ignore file watching in node_modules on windows (for #12042)
node-debug@1.10.18
Add telemetry on outcome of open folder action (fixes #21238)
Adopt ts 2.2.1
Use snippet for default jsdoc
Add telemetry for keymap links (fixes #21224)
Tweak jsdoc completion to allow it to be disabled by disabling snippets and so that it does not match words in the suggestion list
update node-debug
commit changes to monaco.d.ts
Disable minimap in diff & embedded editors
.make dnd target more distinguishable
Have the zoneWidget respect the minimap width
fixes #18654
Use directly lineNumbersDigitCount, ensure view layout gets events before any other view event handler
Revert "fixes #20989"
Revert "fixes #21153"
revert bad changes
git: remove long commit setting
fixes #21153
[json] update service (for #21070)
fixes #21137
Imported debugQuickOpen module to fix #21132.
fixes #20700
Renamed class and quick open handler description.
fixes #20978
fixes #21095
fixes #21009
fixes #21047
zen mode: fix restore - get it from global storage
Option to show project path in title bar (fixes #21002)
scm: enable preview for insiders
Update jsdoc localization key
Allow trigger js doc completion in cases like a/**|
Improve jsdoc label
Dont show js doc completion item when inside text on a line
Don't show jsdoc completion item when insider of words
Remove StyleMutator
Reduce usage of StyleMutator
Use CompletionItem for JsDoc Comment auto fill (#21025)
reveal position when dragging
Tweak overlay contrast (fixes #19419, fixes #19051)
Upgrade telemetry package used by TS and markdown extensions. (#20971)
Don't reject when we have no code actions
fixes #20815. Workaround to not send code actions request if we have no actions
[json] update service
Define packages needed for native-keymap
native-keymap@0.4.0
Escape keybinding labels (fixes #20839)
Add comment on white-list usage
Disable minimap in playground (fixes #20950)
Escape paths (related to #21010)
Add back telemetry on suggestion inserts.
Remove terminal flow control support
Escape paths to fix Microsoft/vscode#20907
Copy rpm to location expected by distro
Reduce usage of StyleMutator
EditorScrollbar is a ViewPart
Don't use scrollbar saveLastScrollTimeOnClassName
Preserved whitespace.
update node-debug
use 1.17 version of debug protocol
Styling amends to exception widget. Allowed multiple classes to be added for zone widget container/arrow.
Reverted widget height to the original way of calculation. Change title font.
add protocol attribute to deprecation message; fixes #20993
restore sorting to how it was before until we fix this properly
Polished exception widget.
fixes #20993
fixes #20943
fix #14107
introduce alternative column syntax for variable replacment
Cleanup (#20671)
Simplify PR #17841
[html] update formatter (fixes #20844)
#20878 add string checks
fixes #20989
Use typed view events from the view model to the view
Consistent view event handler ordering
Consistent naming for view events
Use proper types for all view events
remove console.log
Added column pointer for exception widget.
Add gnupg and apt to depends
statusbar - command, color, tooltip can be undefined or a string
Removed wrongly inherited background on peek/references widgets.
path.dirname is wrong for files in root (fixes #20911)
Doubleclick on debug views (stack, breakpoint) should open pinned and move focus
Added launch configuration listener for debug configs select box.
Newline added.
Tidy up after PR review.
git: give up on using the editor
fix ugly import
use command casing
Debug variable value double click seems broken (fixes #20604)
Removed redundant methods, corrected aria label.
Changed label for the launch action.
[hlsl] fix update script
Clean up terminal LANG variable
comments
upgrade telemetry used by html ext
upgrade telemetry used by json ext
upgrade telemetry used by git ext
Callback param is optional, created in constructor if not passed in
Remove dependency on window.event in ListView
put drag and drop behind an option and turn it off by default
dashed cursor
get rid of cursor style
Trying to fix travis erros on linux and mac
Trying to fix travis erros on linux and mac
Moving logic to inside the _getLangEnvVariable function
FastDomNode is now generic
emit drag event at the very beginning
minor style update
mouse drag/drop should be internal
update comments and remove unnecessary dirty check
make drag event work with scrolling
add css for underline cursor
only render the cursor whenever necessary
distingush mouse down/up and mosue drag/drop
remove unnecessary events in view controller
remove unnecessary code change to keep diff minimal
get rid of multi cursor by drawing a new content widget
use some closure data to avoid blocking click-on-selection
drag and drop first version with multi cursor
git: use ignoreFocusOut more
git: telemetry events
update node-debug
filter on word, only adjust overrideBefore on other textual content, #20764
fix tests for #20610
debug: do not throw 'Canceled' errors in users face
fix compile error
wip
debug: fix initialize state mess by going into initialize a tad later
debug: propagate error properly
Changing the logic to other function since the first one could not be called if no locale passed to create terminal
git: clone command
use user-facing language id for snippet completions, #20764
make ISuggestSupport#triggerCharacters optional
make SnippetRegistry a service, move things to workbench layer, preps #20764
remove vue from html associations (recommend vetur)
fix some command palette sorting issues (#20928, #20888, #20553)
debt - rename of insert snippet
debt - move tabCompletion to workbench
Added separate action for the workbench for launching different debug configs.
git: commit template
git: askpass support
Added debug keyword for quick open menu.
Rename editor.highlightMatchingBrackets to editor.matchBrackets
Allow to pin an editor when saving explicitly (fixes #20466)
[shaderlab/hlsl] Add update scripts, minor fixes to OSSREADME (for #20129)
nls comments
wait 1min for ext host startup, #20168
Dispose queue before deleting it
fix #20497
Delete queue when finished, add comment to ioOperationQueues
fix #20647
:lipstick:
test jsonEdit with null (for #20714)
git: recommend 2.0
tree: handle Ctrl+N/P by default
:lipstick:
avoid extra commands for opening in explorer (for #4557)
Install and rating sort is now DESC by default
Apply js completion to react files
Bump ts version
Uplevel xterm.js
Uplevel xterm.js
Remove rpm repo creation code
update node-debug
Added new actions to commandsToSkipShell
Enable Arbitrarily Sorting Installed Extensions
terminals start from 1
Revert settings
Added FocusTerminalByNumberAction
Trying if it works. Blocked by compilation errors
Update OSSREADME files to point to source repository for HLSL and ShaderLab grammars
Localizable Welcome page (fixes #19167)
Update to latest C# TextMate grammar
git: revert selected ranges
Handle Some Disposable Registrations in TS Extension (#20775)
[html] update servers & clients
[html] add tests to test.sh
[html] intellisense for dom types missing
Uplevel xterm.js
Some cleanup in view events
Move some of the view events to viewEvents.ts
[json] update server & client
update node-debug
Add telemetry data for auto detecting usage
git: fix range staging timing issues
git: unstage ranges
git: pick index/HEAD ref later in the game
Emit fabricated position/selection change events when the line mapping changes
git: stage ranges
[theme] update seti to 1.6.1
debug: restart attach to extension host
No implicit any
Replace ParsedColor with RGBA
Reduce usage of ParsedColor
Adopt new ViewLineToken, use model coordinates consistently
Code sanitisation
Amended styling for exception widget.
git: do not throttle git show call
git: cleanup
Adopt Color in tokenization registry map
Sturdier color parsing
RGBA: store alpha as an integer in [0-255]
Prepare Color for use in critical perf code
Clarify tokenization registry API
Extract TokenizationRegistry to its own file
Move forceCopyWithSyntaxHighlighting to textAreaHandler
debug: do not outline in high contrast theme
fixes #20794
preserve zen mode per global so it is in sync with full screen
change no definition label
Added correct layouting.
Moved static CSS code from zone widgets TS to corresponding CSS files.
Only install repo and key if they don't already exist
Uplevel xterm.js
Install apt key and source for repository in deb postinst
Wording
Offer popular keymaps inline for installation (fixes #20782)
Reorder Quick Links (fixes #20760)
Small references code lens cleanup
Small formatting cleanup
Small formatting cleanup
Remove duplicate TS registrations
remove copy with syntax from context menu
Resolve post-merge compilation error
Vertical scrollbar is opaque when rendering minimap
Render minimap to the left of the scrollbar
Pick up new ts version
[json] remove project.json support (for OmniSharp/omnisharp-vscode#1236)
Update distro
Set pty process dimensions on terminal start
Add editor.minimap to settings schema
font size and line height should end with px
apply font info for copy with syntax highlighting
Soften colors for light backgrounds
Better handling of characters outside the basic ASCII range
Set pty size when terminal is reused
Reposition interactive playground link (fixes #20760)
Revert "Add Status Bar Item for JSConfig/TSConfig" (#20759)
Fire onTitleChanged when terminal is reused
Handle mouse down on minimap
Tag editor action telemetry in walk-through (fixes #19888)
Improve error message when task are run in terminal
Code clean up on how to detect new terminal runner
address comments
Remove unnecessary assertions
api: expose vscode.computeDiff
update node-debug
debug: use top stack frame column inline decoration
Avoided using separate boolean for exception widget visibility.
try unsetting env var
fix compile error
git: better scoped git behaviour
git: scoped git repositories
fixes #20736
run electron tests from appveyor
debug: move stop process inside debug service
debug: fix initialzing state
use constant app data when debugging
Reuse previous rendered lines in minimap
add electron tests to travis config
git: remove TODO
add test script (win)
add test script
jsonEdit: don't complain when deleting a non existing property
add `run` option
Add support for dependent tasks
Keep track of painted minimap lines
run tests in renderer
Keep track of last rendered data
Align data types
[theme] Migrate settings in sequence to avoid flickering
[theme] remove theme user setting when selecting default
[theme] remove high contrast theme setting from index.html (must be done in renderer)
handle multiple page query arguments
Read minimap render data in bulk
git: init icon
fixes #20688
output: allow to dispose output channels
output: receivedOutput is a map
debug: bring back old current glyph indicator
Added simple working exception widget.
git: hide/show commands based on state
git: wrap up nogit state
fix #20686
test: fix launch paths
Prime postinst for apt repo
Update distro
Update distro
Open parent folder with `.vscode` when opening files from CLI or desktop (fixes #20671)
Only show search count if there are results
node-debug2@1.10
Small markdown code cleanup
Tweak search result focus debounce time
Autofill for JSDocs (#20625)
Add Status Bar Item for JSConfig/TSConfig (#20571)
Addressed comments
menu - use editor context if avialable, fallback to global
Some cleanup in minimap
Reduce minimap scroll tremor
wip: git init
configuration resolver service tests: use mock line number
Ship directly grayscale minimap font
git: cleanup
Remove MinimapCharRenderer
[themes] intellisense on theme settings
[perl] typo in grammar
[theme] store baseTheme in storage
[perl] update grammar
themes as settings
Remove tremor in minimap slider height
add a clientID 'vscode' to the DAP InitializeRequest
menu - move custom label logic to where it is used
menu - move command palette special into registry
debt - remove `getCommandActions` as there is now an explicit command palette menu
debt - move IMenu closing to its service
debug: color polish
Reinstate EditorLayoutProvider tests
fix list open
list: refactor
Updated test suite with test for the lineNumber config variable.
debug: do not open deemphesized sources in editor
update debug protocol
update node-debug (returning correct length in completionProposalRequest)
Have the minimap scroll such that its slider aligns (center) with the scrollbar slider
update node-debug
Added lineNumber to common pre-defined variables for tasks.json/launch.json.
debug: breakpoint decoration has no range, only use the margin decoration
Handle cases where entire file fits in the minimap
show a message when no definition/implementation etc could be found
fixes #20344
Minimap is scrolling, render minimap slider
Add right margin in the Exception badge in the call stack
Reverted HC theme back to original solution with red outline for column selection.
fixes #20612
Let FastDomNode have a generic
Use a per-resource queue
Expose terminal link matcher on ITerminalInstance
Simplify terminal cursor blink styles
Only fire ITerminalInstance.onDisposed once per instance
Use same slugify logic for editor links as well
markdown-it-named-header custom slugify for non-latin characters (#20628)
correct boundary for embedded languages in HTML
Line and column highlight colours amended after review for different themes.
Simplify MinimapTokensColorTracker
Save a couple of timeouts
list: cleanup trait preserving splice
scm: use list persistence
list: support trait persistence
Ensure ViewLineToken.endIndex is <= lineLength
Finish ViewLineToken2 adoption
Also cache StandardTokenType when matching a token
Adopt ViewLineToken2
Avoid deopts caused by writing outside of typed array bounds
debug: use warning as severity to get the orange color for messages coming from the debug extension
debug: move clearing of debug repl out of createProcess
debug: add column breakpoint action in context menu
Amended current pointer background colour to the same as the line highlight.
Introduce minimap editor option, cleanup in minimap code
Colour for column selection in debugging mode added to high contrast theme. Amended yellow frame column selection to stand out in light themes.
shorter IPC paths
list: cleanup
Make more actions commands to ease keyboard shortcut assignment
Uplevel node-pty@0.6.2
Uplevel xterm.js
Uplevel xterm.js
Add telemetry for clone action (fixes #20570)
Hopefully fix #20410
Make search viewlet message shorter - takes up too much vertical space as is. Also change the string to make it less likely to wrap and take another line.
update node-debug
update node-debug
Activate ts when workspace contains js or ts config to get intellisense for these config files
Add Command to Go To / Create project configuration for an active js or ts file (#20362)
Take pixelRatio into account when layouting the minimap
F -> f
Faster minimap character rendering
git: renames
debug: respect StartSessionResult
Relax color parsing
Interpret tabs correctly when rendering minimap
Render minimap with colors
support commandPalette menu
Render a minimap
localization clarification
update node-debug
Make this change Windows Specific
IE and Edge have trouble with setting html content in clipboard
Path already has a colon
URI type import fix
Cleanup a bit
add comment
Support windows links
copy with syntax highlighting is not possible in IE
65536 is a good limit
Add regex tests
Support windows link regex
Pull link handling code into object owned by service
Prevent terminal link matcher on Windows for now
Add a separate command for copying text with syntax highlighting
Get web and relative paths working in terminal
debug: get rid of session.configuration.type
fix build error
update node-debug
store ipc handle in user data, fixes #13561
First version to support keybindings for tasks
Support debug console output from extensions
Debug: Convert hardcoded tree actions to configurable commands
protect against missing or empty args; fixes #19425
debug: read the configuration again on restart
adopt list service for quick open (for #11517)
list service for repl (for #11517)
adopt list service for debug (for #11517)
adopt list service for search (for #11517)
Implement #19526
debt - less uuid usage, prep for moving to /node/-layer
debt - remove unused code
adopt list service for problems view (for #11517)
static?!
adopt list service for extension dependencies (for #11517)
adopt list service for debug hover (for #11517)
[fsharp] update grammar
fix  #19828
clarify translation
clarify strings
find in folder command (for #4557)
:lipstick: themeservice
"Open Recent" selects an item out of the viewport after filtering (fixes #20216)
Text clipping end in tabs when file is in preview mode (italic font) (fixes #20182)
fix #20312
fix #20308
experience -> page (#20318)
Small code cleanup
Pick up TS 2.2 2/9 insiders build (#20363)
Set STABLE machineId in shared process (#20349)
use inline styles
Send script kind based on languageId for js and ts files (#20351)
Set machineId in shared process (fixes #20349)
theme service moved to workbench
update node-debug
git: editor actions
update node-debug
better fix for #20306
#19733 Update npm shrink-wrap for exetension-editing extension
fix #20306
Correct the pattern while registering package.json
debug: preserve size of debug views
[rust] Update rust grammar (for #19574)
return `undefined` from detached editor, #18797
#19733 Implement intellisense for language specific editor settings in configuration defaults
array destructure ftw
list service handles all context keys
"paste" as command for explorer (for #4557)
git: cleanup command center
fix #19562
remove warnings you cannot prevent, #18797
explorer copy (for #4557)
better way of finding out active list (for #11517)
debug: better view default sizes
appveyor
Add err handling for emmet and update commit hash (#20267)
debug: make sure to not accidently turn old breakpoints into column breakpoints
:lipstick:
DEL key doesn't work when renaming a file (fixes #20195)
Missing dash separating filename from Code application title (fixes #20236)
listservice for treeexplorer
copy rendered html to clipboard
#19733 Default configurations - Define a new extension point `configurationDefaults` for contributing default language specific editor settings
Pick up TS 2.1.6
update node-debug
Add @types to monaco dev deps
#19149 Implement intellisense for language specific editor configurations in settings editor
fix explorer commands no longer working
focusFirst/focusLast for list
:lipstick: command ids
more list/tree commands (for #11517)
first cut commands for up/down/left/right (for #11517)
fix build
debug: introduce debug type context
debug: null guard
debug: column breakpoint action use shift shortcut
output: always auto reveal last line unless channel is locked
git: undo command
git: commit commands
git: pull, push, sync commands
tree/list: add events for DOM focus/blur
update node-debug
debug: always show column with a darker yellow
debug: polish breakpoint columns
scm: fix duplicate title actions
debug: no column sent ignore the breakpoint column response from the adapter
debug: column breakpoint decorations
debug: special action for column breakpoints
build: failsafe
build: dump log to .build/log
adopt isBackground
Trigger willSave even if file is not dirty to support code formatters (fixes #19723)
fix #20049
Use @types a few more places (#20159)
Use @types for a few d.ts files in src (#20157)
Revert "Use types tsconfig option where possible"
Added handling for suggestion details view.
Added focusFirst / focusLast methods for IntelliSense dropdown. Support for details view/state is yet to come.
Extract keymaps code from ExtensionsWorkbenchService (fixes #16493)
Use types tsconfig option where possible
Use reference @types/node in extensions
Handle root, network path or disk drive letter
fix language intellisense for #20049
Hide watermark based on editor part size (fixes #16130)
Disable Paren Commit Item When useCodeSnippetsOnMethodSuggest is Enabled (#20096)
Stop TS From Spamming Crash Messages (#20081)
#19733 Validate default settings to be overridden for a language
#19733 Implement default language specific editor settings - Extend configuration extension to override default settings for a language - Update configuration registry with overrides - Adopt Defaults config model to read default overrides - Tests
#19733: Expose editor configurations as a separate schema
Use OS path separator when matching glob (fixes #16090)
same solution on all OS (for #14622)
Use patched emmet to support svg and orphaned quote bug (#19655)
Open containing window (fixes #15654)
Copy `code-icon.svg` to near where it is used (fixes #19541)
move more into config-editing extension (for #20049)
Remove invalid debug target (fixes #19908)
Implement HLSL syntax highlighting
move window.title config helper out to extension (for #20049)
git: enabled config
streamline commit editor
scm: pimp up commit editor
cleanup
git: confirmSync setting
fixes #20078
fixes #20102
[coffeescript] remove unused grammar
fix win tests on tfs
Improve Markdown Preview Code Block Coloring
Updated yaml grammar
Enable Markdown Scroll Syncronization for Untitled Files (#20072)
Revert 1c750933131dace0aad92a212209a8ca740f8e19
Bind Save All only on Mac (fixes #14818)
Clean up (fixes #19569)
Chord keybindings do not show up in menus (fixes #14622) (#20059)
debug: Copy Stack Trace -> Copy Call Stack
Don't open Untitled file when Welcome page is opened (fixes #19689)
Only filter snippets by user-facing languages, #19954
Allow for partial line search scopes
Do not show schema for untitled files #19627
window title: convert variable format from $() to ${}
git: always run in english locale
fixes #18790
fixes #20029
git: show first non empty message error
Tests for #19773
add confirmation to revert lines
large timeout before storing timers
prof - better timer file names
tweak perf data
Allow to configure title bar information (fixes #1723) (#19932)
Mac: file events are not reported when using workspace path with different casing (fixes #1426) (#19918)
:lipstick:
Resizes the tab size when dirty file state changes
Reduce IViewLayout usage
Establish IViewLayout shape
Fuzzy Search in Cmd palette should rank results with closer search terms higher (fixes #14727)
git clone nvm with --depth 1, to make clone faster
Align CoordinatesConverter methods
Introduce CoordinatesConverter
Use EditorScrollbar directly fomr the view
Some typo fixes
Introduce and adopt ScrollState
ScrollManager gets passed in the Scrollable
Remove VerticalObjects
node-debug2@1.9.13 (fixes #19897)
Implement workbench.action.terminal.runActiveFile
Have terminal runSelectedText run current line with no selection
fix flexbox height issue for parameter hint on IE and Safari
Check for root folder (fixes #19572)
Much simpler fix for #19743
fix: dispose the this.documentListener
Don't wrap title (fixes #19489)
Add openRecentFolder telemetry (fixes #19865)
scm: hide input box model from extension host
#19627 Distinguish labels in Problmes view - Do not use scheme for files - Use scheme for non files
include commit in prof timers
force some launch configs to use legacy node debugger
perf - add flag to store timer to disk and then quit
Menu Bar Resets to Visible When Reopening Window (fixes #19777)
weird backticks
output scroll lock
prevent editor open when control is not ready yet
shorter command ids (for #4557)
Only enable flow control on bash for now
Disable experimental api in ts extension
Remove unused webview methods
Put Command Palette under labels (fixes #19476)
Handle root in Recent (fixes #19448)
Cleanup welcomeOverlay.ts (fixes #19097)
Consolidate under single 'welcome' folder (fixes #19065)
Split out some functions in ts document symbol provider
update node-debug (add 'protocol' attribute)
Add Type Definition Provider API (#19699)
Show message when writing configuration fails (fixes #18923)
Update OSS icon
Improve arguments example (fixes #18903)
Apply editor config (fixes #18898)
Small cleanup to ts extension
#19719 - fixed typos in TypeScript extension settings keyword descriptions (#19720)
debug: minor polish with return undefined
debug: null guard on session end
No need for a lineNumber attribute on view lines
Create char offset in FastRenderedViewLine only when needed
View improvements:  - add a prefix sum cache that is warmed up for the viewport  - improve some of the position mapping/validation code
Resolve centered line in viewport when the frame is painted
Don't hold onto the rendered html in viewLine
refactor parseMessageArguments
debug: column breakpoints
update distro
uglify is ugly!
fix check in parseMessageArguments
use boolean instead of number
getNodeCachedData ignores all errors, #19662
remove VSCODE_PERFORMANCE thing
fix wrong opening of folder in editor when creating
add comments for new interfaces
implement modal message API
Renaming model -> configurationModel
fix npe
fix opening to the side with keyboard
Clean up configuration service and models
context key ids
command ids
reveal in OS command
more commands
debug: focus proces only after recieving intialize response
Preferences editor - pass associated preferences model down to renderers always
Refactor preferences editor - separate renderers from editors
debug: use name to match restarted process as id changes
debug: allow set value on structured variables
update distro
update distro, mix perf when needed
debug hover: no need to heuristicly check the last word of the variable name. Mono debug now returns type as part of type not name
[themes] colorize scss and less varibales in vs themes
[scss] update grammar (atom/language-sass@63b3aa0)
update distro
Another wording change to the PHP executable validation.
do not use Ctrl+Alt keybindings under windows
copy path command in explorer (for #4557)
get rid of electron-browser in parts/files
only support file resources for certain actions in the explorer
Added extra null check in configFileDiagnosticsReceived
Enable no implicit returns in tsconfig.json
Adding explicit returns for remaining instances
Make simplified chinese the default variant for ZH
Remove a few more extension d.ts files that are not needed
Adding more explicit returns
fix #19362, update scroll lock icons
Adding explicit returns
Trigger set variable input onRename, not onEnter
Use @types/node in extensions (#19692)
Fill in LANG language variant when absent
Add zenMode.restore configuraiton
A view line reads all its rendering data in one call
Improve Welcome telemetry
Add no unused local and no unused parameter checks to ts extension
Use shorter pointer to xterm github dependency
Enable process to write to terminal before the panel exists
Uplevel xterm.js
Add no unused paramter option to markdown extension
Preferences editor clean up - Create settings renderer after resolving default settings
Flag errors in TSconfig.json (#19656)
Bump bundled extension ts version to 2.1.5 (#19657)
Remove unneeded d.ts files from extensions (#19653)
Clean up preferences editor
Prefrences editor Clean up: Oraganize preferences renderers and listeners
Add null checks for renderers
debug: before starting debug save all files via workbench command
debug: when more than 1 adapter is interested in a language let the user choose
:lipstick:
Some perf tweaks
first cut of commands for explorer (for #4557)
Use stricter conditions for checking desktop drag end
actions: do not run on right mouse click
fixes #19638
[less] Update less.tmLanguage.json to atom/language-less@9123663 (2017-01-31)
debug: null guard
debug: if variable type is not provided show name on hover
Wording change if php.validate.executablePath points to an invalid executable
fix #19504
Use important for vs-whitespace
Added command for selecting ts version (#19641)
[less] update grammar
clean-up: rename to reflect actual purpose
Small cleanup of markdown extensions.ts
clean-up: tsdk is no longer untrusted
Small wording change for PHP linter confirmation.
Support Fragments for intra document markdown editor links (#19639)
Return mode id not language name
update node-debug
git: checkoutType config
[css] change grammar to atom/language-css
git: countBadge config
git: enableLongCommitWarning config
git: path config
:lipstick:
debug: no folder workspace focus first view on debug viewlet focus
#19511 Define and use ITextSource2 - Wraps processed information from file - Helper methods in TextModel to create RawText
git: add commit toolbar menu item
git: autorefresh config
git config: autofetch
debug: better error handling for wrong compound configuraitons
debug wdiget: reduce x by width of drag handle to reduce jarring
debt - shuffle some things around according to target environments
fix #19496
fix checkout branchs/tags
fixes #19613
debug: always respect passed type when guessing adapter
scm: remove commit method from api
Window opens in fullscreen when window.newWindowDimensions set to inherit or fullscreen (fixes #19628)
Add 'explorerFocus` for keybinding `when` context (fixes #15002)
fixes #19538
fix compareIgnoreCase, #18682
try to avoid allocations in _matchesPrefix, #18682
debt - bye bye DeferredAction
call code action provider on start, fixes #19371
scm: remove commit hack
git: commit
don't strip snippet prefixes, fixes #19449
cancel snippet mode before starting again from the API, #19449
debt - explorerView#onFileOperation() is doing too much
call symbols handler without anything to allow them to return all symbols, fixes #11175
do not show multiple keys in command pallette (for #16770)
[pug] update tests for grammar update
git: improve CommitHandler
Let model builder return ISourceText. Callers use ISourceText instead of IRawText or IRawTextProvider. Model service holds the ownership of IRawText, Creation options and resolved options for model
Scroll with embedded cursors (fixes #18899)
New tsdk flow for 19 (#19602)
Check if new SCM integration is enabled (fixes #18857 and #19337)
Move markdown preview content provider to own file (#19592)
long commit decoration
settings change
extract scm editor
#19511 Adopt to language based settings for model configurations
#19511 Model Builder returns RawTextProvider instead of RawText  - model creation options can now be specified at a later stage
[json] dynamically enable & disable formatter
[rust] update grammar
Remove additional empty lines on edited files
Revert accidental changes to .vscode/settings.json
[ts] grammar update, fix tests
1.9.0 => 1.10.0
paths - get rid of isAbsolute (for #18350)
Close Folder opens a new instance of VS Code instead (fixes #19575)
:lipstick: settings descriptions of enum values
:lipstick: action labels (fixes #19441)
Added pluralization checks to search's replace-all
Typo fix
Update markdown-it version (#19417)
Support In-Document links inside of the markdown editor (#19411)
Use a pseudo-element for outline on terminal
Perform hot exit backup/discard operations in a queue
Use Later instead of Close
Move Interactive Playground to top (fixes #19532)
Create parent folders if they do not exist yet (fixes #19529)
wip: editor as commit box
Add CSS class when icons are shown (fixes #19501)
Do not open Welcome when untitled file is dirty or there are hot-exit backups (fixes #19492)
fixes #19517
monaco-editor-core: 0.8.1
onDidChangeCodeLenses:Event<void>, fixes #19495
debt - remove ISuggestSupport#filter
fix #19493
property type TPromise.as, remove unwanted methods from Promise, #11771
Have an explicit check inside loadDependencies for extension names length
add todo
restore CtrlCmd+P for quick open navigation for now
fix TERMINAL_DEFAULT_FLOW_CONTROL properly
fix broken terminal
Indicate there are no recent folders (fixes #19473)
Uplevel xterm.js and implement flowControl setting
Need a default icon (#18860)
Use VSCode icons (fixes #18860)
Reword ts version switch flow a little
Log filter strings that produced no results
Show warning on first load of workspace with typescript.tsdk setting (#19463)
Make title show at inital window size (fixes #19466)
Vertically align checkbox at bottom (fixes #18879)
node-debug2@1.9.12
Filter first (fixes #19456)
Also filter main scheme (#18897)
Apply shortcut styles to all platforms (fixes #19412)
Work around scrolling from zone widget (fixes #18929)
change custom PHP marker message
add unsupported settings to error message
only check workspace after extensions are loaded
add custom php executable error message
Improve files.hotExit descriptions
Remove unnecessary file
Support workspace relative emmet ext path (#19408)
node-debug2@1.9.11
Explorer refresh not working for folders with same prefix (fixes #19377)
update distro
oss
html: remove @types shrinkwrapping
Show user path if no workspace path exists when editing the php path
git: remove denodeify dependency
remove lodash dependency
quick open keybindings cleanup
No FastRenderedViewLine on Safari (#19222)
Some tweaks for setting migration
Make CSS inlining limit configurable (Microsoft/monaco-editor#336)
Hide Path status bar item if no PHP file is active
FIxes #19436: Add support to edit the php executable path as a non sharable workspace setting
Update ghooks (deprecated) devDependency
Expose precondition (closes Microsoft/monaco-editor#340)
Nicer way of adding the isExecutable to IConfigurationPropertySchema
[css] update languageservice (for #19173)
Update jsonc-parser
Add editor.disableMonospaceOptimizations (closes #19062)
Tasks.json changes not updated when using terminal runner.
fix build
polish pop-up message and buttons
Include model changes (#19409)
Log walk-through snippet interaction (fixes #19409)
Mark const completions correctly in ts. Part of #19401
Revert launch.json change
Link to settings (fixes #18900)
Change TypeScript Configuration Flow For workspacesTrustedToSpecifyExecutables  (#19329)
'Since' (#19178)
Abbreviate user home directory on Mac and Linux (fixes #18950)
Don't focus first editor (fixes #18931)
Add scroll actions (fixes #18922)
use node's version of path.isAbsolute; fixes #19386
Ensure --new-window-if-not-first doesn't force an empty window
Prevent terminal waitOnExit from bubbling up
update node-debug
workspaces can't override settings for executables
`Help` text cut off (fixes #18866)
Always check if already focused (#19177)
Prevent further backups after workspace backups are cleaned
Take focus on mousdown (fixes #19177)
Make text selectable (fixes #18916)
Implement getProfileName for emmet (#19109)
Streamline user-facing names
Disable ctrl+k for clear terminal on Linux
Enable Welcome experiment (fixes #19316)
Always show Help > Welcome (fixes #19163)
Telemetry for http/s links (fixes #19080)
polish comment
insertSnippet with Position or Range, #19116
support relative extensions dir
fix windows cli output when exiting
Show shortcut for Show All Commands (fixes #18938)
optionally allow to specify selection at which to insert a snippet,  #19116
debug inline values: clear word to line number cache on model content change
Revert "Enlarged stop icons to match disconnect #16929"
debug: try to always create a launch.json as a last resort
tree: home, end
some margin for select action items
some more jsdoc, #19116
fixes #19354
fixes #19353
explicit insertSnippet function instead of edit overload,  #19116
debug: disable multi process debugging in no folder workspace
fix  #19331
fixes #18157
fixes #18161
fixes #18169
fixes #18294
fixes #18298
polish jsdoc comment
fix comment about arity of implementation providers, also fix name in comment
"window.newWindowDimensions": "inherit" does not inherit fullscreen/zen mode (fixes #19300)
window: clean up listener on close
don't auto trigger suggest on backspace, fixes #19238
fixes #19274
remove the tsdk from the workspace setting
cancel suggestion if curser moved left, off a word, fixes  #18577
introduce 'default' for menu bar visibility
Editor drop-down not working in no-tabs mode (fixes #19232)
update distro
Cmd+P doesn't work when another quick pick is open (fixes #10957)
Right click on tab close button immediatly closes the tab (fixes #19145)
Add support for untitled js and ts file format and suggestions (#19340)
Smooth markdown scrolling
"Rename Refactoring" link (fixes #19169)
fixes #19286
fixes #19272
Use "Interactive Playground" (fixes #18881)
Update description for keymaps (fixes #19245)
Whitelist workspace.welcome.enabled (fixes #19270)
Add more contrast to dark theme current line indication in markdown preview fixes #19323
Remove markdown logic to maintain position on resize since it is too choppy
Remove duplicate calls in markdownEngine
fixes #19115
Scroll sync for list items and quotes fixes #19151
Remove logging call
Use selection active for initial line as well
rename (#19282)
take care of unIndent lines in Reindent Lines action
fix wording for #9003
fix #19160. Explain restriction of formatters for formatOnPaste
fix #19223
before writing check if the socket has been destroyed, fixes #19176
more random pipe names, #19188
better settings description for #19123
fixes #19132
scroll lock icons
update distro
Remove cmd.exe specific quoting code.
Added test for tasks.
Adopt release notes CSS (fixes #18984)
adding telemetry for workspace executables
improve wording
use upper letter drives on windows
mark external terminals as executable properties
use fspath instead of path
Improve dialog
Introduce trust-workspace action
Improve wording of error
fix tests
Consolidate workspace config model after refiltering
Add error markers to executable settings in untrusted workspace settings
adapt contributions
show notification
model support
Cannot access localStorage from main process (#19035)
Rename TypeDefinitionProvider to TypeImplementationProvider (#19101)
Statically read welcome experience enablement (fixes #19035)
node-debug2@1.9.10
[json] update service
[html] update services
[css] update service
Improve  markdown preview line indicator colors
node-debug2@1.9.9
Filter embedded markers from problems view and statusbar (fixes #18897)
Sort markdown settings
Add throttle for markdown scroll sync
Remember vertical scroll position (fixes #18868)
Split up and rename Markdown Scroll Sync Settings (#19077)
Auto-close javadoc
Uplevel xterm.js
Dismiss overlay on Esc (fixes #18869)
Remove waitOnExit option from Terminal API
#1587 A global command to configure language specific settings
Move configuring language based settings to preferences and expose it as an API from preferences service
Hide overlay on any command (#18869)
avoid allocation when comparing suggestions, #18682
Extension Packs
debounce suggestion filtering, #18682
#19022 Add tool tips to settings tabs
Use Git commandId unless SCM preview is enabled (fixes #19054)
Always open user settings when opening settings
#19024 Use action bar to render settings tabs
write data in bigger chunks, ignore drain need and explain why
Use dom char width reader in Safari
Enable to add a launch configuration snippet when there is no launch.json
[php] setting to disable suggestions and hover (for #9003)
fix  #18808
repl: variables and expressions with children do not preserve whitespace
add compat command, fixes #18314
Add support to specify a shell when run in terminal.
console.log et all still come as process messages
Do not use FastRenderedViewLine on Firefox on Windows7
use pipe to communicate with ext host
update node-debug
#1587 Support actions for language based settings
Add message that shell commands should define a full command line instead of parsing args.
Check for process before deregisering listeners
Add some more commands to tabs context menu
augment extension query based on mode name
Delegate Terminate task to terminal if run in terminal.
add ext recommendations to file extension query
add extra keywords to language extension query
debug protocol: update to v1.16
Prevent the CSS minifier from merging the two different highlight animations in findInput
make protocol write a header with body length, don't double JSON.parse/stringify
Add support to run multiple tasks
#9003 Provide temporary option to disable the built-in PHP completion provider.
[themes] supertypes not colored in plus themes
add simple protocol test
fixes #17916
add some missing command alias labels
usual every morning build fixing
Expose ITerminalInstance.onDisposed
Only open Welcome page when no files are open (fixes #18955)
Restore double click to switch to editor behavior
Add Markdown Preview to Editor Scroll Syncronization
fix #18962. Honor enter rules
node-pty@0.6.1
Support OS specific properties in task command definition
Improved ending text
Do not use fast rendered view line on Linux in the standalone editor (#18975)
color theme
Interface overlay keyboard shortcuts
Do not use CanvasCharWidthReader on Linux (#18975)
Render find options by themselves temporarily (#18973)
Extract find input checkboxes to separate file
Highlight find options when invoking multicursor actions
Creating 2 separate tests for windows and not
add pipe name generator
Support undo and redo in input fields (fixes #151)
fix tests
fixes #18731
Intl is not defined in Safari < 10
Enlarged stop icons to match disconnect #16929
Automatically adjust editor height (fixes #18899)
Shrink overlay with custom titlebar (fixes #18854)
Initial layout for overlay screen
node-debug2@1.9.8
Use spread operator instead of Object.assign
Update scrollbar to scroll (fixes #18864)
isInWalkThrough -> isInEmbeddedEditor
spelling corretions and other bugs
add docs to reindent actions
Add OpenIntroductoryVideosUrlAction (fixes #18862)
Use openFolder on Windows and Linux (fixes #18859)
Cleanup markdown extension (#18951)
Disable some commands while in the walkthrough
Stop propagation (fixes #18856)
Use class instead of media query
Typography improvements
#18891 reworded links/buttons
get good indent for nonexisting lines
Added link and button hover indications #18878
Cannot define multiple commands in tasks.json #981
Added max width #18877
Markdown fixes (#18704)
Support Local File Links from the Markdown Preview (#18824)
Removed <DiagnosticSeverity> cast
Add Markdown Document Link Provider To Support Local Links (#18821)
update panel order to put problems first
more panel UX updates
only one sender, no more stats
git: enable languages syntax
have proper NodeBuffer definition in place
make ext host ipc use message passing protocol api
Add runtime minimap char renderer
Have data for one character be contiguous
Add minimap char renderer
#1587 Update override propery schema with allowed identifiers
have proper NodeBuffer definition in place
Override syntax with profile only if profile is valid (#18625)
Keyboard access to Setting editor tabs
:lipstick: Settings tabs styling
Settings search: Do not trust schema type instead check type of value to match search string
Implement line and underline terminal cursor styles
Uplevel xterm.js
Clear the editable settings input on clear input
Include resources
Revert "scm: keep selection & focus on refresh"
fix npe
fixes #18843
Revert "teet"
teet
Replace the editor that is at the given position - Switching user and workspace settings when settings editor is open in more than one group
labels - paranoia check
fix #17660
scm: add enable/disable scm commands
scm: provider switcher
debug: respect output severity also for objects
Call stack context menu option do not send internal URL
move ipcRemoveCom to node-layer
Restore last active composite properly. And use default min value for repl input
Brin back "Clear Output" Content Menu Item in Output Panel
don't double install vscode.d.ts
Removed unused import
api tests should require vscode.d.ts from source
adopt getAriaLabel() everywhere
Remove unused icon
fix #17230
Typo
Walk tree to find link/button
Focus first editor
Add 'from' to telemetry events
Let walkThroughSnippet scheme go through to tsserver
Clean-up
Use custom scheme without tmp files
Acquire models in input
Add WalkThroughContentProvider
Welcome page as experiment
Hide Recent when empty
Initial layout and typography fixes
Typography adjustments and capitalization fixes
Removed extraneous text and converted paragraphs to headers
Added intial content for walkthrus
Use kb() macro for shortcuts
Separate walk-through CSS from welcome page
Walk-Through Editor
Welcome Overlay
Welcome Page
Disable failing tests
Uplevel to node-pty@0.6.0
Lighten terminal green in dark and light theme
Uplevel xterm.js
Styled ToggleOutputScrollLock action
Added back ID and LABEL for the ToggleOutputScrollLockAction action
node-debug2@1.9.7
#18467 Preserve panel maximization on zoom
Improve preview to editor mapping (#18816)
Initial layout and typography fixes
Configuration editing service: Fail if there is a real error while editing
#1587 Configure settings for current language from language selector
Preference service - return TPromise of editor for opening settings APIs
Config editing service - Check override setting pattern for key
Reindent all lines
update node-debug
Typography adjustments and capitalization fixes
Enable emmet customizations for preferences, profiles and snippets (#18694)
lamguage servers: Require snippetSupport for completionProvider capability
Removed extraneous text and converted paragraphs to headers
Gate TS go to implementation feature to TS 2.2+ (#18806)
#1587 Support parsing overridable settings in preferences model
fixes #18793
fixes #16882
git: merge decorator
git: fix throttle decorator
git: fix debounce decorator
Address comments.
#1587 Add generics in preferences service
[html] improve color decorator  updating
[css] color decorator initially not shown in all editors
files.trimTrailingWhitespace: is now an overridable setting
files.insertFinalNewline: is now an overridable setting
fix list in hc theme
Don't group debug console output when it is single character
use IRawText and compare before pretending things have changed, #18664
debug: send 'exit' event even if there is no socket when stopping server
debug: do not handle cancled errors as success cases
do not use the terminal title as an executable
fix typo in comment
#1587 Adopt editor.formatOnSave to respect language based settings
#1587 Support only one language as key
fix heap issue
#1587 Only support specific properties to override - Introduced an internal boolean property 'overridable' - Set this property to true while registering configuration - Support inheriting this property from parent configuration node level
drop packages which are only send on end
progress - show window progress early
different api, nicer message
progress - don't assume the viewlet is already created
progress - make window progress get a title
#1587 Simplify the override pattern - Use '[...identifiers]` as key
[typescript] grammars: remove workaround for spaces in scope names
Removed workbench registration for the ToggleOutputScrollLockAction action
Renamed `hasScrollLock` to `scrollLock`
scm: keep selection & focus on refresh
[fsharp] Update grammar to ionide/ionide-fsgrammar@16d4cc8 (2017-01-17)
Add SnippetString to standalone languages
:lipstick:
fixes #18655
fix compile error
fix default keybindings appearance
scm: temporarily introduce commit action
fixes #6502
Make Toggle Output Scroll Lock action change its state based on a selected channel
Allow to use Ctrl P/N for up and down navigation in quick open (fixes #7876)
Add Toggle Output Scroll Lock action
:lipstick:
Remove droid sans fallback from default markdown font fallback
fix build
Prototyping Markdown Preview Synchronization With Editors (#18762)
Maintain Markdown Preview Scroll Position on Window Resize (#18760)
Increase npm run watch/compile max RAM to 4gb
#18132 - Improve settings editor layout - Extend search across left and right editors - Show tabs inside settings editor to show user and workspace settings - Improve highlighting of settings
node-debug2@1.9.6
make sure indentation is always normalized
Reverting launch.json change.
Snippet insertion extension API changes - Basing snippet insertion failure on a new `_codeEditor` null-check. - Now returns `Thenable<boolean>`. - Removed vscode.proposed.d.ts copy of the `TextEditor` change. - Removing empty options interface.
Open new file buffer via API
Uplevel node-pty to 0.6.0-beta3
update node-debug
open editors align with explorer
git: fix fetch error bubbling
fixes #18662
progress - don't rethrow errors on main side
fix review feedback
Update monaco-editor-core 3rd party notices
panels - keybindings in hover
Adopt latest loader
CSS svg inlining: inline images only once, remove unused images from source
bump monaco-editor-core version to 0.8.0
Restore mouse listening standalone editor sample
progress - make withXYZProgress method return the thenable of their tasks
debug: remove SessionRequestType
debug: remove RunningNoDebug state
:lipstick:
debug: process keep a reference to configuration
panel switcher ux updates
Allow extensions to handle launching of the debug adapter; fixes #8645
debug: automatically pick adapter when possible
revert bogus a11y label for editor groups
Add `monaco.editor.onDidCreateEditor()`
fix #18713
Add eslint to monaco editor dev deps
Move back debug scheme to debug world, does not belong in base
Align monaco editor dev deps
TextEditor.edit snippet overload now returns void. No longer preventing when already in snippet mode.
onEnter honors intentional indentation
empty spaces before enter is meaningful
onEnter should be slient if there is no indentation rule
Display 1 decimal place for extensions downloads in Millions
Further generalize hot exit tests to reduce verbosity
Insert snippet API changes.
Add hot exit empty workspace tests
Simplified selection of tab close button css styles
[json] update dependencies & adopt
[css] update dependencies and migrate
[html] update client dependencies + migrate
[html] update server dependencies, migrate
Refactor Add other shutdown cases to hot exit tests
#1587 Publish the setting - Register the settings.override setting - Dynamically update the schema to support intellisense - Change the language key format to langid or langids separated by comma
Tidy up hot exit tests, pull into their own suite
formatOnPaste as editor option instead of actions
Handle onExitAndWindowClose ShutdownReason.LOAD
Use createQueuedSender when the useQueue option is specified.
Use createQueuedSender for all IPC
addAction returns IDisposable (fixes Microsoft/monaco-editor#286)
AtaProgressReporter using proposed progress api
Debug: prevent breakpoints on left hand side diff editor or readonly editor
move debug chema to network schemas
git: nls
git: don't show ahead/behind when syncing
npm on accessing theme
git: report progress
don't debounce FS events
better fix for null/undefined input description
delay activity progress by 200ms
Enable FastRenderedViewLine for lines under 1000 chars
better fix for label duplicates
fix npe with labels.shorten()
inline values: use most specific scope
debug inline values polish: unique names on a line, do not wrap with whitespace
fixes #18648
scm: adopt color theme change
:lipstick:
focus indication
More feature parity when running tasks in terminal
open editors css to hide twisite no longer needed
fixes #18657
viewlet progress shows progress bar and activity badge
fix overflow issues in explorer and quick open
#1587 Hygiene fixes
avoid direct access of registries
git: improve fs events reaction
use readonly in themeservice
clean up ThemeService API
inlineValues: respect stackFrame lineNumber and column
inline values: better update on model change
inline values: use default word regex, do not massage values
#1587 Check if overrides are there while getting language config
first cut show all panels in title
#1587 Diffeditor - override settings by language
#1587 Read the editor settings for language and update the editor
#1587 Update config model and services to handle language based settings - Contirbute parsing of config as an option to config watcher - Introduce Config model to hold configurations , overrides and necessary data for services - Refactor config services to use config models - Add an api in config services to get configuration for a language
Add FastRenderedViewLine (disabled for now)
some cleanup
ensure badge is truy
remove console logs
git: dont be eager when reacting to workspace events
migrate showActivity call
scm: show activity status before viewlet opens
inline values: use a collapsed range, seems to work just fine
path buisness is driving me crazy
add withScmProgress to begin with
normalize path
Revert "slash, backslash fun"
slash, backslash fun
Revert "make tests windows ready"
make tests windows ready
New windows should get the size of the previous active window (fixes #10864)
node-debug2@1.9.5, now with 100% less build-breakage
Tests for 2 hot exit configs + single/multiple window close
Adopt appExit -> onExit naming
Removes the showTabCloseButton setting in favor of tabCloseButton options
inline values: use max safe number
Do not emit width for vs-whitespace when font is monospace
adopt new showActivity signature
fixes #18601
debug: getConfiguration and resolveConfiguration
expose a withScmViewletProgress-API
Add `Decoration.insertsBeforeOrAfter`
Record part lengths in view line renderer
Add `FontInfo.isMonospace`
Add ITextModel.mightContainNonBasicASCII()
add IProgressService2#withViewletProgress
ActivityBarService#showActivity returns a disposable, remove clearActivity, make message stack properly
debug inline values: use scheduler for removal
debug inline values: move methods back into debugEditorContribution
git: improve errors

scm : fix menus
rename to WindowProgressItem
git: block concurrent commands, sync
upgrade node-debug
Add RenderingContext and adopt it
Use Int32Array for a rendered view line pixel offset cache
Use pixelOffsetCache in all lines that do not contain RTL
use nodejs-path#relative for workspace#getRelativePath, #18350
perf - need to shorten the URL for IE
perf - add an action to report performance times via GH
protect against empty strings, #7326
reset state on hide/show, #7326
add acceptOnCommitCharacters setting, #7326
scm: add TODO to viewlet migration
scm: fix bad string concatenation
scm: migrate git->scm viewlet
perf - show likelyhood of user running inside VM
git: statusbar tooltip
Emit dir attribute on rendered spans (fixes Microsoft/monaco-editor#280)
No more need for !important in vs-whitespace since it is exclusive with tokens
scm: remove old git
debt - better location for indentation
scm: remove unimplemented commands
try to fix "out of memory" issues on travis
debt - fix some layer breakers in workbench
Revert "node-debug2@1.9.5"
Update xterm.css to match upstream after uplevel
Uplevel xterm.js
Uplevel node-pty to 0.6.0-beta2
Align terminal scrollbar with panel
Remove instantiation service warning in terminal instance tests
Use a factory to create terminal processes
Clean up old process and handle listeners better
Start of allowing terminals to be reused
Remove terminal waitOnExit by default
Support file.hotExit: appExitAndWindowClose
View line tokens track an `endIndex` instead of a `startIndex`
New view line rendering
Test entire view line rendering code
Towards refactoring view line rendering
Simplify createLineParts input
Add intermediary step in view line rendering
Updates to handle tab close button options: left | right | off
Switching from String.localeCompare() to Intl.Collator
Simplify addStandardDisposableListener
Simplify markdown paragraph logic (#18531)
Tweaking the PowerShell path to execute the 64-bit version instead of 32-bit
Setting Powershell as default terminal for Windows 10+ (fixes #16838)
node-debug2@1.9.5
Return search results to frontend ASAP, for the first 50
Added intial content for walkthrus
Allow Expanding Suggestions with Mulitline details
Enable dot completions in a few more contexts
Text search - ignore fs errors, like we used to. Just skip the file.
Support env in ITerminalService.createInstance
Support setting cwd in ITerminalService.createInstance
update key bindings for format on paste
fix #13945. support format on paste
Use kb() macro for shortcuts
disable two tests for now, will reanable on monday
:lipstick:
our tests are very weird
debug: inline values use map, set. Polish
Remove support for IE9 and IE10
Standalone Editor: Do not implement half the service where the service interface should be
Simplify standalone editor services
Move InsertSnippetAction up to /workbench/
Simplify standalone editor services
Simplify StandaloneCommandService
Move MainThreadModeServiceImpl to /workbench/
Simplify ModeServiceImpl
Towards eliminating IExtensionService from standalone editor
Separate walk-through CSS from welcome page
debug: put inline values behid a flag
debug: only show inline decorations for other token type
:lipstick:
install extension on url
Revert "do not use map for pending requests"
More work on terminal task runner
git: autofetch
fix typo
add doc comments
rename to withWindowProgress
do not use map for pending requests
debug: focus also the process when adding repl or renaming watch
fix tests
.hidden should not be in global css space
doc - mention that status bar messages must be disposed, move signature down to encourage auto-dispose cases
First cut of using the terminal to execute tasks
fix #18510
Improve JSDoc wording
readonly in Uri, #12732
withStatusBarProgress API and implementation
git: checkout & branch commands
debug: append origin to stack frame title
add not implemented commands
am I the only one that cares about green builds?
null guard for scope ranges
Improved mixin of product
Adapt to tslint4
catch unhandled promise rejections in build
update distro
Decrease text search fake progress multiplier
node-debug2@1.9.4
Wrapping in Markdown Preview  (#17361)
Prototype Using Commit Characters for JS and TS Completions (#18380)
Walk-Through Editor
Welcome Overlay
Welcome Page
handle multiple modes in one file for indentatin purpose
Add Go To Implementation Api (#18346)
Bump Monaco to TS 2.1.4 (#18413)
Uplevel xterm.js
Add editor.getTargetAtClientPoint (Microsoft/monaco-editor#249)
add some docs
do not change type of something persisted, otherwise it breaks backwards compatibility
update node-debug
Inline values as decorators when debugging
easy on throwing errors
Hygiene
Improve MouseTargetFactory implementation
Towards simplifying MouseTargetFactory
git: switch clean picks
debug: allow thread name to get updated
add missing suffix
debug: seperator in launch drop down
git: remove bad throw
git: pimp up CommandCenter
more vsda
fixes #17739
git: show output command
git: viewlet overflow commands
scm: viewlet counter
fixes #17225
scm: viewlet icon
Multiline object properties
output: clear buffered output after it is appended
readonly in Uri, #12732
support vsda module
wait for extensions to be ready before loading snippets, #18407
git: open change/file
git: handle resource opening
customDebugRequest api
git: reorg
debug: addLaunchConfiguration telemetry event
uri - path and scheme are also optional in serialization
git: better error handling
Introduce CharacterMapping that can transform char offsets to rendered view parts
update settings: hide derived
Improve mouse target detection code
perf - avoid isEqualOrParent (for #18178)
perf - uri.toJSON() over toString() (fixes #18215)
fixes #17430
more uses of pinned: true
good indent
Pick up 2.1.5 release (#18429)
Add range on the copyright year
lines filled with empty spaces should be ignored as well
code format for better diff
support selections
enrich unindent rule and indentNextLine rule
enrich unindent rule and indentNextLine rule
Update bracket decorations asynchronously
Sanitize tests
Extract BracketMatchingController from cursor
Add ITerminalInstance.onExit internal API
Add ITerminalInstance.onData internal API
fix test regression
get expected indentation from above lines
move decrease current line indentation out of enter logic
remove indentation rules for typescript as sementics of decreaseIndentRule changes
make enterAction initialization thread safe
Apply indentation rules for current line and following lines at the same time
git: sync action
git: fix sync statusbar
git: publish command, statusbar
git: sync status bar
Jumpy cursor with trim trailing whitespace and autosave (fixes #18410)
git: checkout
update node-debug
debug: show error message, do not propagate it
fix debug version mixup
debug: 'Add Configurations...' in launch.json dropdown
git: remove console.log
git: pimp up commands
git: status bar command
git: basic status bar
git: events for git:// text documents
git: react to fs events
added link to stack overflow
debug: fix compile error
Model can capture matching groups when searching
git: scm viewlet set focus on input box
Honor 'deemphasize' hint of Source objects in CALL STACK view
Revert "coverage reporter throws"
debug: do not send request to startSessionCommand
debug: do not send breakpoint column for now
git: merge actions
git: fix commit all
bump vscode node version
debug: no folder debugging
debug: remove disabled state and tune viewlet ux for no folder workspace
fixes #18363
remove unused method
debug protocol: add presentation hint to source
TextModelSearch can return captured groups
Introduce and adopt SearchParams
Move text model search tests to a separate file
Extract TextModel search code to its own file
Remove bad code style
tslint hygene
update to tslint 4.0
Uplevel xterm.js
Add "All rights reserved" text.
Improve text search progress faking to fix #16403. - Match update rate to css animation transition speed - Fake fast progress initially, then slow down
Uplevel xterm.js
node-debug2@1.9.3
git: clean commands
enable proposed API for builtin extensions
fix typo
first cut of CompletionItem#commitCharacters, #7326
debt - onDidType is now just one listener
git: log everything
git: refresh is async
git: fix process env
git: commit clears input box
:lipstick:
git: commit
perf - also avoid compute style in parts
git: fix null resources
perf - avoid compute styles in workbench layout
debug: only show adapters that have initialConfigurations
Revert "If there is only one adapter with an initial configuration automatically pick it to simplify debug setup"
coverage reporter throws
Better type listeners in the editor
update node-debug and node-debug2 versions
If there is only one adapter with an initial configuration automatically pick it to simplify debug setup
debug: addLaunchConfiguration returns a promise
create editor with real config (#18211)
:lipstick: method visibility
workbench: setPanelHidden returns a promise
git: always show Changes group
workbench: setSideBarHidden returns a promise
git: stage commands
perf - improved filemodel#getAll()
Implement #14440 and #16666 with tests - Disable and enable extensions with dependencies - Check for dependents when disabling an extension - Tests
git: reorganize model
Revert "Only apply TS Dot Accept Suggestion if Previous Character is a valid identifier (#18063)"
disable codelens
Remove commented code
Comments resolved
Throttle the rate of opening new files when holding down the arrow keys in the search results pane
documentLinkProvider should return an object (for #17289)
Generate Line Number in Markdown Output HTML
Added tips
Comments resolved
Force terminal viewport alignment to top and bottom of panel
Exclude Definition From TS code lens (#18338)
Enable ts reference code lens for testing
Enable ts reference code lens for testing
Add createTerminal with options API with new option waitOnExit
Only apply TS Dot Accept Suggestion if Previous Character is a valid identifier (#18063)
Implement IShellLaunchConfig.waitOnExit
Uplevel xterm.js
Warm up font info cache before creating lots of dom elements
Extract font info validation code to fontInfo
Extract EditorZoom to its own file
Use uint constants instead of introducing new ones
Extract BareFontInfo and FontInfo to a separate file
fix compile errors
Menu shows "No Configurations" when .vscode folder is on the root of the drive and the root drive is opened in VS Code (fixes #18183)
fix npe when reading payload of event
scm: getResourceFromURI
:lipstick:
fixes #18234
Toggle Render Control Characters writes to user settings (#18210)
Toggle Render Whitespace writes to user settings (#18210)
Toggle Word Wrap writes to user settings (#18210)
Move Toggle Word Wrap up to /workbench/
remove unused type
restore readonly-ness tests, #12732
debt - use Map for service collection
git: structure commands
Skip tokenizing with TM lines over 20k chars
fix #17836
Add standalone editor API for theme customization
git: camelCase commands
git: clean all command
git: clean command
Remove unused mostSignifikant
Add token inspector for standalone editor
Reduce standalone editor API breakage
faster version of getWordAtPostFast,  #2312
fix compilation error
Show matching theme rule in TM scopes inspector
:lipstick:
Extract findMatchingThemeRule from themes test
Improve TM inspect scopes
fix #18261
Moving a file over a dirty file with the same name restores the dirty contents of the target (fixes #18291)
fix npe when renaming binary file
better restoring of view state after move
Keep dirty contents when renaming a dirty file or its parent (fixes #11997)
Moving or renaming file does not preserve editor view state (fixes #18290)
Uplevel xterm.js
fix coment doc
[html] update jsbeautify (for #2204)
[json] update service
nls in package.json: Also support strings in arrays
[json] json.parse performance fix (for #18218)
Update menu when reassigning keybindings or installing keybinding extension (fixes #14625)
consumers of wordDef should reset lastIndex
speed up getWordAtPosSlow, #2312
getWordAtPosFast, #2312
pty.js -> node-pty
fix test
remove @readonly comments
readonly to isResolved
use readonly #12732
Add TypeScript References Code Lens Provider (#18205)
menubar visibility is updated from within each window, rather than from outside
tidy switch statement
menubar defaults to toggle when switching to fullscreen
Use const in terminalConfigHelper
Clarify comment
Fill up available space in terminal, add padding to right
Use const in terminalInstance
Added download links for stable and insiders
First cut of TM scopes inspection
fixes #18166
Remove universal selector
debt - simplify how editor config gets applied
update node-debug
debt - remove unused TimeKeeper
use debug protocol 1.16.0-pre.0
Phase out IMode
log app.isReady separately because I suspect it to be slow, #18087
Load language configuration when hitting embedded languages
#18216 Remove universal selectors
Tweaks
debug source: give priority to sourceReference than to paht when determining if internal
save 16k by not using map. is that true?
Small css tweaks
fix sash for #18216
remove unused CSS
tree.collapse(): forward recursive flag
use off dom canvas for faster text measurements, #18211
debug: use Set and Map
debugEditorModelManager: use es Map
debug: use proper Map for threads
debug: dispose created internal source models on debug session end
Show Error Message if TypeScript Settings Update Fails (#18130)
Pick up ts 2.1.4 (#18061)
Add --new-window-if-not-first CLI arg
fix #18160
fix bad hover title for debug internal module
Add null check
fix bad regression when doing "Save as"
debug: show origin in editor header
first part of #10795
Remove model.getModeId()
Remove model.getMode()
Rename properties of LanguageIdentifier
remove process.env warning
Do not wrap StackElement in TMState
vscode-textmate@3.1.0
Remove paranoia check in ViewLineToken
Allow to compare untitled documents (fixes #14501)
Do not generate CSS for tokens in stylesContribution
Use hex colors in themes integration tests
fix broken picker
:lipstick:
update distro
Remove logging statement
Rename cursors styles and add new ones:
#14464 Remove KEEP_RATIO from the exposed API
#14464 Preserve editor size when switching layout
Themes integration tests
"Copy stack trace" -> include full path
Added a link to disable an extension doc
startDebug action picks first configuration if none picked by user so far
Make LAUNCHING_DURATION const
fix #17400
rename Context to LineContext, more simplifications
suggest - move isInEditableRange into static and reduce Context properties
suggest - move shouldAutoTrigger into static and reduce Context properties
fixes #17951
:lipstick: better differentiation between triggering and refineing completions
Highlight whole line always
Show sub context menu if a line has more than one setting
improve list accessibility
Tests for filters
Do not clear ranges if editor model is not tehre
:lipstick:
vscode-textmate@3.0.1
Tabs: changing close button enablement no longer updates live (fixes #18101)
Update copyright year to 2017
Search relevance in Quick Pick control (fixes #18003)
Crash in extension reading configuration values on startup (fixes #17807)
fix #18055
Unable to next/previous via keybindings when diff editor is not focused (fixes #14124)
use latest version id when triggering next save
Expose navigator methods so I can avoid calling selectNext multiple times per action- it has side effects
Move id/label
[html] setting to disable script & style validation
[html] can not disable angular proposals anymore
[html] indentation after scripts broken
Microsoft/vscode#17324 - Implement F4 to navigate results
Show search results when navigating with the arrow keys - partially address Microsoft/vscode#17324 but also will add a keyboard shortcut
vscode.startDebug pass selected configuration name as default value
find widget: 'no results' ui polish
Improve Markdown code block tokens (#17591)
Preserve zen mode on reload
#17646: - Search each word in description, key and value - Make sure all words are found in description, key and value - Search in values if setting is enum type
Prepare for theme integration tests
:lipstick: polish dispose signature
prepare for different icon when showing light bulb for warning/error than for a word, #16911
sequentialize writes to files (fixes #18037)
Remove ModeTransition
ask for quick fixes when navigating inside works, #16911
add suiteTeardown
better sequentialize saving file models (for #18037)
zenMode configuraitons
Adopt new vscode textmate
Remove standalone tokens CSS
Revert "fix #15395"
better fix for #11890
undo bad changes, fixes #17989
vscode-textmate@3.0.0
Revert "pass on args when invoking an action"
RenameController depends on UNKNOWN service fileService (fixes #18002)
node-debug2@1.9.1
Memory usage improvements in KeybindingResolver
Remove log statement
merge tokens with equal metadata in manual tokenizer
Allow for theme switching
Ensure vs-whitespace is normal weight
Monarch should always return non-null tokens
Adopt latest loader
still support openFilesInNewWindow: false for backwards compatibility
turn openFoldersInNewWindow and openFilesInNewWindow into an enum and explain behaviour
:liptstick:
Use common selector prefix.
support forceReuseWindow in openWindow API
Remove terminal focus from deprecated commands
Polish for PR #17865
Straighten out condition and remove unused method
Finish tests
Update c grammar to atom/language-c@0d0f323 (2016-12-07)
Clean up, fix extra newline
Revert the correct lines for a change that isn't just an insertion or deletion
Add tokenization API
More specific template definition boundary selectors.
tslint: less implicit any use
remove unneccessary removeDecorations-call and modernize
debt - remove used code
debt - remove unused code
also support defining a snippet in the keybindings, #17780
debt - use Map instead of object
debt - use Set instead of object
Remove token class name from every token
New tokens format
introduce and use forceReuseWindow flag
settings wording
more tweaks to file open behaviour
introduce window.openFoldersInNewWindow for #371
fix issue in recent menu with truncated paths
treeview: option to hide twisties
Use Word Based Completion Range by Default in TS (#17918)
Pick up TS 2.1.5 12/29 insiders (#17915)
bug: multiple files no longer open in same window
set files to open as pinned when opened on startup
allow to configure snippet name and langId when configuring keybinding for 'insertSnippet', #17780
add a context to the windows.open() method to better understand how opening was triggered
add CodeLensProvider#onDidUpdateCodeLenses, #10648
:lipstick:
shorten paths in main menu by looking for userHome
Variable with no name is a top level variable which should be rendered like an output element
allow to force new window for File > Open when pressing modifier key (for #371)
better handling of openFilesInNewWindow setting
handle openFilesInNewWindow properly on main side
Print debug information on text mate stack overflow
fix todo in TMSyntax
[ts/js] update grammar
ReplEditor -> ReplInputEditor
use Map in TrieMap
reduce usage of collections-util, remove used bits
debug: log error message for debugMisconfiguration event
debug: offer 'More...' when picking debug adapter
remove map,set from editor/core as they are now everywhere
remove custom declares of ES6'ish types
:tada: add Map,Set,WeakMap stubs since min supported browser is IE11
Uplevel xterm.js
always use editor to add/remove decorations, #17346
don't trust tight timeouts, #13148
:lipstick:
debt - string editor => text resource editor
debt - avoid stringeditormodel for untitled
SuggestContext ignores 'lineContentAfter', fixes #4911
Adopt resource editor inputs for output (part of #17063)
:lipstick:
the whole file name is used when dealing with filename associations
fix #15395
fix #17407
use readonly flag
breakpoints column in the model
fix #17785
fix #17540
select box fix
Simplify ITokenizationSupport:  - remove ILineTokens.actualStopOffset  - remove stopAtOffset  - refactor MonarchLexer
linux argument startup fix
at build time create a list of node modue to help the loader load faster, #15455
Add tokenization/themes test
adopt loader #35e8bf0
Adopt latest loader
Standalone token themes as JS rules
Add syntax highlighting for JS/TS template string interpolation.
Check window.autoDetectHighContrast on window load
Adopt some ES6 datastructures to improve memory consumption
Remove IE9/IE10 workarounds
use fuzzy filter for word based suggestions, #16109
Revert "add extension host heart beat and log telemetry event when ext host goes dark, #14758"
formatting
make perf action show *all* loader stats, #15455
adopt loader d165497
menu bar: only notify about hide / show when changing settings (not when toggling fullscreen)
remove unused code related to old menu bar toggling mechanism
debug: only go to multi process view when second process successfully started
show notification that menu bar can be shown with alt
menu bar visibility is now stored in settings
Opening debug viewlet focus start action
cleaner preserve focus in restart
debug: restart should preserve the focused process
Only automatically focus stack frame if no other stack frame is focused
debug: do not be overly smart with focusedStackFrame
selectBox restructure and select(index)
debug: only focus stack frame if clicked on stack frame element in callstack
debug debt: bring a bit of order to chaoting setting of focused stack frame
callstack: polish tree selection updating
Sync selected process from debug widget to callstack
debug: focus the top stack frame as default
get rid of onDidFocusProcess event
Add action to UI
Add CommitAmmndAction
Find the most specific scope containing the range
debug hover editor model null guards
debug hover use only range, not the word
fix If debug session is active all non-debug hovers are disabled
Ability to terminate a program from Call stack
Revert "reuse telemetry info when getting common http headers, will likely make use not spawn a process which saves at least 10ms,  #17108"
pass on args when invoking an action
Support standard tab navigation key shortcuts on macOS (fixes #12831)
fix tests
Improve wording
Addressed comments 2
workspace context :lipstick:
zenMode: options
update node-debug
remove unused
check on proper context key, fixes #17437
validate ranges when asking for text in range, fixes  #17424
zen mode hide tabs
editrour group service - tab options
Update LICENSE.txt
Change order of Diff extensions.
:lipstick:
debt - add another resource input for side by side use
more use of resource inputs
Do not instantiate IdentitySplitLine for each line in the view model
Reuse the same instances of MonarchLineState up to a certain depth
Remove IState.getModeId()
Reuse the same instances of MonarchStackElement up to a certain depth
Implement directly ITokenizationSupport in MonarchLexer
Remove shim usage to allow loading under r.js
debug debt: eventing around launch.json updates and error handling
debt - adopt IResourceDiffInput (for #17063)
don't set env variable to undefined
don't depend on version when computing cached data dir for node
use nodeCachedData for main process, #17108
fix compile issue
#17646 Refactoring settings model to make it easy for search
Pick up 12/20 ts drop (#17635)
Monitor Typings Acqusition Events for TS Completion Item Provider (#17098)
Temporarily referencing vscode.proposed.d.ts for API tests.
TextEditor.insertSnippet extension API.
Addressed comments
Made spacing consistent (#17623)
menuBar: autohide setting is only used on linux/windows
MenuBar: move update of autohide setting from menus.ts to windows.ts
zenMode: hide tabs
editorGroupService: managing of tabs visibility
polish toggleTabFocusMode
debt - introduce IResourceDiffInput (for #17063)
temporary warning when acceessing unknown env-variable while lazyEnv loads
make workbench.start wait for process.lazyEnv, #16508
make static terminal code wait for lazyEnv, #16508
call it lazyEnv, #16508
Revert "processes.env.addDelayedEnvironment, #16508"
add a global delayed user env in `process.delayedEnv`, #16508
move shellEnv to its own file, #16508
debt - merge getResource, asFileEditorInput and asFileOrUntitledEditorInput into one helper method
Implement #16580
Implement #16580
debug: polish HC theme colors
Disabled Icons appears as Enabled on mouse hover in High Contrast Mode
fix test failure
processes.env.addDelayedEnvironment, #16508
#17292 Let Filtered settings navigator use common setting highlighter to highlight setting
debt - remove abstract FileEditorInput
Reduce usage of TokenizationSupport
#17468 Make start search action an editor command
reuse telemetry info when getting common http headers, will likely make use not spawn a process which saves at least 10ms,  #17108
debt - avoid specialized input for conflict resolution (for #17063)
'Open Folder' hints in viewlets when no folder open
use raw method for now to avoid event spam
Map TS  completion to Class CompletionItemKind (#17571)
Add TS Code Action Provider (#16299)
Ensure workspace is read from WorkspaceContextService
Use Module Symbol for Module Name Completions (#17558)
Add CompletionItemKind.Folder (#17438)
#17442 Do not fire change event on clear
Remove state management in Default preferences editor
#17543 Use getTotalHeight from DOM api
"Add to watch" should be disabled for objects in console
fix tests
formatting
Persist character encoding of open files across restart (fixes #10444)
prefer command over fileditorinput dependency
revealInCenterIfOutsideViewport
autoHideMenubar: respect default and dynamically update on config change
Ctrl + C doesn't work anymore (after updating to latest version) (fixes #17232)
Hide sidebars first and then go to full screen when toggle Zen mode
Watch expressions should not expand in drag & drop
Improve comment indenting behaviour for PHP
plugin => extension
session of --extensionTestsPath should not be remembered (fixes #17489)
toggle in/out of zen mode with settings.json file changes active editor (fixes #16616)
Get rid of IEventService in favour of real events (#17515)
add config setting to control whether alt should show the menu bar when hidden
Use common summary/desc in .appdata.xml
Right click to copy selection and paste on Windows
Add an AppData XML data file to Linux builds
remove extendObject #17117
select next & previous item when in details state
Search does not work in UTF-16 LE encoded files (fixes #17408)
Remove redundant cast
Improved names and doc
Force extension terminals to use workspace as cwd
Add some tests for TerminalInstance._getNewProcessCwd
Handle relative customStartPath
Implement basic terminal.integrated.customStartPath
Use File Icon for TS Path Completions (#17434)
Ensure terminal panel is active for terminalTextSelected key
node-debug2@1.9.0
#17292 Settings action improvements -  Improve highlighting when hovered on action - Improve highlighting when updating setting - Improve hover text of action
fix compile error
Usability: NVDA is not announcing the name of the editor groups. (fixes #17230)
Issue with saving files on mounted drive: "Could not resolve any model with provided uri" (fixes #17345)
Make high contrast detection configurable
#17290 Revert fix
#17073 Move away from String editor input for default keybindings
perf - improve dirty counting in opened editors view
tabs - cleanup listeners properly after perf work
Adding insertSnippet to TextEditor extension API.
perf - reuse tab containers ftw
Flatpak: Set the subject used for repository commits
Flatpak: Allow specifying the path to a destination repository
Support signing Flatpak builds with GPG
Update to TS 2.1.5 insiders build (#17347)
Make indentation of API reference samples consistent
allow tree autoExpand override
#17292 Improve Copy/Update action - Display the icon in the gutter area - Show sub menu if there are more actions - Highlight line when copied - Highlight line when hovered on aciton - Delayed display of icon on mouse move
iconv-lite => 0.4.15
graceful-fs => 4.1.11
Range decorations: Take code editor as argument instead of workbench editor Option to decorate whole line or not
Tests #17290
perf - debounce some file model listeners for more speed
#17073 Replace preview: - Do not use input cache - Let content proivder listen to events and update preview model
fixes #16377
perf - introduce and use "soft" revert when closing all editors
perf - do not compute icon classes when they did not change
fix #17176
Update ts extension to use es6 (#17134)
Remove gulp-image-resize dep unless we build flatpak
debug: F6 to pause
fixes #16581
debug add configuration: do not use depthInArray heuristic
debug: use revealIfVisible flag
debug debt: adop ITextModelResolverService
repl controller: get rid of large constructor
Support building Flatpak bundles
debug: do not focus call stack elements on up / down this is not vscode natural behavior
debug.contribution: destructure imports
Watch expressions should not expand in drag & drop
perf - 20% less time spend computing pinned state when many tabs are opened
'Add configuration' doesn't work on empty launch.json
debt and prep for  #17108
#17110 Move d.ts files to typings folder
fixes #17128
Use a round border for start debug action
Debug dropdown play button should have click feedback
less flicker when opening first editor
fix #17136
update docs and better naming for cursor/selection
Use license in product.json for rpm
compute cursor state after edits were applied
Improve rpm dependencies
Depend on 64-bit gconf-2 for 64-bit package
Middle mouse button click handler
Disable emmet in markdown by default (#17094)
debugSource.getSourceReference()
#17110 Remove reference to HistoryService
#17110 Move sinon to fix compilation issue
#17110 Move sinon.d.ts to test folder
#17110 Rename and clean up
#17110 Rename and clean up
#17110 Remove dependency on workbench test utils
undo change in launch.json
#17110 Move service test utils to workbench
#17110 Remove dependency on service test utils from platform tests
#17110 Move promise utils to base test common layer
#17110 Adopt servicesTestUtils to use new instantiation service mock
#17110 Move instantiation mock to platform/instantiaion layer
Close dirty editors: Provide fast action to save all or revert all (fixes #8009)
Properly fix #16637
[seti] extensions & filenames are case insensitive
Preserve language picked for untitled text documents (fixes #16803)
fix #16101
Add context menu item to copy callstack
Associate .phtml with php again (revert of #17099)
Excessive find-replace in debugViewlet.ts fixes #16637
debugEditorModelManager: do not use hasOwnProperty
debugEditorInput import polish
Preserve view state for untitled files between restarts (fixes #16588)
:lipstick:
Debugger: Attach to process: 'null' doesn't look like a process id.
Add test for #15236
Insert final new line doesn't work with format JSON on save (fixes #17078)
`output` shouldn't be required on OutputEvent when variablesReference is used
File model loads file on disk even if a backup exists (fixes #17065)
Hot Exit: opens needless untitled file when restoring backups (fixes #16821)
Stop changing selection when autoreveal is off (fixes #14745)
storagePath can be undefined, #17089
don't join with undefined, #17089
[hanldebar] update grammar to daaain/Handlebars@4e82444 (2016-12-08), fixes #17093
move checkoutType out of git service
fix regex to catch pound signs at the end
delay markdown require
Update package.json
debug: go back to old treatment of new lines
Bump up version for applicationinsights (#17001)
Workaround for #16909 (#17088)
Add link to Ts work item
Blacklist typescript.useCodeSnippetsOnMethodSuggest in certain contexts (#16415)
fixes #16951
fixes #16919
first cut of preventing untitled from reopening when hot exit is turned off (for #17080)
revert PR for relative paths handling
add common property: 'virtualMachineHint'
DeleteAllRightAction delete new line when at end
debt - move backup model service into text file service
fix tests
#15558 Move storage service impl to package layer
debt - move text file service to common
Move deleteAllRight out of the editor core (#8575)
open main window ~30ms sooner by moving menu creation out, #15455
:lipstick: hot exit
use immortal references for inmemory resources
fix tests
debug output: only increase counter if same severity
Reduce standalone tokens rules
Improve standalone colorizer
Remove unused standalone tokens CSS rules
Use hex representation for colors
Target only classic-style tokens for the standalone editor
fixes #13370
Go To description mentions line, column but it should be line, character (fixes #14598)
fixes #17042
debt - less use of <any> casts
fix layer breakers with product and package
ignore scheme-less links, #8223
use workspace tsdk
move snippet completions, #15558
:lipstick:
move quick open service, #15558
debt - make file model load easier to read
[typescript] update grammar
Version bump
debt - typed timers
Standardize cursor movement with home and end keys
debt - merge integration into window
More lazy loading of services (for #15455)
only show good drop feedback when dragging editor or files
more standard mnemonics
Fishy corner case with auto save on when save fails (fixes #16977)
improve hc theme (part of #16869)
Save onFocusLost should only be triggered when whole editor widget looses focus (fixes #16659)
Disable TerminalService tests for now
Add default shells to test
Add more TerminalService tests
Create first TerminalService tests
Move various terminal config funcs into single func
Remove .bind(this) pattern in terminal
Launch widget dropdown gets white background in Windows
fixes #16970
fixes #16969
debug: remove watch expressions icon
watch expressions: remove edit watch context menu action
remove console.log
outline support for markdown
Breakpoints context menu
null guard
debugEditorModelManager - fix issue introduced by refactoring
At least 2 VScode were started (fixes #16957)
debugEditorModelManager - refactor and improve
debug: remove support for debugServer
Remove message insider builds are becoming daily builds
fixes #16830
fix #16687
fixes #13919
hot exit text
fixes #16857
Move @types/semver in TS Extension to devDependencies (#16958)
updating distro
Update to ThirdPartyNotices for 1.8.0 release
Use No Implicit Any In TS Extension (#16878)
Whitelist domain names (fixes #16954)
Selection visibility for hc-dark paused breakpoint Addresses a regression from prior commit on issue #15852
Mitigate multi cursors in one line for joining lines
Add hot exit educational message
Add hotExit:triggered event
unref model when being closed/hidden/cleared, fixes #16924
Add unit tests for keybinding service dispatching (#16833)
Prepare KeybindingService for adding tests
Configuration service does not emit event on deletion of .vscode folder (fixes #16902)
disconnect icon
fix issue with dragging and viewlets
fixes #16609
Add disconnect icon
debug-start focus polish
fixes #16479
fixes #16479
floating click widget use nice color
update node-debug
Replace IKeyboardEvent.asKeybinding() with toKeybinding()
never grow final tab stop decoration range, inherit stickiness to visual decorations, fixes #16835
Selecting a different launch config should not launch it
fixes #16874
:lipstick:
fixes #16867
fixes #16881
Backup files when autoSaveDelay is > 1500ms
Disable text file backups when files.autoSave is afterDelay
Retain case in workspaces.json paths
Improves contrast on paused breakpoint in hc-dark Addresses #15852 theme problem
Remove mocha.d.ts from extension projects that don't need it
Remove unused functions in is
workarounds for #16819 - TS2.1 compiler issues
Adopt TS 2.1.4 in TS Extension (#16872)
node-debug2@1.8.6 for #16632
Add Cursors to Line Ends (fixes #16618)
Add a few casts to work around issues in ts 2.1.4 (#16861)
fix #16587. Enrich Join lines with multi cursor support
Exclude port (#16680)
unbound join lines keys on win and linux
Rearrange sections in Selection menu (fixes #16598)
Keybinding for Open Folder and fix 'unbound' layout (fixes #16672)
Prevent modifier keys from being dispatched
#16674: Use resource editor input - Show warnings only once - Open resource editor to show warnings
also turn undefined variables into placeholder, fixes #16668
update node-debug
Match SSH connection string without username (fixes #16680)
append new line on each output coming from extensions
add link to website, fixes #16649
debug: remove disconnect action
Typo fix
fixes #16614 fixes #16625
start debug fix title
opss bring back border
protect against bogous marker ranges, #15475
debug-start: start on configuration change
[html] update language services
Revert "fix tests"
polish for #15961
debug-start polish height
debug-start: polish hover feedback color
debug-start better disablement
debug-start polish
remove telemetry experiment
Add prefix for new preferences command (fixes #16658)
fix tests
View: Rename View Menu Item (fixes #16818)
Improve appearence of +/- signs in diff editor
colors
remove unused method
fixes #16793
don't return 'current dir'-dir, fixes #16712
Tweak fullScreenZenMode description
fixes #16729
fixes #16583
Untitled file isn't restored properly (fixes #16589)
zen mode: do not update on settings change
only consume first : when parsing var/placeholder defaults, fixes #16717
fix #16541
Provide a template for launch.json root content
fixes #16767
Repl shouldn't be cleared if a process is already running
update loader & config, fixes  #16670
compare basenames, not paths,  #16662
`showTabCloseButton` is confusing (fixes #16575)
No schema support for args-attribute (fixes #16609)
remove overload, fix #16652
fixes #16737
Poor coloring of View group labels in high contrast mode (fixes #16739)
fixes #16738, fixes #16730
files.insertFinalNewline should Not Move Cursor to New Line (fixes #16557)
Option to exclude items from Git branch checkout list #13506
node-debug2@1.8.5
node-debug@1.8.11
node-debug2@1.8.4
Remove log
Update alert to more clearly indicate the impact of this
fix #16633
Update comment
Unescape Markdown Escapes inside of a link
fix launch config names; fixes #16748
Pick up latest TS insiders build
fixes #16667
fixes #16553
ALT+F, C does not close current tab (fixes #16536)
start-debug title needs to be up to date
Default settings editor: Expand settings group while navigating filtered settings from Search box
fixes #16596, #16636
Opening a file always opens two windows (fixes #16574)
Small fixes
Update on remotes telemetry
node-debug2@1.8.3
Preferences style polish Typography, icons, background and layout
Rename Keymaps to Keymap Extensions (fixes #16294)
Keybindings telemetry (#15321)
add azure information
Whitelisted settings telemetry (#15321)
More perf tweaks
Small perf tweaks
Faster implementation of viewModelDecorations (#15743)
LineMarkers hold position
Avoid deferredEmit
More improvements in decorations change event generation (#15743)
More optimizations in generating a decorations changed event (#15743)
Prepare for tracked ranges / decorations merging
Remove ITextModelWithTrackedRanges API
Prefer using Position, Range over IPosition or IRange
Eliminate markerIdToRangeId map (#15743)
Do not emit old options or old ranges when decorations change (#15743)
TS 2.1.4-insiders
Prevent ITerminalService.onActiveInstanceChanged firing on no change
remove vim specific behavior of joining lines
cover corner cases for empty lines
Adopt upstream xterm.js change for issue 357
Default settings editor : Keyboard accessing of groups
streamline scm menus
zen mode: use proper api when hiding parts
paste and format
toggle cases
refator upper/lower case
Align transpose with Sublime Text 3
Revise join lines
Add missing Sublime/Atom commands
update node debug version
[html] update launch.json to outFiles
[css] update launch.json to outFiles
[settings] warnings for unknown settings
[json] update language service
[css] add server trace option
[json] add server trace option
[html] add server trace option
fix extension path issue
enable proposed API only in insiders
Default settings editor: CMD + F to focus search box
update node-debug
fixes #14881
fixes #16479
make API creation part of extension service readiness,  #16499
don't eagerly invalidate empty decoration ranges, #16097
perf/debt - avoid loop in loop when getting code lense
fixes #7426
debug repl: do not update when console is hidden
no more sync-fs when creating storage dir, #16388
avoid realpathSync, #16388
fixes #16255
move indentation to workbench
[html] fix compile error in tests
[docker] add update grammar script
some ts linting
debug: debug-start dropdown width based on platform
fixes #13669
fixes #15853
code !== 0
debug: debug start handle overflow of text better
debug: debug-start no focus outline for dropdown
debug: start debug action hover feedback
debug: StartDebugActionItem
selectBox: fire onDidSelect event everytime a selection changes
debug: onDidSelectConfigurationName -> onDidSelectConfiguration
debugViewlet - destructure imports
DND: visible watermark prevents dropping of files (fixes #15698) (#16430)
fixes #16442
:lipstick:
Make opening Getting Started an experiment
fixes #16481
Adding Docker 1.12 instructions to its grammar
workspace remotes
[css] Update language service
add tests for converting workspace backup to empty workspace backup
introduce and use getRandomEmptyWorkspaceId
Clean up terminal names
Add back ctrl+shift+c to copy selection for Linux
Don't let the terminal font size fallback to editor setting
Remove debug log
Remove hot exit checks from backup model tracker
fix #16434
Notify the user that backups exist but have not been restored if the folder to be restored no longer exists (fixes #14705)
add pinnedViewlets to workspaceLoad telemetry event
file model: better promise handling
Add multicursor actions (#16253)
Add next/prev recently used editor to terminal skip commands
Add Toggle Comment actions (#16253)
Remove redundant call
Move Emmet commands to Edit menu (#16253)
Move Select All to Selection menu (#16253)
Tidy up BackupFileService test
Limit tag collection when not opening a folder (#15321)
Add test for empty workspace removal
Persist the search worker processes for 30s after doing a search, to fix #16347 and #16306
Add another getWorkspaceHash test
[json] updare service & add json schema.deprecationMessage/ enumDescriptions
Clean up BackupMainService tests into suites
Add loadSync for empty workspaces test coverage
BackupMainService.getBackupPath tests
Disable (#16350)
Consume languageServiceEnabled Events from TS (#16355)
Allow Enabling useCodeSnippetsOnMethodSuggest for JS As Well As TS (#16351)
Enable Strict Null Checks and Use Lib References in Markdown Extension (#16346)
Improve menu and shutdown telemetry (#15321)
apply decreaseIndent for ruby code
Remove sync fs call in terminal.ts start up
side by side input: editor factory
setInput: make options optional
sidebysidecontrol => editorgroupscontrol
fix tests
#16394 Polishing
#16394 Move VSash to sash.ts
Implements #16394
also log missing id cases #16151
run alternative machine id experiment, #16151
part of #16381
Clean up move to beginning/end of line in cursor
fix #16380
make it clear that a DocumentLink can be created without target
debt - remove duplicated code
fix #16379
Hot Exit: properly deal with backups to files that got deleted (fixes #14054)
adopt different scm menu ids
fix scope issues
Do not use new preferences editor for default keybindings
export Find controller for disabling in Defaults preferences editor
Defaults Preferences Editor: Disable Find and Selection highlight Refactoring - Rename to Default preferences
handle some open clicks
increase cleanup timeout
add nodeCachedDataManager for telemetry and cleanup
Optimize reading done in viewCursor
commit, open, drag optional methods
use cachedData only when built
update loader to eeafe10
scm viewlet: move decorations to right
scm viewlet: themable icons
fix #16223
Never reuse a window for empty workspaces being restored
remove bad telemetry call
Move register backups extension dev check back to windows
Make empty workspace windows always open as new window
Make backupFolder a openInBrowserWindow param, improve name
:lipstick:
opt-out telemetry; fixes #16131
Make a generic BackupMainService.pushBackupPathsSync function
Remove logs
Reduce duplication in BackupMainService
Remove remnants of vscodeWindowId
General clean up
Consolidate registerWindowForBackups calls
Remove workspace and IWindowService dep on BackupFileService
Make (empty)workspaceBackupPaths getters on BackupMainService
Move all handling of backup workspace path to main, use IPC
Use a timeout of 500ms for the first 5s, then a timeout of 2s
Only do flush things when the batch has something in it
Use Strict Null Checks In TS Extension (#16244)
Add font settings for markdown preview (#16302)
Re-introduce disabled hot exit tests
add support for Jenkinsfile
Tweak batch size
Reuse searchModel between measurement runs, more realistic
Use graceful-fs to avoid opening too many files, fix #16329
git extension icon decorations
update loader
scm viewlet decorations
[html] telemetry for completion in embedded content
Title Bar Actions Not Refreshed In Some Scenarios (fixes #16298)
ugily likes the past
fix some npes with viewlets
css tune ups
scm viewlet inline actions
fix dragging of unpinned viewlet
allow to DND viewlets in activity bar and keep order (for #15155)
[themes] built-in themes adoptions to findings from vscode-textmate changes
scm viewlet context menus
use loader with support for cached data
update node-debug
debug protocol: add exception configuration  and value formatting support.
Allow to hide entries from activity bar (for #15155)
Enable "Find in selection" within single lines
Include newline when expanding line selection
scoped menus
bad fix
fix broken SearchWorkerApp build
git status through extension!
Add fix to non-externalized string warning
HTML Server crashes fixes #16314
disable failing tests
fix off by one issue, #16277
toBackupPath: only lowercase on win and mac
fix extensions tests
link up errors in tests to promises
Rough initial empty workspace hot exit impl
Better loop condition
Log errors from worker
Log errors from feature providers as external (#16128)
Adopt TS 2.1.3-insiders (#16295)
Handle optional maxResults correctly
reset cursor width whenever cursor style changes
Apply Fuzzy filter on settings descriptions Telemetry reporting
:lipstick:
Disable goto outline and goto line
add install=true to vsix url
Cover other cases
Dispose default settings model. Single instance of default settings model.
Dispose model on clearing input
tabs: less borders
open editors: allow to open to the side
Revert unnecessary change
Remove changes that shouldn't go in
Tweak batch size and worker count
Fail test if testWorkspace doesn't exist
ignore unsafe headers
Let zone widget extends widget
Prepare to merge
Do not show define setting for Settings editor
Push: - Show count of settings while filtering - Initial state - show only first group expanded
Push changes - Separate header widget from the editor - Create Default preferences models always
Listen to position change
Push changes
rename
adopt marketplace changes
fix compile error
rename
use object hierarchy in API
Remove dependency on TerminalService
#16268 Enhance configuration editing service: - Ability to write into buffer
proper checked indicator for context menu actions
MainThreadSCMProvider.$onChange
proxy some SCMProvider features
ExtHostSCMShape.$getOriginalResource
use different git scm ids
fix npe
SCMViewlet reacts to active provider
MainThreadSCMProvider
debug: add configurations smarter inserting of empty lines
Viewlet overflow handling (#16233)
Revert some unnecessary changes
Clean up debug code
dispose workers properly when search is finished
Persist worker processes between searches
Correctly handle fileEncoding config option
Enable hot exit by default
Introduce Selection menu (#15156)
Max results and cancellation working more effectively
[json] update language service
Allow markdown preview to scroll past content (#15919)
allow text after the language id in a markdown codeblock (consistent with github, the md preview window and other gfm parsers) (#16239)
Take the exact max_results matches
result limiting by max
Extract settings strings in html extension (#16183)
Extract settings strings in css extension (#16184)
Use enum for md previewFrontMatter setting closes #16185 (#16188)
Cancellation
Refactor terminals configuration concerns
Support context menu action contributions for debug viewlet views
Revert "don't use XHR when having a proxy configured"
Remove typo
git: wire up refresh command to model
fix bad rename
refactor GitSCMProvider
git model update
debug: rendering glitch with renaming funciton breakpoints
debug: cleanup how we create view controllers
remove relative path warning
git model
:lipstick:
fix logging
fix missing error emit in extensions compilation
backslash escapes backslash, #16212
don't use XHR when having a proxy configured
debug: completions belong to process not stack frame
another fix for #15941
fixes #16149
wire up backuprestorer with new API to retrieve backups
Require gulp-tsb 2.0.3
Add launch config to debug gulp build file
debug: ux to add new launch configuration
debug: configurationWidget in launch.json
implement IRequestFunction with xhr
:lipstick:
also have ShutdownReason inside shutdown event
fix compilation errors
use async/await in git: main
remove encoding detection
Use lowercase drive names in backup file service tests
fixes #16154
Also hash untitled file names
Add test for parseBackupContent
Store backup metadata for untitled files
Store Uri.toString in backup file content
Move backup content parsing to BackupFileService
Return URIs from new get file functions
avoid redundant output and terminal in view picker (for #15262)
introduce shutdown reason (fixes #15509)
Impl IBackupFileService.getWorkspaceUntitleFileBackups
Cancellation by a list of promises per file
Add IBackupFileService.getWorkspaceTextFileBackup interface
Add test for stream.readToMatchingString
Document stream.readToMatchingString
Uplevel xterm.js
Extract markdown decs strings for #13102 (#16177)
Extract Json Extension package.json Strings for Localization
update node-debug: add skipFiles support
Organize TextSearch
Initial impl of getWorkspaceTextFileBackups
Batching experiments
Don't translate Markdown.category Closes #16087 (#16159)
Queue jobs in worker, profile
Show commands for new users the first day after installation (#15547)
Remove default viewlet experiment (#15383)
Assume Jsx For Implicit TS Projects (#15925)
debt - manually set command arg when getting menu actions
Remove default viewlet experiment (#15383)
move git lib over to extension
Rename to FloatingClickWidget
PreferencesWidgets: Implement Define preference widget
Debug console do not show tooltip
Picker for non editor views (fixes #15262)
restore 3min rule, #16098
checks virtual documents against all code editors, fixes #16098
git: output channel
git context actions
[json] wait for onReady before using client
[html] wait for onReady before using client
fixes #16138
Manage extension from status bar and viewlets (for #15155)
Investigate regression to `code <folder> <path>` in hot exit (fixes #15274)
perf - add memory info and loadvavg
ConfigurationService#lookup is responsible for 25% of startup time (fixes #15884)
node-debug2@1.8.2
worker batches
only update cursor width when its style is block or underline
align parameter signature
Update all configs on terminal instance creation
Avoid looping multiple times
Move instance configuration to terminalService
Isolate focus behaviour of terminal
Remember terminals focus state on exit
Indicate multiple licenses in rpm package
scm viewlet context menu
list.onContextMenu
Open file/folder dialog needs to know its target window (fixes #5796)
get rid of IViewletService#onReady()
more precise docs, #16056
more tests, escape \ when building, #16056
Adopt new snippet syntax in JSON schema defaultSnippets (for #15573)
[json] adopt SnippetString (#15573) and update to TS 2.0
remove newline
launch.json / tasks.json allow to reference any command
another fix for #15735
more escaping tests, #16056
Remove duplicate test code
extract scm menus
Infinite FileWatcher start->crash loop (fixes #16009)
fix issue with extension viewlet visibility
tighten scm interfaces
create active scm provider context key
:lipstick:
add "additional viewlets" menu item when there are extension viewlets
onDidExtensionViewletsLoad => onReady
command label
scm viewlet title actions
MenuId class
update node-debug
strictNullChecks for git extension
scm viewlet: wire up click
scm viewlet: input box
catch npe
hide empty resource groups
label
bad model reference disposal
update node-debug
Default settings: Remove lightbulb. Underline value on hover. Cmd + Click to copy or select a value
Default editor actions: Show context menu always when clicking on light bulb
[html] adopt SnippetString (#15573) and update to TS 2.0
fixes #16002
fixes #14895
configurationSnippets is an array
remove unused restarted proprety
fix #11060
:lipstick:
streamline scm extension api
fixes #15973
properly activate() the active viewlet
[css] adopt snippettext API and update to TS2.0
Default editor: Improve actions user affordance - Use light bulb
Use resource content providers for preferences
zen mode use key chord after all
restoreViewlet => openViewlet
clean up viewlet service
:lipstick:
debug compounds: "launches" -> "configurations"
Hardcoded number of viewlets in CSS (fixes #15969)
scm: style as git
Add GConf2 dependency in rpm spec template
merge with master
ctrl+alt+z to toggle zen mode
CountBadge is not disposable
use getModeAtPostion when computing snippets, #15398
use FileLabel in scm viewlet
scm viewlet reacts to scm service
remove unused css
Use more proper IPC stuff
Pull in curated keymaps (#15159)
Make telemetry always reflect UI (#15547)
update node-debug deps
Refactor: Rename settings to Preferences
Replace buffer.slice in text search with buffer.toString(undefined, start, end). This is much faster although it's not totally obvious why. But it's run for every line of every file in the workspace so it's very sensitive.  See #15384.
4 processes (still very rough)
[css] update languageservice (for #14121)
cleanup and shuffle some code
[html] fix tests
wip: show scm viewlet contents
[html] symbol information for embedded CSS and JS
Only look at extensions that have a package.json
wip: GitSCMProvider
fixes #15854
fixes #15852
[html] offer JQuery intellisense
share TypeScipt node_module amongst extensions
wip: scm viewlet
debug: polish appending to repl
debug: proper handling of output objects
unbind quit for windows for now
Consider introducing ctrl+q to close all windows on Linux and Window to compliment hot exit (fixes #15261)
:lipstick:
debt - use nicer syntax for optional methods
Hot Exit: promise handling is often bad (fixes #14052)
identify optional properties, #6907
Use commandsToSkipShell on instance creation
Ensure focus for active terminal instances
debug: last new line should be ignored since the repl elements are by design split by rows
wip: SCMProvider
EventMultiplexer
:lipstick:
config-editing, api-test use strictNull-checks, #6907
update vscode.d.ts with explicit null/undefined type annotations, #6907
configuration cleanup
minor import destructuring
terminalSupport: do not duplicate an terminl configuration interface
fix git package.json
debug view model: add some small tests
debug model test: move watch expressions
debug adapter test: initial config file content
debug tests: breakpoint conditions
extfs.delSync and tests
Validate backup workspaces on startup
extfs.delSync and tests
use model-utils to build value-tree, fixes #15834
Revert "zen mode -> focus mode"
fix validatePosition, fixes #15882
add feedback from pr review
Add IKeybindingService.resolve
Works slowly, in 1 proc, no progress
Make cmd+k clear terminal on Mac
Always show watermark, first session experiment (#15547)
First session watermark (#15547)
Improve deleteAllLeft for multi cursor mode
Add telemetry when disabling keymaps (#15159)
Add performance test for TextSearch
update node-debug
Add keymaps the top-level Preferences menu (fixes #15159)
Ensure backup paths ignore case on windows and mac
[html] fix for embedded css, stackoverflow
Remove some Typings Files From TypeScript Extension (#15842)
[php] use grammar from atom/language-php
debug: Support objects when sending output to debug console
debug model: introduce OutputExpressionContainer
replViewer: renaming and polishing
[html] refactor and simplify embeddedSupport
:lipstick:
first cut backup file model
fix missing return
scm api: getOriginalResource
focus mode: esc to exit have lower weight than close reference search
debug: do not massage output in the repl specially.
debug: remove nasi escape codes when computing string heigh in repl
:lipstick:
git content provider
hot exit - add version id getters to models
wip: git extension typings
wip: git extension
wip: extHostSCM, mainThreadSCM
cosmetics
fix #15349
don't stop to log after first signal, #15456
fixes #15878
Zoom level setting should be rounded off before writing to settings file (fixes #15877)
debug: logToRepl and appendReplOutput should not be exposed by debugService
fix compile errors
initial proposed SCM api
add test for #15834
move dirty diff css to contribution
fixes #13197
simplify ReferenceCollection
fix test
update snippet doc with supported variables, #4956
build - add remap ignores for less errors in build
adjust width for CJK characters
Move delete all left action to contrib
Flatten configuration keys for logging (fixes #13653)
add variable-builder methods to snippet string, #4956
travis --yes-colors
[html] embedded css/javascript in attribute values
debug test: adapter merge
wire up snippets, #4956
make parser produce Variable-type, #4956
debug: allow adapters to contribute snippets
json: introduce IJSONSchemaSnippet
debug: remove enableBreakpointsFor schem contribution
createModelReference(...)
unwrap reference of promise
no verbose
don't run fwd-slash tests on windows, #4956
VSCODE_BUILD_VERBOSE: false
fix integration tests
implement common variables, #4956
add ISnippetVariableResolver, #4956
debug protocol: support objects in OutputEvent
:lipstick:
ignore diffs for empty original documents
ReferenceCollection in TextModelResolverService
reference collection tests
try gulps silent option
does folding work?
less verbose build output
Go to definition messes up cursor history stack (go back) (fixes #15735)
pfs.writeFile should serialize parallel calls to writeFile (fixes #15651)
Command palette reveals commands in a bad way when typing (fixes #15753)
show missing keybindings (part of #15742)
Quickpick filter does not apply on promise resolution (fixes #15662)
git clone - allow to create folder from dialog
perf - tweak the output in console
Cancel backup promises on save and dispose
Only resolve paths in REPL if path is relative
more cleanup
remove unused
Indicate that code opens directories in code.desktop
Consistently use utf-8 for backup encoding
Use IWindowsService to get window count
Update watermark for folder / no-folder cases (#15547)
Store file backup resource fsPath in first line of file
do a sync check for the editor before waiting for an event, fixes #12280
[typescript] update grammar
introduce ReferenceCollection
[html] Format embedded JavaScript
hook up backup restorer for files
remove unnecessary casts
remove duplicate ITextEditorModel
remove need to resolve inmemory resources
zen mode -> focus mode
allow to provide regexp when asking for word ranges, #15724
restore 'old' format action, fixes #15312
remove telemetry to track who is using internal snippet synatx, #3210
move ResourceContextKey, #15558
zen mode: double esc to exit
align zen mode keybindings
introduce backup restorer and use it for untitled
config has value tree and full tree, fixes #15552
fixes #15714
get rid of untitledToRestore
restore untitled via editor input factory
[html] update server & client libraries, add SnippetString
dispose contentChangeEventScheduler
Buffer untitled/text file model changed events and make the event type consistent (fixes #14186)
:lipstick:
perf - add more platform details
debt - more real events over eventemitter
Electron update: DND from explorer to editor area no longer works (fixes #15663)
Log workspace configuration keys (fixes #13653)
Convert from 1- to 0-based indexing
adopt more environmentService.isExtensionDevelopment
Update doc for proposed API
Move BackupModelService to a workbench contribution
Remove now unused params
isBackupEnabled -> isExtensionDevelopment
debug: fix test failure
fix casing issue
snippets - handle escaped closed curly, better compacting
zen mode: do not touch custom title bar, just manage full screen
add comments, remove cast
dirtydiff -> baseline
adopt resolver service changes
ask all dirty diff providers
hot exit - always opens inside a new window
debug adapter cleanup and restructure
coffeescript: use new way of contributing breakpoints
rename exit zen mode action to workbench.action.exitZenMode
enfore stable sort, fixes #15585
uglify and JS synatx from yesteryear, #15623
#15361 DefaultSettings model include detailed ranges
list webview-pre as required resource, #15623
:see_no_evil: fix 'off by one'-issue
migrate [bower|package]JSONContributions, #15573
add builder-style functionality to the SnippetString, #3210
check electron version at dev time
check electron version in code.sh: osx linux
debt: move IWindowSettings to platform/windows/common/windows
#15361  Refactoring - Create a model for default settings and key bindings - Move default settings actions as editor contributions
Implements current line highlighting with modes 'line', 'gutter' and 'all'.
Include info about files to open (#15321)
Check if there is a workspace folder (fixes #15594)
Add scrollback terminal setting
Uplevel xterm to 2.1.0
Disable backups when extensions are being debugged
Measure duration separately (#15321)
Revert "#15361  Refactoring"
Collect workspace stats when opening single files (#15321)
Use Preload for WebView
Enhanced diff view
Add support for decorations that cover the entire margin
Add add/del mark to marginDomNode in diff view zone
Add support for marginDomNode in view zones
#15361  Refactoring - Create a model for default settings and key bindings - Move default settings actions as editor contributions
Remove ILifecycleMainService's dependency on electron
debt - get rid of flags.ts
zen mode: cmd k z
zen mode: esc to exit zen mode with lowest weight
zen mode: window.fullScreenZenMode setting
zen mode: use chord k + z as default shortcut
zen mode: add to view menu
zen mode
adopt [bower|package].json default proposals, #3210
use IModel for IResolverService now that it lives in editor land
[html] resolve JS completion proposals
dirty diff: contributable models
mirgrate typescript completion item provider to TM syntax, #3210
SnippetString and improved CompletionItem.insertText, #3210
partService: only expose isVisible(part) for checking if a part is visible
move resolverService to vs/editor/common/services (for #15558)
:lipstick:
perf - better formatting of environment
More performance telemetry (for #15559) (#15556)
debug: do not use background css shortcut property in actions widget
fixes #15537
[html] add embedded JavaScript support
wip: dirtydiff as a workbench concept
Remove fileExists check in BackupFileService.loadWorkspaces
EventTypes.AFTER_UNLOAD -> BEFORE_CLOSE
fix css glitch with opacity in tabs and actions
fix regression from hot exit shutdown
update snippet doc
add implict $0 to the end of snippets if missing, #7094
debug: do not steal esc if breakpoint widget not visible
:lipstick:
debug: workaround for stale variables response when setting variable value
debug: refresh variables / tree on each evaluate
don't attempt to make very large edits more minimal, #15221
I am ok with this for #14062
fixes #15491
fixes #15462
debug: move more breakpoint widget logic to debugEditorContribution
debugActions: destructure debug import
debug editor contribution: manage breakpoint widget lifecycle
Add .conf and .cfg file extensions for ini language
add handshake support
normalize newlines of text edits before comparing them to document, #15385
move minimal edit compute logic to service worker, prep work for #15221 and #15385
fix f√ºr das kompilat
improvements for #15280
more :lipstick: hot exit lifecycle
debug protocol: remove 'supportsValueEscaping' capability
:lipstick:
debug: do not massage values in model, each viewer decides on how to present whitespace
debug: no need to set debugService to null in action.dispose
Proper Range.contains-check and stable light-bulb with multiline errors, fixes #15488
document variable behaviour
When sending 'extHostUnresponsive'-event only include activated extensions
This reverts commit 23d3de42add209c0e3dc9246377fa12f00ffa658.
Add tests for new TextFileEditorModelManager events
Add tests for new UntitledEditorService events
Move backup unload logic to an event
Add .zsh-theme to shellscript extensions
Revert "remove unused isBuiltin-flag when registering a feature, #15411"
Cleanup (#15321)
Evaluate if an untitled backup exists in UntitledEditorInput
Pass regular untitled scheme file with small path to UntitledEditorInput
Pass restore resource to UntitledEditorInput as resource
Delete emacs tmp file :(
remove unused isBuiltin-flag when registering a feature, #15411
completion provider registering for `*` shouldn't override word-based completions but merge, fixes #15411
fix missing return
#15361 Separate extension settings and recommendations
Allow debug adapters to customize the behavior of 'restart'
Resolve relative paths
#15361 Enable actions in default settings
debug: remove X to delete breakpoints. There are enough alternatives to do this action
expect missing engine field
Update to electron 1.4.x (#15298)
move editor.formatOnSave into editor category, #15290
:lipstick: clean up windows service url handling
snippet features and grammar, #3210
[html] add css support to html extension as library
know what vscode-engine extensions are targetting, #3210
account for bad syntax in static snippets, #3210
Moved/Refactored openSettings as a service
No need to register to lifecycle service
Dispose listeners on shutdown
#15361 disable the actions in settings
#15361 Provide actions to select/copy from default settings
Provide workbench.action.nextEditor/previousEditor that cycle through current active group (fixes #15225)
External file watcher fails for editors that do atomic saves (fixes #15111)
shouldRestoreLastOpenedViewlet => shouldRestoreLastOpenedViewlet()
Improve REPL link highlight regexp
Revert "Uplevel pty.js"
Support opening files through URL handling (fixes #4883)
Add yaml front matter support for Markdown (#15218)
Uplevel pty.js
Include tree explorer viewlet in workbench
Include duration and options in searchResultsShown (#15321)
add ISuggestion#snippetType, #3210
debt -remove workbench from config
snippets - update snippet help text
debug: watch expressions use flex
debug: improve breakpoint pane, use flex
debt - enable layering tslint rule
better import-pattern config
Add logs to BackupMainService.saveSync
enable import-pattern tslint rule
debt - don't have commonjs-dependencies in common layer,  #15293
Ensure telemetry service is available in affected tests (#15321)
work around broken snippet files
use new snippet parser
enable duplicate imports tslint rule
add tslint duplicateImportsRule
fix #15347
remove deprecated attributes from launch.json
Layer breakings #15293
#15293 Layer breakage fixes
debug: simplify breakopint line number - no longer show how the line number jumped
help for #15340
Debug hover should use scope information
allow selecting internal/external snippet parsing
debug: minor polish of hover
more snippet parser test
move TMState into node folder, #15293
debugHover - restructure imports
debug: restructure imports
debug:simplify  KeyValueOutputElement, do not cache
fix viewletservice properly
debug: add debugActionsWidget.css to reduce size of debug.contribution.css
repl.css - remove some unused rules
fixes #15304
avoid duplicate dependency
one more for #15293
title - opacity for inactive windows
pass tests through more hygiene checks
hygiene comment
revert activity bar zoom prevent
View Menu Items are disabled inappropriately (fixes #15323)
Shuffle BackupMainService around
Move BackupMainService files to vs/platform
Add telemetry events for opening/closing editors (#15321)
update node-debug; load env vars from file
Move treeExplorer to `window` and fix #15296
debug: surface reverse continue action
debug: reverse continue in model
Explorer doesn't fit width when double clicking on the resize handler (fixes #15242)
lint: fix mainThreadTerminalService layer breakage
debug: switching breakpoint condition should preserve the condition in breakpoint widget
lint: fix gitActions layer breakage
remove console.log
remove `windowEvent`
lint: fix urlIpc layer breakage
lint: fix request layer breakage
lint: fix extension management layer breakage
lint: fix ParsedArgs layer breakage
lint: remove semver dependency from gitServices
move .nopanel rules to panelpart.css
breakpointsWidget - restructure imports
debug: fix action labels
ux - take activity bar out of zooming
enable proposed api only when developing extensions
New macOS bar - intellisense issue (fixes #15258)
tweak rule and config,  #15293
add rule for bad node_module imports, #15293
move workbench.main.* into electron-browser namespace
fix some layer breakers for #15293
fixes #15194
debug: getCachedCallstack -> getCallstack, hide fetchCallstack from IThread
debug protocol: add restartRequest
recompile rule, #15293
debt - add lint rule to check for layering violations, #15293
debug: reveal top stack frame on active process change
debug: rename setFocusedStackFrameAndEvaluate -> focusStackFrameAndEvaluate
debt - move files around to fix various layer breakers
better error handling in extfs tests
polish
fixes #15263
add release not caching support
simplify layouting
settings naming
Avoid mnemonic conflicts
Move viewlet restore logic to viewletService
Remove comment
Fallback to file content if restore content fails
Make TextFileService.getDirtyFileModels private again
Remove unused services from UntitledEditorModel
Remove unused code
Revert additional changes made to FileService
Remove a bunch of unused code in FileService
Remove rootDir from the markdown ext's tsconfig
[themes] Color for super type
IBackupFileService.doesTextFileHaveBackup -> hasTextFileBackup
Move restore backup workspaces code block down
Clean up
Remove debug log
Optimize calls to BackupService.loadSync
IBackupMainService.doesWorkspaceHaveBackup -> hasWorkspaceBackup
Rename IBackupService to IBackupMainService
update node-debug
wire-up new snippet parser and old snippet tests
Naming and clean up
debug protocol: adding reverseContinue
Add .cfg in properties mode and update case of properties
debug: send thread request after configurationDone request
debug: fix opening internal modules
public => private
debug: remove support for composites
Add files to Recent Files list when brought in via DND (fixes #7935)
Revert "debug: remove support for top level debugServer"
debug: compounds in launch.json
snippets - TM snippet parser
fixes #14128
title - better simulate mac behaviour when opening path from title
Can't drag debuggee window (fixes #15232)
[scss] update grammar to to atom/language-sass@0c65009 (2016-10-16)
Remove unused services
Revert "debug: remove support for top level debugServer"
Naming
Various cleanup
debug: remove support for top level debugServer
debugConfigManager - restructure imports
uhoh #15230
fixes #15230
use strict instantiation service in main
Open viewlet/switch to default viewlet when toggling extension
missing merge changes
Split didExtensionViewletLoad from  didViewletToggle
title - context menu on click
title - tweak box-shadows
title - fix devtools opening
Preserve badge on add/remove viewlet
Support HTML comments in Markdown (#14573)
Improve Markdown Syntax Highlighting of Nested Lists (#14634)
Remove jsconfig.json lightbulb hint
ipc: remove vscode:telemetry
[typescript] update grammar
Remove unused event
Remove awkward workaround for extension viewletid
add telemetry service to main process, for update
Update to VSCode-Textmate 2.3.1
Improve Markdown Html Block Colorization (#12696)
snippet parser work
fix linux download action
editor: do not reserve space for horizontal scrollbar if it is hidden
debug actions: first dispose listeners on dispose
debug: move debugEditorActions to a seperate file
Mac: Double clicking the title bar doesn't maximize the window anymore (fixes #15167)
update: fix linux
title - smarter devtools handling with custom title
title - prevent recompute styles on layout
title - fix for debug widget
debug: if there is a thread running focusedThread should not be null
title - fix quick open positioning
title - smoother message positioning
Highlight file:// URIs correctly in REPL
Highlight links without a column in REPL
Highlight relative paths in REPL
repl: destructure imports
title - fix message list positioning
title - first cut of no more css madness
introduce git clone action
:lipstick:
title - make fullscreen state available to browser
Use protocol.d.ts from TS npm module
replViewer - destructure imports
fix issue with title bar and full screen
set default to native for now
fix keybinding conflict
Windows 10: Jump list no longer shows entries once you removed a single entry from "Recent Folders" (fixes #15052)
node-debug2@1.8.1
Clear out workspace backups after all unloads
Highlight Markdown Image Starting ! Punctuator (#12841)
Restore enable/disable extensions & preserve enabling order
Prevent exception when closing empty workspaces
Force confirm dialog when closing single window on Mac
Put Viewlet related things to ViewletService
Add ViewletService as IViewletService
Move setup to suiteSetup
fix merge troubles
Revert "inform mac users on title change"
debug: focus thread / process when clicked upon
debug: call stack view do not react on focus stack frame changes
snippets - static snippets should be TextMate
debug: remove unused callstack and variables telemtry events
debug: introduce viewModel.isMultiProcessView
inform mac users on title change
ipc: update fixes
Custom window title (#15082)
improve call stack running / stopped msgs
Windows: task list not updated until doing a full restart (fixes #15093)
better telemetry event, #14758
add telemetry about completion items and the use of snippet synatx, #3210
:lipstick:
update service over IPC
ipc: drop update related IPC messages
add updateIpc.ts
move update to platform
resolve default value for placeholder on same line, fixes #7093
snippets - move code around
Unable to open folder from task list that contains spaces (fixes #15087)
another ExtHostConfiguration test, #10583
[less] test for #14119
nls comments fixes #14993
call browser.setZoomLevel as early as possible
fix developer related actions
first cut of WorkspaceConfiguration#inspect
forgot service adoption
fix bad position fixed with browser zoom
wip: update :lipstick:
remove file from recent file list if not found
remove unused
wording
Deleting `workbench.statusBar.visible` doesn't update View menu (fixes #14448)
Move more operations out of oneCursor
More cleanup around editing commands
Move column selection ops out of oneCursor
Move type operations out of oneCursor
Prepare type cursor command for moving out of oneCursor
Prefer using column instead of offset
Eliminate IPostOperationRunnable
Make markdown image dimensions configurable using a custom image renderer (#14811)
Always emit events when cursor state changes (even if the previous state is invalid)
Add tests for electric character behaviour
Move more code out of oneCursor
Introduce cursorCommon
Move out more operations from oneCursor
Re-enable hot exit on Mac
Enable all window restore on quit
use different data model to prep ExtHostConfiguration for #inspect knowledge
#14167 formatting
another ExtHostConfiguration test, #10583
wip: pimp up update manager
fix problem with getConfigurationValue, #10583
more tests for exthost configuration, #10583
improve TrieMap in prep for #10583
[less] update grammar to atom/language
:lipstick:
add more tests for TextModelResolverService
ipc: add proper events to update service
Only show folder name in Windows Taskbar (fixes #14963)
Show "Open File" when not opened on a folder
Use 'Show All Commands'
debug actions widget: update dropdown on thread focus
debug view model: onDidFocusProcess
debug: do not reconstruct whole action bar if actions did not change
debug: process dropdown in actions widget
comments
fix any use that causes issues
remove unused options
no more IEditorService.resolveEditorModel()
adopt ITextModelResolverService for resources
make text model resolver available in platform
debugActionsWidget: use action weights
debugActionsWidget: destructure imports
ipc: remove vscode:startCrashReporter
ipc: remove vscode:openExternal
#14841 Tests for enablement service
fixes #6644
Move more code out of oneCursor
add test case, #14942
debt - let the file tracker handle disposes() only on opened editors
IConfigurationService.keys()
Always load backups using utf-8 encoding and ignore etag
Rename confusing service
External -> Extension
nls
Better naming
Validate user provided viewletId
Make activity bar icon class unique
ipc: remove vscode:showItemInFolder
Vertical centering text in tree item label
#14841 Tests for extnsions actions
For the sake of browser compatibility and linting
Clean up treeExplorer's ID
Restore untitled files on window reload
nls and consistent naming for toggle tree explorer action
Put actions for tree explorers to common layer
First attempt
External Viewlet -> ExtViewlet
Extract word operations out of oneCursor
Extract some move related code
Always validate cursor state
ipc: remove vscode:closeExtensionHostWindow
Move explorer entry point to parts/explorers
ipc: remove vscode:log
:lipstick:
ipc: remove vscode:setHeaders
ipc: remove vscode:toggleMenuBar
ipc: remove vscode:setDocumentEdited
ipc: remove vscode:switchWindow
ipc: remove vscode:showWindow
debug: support launching multiple launch configs manually
debug: always enable launch config dropdown
[shellscript] update grammar to textmate/shellscript.tmbundle@2677fdc (2016-11-03)
[json] update language service
#14841 Complete test coverage for extensionsWorkbenchService
debug protocol: add 'supportsValueEscaping' capability
ipc: remove vscode:focusWindow
ipc: remove vscode:openRecent
ipc: remove vscode:flashFrame
ipc: remove vscode:setMenuBarVisibility
ipc: remove vscode:setRepresentedFilename
ipc: remove vscode:openDevTools
ipc: remove vscode:setFullScreen
ipc: remove vscode:toggleFullScreen
more polish for #10739
#14841 Tests
ipc: remove vscode:openNewWindow
ipc: remove vscode:closeFolder
fixes #13857
Debug: hover on breakpoint should show expression and hit count
ipc: remove vscode:windowOpen, _workbench.ipc
ipc: toggleDevTools
add test for #14861
Sometimes the 'scroll' class is not removed from tabs container after dropping (fixes #12623)
Add option to remove tab close buttons (fixes #10739)
Update package.json
Add Translation Memory eXchange (TMX) support
Show dirty indicators for untitled files
Remove TODO
keys - add tests for command args
Clean-up in oneCursor
encapsulate cursor model state in CursorModelState
Clean up CursorMoveHelper
fixes #14860
Support arguments when defining keybindings (fixes #14854)
support to declare a json schema attribute as deprecated. #14260
:lipstick:
ext.name != ext.main
catch bad send
remove 'vscode:reloadWindow' ipc event
add _files.openFolderPicker command
move restore sidebar to reload()
windows ipc: adopt openFile/FolderPicker
proper window service: first steps
#14841 Move defaultIcon to browser folder
#14841 Move browser stuff to browser folder
#14841 Move extension actions to browser (cont..)
#14841: Move extension actions not depending on electron to browser folder
#14841 Listen to enablement changes
repl: accept suggestion and evaluate on enter. Accept suggestion on right arrow
add extension host heart beat and log telemetry event when ext host goes dark, #14758
add tests
debug: do not cache children for expressions (tree does that automatically)
fixes #14835
#14821 Move extension enablement closer to extension management
debug: tune watch expressions pane delaying
open editors: disable tree twistie
window title - show user home with ~ prefix
title - update live on config changes
Show full path in Title Bar (fixes #12625)
Provide an option to insert a final newline (fixes #1666)
Access modifiers
Clean up unused external viewlet order
Use JSON/interface over the wire
Refactor and consistent naming
Write to workspaces.json exclusively on main process
Display external viewlets on all extensions loaded
CursorMoveHelper caches tabSize
node-debug2@1.8.0
Move explorerExtensionPoint from platform to workbench
Make terminal instance regex readonly (TS 2)
Add more useful error message when terminal launch fails
Execute onClickCommand on Main side
tests - more robust error handling
make electron ipc use IPCClient and IPCServer
Move error handling to main side
Set registerTreeExplorerNodeProvider as proposed API
debug: drag n drop watch expressions
debugViews: destructure imports
var -> let
Adopt StandardTokenType in electricCharacter
characterPair uses StandardTokenType
debt - one less editorService.createInput() call
EditorOptions => IEditorOptions
debug: allow variable to be set to an object
proper fix for #14711
Capture current behaviour of `notIn` (write tests)
Remove LineToken.type
tokenIterator uses only standardTokenType
debug: focus process as soon as created if there is no other
debt - remove unused migration code
add error handler to file service tests
properly clear editor stack
docs
:lipstick:
debt: push down protocol agnostic IPC code
fix tests
Introduce and begin adopting StandardTokenType
Group language configuration types together
Begin to clean up ElectricCharacter
improve handling of file delete events
Remove unused code
Eliminate ILineContext
Rename supports.LineTokens to RawLineTokens
Renaming in extensionRuntimeService
fixes #14760
History: delete entries that are deleted or moved on disk (fixes #14761)
debug: label of a stack frame is an expression
debug: always allow bps to be removed
introduce ${fileBasenameNoExtension}
enableProposedApi is optional
add gitter chat badge
Allow files with merge status to be staged.
Move API to proposed dts
Improve robustness (#13854)
sample for vscode.proposed.d.ts and implementation
debt - don't use bind because it hinders proper typechecking
debt - move error handler code
Provide workbench.action.closePanel for keybindings
Cleanup: Move extensionsWorkbenchService to node package
extensionsWorkbenchService: Remove deps on electron-browser
Move extensionsInput to common
extensionsWorkbenchService: Remove electron browser dependencies
debug: schedule the update of the call stack tree if the viewlet is opened after a session started
make #6810 a little bit better
tests - more error handler for flaky tests
fixes #14740
when saving expect the extension host to be virtually dead, #14635
add >= version parsing
tests polish
better fix for #8202
fix regression with incomplete items/providers, #13835
remove unused property
editor part - css fix for dragging cursor
ConfigurationRegistry handles contributed configs very poorly (fixes #14272)
better fix for #14679
debug: breakpoints remove all reference to Source, use only uri
check for incomplete results when *first* completion call happens, #14679
incomplete state should be computed on all items, not only on filtered items, #14679
perf - ignore snippet provider when snippets are turned off
cleanup extensions menu
debug: breakpoints reduce reference to Source
debug: polish imports
debug: import polish
Revert "fixes #14272"
fixes #14738
Add tests for zoom level functionality
Linux: DND of editor tabs flickers (fixes #14470)
Code folding lost when switching files with back/forward (fixes #8202)
config - add extensions.json too
add conditional to rpm spec to test for arch, fixes 13616
fix config tests
storage => storageService
debt - workspace settings only supports specific files
extensionHomePath => extensions-dir
Don't restore workspace backups when the dir doesn't exist anymore
Remove unused function
Remove workspace.json as it's now redundant
Split workspaces.json into 2 files
Don't hash backed up untitled resource names
also reset quickfix state when mode stays the same, fixes #14141
reveal line when triggering suggest, fixes #14195
debt - move some things to browser namespace
Listen to UntitledEditorModel dispose from BackupModelService
more promise handler for #14596
Listen to TextFileEditorModel dispose from BackupModelService
add user-select style, fixes #4761
debt - remove 'var' usage
use Range.contains instead of Position.isBefore, fixes #14561
bump 1.8.0
.asar file comes and goes (fixes #14630)
Wrong usage of fs.utimes (fixes #14645)
also take number of highlight ranges into account, fixes #14660
Rename column to character #14598
debug: no need for model.clearWatchExpressions
debug: do not surface expression.reference
debugViewer: destructure imports
debug: make breakpoint decoration span the whole line
fixes #14615
fixes #14659
debug: get rid of IExtHostConfig
debug: fix issue with not passing outFiles
debug: fix loadMoreStackFrames scenario
fix telemetry event for save participants
debug: fix issue with not passing outFiles
debugActionItems: polish
debug: support debugServer per configuration
debug: fix loadMoreStackFrames scenario
fix telemetry event for save participants
debug: polish and simplify debugConfigurationManager
debug: simplify transition to running state
add compile script
[html] remove console.log
send telemetry info as initData, fixes #14632
fix #13668
update distro
Update node-debug2
update node-debug
fix #14611
more output for #14596
part of #14598
yet a better score algorithm, #14583 and #14446
[ini] remove ini.tmlanguage
onInitialize() should check if params.initializationOptions is null fiixes #12259
[ts] update grammar
fixes #13561
revert heuristics change, more tests, #14583
fixes #11918
debug: support evalaution when no stack frame exist
fix #14564
oss input
fixes #14576
fix #14468
Revert "explorer: keep focused item even when editors close"
fixes #14550
fix telemetry for cpus/memory
Prefix setProcessId with an underscore
Uplevel xterm.js
Change terminal scroll top/bottom mac keybindings to use cmd+
Force nowrap on terminal lines
Update node-debug2
ExtensionsRegistry only tracks extension points
Further simplifications to ExtensionsRegistry
Simplify extension point handling
emmet - read grammars contributions through API
Avoid unnecessary reading from ExtensionsRegistry
emmet: wait for onReady signal before interacting with extensions
Extract `isValidExtensionDescription` out of extensionsRegistry
Remove extraneous boolean (#14500)
log save participant timings, #13492
update node-debug
use v1.14 of debug protocol module
fixes #14343
fixes #14487
debug hover align with regular hover
fixes #2814
cancel n-1 request when resolving incomplete result sets, fixes #13835
debug repl input tune > on win
fixes #12842
fixes #12752
debug: distinguish if there is a process left on session end
fixes #13636
debug: do not get named array variables and then all variables -> duplicates
fix #12688
#14379 Do not show manage action for uninstalled
Debug: show expression or hit count based on relevancy
#14442 Exclude self from dependent
function vs function-call, fixes #14490
fixes #13700
debug repl input: center > character on win
debug: fix whitespace rendering
fixes #13813
improve top-score heuristics, fixes #14446
update to typescript 2.0.6
output: first create the scoped instantation service and only then construct the editor using it
fixes #13919
make sure model data is removed before changing markers, fixes #13513
debug: always have a focused process
fixes #14366
add space
fixes #14459
quickopen: Position cursor at the end of input to allow right arrow (open in background) to function immediately
fixes #14519
debug: support for 'type' in SetVariableResponse
debug: align Input box for hit count condition
Toggle maximize panel restore the old panel height
fixes #14457
fixes #14455
d.ts changes
distro
debug: set 'initializing' state earlier
Updating due to build failure
Update to VSCode-Textmate 2.3
Down indicator for dropdown
#14379 Check for user extensions and canEnable
#14379 Disable manage button while installing / uninstalling
fix #14409
#14379 ExtensionsView: Move secondary actions to context menu
property set overwriteBefore, fixes #14445
don't wrap error messages, fixes #14407
Revert "escape from old rewrite logic by adding a stupid comment, #14378"
escape from old rewrite logic by adding a stupid comment, #14378
fixes #14254
loc clarification
debug: always use the first configuration even if none is chosen
fixes #14354
fixes #14251
update distro
do not use disconnect action for extension host debugging
debug: improve setting wording
Debug: inform user how to enable expression/hit-count breakpoint
debug: no need to set initializing state when attaching, it will be done inside the createProcess
update tests for #13924
go to next signature help provider when previous didn't yield a result, #13924
Open in background hotkey should only activate if cursor is at end of line (fixes #14350)
Too many editor group layout actions (fixes #14382)
'defaultSideBySideLayout' naming (fixes #14387)
Middle vs Center labels (fixes #14383)
Ctrl+Alt+ keybindings should not be used (fixes #13567)
Freezes when Chrome generates userDataDir in workspace (fixes #14301)
try to fix #14349
more output for flaky test (fixes #14377)
use quotes for __ext_ search
help menu add seperator
remove periods
fixedOverflowWidgets setting
language
update distro
less flashing background on closing editors
Revert "Uplevel xterm.js"
Update node-debug2
enable automatic typings acquisition by default
Uplevel xterm.js
update node-debug
Use treeLabel in toggle command
Change HTML grammar to be more precise (embedded modes). fixes #14295
Move static css rules to css file
Address feedback
Uplevel pty.js
Update dts doc
Rename expression -> Edit expression, fix #14127
Edit the truth, not the generated file (27c2cf41923ad8b7a71a13c221c7c27490c00fea)
Address feedback
missing d.ts change
Trigger loading configuration for embedded modes
Remove _getLineModeTransitions
Prevent terminal exception
Restore state for Keybindings settings file
Add Keymap & Video Help Menu Items
more keybindings to toggle editor layout
disable VS'ish keybinding since it collides with existing, fixes #14255
no language feature for large models, fix #12689
Enable/Disable Context menu Enable All / Disable All actions
fixes #14248
fixes #14249
fixes #14024
ExtensionActions: Rename Global to Always
Add extension dependencies to telemetry data
remove unused css
Simplify WordHelper
debug: only send 'indexed' for variables request when dealing with chunks
use user-friendly names for extension recommendations
debug: always pass overwriteBefore for each Suggestion
Generate mode transitions from TM tokenizer (#14136)
Prepare decodeTextMateToken for returning modeId (#14136)
Extract & add tests for decodeTextMateTokens (#14136)
Record language for each seen scope (#14136)
Adopt TMScopeRegistry and improve tests (#14136)
Introduce TMScopeRegistry (#14136)
fixes #13297
cleanup
fixes #12125
fix #14256
fixes #14280
[html/css] decorators for embedded css
[html][css] diagnistics for embedded content
#2882 ui affordance for disablement
debug: do not auto expand in repl since we have snippets
Minor typo fix.
debug: no need for the variable to take stackFrame id into account for its id
Revert "delay event forwarding and hope for updated textfile service, fixes  #11339"
fixes #14272
debug: respect variable.evaluateName
remove distinct workaround
#2882 Do not show enable/disable when launched with  -disable-extensions
delay event forwarding and hope for updated textfile service, fixes  #11339
fix compile errors
change to defaultSideBySideLayout
also send isDirty-flag when forwarding model changes, #11339
format.enable label to informat about required restart
fix #13299
adopt new event for when editor layout changes
search gallery for specific language extensions
debug: surface multiple debug sessions
better editor layout management (fixes #14105)
fix #14223
allow debugging cli process
fixes #13745
VS Logo: do not animate if I am not seeing watermark (fixes #13875)
'Open Preview' button for markdown files is not available anymore (fixes #13476)
debt - more update moving
debt - move update related code to workbench/parts
horizontal: improved editor layout
extfs - provide readdirSync
update node-debug
use latest debug protocol
More caching in RenderedViewLine (LTR case only)
Introduce TextModel.mightContainRTL()
Add strings.containsRTL
Remove unnecessary notifications
Improve ViewLine rendering perf
Implement terminalTextSelected context key
Uplevel xterm.js
Add setting to prevent copying empty selections
Adopt TypeScript's readonly in editor API
Add @event to events in monaco.d.ts
Adopt TypeScript's readonly in core data structures
Use %{_bindir} to install bin command in rpm
Cleanup execution terminal service
Clean up terminal api tests
Clear terminal queued requests once they're actioned
Remove wait loop in extHostTerminalService
Remove unnecessary call to registry at workbench startup
Revert "search gallery for specific language extensions"
Remove unused imports
Coerce external viewlet icons into style similar to stock ones
Restore external viewlet on startup
[html] only enable embedded content support on demand
[html] add hover for tags and embedded css
[html] embedded content documents updating, refactoring
[css] screen cheese on color completion item icon
Revert hot exit compeletely
Revert "Have TextFileEditorModel handle restores"
Revert "Correctly clean up workspace backups when exiting"
Revert "Hot Exit: avoid direct calls to fs.readdir()/fs.readdirSync() (fixes #14055)"
fix bad editor flashing on startup
Add progress indication for long running resolveChildren
Clarify some code
Let user contributed explorer icon be a string
Handle all error by showing message
Consistent naming
Hook refresh button to update input
Always preserve stock viewlets order
Add refresh button to toolBar
Correct ID for toggle action
Move VIEWLET_ID_ROOT to one place
Minor clean up
Polish doc language
Clean up
Remember order of external viewlets
Update doc
Open file explorer if last viewlet before close is external
Remove shouldInitiallyExpand
Naming
Avoid re-rendering the tree when icon is clicked
ContentProvider -> TreeExplorerNodeProvider
Handle errors caused by provider
Make naming consistent
Use providerId instead of 'pineTree'!
Clean up format issues
Add back pre-commit hygiene
Clean up
Refactor activitybar and clean up
Retrieve list of registered viewletes to populate toggle custom explorer command
Populate command with enabled/disabled viewlets
Only display whitelisted viewlet icons on activity bar
Read config from global storage
Let ViewletRegistry handle batch registration and notify ActivityBarPart
Split explorer's extension point to a separate file
Add license
Remove unused svg files
Accomondate new non-promise provideRootNode etc
Placeholder for toggle external actions
Give default value to label, hasChildren, etc
Hook up hasChildren
Add actions
Update API
onClickCommand -> clickCommand
Make nodeProvider generic and add contentProvider
Rename treeContentProviderId to treeExplorerNodeProviderId
Resolving onClickCommand and clean up
Add initial onClickCommand
Completely remove children
Remove children on ExtHost side and refactor
Remove unused go outline stuff
isExpanded -> shouldInitiallyExpand
Descriptor id needs to correspond to Viewlet's
Allow icon to be set via explorer contribution
Avoid same order for multiple viewlets
Allow tree label to be set
More consistent naming and clean up random strings
Better naming and some doc
Keep a local tree at extHostExplorer side
Reduce calls to refresh tree to one call
Remove JSON as ITreeNode is all primitives
Clean up
Remove isChildrenResolved from ITreeNode
Add click behavior to Controller
async loading children
Clean up
Hook up provider mechanism and add onClick
Make TreeViewlet render correctly
Refactor and put id as property of TreeContentProvider
Add icon to activity bar (loaded separately than stock Viewlets)
Add contributes.explorer section and add it to ViewletRegistry
debt - no guessing-caching, better use of gc-signals, command converter using gc-signals, main side heap service
show overflowing content widgets as fixed
null guards for actions
ExtensionEditor: Show navbar sections always. Show some text instead of empty content
fix expansion of call stack with mutliple processes
search gallery for specific language extensions
debug: allow multiple sessions with a tmp config attribute
Clean up warnings
Ext deps: Show error messag for Invalid dependencies
debug: fix reaction on state changes
:lipstick:
Git quick open should correct invalid branch names (#12194)
debug: use schedulres to prevent flashing on the views side not in the service
remove unused code
debug: use schedulers for updating call stack view (no flashing)
debug: limit calls to update thread model on stopped
fix top level menu toggles
prevent commands without title entering the systems, fixes #14154
validate ranges that are passed from api command callers, fix #13862
fix npe in light bulb
#12957 Prevent uninstalling a dependent extension
#12957 Do not uninstall dependencies if there are dependents
#14102 Remove state if null
debug: debugService.createProcess polish
add F1 entry for webview inspector
code lenses should be sorted by line, provider, and then column
debug: move selected launch config logic from configurationManager to viewModel
fire quick fix compute event when model changed, fixes #14141
don't hide the light bulb when showing the fixes menu, fixes #14140
:lipstick:
send gallery requests for all URLs
send proper event over in quick open
don't project failures to console, fixes #13785
Remove setRestoreFromBackup
Handle last chance backup save failure
Add npm modules needed for testing
Add monaco-editor-test script
Remove /workbench/ dependency from test file in /editor/
Add monaco-editor-setup script
clean up from https://github.com/Microsoft/vscode/pull/13925
Remove duplicate untitled save code
Move untitled model backups to BackupModelService
Hot Exit: avoid direct calls to fs.readdir()/fs.readdirSync() (fixes #14055)
Get rid of remnants of filesToRestore
Huge refactor to move everything into Backup*Service
quick open files in background - allows one to continually open files while keeping quick open widget focused - uses the right modifier key to open in background - can open in split view if using the cmd trigger key
Remove unused imports
upgrade node-debug
Remove redundant fs.existsSync call
Remove BackupService.setCurrentWorkspace
Correctly clean up workspace backups when exiting
Split BackupService into main/renderer process versions
Have TextFileEditorModel handle restores
#14102 Restore state when closed
Load backup resources exclusively on main process
#14102 Save and retrieve the state while switching editors
Thenable<T> everywhere
Folding: Revert apply collapsible regions to schedule
Set ID for folding contribution
debug: introduce process name
fmt - protected from concurrent document changes
#14102 Fold Default settings by default
debug: state based on focused process
Thenable<T> to avoid accidential generic identifier merging
Folding: Compute collapsible region immediately when editor model changes
debug: restart and pause fix behavior when no focussed process
debug: add a process to model as soon as created
make it a little command'ish
ups
update to electron 1.3.8
debug service: diposeOnSessionEnd per session
minor fixes
extract test task to build/gulpfile.test.js
extract mixin task to build/gulpfile.mixin.js
Extract client compilation code out of gulpfile.js
Convert build/lib/reporter.js to TypeScript
Clean up types in build/lib/optimize.ts
Convert build/lib/util.js to TypeScript
Convert build/lib/git.js to TypeScript
Move /build/gulpfile.common to /build/lib/optimize.ts
Reduce devDependencies
debug service: fully remove the reference to active session
debug: restart take session as an argument
remove publisher
remove git extension code
debug: move setVariable method to Variable class
[html] filter empty lines in virtual documents
debt - move TrieMap to map.ts, add tests
reduce amount of data the _executeCompletionItemProvider-commands sends
enable integration tests again, cleanup a little of the ///-reference mess, #14059
Move functionality to gitModel
debt - remove ISuggestResult#currentWord
don't use engine-vscode: * with an old version of vscode-module, fixes #14059
update gulp-azure-storage
debug: move completions to StackFrame
[html] completion proposals for embedded CSS (for #8928)
Provide detailed argument error message on registerDefaultLanguageCommand
instantiate a new api implementation for each extension,  #13990
debug: move thread specific methods from debug service to Thread
remove handleAzureJson
debug: polish Process interface
debug: stop and disconnect should also work on a process, even if none focused
engine.vscode must not be required
fixes #13634
fix bug in quick open history opening always pinned
fix #14020
Revert "Add monaco-editor-setup script"
Use a temp folder for backupservice tests
node-debug2@0.1.1
Add untitled backup tests to fileService
Add backup tests for FileService
enable line highlighting for read only editors
jsdoc and comment cleanup
Extensions View: Remove status widget
Disable hot exit on Mac
limit experiments to first time users; fixes #14009
workaround #13606
A system error occured (EPERM: operation not permitted, utime (fixes #13920)
new icons for horizontal split
Global Actions: Disable and Enable Extensions
Add monaco-editor-setup script
Remove extension from disabled list after uninstall
Use Uri exclusively to deal with paths in BackupService
fix #12957
debug: stop and disconnect should also work on a process, even if none focused
move restart frame to StackFrame
Load all gulpfiles only if necessary
Update accessibility help text
debug: move getThreads to Process
No need to compile extensions when doing an editor build
debug: adopt usage of Process instead of Session
fixes #14001
more keys in tooltips
make ExtHostAPIImplementation a method for better type checks, #13990
Show disable / enable options as dropdown
file actions tweaks
toolbar: resolve keybindings for primary actions
horizontal: more dynamic layout toggle action
Increase coverage of tests for IAction.isAction()
more dynamic menu
horizontal: add a keybinding to toggle layout
make vscode.d.ts use a declare module, #13990
log more info for startuptime
debug model: introduce process, limit pointers to session
Do not snap to minimize when resizing window or sidebar/panel (fixes #1484)
Remove 'experimental' from the description of accessibility options
debug model: ordering in file polish
hide sashes when dragging editors
fix sash zindex
horizontal: polish
type propaties to properties
Extensions: Show actions and messages as per extension state
update node-debug
Update editor.lineNumbers description.
Add null check
Extensions: Introduce Reload action
Move scanning extensions to ExtensionsRuntimeService
Dep viewer: Open extension on enter
cleanup workbench layout method
horizontal: more layout fixes
horizontal: smoother reordering
horizontal: fix issue that you can no longer create untitled from title area
horizontal: ensure correct editor dimensions
Reduce query length by removing whitespace and link
Add link to marketplace
Put extensions as in a GH table in issue template
More simplification in LanguageRegistry
Simplify LanguagesRegistry
debug: do not rely on focused session when updating viewlet
[themes] add keyword.operator.expression
debug: send breakpoints to all sessions
fix indentation
Dep viewer: Click on name to open extension
Show all actions in the extensions viewlet
Deps viewer: Do not render cycles
Promt to enable after install
Revert fix to show uninstall after install
Move storage path computation to ext host main
debug model: introduce notion of session to stackFrame, variable and expression
split format code into focumat doc and format selection, #13939
debug protocol: support to return strcutured objects from SetVariablesRequest
debug: introduce sessions in the debug model
[ts] update grammar
debt - use fromEventEmitter util
fix #13890
Sidebar always comes back in empty workspaces (fixes #13825)
Cannot read property 'style' of null (fixes #13851)
Cannot read property 'position' of null (fixes #13853)
disable randomly failing linux build
fix issue with ctrl+tab
less confusing editor picker
[c] update grammar
debug: move notion of session from debug service
fix ini #13648 #8709
better group labels
generic group names
make editor group related actions more generic
fix UI/UX regression #12926
toggle editor layout from open editors view
add global action to toggle editor layout
quick open side by side icon update
add split icon for horizontal to editor
Update node-debug2
Push backup resource aquisition to FileEditorInput
Add null checks to fix integration tests
Improve exit logic when errors occur
Remove async calls in all but critical window/workbench init
fix compile errors
css class name updates
more variable renames
rename positions (one, two, three)
tweak min sizes and thresholds
fix #13758
implement sash for horizontal
[lua] Add update script
allow to dnd group reordering
Remove disable action from viewlet
Extension Actions: Show uninstall after installing
dnd of tabs
Show disable action in the editor
html.format.enable
json.format.enable
#2882 Provide Telemetry
debugProtocol: add 'type' to 'SetVariableResponse'
launch.json - also gray out 'configurations'
add comment about document and document range provider
Implement UI - Enable/Disable extension #2882
first cut horizontal layout
fallback to next formatter when the previous didn't produce a result
[ts] color object literal keys
add [typescript|javascript].formate.enable
start with document formatters, fallback to range formatters, fixes #13690
fix MapMap#remove result, fixes #13548
fixes #13869
fixes #13855
fixes #13860
update css class of editor container based on layout setting
Remove extensionsRuntimeService from disposables
fix #13734
introduce sideBySideLayout setting
[go] Update grammar to atom/language-go@d941ce3 (2016-10-10)
widthRatio => ratio
fixes #13867
more tests
Watermark should not show up behind editors when rearranging (fixes #13822)
Layout is off for long file name (fixes #13787)
Update json language service
trigger tests again
use queued sender for ext host communication
clean up
Increasing test coverage for collections
Adding tests for editor state
Clean up pass
Move tsserver to 2.0.6-insiders.20161014
Remove IWorkspaceContextService as dep on BackupService
Use 2.0.3 stable for tsserver.
Added additional formatting options
Making protocol.ts a real module
Adopt protocol.d.ts file from npm package
Make use of TS 2.0.6 optional
Passing command line argument --useSingleInferredProject
Adopt useOneInferredProject
Adopt replacementSpan
Pull in 2.0.6 protocol.d.ts
Automate tsserver installation
Avoiding "write EPIPE process.send" error on exit
[themes] add variable.language for this, super, self...
[themes] add support.function
[themes] add support.class & support.constant (for ts)
update node-debug for hit counts
improve large test to simulate real deadlock behaviour
buffer process.send
debug: get rid of TPromise<void[]>
debug: getActiveSession() => .activeSession
[themes] remove entity.name.function scope from dark vs-default
[themes] avoid entity.name.class scope
Add --disable-gpu option to cli help. (#13706).
Use default cursor in feedback menu text. #12926
:lipstick:
reintroduce editor.glyphMargin
:lipstick:
launch.json decorations: use json parser for better parsing
debug: preserve condition and hitCount of old breakpoint
debug: do not try to be overly smart with the ? operator
Polish breakpoint widget hit count message
Toggle Maximized Panel
[themes] add ts cast & new scope, remove entity.name.method
debug.openExplorerOnEnd
debug.allowBreakpointsEverywhere
Remove empty line after function
find in selection: do not shrink selection if it is one line
Disable hot exit on empty workspaces, fix uncaught exceptions
[ts] coloring for 'this'
Move BackupService to vs/platform/backup/node/
Improve IBackupService names and add jsdoc
[ts] upate grammar, remove meta scopes
Upgrade node-debug2
Remove unused service
Replace all {} with Object.create(null)
Move workspaces.json path to IEnvironmentService
remove console.log
add decorations for launch.json
more experiments
Extensio: Make disable an extension state
Remove opacity for disabled extensions
fix #13363
StatusWidget: Take extension as argument instead of options
[ts] add specific tests (expected results)
[ts] specific colorize tests
first cut of html zone
get rid of extra backslashes in code.cmd
make status bar visibility a setting (for #13328)
debt - get rid of onEditorOpening event
avoid onEditorOpening hack for comparing files
fix: quick open should not report dirty if auto save is on
better implementation of "remove from history" action
Move extension run time and host process to workbench services
fixes #13626
better fix for #13577
Revert "fixes #13577"
Show status of extension in the editor
Show active indicators
Perform a last minute backup when closing the last window
clean-up util using new event, #643
add simple test for onDidChangeVisibleTextEditors, #643
add new event `onDidChangeVisibleTextEditors`, #643
Remove usage of fs in common/ layer
fixes #13633
fix tests
fixes #13502
fixes #13577
update doc, fixes #13599
fix obsolete extension removal
improve ext obsolete detection at loading time
Get untitled files restoring from backup
Re-enable integrated term windows shell args
Uplevel pty.js
Extensions Storage: do not dispose immediately
Show disabled extensions action
UI affordance for disabled extensions
Have rpm depend on libXss.so.1, not named package
Actions to open extension storage files
Implement IExtensionRuntimeService
Adopt to storage service changes
Storage: getStorageData from storage path
ExtensionHost: get storage path from storage service
StorageService: New api to get workspace storage path
debug: better hover wording for configurations in launch.json
fix #13510
Allow decimal values for terminal line height
Open restored files pinned
Make workspaces.json loading more resilient
remove console.log statement
use node debug 1.7.1
debug: allow adapters to provide full launch.json content
#13447 fix insiders
git: dirtydiff decorators lifecycle
[coffeescript] update grammar, add script
[java] add grammar update script
keep built-in extensions' translations
git: dirty diff first steps
Typo in project.json
Include common debug commands to terminal skip shell
Adds scroll to top/bottom terminal commands
Use scrollPages API for terminal scroll page actions
Uplevel xterm.js
Add libXScrnSaver as dep to .rpm spec
Updated version mismatch Info message
git extension: first steps
:lipstick: pfs
update-grammar script: include download functions
#13357 Separate extension host process starting from thread service
debug: show hover when there are multiple matching expressions if they all have the same value
Revert "remove unused build script"
#13357 Move extensions scanning to renderer
:lipstick:
:lipstick:
fix #13340
use v3.1.0 of typescript-formatter
list view: webkit transform
confirm git sync by default
Sort the installed extension list
Rename terminal theme to ansi*
Remove TODO
Bring the rest of the css rules to TerminalStylesContribution
don't tabComplete when snippets are being filled in, #12487
monaco.d.ts challange?
tsfmt - src
tsfmt - extensions/vscode-colorize-tests
tsfmt - extensions/vscode-api-tests
tsfmt - extensions/typescript
tsfmt - extensions/php
tsfmt - extensions/markdown
tsfmt - extensions/json/server
tsfmt - extensions/json/client
tsfmt - extensions/javascript
tsfmt - extensions/html/server
tsfmt - extensions/html/client
tsfmt - extensions/css/server
tsfmt - extensions/css/client
tsfmt - extensions/configuration-editing
Incrementally decode find result (fixes #11842)
Remove more code that supported Compatibility Modes
Remove unused methods from LineStream
use 'release version' of tsfmt fork
Use directly LineStream
Move tokenize down from IState to AbstractState
Remove no longer used code (due to vs/languages removal)
dont report filename twice
more hygiene
ddd
use tsfmt as gulphygiene check
add typescript-formatter as dev dependency
Clean up thred service
Remove the rest of vs/languages
Remove vs/languages/handlebars
Remove vs/languages/razor
bad casing
fixes #13298
monaco-editor-core v0.7.3
0.7.2 for monaco-editor-core
loosen all caps camel case filters
Run extension host detached under Windows to ensure correct extension shutdown
Remove incorrect ANSI escape code for LF
use node-debug version 1.6.9
extract method
remove shared process connection from ext host
naming
Make sidebar position a real setting (fixes #13338)
Get hot exit working end-to-end (very rough)
less noise when setting zoom
always apply zoom fast before watcher kicks in
Write window zoom configuration to settings (fixes #13334)
first set code editor, then setConfiguration
:lipstick:
history: avoid typed input for editor history (for #13283)
Bind Save All to Alt+Ctrl+S (fixes #11433)
Pass exact path matches to find (#12743)
ExtensionWorkbenchService.open return promise
Dependency view: Open extension to the side
Dependencies view: Open extension
Extension: Make open extension a service
history: avoid typed input for editor navigation (for #13283)
Diff editor does not ask to save when closing (fixes #13095)
Dependency viewer: fix wrapping
#12756 sytle identifier in the view
Gallery.loadDeps include self if it is a dep in hierarchy
history: avoid typed input for recently closed editors (for #13283)
Revert "resolveEditorModel: dispose input after model is resolved"
resolveEditorModel: dispose input after model is resolved
Implements #12756
rename EditorTabContext -> EditorTitleContext
get rid of IEnvService (fixes #10656)
get rid of ICommandLineArguments
extract and reuse IProcessEnvironment
find: do not always include current line for find in selection
use different stickiness when two placeholder occurrences touch, fixes #12506
debug: do not use special line height for the repl input
max widget width depends on overflow
Revert "improve overflowing widgets layout"
more more code actions in F8, fixes #13287
don't show (or hide) lightbulb when there is something in the glyph margin,  #11400
better y-position when clicking light bulb,  #11400
move light bulb to gutter, use context menu to show code actions, fixes #11400
fix exact content widget layout when overflowing
fixes #13264
more reuse with other env
more use of IEnvironmentService (for #10656)
less use of IEnvService
Prevent cached promise from being canceled (fixes #11181)
Cannot read property 'uri' of null fix
üíÑ
Fit watermark into code org (fixes #13069)
Use register from dispose class
fix flaky tests
tests #13115
implement menu in new approach
fix #13115
fix typo
avoid input creation for checking for dirty state
fix tests
push ITextFileService to be a workbench service (fixes #6429)
üíÑ
Escape command title for CodeLens
hunt down flaky tests
stable tabstop at snippet line start, fixes #11890
improve overflowing widgets layout
:lipstick:
some fixes around usage of file editor input
üíÑ
debt: remove mime traces from files land
remove rating count
fixes #13179
fixes #13178
more mime reduction
also update schema
change scope to editor/title/context
nls
nls
bump to version 1.7.0
Add top to xterm.js' textarea
Revert "Set line-height of xterm.js' text area to 0"
Add path end trivia and pass to find (fixes #12624)
Set line-height of xterm.js' text area to 0
Make s in "script" upper case
compute score from highlights, fixes #11423
fix #11871
breakpoint widget: fix placeholders and background color
fixes #12761
:lipstick:
polish based on feedback
debt: no more mimes in any workbench editor
remove (now) unused code
debt: get rid of mime in file input
debt: no more mime in editor service
distro
let => const
fixes #2465
fixes #12859
remove mac overwrite
fixes #12847
fix huge intellisense icons
do not unset mode from picker
breakpoint widget: support hit condition editing
SelectBox
debug: add hit condition to breakpoint model
zoneWidget: introduce frameWidth option
fix #12933
allow to contribute to the tab context menu
fall back to current language, fixes #11331
smoother title control update when closing
fix #13196
Find in Folder: Null check guard
use modeId of target, not source, fixes #13057
run formatter, #13057
fixes #13174
use Object.create over {}, fixes #12890
use timeout > 10ms, #13148
fixes #13105
responsive suggest icons
fix #12671
fix typo in type definitiion
Tests #13158
breakpoint widget - fix inner padding
fixes #12927
query down on workspace recommendations
icons: show them in language picker too
fixes #12982
check for model lang id for icons too (part of #11806)
Extensions: clean up outdated prop
fix compile error
allow to ignore .NET 4.5 warning per workspace (for #12504)
Reloading a window should restore the active viewlet (fixes #8269)
remove compatibility properties - no longer needed
debug: conditional breakpoint labels polish
better icon for folders in task jump list
explorer: keep focused item even when editors close
Console output - maintain scroll position
Recent folders list changes when opening folder in extension debug window (fixes #11164)
Use description to indicate current window
fixes #13083
fix #13121
Add option for --list-extensions arg
Add an indicator for the current window
Allow terminals to be themed within .tmTheme files
Avoid backticks (fixes #13098)
Clean up (#13051)
Simplify configuration resolver (#13051)
tokenize source in release notes editor
fixes #13050
#13041 - Down arrow on Search is not navigating to results
fix #13041
Revert "fixes #13054"
fixes #13054
filter out unpublished extensions
:lipstick:
Additional tests (#13051)
Consistently access config values in launch.config (fixes #13051)
fixes #12773
Changed Insider Builds messaging
Do not wrap in watermark (fixes #12980)
Extra letter-spacing only on OSX (fixes #13017)
Update typescript extension OSSReadme
simpler, but less clean fix for #12111
Revert "gutterIconPath is string or Uri, #12111"
fixes #12428
filter duplicates and valid recommendations in single loop
filter duplicates from recommendations
fixes #12729
fixes #12985
Revert "fixes #11673"
don't namespace-qualify inside vscode.d.ts
fixes #12943
debug: distinct names for named and indexed variables combined
store and restore scrollTop when updating webview, #12865
fix #12935
fix #12917
workaround #12954
fix #12960
editor: showLineNumbers only if lineNumbers 'on' or 'relative'
update node-debug
React on terminal disposed and check if that is the debug terminal
gutterIconPath is string or Uri, #12111
baby steps, #12111
fixes #11653
repl: overflow: hidden to contain the character surveyor
fix #12979
fixes #12947
fixes #12911
fixes #12932
fixes #12930
"typescript.check.workspaceVersion": false
remove unused terminal activity icon
Improve layout and typography (fixes #12899)
scrolling issue #12562
Take latest node-debug2
fix #12931
Change default terminal page keybindings to work without shift
Include trailing slash in basename trivia (#12624)
Add terminal.css back
Revert "fix build issue"
Add Space After Default Extension Queries
Center watermark commands (#12779)
Update QuickOpen label in watermark (#12716)
Show only first keybinding (fixes #12862)
fix build issue
fix #12896
handle unhandled promise error
fix #12750
take out panel icons in activity bar
fixes #12816
Revert "take shortcut to fix #12111"
fixes #12843
take shortcut to fix #12111
fix #12888
do not set variable value if it did not change
Revert "allow to define gutter and content icons paths as string OR uri, #12111"
model can be null (for #12884)
Partial fix for #12798.
suggest broke white space pre wrap
update background color for identifier
debug: send configuration done even if breakpoint request fails
wire up dispose calls: controller -> model -> oracle, fixes #12882
fixes #11984
fixes #11914
fixes #11896
remove out folder at installation time
fixes #11675
fix #12132
fixes #11779
allow to define gutter and content icons paths as string OR uri, #12111
fixes #11673
fixes #12853
update distro
make global optional, fixes #12878
undefined !== null and JSON.stringify should know that, fix #12812
update distro
disable undo last commit action when dirty
fixes #11707
fixes #11756
implement open-url in windows
fix #11655
match snippets strict when having a non empty selection, fixes #11912
doc on launch/tasks.json files,  #12813
fixes #12777
Problems: Delay applying filter. #11976
Improve extension pack installation message
debug: bring back toggle repl action
fixes #12874
fixes #11174
:lipstick:
use `pushEditOperation` instead of dangerous `applyEdits`, fixes #12832
fixes #10694
:lipstick:
make sure to timeout format on save, #12725
fixes #12757
better names for TextDocumentSaveReason, #12830
update doc for formatOnSave setting, #12834
fixes #9179
#fix 12740
fix type
update distro commit
Install extension pack completely or not
fixes #12699
fixes #12690
Maintain compatibility for renderWhitespace: false
Introduce TextEditorLineNumbersStyle for TextEditorOptions.lineNumbers
fix #12802
Start integrity resolution after 10s
Don't use loader checksums in integrityService
little clean up
fixes #12712
always keep toggle panel activity icon on bottom
push panel activity icons to the bottom
bundle built-in extensions
oss input
Add `uniqueItems` rule for simple arrays
Add `preview` property
Add `badges` property
Add `icon` property
Order properties by docs
activty bar panels icons
build with electron 1.3.7
Settings API doesn't work if no .vscode folder exists (fixes #12679)
Animate in Infinity logo on window size change
Fade in and fade out watermark on window size
Fade in watermark tips
Bold command name.  Seperator now "Or" for tips
Vertically alignl tips + logo (hardcoded for now)
Log changed user settings keys (fixes #12698)
Take new node-debug
Update node-debug2 version
#12534: Enable overrides for testing
Add API to change editor's `lineNumbers` option
Add support for `editor.lineNumbers: "relative"`
Don't use flexbox for .terminal-outer-container
#12534: Correct commands for adding cursors
Do not change the smiley
Sync scroll bar after panel is toggled
Add More information button
Bump to use latest distro
activitybar: fix flashing on startup
Uplevel xterm.js
Generate dev-time ThirdPartyNotices
Workaround missing license text for chokidar
Update markdown syntax highlighing test results
Use blankline to delimit html block in markdown colorization
Also support any number of spaces after end of closing fenced code block
Add Syntax Highlighting for C# Code in Markdown files
Remove some unused params
#12133 Show configure workspace recommended extensions under extension actions
Correct watermark spelling
introduce workbench.panels.showInSidebar
toggle panel action: rotat 180 degrees
terminalPanel: focus
output: use togglePanel action
terminal: use toggle panel action
panels: introduce order
fix issue with change all, fixes #12635
Make methods private and use them in public functions
Take changelog from extension if provided
Extension packs update: auto install deps
add TextDocumentWillSaveEvent#reason, #239
imports
update fixes menu inplace #12531
lint polish
extensionManagementIpc: Handle error from choise service
Improve install dependencies message
save reason for #239
Extensions: update extension only when installation has no error
UpdateAction: set enable to false when canInstall or isInstalled is false
[emmet] Support for more languages (#12382)
clean up lots of code when running tsconfig with noUnusedLocals
Implement #11573: Use engine property for outdated check
use a new TypeScript feature
toggle fullscreen class for #12377
add default label, fixes #12119
fix ts issues
Folder icons do not respect theme (fixes #12443)
settings wording
add an overall timeout to onWillSaveTextDocument, #239
more fixes for #12616
Unable to bypass trash via Shift+Delete / Alt+Delete (fixes #12616)
Update `fast-plist` to v0.1.2
Show tag name instead of commit in GitStatusbar
Disable UndoLastCommit when no commits
Add terminal commands to scroll page up/down
Use new xterm.js getOption API
Uplevel xterm.js
Changing "guide" tmTheme key instead of invisibles See #11347
Watermark: Enhanced colors and typography.
Remove workspace from workspaces.json when not last window
Implement Push To Remote
fix compile error
GalleryService: Call self in getLastValidExtensionVersionReccursively
fix npe with more tmp ugly code
Use compatibilityChecked property - #11573
fix compile error
Implement #11573: engine property for version check otherwise fallback
show badge for markers
update widget when markers update. make sure to not reveal or focus tho, #11407
MessageWidget for easy update, #11407
allow to relayout a zone, #11407
Change description spaces to tabs per vscode build rules.
activitybar: use blue as the default badge background color
Update node-debug2
do not change ids of actions - can break people
activitybar: keybinding label for toggle panel
exclude debug/build artifacts, fixes #12361
activity bar: no need for code reuse between panel and viewlet activity action
fix bad refactoring
always show toggle panel action in activity bar
reuse togglePanel action, different icon direction
ignore builtin updates
panel: show shortcuts on hover in activity bar
use proper settings name in code
release notes in product
unused field
markers: cleanup show panel action
rename setting to 'editor.formatOnSave', #12449
cleanup debug panel actions
Cache integrity computation
Use IntegrityService in window title
Use IntegrityService in feedback widget
Show a message when files are corrupt
Add IntegrityService
Adopt latest loader
Compute checksums during packaging
preventDefault on mouse event such that the editor stays focused, fixes #12246
ts 2.0: fix unexternalized string issues
fix one ts 2.0 issue
don't run formatOnSave when auto saved, #12449
Extension pack: Filter out installed deps before showing prompt
Take new node-debug2 version
use two activity bars
Fire installation error event for all deps in the root promise
action bar: do not dispose action items if they were provided from outside
update panel activity actions dynamically
Add new workspaces to backups as they are created on main process
ignore listeners that failed (error, timeout) more than n times, #239
--verbose tweaks
Add close buttons to messages
Added values to enums to make 2.0.3 compiler happy with structural equal enums
Extension pack: installation status of all at same time before and after installation
Use correct extension id while comparing with local extensions
activity bar actions
Add node-debug2 OSSREADME and placeholder
panel toggle icon
panel icons for activity bar
Double clicking viewlet sash no longer optimizes explorer width (fixes #12482)
tasks: set icon path for folders too
Insiders: cat.exe won't start, MSVCP140.dll is missing (fixes #12481)
show folders (for #241)
Implement #11937 - Install Extension packs using dependencies
Format complex command descriptions for better generated Markdown.
Include node-debug2
Upgrade to TS 2.0.3
update node-debug to 1.6.5
Cmd+Scroll to zoom on a mac.
Show Markdown Preview Menu Button For any File Opened as Markdown
WindowEventChannel: Create it before registerting channel - Initial window events are bufferred
activitybar: add panels
remove ViewletDescriptor.isGlobal since it is unused
add watch dog, bubble errors a little, #239
localize extension metadata with default english
activitybar: generalize code to talk about composites not viewlets
fix bad npe
PanelActivityAction
use final v1.13.0 of debug protocol
save participants do not run on shutdown
ImprovedVersionChecking
don't format on save when auto-saving the active editor and when edits conflict with cursors
Revert "restore global actions to activitybar"
Revert "let => const"
move things back to participant for better control
actually run in sequence...
icons: support in pickers
picker: remove unused render entries for now
add setting
update node-debug
get node-debug from marketplace
debug: remove package.json massaging (it now lives in node debug)
first cut of format on save
Disable debugger
Normalize all pathes using fs.realpath
ensure that *.nls.json files are buffered
fire up extHostDocumentParticipant and vscode.d.ts, #239
incremental marker service stats update
add setting to control icons in editor
add an assertion to check that our maps are in sync
ChoiceService: ipc
windowEventService: ipc
SharedProcess: Create returns a promise resolved when it is available to connect
RoutingChannelClinet: delay get  channel till client is added
adopt getDragLabel for open editors view too
let => const
restore global actions to activitybar
polish for #11977
update tests results for the new version of the textmate engine
Use unique backup path for file and untitled schemes
Run experiment with default viewlet shown/hidden (fixes #12414)
Move backup logic into models
update node-debug
Discard backups when the file is no longer dirty
Prefer matching brackets to the right of the position (part 1)
Simplify tokenTree
Clean up findPrevBracket, findNextBracket
dnd in git
use two indecies for markers
fix tree dnd drag image
suggest: scroll details to the top
use getPathLabel for path title in labels
Update typescript extension to 2.0.2
Simplify tokenIterator
Simplify bracket matching code
Introduce LineToken and adopt
remove unused build script
download extensions at build time
resolver service: unit tests for resloving interactive variables
configurationResolverService: remove unused api
move fileicon into iconlabel
icons: in quick open
More work to move to TS 2.0.x
More TS 2.0 adoption
First set of TS 2.0 adoption work
Minor case change in README Github -> GitHub
icons: in editor picker
configuration resolver service: resolveInteractiveVariables
delete systemVariables and configVariabes
configurationResolverService tests
configuration resolver service: also resolve configuration variables
tasks: adopt configurationResolverService
debug: adopt configurationResolverService
configuration resolver service first steps
let => const
Discard backups on exit
Backup to a unique location for this workspace
Back up files to the user data directory
Perform backups on content change not dirty change
Cursor over icon is default, should be pointer (fixes #12365)
wire ext host save participant to main thread save participant
I can't see the test output due to bad ANSI code handling
TokensInflatorMap holds on to top level mode id
Minor renames
test for bad concurrent edits, test for subsequent good edits
ipc: stub messageIpc
ipc: routing channel client
ipc: use once for first message
ipc: send client ids when connecting
register/execute, #12337
Don't ship unused languages
ipc: use Event for onMessage
fix #12353
:lipstick: ipc
don't fail save when participant fails
merge waitUntil and pushEdits
No reason to see the .build folder
Update vscode-textmate
fix warning in tests
fix tests
markersModel: use hasFilters to check for filter
no tabs: dirty over close action
icons: polish and fixes
Update oniguruma and native-keymap
Shuffle backup code around
update node-debug
MarkersModel: bulk update/refresh of resources
performance fix: code optimization and do sorting while rendering tree
pushEdits and wire up workspace#applyEdits
fix DND issue with groups
icons: adopt in problems view
icons: adopt file label for search
use latest version of debug protocol
update icons when file associations change
ipc: bidirectional communication
fromEventEmitter: map not optional
ipc: unify messages
make ISaveParticipant async
fix #11960
remove unused code
share one kind of label class
adopt filelabel for explorer
add document to event
First cut of an ext host onWillSaveTextDocumentEvent
ext tips service: use choice service
:lipstick:
git: use internal schema for index files
choice service: return true in actions
choice service
icons: for when tabs are disabled
fix url in node-debug OSSREADME
fix css path for linux
icons: show when tabs are enabled
editor label: allow to directly set values
add dispose to editorlabel
make zone widget return actual position, #11407
introduce and use editorLabel for icons in "opened editors"
'inOutput' context key
fixes #12118
debug: null guards when getting response from debug adapter
icons: extract CSS class computation to helper
debug repl: tmp workaround to also auto scroll if scrolled all the way up
add test for replacing entire invalid config file
debug: input box in trees should always have the text selected
config edits: allow parse errors in JSON if entire JSON is being replaced
Checkmarks background for transparent images missing for certain themes (fixes #12168)
debug: always clear tree highlight to avoid ending up in a broken state
text file model cleanup
fix #12268
use node 6.6.0
fix typo
fix #9764
Remove simpleMarkedWorker.ts
Implement vscode.Terminal.processId
update node-debug
Indicate onDidCloseTerminal API happens on dispose
Remove terminal API comment about change coming in v1.6
[html] htmlDocument cache
allow a workspace config to replace its entire contents (for #1396)
[html] update language service
test failure logging output
fix bad identation
extensions: built-in
fixes #12121
fixes #11978
Update language-configuration.json
textModel.getMode is not a function (fixes #12268)
settings: remove editor.glyphMargin from schema since we enforce true due to setting of breakpoints
make sure to return initial value, #11503
debug: use source reference for internal module uri prefix
protect against bad results, #11455
make MarkerService#read a litte faster, #11976
tasks.json and launch.json always wins
git -> git+https
debounce onMarkerChanged-event for better perf, #11976
Revert "undo update change for now, #1396"
Save file even without file changes - so that Nodemon, Gulp, Chokidar and other file watchers restart (fixes #7470)
Ability to remove file permanently (bypass trash) (fixes #9354)
Allow to Ctrl+click in File > Open Recent to open in new window (fixes #8819)
Windows: Jump list misses files in the recent category when opened (fixes #241)
Windows: Show file types for "save" dialog boxes (fixes #12248)
Show image dimensions (fixes #3414)
use electron.d.ts 1.3.5
fix #11980
update uglify. bubble errors. scoped eslint
Improve monaco-editor-core bundling
monaco-editor-core no longer ships any built-in languages
Do not include the registration of razor in monaco-editor-core
Do not include the registration of handlebars in monaco-editor-core
Implement clear terminal command
Uplevel xterm.js
Start building out backup file code
Ensure IEnvironmentService.userDataPath is absolute
update node-debug
update OSSREADME for node-debug
Do not include the registration of html in monaco-editor-core
Add files.hotExit setting
bump monaco-editor-core version due to breaking change in monaco.d.ts
Remove PHP (moved to monaco-languages)
Adopt latest loader
recommended extensions for vscode workspace
ooohps, sorry windows users
fix auto save menu enablement
paths.relative: case insensitive in not linux
buffer open-url requests
event: support initial buffer
add auto save toggle (#11974)
Use new xterm.js API setOption
Uplevel xterm.js
Move tokenizationSupport out of the mode instance and into TokenizationRegistry
windows: dot reporter is better given our cat.exe workaround
:lipstick: extensions
move extension url handling to service
report telemetry for extension workspace recommendations
fix tests on windows
fix label
imports
force colors when running mocha tests on windows
fixes #12088; cleanup legacy context service
Uplevel xterm.js
Ensure terminal cursorBlink is restored after app mode change
update node-debug
ThirdPartyNotices: remove error header
[html] update language service
Update ThirdPartyNotices
Revert "fixes #10215"
[yaml] update grammar, add tests, update license
Tidy up terminal code
Update yaml grammar to textmate/yaml.tmbundle@9a4135d (2016-08-24)
Have terminal service clean up instances using event
Add test for onDidCloseTerminal
Implement window.onDidCloseTerminal extension API
[html] add shrinkwrap
[html] update language service
[html] Comment shortcut (Cmd + /) stopped working in HTML. fixes #12083
install vsix action
drop install-vsix altogether
remove extensionsWorkbenchExtension!
process vsix installations from args
functional: not
remove dot mocha reporter
event buffer, nextTick, tests
event: buffer
shared process init data
Remove flaky tests
Update description of recommendations prop
Notify workspace recommendations
update forward link
delay command execution for newly created integrated terminals
indicate current association too
add travis extension to recommendations
Clean up #11936
update text file editor model when file associations change
extensions recommendations
Implement #11936
make sure to return clones for configurationservice#lookup()
config service: emit event if config changes after calling reloadConfiguration()
introduce unbind container to text file model
more guidance to the user when configuration writing fails
fix test running from vscode
file associations: find proper target based on current config
bad bad bad
updated the tslint task
move disable-extensions arg down
use config write API to write file associations (for #11974)
Add hasChangelog method to display the tab eventually
Remove the extension parameter from open commands
support debug & tasks writing (for #8937)
Clear buffered output on output clear event
Do not add to recent files list when running with "--diff" (fixes #12049)
polish language mode picker
Prune find traversal with basename patterns
integrated debug terminal: support PowerShell on all platforms
[html] use html language service
integrated debug terminal: support env vars for PowerShell; fixes Microsoft/vscode#11785
[html] fix failing test
update node-debug
Add temporary access to chrome://accessibility (workaround for #12036)
Keep bundled simpleWorker lean
Keep keyCodes.ts lean and mean
[html] code polish
[html] update language server for document link support
Provide correct localized strings
use opener service in extension editor
fix gulp watch
Display language identifier in Language Mode drop down
fix fsevents compatibility for build tools
[html] add razor
[html] move existing handlebar colorize tests
[html] bring back provider configuration settings
better fix for css escaping in explorer
Explorer: files with spaces produces bad CSS classes (fixes #12024)
Explorer no longer shows "..." for cropped file labels (fixes #12022)
update node-debug
add icon to cat.exe
[html] close tag fix
[html] enable handlebars
[html] update html grammar & tests
getPathLabel(): Cannot read property '1' of null (fixes #11962)
fix #11967
print commit in new line
Get changelog url in installed extension as well
[html] add handlebars
Generalise and resuse markdown rendering function
Display the changelog nav bar
add getChangelog method to IExtension and its impl
Propagate the changelog url from the zip file if any
Added changelogUrl to local extension rapresentation
[html] get all link tests to run
Electron Update 1.x (#11157)
Reintroduce terminal API request queue system
Add shellArgs to API docs
update node-debug
first cut of supporting PowerShell in integrated terminal
[html] add link provider
Address PR comments
[html] symbol highlighting tests
Focus panel when kill command is run
Implement #4719
[html] avoid merge conflict
Minor tweaks
Remove CommonKeybindings
:liptstick: StatusUpdater
[seti] set languageId associations
surface error
filter out more errors
Incorrect git comments (fixes #11925)
fix sourcemaps
update history action ids #5508
Implement history for find widget #5508
Add color decorator limit to 500 (#11862)
less direct use of TextFileEditorModel
hygiene
get rid of global file input cache
use heapService for workspace symbol provider, #11455
bubble errors from opener service, fixes #11802
update distro
Prevent null pointer exception
comment out flaky test
[html] add symbol highlighting
[html] add endTagStart to Node
fix #11891
publish extension sourcemaps
less direct use of FileEditorInput
let => const; less use of FileEditorInput
More const enum
const enum KeyMod (inline)
Towards inlining KeyMod
Towards inlining KeyMod references
More const enums
mark KeyCode enum as const
Add back createTerminalEnv tests
More adoption of CharCode
Adopt CharacterClassifier in CharacterHardWrappingLineMapping
More CharCode adoption
Implement focus active editor group command
Resolve --user-data-dir before calling app.setPath
More usage of const enum in LinkComputer
Adopt CharacterClassifier in LinkComputer
Adopt CharCode in LinkComputer
More const enum
Modernize and adopt CharacterClassifier in LineStream
Adopt CharacterClassifier in oneCursor
Introduce CharacterClassifier
Implement Search History #5508
Externalize focussing input boxes using actions and key bindings
clean up in array set
Implement history helper and tests - #5508
More CharCode work & adoption
Introduce and adopt const enum CharCode for performance & readability
Unable to open workspace settings if "workbench.settings.openDefaultSettings": false (fixes #11888)
code cleanup
workaround build issue with fsevents on windows
use css animations for loading icons
gone with the bare :bear:
chain events
Unable to jump to first element in quick open with Arrow-Down and filtered (fixes #11882)
add test for label change event
more fixes for #9794
fix fonts in suggest, parameter hints
parameter hints: scroll
parameter hints: first steps
browser event: stop
suggest: more font size fixes
suggest: adapt font size, line height
Enable "Open with Code" on drive roots in Windows Explorer
File model cache can end up with stale, disposed entries causing issues (fixes #11684)
more aligned bg color on window start
use env service over process.env VSCODE_SHARED_IPC_HOOK
Quitting Code in fullscreen mode forgets previous windows state (fixes #11864)
ignore 'getaddrinfo ENOTFOUND' errors
Goto declaration should store current cursor in navigation history (fixes #11727)
fixes #11837
disable multicursor and tab-stop support as a simple solution to #11742
Add tests for instance title change event
Reduce terminalInstance's service deps
Resolve TODOs
jsdoc
Don't hold onto font in TerminalInstance
Remove old code
Remove ITerminalPanel
jsdoc
Implement terminal send text
Implement copy and paste
Implement scroll up/down
Implement terminal focus
Implement terminal kill
Layout terminals after they are created
Set styles correctly when terminal panel is not restored on launch
update node-debug
no longer warn about non-absolute paths for 'runtimeExecutable'
Clean up
Get instance labels working
Terminal layout
Get xterm.js initializing
Init config helper
WIP refactor of integrated terminal part
tests for #11475
fix #11475
Force upper case drive names in external terminal
add support for various linux terminals
suggest: more style changes
suggest: fix type new lines
Revert "fix behaviour with multiline vs singleline snippets and their final cursor position, #11742"
fix external terminal for linux
fix up suggest styles
fix stopwatch tests
fix TPromise.is declaration, #11771
explicitly add Thenable, avoid it coming in via vscode.d.ts, #11771
hello, monaco.d.ts, #11754
WinJS.Promise#as is not what you think it is, use wrap instead - fixes #11754
fix behaviour with multiline vs singleline snippets and their final cursor position, #11742
pimp up suggest styles
[html] add formatter
move tests
remove unused event service
tests for range highlight
use asFileEditorInput
refactor method names in range decorations
remove last untyped event from workbench
use mono space font for diag-messages, #11695
--goto validation
--goto should understand drive letters
get rid of FILES_SAVING event
request service missed strictSSL
more debug logging
add some log msg to debug issue
fix tests
title control to not do unneeded work
adopt more typed file events (for #7176)
Simple pattern of all other files
Update to address comment
cleanup extern terminal scripts
Don't respect editor.fontSize: 0
clean up rangedecorations
[html] all code completion tests green
[html] use NodeJS.Timer
[html] update language server version
debug teminal support: add support for iTerm
fix #8365
remove bad animation rule in hover
suggest: loading animation
make debug terminals configurable
:lipstick: suggest
remove tokenizeToString from suggest
Bundle viewlets and panels into workbench.main
remove timedPublicLog :fire:
fix stopwatch event tests
event: any
event: fromPromise, stopwatch
react to model dispose properly from text model
get rid of EventEmitter for editor inputs, models and workbench components
debug: error editor same style as binary editor
tests cleanup
debug: clarify translations
more file editor input tests
debug: configuration dropdown only enabled when debug inactive
more textfile model tests
more tests for text file editor model
clearTimeout when hiding, fixes #11636
fix lcov settings on unix
Explain change to terminal API coming in v1.6
drop timedPublicLog
Updated scss.json to atom/language-sass@b0417d1 (2016-08-09)
[themes] search for tag:icon-themes (for #11669)
use more ITextFileEditorModel interface
Change a behavior as Switch 'Workspace -> Window'
file model manager: loadOrCreate()
first cut of 'runInTerminal' for external terminals
Explain change to terminal API coming in v1.6
debug: introduce debug error editor
Remove OutputMode, clean up link computation
use a simple worker for output link computation
Allow define queue to be consumed by loader before reacting to incoming worker messages
Generate original module ids for debugging purposes when bundling
Add labels to web workers
Extract MonacoWebWorker from standaloneEditor
remove console out
method renames
Compile issue with new langageclient
introduce and use fileEditorTracker
make sure to dispose fileservice onshutdown
[css] update language service & server (MarkedString escaping fix)
[php] use textToMarkedString for descriptions in hover
[js] use textToMarkedString in JSON contributions
htmlContent.textToMarkedString: Convert plainText to MarkedString
move "out of workspace" file watching into fileService
move more stuff from filetracker to new dirtyFilesTracker
let => const
manager: make disposeModel() private
move dispose logic of models into model manager
move disposeUnusedTextFileModels into model manager and add tests
let => const
introduce and use TextFileEditorModelManager
Allow output channel to stay in scroll position
undo changes to launch.json
fix #10799
Added new command to switch between workspaces
use comma for disambiguate label, #11050
disambiguate label when prefixes match, #11050
show owner of a snippet, #11050
Keep vs/base/common/errors lean and mean as everyone depends on it
Move messageList near its only consumer, messageService
suggest: tokenize type details
update distro
suggest: type tokenization
Make outputWorker stateless
tokenizeToString no white-space prewrap by default
MirrorModel -> CompatMirrorModel
Use protected
Remove more unused code
mirrorModel.ts -> compatMirrorModel.ts
IMirrorModel -> ICompatMirrorModel
Reduce API surface of IMirrorModel
Reduce usages of destroy
Remove more unused code
Remove unused code
monitor -> service
dispose commands
renames
catch getaddrinfo ENOTFOUND in extension sync
simplify API
repl: move createReplInput into seperate method
debug: better repl input editor layout
Clean up standalone editor service instantiation
monaco-editor-core@0.6.1
Don't ship the changelog with monaco-editor-core
[theme] thirdpartynotices for seti
[themes] rename standard to minimal
[themes] add seti theme
not all edits start at offset 0... #11593
debug: respect supportsCompletionsRequest
more textfileservice tests
colorize expression breakpoints glyph hover
pimp up glyph hover
update shrinkwrap file
don't merge diagnostics with old data, fixes #11547
fix compile error
untitled editor tests
update package dependencies
some gc sync'ing between main and ext host
faster check for empty model
Empty untitled file should not show up as dirty (fixes #11554)
typed events for untitled (for #7176)
undo the changes
fix #11572
panel: set hidden same way we do for sidebar
fix #10887
first cut textfile service tests
fix test running
Revert "add linear css keyword"
bump to 1.6.0
fix #11024
vscode-linux-*-build-deb - permission bits match expected
fix #11284
debug: 'smart' scroll-lock in repl
debug: collapse all action enabled in watch expressions view
Reuse integrated terminal when running debug target
debug: move terminal logic one level up from v8protocol to rawDebugSession
fixes #10215
fix hover mode discovery
typo
suggest pimp up: first steps
use generated protocol definition; fixes Microsoft/vscode-debugadapter-node#51
typo
flip typescript hover order
dynamic hover height
debt: workbench should not depend on vs/code
move argv to platform
Write access problems are not handled clean (fixes #11504)
split revertAll into method for files and untitled
hover: scrollbar
fix unreliable test
text file services: push down confirmBeforeShutdown
move shutdown handling into base text file service
move saveAll() and saveAs() into base text file service
0.6.0 for monaco-editor-core
Do not ship defineKeybinding resources in standalone editor
debug: use default tree indentation of 12 pixels
replEditor polish: no need to import repl.css twice
better hover margins
push getDirty(), isDirty() and revertAll() for untitled into base class
:lipstick:
simplify all tests that deal with textFileServices
fix tslint.json
hover fade in
add linear css keyword
fix hover width
don't wait while ext host starts, fixes #10535
debt - get rid of identifiers.ts
debug: more restrictive with Variable id
drop gulp-symdest
[theme service] Avoid array constructions when collecting rules
add heuristic for label highlights when only filterText but not the label matches, fixes #11466
add eslint as dev-dependency
use `insertText` when score suggestions, fixes #11423
modeId falls back to current editor model fixes #11331
debug: disconnect icons
don't use instanceof check but trust the data, fixes #10703
lock distro version
isolate macIntegration (from electronFileTracker)
fix typo in 'Capabilities'
move vscode:openFiles handling to integration.ts
bump chokidar to 1.6
open recent cleanup
code cleanup
quick open: less hectic scrollbar flashes
Add 'Go to Symbol' to the 'Go' menu (fixes #11494)
Recent folders list changes when opening folder in extension debug window (fixes #11164)
Dragging a folder onto a tab should not show drop acceptance feedback (fixes #8362)
add missing english alias for global actions
fix minor typo
remove unused code
let => const
Increase the recent folder list capacity (fixes #11460)
allow to close dirty diff editor if file is opened anywhere else
Cannot use message service before workbench is up (fixes #9769)
remove global actions from activity bar part
Message service show action buttons in reverse order (fixes #11311)
Images do not show updated when changed on disk (fixes #7951)
add action to open extensions folder
Add osx + linux launch configs to debug vscode from vscode
handle edge case, fixes #11402
add LICENSES.chromium.html to build
Windows: delete Credits_45.0.2454.85.html after install (replaced with LICENSES.chromium.html)
use nicer syntax for optional methods, #11203
Added konsole as a default terminal for KDE Plasma
wire up progress callback, fixes #11442
bring selection/focus back to editor after updating the zone widget height, fixes #11408
unflow the panel when hidden
try to get output for tests on appveyor
Improve Terminal API documentation
Force focus when the terminal panel is already visible
Revert "Use a config interface for terminal creation in API"
fix corner case for scroll command when end line is visible in viewport
fix #11232
Infinite loop when closing several tabs (fixes #11394)
hc: a bit of padding for explorer rename box (#11226)
hc: do not push active tab
Cannot read property 'charCodeAt' of null when saving untitled file in Makefile mode (fixes #11395)
Extract ReplEditor to its own file
Rename editorBrowserContribution -> editorContribution
Store directly the editor contributions ctors
Introduce and adopt @editorBrowserContribution
Add and adopt @commonEditorContribution
repl input: show vertical scroll bar
debug: polish preconditions for hitory previous and next actions
merge go to definition link with active link
Run OSS Tool
try harder
how did these tests came back?
Do not fire composite opened if open got ignored (another compoiste opened meanwhile)
build with node 6 to workaround VS 2015 update 3 issue
debug: ignore last empty line when computing line height
Typos in files.autoSave comment (fixes #11341)
debug: no longer needed to override tree twistie position
Adds forward link for #11162
Go back to red square icon for disconnect
Follow-up fix for #11003
debug repl uses ReplEditor
CodeEditorWidget has its contributions and actions overridable
revert valign to fix #11319
more border (for #11303)
Remove subproject adds
node-debug: fix for #11206
externalize link foreground color color
more settings support
[json] update language service
fix #11323
Use a config interface for terminal creation in API
Typo in closeOnFocusLost setting comment (fixes #11326)
Changing file icon theme to none applies it to only one VSCode window (fixes #11285)
Proper names for custom TM settings and add findRangeHighlight
use v1.12.0 of debug protocol
update node-debug
CSS color box is badly positioned. fixes #11296
Icon picker should have a last entry to search for icon packs on the marketplace for #11231
Adopt latest css loader plugin
Correct docs for IEditorScrollbarOptions.useShadows
disallow sorting from installed extensions
fix some extension query sortings
Move more bracket matching tests to textModelWithTokens.test.ts
improved code --help localization
fix #10140
debug repl: history next and previous only enable on last and first line
add update all extensions global command
fallback when no APPDATA is defined
Use proper names for find color settings
fix askpass ipc
close all extensions when going away from viewlet
fix #10127
Use inactive selection setting for non focussed selection
Tabs look bad in High Contrast theme (fixes #11303)
[icon themes] prefer file extensions over language association
Seti: font not perfectly aligned with file label (fixes #11227)
do not encode url when opening it
catch bad obsolete file format
debug: remove isAttach field from debugService, get it from configuration
use clickable instead of `a` tags
use SVG in tree twisties
debug new disconnect icon
fix bad commit
Rename input field not nice for folders without icons (fixes #11225)
fixes #8558
Rename input odd in high contrast theme (fixes #11226)
propagate extension installation errors to UI
http.proxyAuthorization setting
add better error messages
bump gulp-symdest
fix #11270
add icons for SymbolKind.Constant, fixes #11171
Disable 'dir' traversal
disconnect token on promise resolve/reject, cancel picker on next picker, fixes #11172
fixed #11263
a bit lighter icons for light theme
Mode detection doesn't work when file doesn't exist, from CLI, from extension mode (fixes #11219)
Typing into embedded editor moves focus into outer editor sometimes (fixes #10686)
stdFork: dispose of process.on('exit') listener
Quick open perform slow when includeSymbols settings is true (fixes #11177)
show commit when `--version`
fixes #11165
[icon theme] expanded folder name icons not showing
Add some terminal API tests
update node-debug
Push monaco.d.ts (fix build)
Improve terminal API docs
Allow terminal API requests to be queued and exec once initialized
Rename editor.dynamicWrapping to editor.wordWrap
Change the selection highlight color when not focussed
expose rangeHighlight as tm theme setting
Derive default color if not provided
Remove unused methods
Removes view menu for toggling render whitespace.
wire-up dispose calls, #9384
make CommandRegistry#register return a disposable, #9384
Implements whitespace rendering with modes 'boundary' and 'all'.
Eliminate modes.IToken
Extract Token to vs/editor/common/core/token
pimp up hover: first steps
:lipstick: clean suggest widget
ModeTransition only needs a mode's id
Reduce requirements for ILineContext
move viewlet / panel open and close events one level up to compositePart
remove findLineHightlight key from themes
Rename lineHighlight to rangeHighlight
do not filter symbol results based on resource
further simplify quick open around default handlers
Provide an option to not mix symbols and files in quick open (fixes #4512)
Update json language service
hide light bulb on text blur, fixes #11022
Update css languageservice
debug repl: renderLineHighlight: false
return ext recommendations telemetry event
return extension update event
debug: go back to auto expand elements
clear output as a global workbench action
fixes #10497
:lipstick:
group feature specific styling rules #11095
remove obsolete test launch config
Changes cursor animation to start at default solid/expanded state.
don't test for the number of methods...
debt - format code, remove unused bits
fix typo, bulp -> bulb
Clean up assertions
HTML completion tests
Revert "remove ubuntu, droid sans"
undo update change for now, #1396
more tests around editor close event
use onUnexpectedError over console.error
possible fix for #11079
service renames
Implements recently closed editors opening at same position as they were closed.
More information in README license.
Revert "Correct --locale suggestion in --help"
More lcov settings
node-debug: introduces new 'console' attribute
Emmet tweaks: remove extra languages from conditions (#11001)
Emmet tweaks: clean-up editorAccessor tests (#11009)
Simplify set/reset Emmet preferences and syntax profiles (#11003)
fixed broken markdown tests.
Added the --- seperator to the paragraph rule to allow heading-setext.2 rule to be recognized
update node-debug
runInTerminal: properly escape double quotes
runInTerminal: support env vars on windows
runInTerminal: support 'cwd' on windows
Moved TM Markdown seperator rule below the Paragraph rule to fix the alt heading 2 syntax highlighting.
workaround failing tests
Avoid multiple updates when file search is cached
Use getter for terminal API name property
little clean up
classify style rules appropriately
fix #9916
Manage EditorContextKeys.TextFocus outside the viewImpl
Extract editor context key management to EditorContextKeysManager
var -> let
remove ubuntu, droid sans
limit marketplace queries to 200 chars
query marketplace for uuids only
uuid.isUUID(value)
only add light bulb when editor has text focus, #11022
use minimist for locale parsing
debug: remove unnecessery actions from repl context menu
runInTerminal: use cwd and env (linux, macOS)
extract editor styles and settings
extensions.autoUpdate
remove deprecated extensions earlier
workaround eager cache cleansing, proper fix would be gc-listening across processes,  #11017
update all extensions
debug hover: use regex matching for all hovers
update inline errors widget on marker change, fixes #10912
no error codes, just error promises (#1396)
fix compile error
better fix for #10932
[icons] rename standard file icons to 'Standard'
[icons] support icons for expanded folders by name
[icons] rename contribution point to 'iconThemes'
[icons] remove explorer.showFileIcons setting (always on now, but icons theme is off by default)
[icons] remove icon themes configuration settings
close dirty write message when action taken
debt - avoid "window" access from common layer
Undo stack lost (fixes #10932)
[icons] icon theme selection picker and menu action
add rating sort order
workaround for #10970
debug hover: improve expression traversal
more extension query tests
extension query tests
fix test launch script
extract extension Query
remove immediate from extension search
startup: do not fail for invalid workspaces
fixes #10132
filter on recommendations
provide extension query sorting
fix crash in extension recommendations
suck in the repl for the build
Count lines in getHeightForString - fix #10980
Increase search service timeout
#55 Keep cache around and update when reopened
Remove color from italics in markdown in default theme
#55 Reuse tree entry as raw file match
#55 Reuse basename for glob matching
Converted the setting into an editor option named dynamicWrapping.
Rudimentary proof of concept for issue 1490
Added unit tests
#55 Start file traversal when QuickOpen opens
Add terminal hide by ID and fix show bug
Tidy up terminal createNew logic
Uplevel xterm.js
debug: multi line debug input
don't create MainThreadConfiguration twice...
fix #10963
append accepts multiple children
simple ext tips, contexts in extension viewlet
extension viewlet: model reflects search box
debug repl: completions
panel: no longer close on esc (consistency and ugly implementation)
debug action: use decorators
debug: adopt completions api
nuke historic unoffical way of formatting error messages
use string concat and rename escape trick to signal that it creates a code block, #10939
config - after write, reload the configuration
use latest debug protocol
tests around #update, #1396
HTML code completion
adjust test for new member, #1396
expose update in vscode.d.ts, #1396
add dead key test for macOS
fix dead-key issue on macOS
Add macOS IME test
restore configuration editing tests
first cut of WorkspaceConfiguration#update function, #1396
nicer WorkspaceConfiguration creation, #1396
test for index-access style, make object immutable,  #1396
first wiring of update-call,  #1396
ts - also disable channel reveal when using trace
Better names for scanner states
scanner: set initial offset
change scanner API from class to functional style
HTML parser with tests
remove unreliable tests
debug: null guard when having multiple enableBreakpointsFor contributions
tests for configuration editing
first cut config editing service
config - shuffle things around
debug: minor renaming in hover land
always listen on alt-key, show alt-command on altkey and hover, fixes #9861
always add ellipsis when there is more source, fixes #10826
use the workbench config service
config - add lookup method
restore previous conflict resolution with editor actions
Adding gulp methods for targeting arm systems
2nd part of the fix for #9500, consider the parent language
HTML parser with tests
fixing matchingexpression.
Incorporating code review comments.
learn more about the usage of the 'internal' format, #3210
fixes #10881
Partial fix for #9500
config - add method to get known configuration keys
debug: polish repl auto scroll
Remove unused code
add another test for TM snippet parsing
extension editor: adopt $ events
$: events
extension editor: proper scrollbar
arrays.insert
adjust webview scrollbar size
extension editor: :lipstick: navbar
pin it, #9138
align wording wrt to human readable strings
fix typo
More IME tests
add internal flag to signal that completion uses textmate snippets, #3210
debug: bring back selectionToWatch action
endsWith instead of equals for line end and snippet prefix, fixes #10824
more typed text model from workbench editor service
debug target launching in integrated terminal
extension editor: snippets
extension editor: grammars
dom: filter out empty children
extension editor: languages
extension editor: improve keybindings
:liptstick:
Don't bring output window to front if error gets logged.
replace CodeSnippet-ctor with static factory method with fromTextMate, fromInternal, fromEmmet
:lipstick: git world
debug: focus debug console action
[File Hierarchy] Old selection not removed upon new selection (fixes #10847)
improve auto fetch when there are no remotes
debug: tab needs to move focus from repl
updated file/folder icons
Token names renames and splitting up.
clarify nls string, #10831
improve fix for #10820
fix issue with split action enablement
less flaky config tests
Incorporating code review comments.
Incorporating code review comments.
update node-debug (runInTerminal request)
Improve evaluate on hover feature.
Missing semicolon
Use 'find' on Linux
Only 'git fetch' if there is a remote
Improve Edge IME handling (Microsoft/monaco-editor#104)
Extract TextAreaWrapper to its own file
Remove beginForcedWidgetFocus, endForcedWidgetFocus
Remove ICommandService from CommonCodeEditor
Remove usages of ICodeEditorService in CommonCodeEditor
Remove unused ITelemetryService from CommonCodeEditor
Introduce CodeEditor & adopt it
extension editor: keybindings
extension editor: render commands, menus
extension editor: JSON validation
extension editor: themes
:lipstick:
extension editor: show debuggers
debug: do not store full watch expression, just name and id
typescript should not steel focus
allow final tabstop snippets for all cursors, #9764
add failing test, fix test, the feature is actually not done. thi is so tdd - #9764
start with 'format code', #9764
fallback to invisibles if no guide setting
explorer view: wait for the explorer to be constructored before reacting on file icons
[themeservice] fix missing return
debugger: add support for reverse requests to VS Code; partial support for #10574
Support direction argument for folding command
debug: add clear console action as a global workbench action
more reliable test
debug: disconnect the debug session on configuration done error
extract Cache class
add tests for workspace config service
config - need to watch parent folder to detect ADD and DELETE of config
[plist] remove base helper, directly use node-module
fix dependencies
[icons] support multi segment file extension icon associations
[icons] folder name icon associations
[icons] no need to css-escape class names in html
extension editor: show settings contributions
debug: seperate stop and disconnect actions
fix #10624
dom: $(tag, attr, ...children)
[icons] associate schema for icon-themes
[schemas] move schema associations from json to configuration-editing and extension-editing
[icons] add schema for icon-theme.json file
[icons] polish properties for font icons
[icon sets] larger padding, font size control by icon set
debug: actions renaming
Simplify combinedDisposable
panel: take into account border top 1px height
icons - better input box width when icons are showing
icons - add classes for each extension
add 'resourceFilename' context key
icons - add folder class as well
galleryExtension.iconUrlFallback related to #10180
event.once
remove unused
Add default standalone editor font
SimpleConfigurationService returns the default config
Make `acceptSuggestionOnEnter` be configurable from the editor
wip: extension editor body content
refactor getReadme()
navbar in extension editor
some renames
Should stop sending global settings and keybindings via IPC (fixes #6094)
implement workbench config service using base config service
loadConfiguration => reloadConfiguration
more config service cleanup
introduce a config model on the workbench side
cleanup workbench config service
extract hasWorkspaceConfiguration and setUserConfiguration to workbench
merge workbench and platform config service
stop spammy console.log call
code clean up
use cdn for manifest too
Use 'dir' on Windows
update node-debug: completionRequest
explorer: open file on mouse up (fixes #8267, fixes #10775)
guard against invalid file resources on a low layer
fix tests on windows
proper uri usage
fix rename box when icons are used
very happy to delete settings.ts on main side
debt - perform fake typing in suggest model test
fix compile
make simple config service really simple
delete old node configuration service
more explict doc comment, #6874
add new configuration service with tests
#9786 fold and unfold multiple levels commands
add description propery to editor commands
default handling when command fails, #6874
debug protocol: add frameId attribute to CompletionsRequest
Inferr correct problem location for tsconfig.json file errors.
Remove 'Convert css-schema to browser.js' launch (now part of 'vscode-css-languageservice')
always create a new menu for the current context service, always create a new context service when creating an editor, #10075
cleaner args validation
[icons] remove dot on ext-file-icon class name
[file icons] support for font icons
[icons] don't show icons if icon theme is not valid id
[icons] use :before for explorer file icon
add config.reload()
remove unused var
Uri#fsPath should be empty when path is empty, fixes #10780
fix another corner case with quick open flickering
more config tests
fix linux build
debt - add tests for replaceIncomplete
add tests for config watcher
package after signing
parseMainProcessArgv
move keybindings out of legacy context
settings: let zoomLevel be a window config
clean up settings
icons: reduce delay in showing icons by waiting for extension host to be ready
always register text mime with mimetype
Creating new tab stack resets line wrap setting (fixes #10441)
fixes #7688, fixes #2936, fixes #2867, fixes #2208
Tests
Add lcov support
updated folder icons
[icon sets] settings renamed from iconSet to iconTheme
[file icon code assist] make selector stronger
[file icons] code assist for icon sets in settings
[fileicons] single setting, laguageId/fileName/ext and theme overrides
Quick open file search: flickers when typing while open (fixes #10537)
icons: avoid jumping icons when entering edit mode
icons: new folder shows as file
icons: update file class when extension host is ready
fix tests
#55: Use 'find' on OSX
Add VSCODE_DEV=1
Purge this
Many terminal API changes
better handling of incomplete suggestions, #2508
store position at which an item was requested, replace CompletionItem with lightweight alternative, #2508
suggest oracle should only know view model, not underlying items, #2508
CompletionModel#incomplete
simplify cancel
icons: lookup mode id via resource path and not potentially stale mime
decouple execPath from parsedArgs
env: remove isTestingFromCli flag
protect memoized properties
remove env.createPaths
move ipc handles to environment service
simplify extension host debug env
use memoization in environmentService
getter memoize support
memoize decorator
remove argv file handling
expose `command` and `additionalTextEdits` in API, wire it up, #6874
update node-debug
#9609 Reveal cursor while scrolling
icons: add more classes to explorer items
fileIcons => showFileIcons
icons: move CSS for icons into target (explorer)
Contribute JSON Schema for composer.json
debt - compute stats when scoring and filtering happens
more workspace service simplification
workaround for explorer freeze (for #9962)
files config can be null
accept-encoding uppercase
#55: Parse glob ahead of time
Revert "Remove name from terminal API since it's static"
Changed menu item language. (#10671)
Get TerminalConfigHelper to 100% test coverage
Add param and return type to sendText
Default file icon sets
Support file icons in explorer
File icons in ThemeService
add @readonly for DiagnosticsCollection#name
tests for undefined vs '', #10640
Uplevel xterm.js
Remove name from terminal API since it's static
jsdoc on terminal API
# 9609 Use completely visble lines in view port data for revealing and scrolling
add more commands for quick open
Remap istanbul coverage info at the end of running tests
experiment with forceLoad in runner
Extract SnippetController to its own file
Minor clean-up
Clean up IResourceService
showInputBox should return the empty string when nothing was enter but OK pressed, fixes #10640
more use of the (good) platform workspace service
Removed UserVoice (#10670)
add skeleton for ISuggestion#command, #6874
remove editor options from context service
get rid of singleFileMode
add ISuggestion#extraEdits, #6874
remove debugBrkFileWatcherPort
remove args.timestamp
remove another getOptions() call
move debugPluginHost parsing out of env
cleanup update manager
update node-debug
no more passing around of recent files/folders
Small tweaks
debt - more tests for SuggestModel
Requesting feature info.  (#10637)
add vsix download telemetry timer data
fix npe
add telemetry for marketplace CDN fallback code
getOptions()/updateOptions() only in workbench
Trying to get coverage for TS (part 2)
Try to get TS coverage
debt - add tests for SuggestModel#Context
debt - completion model tests, smarter caching
improve filter/score speed a little by avoiding uncessary string-creation, #10621
fix filtering issue when cursor moved before model was created, #10621
remove let from index.js
pathArguments => paths
fix extension installations
do not send falsify values to the renderer
Correct --locale suggestion in --help
proper fix for window background flashing
#9609 - Implement reveal line command
Added .bash_aliases to recognised extensions
Implement dispose and hide
Add Terminal.sendText API
Rename theme to colortheme
implement marketplace cdn fallback logic
isolate gallery.getAsset
remove black window flashiness
Adopt vscode-textmate@2.1.1
sugest widegt only knows about view model, not data model
expose sorting of suggestions
move more logic into suggest model
call it SuggestController
remove SuggestModel#accept|onDidAccept
renames
suggest - simplify cancel
debt: remove user settings!
debt: drop settings service from update manager
fix tests
less context serivce use
fix last use of getConfiguration()
remove getConfiguration() from workspace service
more cleanup
more env passing
one more down
use logExtensionHostCommunication from env service
assign execPath also in other places where we use environment service
fix issue with parsing
let execPath be a property of IEnvironmentService
get rid of version
align more stuff
use execPath from remote (node => electron-browser)
remove more stuff from IWindowConfiguration
reduce ICommandLineArgs and let it extend ParsedArgs
align wait, diff in cli and env
more env and cli alignment
cli: debugBrkExtensionHost => debugBrkPluginHost
cli: debugExtensionHostPort => debugPluginHost
cli: verboseLogging => verbose
send parsed process.argv over from main side to renderer
polish
paths.getDefaultUserDataPath
Adopt fast-plist
Make TypeScript extension ready for 2.0
todo
use request service everywhere
fix node configuration service
:lipstick:
Adopt vscode-textmate@2.1.0
Move html extension: setup & scanner
Remove standalone schemas
no more process.argv dependency in environmentService
keep environment service simple
suggest - simplify how to tell from which provider suggestions should comple, towards #2508
more direct use of product and pkg modules
extensionGallery:openExtension telemetry event
revert paths.ts defaults
remove fallback from package.ts and product.ts
remove unused path.join
add meaningful defaults to paths, product and package to survive test runs
more use of IEnvironmentService
use product over context service
update node-debug
sendText terminal API progress
improve request service interface
remove NodeRequestService
:lipstick:
extension gallery service uses IRequestService2
make json, download not call request
RequestService2
update comments
add todo
contain gallery code inside GalleryService
remove console.log
introduce and use IEnvironmentService to the renderer (for #6095)
Support setting terminal name
Pass terminal ID through when creating terminal instance
polish code
Simplify show/focus terminal functions
remove one no-op use of context service in tests
Progress on Terminal.show API
Remove unused code
bring back Ctrl+E for win/linux to use quick open
entering the lair of debt
fix tests
opacity for inactive title decorations
perf: do not run into O(n^2) when adding child to a folder
reduce one extra guessMimeTypes() call when resolving a folder in the explorer
optimize mime.guessMimeTypes()
remove ISuggestEvent#currentWord
debt - move scoring into completion model, honor the text range of each completion item
don't get fooled again...
Revert "debt - remove unused code"
debt - remove unused code
align names of CompletionItem and ISuggestion
default snippet suggestion sort order is 'bottom', #10467
remove unused
let => const
debt - make contributions when they are
Starting API
debt - remove unused 'only' option from SnippetSuggestions
do not resolve siblings unless needed (for #9962)
debt - one less overload
show license link only if extension sets one
less work guessing mime types (for #9962)
uninstall duplicate versions
fix #10313
Simplify calling move active editor command in move editor actions
introduce explorerResourceIsFolder context
Provide an option to keep quick open open on focus lost (fixes #444)
add `ignoreFocusOut` option to showInputBox and showQuickPick, #9918
Detect shebang for Groovy files
fix #10312
fixes #10427: dsql files not picked up as SQL syntax even when grammar has them
Validate user-written keybindings (#10452)
fix issue with duplicate tab labels
Remove IMode.configSupport
clean up for #9918
register global action to close quick open
getDirty() => isDirty()
AutoSave when app looses focus (fixes #5565)
shorter tab labels for #8499
Added editor.fontWeight and terminal.integrated.fontWeight configuration - Nagaraj
update node-debug and OSSREADME
[json] update to latest languageserver
[css] update to latest languageserver
Remove unused code
Clean-up
IKeybindingService2 -> IKeybindingService
Rename ContextKeyService type names
debt - suggest widget shouldn't know about that controller model but the completion model
Clean up contextkey type names
fix tests
File rename can close editors (fixes #10360)
KbExpr -> ContextKeyExpr
Rename IKeybindingService -> IContextKeyService
Refresh all terminal layouts on resize
Split IKeybindingService to different files
do not close file when renaming to different case (part of #10360)
git revert operation
git.countBadge
clean up git actions
Split IKeybindingService
quick open: clean up mess with how it closes and propagates
debt - remove unused stuff, modernize code
git commit message restore: drop storage service
stop the right event
remove unused code
Introduce IKeybindingService2
git lib: getCommit
don't push code without tests... #8093
add TextEditorSelectionChangeKind when emitting selection change event, #8093
Command-E on Mac behaves differently from other applications (fixes #3431)
missing )
drop octicon usage in suggest
Cannot distinguish different files with the same path.filename(x) (fixes #8499)
naive first cut of getPathLabels()
LinkedMap tests
stats - know how many scripts, styles, and UI elements are used
use path primitives when compute workspace relative path, fixes #10446
telemetry: uninstalling -> installing
some renamed in Map land
Clean up the View menu (fixes #9924)
Failed to save 'thefilename': A system error occured (ENOTSUP: operation not supported on socket, fdatasync) (fixes #10408)
add git setting 'git.countUntracked'
ignore untracked in git change count badge
don't pollute the trigger ch listeners with snippet providers
tweak onClick event
function => =>
Revert "home, end in suggest"
git: add 'signed off' commit to git changes view
git: add optional 'signoff' to commits
fix clearTimeout
Revert "update node-debug for xhr caching"
Deleting or renaming a file or its parent with dirty within should prompt user (fixes #9313)
registerEditorCommand2 -> registerEditorCommand
Unable to open the file because the associated text model is undefined.. (fixes #9865)
Spelling problem fixed...
Opening already opened editor should update its title (fixes #9794)
update node-debug for xhr caching
#55 Sort and limit file results in search process
#55 Include measurements for cached results
[css] update css language service
Remove redundant args, check directory
Watch directory and watch resolved symlinks if they exist
use lastIndexOf for parameter hints, still just educated guessing, #10293
Uplevel xterm.js
Implement terminal scroll bar
use scale transform instead of translate, fixes #10241
its tough
damn it
Adopt @editorAction
make code launchers specific on the flavor
adapt to code.exe
set name
open extension from URI
fix code-cli
use URI for UrlService
add urlProtocol to product.json
oops
Import translations
improve test script
fix build
add new setting editor.codeLens and deprecate the old editor.referenceInfos settings, #10238
debt - remove unused code
render paragraphs as such, fixes #10311
[cpp] add grammar update script
Updated c++.json to atom/language-c@7922a22 (2016-05-24)
Updated c.json to atom/language-c@3fe925a (2016-05-27)
ask for extension icon in query
Save: Flush to disk after writing to file (fixes #9589)
win32: customize plain electron for dev
do not use for-of and const
linux: customize plain electron for dev
darwin: customize plain electron for dev
update tests
es6ify gulpfile.common
move stringDiff and make minal code, reuse for all format operations (doc, range, on type)
Improve message for `tabSize` and `insertSpaces`
fix issue with "Close All"
don't use es6 on index.js
extra comma
update tests
don't restore view state as we have trustworthy edits
Closing a dirty split editor (existing OR untitled) should not affect the initial editor (fixes #8983)
remove unused services
restore old command deprecation warning
Revert "Implement terminal scroll bar"
Implement terminal scroll bar
Add context key for terminal scroll up/down
first cut of more minimal text edits
Add actions to move tabs within groups (Ctrl-Shift-PgUp and Ctrl-Shift-PgDown) (fixes #10291)
expose commands to move an editor in a group left and right (for #10291)
Move terminal commands into skipped commands
Improve commandsToSkipShell wording
Support a list of commands to skip handling by shell
Support standard terminal scroll down/up 1 line keybindings
Provide setting to not show read-only full settings buffer when opening Settings (fixes #9904)
home, end in suggest
files.associations intellisense does not work within quotation marks. Fxes #10184
Revert "Add ctrl+p and ctrl+n to CommonKeybindings"
Revert "Support ctrl+p/ctrl+n navigation in quickOpenWidget"
isolate index.js from index.html
oops
update css languageservice
improve consistency in env sent to renderer procs
add cancellation support for showInput and showQuickPick, #9377
Use the correct accessor (find the correct context keys)
More cleanup
Clean up `menuOpts`
Use options interface for editor actions and editor commands ctor
Editor Action kbOpts are and`ed with _precondition
Reduce usage of EditorAction.enabled
Focus is not in _precondition
fix command completions in keybindings.json
[glob] {**/package.json,**/project.json} matches too much (fixes #9917)
disable slack notications
remove legacy showTabsOverflowAction flag
handle editor commands from one file
clarity when completions are requested, #10098
moveEditorToRightGroup should not attempt to move the editor when it's the only editor in the group (fixes #9873)
code polish
click twice to open folder after start vscode (fixes #9834)
File -> Open Recent menu shows paths containing "&" wrong (fixes #10049)
open new editors from double-click always at the end (fixes #10208)
Add CP852 support (fixes #9468)
Make "Toggle Status Bar" a global setting (fixes #10246)
"Go" > "Switch Group" > "Side Group" should be labelled "Center Group" (fixes #10131)
warn about workbench.action.terminal.focus
removed ocaml extensions
don't auto close on single quote
Support CompletionItemKind.Method
Adopt more of `EditorAction._precondition`
Convert EditorAction.supported usages to _precondition usages
Add _precondition to all EditorAction`s
clean up - remove commented lines. Related 10194
clean up env passing from main to renderers
fix start arguments in launch ipc
repl input: tune line height
mainThreadEditorsTracker: skip editors with models not in the model service
debug: use editor as repl input
debt - provideCompletionItems should not return an array
debt - make editor adapter use overwrite[Before|After] instead of multiple suggest results
propagate product.urlProtocol
fix #9887
and more
missing monaco.d.ts
More cleanup around KbCtxKey
Move defaultValue to KbCtxKey
More adoption of KbCtxKey
Clean up editor commands
Introduce EditorCommand and adopt it
:lipstick:
pimp up open-url
wip: send openUrl only to the active window
Editor scroll by wrapped lines, lines, page, half page #9609
debt - make the SuggestAdapter return only one suggest result
debt - move resolve logic to ISuggestItem
debt - make snippets come in as completion provider
debt - fix overwriteBefore|After for suggestions once and then trust it
Assign members!
Add KbCtxKey and adopt it...
lifecycle is HARD
node: fromEventEmitter
Share common KbExpr instances
Move EditorKbExpr to editorCommon
EditorAction2 -> EditorAction
Clean up editor action post adoption
Adopting EditorAction2 in editor/contrib/quickOpen
Move state out of BaseEditorQuickOpenAction
Adopting EditorAction2
Adopting EditorAction2
Implement editor scroll command - #9609
sort code lenses by range and provider rank, #10061
wip: url service
Adopting EditorAction2
Adopting EditorAction2
electron ipc
no slack for PRs, never for success
Update debugConfigurationManager.ts
Adopt EditorAction2 in emmet actions
Extract emmet loading boilerplate
Adopt EditorAction2 in carret operations
Adopt EditorAction2 in comment actions
Introduce EditorAction2 and wire it up
only show failure notification once
wip: UrlService
[jade] convert to json: davidrios/jade-tmbundle@7c1304a (2016-04-29)
less spamy travis notifications
add `resolveDocumentLink` method to the API
add `resolveLink` and allow incomplete DocumentLink
debug: Use a dynamic chunk size based on the number of elements
2nd try to disable mail, enable slack
Revert "make travis post on slack instead of sending mail"
make travis post on slack instead of sending mail
add custom link provider for vscode.d.ts
fix #9576
fix #9901
grammar update script: Generalize as  /build/npm/update-grammar
TS completes single quote in comments fixes #10068
send snippetCount and textCount
services.test: fix refactoring mistake
debug: no need to null out everything in dispose of model
missing monaco.d.ts changes
missing monaco.d.ts changes
debt - add some XYZ.isXYZ methods to the ext host types.
debug: do not allow configurations with no name to appear in dropdown
debug: import linting
fix #10065
allow a Location to be created without a range or position
adopt recommended ctor signature
deprecate old ctor but keep it working
Update ThirdPartyNotices
debt: remove composite events from event service
wire up WorkspaceSymbolProvider
[javascript] update grammar, grammar as JSON
[typescript] evolve update script, emit grammar as JSON
[typescript] update grammar script improvements
Reduce usage of EditorAction.isSupported()
add `resolveWorkspaceSymbol` method and wire it up, not yet exposed in the API
prep SymbolEntry for new features, stop ignoring non-'file'-schema resources, stop ignoring result not getting a highlight
[typescript] update grammar (Microsoft/TypeScript-TmLanguage@1cf745c)
[typescript] grammar-update script
keep order more stable when sorting, add diagnostic message to inform about limit, #9826
sort by severity when limiting diagnostics list, #9826
debt - test for diagnostics limit
debt - move diagnostics tests
debt - editor links should use opener service, #9906
debt - opener service supporting side by side, #9906
debt - use opener service in editor, #9906
bring back basic suggest telemetry
version bump
Update debugConfigurationManager.ts
Check if adapter is null and let it print errors
[css] code assist shows old variable names (#9944)
Update css and json language services to full versions
Update ThirdPartyNotices.txt
Update shrinkwrap for packaged extensions
Remove textarea handle from terminal
[json] Update language service
fixes #9907: Intellisense is not working when I type . in settings files
store pending config change event and 'replay' when becoming visible, fixes #9892
Revert "hidden editor shouldn't listen to events, #9705"
[json] update language-service
[json] no problem marker when schema can not be loaded
Reverting PR to 'pub' as an emmet supported mode
fix markdown links, fixes #9889
Add emmet support for .pug files (#9811)
add compositeOpen telemetry event
[json] Update language service
cleanup hygiene
lint errors
drop lodash dependency
fix #8317
New terminal -> New Terminal
Update json language-service
[json] Improved snippets proposals for extension developments
fix #7204
send out active viewlet change event
fix #9854
[json] word pattern to match full string and number literals
[json] set filter text for all property proposals
fixes #9731: [Configuration] Get configuration doesn't return default value if not found.
remove left over log statement
add lodash as dev dependency
use debug protocol 1.11.0 and latest node-debug
show worker warning only when running in web, fixes #9836
update/align labels for snippets actions, fixes #9838
recommand to disable 'quickSuggestions' when using 'tabCompletion', #9788
fixes #9835
hidden editor shouldn't listen to events, #9705
debug: tune variable page interval display
debug: only use : after name if there is a value
only show nps for english language users
lint
use later in post extension uninstall message
fixes #9824
updated configVariables to fix #9752
update node-debug; fix Microsoft/vscode#9771
Focus terminal before running paste command
Turn terminal blinking off by default
Restore prev commit msg using `IStorageService`
accept gzipped manifests
fix #6402
handle content encoding gzip from service calls
Travis builds post coverage info to coveralls.io and add README badge.
clean all paths
`getLog` added to srv & clt-srv plumbing.
move license
fix test failure after localeCompare change
uninstall all versions of an extension
use selected text with non empty selection, fixes #9762
send extension installation duration
don't add separator to empty actions array, #9547
force widget focus before checking for actions, fixes #9759
update order of editor context menu,  #9737
show nps message
debug: also pick up namedVariables for evaluate
oops
fix skip version checking in nps code
allow shared process debugging
Addresses #3690 high-contrast less hacky in editor
update node-debug
Apply focus styles when terminal element is focused
Have terminalFocus also work on textarea focus
update node-debug
[go} adopt language configuration settings from go extension
Adopt powershell to #9281
Update cs & json to latest languageservice
fix #8169
update 'open' doc, #9651
workaround missing config change event, #9705
use 'value' instead of 'amount'
Use position starting from 1 instead of Zero to align with existing api
Update json-languageservice
debt - remove strings.localeCompare for native localeCompare
'inline' sorting demotes snippets when labels are equal, #9286
improve unhappy path when installing extensions
use gzip in gallery API query
Remove schema-schema (already part of the JSON language service)
update node-debug
Revert "Revert "Revert "Revert "don't filter on `codeSnippet` but only on `label` and `filterText`, fixes #6320""""
debug: do not cancel 'disconnect' promise on end of session
add 'vscode.executeLinkProvider' command
honor order when merging contributed menu items with legacy items, legacy items have order zero, #9153
more menu sorting tests, #9153
:lipstick: NPS
use url parameters for NPS
wip: NPS
resolve casing issue
add tests menu service, for #9153
move menuService to common
relax enablement behaviour, #9286
debug variable paging: support object properties for arrays
implement assetTypes for gallery requests
add snippet picker, #9286
add setting 'tabCompletion' which defaults to false, #9579
Reduce sash z-index to 20, remove z-index from workbench part
:lipstick: extensions viewlet
[json] set trigger characters
[html] fix filterText and add overwriteBefore
Adopt SnippetRegistry and polish
Separate SnippetRegistry and polish APIs
debug: fix last variable chunk indexes
Add file walk telemetry (#9640)
adopt latest debug protocol
update node-debug
enable variable paging
adopt 'totalCount' -> 'totalVariables' change
use latest debug protocol
Implement #8234
#55: Improve result sorting performance (#9602)
Dynamically listen to tab focus mode keybindings
Allow focus to escape the integrated terminal
debug: fix substituting command variables inside objects
debug: only send chunk range when totalCount explicitly specified by adapter
debug: show type on hover in watch expressions
Uplevel xterm.js
debug: mark function breakpoints as disabled if debug type does not support them
Uplevel xterm.js
use git template from workspace when not absolute
support headless vsix installations
debug: hint for configuration name on hover
debug debt: debug select action item extends SelectActionItem
fix proxy regex validator
Update JSON Schema for JS and TS #8221
implement touch interaction in list
debug: polish constructor formating
debug: support variable paging
debug: Scope is also an ExpressionContainer
Bold markdown headings for accessibility Addresses #4502
Uplevel xterm.js
Migrate all other languages to language-configuration.json
Migrate JS/TS to language-configuration
Migrate PHP to language-configuration
Migrate JSON to language-configuration
Add schema for language-configuration.json
fix NPE accessing docElement
Adopt css to language-configuration
More comments on deprecated LanguageConfiguration settings
Implement left, right cursor move commands
allow users to skip file associations in setup
debug: null guards that help when launching invalid js
Emulate LanguageConfiguration.__electricCharacterSupport.docComment with autoClosingPairs
remove duplicate launch Code checkbox from setup
debt - remove remains of old 'shouldShowInContextMenu' logic
re-compute links when LinkProviderRegistry changes
registerDocumentLinkProvider
Reimplement viewport top/bottom/center based on model line
debug: adopt menuOpts for context menu actions
debug: destrcture imports polish
close input-box on focus lost, fixes  #8449
fill in snippets, reuse array
move tabCompletion to suggest
use proper file types in windows associations
add oss specific setup fields
cleanup
use new "breakpoints" contribution point
change command id, #9286
fixes #9376
stdfork: on vscode exit still close server
F8 Code Action Rendering. fixes #9299
fix win drive letter lower case logic, #9393
fix open recent shortcut
don't restore git message on reset
#55: Add performance test for QuickOpen (#9545)
debug: be less picky about debug evaluate enablement
fixes #1778: [less] mixins ") expected" errors
fixes #9243
document extensionHomePath
create setup.exe in .build folder
debt - remove unsed 'shouldAutotriggerSuggest'
move definition of 'wordBasedSuggestions' to editor
move inno setup recipe file to oss repository
add inno bitmaps
compare functions are hard, fix #9421
simplify snippet registry
debug protocol: add variables paging
[json] hover in JSON documents hides '*', fixes #8068
first cut of tab completion, #9286
tests
Cleam up
Implement lineViewTop, lineViewBottom, lineViewCenter
set Ctrl R to open recent
add jsconfig.json
don't load source for stack frames without source
debug: introduce breakpoints extension point
win32 setup skeleton
eslint
extract vscode linux build scripts
dynamically require gulp files
es6ify gulpfile.vscode.js
remove some file extensions
debug: only hide the hover widget if the mouse leave event is outside the hover
Added missing "rem" unit
fixes #8612: Editor inherits Abyss theme in find widget
fixes #8977: package.json dependency hover can break with links
debug: remove context menu action 'add to watch'
debug: differentiate telemetry and user visible message
rename electron helper
implement retry in rimraf
debug: listen on 'continued' event
debug polish: use full name
open editors: null guards
add ContinuedEvent to debug protocol
[Terminal] Run entire text if selection is empty
Implement line up and down for cursor move #9143
fix bad compile
reduce logging output during build
fix merge compile error
Revised placement
Added more T-SQL keywords
Move panel event handlers to panel
Add a context menu to the terminal
update node-debug
Support IMEs
#55: Batch results for IPC (#9380)
revert gulp atom electron
delayed tree refresh in problems view #9197
update gulp atom electron
fix #9442
Use space to open file preview in editor
fix #8624
fixes #9250
es6ify build scripts
dispose replace preview diff editor
fixes #9269
fix formatting
enable telemetry for git status bar actions
fix casing
format null telemetry service for debugging
update node-debug
Windows external terminal default to %COMSPEC%
Allow workspaceContains to specify directories (fixes #8295).
Disable ctrl+shift+c/v keybindings on mac
Follow and watch settings.json single-level symlinks
Use constant line-height of terminal
Add note about Windows\sysnative in terminal settings
extract SnippetConfig type, #9286
Code review
tests for snippet options, #9286
update 'snippetSuggestions' config, #9286
move sorting and snippet selection into low level function, #9286
Moving an editor across groups does not carry over text view state (fixes #9339)
Select all does not focus editor if targeting the editor (fixes #9329)
better keybindings
Add global commands to move an editor one group to the left or right (fixes #8185)
add 'editor.snippetSuggestions'-config, #9286
'revealIfOpened' flag should start at active editor (fixes #9265)
fix #9326
add 'snippetOrder' property, #9286
start CompletionModel tests, #9286
move suggest/completion model to common for easy tests, #9286
extract filtering/sorting, make parameter, #9286
add flag to showTabsOverflowAction
update comments
fix #9300
Hover on a file name in explorer should display file name (fixes #5581)
var => let/const
support auto indentation in python #3754
update node-debug
[snippets] avoid incomplete proposals
[css/less/sass] improved word rules
[monaco] incomplete completion list not working
Collect telemetry for #55 - update from feedback
move command - add more actions support
fix #8917
better handling of error case, #8917
be a little more explicit about 'navigation' group, #9153
[CSS] Current color indicator freezes on old color, fixes  #9132
Use variable name hoverMessage instead of htmlMessage
Update c/c++ grammar (May27)
bring back editor actions for #7666
group actions => editor actions
menu item order, group order, #9153
prevent bad cursor on scrollbar in tabs container
tests
fix activity action showing blue feedback on mouse click when showing badge
implement cursor move command
'revealIfOpened' flag should start at active editor (fixes #9265)
check on activeActions, fixes #8995
mirror 'source' when cursor changes, #8093
write the for loop explicitly
context menu - append old contributed action to the end
fixes #9222: missing outlining expander
Div per line decoration
Revert "Revert "code editor creators should create scoped keybinding services or not""
title: instant refresh on startup
clear out the control if the context is no longer present
better context solution
Several CJK strings on the UI are very difficult to read on standard definition monitors due to font weight and size (fixes #8653)
[Regression 1.3] Command palette no longer mouse-accessible (fixes #8913)
clean up
make testcase async
add debounceEvent testcase
Collect telemetry for #55
use new 'revealIfOpened' flag when opening a declaration, fixes #7432
show extension icon only when loaded
use editor font in rename widget
cleanup
show installed extensions
use themes category, not tag
extension viewlet keyboard accessibility
allow to always show a pick entry even when the user searches (for #5073)
bug: need to update editor group toolbar when changing active tab, otherwise split action can go missing
extension viewlet: page up / down
css dnd polish
editor container is always 100% height
improve extension list performance
reveal extensions when focusing
value scheme component, fixes #8468
Implement #9010
fix compile errors from fix for #8647
Editor should not handle all draggable objects (fixes #9179)
be aware that 'asAbsolutePath' might be 'null', fixes #8793
increase auto update check period
remove last checked update
oops
always convert args to strings
create paths in cli process main
wip: do not set context to title area
reparent the containers on move and rochade
The window has crashed #8647
bring back the isSupported method cos they are used for the F1 list
find position of title area by walking up
get rid of instantiation service array
get rid of title area control array
get rid of containers array
change LanguageFilter matching rule to be the max not the sum of each match, fixes #7031
move progress bar of editors into container
Remove unused ext host <-> main thread comm class
connect themes to ext acquisition
get rid of another container array
add titlecontrol#getContainer()
installing exts should not be scoped with version
be aware that 'asAbsolutePath' might be 'null', fixes #8793
handle no readme. call super set input.
introduce a new container for editor and title
container => silo
files.exclude **/.hg (fixes #9157)
enable 'Restart Frame' only for participating debug adapters
format
Add mouse-keyboard crossover to prevent menu bar from showing up.
Consistent naming for ext host <-> main process communication
ext host - extend *Shape classes
missed updating to relativeFile
Rename extHostProtocol to extHost.protocol
add 'Restart Frame'; fixes #9145
scroll extensions to top
fix typos
debug protcol: add restartFrame
Revert "revert changes to gulp files"
fix 30% cpu spikes on OSX gulp watch
change all occurrences only when model is writeable
don't make cut,copy,paste show in F1 menu
more keys, move keys
remove getGroupId and shouldShowInContextMenu
remove ShowInContextMenu flag
fix staticServices in standalone editor
migrate quickOutline and quickCommand actions
remove unused 'QuickCommandsEditorAction'
fix package json dependencies
clean & fix git template message usage
hc theme tweak
tabs: same drop color as tree
-20 bytes memory usage per model line
fix package json dependencies
fix version
Cursor invisible on long lines when scrolled horizontally (fixes #8828)
Changed `getCommitInfo` to `getCommitTemplate`
revert changes to gulp files
clean up
oops
tree: focus first child on key right
cleanup top level gulpfile
use strict
forgot top level
remove VSCODE_BUILD_QUIET
move userSettings down to base
npe
missing s
use Ubuntu font
improve fonts
update node-debug
Proper copy and paste support for integrated terminal
Fallback to default font with invalid editor.fontSize
Uplevel xterm.js
Add new terminal cursor blink setting
Add -p to --help CLI output
just return file path if workspaceRoot is undefined
renaming to relativeFile
changing to use workspaceRoot instead of cwd
more tests for search model
Remove null check for services that is needed for tests
clean up tabs dnd
git.confirmSync
update mention bot configuration
show recommended extensions
improve extension viewlet layout
Sudden inability to scroll and type in editor screen (fixes #9045)
use better OS X default font
Improving test infra. Tests for search model
scope sockets to version
Delete unreferenced svg files
add git.autorefresh setting
do not call git status when window is not focused
wrap user env in a mark
use TPromise
[json] User defined schemas without file association are not picked up
some let => const
get rid of extra editor container maps
fix url paths
Deleting a file in the current editor while focus is in terminal will focus the editor (fixes #9014)
inline one svg that fails to be minified otherwise
avoid more duplicates
reolved code review comments #8042
remove unused
New TS builder stops if Syntax errors exist and doesn't check for semantic errors
Import i18n files
first cut get rid of hc hacks
adding relFile to support substituting the path tot he current open file realtive to cwd
Add proper package replace metadata to deb control
Add breaks visual-studio-code to deb control file
Set variable value: on error do not restore original value if error box is open
Clean up linkComputer
Open editors: only reveal the element if it is not visible
tree: improve revealTopDocumentation and null guard
back to ATOM_SHELL_INTERNAL_RUN_AS_NODE
Revert "Log warning when menu uses bad `commandId`"
less hectic auto focus call
code polish
Tweaked changesView.onCommitInputShown
Deleted test_git_file.txt
Cleaned up console log messages.
Restore prev commit msg after undo last commit.
changes to resolve code review issues #8042
debug: Evaluate all watch expressions when changing variable value
adopt revealIfOpened in some places
Tweaked getting commit.template
panel: add focus panel action
use refcounting for resources in stacks model
block large images from loading embedded
debug: return 'supportsVariableType' == true for `InitializeRequestArguments`
image dimensions in hover (for #3414)
rename to make problems code consistent
back to electron 0.37.6
adopt ITextEditorOptions
introduce option to reveal an editor (for #8714)
fix imports for GroupArrangement
Make supportsVariableType optional
update debug protocol: add supportsVariableType
Uplevel xterm.js
sorting is hard...
migrate 'format' context menu entry
debug: verified breakpoint should have priority over dirty file
migrate rename and change all
debug: only send breakpoints after save when already debugging
go to def, peek def action as context menu contributions
context values like `editorHasDefinitonProvider` et al, first adoption for ReferenceSearch
debug protocol: add 'sourceModified' attribute to SetBreakpointsArguments
debug: Show errors returned from sourceRequest
editor.cursorStyle can also be underline
open editors: remove unused service
remove unused code
fix #7715
towards a registerAction function
commands - use CommandRegistry when it is just a command
support mime-type when showing source from non-files in editor
fix #8519
allow ITextEditorOptions when opening editor
Adding a task template for maven
use input for tree refresh
fix #8829
debug: introduce electronDebugActions.ts
use prerelease version of debug protocol
turn serviceId into _serviceBrand:any to follow common practive
Log warning when menu uses bad `commandId`
debug protocol: added 'mimeType' attribute to SourceResponse
fix css glitch
image css tweaks
openEditorsViewer: remove dependency to electron browser
fix #8620
Clean extensions OSSREADME.json since the tool now can scan all npm-shrinkwrap.json files
commands - activate first, check for command second
command - move IKeybindingService#executeCommand to ICommandService
fix #8627
commands - add CommandService, make KeybindingService use it
move CommandRegistry out of KeybindingsRegistry
fix #8626
debug: move DebugViewRegistry to its own file
improved display for binary resources
Auto expand logic for added files #8278
Implement #8278
Replaced README image of product to reflect new UI
Add tests for --help
Improve CLI --help formatting
update node-debug: async sourcemaps
Add terminal.integrated.fontLigatures setting
remove unused css rules
move more stuff from browser to common
proper fix for target environment violation
fix #8625
do not open zip directory streams
update zip tests
Revert "more fixes for #8578"
rename index file 'keybindingService' to 'keybinding' such that it is aligned with the rest
#8515 Refactor Search models
add zip tests
explain why const is better then function
output: move outputEditorInput and outputServices to browser/
fix #8774
Revert "what"
always create character pair support, fixes #8662
remove autoClosingPairs, surroundingPair in favour of deprecated api and language config file, fixes #8737
more fixes for #8578
fixes #5146
what
console
fix a bit of #8578
fixes #5000
fixes #4575
fixes #4574
fixes #4572
fixes #8804
Support to use groups over position in IEditorGroupService (fixes #7860)
debt - use a proper way to collect keys from KbExpr
debug: variables hover do not switch between type and value hover
fix npe with editor options
debt - remove useless interfaces
Allow to use editor options interface without creating EditorOptions instance (fixes #6604)
debug: fix inconsistent behaviour of 'Run to Cursor'
debug: do not show canceled error message to user
make git service debuggable
electron 1.2.6
debug: introduce IExtHostConfig
Eliminate all schema based attributes from IEnvConfig
debt - use modern Events for Action
try with 1.2.6
Introduce a context for opened editors and use for "Close Editor" (fixes #8715)
Goto menu title should be "Go to" (fixes #8538)
Load commit.template working.
Open with Code on drive open as file not folder (fixes #666)
double click on debug bar centers it again
fixes #6771
fixes #8762
debt - some small clean ups in actions.ts
Cleaning up, Pipeline working
fixes #2547
clarifying comment
debt - use declarative context menu for clear output action
always open settings pinned (for #8727)
Small tweaks to PR #8677
output fix keybinding conflict
launch.json and tasks.json pin only if config file is created
restore ability to drop folders or *.vsix into Code
adjust marketplace rating
make editor cut/copy/paste use the menu registry
debt - make MenuRegistry accept IMenuItem, not declared/user friendly menu items
add 'editorReadonly' context key
output: use keychord for toggling output
debug: do not allow breakpoints / watch expression to be undefined
proper compare function, fixes #8756
debt - remove unused renameModel.ts
fixes #8395
fix some todos (migration)
Remove unused outlineMarkers
Allow to disable drag and drop in the files explorer (fixes #4842)
remove dropfeedback when showing overlay
Revert "replace settings variables in debugger config #8042"
debug: variable substitution shouuld not replace full content
Exact matches in symbols fuzzy search are not on top (fixes #8673)
clean up
remove console log
asar bites
remove split editor action from extension editor
Delete objects from decorations map (#7609)
shut up asar
Revert "VS Code allows to open *.asar file from the command line (fixes #8723)"
Tabs: hover improvements (fixes #8728)
fixes #8558
remove install count opacity
checkin compile change
VS Code allows to open *.asar file from the command line (fixes #8723)
add scrollbar margin
add margin
fix windows extension actions height
remove comments
css rename
bump version to 1.4.0
remove suggest telemetry
workaround for #8708
Revert "Revert "Revert "don't filter on `codeSnippet` but only on `label` and `filterText`, fixes #6320"""
Adopt platform specific CSS rules (fixes #8243)
Tab does not always gets revealed when activating it via keyboard (fixes #8398)
Cannot open tab's context menu (e.g. go to next diff) with keyboard (fixes #8500)
Translations in command palette should only show up when they differ (fixes #8652)
Close Editor button on tab not readable by screenreader (fixes #8659)
Deleting folder containing dirty files closes dirty editors (fixes #8704)
docs(LanguageConfiguration): fix typo (interfaces --> interface)
css editor polish
Add Selection To Previous Find Match
fix bad node.js version
undo appveyor change
oss input
appveyor: experiment building with VS 2015?
make colorization tests happy for markdown
update to latest electron.d.ts
ATOM_SHELL_INTERNAL_RUN_AS_NODE => ELECTRON_RUN_AS_NODE
update to electron 1.2.5
corect oss library version infomation
Remove fully colored lists from dark+ theme, fixes #8266
Add category, fixes #8271
Remove .pp from Ruby extension list. Issue #5366
do not set zindex via JS
Active tab disappears when starting to drag (fixes #8631)
remove unused dependency
fix #8619
update OSSREADME  from npm-shrinkwrap
Tabs: Coloring issues (fixes #8564)
extensions input: use synthetic focus
Do not use filter icon, but elipses and move clear action up
Add shrinkwrap file to TypeScript extension
fix #8602
Add npm-shrinkwrap.json for css, json, php
Ctrl+k Ctrl+P not mapped to showAllEditors (fixes #8593)
Enable tabs by default (fixes #8573)
fix tests
scrolling to local anchors, fixes #8272
Less memory consumption - adopt vscode-textmate@2.0.1 (#7912)
Add windows specific guidance
lookup of custom style sheets, fixes #8287
update node-debug: shrinkwrap added
Change default value from null to []; fixed #8283
removed fileAccessor
hygene
more typings and some clean-up
Remove windows shellArgs config
shrinkwrap javascript extension
shrinkwrap markdown extension
Revert "code editor creators should create scoped keybinding services or not"
shrink_wrap for configuration-editing, #8570
Corrected fix for #6539.
fix #8506
(Erroring) Adding `getCommitInfo` * I'm going ahead and commiting changes for possibility of others seeing this code. I will rely on later being able to correctly rebase changes. * Added `getCommitInfo` to the git command chain: `IRawGitService`, `GitService`, `GitChannel`, `ChangesView`. * Is erroring in a side-effect that I am having problems debugging, as the contributing guidance doesn't explain debugging the node process side (explicitly anyway).
fix #7601
Translation import.
fix #7773
extensions: bring back message when extension uninstalled
OSSREADME - fixes for extensions/css
extensions viewlet: top level filter action
reset context key on init, #8458
tweak OSSREADME
#8284 shortcut for replace all
update node-debug and debug protocol
Add terminal HC focus indicator, remove redundant scrollbar
Extensions: allow tab to move focus out of search box
extensions: remove unused telemetryService
debug: toolbar drag prevent default to stop editor selecting text
Restore type based global symbole filtering for Ctrl+P (fixes #8502)
fix #8284
Use short labels for terminal panel actions
fixes #8514
fixes #8512
Ensure terminal process is created during showAndGetTerminalPanel promise
Use old-style icons for terminal and panel
Cannot find toString of null (fixes #8554)
Revert "added ability to resolve varaibles in configuration settings (variables such as ${workspaceRoot} and ${env...} environment variables"
added ability to resolve varaibles in configuration settings (variables such as ${workspaceRoot} and ${env...} environment variables
fix #8452 (#8482)
JSON seems to keep diagnostics around when document closes, for #5769
JSON seems to keep diagnostics around when document closes, fixes #5769
make sure ALT doesn't stick, #8435
Revert "Revert "don't filter on `codeSnippet` but only on `label` and `filterText`, fixes #6320""
recovered from refactoring
get latest vscode-css-languageservice
fix #8335
tweaks  to PR
Replace: viewlet size broken when replace expanded (fixes #8363)
refine message about alt-command,  #8435
removed unused var
Tweaked the PR
fixes #8325: CSS: No code complete for css variables
Emmet: canceling wrap shouldn't add tab to the active editor (#8489)
use message service to show errors, fixes #8505
extensions: include markdown.css in built vscode
warn when alt-command isn't supported, #8435
reuse action and update resource since editor title area also reuses the actions, fixes #8317
Use original-fs instead of manually ignoring ASAR files (fixes #8470)
fix #8296
fixed indentation
fixes #6685
on config changes, only update preview documents, fixes #8491
Render indent guides outside of the view line (#2192)
fix #8330
debug: actually set variable value on enter
debug: space to change variable value
debug: fix variable input box color in dark theme
fix #8302
Open Preview action on a markdown file is not shown when right clicking on the file in tabs mode (fixes #8380)
debug: resolve interactive variables inside objects
Files: logic to open dirty editor does not work well for many edits (fixes #8354)
align explorer actions in HC theme
allow to remove uri component with null and the empty string, fixes #8465
be prepared for all sorts of arguments, fixes #8262
very wrong equal comparision, fixes #8247
update wording, fixes #8396
fix #8369
fix #8309
fix #8280
Staging dirty new or existing file removes dirty editor (fixes #8303)
Tab is not revealed if it is too large to fit (fixes #8311)
Cannot read property 'done' of undefined (fixes #8471)
Tab DnD sometimes gets the wrong editor group as destination (fixes #8242)
Preview tab does not have a stable position (fixes #8245)
update node-debug
fix for screen cheese with long error messages
Markdown: hand cursor showing up in editor (fixes #8274)
Dragging a folder onto the empty spaces opens the currently selected file (fixes #8364)
can I commit as robot?
deliver and wire in icons, #8111
fix npe in views array of explorer viewlet
replace settings variables in debugger config #8042
reverted changes made to #8042, inadverted checkin (need to create a pull request instead)
changes to replace settings variables in launch config #8042
fixes #8110
font-weight 300 on Mac for italic font styles (fixes #8239)
improved goto declaration behaviour when selecting
update > refresh
Funnel getLineIndentGuide to viewLineParts
Add TextModel.getLineIndentGuide
Add TextModel.getIndentRanges()
Add getIndentLevel() to TextModel and ModelLine
Prevent multiple terminals from being created via createNew
Uplevel xterm.js
Do not rely on codeSnippet for filtering fixes #6620
update node-debug
Focus terminal next when exiting
update markdown test results
fixed #8015
Sync the file match model with removed matchs
fixed #8066
Sync the file match model with removed matches
update is OK to update toolbar
Close/Dirty button on tabs is not centered nicely on Windows/Linux (fixes #7976)
Improve Keyboard navigation while removing entries from results
Polish configuration section labels & add link
Do not use native Proxy as it breaks debugging vscode
extenions: fix install icon on win
improve keyboard navigation - focussing after removing
more schema doc for menus
wording
Small tweaks to PR #8155
bring back ext quick open handler and bundle it in workbench
Prevent goto definition when trying to copy (fixes #7827)
global cut/copy/paste command should use a when condition, fixes #6924
list widget null guard for row.domNode
add 'vscode.open' API command, fixes #566
Add command deprecation (fixes #8031)
warn/info about missing and duplicate commands
default order is @0
fixes #8177
Split up ext host <-> main thread communication to separate files
do not open an editor when editing a diff editor
pin an editor opened to the side via Cmd+2 or Cmd+3
extensions: add prefix to input name
[emmet] Support all the features (#8155)
do not leak node.js stat
fixes #8180
md extension should set baseUrl to document uri, webview should not override user baseUrl, fixes #7898
fix #8168
#8138 Hold making leftie editable until it is supported in workbench.
code editor creators should create scoped keybinding services or not
Screen reader accessibility
telemetrt and error handling
[powershell] fix tests for #7522
[rust] remove rust snippets (see discussion in #6430)
Buttons are cropped on the files save confirmation dialog while quitting VS Code (fixes #8008)
fix #8170
workaround #7498
Suggestion: Rename "Keep Editor" command to "Keep Open" (fixes #8026)
Cannot delete .asar file while VS Code is open (fixes #646)
fix compile error
Quick Open "ext" and "ext install" not working (fixes #8123)
cleanup & imports
Add support for multiline find (#313)
[css] Generalize languageModelCache
[json] use vscode-json-languageservice
No longer creating IWorkspaceContextService in compat worker
No more IRequestService in compat worker
Move IThreadService up to /workbench/
Clean up IThreadService
Use native JS Proxy for main <-> ext host proxies
Bring to /workbench/ all users of Remotable
Bring RemoteTelemetryService to vs/workbench
New cursor animation styles implemented
Monaco version to 0.5.3
Remove legacy JSON
Remove legacy JSON
Simplify worker protocol
Simplify IThreadService now that ICompatWorkerService is used
Corretly clean up terminal process when 'exit' is run
Remove ATOM_SHELL_INTERNAL_RUN_AS_NODE from terminal env
Remove PTY* env variables from terminal env
Extract compatibility worker management to ICompatWorkerService
No more SecondaryMarkerService in compat worker
json manages markers from the main thread
There is precisely one compatibility web worker
Remove unused IMarkerService in htmlWorker
Optimize the case when there are no emmet preferences
fix typo
make classNames type, prevent failure when no bodyClasses are set
Remove MirrorModelEmbedded as it is no longer used
Tweaked the preferences support
Don't move focus to terminal when running selection
Get run selected text in terminal working
Support for Emmet preferences and syntaxProfiles (#7926)
Set name of term on Windows to shell file name
workaround order challange
mouseleave/enter && keyup/down challanges
Faster gulp compile tasks
Improve monaco.d.ts generation task
make alt command behaviour smooth
Focus left editor and position correctly
Make leftie editable in replace preview diff editor
wire editor context menus
support group property for menu item and treat 'navigation' special
important extension recommendations
dont recommend installed extensions
fix debounce event
better 'parsing' of context keys
let the keybinding service act as scope when creating a menu
don't filter symbols in Cmd+T, fixes #8013
prepare for editor context menu
move logic from contributor to MenuService
add MenuId 'editor/context'
Remove deprecated methods
fixes #8063
add View Extensions menu action
extension viewlet actions
Toggle display for problems view
monaco-editor-core v0.5.0
The editor cannot be shipped without third party OSS anymore
marked now needs to be shipped in monaco-editor-core due to 51f2d539a60cf22955ccc64db39e060d39b85782
update monaco-editor-core changelog
Bring back MonacoEnvironment (rename GlobalEnvironment back to MonacoEnvironment)
fix ratings, install count in viewlet
@recommended
fixes #7990
#7974 - Support old action to show errors and warnings
Import latest translation files.
pimp up extension viewlet
add enable action to extension editor
Remove console.log
use webview in extension editor
Use MarkedString insetad of HTMLContentElement
Get run selection in terminal command ready
adjust line heights
remove scroll
Support terminal blinking cursor
bring back extension telemetry
Remove unused CSS file
Clarify terminal command names
Uplevel xterm.js
Remove TODO
Remove logging
Remove unused variable
Add selection of active terminal via dropdown
Use new hide panel icon
Add new terminal and close terminal icons
Diff editor for search and replace #7602
update node-debug; fixes #2472
show license action
do minimal encoding on of the baseUrl, #7898
:lipstick: names, structure
fix issue with simple icon selector
show label if icon is missing
filter context key changes by those I am interested in
bring back more extensions quick open & global commands
bring back ext install
create css styles for icons, used them instead of the icon paths
[css] use vscode-css-languageservice
restart needed feedback
Remove color decorator contribution
Remove legacy css, less and sass
tackle #8038 and decide later if this is a fix or workaround...
debug protocol: remove endLine/endColumn from SourceBreakpoint
markdown uses explorer/context menu
support 'explorer/context' menu
Search and Replace - #7602
Search and Replace implementation
use stable action identifiers
rename editor/primary to editor/title, remove editor/secondary
one actionBarContributor for now
debug protocol: add `endLine` and `endColumn` attributes
debug: show variable type on hover of name
render alt command
don't fire event when nothing changed
keybinding service need dom element to determine scope
Remove breakpoint flag
Cleanup merged settings and polish jsdoc
Addition of USE EXEC OPENQUERY syntax
Make experimental auto build a setting
Avoid cancel errors showing up when web workers are configured properly
update context keys more eagerly
actionBarContributor, scope keybindings services
Handle better the case when web workers are not available / misconfigured
debug protocol: add optional 'type' attribute
Revert "fixes #8034"
fix npe
install count and ratings in viewlet
Do not bundle css/less/scss with standalone editor (to be added as plugin)
debug: mixin capabilities
fixes #8034
fixes #7995
fixes #8034
fixes #6298
viewlet update notifications & progress
fixes #7343
Treat `.webmanifest` files as JSON
Adopt ModelBuilder in workbench
Move WorkspaceStats to /workbench/
Reduce artificial deps on IFileService
Cmd + number should focus editor at index and not focus groups or split (fixes #7647)
View Menu : UX Ideas (fixes #7700)
Double click on empty header area should open a new tab (fixes #7889)
show installing label
fixes #7985
replace ActionService with MenuService, merge both contribution points, add user friendly objects
extensions: increase install / uninstall actions
debug: read capabilites as result from launch and attach as well
extensions: open extensions viewlet action
Trim trailing whitespace new shortcut chord K + X
Allow Model to be constructed from IRawText
or types ftw
fix keybinding conflict on linux
proper URI construction
fix search box line height
fix common search clear button
Adopt model offset <-> position conversion methods in emmet code
Add ModelBuilder
global search clear button
fix extension search box in OSX
KeybindingService#onDidChangeContext
fix 'shaddow' typo
debounceEvent to deplay and merge events
remove viewlet splitter
prevent extension gallery error on dev setup
Added reference to Code of Conduct
Update TS grammar with fix 11.
Add support for build status
[standalone] add markers to code action provider API
introduce activation telemetry
refactoring
fix double quotes
fix toggle markdown preview/source \w keybinding
Refactor to pull active terminal mgmt to service
Setup events to update terminal dropdown
load extension editor
Populate terminalProcesses
Add close terminal button back
Make the terminal line height default to normal
Progress update in bulk edit
support button with just icon
fix extensionsViewlet bundling
Add os.release to help > report issues
remove urls
update node-debug
search for @popular
show install count
debug: fix rendering glithc with set variable error
pimp up extension actions
remove error handler
actions in editor
extension.outdated
hide update action if disabled
update node-debug
search by publisher
dark theme: inactive tab to have lower opacity
readme error case
dynamic ratings widget
UpdateAction
debug: set variable should show an error in a nice way
debug: rename box support validation
menus extension point
extension model: periodic update checks
easier to read syntax
extension editor: css
extension widgets, ratings
tsconfig : make the module resolution explicit
more explicit navigation in mru stack order
debug: move set / get expression value logic to super class
debug: do not show 'canceled' error messages to the user
inform about command duplications
extension details
Keybinding conflict (scrollPageDown, scrollPageUp) (fixes #7047)
keep userfriendly Command private
fix schema
fix issue in restoring editors
dedupe commands, last wins
update node-debug
remove console.log
fix npe issue
make command#when be like keybinding#when
add resource context key and drive it
add KeybindingService#getContextValue
workaround missing EditorInput#getResource
extension viewlet: images
delete markdown language from vscode
show readme
extension.readmeUrl
extensions viewlet: ux
list: focus
Added support Emmet for Sass and Stylus (#7887)
filterEvent
event: dom events
Update TypeScript dependency to ^1.8.10 (1.8.0 produces errors).
extension actions: more fixes
update node-debug (add variable value support)
what
extensions: keyboard navigation
add contextMatchesRules to expose when-clause evaluation
fix for #7882
combined install action
move conflict resolution into the message (this is a workaround because we do not show primary actions when tabs are enabled)
UI interactions
debug: add publisher as prefix to custom debug telemetry
fix issue with editor action resolution
extensions modle: on did update
wip: uninstall extension
wip: install action
extension model: getState
extensions model: react to events
Debug toolbar: grab / grabbing cursor
extension model: getInstalled, queryGallery
arrays.index
debug: polish loading and setting of x coordinate
debug: pixel math tunings for debu toolbar
open editors: also update dirty indicator when view gets visibe
open editors: do not allow left / right to expand and collapse groups
fix ui glitch with editor width ratios
nls fix
Added order to snippet tab stops, '$3 $2 $1' will occur in the order $1, $2, $3.
Added wrapWithAbbreviation, updateTag, removeTag
tabs bugfixing and polish
docs(vscode.d.ts): fix typo ("a a" --> "a")
fix : Standalone Monaco text edit validation
wip: adopt IExtension
missed reference
Add 'vscode' as a keyword in the .desktop file so you can search for vscode not only for code
extensions model: first steps
Move terminal process to TerminalService
handle allOf at toplevel, fixes #7833
re-contribute configuration option; fixes #7832
Pull out tabs, add placeholder dropdown
TypeScript builder adoption
less hectic overflow updates
revert debug: also change variable value on enter
wtf keybindings
fixes #7777: [scss] validation doesn't disable
for now do not override Cmd+1/2/3 (for #7647)
remove unused sortedList
simpler way to prepare context menu
debug: also change variable value on enter
debug: double click on variable to set value
debug: smoothe out the d&d for action bar
do not switch file when untitled is opened and explorer gets focu
some fixes around untitled files
IExtension -> ILocalExtension
extensions UI
debug: make toolbar moveable
more consistent openEditors() behaviour
render local extensions
fire move event for all groups
md - differentiate between showPreview and showSource
complete separation between local and gallery
stacks: emit move event for groups when a group closes pushing the others to the left
split local vs gallery extensions
render default icon
drag to split
open editors: also us index of open editor in group for id
add path
add metadata to local extensions
move gallery metadata to own field
drop extension.path
drop galleryApiUrl
:lipstick:
fix query length from 1000 to ids.length
wip
Add linux setup link to packages
Update xterm.js version
Weird state with editors (fixes #7782)
:lipstick:
extension: path not optional
extension.manifest
fix npe
remove galleryInformation
not yet fit for explorer contribution
cleanup IGalleryExtension
debug: use the body.value as the new value for the variable
fix update regression
workaround context challanges when updating title actions
inline context, have one per command
Add generic version of Array.isArray
simplify extension events
compare string inputs by resource if present
still pass in value and mode if model exists
stop creating models with same URI
does this help for #7662 ?
use tablist role model for tabs
Add createDiffNavigator API
travis: split compile & optimize
fix tabs in hc theme
remove extension quick open & status bar widget
debug: editing variable support
allow IO from shared process in dev
fixes #7730: [json] Referencing **local** JSON schema from another local schema
log workbench editor config to telemetry
fix tests
overlay tweak when tabs disabled
support dnd from tab into editor area
standalone editor version bump
Mark optional arguments in editor API
handle orphaned dnd overlay
simplify open from dnd
fix warning
remove emitOutputSupport
remove old markdown contribution
fixes #7703
debug: change prefix of action variables to 'command'
fix npe when getting resource
previewPart must make sure model isn't disposed in the meanwhile
Allow folding of default settings
fixes #7748: [scss] Undesirable behavior when pressing enter after completing a Sass (SCSS) statement
fixes #6611: [rust] The keyword `where` can't be highlighted like others
bump version
Add `createData` option for web workers, clean up monaco.worker API
add icons for preview and view source
menus - have icon per context
fix resource detection for editor contributor
Tabs/Stacks: decide on settings (fixes #7643)
run optimize-vscode in travis
do not list node modules in gulpfile
When dragging a tab, Mouse cursor changes to a weird shape. (fixes #7747)
dnd: prevent bubbling
save preview icons before deletion begins
stacks: factory can be null
fixes #7115: [xml] does not work with characters other than the Latin
#7115: [xml] does not work with characters other than the Latin
fixes #7115: [xml] does not work with characters other than the Latin
fix tabs dnd feedback
drop feedback in editor area
restore dnd protection for URLs to open
debug protocol: add support for setting a variable
Add ansi-regex to baseModules to fix build
Only include StepBack in the DebugActionsWidget when supported
StepBack only enabled when supported
Add stepBack button to DebugActionsWidget - Without checking Capabilities
avoid comment leak to html
fix action enablement in group
revert Listen on explorer view collapse / expand to expand the fixed open editors view
fix stray processes
git service logging
pass on the resource to which the command is contributed
dnd drop feedback on editor area
reuse code to extract resources from DND
css
fix validation issue
more explicit context menu location: 'explorer/context'
Listen on explorer view collapse / expand to expand the fixed open editors view
add support context menu
temporarily 'fix' test failure
support for simple and theme-aware icons
support in-app DND to editor area
context.path -> context.where
fix width regression
strip ansi escape codes
fix pty.js dependencies in shrinkwrap
fix pty reference
clear title control when closing
put DND handler for editors into editor control
fixes #7543: [css-less-scss] problems are not having source information
debug: word break on all in repl
[css] browser.js not packaged: fixes #7707
debug: polish hover title
fix action sorting issue - larger isn't the same as equal
add createAction from command function
extract command runner
debug: add title for complex value hover
tabs container needs a height
css cleanup
add OSS license details
add tomorrow.css to exclusion list for hygiene
more padding for title label when tabs disabled
no more builder in title controls
list: useShadows options
editor action bar contributions
dispose tree and model in problems view
shared context menu for title controls
fix keybinding conflict
Add middle click close tab and remove panel action
fixes #7699: Monaco API: `css` / `scss` / `less` aren't bundling anymore in monaco
simplify theme
Need Close All action in tab context menu (fixes #7698)
Remove focus prev/next actions from panel
add timeout to avoid spamming
Add tab click event
Allow to bind keybindings for opening individual indexes of the opened editors (fixes #2211)
Remove tabs when terminal removed
use classList
initial html hover not showing
Tidy up
docs
use 'api' friendly css classes
Update typescript grammar (June 9)
fix issue with editors closing randomly
extract jsonLangaugeService
Update to latest jsonc-parser
actionbar cleanup
Terminal tabs progress
Edits made within the peek view do not create an open editor. (fixes #7621)
fix broken tabs dnd
fix some focus issues in tab div
Diff view needs more UX affordance when tabs enabled (fixes #7661)
Move tabs to top
Start terminal tabs
Add terminal actions to panel
Add an option to display control characters
color icons in suggestion widget
Clean up Search viewlet - Pattern input widget
add ActionBarContributor for editor actions and the corresponding command extensions
refresh title area when extensions are ready
Resizing groups with multiple editors causes tab header flashing (fixes #7665)
pin => keep editor
Clean up: Separate actions, widgets from SearchViewlet
VIEWLET_ID
add context to commands
no need to use the :before trick for hc theme actions
[css] support rename
workaround for #7660
add telemetry service in cli process
common properties in shared proc telemetry service
fix npe
extract contributed commands collection
take out ancient engines declaration
fix highlighting issue with fuzzy and wildcards
fix reading tabs config
[css] delay validation
fixes #7223
aria label for problems tree
move ActionService to workbench
Git: editor input cache is not aware of disposed inputs (fixes #7659)
Context click on tab changes its background color (fixes #7655)
update file exclusions for extensions
support to get a language id by filename/first line content
use new label param when calling previewHtml
:lipstick: use single quotes
whitespace issue
update preview on type, don't read document from disk
opacity trick to workaround, #5038
fix tomorrow night blue for markdown
fix solarized-light theme for markdown
fix solarized dark theme for markdown
fix red theme for markdown
fix quiet light theme for markdown
fix dimmed monokai for markdown
fix monokai for markdown
fix Kimbie theme for markdown
fix default themes for markdown
fix Abyss theme for markdown
fix Abyss theme for markdown
mimic default text bundle in textmate
replay: disable built-in markdown
fix hygiene issues
remove theme awareness opt-in
paragraphs stop at list item boundaries
use initData
code hygiene
prepackage markdown extension
remove console output
fix handling of achors without a workspace
theme support in htmlPreview
fix NPE
Split editor action does not show as disabled when limit hit (fixes #7651)
Never show pinEditor action when "workbench.previewEditors": false (fixes #7650)
update debug protocol to 1.10.0-pre
dispose inputs in history when removing
restore input when added from close event
move recently closed editors to history service
Reword remaining occurrences of sass to scss
[scss] missing activation event
debug: workaround to open viewlet no longer needed
[css extension] cache stylesheets ASTs
focus window after external drop
better handle case of dropped folder to tabs
DND: prevent bubble up
move generateNewIssueUrl to menus
debug: add enable all breakpoints as global workbench action
add setting to control where editors open (for #6787)
setting to control preview from quick open (#5554)
allow DND to tabs (from explorer or desktop)
more tab keyboard keys
fix focus issue when clicking on tab
fix issues with actions in editor title not showing
Added remove and disable all breakpoints actions to the command palette
Move LESS to extension
Remove redundant options arg
#6679 update action keys
Remove unecessary terminal focus
Move SCSS to extension
Polish cssParser imports
Change toggle terminal action back to toggleTerminal
Add utils.generateNewIssueUrl test for VSCODE_DEV env var
first global setting to control preview editors (#5554)
use more compact git ipc status messages
Make reportIssueUrl work with URLs containing ?
When saving all, save whatever files can be immediately saved, even if some can't be (fixes #7531)
Update npm shrinkwrap
Use specific xterm.js version as dependency
more tabs navigation support
more tab keybord navigation
On first launch.json creation open debug viewlet
DND: allow to copy a tab to a new group instead of moving
debug: workaround for php no longer need ed
add a setting to enable showing tabs
react to allowHugeRepositories
wrap all GitService.status calls in a throttler
do not call statusCount after huge repo
#6679 Accessibility
keyboard accessibility
custom scrollbar for tab container
Add LanguageService as facade
[CSS] User-Snippets are not listed by writing single line: fixes #7544
[css] move to extension
[json] name & test polishes
fix NPE
fix missing layout call in update()
assert that there is a configuration
#6679 telemetry logging
better tabs DND
use relevance sorting from marketplace
keep updates to minimum
less work for non structural changes
more dnd feedback
same drop feedback as tree
first cut DND for tabs
move more css around
share more css between title controls
update enablement of actions depending on overflow
raw html elements
keep active tab visible when resizing
fix null in hover
fix context passing in toolbar
Improve monaco.d.ts documentation
close to the right for tabs
use ieditoridentifier
only add editor actions for active editor to context menu
move IEditorContext around
fix enablement in context menu
fill editor actions into tab context menu
close action always comes last
focus next only when group is active
do not offer "unpin" for now
fix enablement
Add focusNext, focusPrevious commands, remove conflicting keybinding
Support hollow cursor on unfocused terminal
Follow OS X conventions Clicking on the dock when no window is open should open a new window, not reopen the last one
Update xterm dep to use master
Support ctrl+p/ctrl+n navigation in quickOpenWidget
Add keybindings for new and close terminals
Add ctrl+p and ctrl+n to CommonKeybindings
Generate monaco.d.ts continuously and check it in build
limit git repositories changes count behind option
#1927 trim and show ellipsis for long descriptions
Code Review for before/after decorations
#7487 Toggle focus from editor to panel
first cut context menu on tabs
merge "views" and "panel" menu
always reveal active tab
Refactored language definitions
Add close terminal action
allow to scroll with mouse wheel
fix hc theme
control drag hit zone
css fix
css cleanup
Use %0A for new lines
remove unused variable
css cleanup
Focus the newly created terminal
Setup basic create new terminal command
Update theme when no there are no active terminals
update node-debug
Handle an array of TerminalInstance's
Make message more consistent with issue template
Prefill new issue via Help > Report Issues
Added .dsql and .psql filetypes
#7487 Auto reveal
css tweak
simple first tabs support
:lipstick:
fix up StageAction and UnstageAction ctors
make some room for tabs container
wip
improve long commit check perf
git.enableLongCommitWarning config option
improve long commit message
fix layout issue
#6679 re-arrange soruce and line columns
Improve monaco-editor-core package.json
Remove decoratePromise
Ship README.md with monaco-editor-core
Wrap 3rd party code to make it clear in minified files
[configuration-editing] remove devDependency
editor.wordBasedSuggestions shows up last in default settings? fixes #7459
Rename sass modeId to scss in legacy mode
Update thirdpartynotices for scss grammar
Have terminalProcesses kill themselves when their parent is killed
Add SCSS grammar license statement
Use textmate for scss, rename sass to scss
[json] rename server to jsonServerMain
Show warning for a long commit message
no more workbench readonly option
less hectic title udpates when reordering editors
cmd+2 and +3 to pick up viewstate from active editor
move supportsSplitEditor to editor input and let it return true by default
fix NPE, model can be null
fix NPE in resolving resource input
Use valid values for terminal font config
Don't layout terminal when minimized
Pass WheelEvent from terminal panel to xterm
Disable hollow cursor (until xterm is published)
Clean up ThirdPartyNotices.txt
Bundle editorWorkerServer into workerServer and editorSimpleWorker into simpleWorker
Move SelectionDirection to selection.ts
Extract word related functions to wordHelper
Add analyze-editor-distro task
Update winjs promise
Do not use WinJS.Utilities
Move Promise.xhr from JS to TS (in base/common/network)
Extract module ids and wrap around bundled code in a function to aid in minification
convert workbench.main to TypeScript
Bundler: generate bundleInfo, remove duplicated TS boilerplate
Update ThirdPartyNotices.txt
Add xterm.js to shrinkwrap
ux: do not show group nor stack related actions when tabs are disabled
submit telemetry events from extension management service
use OSX instead of Mac for Terminal settings
node-debug: add 'attach to process' for Windows
Support back/forward across preview editors (fixes #7364)
use IModeService to get the correct rendering of markedstring and code blocks, fixes #7405
remove dead code, #7405
remove editors from being event emitters on the global bus
restore verbose
check for aiKey
fix telemetry use in debug
action ids
use oop telemetry service in debug land
Add command ID for 'Collapse All' in Files Explorer (fixes #7411)
output: disable monarch mode and "language" configuration
remove console.log telemetry
Store editor view settings per group and not per file (fixes #7206)
isolate telemetry in vs/platform/telemetry
:lipstick:
no-verbose tsb build, only apply markers to closed documents
fix tests; fixes #7408
more test to cement current behaviour, #1396
fix npe in history saving
split action: needs to respect context if provided
do not eagerly fill options when opening a side editor
getConfiguration should not crash when section denotes a value,  #1396
extract title area control
publicLog returns promise
Delete code that was extracted to other repos
Add terminal shell args setting
use color from command pallette for decorations in problems view
move marshalling tests to its own file
Make terminal spans inline
Simplify layout
Tweak wording for OS X terminal setting (related to PR #6136)
Add jsdoc
initialize telemetry service
wip: reenable bootstrap output
Inline small svg/png images when bundling editor
Adopt latest css loader plugin
Use svgs in scrollbar arrows
Collapse some equivalent rules to reference files only once
Optimize svg file sizes
Do not ship monarch languages in editor
#7247 show marker source information
#7146 fix select focus
wip: telemetry service in shared process
rename URI#create to URI#from and make it take an object literal
simplify appender, telemetry service config
extract idle monitor from telemetry service
align font size
Highlight .mk files as a Makefile
stick with normal zone widget, no title etc
bring back n of m label
fix mac terminal test (related to PR #6136)
On mac ctrl-n should behave exactly like DownArrow The same is true for ctrl-p and UpArrow. This fixes that
resolved merge conflicts of PR #6136
use nearestReference also when going to a definition, #5893
use word definition instead of lcut when computing the lhs preview part, fixes #7292
regression - zone might be undefined on dispose
#7205 decorations
telemetry service: browser ‚Üí common
extract IdleMonitor from telemetry service
Add title to goto error box, error text uses editor font, #1927
goto error - extract quick fix widget
wip: extract idlemonitor from telemetry service
extract error telemetry
telemetry tests fix
Revert "Revert "disable failing test""
Revert "Revert "fix NPE on _onStatusChange""
Revert "Revert ":lipstick: lifecycle service, idle monitor""
Add Productivity into extension categories
version bump
Revert ":lipstick: lifecycle service, idle monitor"
Revert "fix NPE on _onStatusChange"
Revert "disable failing test"
Get invert selection working for all base theme types
Don't create multiple elements for theme
Add basic theming
fix source maps for builtin extensions (Windows)
fix source maps for builtin extensions
disable failing test
fix NPE on _onStatusChange
Show tooltips for labels that get truncated (fixes #4723)
always have full file path in hover even for inactive editors
debt - peek view widget shouldn't hardcode border color but use config
delete unused cursors
swap classes
use data uri for custom drag cursors
xterm.js prototype
#7204 #7151 expand all files unless they are collapsed specifically
monaco-editor: add monaco.languages.setMonarchTokensProvider
do prefix matching during filtering 36679
less editor title spacing
improve revert logic for untitled (also dispose untitled input after save)
:lipstick: lifecycle service, idle monitor
add 'border', 'outline', 'contentText', 'contextIconPath' to API
:lipstick:
extract no-tab specific css rules into own file
Separate before/after from inline classname
fix #7128
:lipstick: remove unused code, renames
#6679 Support icon inside input box and provide filter icon for filter box
Revert "improve revert logic for untitled"
oops
clean up css
properly sync rhs of references view, fixes #5075
update node-debug
Single call to deltaDecorations, simplify loop
separate editor actions from group actions (#7058, #7059, #7060)
#7235 Add View category to toggle problems action
output: scrollBeyondLastLine false
api - encourage to set kind when creating a completion item. actually do it
add test for #7234
Talking about Group Left is confusing if there is only one group (fixes #7044)
configuration-editing: fix npm install, vscode lookup, completion item usage
Modifying and saving this file did not pin it (fixes #7154)
always pin the editor when the input to open is dirty
delete unused markersHandler
dispose _onDidChangeDirty on editor dispose
scope the delay in opened editors to explorer view only
polish
replace chevron icon
improve revert logic for untitled
do not cache string editor inputs in debug service; fixes #7217
Reduce dependencies on IMode
Remove usages of richEditSupport and adopt LanguageConfigurationRegistry
Reduce usage of `richEditSupport`
Add focus terminal command
Remove unused variable
Remove completed TODO
Pull individual terminal logic out of terminalPanel
Reset skip flag to false to fix skipping rest of string
Have the source filter value in the filter options
fix style for filter box
#7147 #7129 Moved filterbox to top and removed unnecessary messages
path#normalize - reduce slice-calls
better solution
Open editors list lost middle click to close file (fixes #7162)
open editors: temporary workaround due to a partial tree refresh issue
open editors: do not pin on enter
Search results navigation in Tree using keyboard is not consistent as using mouse (fixes #7183)
remove unused code
api - encourage to set kind when creating a completion item
add configuration-editing extension that proposes commands in keybindings.json, #7185
Explorer activity icon unsaved count decoration stays around (fixes #7180)
Access `richEditSupport` through LanguageConfigurationRegistry
Rename richEditSupport to languageConfigurationRegistry
Clean up IBracketElectricCharacterContribution
Update JSON service to latest vscode-languageserver
use instantiation service for service creation too
#7133 toggle problems panel on clicking errors and warning in status bar
simplify textchangeevent
RegExp ftw, #7086
Monarch is a tokenizer, and only a tokenizer
Define IRichLanguageConfiguration clearly (do not generate it through Monarch)
open editors : structural tree refresh with a delay
debug: whitespace formating
Simplify deletion of rules
#7151 add more smartness to auto-expand
git merge conflicts: listen to model events
git merge decorator: cleanup
Create css text more compact
fix actionbar spacing, #7121
read environment through node itself
support only custom title of preview pane, #2351
change object style for Position#with and Position#translate, #6678
align with-signatures, add change-object overload to Range#with, #6678
expose Uri#with to allow deriving a new Uri from an existing, #6678
move editor events over to group service
move editor moved event to group service
open editors: minimize tree refreshes as much as possible
use title in API test, #2351
isNormal, code vs regexp
early out from normalize
Add befor/after decorations
more details in stack events (for #6670)
fix issue that double click no longer focusses in editor
less history work
Add libnotify4 and libnss3 as deps to deb
Remove git dependency from Linux packages
#7127 Changing the message for no errors
Create workbench specific stage and unstage actions
Register git unstage action
Register stage action in gitActions.contributions
Horizontal selection movement implemented
update node-debug
Add setting for fontSize and lineHeight to the integrated terminal
Replace visual-studio-code with code in deb package
fixes #195
Slight typo in autocomplete values
Adding autocomplete values of to input/select/textarea
fixes #7136
debug: if an action variable is used multiple times in a launch config, the associated command should only be run once
debug: suggestions inside os specific settings
move more methods over to group service (for #1608)
wip: disable parameter hints
introduce IEditorGroupService and move some methods over from IEditorService (for #1608)
parameter hints: multiple signatures context
parameter hints :lipstick:
use getActiveEditor when editor is meant
clean up controller
#6679 tests and fixes
var => const
add an action to remove entry from history
remove explicit font from inputbox
use el capitan system font
Move editor history from quick open into history service (fixes #6544)
align parameter hints with suggest
more cleanup
parameter hints: drop builder
parameter hints: cleanup
Tweak standalone api
debug: null guard
#6679 Move problems panel into panels sub menu
Revert focus issue fix
Sort markers by line number
Show line number for the marker entry
Delete problems view
rename back and fix focus issues
rename file names to start with lower case
Clean up
Doc map, fix build error
delete old error list
Revert old errorList
Implementation finishing first cut
clean up messages
fix styling for text box
Update todos
Implementation
Filter only errors
Update todos
Error list implementation
Focus panel on opening from status bar
Move collapse all action to tree defaults
Enhance set class
statistics widget
on click point status bar action to new markers panel
Remove markers handler from Quick open contributions
Set ctrl+shift+m as keyboard shortcut for panel
Replace Errors and Warnings in View menu
Externalize messages
implementation
update todos
todos
tree view implementation. update model
Implement simple map
#6679 Implement Markers tree view with file, count badge widgets. Show file on click or enter on marker
move filepath closer to file name and add some styling
Import dom to fix the compilation error
Initial implementaiton of tree view for markers
enable old error list feature
Operating System Specific Properties in launch.json
show documentation in parameter hints
fix integration test failure,don't always trust default values...
move normalize closer to getRoot
fixes #6959
add support for title object in previewHtml, #2351
OS X - When quitting in fullscreen mode, it should reopen in full screen mode (fixes #1491)
ensure no focus outline is shown on webview; fixed #7067
use more interfaces throughout stacks model and API
fix major staleness bug in stacks model for persisted stacks
:racehorse: getNextTickChannel
Revert ":racehorse: - remove 'fork' from the critical (startup) path by using setImmediate"
move event around
remove last untyped editor event
more editor events as typed events
add event for input open fail
detect gh4w git installation
don't remove markers on model dispose
bad suggest timing
introduce and use editor move event
Ship standaloneWorker in standalone editor
Do not ship typescript in monaco-editor-core
real event for editor change in part
bump version in monaco-editor-core
Add offset <-> position conversion to ITextModel
Reduce standalone editor API surface
Document and rearrange things in monaco.d.ts
always open htmlInput as pinned, fixes #7063
get rid of editor event
debug: hover on actions with notifcations
debug: null guard
debug: up / down to browse call stack
be prepared for non-existent references, fixes  #671
update node-debug
extensions: center X
debug: simplify view state manipulation
try to get rid of editor input changing event
debug: only convert strings in configuration
less editorevent use
more editor events clean up
unlocalized git specific actions
make the embedded iframe not have an outline on its body, fixes #7067
make single suggestion a special case
suggest: more cleanup
suggest: cleanup
suggest: cleanup
debug: abort debug session if interactive variable not picked
make sure to call charCodeAt with care, fixes #7086
Localization import
get rid of all text editor events emitted on global event bus
simplify EditorEvent
starting events cleanup
simplify diffEditorInput
less direct use of EditorInput
Renaming a pinned file unpins it (fixes #7071)
polish & cleanup
Add el7 to rpm name to indicate RHEL7+ support
Pull linux package revision initialization to top
Use applicationName for build dirs
Add version and revision to deb package name
Remove 'visual-studio-' from deb package to match command
Add version and revision to rpm package
Use app name not 'code' in deb/rpm files
Rename deb/rpms from vscode -> code
node-debug: add 'attach to process' support
debug: reslove interactive variables in sequence
debug: shorten comment
Support interactive variables in launch configurations
debug adapter: add interactive variables as a field to package.json
Type some functions in terminal code
Factor out terminal config logic and add tests
open editors: hide open editors view without a restart
fix build
Have terminal fallback on editor font
Installer should reopen all last opened folders (fixes #6316)
Further fixes to gulpfile.editor
Improve editor-distro gulp task
Bring in monaco.d.ts into the /src/ folder such that editor API can be typechecked to be exported correctly
manager => service
adopt path.normalize() change now returning "." when passing in empty string
Ctrl+Alt+Tab seems impossible to bind on Windows (fixes #7050)
Introduce event on input to indicate dirty state change (fixes #6953)
fix test failure
rename input get large z-index, fixes #6075
improve nearestReference search by using common prefix len, #5893
add checksum to windows update
crypto.checksum
status bar clean up
open editors: visible take groups into account also
explorer.openEditors.maxVisible -> explorer.openEditors.visible
make isUNC more spec compliant
path#join is concat and a normalize
remove old normalize code, clean up getRoot
fixes #6946
open editors: use update tree schedule only on model changes
introduce IEditorContext
actionbar: pass in event as part of the context
fix issue with normalize
more test for join
use new normalize implementation
Option to hide the status bar implemented
fixes #6840: [themes] does not work if publisher name starts with a number
fix issues with getRootLength, start with normalize2 that doesn't allocate arrays
Open file dialog should start in the directory for the current active file (fixes #1210)
fixes #6974: [json] $schema attribute - strange path resolution behavior when referencing local schema file
reorg imports
show remotes in git checkout list
remove unreachable code
Be quiet Hodor
fixes #6976: [json] Modifying a JSON Schema file requires a restart of VS code to pick up the changes
try to avoid module dependencies such that this is as leafy as possible
improve paths#getRootLength and add tests
debt - remove unused code
fixes #6405
fixes #6797
debt - refactor URI.withXYZ methods, #6678
debt - align path.normalize and node-path#normalize wrt to dot-segements
open editors: always update the tree with 250 delay
fixes #6957
Some open editors do not have a resource so use the name as drag identifier instead
fixes #6983
glob: duplicate entries in parsed pattern (fixes #7023)
check for input box options, fixes #7013
Glob regex matches too much (fixes #6936)
fix compile error
fix: file not getting pinned when getting dirty
Clean up __characterPairSupport, fixes #6889
missing focus when triggering search while quick open is open (fixes #6668)
Restored menu bar translations.
Add `Reset Zoom` action to menu (fixes #6958)
Possible to bring up multiple save dialogs on same file (fixes #5636)
Allow zooming with ctrl+mousewheel combination
Take care of disposing embedded models in editors (fixes #6535)
Use electron binary over CLI in desktop entry
Use correct StartupWMClass in desktop entry
Update terminal font family as soon as its updated
Make terminal consume escape key
Revert "search looses focus when jumping between results that are not pinned"
allow delete from keyboard in search results (fixes #6962)
search looses focus when jumping between results that are not pinned
Split action should always pin the editor it creates (fixes #6804)
extract extensions in a rolling fashion
clean up pty.js on packaging
"open recent" polish
Open: Cmd + click opens in new window (fixes #6956)
update node-debug translations
Revert type-parameter lookahead (fixes #6955)
Complicated duplication in editor service and part (#6326)
return empty promise
no dirty state change event when auto save is on
inputToType => createInput (for #6324)
getId() => getTypeId() for (#6324)
[less/sass] test cssvariable colorizing
CSS variable colorizer test
add tests for #6936
enable updates again
File is reopened after closing then switching viewlets (fixes #6922)
polish
quickopen options
Config: externalTerminal -> terminal.external
Config: integratedTerminal -> terminal.integrated
Add completion API to the standalone editor
Add `editor.disableTranslate3d` option
Add some safeguards to prevent term crashes
Improve terminal colors
Recreate terminal when relaunched, not based on exit code
remove lost console.log
make extract zip sequence instead of parallel
Make editor requirejs friendly
Syntax highlighting issue when there is no space preceding (TypeScript-TmLanguage/issues/11)
bump vscode version
Address Joh's feedback for the standalone editor API
First cut of translations.
Test for #6916
show insider builds disclaimer
generate new ThirdPartyNotices.txt
Update typescript grammar
fix show editors actions
Addresses #6909
fix npe in suggestions
mention extension id case sentitivity
always check whether extension is installed
parse gallery error message
localize help messages
fixes #6009
fixes #6858: Could not get external grammar injections to work
show remote url in pick list
fixes #6901
uppercase id
add title to git changes
fix ellipsis for suggestions
only dispose ipc cp clients when there are no active requests
Simplify context menu actions on editor/group actions (fixes #6596)
use pagesize 50 instead of 30
extension updates every 12 hours
Remove chevron when there is no overflow condition (fixes #6881)
Align Open Editor and double arrow down (fixes #6764)
Tweak light theme terminal colors for readability
Add languages API to the standalone editor
Unstage selected ranges
Move common/terminal into electron-browser
Add default terminal colors per theme, update immediately on theme change
Simplify default windows shell fetching
Add toggle integrated terminal to view menu
Remove colors from terminal config interface
Improve default terminals, make Windows %COMSPEC%
Remove color customization from integrated terminal
fix broken #openEditors()
simplify render and splice methods in list
can make close from dispose simpler now
Editor Stacks do not clean up from file deletes when switching branches (fixes #6686)
Add .babelrc to json mimetype
Regenerated standalone API
Add typed events to IModel
Reduce standalone editor API through @internal markers
JSON edit deletes comments. fixes #6725
clean up: merge declaration and variable declaration in css
#6765 fix LESS textmate grammar to support css variables
#6744 Common abstract node for declaration and variable declaration and adopt to it in intellisense
#6754 fix intellisense for css variables to get triggerred only for first argument of a var function
#6713 parse css variable as function argument. error markings.
encode uri components which are meant to be a path, fixes #6709
use the right numbers when computing the new sash ratio, fixes #6599
debug: better error handling for non-existent launch configs
fixes #6809
fixes #6703
open editors: remove openEditors.visible
make references tree size independent of editor line height, fixes #6742
change settings descriptions, #6788
markdown mode uses TextualSuggestSupport, remove used id field, remove unused service dependencies, also fixes #6778
peek def action should check if it's for a nested editor, #6786
ensureLoaded in more places in stacks model
Event naming should be onDidVerbNoun
remove unused
return empty promise, don't reveal undefined, fixes  #6739
Improve keybinding rules for some find operations (#5727)
Closing all files in a group except for a markdown file does not update overflow control icon (fixes #6795)
Split action should always pin the editor it creates (fixes #6804)
Split action seems to inherit a few opened files from an existing group (fixes #6803)
Preview file does not split (fixes #6794)
Migrated opened files should not be italic (fixes #6798)
Don't reply terminal shell on error, dismiss terminal when exited
Add 'Integrated' to toggle terminal action
Split unixLike terminal setting into linux and osx
Remove conflicting keybinding ctrl+tilde
Change deb postrm shebang to /bin/bash
IThemeDecorationRenderOptions extended with background-size property
debug: set configuration properly when being passed by api
open editors: do not refresh tree while it is hidden
open editors: fix save all in group
open editors view should always be visible in no folder workspace
debug: announce breakpoint set / removed
Revert "Mode configuration: Add files.associations setting to user configuration"
Changing viewlets too quickly does not change view (fixes #6690)
do not allow to unpin dirty editors
fix compile error
Remove 'experimental' from integrated terminal strings
Enable integrated terminal on stable
Mode configuration: Add files.associations setting to user configuration
IConfigurationService.setUserConfiguration
[json edit] handle not yet existing parent objects, handle empty documents
[json formatter] add applyEdit
[json] Add JSONPath
Remove vs/text loader plugin
Forward command does not reset after changing files (fixes #6597)
Hectic jumping in opened editors when picking an entry (fixes #6672)
fix compile error
Tabs: preview style causes text cropping (fixes #6665)
fix bounding in recently closed editors
move: open first before closing input
fix pinned title update
fix scrollbar issue
fix activation issue with ShowEditorsInGroupAction
action enablement fixes
fixes #6371: [html] When using custom HTML tags, VS auto-align wrong way.
fix issue with updating active
Remove 'vue' extension from html
more idGenerator usage
update node debug (use final 1.9.0 protocol)
remove duplicated error utils
:lipstick: use id generator
remove vso gallery cache
improve close from dispose by looking for editors across all groups
change extension query default page size to 50
send vscode version in marketplace headers
Update vscode-textmate to 1.1.0
fix save all action
improve reopening untitled files if multiple are saved across multiple groups
update MEMENTO_LAST_ACTIVE_FILE_RESOURCE after a timeout
adopt replaceEditors() for BaseSaveAllAction
use replaceEditors() for BaseSaveFileAction
check for updates every 4 hours
introduce user setting `editor.stablePeek`, #5120
cleanup async
introduce IEditorService#replaceEditors()
fixes #6591: [perl] wrong coloring when space after regexp
Css -> CSS
fix issue with false empty group detection in openEditors()
remove failing input from "last closed" in stacks model
open editor in stacks model right sync
simplify getActiveEditorInput
Revert "don't filter on `codeSnippet` but only on `label` and `filterText`, fixes #6320"
opening an editor, create the group to open early on to detect position changes properly
polish doRecreateEditorTitleArea
Telemetry: Send theme activation events
Update Jade grammar (Apr 30)
Css -> CSS
Uncomment providers
Comment providers
Avoid 'text' item kind
Remove IEditorRange, IEditorSelection
Remove IEditorPosition
Get homedir in a Windows-friendly manner
Add typed listeners to the editor
Remove usages of ListenerUnbind
Adopt IEventEmitter.addListener2
Auto-format the generated monaco-editor.d.ts
Fully automated monaco-editor.d.ts
One last manual update for future reference
format reference monaco-editor.d.ts
polish close dirty
fix options passing in openEditors call
properly use openEditors()  method
improved dirty detection
respect auto save setting
improved pinning from dirty event
fix alias
more keybindings for close actions
better pinned state in title area
Remove echo left in from last commit
Use ctrl+` to toggle terminal on Mac
Allow externalTerminal.windowExec to work with spaces
Enable integrated terminal on Windows
Use Tyriar/pty.js fork
Revert "Disable integrated terminal to unblock Windows build"
Have --verbose work on the bin command
#3077 update variable rule in text mate
fix type that is causing build to fail
debug: additional telemetry data on debug session start
First cut at monaco editor d.ts auto-generation
#3077 remove cssVariable token and handle css variables in parser
Revert "open editors: make both views equal"
open editors: make both views equal
fix focus restore after move
#3077 clean up
open editors: fix tree layout bug
better title label for inactive
#3077 code review
try to make editor close and fail conditions more predictable
prevent ftte links, #6533
open editors setting for hidding
improve moving across groups
Rename model.getAssociatedResource() to model.uri
Minor rename
Update to tsserver 1.8.10
improve closeall editors
less promises in doCloseGroup()
Remove IMode.linkSupport and convert to provider
Update package.json
Update package.json
#3077 fix test name
fix gulp hygiene issue
tests
#3077 improve intellisense for variables in sass and less
Remove IMode.taskSupport
#3077 support variables
less work when closing editors
Convert IFormattingSupport to 3 distinct providers
open editors: apply display:block to all actions in open editros
#3077 update css textmate grammar
initial changes
Revert "initial changes"
initial changes
a bit faster title area update
open editors: action bar stop pushing people
editor create is always sync
naming
simpler editor history
Convert ICodeLensSupport to CodeLensProvider
fix npe with settings
history model entry lifecycle
make editor dirty event emit for all inputs open
Ugly brackets in the menu (fixes #6413)
Disable integrated terminal to unblock Windows build
json: Add jsonEdit
json: Add findNodeAtLocation
Move jsonFormatter to base
Add glibc v2.15 requirement to rpm
Convert IOutlineSupport to DocumentSymbolProvider
Convert IRenameSupport to RenameProvider
Convert IReferenceSupport to ReferenceProvider
Include terminalProcess in packaged vscode
fix tests
no more concept of prefix in quick open
no more EditorInput#status
fix icon css issue
dirty as quick open icon instead of prefix
add an action to clear all editor history
editor history can handle with disposed inputs
Convert IDeclarationSupport to DefinitionProvider
fix tests
debug: use allThreadsContinued flag
add support for file-links, fixes #6533
Convert IOccurrencesSupport to DocumentHighlightProvider
Further align ISuggestSupport with ext host API
Towards aligning ISuggestSupport with ext host API
update to latest debug protocol
fix tests?
clean up disposeAll() in file tracker
good bye "working files"
open editors: disable close other editors action if no more editors in group
editor lifecycle takes care of dispose now
dispose inputs when closing them
open editors: all close actions are always there but disable some when needed
use editorService.groupAt
editor service promote groupAt to API
fix markdown issue
Supports get passed in an IReadOnlyModel
Remove IMode.formattingSupport
Remove IMode.declarationSupport
Align IDeclarationSupport with ext host API
Remove IMode.occurrencesSupport
Remove IMode.outlineSupport
allow empty string as valid document content, fixes #6526
Align ISuggestSupport further with ext host API
Towards aligning ISuggestSupport with ext host API
Remove IMode.suggestSupport
Remove suggestSupport from Monarch
open editors: use context for actions
Remove MonarchMode
debt - done with 'done', return promises
Remove IMode.referenceSupport
Rename IParameterHintsSupport
Remove IMode.extraInfoSupport
add NullStorageService and use it for standalone editor, fixes #6522
Align IParameterHintsSupport with the ext host api
Skip reopening recently closed files that are in working files
Enable integrated terminal on insiders
Run pty.js process in a child process to prevent 100% CPU mac bug
Have terminal use panel's background color
Exclude terminalPanel on windows
Try temporarily fix windows build by removing pty.js from packages
Add 20px horizontal padding to integrated terminal
Remove cmd+` to toggle terminal on Mac
always pin dropped editors
fix bad closing of all editors when openEditors() fails
pin an editor always when an index is provided
quick open help hints
indicate preview state in editor picker
fix windows build
fix build
disable update
Remove dead code
Remove unused code
open editors: only alow to update tree via scheduler
imports
open editors: fix context menu for untitled
Escape key does not cancel the move to trash dialog (fixes #6475)
open editors: use sub menu when there are a lot of close actions
context menu: support sub menus
goto error sorts markers by severity and then by position
migrate opened editors from older versions
Align ExtraInfoSupport with ext host API
Add simplified ITokenizationSupport2
open editors: minor reordering in controller
open editors: respect index also when dragging from explorer
distinguish in-group moving from across-group-moving
Revert "Insiders Build: Add message to switch over to the alpha build (fixes #6416)"
show inactive group actions with opacity too
better auto focus when not quick navigating
update prefixes for quick open
cleanup action ids
open editors: use index for DnD
support moveEditor() in same group if index is provided
consolidate editor picker
open editors: keybindings for context menu
open editors: fix compare action
open editros: fix open in terminal action
open editors: reveal entry when highlighted
adjust top level menu
Update json.ts to latest of jsonc-parser (adds parseTree)
open editors: update json schema for new configuration names
fix issue with stale group label
support matching multiple editors of same name
ooops
dirty indication
open editors: fix HC theme
add action to show all opened editors
open editors: move primary actions by 1px to align better
navigate in editor groups
reimplement "Reopen Closed Editor" with stacks
Focus integrated terminal when panel toggled
Explicitly install desktop entry in deb postinst
fixes #6438
Add light theme support for integrated terminal
Add ctrl+` keybinding for toggle terminal
Add integrated terminal module, move typings up tree
add action to show overflow
debt - remove unneccessary casts
don't filter on `codeSnippet` but only on `label` and `filterText`, fixes #6320
Adopt latest loader that adds `nodeModules` option to disambiguate node modules from AMD modules at bundle time and adopt it in the gulp tasks
less working files model dependency
add a new config to enable word-based suggestions, fixes #5574
move: do not prompt for dirty
moveEditor polish
free up CtrlCmd+Tab for now
open editors: drag and drop
add moveEditor()
first cut of handling dirty editors on close
add new api command to compare two resources, fixes #1865
fix #5918
fixes #6425
update node-debug
open editros: no net to set enalbed on save all action
do not add padding for actions in headers
open editors: use flex
use idGenerator
move id generator to core
open editors: save all in group action to fileActions
actionBar: allow 0 and '' to be passed as context
Insiders Build: Add message to switch over to the alpha build (fixes #6416)
Revert "quick open: do not handle Enter on key_down, otherwise it bubbles to editor on key_up"
open editors: css class consolidation
open editors: consolidate actions
update jsdoc for DiagnosticCollection#set and tuples, #6373
merge tuples of equal Uri, #6373
editor acitions: get position as a context
toolbar: support context
resolve command conflict
fix compile errors
support keybindings lookup in toolbars
add xhtml
open editors: primary actions for groups
open editors: do not reveal entries in tree, can lead to some weird tree scrolling
open editors: smaller context menu when there is only one group
fixes #6396
node-debug: limit the number of locals transmitted by the scopes request; addresses #5645
remove unused actions
align more keybindings
clean up more actions
action naming
some workbench actions cleanup
debug: smarter lazy transition to running state
pin editor for new or imported files
clean up some todos
more editor actions and clean up
debug: allow to set focussed thread with no call stack
debug: move more logic into breakpoints controller
debug: move more logic to call stack controller
debug: move show more stack frames logic to call stack controller
naming of action
pin files open from outside interaction
some polish and bugfixing
debug: do not trim whitespace in repl
fixes #6297
debug: reveal auto expanded element in repl
add touch screen tap support for reference search
Update json.ts to latest jsonc-parser
html.ts: Typo in comment
Do not autoclose `'`
Clearing WorkingFilesModel should only add file types to recently closed files
Improve external terminal support on xfce
Have --install-extension exit earlier if already installed
Return 0 if extension already installed
Improve Linux external terminal defaults
Remove bin command in post install step for deb
Have rpm remove bin symlink in post uninstall step
Use sudo to add bin symlink in rpm
fix extension debugging
Enable integrated terminal in alpha channel only
Dispose terminal scrollbar and event listeners
Have createTerminal execute asynchronously
Encapsulated interfaces with part/panel services in terminalService
Move integrated terminal from node -> electron-browser
Remove initial col and row as it's immediately overridden
Add dependencies to npm-shrinkwrap.json
Use platformio's pty.js
open editros: add actions to context menu
more cleanup and better default selection for references/definitions, #5893
open editros: fix HC theme
open editors: context menu for groups
fix issue with restoring active group
css polish
css polish
more css tweaks
css tweaks
better fix for padding in editor
close action next to label
fix serialize in model
avoid unneded work when pinning or unpinning
move things around a little bit
open editors: more context menu actions for editors
fix issue with serializing non persistable editors
fix typo, #5893
open editors: make the container dirty and do not go crazy with css
open editors: show file system path on hover
fix title area updating fail
open editors: openEditorActions.ts
remove unused type declaration support
for multiple definitions open peek at the first location and close it when jumping to another, fixes #5893
some refactorings in reference search, prep for #5893
open editor: top level actions
open editors: context menu actions for closing
untitled and created files are pinned by default
closeAllEditors(except?: Position)
more editor title area updating
fix tests
make editor pinned once dirty
open editors: pin editor on enter and double click
restore faster label update for input state change
emit FILE_REVERTED only if file was dirty before
focusGroup() and more complete editor title updating
clean up
update node-debug
External grammar injections
open editors: use scheduler always when updating tree
Use correct path on Windows
update node-debug
beef up tests
always use matches()
open editors: show dirty indicator
debug: handle php one thread stop behavior as a special case not as a general rule
add a way to validate stacks model while running
preview gets replaced and moved after active one
add pin() / unpin() and global actions to trigger on active editor
use 'property' instead of 'text' when CompletionItem define no kind
open editors: x to close open editor
closeEditors() and closeAllEditors()
IEditorService.closeEditor(position, input)
open editros: controller onContextMenu
open editors: do not clear focus and selection on click on group
open editors: open editor on enter
open editors: open editor on click
always use closeEditor and never openEditor(null)
use padding-left of 20px for preview part, fixes #5883
set focus on iframe window and on webview, fixes #5070
fix #6290
move webview into its own source file, use css variables for webview default styles, #5737
Adding line break to output message
model: positionOfGroup()
align editor options interfaces
open editors: fix hidden dirty badge
open editors: elipses when text overflows
open editors: preview in italic
open editors: highlight active editor
open editors: minor refactoring around updating the tree
open editors: empty action provider
setEditors => openEditors
:lipstick: remove unused code
inline OpenResourcesAction
support double click to pin an editor
improved logging
validate stacks model on load
restore editors from stacks model
onEditorFocusChange => onGroupFocusChanged
focusEditor => focusGroup
support group moving
fix race condition when opening multiple groups
fix npe
open editors: really always expand all
:racehorse: - remove 'fork' from the critical (startup) path by using setImmediate
open editors: always auto expand groups
update group labels properly
set group labels on open properly
startup perf, take finding git off the critical path
open editors: accessibility provider
open editors: change configuration name
open editors: do not highlight entries for now
quick open: do not handle Enter on key_down, otherwise it bubbles to editor on key_up
moveEditor => moveGroup
activateEditor => activateGroup
open editors: use OpenEditor as a wrapper for generating id
editor arrangement => group arrangement
open editors: listen on aggregate event, use scheduler
stacks: introduce onModelChanged
open editors: need to change input when number of groups changes
open editors: render editor description
first cut closing editors and groups
open editors: css to make groups look sexy
fix logging
better tostring()
add command to print the stacks group
open editors: react on editor group updates
:lipstick: unused import
ai - make sure not lose default data
lazy load stacks model
very first stacks model integration to editor open
drop forceActive in favour of IEditorService.setActive()
groups: allow to open but not activate a group
remove unused code
support group rename and events
use typeof-check for isFunction, store expected typeof outcomes
simplify doCloseEditor()
more cleanup
windows has more common properties, fix test failure
simplify doCreateEditor
simplify doInstantiateEditor
extract doInstantiateEditor
fixes #6243: [html] Cannot get close tag suggestions for HTML after updating to 1.1.0
fixes #4101: [html] Why editor.action.smartSelect is not working in html file?
fix integration tests
gettingStarted => welcome
perf - shave off ~4ms from startup by using a better isObject-implementation
more shuffling
debug: allow vscode.startDebug to pass full json config
setTimeout && clearTimeout
progress monitor
more cleanup
remove pwd debug statement
fixes #5919: [html] Angular 2 directives break HTML syntax highlighting
open editors: add listeners
dbk - cd to $ROOT
node-debug: support code injection in global context
open editors: replace working files
add title for match, fixes #6224
better titles for file labels, fixes #6224
open editors: renderer
gulpfile-extensions: use relative source root
"everyday I am shuffling"
dbk - add pwd to test.sh
open editors: DataSource and Controller
dispose telemetry service and appenders on shutdown
debug: expose vscode.debugStart in API
fixes #5965: [less] syntax failure when identifier starts with a number
fixes #5981: [json] accept empty keybindings.json file
fix npe with actions lookup
open editors: viewer first steps
run the actual ai module inside the shared process such that it cannot tamper with the main process, fixes #1000
stacksmodel is readonly
extract ISideBySideEditorControl
open editors: first steps
move actions business into side by side control
remove unused
adopt new event style for onFocusChange
reuse actions
remove electron telemetry service, move optin logic to telemetry service, introduce commonProperties.ts for *all* common properties, tests!, getting closer to #1000
fix #6212
move common properties that require nodejs into electronTelemetryService and out of appender, enables #1000
add concept of common properties to ctor options
do not restrict zooming
fixes #5996 [snippets] prefix not matching forward slashes & fixes #4485 [snippets] Allow snippets where the prefix ends with =
update node-debug
update node-debug
fix compile errors
readonly access to editor group for now
debug: display call stack error from adapter
update node-debug
fixes #6169; Quick fix: inherit font from workbench and do not set it
debug: if exitCode for preLaunchTask is present and success just start debug session
fixes #6176: Go to/Peek Definition and Find all References in CSS
very first bare editor part using stacks model
Remove win32 assertion in appInsightsAppender test
more api to close groups
groups - introduce identifier to support maps
Map 'stylus' language to 'css' to fix #6062
sessionId is always uuid + date
add test for default properties telemetry service adds
simplify extra properties logic such that it be moved soon
add stacks model to workbench
add tests for additional properties in AI appender
allow to open at index
add api to move an editor
add method to move a group
remove unused _userIdHash from telemetry
add tests for additional properties
refactor ai adapter, make sure dispose flushes all events
add closeEditors()
Remove more editor options
do not introduce setAllowEmptyGroups yet
properly dispose events
Convert IInternalEditorOptions to InternalEditorOptions
fix test failure
use safeCall when announcing new height to zone, fixes regression
:lipstick: ai appender
add methods to close editors in group and close all groups; closing a group closes editors within
Cursor computes pageSize, not configuration
Group editor contrib options
introduce config to allow empty groups in stacks model
more complex persistence tests
debug: respect showUser flag in errors
Convert IEditorWrappingInfo to EditorWrappingInfo
first test for persisting model
Further grouping of resolved editor options
More cleanup in editor options
fixes #4935
make appenders a ctor argument, first step towards oop appender, #1000
spell out appRoot and extRoot instead of generic clean-up patterns
Convert IEditorLayoutInfo to EditorLayoutInfo
convert IOverviewRulerPosition to OverviewRulerPosition
Improve editor options handling
Remove unnecessary browserService and mockDom
Remove workerStatusReporter
Prepare for mutating `canUseTranslate3d` at runtime
debt - remove used service dependency
fixes #6097
expose isOptedIn flag, #6097
debug: do not auto focus editor on session end
debug: null guard
introduce save/load via storage service for stacks model
debug: add nls comments
Improve Open in Terminal in Mac
optimize preview replace
more test and bugfix
move more tests to common
more real world tests and fixes
add test for open direction LEFT
more tests
improve lookup
clean up
fix bugs
safe guard editor.matches
fix compile error
docs
(un)install multiple extensions at once
--uninstall-extension #691
--install-extension #691
--list-extensions #691
NodeConfigurationService
NodeRequestService
ExtensionGalleryService
platform/extensionManagement
simplify shared process startup
introduce IEnvironmentService
check in launch.json changes
comments
debug: auto expand complex expressions in repl
more tests and fixes
debug: format polish
debug: different max value render lengths for repl / hover / viewlet
tests for editor actions and fixes for it
debug: open repl if some error got logged there on start
debug: log adapter errors to 'extensions' output channel
introduce mru
upgrade to debug protocol 1.8.0
debug: openOnFirstSessionStart is default value for internalConsoleOptions
debug: configuration to reveal debug console
more complete methods
fix missing export
first cut editor stacks model
add new config option 'editor.dismissPeekOnEsc' to control ESC when peek shows, #5120
faster code.bat
use lowercase
fix build
dont use spaces in package.json
extract userData path computation
fix bad JS
debug: transition to running state after launch / attach also
debug: reduce min panel height
some clean up and storage of peek view layout data
make zone widget abstract
debug: show 'Thread' on hover
earlier .build/electron test
fix another keybinding#invokeHandler regression which happens when having a constraint defined...
:lipstick: renames in rename
show rename widget on top of peek widget, fixes #6075
inline constant
delete SuggestRegistry
delete mode change event
remove some parameter
remove some
debug: context menu actions for threads
add sash to reference search widget
docs
allow to resize a zone widget using the sash, enable resize for reference search and peek declaration, #5120
debug: do not fabricate fake 'continued' event
set npm_config_runtime
make sugest widget adopt editor's font in code html elements
cleanup request service proxy config
refactor
different line height ratio for osx
simplify request service
specify runtime for npm install
:lipstick: zone widget
debug: fix broken font in debug hover
debug: display thread paused / running
extract variable
delete mode change event
retrigger suggest when suggest registry changes, fixes #3121
aligned css names
css - drop some vendor prefixes
debt - align ServiceAccessor behaviour when service is missing
fix regression with delegation commant
remove some parameter
remove some
Reuse the same instance of character classifier accross multiple link computations
debug: evaluate all watch expressions on repl element add
More clean-up in editorCommon
debug: minor outputelement id tuning
Command handlers are invoked with var-args
reduce app dependency from env
use strings for process.env
make env a pure class
remove version from environment service
reduce further dependency in workspace context service
Do not patch in "context" when invoking command through keybinding service
debug: do not always use uuid.generateId
fixes #6044
adding todo for future api breakage, #2560
add comment to explain bad behaviour with firstNonWhitespaceCharacterIndex, #2560
adopt linkedmap for glob
panel: move sash 2px lower
adopt for filters
cleanup imports
move args, cli, sharedProcessMain to code
workbench/electron-main -> code/electron-main
move to code
gallery service: do not depend on context service
move package and product to platform
debug: allow empty input for repl
add ratio option
Revert "remove util duplication"
Rename *Trait to *Brand
remove util duplication
Further cleanup in editorCommon
debug: add comments for nls translators
set supportsSplitEditor, fixes #5881
fixes #4611
filter invalid entries when asking marker service for data, fixes #5952
debug: fix remove-all icons in hc theme
cancel request on clear, fixes #5100
debt - zone widget isn't event emitter anymore, code style alignments
fixes #4608
Extract classes from editorCommon, editorBrowser
fixes #5839
fixes #6010
Add extension OSS dependencies
remove shouldShowEmptySuggestionList, fixes #5888
Extract ViewContext to its own file
fix bad action registration
Clean up editor css
More cleanup in editor's CSS
Clean up editor css around current line highlight
Remove unused CSS rules
Only certain dom nodes get editor font settings (#5972)
Improve breaking behaviour when using WrappingIndent
remove unneeded cache counting
Glob regex is inefficient (fixes #5438)
ignore spaces in quick open (fixes #5306, fixes #1292)
fix bad action registration
map - add LRUCache
cache => linkedmap
Simplify the usage of scrollableElement
avoid "delete" operator
Introduce and use a bounded cache with last-recently-added ruling
Cannot read property 'getActiveEditor' of undefined (fixes #6008)
Add new file saved on shutdown to working files (fixes #5912)
More clean-up in scrollableElement
More cleanup in ScrollableElement
Extract ScrollbarArrow to its own file
Extract ScrollbarState to its own file
Clean up in scrollableElement
Clean up CSS configuration reading (#5972)
editor fontFamily and fontSize come only from configuration, not from css (#5972)
dont attach console in cli.ts
Workbench services dependencies cleanup ( fixes #5688)
move shared process creation into service creation method
http.proxy can also be empty
fix comment
only set integration tests variables on appveyor?
Revert "scale suggest widget with editor's font size"
Revert "improve suggest widget scaling"
unset "run as node"
improve suggest widget scaling
"Open New Terminal" should work even for empty or untitled editor (fixes #5977)
Add isBuiltin property to extension activation telemetry event
set ELECTRON_NO_ATTACH_CONSOLE=1
"let's agree to one file, one style" (#5536)
run integration tests on windows?
disable unreliable test
New localization input
fix bad npm call
use lstat in rimraf
also send queried text
Added .inl file extension to C++ language
use untitled scheme without the risk of a long authority, #5949
dont assign process.env when spawned from cli
Add test-integration.bat
Remove log entry from ThirdPartyNotice.txt
debug: show actions widget even if initializing
debug: limit hover to 5000
Update ThirdPartyNotices.txt
debug: better thread expand, reveal focus
debug: clear all threads on continue for go, tmp fixes #5835
improve doc for previewHtml command, also use parse with reviver, fixes #5902
scale suggest widget with editor's font size
debug: only change call stack input when thread count changes
remove dependency to workspace context service from cli
a bit more monaco => code
debt - storage service shouldn't be an event emitter (fixes #5752)
Simplify TextFileChangeEvent (fixes #5929)
hide file message when file gets saved or reverted (fixes #5634, fixes #5634)
check for workspace.rootPath, fixes #5900
Exclude the .svn folder from Find in Files by Default (fixes #5896)
Revert "add smartSuggestionsOnly settings, fixes #5574"
"Open New Terminal" does not work for empty workspace (fixes #5834)
Git errors - give me action to show output (fixes #5815)
fix cursor for disabled sash
Markdown preview cannot be resized anymore (fixes #5833)
extension service query telemetry
click suggestion to accept it
dont launch auto updater on unsigned application
fixes #5576
fixes #5825
dont propose to install on update readme
debug: value change animation was broken due to css minification
fix bad serif font in extensions quick open
Adding the language to the workspaceLoad event
bring back gallery cache
fixes #5804, fixes #5801
correct localise call, fallback to err if no err.message is available, protected message service against invalid items, fixes #5891
add smartSuggestionsOnly settings, fixes #5574
warn when unexpected properties show up in jsconfig.json, #5699
fixes #5836: Kimbie Dark theme renders foreground same as background for some tokens
fixes #5778
improve detection when link becomes active, fixes #5843
resolve promise when message is being dismissed via ESC, fixes #5797
introduce debugBrkFileWatcherPort (for #5819)
Extracted out recursive folding/unfolding into its own function as to not alter existing single folding/unfolding functionality.
Implement CharacterClassifier to handle special non-ASCII characters
update node-debug
swap alias and label
minor version bump
Delete locate
fixed #5412
Add missing word, fix localize strings
fix build
fix 'vscode.executeReferenceProvider' command
[css] add viewport (for #1365)
safe clean up
fixes #5722
find free ports: make it work, add timeout and tests
debug: do not change workbench view state on every debug start
don't show a lightbulb if there is jsconfig.json file in the root folder, #5699
add emmet support for .ejs files (#4482)
extract comment to localizable string, fixes #4731
fix issue with non built args
underscore
use minimist for all args handling
remove parseNumber, parseString
debt - configuration service is no longer an event emitter but has the onDidChange event *only*
remove parseOpts
renames
cleanup argv
configure minimist with cli options
extract IProductConfiguration
add a test for the free port finder
move more into argv
[sass] fix highlighting of @mixin inside @if (for #5528)
handle empty edit gracefully, fixes #5008
[sass] color parameters same as variables (for #5528) - test
#5221 [html] attribute values should not need to be quoted to be highlighted - test
[sass] color parameters same as variables (for #5528)
fixes #5221 [html] attribute values should not need to be quoted to be highlighted
expose appName in env, fixes #5297
fix npe
add MessageItem#isCloseAffordance, fixes #5448
isolate argv
minimist: first steps
rangeIncludingLineBreak behaviour on last line, fixes #5704
env cleanup
remove deprecated env.firstrun
drop progress service
strict instantiation service in extension service
optional progress service, fixes #5712
renames
MonacoEnvironment => GlobalEnvironment
Webview does not work in built version of VS Code (fixes #5736)
Improve links (fixes #5713)
Add tests for validatePosition.
rename 'selectAll' to 'selectAllMatches'
Added fold and unfold recursively to foldings (cmd K, cmd ]) (cmd K, cmd [)
Handle exit by opening a new terminal
Open terminal in the workspace root if available
Add process title to pty.js interface
add selectAllMatches command
Add clarifying comment
Use jeremyramin/pty.js
Focus terminal input if anywhere in panel is clicked
Use jeremyramin/term.js
Support customizable terminal font family
Remove redundant code
fix test for #5649
Make term chars cover entire line
more nls cases for #4679
Support custom colors for ansi escape sequences
Flatten external terminal settings, clean up
Support customizable integrated terminal shell
ops, bad json
extension test for #5649
run shell with strict instantiation services and add @optional where needed, #5653
allow to create the instantiation service with a `strict` flag such that it throw on missing services, #5653
Extensions cannot get workspace configurations of their own (fixes #5649)
simplify configuration parsing and errors
spawn REG ENOENT (fixes #5003)
make sure this is fixed right (#4679)
one less setXYService() call (for #5504)
Revert recent wiki changes
add support for @optional decorator and hard checks for services but don't unleash it yet, #5653
remove unused service dependency
debt - remove unused IEqualable
finish IEnvService
debt - AsyncDescriptor is AsyncDescriptor0
move more into env service
allow to warn about missing service dependencies, #5653
fix services accessor access
wip: services in main process
env & log service
pimp up env
extract launch.ts
when generating a jsconfig file set the module to be commonjs, fixes #5611
fixes #5269: [json] "Format Code" folds braces into preceding comments.
create instantiation service early, #5504
debug: show breakpoint unverified in UI
polish - use modern event, use $-naming for IPC methods
fix tests
shell: less dependencies to the entire world
polish
clean up some legacy code
do not depend on quick open service from message service (part of #5504)
introduce and use IFileService#existsFile()
update font-family ordering (for #5260)
Don't localize command names on the command palette (fixes #4679)
telemetry - don't replace with <APP_ROOT> and such
add minimist
add code-cli.sh
debt - remove unused code
Show move file to trash keybinding in context menu - resolves #5603
make sure activeParameter isn't larger then aviablable parameters, fixes #4618
add perf test, #5621
fix typo 'extesion'
[yaml] autoclosing & surrounding pairs
[xml] autoclosing & surrounding pairs
[vb] autoclosing & surrounding pairs
[sql] autoclosing & surrounding pairs
[swift] autoclosing & surrounding pairs
[shellscript] autoclosing and surrounding pairs
[shaderlab] autoclosing & surrounding pairs
[rust] autoclosing & surrounding pairs
[r] autoclosing & surrounding pairs
[powershell] autoclosing & surrounding pairs
[perl] autoclosing & surrounding pairs
[objectivec] autoclosing & surrounding pairs
[lua] autoclosing & surrounding pairs
[java] autoclosing & surrounding pairs
[ini] autoclosing & surrounding pairs
[groovy] autoclosing & surrounding pairs
[go] autoclosing & surrounding pairs
[f#] autoclosing and surrounding pair
[docker] autoclosing & surrounding pairs
[cpp] autoclosing and surrounding pairs
[clojure] autoclosing & surrounding pairs
[bat] add autoclosing & sourrounding pairs
fixes #4510: [python] Add quote surround/auto-completion for Python
fixes #5617: [ruby] auto-close for quotes in ruby not working
add regex pattern to http.proxy
debug: on thread continue check if there are other threads stopped
fixes #5334: [json] swagger 2.0 json schema not working for intellisense in visual studio code
quick open: move meta a bit closer to the rest
Get rid of platform/selection (fixes #5616)
debug: send the continued thread id with the event
remove comments
debug: on continue only clear the currently debugged thread
debug: change input when switching from multiple threads to one thread
fix npm call in postinstall
fix Korean(and Chinese, Japanese) IME behavior
tests for #5566
debug: fix allThreadsStopped handling
fixes #5602: Request to change jade/pug line comment to //-
improve postinstall
debug: null guard
fix npe
cleanup
use events for git output
ipc: drop spread operator
debug: introduce SessionExitedEvent and SessionTerminatedEvent
fixes #5599
handleLinks: guard against bad uris
glob - upper bound caches
fix npe
glob - faster check for trivia2
gracefully handle the case in which a delegate command has been disposed before execution, fixes #3265
Debug and tasks should fetch latest configuration from disk (fixes #3132)
process feedback
Add a global action to add a new file in the explorer - resolves #5547
merge loadConfiguration() and doLoadConfiguration() into one
glob - add another trivia for **/some.txt patterns
fixes #5579: [java] Colorization could be improved for import text
Update pyhon grammar, fixes #1467
use pipe_logging in git
glob - cache check for pattern being trivia since this call is being made an order of magnitude
fix ipc spread operators
fix raw git service .show
ipc: search
ipc: fix client side of extensions channel
ipc: watcher
ipc: extensions service
Update copyight year to 2016
debug: select foccused stack frame on call stack change
take glob-match off the critical path when adding a new model, #5539
group recommendations by pattern, #5539
fix visibility issues
ipc: launch
debug: set views to [] for no folder workspace
ipc: git askpass service
adopt new ipc in git service
Have test.sh compile code if necessary
Move to next file if file being reopened is currently active
fixes #5381: Now, Jade has been renamed to Pug
[ts] coloring test cases with issues
debug: nicer thread clearing
debug: get all thread names on a stop
fixes #5493: Cannot read property 'title' of undefined
debug: minor refactoring when fetching thread data from adapter
move debug model test into /node/ cos it has depdendencies
adding assertion that newly created untitled document actually exists, #5016
wip: adopt ipc channels in git world
optimise for common cases that are equivalent to calling String#endsWith
debug tests remvoe unused imports
getDelayedChannel
wip: ipc channel vs service
wip: ipc channels
update to jsonc-parser 0.2.0
fix #5540
Revert "Glob regex is inefficient (fixes #5438)"
debt use 'value is' in promise
have a onWillShutdown on lifecycle service, fixes #5536
debug: do not be smart when figuring out totalFrames
remove omnisharp-vscode phantom folder
fix cjk for rename
fix test compile issue in schema.test.ts
explicitly set font after bad change a28fe7275d58ddd4790dfbaf2a4759e61fba756c
debt - use NullLifecycleService, delete TestLifecycleService
Remove addSchemaFileAssociation (was only used by legacy JSON mode)
Move schema registration to json/package.json file.
isolate ipc code
update version to 1.0.1
Revert "Copy and Paste files breaks standard paste (fixes #5519)"
Copy and Paste files breaks standard paste (fixes #5519)
Glob regex is inefficient (fixes #5438)
break cyclic dependency between keybinding and message service (#5505)
add remove calc
Create new conf files with right indent settings
remove unnecessary calculation
Set dep to pty.js@0.3.0
debt - drop enableSendASmile flag
one less setInstantiationService() call
Integrated terminal prototype
debug session: onDidEvent, custom request
don't use setter injection (part of #5504)
Use proper font family for East Asian languages (CJK) (fixes #5260)
cleanup some css
debug: rawDebugSession is no longer an event emitter
catch missing local exception
Update how-to-contribute.md
empty commit
Make addJSONProviders a Disposable
remove unused css rules
remove bad directory
use node 5.10 in appveyor
use node 5.10 in travis
debug api polish: comments and remove toggleEnablement
debt - remove unused setThreadService method from NullLifecycleService
adopt shrinkwrap in build
configure mention-bot
debug polish: remove debugService.setBreakpointsForModel
debug polish: addBreakpoints instead of toggle
debug polish: api renaming, removeBreakpoints takes id
uninstall outdated extension with correct version
remove debt flag
update jsonc/request versions to 0.1.0
debug polish: do not expose sendAllBreakpoints
add windows mutex to shrinkwrap
warn about void results from completion item providers, fixes #5360
clean up
update npm shrinkwrap
allow for error dedup and don't mention offending line number, fixes  #5494
Uncaught TypeError: Cannot read property 'length' of undefined (fixes #5487)
debt - simplify _createInstance method
debug: move editBreakpoint from debugService to breakpointWidget
lock down dependencies
debt - remove getInstance and addSingleton calls from InstantiationService as  we now have a service collection
create workbench using instantiation service and avoid getInstance calls. also pass on the service collection avoid registerSingleton calls
debug: polish getting debug state
Use zh-Hans and zh-Hant as lang values
debug: polish IRawDebugSession
dark theme
pimp up extension editor
remove leftovers
focus search box on focus
create global viewlet toolbar
remove extensions part
extensions icon
use title in inputbox
fix terminal service compilation errors
tweak keywords
improve data structure
add tests
fix keywords
adopt keywords
disable chromes backgroundThrottling
update on extension inputs
Response to move test to electron-browser folder
Response to configuration property name change
Response to typo
Response to ALL_CAPS_NAMING and code org.
Move bower/package.json dependency completions to javascript extension
completion and language selector test
bit more theme fixing
debt - less addSingleton usage
debug debt: debug service is no longer an event emitter
debug debt: model is no longer an event emitter
debt - remove createInstantiationService and only allow to create with a ServiceCollection
debt - remove usage of createInstantiationService and ctx in favour of service collection
extension viewlet css
debug: view model is no longer an EventEmitter
debug debt: make service interface slimmer, introduce IConfigurationManager
don't use default export for ServiceCollection
debug debt: remove revealRepl from service interface
debug: polish IDebugService interface
debt - more ServiceCollection and less createInstantiationService usage
less createInstantiationService-usage
speed up PagedModel tests
reduce addSingleton usage in favor of service collection
simplify InstantiationService implementation
extensions viewlet: model
extension viewlet
use ServiceCollection extHostMain, remove used services
bring back info, warn, error and debug tokens
remove unused service gymnastics
make TelemetryAppender registry extension'ish having an active method
fixes #5368
move service collection to its own file
allow to create instantiation service using ServiceCollection
avoid getInstance-call
support keywords for workbench actions in command palette
allow to provide keywords for workbench actions contribution
command palette: support keywords for editor actions lookup
editor action: add support for keywords
go through our lifecycle when reloading from dev tools (fixes #5409)
Update to Electron 0.37.6 (#5378)
nicer sash cursor on mac
debt = remove registerService method
align with map part 2
print warning, not throw exception when service is missing, workaround for #5387
Add CoffeeScript quote surroundingPairs
make service collection map-ish
Only allow single file to be reopened at once
debug: better flex alignment
towards separation of IServiceCollection and IInstantiationService, start with createChild
debt - print a better message when a service cycle happens
:lipstick: graph updates
debt - remove some apparently unused service gymnastics
debug: better distuingish actions start with / without debugging
Reload crashes vscode extension development window (fixes #5313)
remove setTimeout call when signalling readyness cos it was neccessary for absolute layouting
Code doesn't react to `keybindings.json` changes (fixes #5319)
Sash double clicks (#4702)
forgot cleanup
Add point about Qt project file support
scope window supdate package to quality
link gallery extensions to local ones
Update README.md
Remove unused function
Ensure previously active file is opened when restoring
JSON parser: getLocation
[coffeescript] improve the regex colorizer fix for #499
fixes #5259
add constraints for optional types
:arrowup: gulp-atom-electron
use new ffmpegChromium option
fix annoying issue with dock hiding in certain cases (fixes #4899)
don't use uuid when not neccessary
webview sits at its position in dom free. fixes #5039 and many other issue wrt to layout, editor dragging etc...
output: do not surface output id to extension api
output: fix extensions output channel
output: surface label for extension output channels
output: nicer syntax for getting channels from registry
update the previewHtml command doc
use IOpenerService for hovers
workaround keybindingservice tricks
vscode.previewHtml accept URI or string
add IOpenerService and use it with webview, #3676
add IKeybindingService#hasCommand, #3676
output: polish api
output: polish refactoring based on ben's feedback
ts - make sure to return models and extra libs in host logic
workaround issue with background color on mac
mental - use binary insertion over map
get rid of win10 focus hack
debt - move more language feature registries into modes.ts
adopt fw link
Change C# to use Unicode # character
Remove comment
Add some tests
Localize "New Window" in desktop entry
Various wiki clean ups, fix language hints
Move wiki to repo
output: align extHostOutputService with new api
output: show labels in output channel dropdown
output: getActiveChannel -> getActiveChannelId, remove unnused getChannels
output: move getOutput to IOutputChannel
output: move show output to IOutputChannel
output: move clearOutput to IOutputChannel
output: move append() to IOutputChannel
output: introduce channel.id
debt - move ParameterHintsRegistry
update for electron update
plugin => extension
debt - BaseRequestService isn't needed in extension host
use NullTelemetryService in tests, #5219
streamline cleanup patterns, #5219
allow to launch tokenizer tests from editor
remove AbstractTelemetryService and MainTelemetryService and only have TelemetryService, #5219
move ErrorTelemetry into its own type, #5219
move abstractTelemetryService and mainTelemetryService into one file. prep merging, #5219
remove MockTelemetryServic, #5219
add RemoteTelemetry which implements ITelemetryService, remove AbstractRemoteTelemetryService, workerTelemetryService, extHostTelemetryService, #5219
replace TestTelemetryService with NullTelemetryService, #5219
move getAppendersCount into test only, #5219
remove getAppenders function, #5219
debt - remove setInstantionService from ITelemetryService interface, #5219
Running extension host tests should not reopen last opened workspace (fixes #5224)
Cannot read property 'contents' of undefined (fixes #5147)
fixes #5206 (#5212)
esc to cancel search when focus is in tree and search is running
Update to Electron 0.37.x (#2559)
debug: better disposing of listeners
Travis build failing #5209
debug: improve green color for repl
collect all licenses
no more weakness
debug: improve wording #4987
Handle reopening of files that have been deleted
Deal with IWorkingFileEntry's externally
Only record file entries
Add menu item
Address a bunch of feedback
fixes #4977
make sure cleanupInfo is called on *all* outgoing data
debug: use IViewletView
IViewletView extends IView
fixes #5145
debug: send activation event 'onDebug:${type}'
fixes #5148
cleanup splitview.sum
create splitview.IView
debug: improve registration of debug views
temporarily add extensions gallery
readme display
extension body
Remove keyword.control.import override from plus themes
fixes #4881: [cpp] Switching to Atom's language-c for C/C++ syntax highlighting
better animations
extensions part highlight
Supported .ru extension and Guardfile
optimize postinstall
[colorize tests] update test result data
fixes #499: syntax highlighting broken when divide symbol is not separated using space
colorize tests: add color, normalize type
Make reopen closed file keybinding ctrl+shift+t
debt - move suggest registry to modes
debt - move rename registry to modes
debt - move reference search registry to modes
even more colorizer tests
[xml] colorizer tests
[js/ts] colorizer tests
[html/razor/handlebars/xml] colorizer tests
[docker] colorizer tests
[diff] colorizer tests
[git] colorizer tests
colorizer test code polish
[css/less/sass] colorizer tests
[c] colorizer tests
[coffescript] tokenizer tests
exclude colorize-fixtures from hygiene
[clojure] colorize tests
[bat] colorize tests
[loc][Query][VSCode] Please clarify whether this should be locked "{0}, git branch" (fixes #5159)
better warning logging
use isWeakRef as existence check for document references, #5117
:liptsick: tuple types and destructuring
cancel reference search promise on widget close, fixes #5100
adjust textarea maxlength
bump version to 1.0.0
Remove the space between the period
undo isNearDeath change, #5117
fixes #5133
Updated i18n translations
some linting in unit tests
Windows 7: New files not automatically displayed in explorer (.NET 4.5 required)
Add ARG and match DTD
Change matcher owner to go
Introduce a Go problem matcher
Use scoped /home/daimms variable to encapsulate rpmbuild
colorize-test fixes for build
Theme tests as extension test
Theming tests
Implement open recently closed file(s) action
provideCodeActions get those diagnostic instances others provided, not a clone
add DiagnosticsCollection#has and #get
var -> let
Add CharacterClassifier with a fast ASCII code path instead of using a sparse number[] all the time
add DiagnosticsCollection#forEach
refactor DiagnosticsCollection so that it holds data on ext host side
search progress
layout
update node-debug
paged list
arrays.range
adjusted the send a tweet's maximum character limit to accomodate hashtags and via @code.
wip: paged list
Reduce usage on vs/base
also check for nearDeath when accessing a document, #4488
remove loss of type-safely in InstantiationService
themes: also need to be stored on main side
rename ITelemetryService.start to ITelemetryService.timedPublicLog
debt - consolidate duplications
debt - move NullTelemetryService
debt - use Disposable over add/remove, remove unused members
Revert "workaround npe"
fix issue that come with using nullTelemetryService
Add trim_trailing_whitespace to .editorconfig
Reland: Disable welcome page when user is root
TypeScript is not a compat mode
query extensions
input box
better extension rendering
show extensions from gallery
Each test instantiates its own mode
HandleBars mode tests should not depend on Typescript mode
Markdown mode tests should not depend on Typescript mode
PHP mode tests should not depend on Typescript mode
Less mode tests should not depend on Typescript mode
render extensions manager
add extensions input factory
fix editor background regression when all editors are closed
make sure each editor container gets the monaco-editor-background
fix setInput
workaround npe
open extensions part
Less delay on theme preview
manage extensions global action
File/Folder picker (fixes #530)
tslint
HTML mode tests should not depend on Typescript mode
bring back global toolbar area
remove bad import
map inputs to editor
fix nls issue
debt - use NullTelemetryService instead of enableTelemetry flag
Cannot read property 'fsPath' of null (fixes #5010)
Turn off indent guides for now
Improvements to indentGuides rendering
add a command to open dev tools for webviews
in addition to iframe, apply styles also to webview body, #5038
propagate VSCODE_IPC_HOOK to renderer
fix typo
tackle #5024
extensions input & part
align extension telemetry events
polish
Add `editor.indentGuides` option, render indent guides
fix #4982
Revert "Disable welcome page when user is root"
Disable welcome page when user is root
Disallow running as root without --user-data-dir
make sure that the falsy value for the activeTextEditor is `undefined`, #5022
empty commit
fix event
set the body CSS class as early as possible
fix linux update
clarify default CompletionItem-behaviour
env log tweaks
when printing commands for keybindings, skip those that declare arguments and those that start with `vscode.', fixes #4915.
improve doc about activeTextEditor being undefined from time to time, #5022
fix missing semi colon, and remove double task terminateProcess
Failed to execute 'btoa' on 'Window': The string to be encoded contains characters outside of the Latin1 range. (fixes #5004)
url needs to be string
linux update notifications
Broken editor drag and drop (fixes #5018)
fix issue  #4945
Save as isn't translated in command palet (fixes #5020)
log more ipc messages
remove old preview part, use new one
VSCode exits when launching extension tests (fixes #5030)
don't reveal dev tools
make webview private
Editor background flickers black on reload of white custom theme
refactor things into ManagedWebview
Consolidate theme.*.css into workbench.css (fixes #4967)
adopt theme service in webview part
Towards adding indent guides
Include the Linux bin command in the main dir
debug: not all views have setVisible
try to fix tests
splitview: fix flex issue with shift-tab order of actions
Set theme class only on monaco-shell (no longer on monaco-workbench)
Add IThemeService.setTheme
Extract RangeUtil to its own file
debug: introduce order when contributing debug views
potential fix for #4966
webview work
debug: mechanism to register split views
composite: fix typo
instantiationService: add missing api for syncDescriptor creation
cleanup
git commands: undo last commit
commit action in command palette
Do not cache bounding client rect when reading visible ranges (failure example: rearrange editors)
Use a custom cursor only on mac and also for the high contrast black theme
fixes #4754
fixes #4765
send user-agent header to marketplace
keep focus in explorer in some cases
better fix for new option to disable auto reveal in explorer
fixes #4926
Revert "Provide an option to stop scrolling revealing active file in explorer (fixes #3062)"
don't bold tag names in solarized theme
vscode.openFolder: allow to open as new window
debug: on socket close exit the server
debug: cancel all promises on session end with a 1s timeout
remove references to cacheUrl
adopt new gallery query in extension recommendations
adopt new gallery query in outdated extensions
Move bin command to /usr/share/<app>/bin
Force deb postinst/prerm perms to 755 during build
debug: ux polish for stack frame paging
debug: setFocus on focused stack frame update, do not select to avoid infinite loop
debug: show value in hover on the whole expression
editor title use flex
split view header use flex
Provide API to open a new folder (fixes #58)
Add "new window" action to code.desktop
remove unused methods
[loc][Query][DevDiv] Typo in source "id" (fixes #4897)
[loc][Query][DevDiv] Please clarify placeholders "{0} ({1})" (fixes #4910)
with an issue with empty completion list when no word exists
wip: get specific extensions
wip
actoinBar use flex
Improper progress during search (fixes #4508)
[loc][Query][DevDiv] Please clarify placeholders "{0} {1}" (fixes #4904)
use latest debug protocol
better loading animation
move modesFilter logic into the single place at which it is used, remove the rest
Normalize tokens only for rendering, store tokens as they are in the model; Restore html worker tests
remove console
proper delayed paging
add ArraySet
ignore {{placeholder}}-syntax when comparing the codeSnippet
smarter codeSnippet filtering
ITextFileService#saveAs() should go through textFileEditorModel.save() (fixes #2777)
also filter suggestions on codeSnippet/insertText cos that's what the user actually types
Provide an option to stop scrolling revealing active file in explorer (fixes #3062)
update node-debug
Added setting `emmet.triggerExpansionOnTab`
disable failing tests
Added retina support to Mac cursor. HDPI for #362
Use concrete types
Use update url variable for yum repo
Add yum repository registration
debug: expand focussedThread
Create view line tokens as soon as possible
Optimize TM Tokenizer
filter against ISuggestion#filterText but don't use that for highlighting
extract quick open paging
paging!
instead of the global currentWord, use ISuggestion#overrwiteBefore or ISuggestionResult#currentWord to filter suggestions
Provide an action to reveal the currently active file in the explorer (fixes #4858)
e.getViewer is not a function (fixes #4852)
Remove VSCode-BugExtension
foxes #4648: [codelens] Uncaught TypeError: Cannot read property 'symbol' of undefined
[c++] add platform.tmLangage
[c++] C & C++ Syntax Highlighting Issues #4769, first issue
PagedModel
Optimize decodeTextMateToken (#4828)
ordering
simplify completion model, prep work for #3153
update node-debug
Investigate to make IConfigurationService sync if already blocking startup (fixes #4264)
make IQueryResult page aware
i18n input
debug: remove unnecesery focussed stack frame listener
better query interfaces
flip boolean, expose `skipEncoding` in API
When opening URIs in the browser use the minimally encoded representation.
URI.toString takes parameter that controls how much encoding happens, affects #2990, #4315
simplify test code
Minor tooltip correction
matchOnDescription allow me to open Visual Studio Code as CrhomeBrowser (fixes #4809)
extract URI formatting
improve query interface
debug: dispose watch expression template actionBar
Ideographs are wide
bring back quick open progressbar stop
Ensure rendered leading & trailing whitespace get predictable width
Escape all non-ASCII characters within testing code
detailized testing
debug: show all stopped reasons
ops - oversight when adding SuggestionType
fix file editor input tests
Make eslint and jshint owners of their problem matchers
Sorry, I forgot to initialize character classes
Add braces in BREAK_IDEOGRAPHIC initialization
fix typo
debug: use italic for 'load more stack frames'
use SuggestionType over string
Add CJK wrapping tests.
Formatting
Add CJK breaking mechanism
Update defaultConfig.ts to add CJK punctuations to breaking classes.
simplify URI#file, less replacing and decoding
debug: vertical align x icon
don't encode = in http(s) uris, fixes #4315
debug: stack frames paging
deduplicate some tests
Remove perf scripts
fix lifecycle
disable failing tests
remove obsolete registerXYZ-methods
Copy rpm to .build with ideal name format
debug: simler state handling
remove cache gallery
pump up delayer
adopt lifecycle-changes
merge with master
fix lifecycle
configuration: buffer requests to reload configuration from an event
use capital casing
Command palette's camel case matching does not work for non ASCII characters (fixes #4691)
lock down ghooks
Build yum repository
add .bas extension for VBA
typo
update node-debug
Small perf tweaks
debug: terminate session when debugged extension gets closed
limit the flood of progress events for fulltext searches
update node-debug
Optimize usage of modeTransitions
query gallery directly
Added comment for platfrom.locale
Remove isDisposed checks in model
update to TypeScript 1.8.9
merge AbstractWorker into typescript-module, renames
add nls comments to make it clearer for translators
Closing extension Code instance doesn't make `Run` stop #4239
be prepared for missing services
Unlocking ghooks version
merge javascript into languages/typescript
Coordinate writing to the textarea, do it after rendering the lines text
Locking ghooks version due to https://github.com/gtramontina/ghooks/issues/63
View does not force tokenization
arrays.distinct do not filter out default string keys
make worker manager an entry point
Clean up horizontal reveal sequence, do not touch the DOM in onScrollHeightChanged
Search in all files with a regex with .* and a trailing space doesn't work (fixes #4678)
debug: add context menu copy action to repl
adjust build files
remove more unused stuff
debug improve error messages when launching adapter
expose additional language service methods
support for diagnostics
Searching for "travis" in quick open, in vscode repo, doesn't find it easily (fixes #3818)
add stackframe paging support to debug protocol and node-debug
debug: better state changes on preLaunchTask failures
outline, format range, format on type
reuse proper model sync logic
remove unused style
Orchestrate scrollbar rendering (render after editor forced layout)
merge compiler options and extra libs into one worker call
restart worker when defaults change
cleaner worker management
better defaults, better lib.d.ts handling
render overlay widgets when they are added, modified or removed
Remove the perf test contrib
fix issue with 'suggest'
parameter hints
some lib.d.ts
tweak suggest
worker manager and stupid model sync
add comment on upstream issue
New untitiled file not saved on exit (fixes #4739)
remove suggest config options
remove old workers, infrastructure, some features etc
stop worker after 5min idle
references, definitions
git version might not be semver
language feature and more slim worker
Maybe `-w` should not spawn Code as a child, when it is not running yet (fixes #4159)
split recent files and folders in picker
OS X: why does 'Open Recent' menu show separator line? (fixes #4716)
Revert "Mac: Undo, Redo, Select All not working in native dialogs (use roles for those?) (fixes #797)"
Improve glyph margin and line decorations rendering
Extract try/catch code
Introduce LazyPromise
Create rpc messages explicitly
Delay editor status rendering until next animation frame
Improve view rendering
update node-debug
i18n input
Optimize overview ruler
Reland: Support multi-line environment variables
Revert "Support multi-line environment variables"
Optimize view layout
Optimize lines layout
Save perf tools
Optimize overview ruler
Optimize ViewEventDispatcher
Use Object.keys
Add Icon to rpm file
Optimize PrefixSumComputer
Refactor how the scrollbar gets its dimensions
fix #4652: add id to editor action invoked telemetry event
Support multi-line environment variables
Mac: Recent files should be split into files and folders (fixes #4167)
debug: set state to initalizing asap
a little bit more pluginHost => extensionHost
Bail early if --diff is not used with correct arguments of 2 existing files (fixes #4182)
diffMode is too sticky (fixes #4647)
debug: if stack frame is unavailable do not show line number
debug: do not remove ansi escape codes
debug: make 'type' case insensitive
fix compile issue
strings.appendWithLimit
debug: configure action inital state is without a notification
File picker: support pattern with line/column number in <path>(ln,col) syntax (fixes #4643)
debug: notification on configure action if debugging is not setup
sketch up a slim worker using the simpler worker infrastructure
open new jsconfig-file in the right-most editor, fixes #4499
Cache bounding client rect
remove default value, fixes  #2333
clarify deprecation wording
fwd error when document cannot be opened, fixes #4577
fix issues
removing custom linting story
remove logical selection, quickfix, and module path magic
Copying a file from Windows explorer into same directory in VS Code removes all code (fixes #4531)
debug: cancel all sent promises on disconnect
more
Mac: Undo, Redo, Select All not working in native dialogs (use roles for those?) (fixes #797)
remove missing files notion
fixes #4552
:cry: remove js2ts rewriter
fixes #4611
remove worker particpants
fixes #4632
Cache configuration in view parts
uri - init all fields in ctor
only default project resolver
remove typescript.workbench
remove TS/JS specific flags, fixes #3916
Optimize view overlays rendering
remove unused code, #4503
Remove legacy bin command as rpm post install step
Use string concatenation
Correct source repository format
Use FastDomNode for scrollbars
adds TerminalService tests
More optimizations
Revert "Revert "Add syntax highlighting for zsh config files""
Update jsconfig.schema.json
Cannot read property 'dispose' of undefined (fixes #4576)
Optimize ViewEventHandler.handleEvents
Optimize renderLine
remove triggerCharacter constraint
Initial perf investigation
streamline lifecycle methods
Revert "Add syntax highlighting for zsh config files"
Help > View License not redirecting properly (fixes #4579)
target as the only compiler option
Add syntax highlighting for zsh config files
adding telemetry to extension widget
node-debug: package.json translations; fixes #4556
Additional translations for TS extension
incorperate Joh's comments
Update jsconfig
ops
TypeError: Cannot read property 'verboseLogging' of undefined (fixes #4534)
checks models when file events happen
adds debian check for default terminal
makes gnome-terminal default when running on gnome desktop
update to 4.x node.d.ts - wip
Make NameOf a keyword for Visual Basic
Add support for new C# 6 keywords
fix iTerm support for stable version of iTerm; another fix for #4298
Don't need to use -r arg
Remove the legacy Linux bin command when installing stable
update node-debug with translations
Translation input.
Disable apt repository source
fix iTerm problems; fixes #4298
Improve os.homedir code for rpm gulp task
retrieve extension tips from product.json, fixes #4424
crazy action to funnel thro a project.json setting, #4424
support more rebase verbs (fixes #4140)
fixes #4381: [Themes] Should return to default theme to after uninstalling the current theme
fixes #4420
fixes #4419
typo in html format settings description
fixes #4409: [html] formatting puts <a> and <button> tags on one line
don't have API editor for model that are too large for ext host sync'ing, fixes #4373
don't send another open but use Host#handles
remove extension assistant, fixes #4403
Add handles method.
Leak: extfs uses unbounded cache for unicode normalization (fixes #4010)
allow V8 to optimize globToRegExp
oss
add copyright to Ionic OSSReadme
dispose quick open template
clarify && in nls comments
fix npe in extension events
fix gulp for older node versions
cannot move focus between buttons on message bar with keyboard (fixes #4396)
#3769 fixes the light theme focus on buttons in message bar and viewlet
ENOENT errors with file event avalanche (fixes #4350)
Allow bash, sh, zsh as language hints for shellscript
Leak: history service (back/forward) navigation is unbounded (fixes #4362)
better wording
Reduce scrollbar flickering when editing a scrolled line and hovering at the same time
change wording for missing command, fixes #4367
send marketplace headers even when installing
send machineID in gallery requests
use TPromise in telemetry land...
Update ruby grammar
setup uri properly and also make the doc more clear, fixes  #4315
remove timebomb expiration thingy
colors
fixes #4027
#4318 [html] Typing "<something.hidden" in an HTML file will hide the entered text
EventBufferer tests
Remove usage of performance.now in TextModelWithTokens (#1439)
tweak outline color for buttons (dark theme)
additional font fix for #4336
The high contrast theme has a serif font for the Output window (fixes #4336)
#3586 fixes unreadable colors on help box for accessibility
fix #3329 Wording of telemetry options
fix #3231: Cannot read property 'detail' of undefined
fix #4139: remove logException from AI since it's not used
update deps
update dev dependencies, fix build
warn users about git <2.0.0
Reading file that is constantly being modified causes a crash (#1439)
fix build
node-debug: fix for #4327
fixes #4262 [html] formatter option "html.format.unformatted" doesn't work
fixes #4087
remove delete this.*
Languages: Add `.php4` and `.php5` as extensions
allow for Delayer recursion
:lipstick:
formatting
Languages: Add `yield` keyword in PHP
debug: do not use delete
fixes #4122
Repeated words in the task creation quick box #4196
less delete this.*
dont run cache and gallery queries in parallel
remove setTimeout
fix EventBufferer when recursing
massive leakage with search viewlet (fixes #4016)
output: polish trimming on output received
debug: focus first stack frame from top that has source
fixes #3931: [php] opening php tag should be recognised as a valid intellisense option
fixes #3815: [php] autocomplete is not showing user variables
debug: introduce max elements in repl limit
debug: better handling of session listeners
use a fresh fwd link, fixes #4291
fix suggestionSupportsAutoAccept and dedupe command, #4269
gulpfile.extensions: add 'src' to sourceRoot
update gulp-vinyl-zip
update gulpfile extensions
Setup php extension debugging
add comment to default config, fixes #4291
more prominent light bulb color since you can now ignore it, #4256
fix settings for search exclude
exclude common folders from list of large folders, #4256
White brackets in tsx/jsx tags
Update to latest TS/JS grammar
fix #4248
Update extHostApiCommands.ts
tweak some complex commands args description
adds terminal command configuration for windows and linux
update node-debug
polish diff mode
Improve bracket match visibility
fixes #4105
fixes #4266
show updated license terms after 1.0.0
Always paint when `layoutContentWidget` is called
fixes #4133: missing syntax highlights for md-headers
output: fixes #4128, fixes #4129
don't mention the project cos we can open its config files, #4256
compile error
warn about obsolete when installing
fixes #4191: Inconsistent coloring of CSS rules values
fixes #4164: [folding] Add limit to the number of folding regions
Windows: -w option not working when vs code already running (fixes #4259)
output: limit buffer
fixes #4190
Exception when using --wait and killing the cli before the window closes (fixes #4136)
show extension errors in output
fixes #4157
debug: do not close repl on session end
debug: run should also open up the console
debug: add Run to debug category
`-w` doesn't work when there are no windows open (fixes #4150)
fixes #4242
fixes #4040
fixes #4104
[theme] Dark+ and Light+ should support git commit message scopes (fixes #3991)
fixes #4171 [folding] Some useful editor actions (like fold/unfold) are not available for readonly files
Missing colors in some git-rebase-todo tokens (fixes #4140)
don't print err when contributed command fails, fixes #4241
Not all suggestions have all properties defined (#3787)
Add additional bindings for navigating suggestions that don't confuse NVDA (#3787)
Delete javascript migration helper #4149
'null' shows in title (fixes #4132)
avoid description for encoding
Editor title changes as soon as I edit a file, when using --diff (fixes #4178)
fixes #4169
add 'ignore' option to project creation hint, fixes #3997
Workspace settings info message wording (fixes #4174)
file path to language association settings need window reload to work for existing files (fixes #4193)
fix intellisense to make clear that "file path to language association" needs absolute path (fixes #4195)
Save with Encoding shows 'UTF-8 (configured encoding)' while it is UTF with BOM (fixes #4197)
Wording tweak File Association (fixes #4200)
fix #4138
Checkin debug translation files
Enable i18n logging
Enabled TS formatter settings
Add `originalEditable` option to diff editor (#4180)
Allow touching edits in editableTextModel (#3980)
fix tabs vs spaces
debug: do not change view state when rawAttaching
Update issue_template.md
Rename issue_template-proposal.md to issue_template.md
make sure OSS license is OK
:lipstick: tslint
node-debug: show Promise state as value. fixes #2107
fix an issue where the markdown preview action shows up for non markdown editors
column select
Tweaks to column select with mouse
Load VS themes from theme file, clean tokens.css
Add 'include' to JSON schema
Allow themes to be defined in JSON
Polish for #4013
Remove tasks extension from package.json
Label changes
Run autodetection for a specific task runner only
Add CursorStyle.Underline
Better handling of cursorStyle
Update Typescript & JavaScript grammars with fix for TypeScript-TmLanguage/37
update node-debug
Revert "Revert "stdfork respect stderr""
Revert "update node-debug"
Revert "stdfork respect stderr"
Revert "update node-debug to latest protocol"
More i18n files which got ignored due to out folder
Additional i18n files
adding telemetry to json extension
Import i18n files
Add default template
improve extenion error message
add release notes contribution
generic Registry.as
change extension installation animation
Improve heuristics for tab detection
fix #3827
Delete on subst drive doesn't work anymore (fixes #4014)
Improve quick pick behavior
Remove tasks extension
Missing command to set focus to "currently open project" in side bar (fixes #4009)
improved openInNewWindow handling
do not add diff files to recent list for now
Support git commit message syntax highlighting (fixes #3876)
Add diff language mode for .diff and .patch files (fixes #3183)
Add task template quick picker
Remove console log statement
update node-debug to latest protocol
Add `setContext` command
fix #4012
wording
perf - less object and validation when  creating URI objects
add 'allThreadsStopped' attribute to StoppedEvent
mac: quit app when window closes and we have been started with --wait
distinguish between forceNewWindow and preferNewWindow
stdfork respect stderr
cli: in -w mode, exit when child exits
gitconfig => ini mode
update outdated notification on uninstall
Update and rename issue_template.md to issue_template-proposal.md
debug: run without debugging mode vscode terminates extension host
Rename issue_template-prop.md to issue_template.md
outdated extensions in status bar
Support -w command also when code is already running
Update issue_template-prop.md
Update issue_template-prop.md
issue template proposal
don't get stuck in _wordenize, don't allow evil regexp as word definition, fixes #3963
__electricCharacterSupport#brackets for btw compatability
refactor getOutdatedExtensions out
Consume latest TypeScript grammar and token.css simplification
better installing animation
First steps towards paramterHints accessibility
mac: add node_modules to folders to exclude in watching by default
Patch for TS issue #7292: No commonjs module resolution when there is no jsconfig.json
set aria-label on rename input, fixes #3852
add telemetry for project creation/exclude hints and acceptance
improved labels
polish for language and encoding picker
leave out 'shortcut' from aria
clarify -d option
Alphabetize CLI args
update node-debug
More tweaks in typing handlers
Add cursorStyle to TextEditorOptions
Dispatch typing, replace previous char, pasting and cutting through keybinding service
debug: use a 1s timeout when hiding the repl on session end
watcher: do not blindly try to restart a crashing watcher until the end of days
let files.watcherExclude be an object like other exclude settings
fix compile errors
installing extensions state
change wording, #3901
extensions status bar: bring back icon
set limit to 500 files, name big roots of a project, #3901
extensions status bar: click should show all commands
extension status bar: errors should only display once
set limit to 1000 files
introduce files.watcherExclude to be able to configure exclusions for file watching
salsa project status, first cut, #3901
debug: better handling when a preLaunchTask can not be found
log when chokidar is not using fsevents; increase default polling intervals
refactor
refactor
Multiplex between JavaScript and TypeScript
destructure imports
Allow to diff 2 files in VS Code with command line arguments (fixes #3917)
Update to tsserver 1.8.7
Add Group, Vendor and Packager metadata to rpm spec
fix activate extension telemetry event to include
upgrade to latest vscode-extension-telemetry
Revert "add .nvmrc for using osx native fs-events with gulp"
debug: use remove-all icon for global removal actions in bps and watch header
Use for now alerts for suggestion items
Make sure all services are copied over in standalone
Format
fixes #3395
add .nvmrc for using osx native fs-events with gulp
suggest: cleanup
fix suggest css
outputServices.showOutput do nothing if the correct panel is already revealed
output: better protect agains spammy output
prevent nvda from reading the full application URL on start/reload
Support to terminate extension host through IPC (fixes #3904)
Revert "fixes #3294"
Add helpful error messages to deprecated "auto" values in editor.tabSize and editor.insertSpaces
add `editor.acceptSuggestionOnEnter` option to control iff Enter accepts a suggestion or inserts a new line, fixes #1657
keybinding contexts can reference configuration options
use aria labels for keybindings
Add IKeybindingService.getAriaLabelFor and adopt it
Add ability to change a document's EOL
output: introduce onActiveOutputChannel
editorStatus: minor polish
TextDocument#save resolves with false (fixes #3607)
Create language specific nls files for extensions
Show message when "auto" is detected
Handle indentation changes coming from configuration
Handle indentation changes coming from the extension host
Allow to change indent options on models
Clean up createTestMirrorModelFromString
Minor cleanup in tests
Use `defaultInsertSpaces` when guessing
Clarify settings semantics
First cut at indentation options living in the model
Model gets created with ITextModelCreationOptions
output: accumulate output on the UI side, not in the service
Implement -w/--wait command line arg
Don't bother building rpm package for source
Build 32-bit rpm package with correct arch
fixes #3294
add an entry to the mode picker to hint a user how to configure the mode association in settings
fixes #3139
[folding] Unfold should unfold next folded region #3814
indent actions polish
improve wording for shell command dance
indentation: add seperate between actions
add an action to hide workspace settings info for the workspace
separate "auto detect" from other picks in mode picker
add "separate" option to IPickOpenEntry to separate item from others
tackle #3089 and #2912
COMMAND PALLET: Shortcut keys are not read by screenreader (fixes #3839)
fixes #3848
debug: hide console on end of debug seassion
exclude i18n from search results
indentation: indentUsingTabs, indentUsingSpaces actions
split tests
update node-debug
fixes #3569
Create nls files for vscode core
Make it clear that a suggestion is a suggestion to aria, alert when accepting a suggestion
Simplify indentationGuesser code
Extract indentation guesser code to its own file
fixes #3790
catch no cache case
fix build
JSON schema test commented out due to NLS issue (#3824)
fix gulp tasks for extensions-build
Tweek JSON Schema contributions test
Ionic Tags: Omit copyright date
list: cleanup
debug: use aria.status instead of aria.alert when applicable
debug: fix repl icon in HC mode
Suggest widget accessibility
fix windows build
Can no longer break in Unit tests using Code (fixes #3659)
Move deb build assets to .build/linux/deb/ directory
Implement .rpm package gulp task
i18n updated and cleanup
update node-debug
fixes #3173
debug: use cross arrow same as everywhere else
fix build
Add i18n files for core and extensions
move unexternalized strings rule
fix up lint errors, cleanup build folder
fix hygiene
fix hygiene
remove leftover build file
move .eslintrc up to root
Hiding the menu bar does not indicate how to bring it back (fixes #3770)
[rust] update rust grammar (Feb 14, 2016)
extract gulpfile rebase
fixes #1948
Cross arrow in search panel is different to that used elsewhere (fixes #3376)
fixes #3668
License statements for using the Ionic documentaton (#3696, #3734)
License statements for using the Ionic documentaton (#3696, #3734)
fixes #3511
bye bye strings.replaceAll()
use onUnexpectedError
glob: prevent repeated basename computation
protect tree's getChildren when errors occur
Build extensions with nls support
Search results include large files which can't be viewed (fixes #3758)
Cannot read property 'saveViewState' of null (fixes #3728)
remove unused
fix encoding detection for utf8 and utf8bom
Inline theme files
Remove no longer necessary tasks
improve snippet for file association
fix markdown preview action contribution
some cleanup
Adding descriptions of Ionic HTML tags
[go syntax] Don't treat multiline `var` specially
fixes #3730
improve extension recommendations
Mac: Doubleclick sometimes ends up selecting the span (fixes #3726)
associate mimes from the modeservice
have intellisense for modes
version bump
[josn-server] remove typescript and mocha as dev dependencies
remove extension tips status bar contribution
fix npe
fix build
remove console.log
remove hardcode extensions dependencies
clear user configured mime associations when updating
implement more explicit mode lookup rules
fix lint
fix watch & compile tasks
[json] fix sourcemaps
update node-debug for #3675
debug: respect exceptionBreakpoint.default
user configured mimes get highest priority
add a default value to exceptionBreakpointFilters
update node-debug
fixes #1642
association => associations
[json] adopt npm scripts
first version of a new setting to associate file patterns to languages
fixes #3679
debug: change telemetry event names
move telemetry click tracking logic back to debug land
gulpfile.extensions refactor
fix bom detection properly
fix invalid utf 8 bom indicator
simplify
Refactor tree event code
debug: set noDebug only aftere null check
Adding unit tests for Ionic HTML Intellisense
debug: null guard when formating
debug: respect exit code also for watching tasks
Use local version of gulp in ./scripts/code.sh.
Removed repetitive code to be more DRY
debug: support run command
hide aria container
show header actions on hover over the whole pane
charset => encoding
wip
debug: protect against null variables from adapter
panel top HC aware
only disable console attachment when in TFS
Converted json extension to new vscode-nls npm module
Remove modes.Bracket
Reduce usage of modes.Bracket
Do not generate brackets when tokenizing monarch modes
Do not generate brackets when tokenizing handlebars, json, php or razor
Do not generate brackets when tokenizing CSS
Do not generate brackets when tokenizing JS/TS
Add compile-build-extensions tasks
Localize task extension
Add dependency to vscode-nls npm module
Localize TS extension
Localize PHP plugin
Read locale information from environment
fix the test
refactor
make batch file return non zero on test fail
Enable optimze-vscode again for vscode-win32
fail a test
use ELECTRON_NO_ATTACH_CONSOLE
use start
remove echo off from tests
damn it extension status bar
reload javascript project activation event
clean up extension tips css
I don't even
Revert "status bar: do not consume space for hidden status"
status bar: do not consume space for hidden status
Allow to save with UTF-8 + BOM encoding (fixes #751)
Close other files does not close diff editor, md previews (fixes #3405)
close file also works on non file editors (fixes #3439)
Resolve path arg instead of normalize
Produce .deb package in deb/ folder
Adding HTML intellisense for Ionic framework tags and attributes
Added telemetry for debugging:
Use local version of gulp in build steps.
update node-debug
make sure the workbench does not fall over a runtime exception during startup
debug: null guard
Do not use electron's remote in event handlers (fixes #3072)
Simplify test script definition in package.json
update node-debug
fixes #3624
debug: use paths.isAbsoluteRegex
fix missing extension adoption in tasks/package.json
focus preview editor after refresh
Investigate to reduce working files watcher to only the ones opened (fixes #3617)
New files get view state of previously open file (fixes #3619)
File picker doesn't open file with full path (fixes #3013)
[folding] validate view state before applying
pahts.isAbsolute
Go to File does not find files in directory junctions (fixes #2896)
Added link to the 'how to contribute' doc.
debug: space key to toggle breakpoint enablement
debug: remove ansi escape codes
debug: show a link in error notifications
update node-debug
render whitespace in menu not in status bar
QuickPick "recently opened" indicator is clipped (fixes #3375)
Clean up threadService
More plugin -> extension
More plugin -> extension
rename nativePluginService to nativeExtensionService
plugin -> extension
trigger build
trigger build
pass a 'More Information' url from the debug adapter to the frontend. fixes #3448
update node-debug
plugin -> extension
Toggle Render Whitespace
More plugin -> extension renames and reorg
More cleanup in extension service
Language change in file comparison only affacts right pane (fixes #2932)
#3403 [folding] Fold action should work on all cursors
Search: no a11y feedback for search results and search progress (fixes #2644)
e.text.substr is not a function (fixes #3230)
debug: show stoppedEvent.text on hover
Action buttons are not announced in Explorer section title bar (fixes #3310)
pluginVersionValidator -> extensionValidator
AbstractPluginService -> AbstractExtensionService
More plugin -> extension renames
strange sorting order of QuickPick help (fixes #3378)
PluginsRegistry -> ExtensionsRegistry
Renames from plugins to extensions
Code does not work when using new session switch (-n) (fixes #3474)
Simplify IExtensionService
lint errors
IPluginService -> IExtensionService
remove migration code
src/vs/platform/plugins -> src/vs/platform/extensions
Remove support for isAMD since php is now also commonjs
Rename gulp tasks around extensions
gulpfile.plugins -> gulpfile.extensions
Remove remaining internal declares.d.ts
php extension compiles to commonjs
Add eol setting
Polish code complete in Configure Task Runner
"Some projects have trouble loading" error makes viewport smaller than entire editor (fixes #3574)
remove unused NullConfigurationService
Register code to the Debian alternatives system
Add application/xhtml+xml as a HTML mimetype
Add remaining CLI args to --help usage
debug: only send exception breakpoints if there are some. Remove hard coded 'all' and 'uncaught'
debug: better error handling when 'type' missing
indentation: more tuning based on feedback
'Revert File' in working files context menu (fixes #3498)
Uncaught exception when calling connection.console.info() (fixes #3128)
tweak settings wording
Revise deb package wording
Trim '.' characters from paths on Windows
Add column selection with mouse
Send a new `mouseColumn` hint to viewController
Further simplifications in mouseHandler
Work with positions instead of lineNumber, column
Mouse dispatching is done in the viewController
Renames in MouseDownOperation
var -> let
Extract mouse down code to MouseDownOperation
Don't use IMouseEvent in mouseTarget
Reverting #3304
debug: remove 'reapply all breakpoints' as a top level action in the breakpoints pane
debug: better breakpoint action enablement
indentation: tune text, focus current tab size
move indentation right of column / line indicator
output panel does not support folding
Use ::after psuedo elements to display folding icon
Revert "Revert "folding fade out""
Revert "Revert "Addresses #2984 adds fade in to folding icons.""
Associate .xhtml with HTML language mode
Highlight CSS property values in Dark+
Add text-decoration: none to intellisense
Register the apt repository as a source for official .deb builds
version bump
workaround for json autocomplete does not escape \ in strings? #3485
Revert "Addresses #2984 adds fade in to folding icons."
Revert "folding fade out"
Minor word tweak
fixes #3290
debug: preLaucnhTask default value is null
extension tips: offer mono debug for cs projects
add javascript react snippets
fixes #3477
remove csharp/omnisharp dependencies from top level ossreadme
indentation: store indentation in history only if editor configuration changed by user
add overview ruler border top
folding fade out
Addresses #2984 adds fade in to folding icons.
Enable by default `editor.experimentalScreenReader`
[folding] fix indent computation with tabs
Keep (un)folded region revealed (#3314)
fixes #3383 [folding] icon hides git gutter colouring
debug: revisit wording
fixes #3314: [folding] File contents scrolls if folding is turned off
use same cli script in Windows
typo
add code launcher for windows bash
do not offer to isntall mono debug on windows since it is not supported
fixes #3460
extensions assistant: show message that extension is being installed
Better options for installing removed extensions
[folding] Setting `editor.folding` to `false` should expand all folded regions #3401
debug: better error handling for reconnect case
fixes #2476
add reload javascript project command
debug: better updating of labels for actions
editorStatus: null guard
tasks: configure task runner action should not open output
update node-debug
debug: do not open repl when restarting
panel: panel border top is gray
improve salsa release notes message
swap readme and license links
add extension tips
change ms-vscode.omnisharp to ms-vscode.csharp
debug: wording
debug fix wording
debug: change wording
systemVariables.resolveAny
fix tests
update node-debug
Add `files.eol` option and pick it up when creating models
Prepare model to get passed in the default eol
fixes #2890
fixes #2934
fixes #3021
fixes #3133
fixes #3272
fixes #3334
fixes #3396
indentation: remeber indentation settings per model
[ts][js] update grammar to dbb24c8 (Feb 24)
Revert "fixes #3122: Add snippet support to tasks.json"
Revert "Use forward link to point to task doc"
Revert "Add support for donet build"
indentation: polish change indentation size actions
convert indentation actions should also update insertSpaces option
debug: only send REPL_ELEMENTS_UPDATED if something changed
debug: rename action launch.json -> open launch.json
debug: fix phrasing
Adopt latest loader
Prefer lowercase c in (c)
Do not ship octicons in standalone editor
debug: anounce when program continues
debug: tune aria alerts
fixes #3404
I should learn to spell
Remove unused code
Use a fixed size folding gutter (see #3390)
EventDelayer -> EventBufferer
Additional fix for #3328 made top viewlet text label high contrast for hc-black
Smaller, but still pixel-perfect icons
Added subtle background for collapsed icons
Pixel-perfect icons with no aliasing for code folding #3299
add EventDelayer. fix list rendering issue
remove unused code
list widget refactor
update ThirdPartyNotices.txt
ossreadme: we use typescript 1.8.2
[folding] action ids mixup
Folding does not need to recompute on mode changes
Standalone Editor improvements
debug: fix repl icon in hc theme
indentation: remove setIndentationOptions
fixes #3273 Improve OLD INJECTION STYLE warning detection
[json] 'super' must be called before accessing 'this'
omit 'this before super' errors from build
compile: gitActions
update typescript to 1.8.2
make build fail on compile errors
fix build: json server super call
fix build error
Resolves #3266 high contrast icons for code folding
New icons for code folding for issue #2948
indentation: IndentUsingTabs and IndentUsingSpaces actions
editor: setIndentationOptions
indentation: better handling for read only editor and diff editors
debug: make areaLabel more concise
debug: anounce file name and line number when stopped
update node-debug to latest
Adopt new editor.wordSeparators for word mouse navigation
Adopt new editor.wordSeparators for moveWordRight
Adopt new editor.wordSeparators for moveWordLeft
Protect from spammy calls to setHiddenAreas
Adopt new editor.wordSeparators for deleteWordRight
Adopt new editor.wordSeparators for deleteWordLeft
Add `editor.wordSeparators` option
indentation: also convert only whitespace lines
debug: make exception breakpoints accessible
Remove trailing dot removal all together
Simplify mode creation logic
add LICENSE link
remove extension links rounded corners
editorStatus: encoding actions displayed in a better way in quick open
editorStatus: show encoding
Rename INewConstructorSignature to IConstructorSignature
Remove old constructor APIs
debug: move debug actions to bottom of context menu
some mistake in writing in folding.ts #3070
Disable folding in diff editors
Move `CharacterPair` to `modes.ts` and adopt in `onEnter.ts`
Simplify code dealing with brackets
vsxml is only used in razor
Simplify buildfiles
plaintext is not a compat mode, convert .js files to .ts
Organize imports
Organize imports
Organize imports
Organize imports
Organize imports
Better handling of empty edits
Emit model mode changed from modelService
Organize imports
Cleanup
Remove network.URL
fix typo
Document when the registerOnTypeFormattingEditProvider is active
Added missing keyword
fixed LAST lint warning
Update Swift Autocompletion Syntax
merging #3034
Remove unused vscode-linux-arch-build-deb-catalog gulp tasks
Correct Package format
indentation: actions
indentation: commands tests
indentation: commands
use NullService when needed
Further clarification in TextEditorOptions #2797
fix version references
extension assistent: update publisher for mono-debug
fix version check
:lipstick:
better error message in version mismatch
Adopt latest loader
propagate main
remove omnisharp
add no-unused-vars to eslintrc
Have 1 mode worker in vscode and 2 for standalone editor
Synchronize only models belonging to compat modes to the modes workers
Remove modelService dep from modeService
Remove editorWorkerService dep from modeService
remove plugin host sourcemap
add .eslintrc to build files
extension service: compatible version first steps
request: use TPromise
Bring back asyncCtor to html
Colorizer tests instantiate the needed modes
Simplify thread service due to reduced usage of IThreadSynchronizableObject
Reduce usage of IThreadSynchronizableObject
Simplify editorWorkerServer
HTML knows auto closing pairs
MonarchMode is abstract
No more need for `nullWorker`
Make AbstractMode as thin as possible
bump tslint to 3.3.0
Each mode manages the worker code loading
move vscode-extension-telemetry dependency to typescript
use latest node in travis
update npm
debug: better promise order when starting session
Add support for donet build
fix tests: global mime module is evil
Use forward link to point to task doc
Add "launch"-type config to launch.json
AAA compliance for current line
AAA compliant scrollbars hc-dark
Removed ghosting bug on activity bar hc-dark theme
AAA compliance with comment token
Changed hc-dark orange color to be AAA compliant with high contrast
Use epoch time as deb package revision
Improved selection hilights for hc-dark theme
Moved high contrast inverted effect to its own stylesheet
add telemetry to the typescript extension
Removed gitter on tree hover high-contrast
Inverting selection, for higher contrast.  WIP
Enable high-contrast theme on all platforms.  Removed unused variable per hygiene.js
Remove AbstractModeWorker
Simplify AbstractModeWorker
Push down configurationSupport to the modes that actually use it
Move validation logic down to each mode that needs it
Clean up AbstractModeWorker around ValidationHelper
Use inplaceReplaceSupport only in the modes that customize it
SimpleWorker: guard initialization promise from cancelation
Run first inplace replace in editorSimpleWorker and then in mode support
Remove suggest logic from AbstractModeWorker
Clean up suggest code in AbstractModeWorker
Move `suggest` down from AbstractMode to each mode
Create apt repository package catalog with deb package
Change accelerator key for menu item: User Snippets
Textual suggestions run on the editor simple worker
Begin moving suggestSupport down to actual modes
:lipstick: tslint
Compute simple links on the editor simple worker
fix vertical alignment in git changes view
debug: log adapter crashes to adapter telemtry buckets as well
aiAdapter: additionalDataToLog
Remove model properties
Remove diffSupport and dirtyDiffSupport from modes
fix hygiene
Don't leak env variables from batch files
Stop syncing models to simple editor worker if they aren't needed for more than 1 min
Exclude `simpleWorker` from `editorSimpleWorker` in bundling
Add new worker to buildfiles
Stop simple editor worker after 5 min if it's not used
Better handling of untracked files w.r.t. dirtyDiff
Compute diff and dirtyDiff on a private editor worker
Make WorkerInplaceReplaceSupport usage clear
fixes #3122: Add snippet support to tasks.json
reuse reporter in tslint
update to latest node-debug
debug protcol: update to latest version
add support for restarting debug session
whitespace
debug: offer to configure tasks.json when there is no tasks.json
Added tslint to the hygiene pre-commit check
debug: show 'add to watch' in context menu if there is a launch.json
editor: fix hover focus outline
debug: make hover accessible
editor: make hover accessible
workspace.rootPath is read-only
tslint /editor/ and /platform/ tests
Remove unused Everywhere thread attribute
lint: fix duplicate nls keys
More tslint
tslint
Port noUnexternalizedStringsRule to TS 1.8.0. Add support to detect duplicate keys with different messages
Remove thread attribute usage from markerService
Remove SynchronizableObjectsRegistry
Languages information is synchronized with the worker through a Remotable
Forward arguments correctly: use "$@" instead of $*
debug: show stackFrame.name on hover in call stack pane
debug: get exception breakpoints from the adapter
debug: add label and filter to exceptionBreakpoints
hide errorList as a panel for now
linting in workbench
debug: respect taskSummary.exitCode
tasks: surface exitCode
Removed some rules to make tslint happy with TS 1.8.0
Fully remove JS and TS from the VSCode. Only keep extensions.
wording
Bump version to 0.10.10 due to jan recovery release
Clean up modesRegistry
Move SnippetsRegistry out of modesRegistry
Further reduce dependencies to LanguageExtensions
Remove dependencies to LanguageExtensions
Turn Salsa status into a version status
casing
node-debug: propagate error message for unverified breakpoints
debug: show breakpoint.message on hover
debug: protect agains undefined breakpoint line number
Update to TypeScript 1.8.0
cli updates
HTMLSelectElement.add
update node-debug for package.nls.json
update node-debug (final nls touches)
add common properties to debug adapter telemetry
Changed "unsupported breakpoint" icon to have exclamation mark.
update node-debug (finished nls work)
:lipstick: tshint
errorList: minor polish
tslint
update gulp-azure-storage
Adopt richEditSupport brackets in tokenSelectionSupport
add sourcemap url by default
debug: rename function breakpoint as context menu aciton
debug: rename function breakpoints
update-vscode-sourcemaps
tslint
tslint
Move more methods from modesRegistry to modeService
modesRegistry.getRegisteredModes -> modeService.getRegisteredModes
modesRegistry.isRegisteredMode -> modeService.isRegisteredMode
Tiny thread service refactoring
darwin: cli install/uninstall
propagate configuration settings
pfs: lstat, symlink, readlink
add os.homedir to typings
debug: aiKey
debug: telemetry key contributed by debug adapters
debug: fix breakpoint helper glyph
debug: polish interfaces, add comments
ErrorList: Location in one div
easy textarea revealing
clean up for tslint
add optinstatus event
add optout configuration for telemetry
move telemetry service config to telemetry
debug: do not send breakpoints to adapter if file is dirty
debug: show breakpoints as dirty if file modified
Externalize strings for TypeScript extensions
Add Error List
debug: do not color 'not avaible' in red, it is too prominent.
debug: null guard
Added additional | signatures
debug: save vertical space when showing paused reason
update node-debug
move back to ATOM_SHELL_INTERNAL_RUN_AS_NODE
debug: do not show unsupported breakpoint is session is not acrive
update node-debug
add exceptionBreakpointFilters capability
Add tests for tokenSelectionSupport
update node-debug (announce support for conditional breakpoints)
debug: decorate conditional breakpoints as unsupported when adapter does not support them.
debugProtocol: supportsConditionalBreakpoints
update node-debug (nls work)
Better handling of cross-mode bracket matching
Added icons for unsupported breakpoints
refactor AIAdatper out of ai telemetry appender
tslint
update node-debug
Add git as a package dependency
Add maintainer email back in
[folding] turn folding on by default
tslint
FIxes #2965 [folding] incorrect folding region when folding vscode.d.ts
tslint
[folding] use Ctrl+Shift+Bracket, fix fold/unfold all
tslint
tslint :lipstick:
[folding] don't grow visual decoration
[folding] use pointing cursor
add darwin specific launcher
make control quality aware
Suggest: keep completionModel alive in the suggestModel to speed things up dramatically in the no matching suggestions case
make code.desktop quality aware
rename linux executable to quality
editor: allow editor action descriptor to pass in a KbExpr
Add support to localize package.json
upgrade to latest debug protocol
make linux deb build quality dependent
fix build
win32ShortcutName -> applicationName
debug: aria roles for hover
debug: word wrap for simple value hover
remove VSCODE_PATH from cli, move to linux
Extract CompletionModel from suggestWidget.ts
use ELECTRON_RUN_AS_NODE
fix bootstrap
make sure cli is top level module
move launcher.js to cli.js
export bootstrap from bootstrap-amd
Add and use NVDAPagedText strategy
[folding] size arrows acording to editor font size
Add screen reader support and keyboard support for gotoError
debug: tune word wrap numbers
[folding] adopt to commonEditorConfig changes
package minified linux to deb
build deb in .build/linux
[folding] store folding state as view state
count deb package size in stream
editor: vertical overview ruler and scroll all the way to bottom
remove commented task dependency
Add missing semicolon
Add gulp tasks to build deb packages
[folding] code beautification
[folding] add setting
[folding] fix in indent folding with same indent elements
[folding] fold/unfold commands and keybindings
debug: fix higlight decorations
debug: do not highlight hovered and fix hectic hover jumps
[folding] clicking on folding ellipses
debug: opening the output for preLaunchTask lives in taskService
debug: show notification in debug console icon when there is unseen output
No need to export multiCursorFind
Small perf tweaks
Send/Receive bulk messages to extension host process
Avoid URI serialization when sending TextDocument updates to the extension host
Speed up editorStatus: do minimal updates to the DOM
fix TextEditorOptions declaration - fixes #2797
debug: only automatically reveal repl on debug session start
[folding] prevent visual decorator from going on multiple lines
folding decorators: Acomodate space for Git decorator
debug: remove badges
fixes #2174 : [js] Salsa - JS ReactNative - use the TypeScriptReact grammar for JS
Minimize folding decorations to update
Handle empty lines in indent strategy
add zlib to baseModules
use cached gallery results
fix IXHRResponse interface link
introduce cacheUrl
support gzip content-encoding in rawHttpService
debug: fix error propagation
debug: make reapply all breakpoints a global workbench action
update node-debug (add vscode-nls)
update node-debug
[json] better support for null, and array of types
debug: announce program state to user
git: bring back smart enablement for stage action
Update perl grammar (Nov 21)
debug: introduce breakpoint.idFromAdapter
Show collapse only on hover
fixes #2847
wokraround false positives in tslint
Begin using mode's brackets when searching for brackets
Cleanup in electricCharacter
New logic for brackets in electricCharacter
Changed category from 'ww' to 'View'
Remove yargs, roll own arg parser
Revert "Add yargs@^3.32.0 to shrinkwrap"
debug: use badges
Folding using indentation
offer reload action when extension host dies
:lipstick:
alert the user when the shared process crashes
debug: do not open viewlet on start if sidebar hidden
git: remove smartness around stage selected lines enablement
debug: focus the just added watch expression or function breakpoint
fix overflow
dropdown: support mouse down => context menu => action => mouse up to execute
linting
Simplify modes around word definition
linting markdown
Simplify mode comment support
fix tab focus color in extension quick open to be clearer visible
Move ICharacterPairContribution to characterPair.ts
More monarch `enhancedBrackets` removal
Remove `regexBrackets`
remove unused requires
Remove `enhancedBrackets` from monarch for now
refactgor bootstrap-amd
better focus adjustment to last active view
Migrate final users of electricCharacter.onEnter to onEnterRules
fix build
Add support for jsonSchema integer type in Intellisense
refactor bootstrap
narrow down use of VSCODE_NLS_CONFIG
New regex based implementation for TextModelWithTokens.matchBracket
debug: 'breakpoint' event
debug: nicer function breakpoints api
Promise => TPromise in most of workbench land
debug: make add function breakpoints action a global workbench action
debug: surface function breakpoints
more reliable tests in ci
test timeout increase
VSCode does not respect window layout during debugging [Windows] (fixes #2612)
Mac: wrong command shortcut for Hide Others (fixes #2786)
Extract methods around bracket handling
use proper version of vscode
Minor import cleanup
Inline autoIndentation to electricCharacter
Extract InplaceReplaceSupport to its own file
Extract SuggestSupport to its own file
Extract ParameterHintsSupport to its own file
Move arg parsing to launcher.js
Added feedback information
Changes compare function to be case-insensitive.
Delete unused TypeDeclarationSupport
Extract ReferenceSupport to its own file
Extract DeclarationSupport to its own file
debug: use TPromise, not Promise
Extract TokenizationSupport to its own file
Consolidate 5 descriptive mode supports into IRichEditSupport
add "bindings" and "nan" into our shrinkwrap file for "weak" module
fix compile errors
fix bad next page
debug: allow setting breakpoints on whitespace lines
Allow to pick working files via quick open (fixes #441)
suggest: fix details issue
debug: make it clear that columnsStartAt1
debug: do not start session if there are errors after preLaunchTask
Bug: empty search viewlet tree does not indicate keyboard focus
dropdown - lint
remove unused sash properties
Add to TextModelWithTokens: findPrevBracket and findNextBracket
Begin phasing out usage of tokenization brackets
suggest: next, previous page
more focus behavior polish
suggest: accept
suggest: next, previous
adopt function breakpoint protocol change
suggest: mouse click
debug: make hover delay 300ms
fix npe in extension tips
split view: restore focus to view that had focus before
list: const
lint vs/platform
Adds sort lines (ascending and descending) commands.
make tslint happy
Stop capturing 'REM' as a keyword.command in Batch
debug: linting
debug: repl focus last element first
debug: conditonal breakpoint action in command pallete
debug: give focus back to editor once breakpoint widget closed
fix focus on working files going into tree
search - support that "*" returns all results
Make it clear how to cancel a running search (fixes #2494)
Can no longer move editor focus when editor is not code editor (fixes #2736)
list: fix bad import statement
readd focus tracker when file changes in markdown preview
list: handle mouse click
try to fix focus tracking between 2 markdown editors
extensions.showTips only controls the status bar widget
only remeber extension when it was shown
use display:none, not visibility:hidden, fixes #2731
enable emmet support for .twig files (php template engine)
debug: support winx86
Adopt Promise.as => TPromise.as
debug: handle incorrect json objects from adapter better
debug: remove copy value action from repl
Adopt Promise.timeout => TPromise.timeout
suggest: details
update rule in tree from changes to use :before
list: fix rendering leftovers
telemetry for extension tips
tslint
suggest: variable height w/ focus
split view: make sure toolbar gets header hight
easy with clearing focus on the tree
tslint
:lipstick: tslint
suggest: dynamic height
list: reveal
debug: better handling of new lines in repl
outputServices: null guard
jrieken.vscode-omnisharp > ms-vscode.omnisharp
suggest: focus
bump version to 0.10.9 for February work
More tslint
Linting in /base/
list: basic themeing
more linting
fix outlint in tree for other themes too
list: remove wrapper dom node
jolifanto bambla √¥ falli bambla - grossiga m‚Äôpfa habla horem - √©giga goramen - higo bloiko russula huju - hollaka hollala - anlogo bung
Skip no-ops
Reimplement EditableTextModel._applyEdits
var -> let
Revert "debug: output preserve last new line in case more output gets appended"
first cut of function breakpoints
panel: vertically align title
debug: move common code for Expression and Variable to ExpressionContainer
Add yargs@^3.32.0 to shrinkwrap
debug: no longer automatically convert relative to absolute paths
debug: show and hide hover with a 1s delay
RunOnceScheduler.isScheduled()
list: listWidget
Add trailing new line to -v output
more linting
easy with moving focus around after quick open closes
Tree: Focus border cut on selected element (fixes #2532)
some workbench linting
:liptsick: tslint here and there
list -> list view
remove list test files
trait controller
:lipstick: tslint /api
label: Show Extension Tips
remember what extension were proposed
:lipstick: unused imports
suggest: css
Double click a file in explorer causes UI issues (fixes #2713)
sorting: recency -> score
setting 'extensions.showTips' with bells and whistles, nicer eventing in config service
wip: adopt list in suggest widget
Enabled more tslint rules
extract tip data into a JSON file
debug: do not wrap words in hover yet
label "Show Extension Tips"
add extension tips widget
debug: use extensionsAssistant when user tries to debug mono
"Close All Files" action can leave the editor area stale and broken (fixes #2704)
Revert "update node-debug"
add extensions.enableSuggestions flag
extension tips as quick pick list
debug: output preserve last new line in case more output gets appended
list: :lipstick:
list: :lipstick:
use pre-wrap, fixes #2673
list: use diff on visible range
Feature Request: "Close all but this" context menu option for working files (fixes #2643)
text file service - make api fit for resource arrays
Search: no a11y feedback for search results and search progress (fixes #2644)
aria: add status role
Add Linux/OSX wrapper script
a11y: more context specific labels for quick open
Update TS/JS grammars to 59c4f26  (Feb 2)
list: more tests
Add an extension assistant that proposes to install extensions we don't bundle anymore
more specific aria labels for various quick open handlers
fixes #2633 [html] Anchor tag with empty `href` attribute
list: add tests
update node-debug
use a regexp instead of a many ===
provide aria labels for debug viewers
list: fix indexIn when position is > length
debug: treat category console as a warning
use gulp-tsb 0.10.1
a11y: provide more context in aria labels
Remove worker request service that delegates back to the main thread for CORS
Minor clean up in /base/
Remove SHA1 logic from base
Parameter Hints Model uses equal instead of hashing for equality check
debug: remove concept of grouped output
launch.json - remove warnings
list: change range map splice call
update node-debug
list: cleanup
list: improve row cache
No context menu in any input field (fixes #1578)
list: listImpl
list: row cache
Clean up some base/browser files
Remove unused code
debug: do not jump when stepping in internal modules
list: render
list: first steps
dom - use Disposable for dom listeners
one more try, #2658
aria alert: atomic = true
Provide action to "Open definition to the side" (fixes #2660)
Extract StyleMutator to its own file
Move yargs to non-dev deps
Add --help and --version command line args
friend and override are not C keywords
alignof and alignas keywords
repl: give default element height when first output comes very early
Adopt dom.addDisposableListener in the few places still using addListener
Cleanup in scrollableElement
var -> let, format
Rearrange scrollbar code
Only move line numbers down by 1px on Linux
range map: refactor
update node-debug for trace feature
range map: more tests
range map: consolidate, docs
Goto definition to the side with mouse is broken (fixes #2646)
range map: use range intersections
InputBox: decorations are not indicated to screen readers (fixes #2614)
debug: do not use clientHeight when layouting repl tree
input box: set aria-invalid based on validation
checkbox/find: do not move focus when checkbox interaction via keyboard
fix windows test failure
gulp win32 watcher -- filter as soon as possible fs events
bug fix and add some more aria labels
consume gulp-tsb 1.10.0 and fix 'new' compile issues
make sure to resolve editor input properly, fixes #2634
fix npe in DOM
make sure to return at least the empty string when Enter was hit and input is valid, fixes #2631
fix compile error
prepare bulk editor for not having an active editor, fixes #1708
list: range map
Add shortcuts for nextDiff and prevDiff in DiffEditor (fixes #1355)
adjust tree actionbar positioning
a11y role cleanup
debug: force a call stack layout when message box shown or hidden
debug: use path.join
fixes #2611
debug: repl input use synthetic-focus
debug: breakpoint widget remove border so no blue focus is shown
fix bad outline for inputbox with decorations
use stringify/parse and replacer/reviver for marshalling for the sake of perfomance, #2511
add emmet support for .erb and .php files
add emmet support for .erb and .php files
update node-debug
debt - don't use marshalling for descriptors
remove dynamic marshalling contributions cos they aren't needed anymore
debt - extension api/exports only available in ext host
update node-debug
debug: fix call stack pane margin right
debug: do not show unavailable expressions in the hover
some vs/base/browser linting
debug: respect supportsEvaluateForHovers capability
debug: make evaluteExpression reusable
Delete Permanently prompts two times when it fails to move to trash (fixes #2541)
Hiding actions using display:none causes keyboard a11y issues (fixes #2329)
fix npe
attempt to make projectResolve test platform agnostic
debt - make URI.toJSON return a proper object
Cannot invoke actions in quick open entries with keyboard (fixes #2493)
version bump
Messages are not announced to screen reader (fixes #2531)
plugin host => extension host
trees: hide count badge on hover/focus
Editors: announce currently edited document to screen readers (fixes #2526)
preserve window UI state even when it crashed
Rename input box does not use our configured CSS theming (fixes #2542)
update mono-debug. fixes #2350
update node-debug. fixes #2574
Associate .cson with CoffeeScript
update node-debug
debt - remove URI.isURI and replace with instanceof-check, classes ftw
Keep identity with relative paths, fixes #2549
protect against invalid 'outDir'. fixes #2535
Find widget: Error box looks strange (fixes #2448)
Find widget: Error box looks strange (fixes #2448)
fixes #2308
update thirdpartynotices
understand update.channel set to none
Use Widget api to register dom listeners
Remove the dancer from the status
Added twitter icon to twitter button.
update node-debug
Change hover text.
Add ".ino" to cpp file suffices
fix #2404 Add React Native workspace detection
Mac: Select dropdowns in light theme are not styled (fixes #2510)
update node-debug. fixes #2288
Allow custom error messages for regex issues
json package.json: Use tabs instead of spaces
Test fixes for #2468
settings
update vscode-omnisharp version
Debug: Breakpoints not center aligned (Windows) (fixes #2215)
add comment
update mono-debug: fixes #2350
for #2491 - use a synthetic-focus class which is stronger than real focus, tho must be set manually as class
FIxes #2468: [json] Intellisense Provides Strange Suggestions In Property Value
Cannot distinguish editor in output pane from the other editors (fixes #2368)
[json] enable opening json extension on folder
[json] consume 1.3.1 of language-server & client
Extensions quick open: Can no longer click into installing extension without quick open closing (fixes #2492)
Not using standard landmarks (fixes #2486)
panel: set z-index to initial, not 1
update to latest node-debug
fix typo in debug protocol
better fix for hiding actions in splitview headers
Focus on selected tree element actions barely visible (fixes #2287)
fixes #2418
don't ignore mixin setting
fixes #2458
Weird wording when migrating auto-save setting (fixes #2363)
Improve quick open accessibility (fixes #2393)
Up and down arrows should jump through splitview headers (fixes #2373)
some more focus css tweaks
fix #2400 Check that the user is internet-connected before loading the getting started page
remove tests from node-debug
extensions can become obsolete, so delete them on startup
Further clean up in cursor.test.ts
Clean up cursor.test.ts
suggest: stop calling layout unnecessarily, second attempt
Focus decoration go away on hover (fixes #2379)
suggest: stop calling layout unnecessarily
better product.json
debug: verticaly align breakpoint checkbox on win and linux
tweak api command doc
fixes #2462
splitview: use opacity to hide actions so that it does not break keyboard a11y
fixes #2127
fixes #2269
pull in jrieken.vscode-omnisharp 0.3.1
panel: esc to close
Revert "Markdown/HTML Preview: I can open links within VS Code (fixes #2362)"
oops
fixes #2419
Markdown/HTML Preview: I can open links within VS Code (fixes #2362)
panel: null guard
panel: remove unnused private methods
debug: show changed expressions also in the watch pane
#2169 - map 'warning' kind to file and default again to property
The unsaved file marker (the dot thing) should appear when content in buffer != content on disk (fixes #2357)
sync should only pull if not ahead
use our scrollbars in suggest details
fixes #1969
fix open file git action for out of workspace repo
fixes #2237
use back icon instead of cross
fix doc type
expose EventEmitter in our API, fixes #2359
Tree focus is on the wrong element (fixes #2361)
Activity bar focus indication is too subtle (fixes #2376)
fixes #2281
fix #2339
scheme and path or authoriy are mandated, fixes #2341
Left and right arrow keys seem to do the same thing in the splitview header (fixes #2372)
Expanding splitview with the arrow keys shouldn't focus content (fixes #2371)
Cannot tab out of Output pane with accessibility Mode on (fixes #2366)
<input>s and <select>s should have the same focus style (fixes #2349)
hover - use <div> instead of <p> for paragraphs, fixes #2344
fix #2311
debug: convert a relative path read from package.json main field
vscode.d.ts - deprecate the whole method, not the argument
remove unused
Migrating auto-save settings sometimes produces an incorrect user json (fixes #2326)
Welcome page breaks continuous integration tests in Linux (fixes #2297)
fixing the salsa version check
fix travis
try to fix travis builds
default quality to 'stable'
[json] update proxy on settings update
[json] fix for contributed schemas located inside extensions
fix nls issue in explorer badge
remove update.channel configuration setting
Set tslint.enable=true
Add experimental editor option to toggle between text area state strategies
Avoid merge conflict
Support isIncomplete form completion results
Remove console.log from server.ts
Change WorkbenchContentProvider to a IWorkbenchContribution
Default theme name polish
Remove TextAreaState.extractNewText() and extractMacReplacedText()
:lipstick:
suggest: skip lcsdiff for large datasets
suggest: stricter camel case patterns
import linting
quick open aria label
accessibility provider for quick open
suggest: optimize narrow down
provide better accessible labels for: explorer, working files, changes viewer and search
tree - introduce IAccessibilityProvider to get a label for the selected item in the tree
suggest: fix sorting
remove bogus sorting
:lipstick:
suggest: filter in the model #1923
Revert postinstall experiment
Trying to fix postinstall
Send proxy information
add default styles for scrollbars, focus border, and images, fixes #2143
suggest: limit the lcsdiff algorithm #1923
debug: breakpoint hover information
editor hover: always show hover in gutter margin even if hover is disabled
suggest: cleanup on hide #1923
:lipstick: suggest widget
suggest: use < instead of localeCompare #1923
post install fix
suggest: sort outside of the tree #1923
:lipstick:
api - export CompletionList
debug: show simple hover when complex objects has no children
update node and mono debug
allow to register for the same scheme twice. lifo behaviour
debug - propagate setVisible call from viewlet to views
fixes #2201
aria label for tree
panel: allow panel toggling in no-folder workspace
tree - allow to add aria label as option
output panel: alignment
help nvda to read a label for a tree item
do not set aria-hidden to true unless the element is really hidden
Hide function breakpoints from UI
compositePart.css
api - add vscode.env.language
JSON completion contributors
add debug console support to mono-debug
first cut aria for tree
add CompletionList to tackle #2224
Panel: fix title color
repl: remove lines between elements
tweak Position.toJSON
escape source preview, fixes #2194
wait for 1sec for editors to be synchronized, #2217
add capability 'supportsFunctionBreakpoints' to debug protocol.
update jsdoc for MarkedString
handle links as commands or openables
use Renderer#code
fix a test
synchronously render markdown in hover
first steps in supporting markdown preview
simplify content renderer
move marked.js to common
longer wait time for showTextDoc, #2217
one more attempt, fixes #2217
less outline flashing
make sure disabled buttons have no tabindex
fix feedback button sizing with new label
Do not use Ctrl+Alt+ keybindings
more focus indication tweaks
update mono-debug
Run tests in extensions as commonjs tests
Use 'next' version of language server/client
üíÑdebug adapter test suite
Support %APP_SETTINGS_HOME% in jsonValidation paths
Use 'vscode' URI for vscode package support
Use 'vscode' URI for configuration schema and default doc
Add WorkbenchContentProvider
Use 'vscode' URI for task schema
Use 'vscode' URI for snippet schema
Use 'vscode' URI for launch schema
Use 'vscode' URI for keybinding schema and default doc
jsonValidation contributions for setting schemas
outline: solid
Incorporated feedback from the emoji police, added a dancer icon when salsa is supported
aria: apply more attributes to help screen readers
tweaks for keyboard accessibility
Watch variables now hilight whenever changed.
Changed the words prompting feedback.
Changed the label on SAS button and hashtag.
associate vb script (.vbs) files with VB syntax
debug: null guard
Add app name to the getting started page query string
once again upgrade to latest debug protocol
upgrade to latest debug protocol
Remove linesModel, use new APIs
Correct test fixture path
More Thenables and polish
send schema associations configured by extensions
debug: Capabilities to debugProtocol.d.ts
add missing 'body' to InitializeResponse
debug: report telemtry events to telemetry
debug: repect adapter capabilities
SchemaService: Use Thenable in signatures
debug: viewlet implement focus()
update node-debug
debug: show full source path when it is not available
fix breakpoint widget height on win
somebody probably pushed this console.log by accident
debug: tune repl input box size across platforms
panel: fix sash layout issue when sidebar right
Use different default CompletionItemKind, fixes #2169
panel: share close panel action
debug: improve repl input box size
don't mention locale for now, make env a namespace and move to namespace region, make sure env exists event in case of telemetry failure
fix api test
filter dev artifacts from json/server
adding test to getting started
Add getting started contribution and remove static welcome page
update node-debug
[json] rename server/src/tests to test
[json] add json.configuration
[json] language server & client as extension
[json] don't load legacy JSON mode
fix format
output: do not pop() from registry channels
bring back version to prevent breaking change to the api
oops, fixed testing left over
output: panel set input to active channel upon creation
output: use storage service to store active channel
show error message in tooltip
fixed copyright
Show text in status bar when Salsa is used, check whether the tsserver supports salsa.
npe
npe
output: remove outputPanel reference in output service
output: bundle outputPanel
output: outputPanel will be dipsoed by compositePart
stringEditor: remove defaultWrappingColumn and defaultLineNumbers
panels do not need an order
output: channel is mandatory
Add support to trace the message on request failure
fix issue with focus indication in empty quick open
output: OutputPanel override getId() instead of messing with StringEditor (causes api tests to fail)
colorful default themes: make sure the theme works with 0.10.3
update gulp-atom-electron
more focus indication styles improvements
vscode.d.ts make column argument deprecated
better focus indication in activity bar
output: remove unused css and icons
tree - show outline also in case of focus but no focused item
üíÑ tslint
output: include output.contribution.css
#1835 - onDidChangeTextEditorViewColumn event
:lipstick: tslint
#1835 add viewColumn property to TextEditor, not yet decided if we also need an event to signal changes
output: simpllify output actions
quick open: enable tab to jump into tree and actions
keep sort text, sort by label if no or equal sort text
output: actions in panel
Enable no-unexternalized strings warning in tslint
output: reveal last line on output recieved
output: remove unnecessery create and layout.
tree - do not indicate focus when tree does not have focus
only apply highlights for matches shown in quick open
file search: less work to do
detect system errors and present them better for NLS
Adding a global Env to the extension API
New conditional breakpoint icons.  Equals sign inside.
back to previous focus indication for the tree; show actions for focused tree row
patch version with quality
simplify product.json
fix compile error
output: output actions do not use editor service
output: outputService.getActiveChannel
save errors: details in klammern
same focus indication in tree as elsewhere
remove tree fake row
output: showOutput use panel
crash case wording
allow to provide ViewColumn with 'vscode.previewHtml' command
don't use prefix but filenamePatterns
Add keybinding options for Replace and Replace All (#2004)
Add another text area strategy, simplify textAreaHandler
add object, key, and null as SymbolKind, fixes #2111
output: register output panel
output: remove logEditorInput
debug: use const
panel: text-transform: uppercase
proper handling of namespace and package type in goto symbol handler
panel: fix DOM order and better background color
no outline for repl input
BaseEditor is a Panel
better crash handling: offer to reload window; do not quit entire application
panel: toggle panel is cmd + J
align default icons and group labels in gotoSymbol handler
Ctrl-A - Select All shortcut does not work in preview mode for markdown documents (fixes #2113)
panel: open default panel when no other panel stored
add repl to bundle
fix test failure with dynamic marshalling contributions
move api tests to node-folder
Adding tslint and typescript as a dependency to satisfy the peerDependencies of tslint and gulp-tslint.
when talking to the extension host, only marshall/demarshall but don't stringify/parse, fixes #2088
replace powershell with findstr
panel: extract action contribution scope
panelPart => panel
panel - proper color for "no workspace" case
menu - add a separator
panel: expose actions in menus
set state idle after failed update
repl: hide repl on esc
panel: show horizontal sash even when panel is hidden
panel: make repl the default panel for now
trus 'rejectionHandled' and 'unhandledRejection' events and only warn about unhandled promises after 1 second, fixes #963
quick input: indicate validation error in input field
usa quality as update channel
add prefixes to language extension point, fixes #1851
josn: add errorMessage
panel: address Ben's feedback
implement UX team feedback for auto save
panel: fix issue with minimal panel width
panel: make panel height limit absolute
panel: CtrlCmd + L to toggle panel
panel: fix close panel action
panel: fix cyclic dependency
panel: fix layout positioning bug when sidebar hidden
pick up quality folder during gulp mixin
make sure tab + shift-tab work in iframes; align focus styles in markdown preview
noAutoAccept for snippet suggestions
reduce shallow size of CompletionItem
better keyboard handling for feedback widget
more clever sortText for TypeScript completion items, fixes #1190
make sure tree leaves tab index when collapsing view
css tweaks
keyboard control for button class
debt - remove ISuggestionCompare interface and usage
split view: focus tree when view gets expanded
update node-debug
more polish and linting
Simplify TextAreaHandler
Simplify TextAreaHandler
Simplify interaction model between TextAreaHandler and KeyboardHandler
add html preview sample
tslint
fix sluggish layout behavior
split view: allow access to toolbar in header
panel: style the title
:lipstick: ts lint
Move textAreaHandler to /common/
Reduce usage of /browser/ in textAreaHandler
panel: toggle panel action
split view header keyboard access
panel: properly restore panel if it was active
Move *Range classes to editor/common/
support arrow key navigation in search options
panel: actions in repl
panel: close panel action
Reduce /browser/ usage in textAreaHandler
search: make toggle query details keyboard accessible
Add tests for textAreaState
Move textAreaState to /common/
Remove /browser/ types from textAreaState
debug: toggle repl action
panel: ReplEditorInput is no longer needed.
panel: debug console is a panel
panel: panelPart.css
Mark duplicated code
have outline for input/textarea in one place
also add checkbox for outline
code lens must handle cancellation correctly, fixes #2084
properly transform errors between ext host and main side
:lipstick: tslint
more linting in base
fix issue
do not eat keys for dropdowns
:lipstick: and revealing on the input box when outside viewport, fixes #2078
proper outline for buttons too
properly focus dropdowns in toolbars
cleanup gallery service
several polish fixes
panel: move more code down to compositePart
improve install count style, add title
improve focus handling within actionbar
escape -> blur
fix toolbar to play nice with keyboard focus
fix lint warnings
Towards eliminating browser deps from textAreaState
Extract TextAreaState to its own file
undo change in editor.contribution.ts
cleanup hygiene
Extract TextAreaHandler to its own file, fix issue in input handling
append styles to the front if possible
actionitem: tabindex only for enabled actions
lint actionbar
action bar: restore ability to navigate with arrow keys between items
Extract TextAreaHandler from KeyboardHandler
Introduce TextAreaWrapper
DefineKeybindingLauncherWidget correctly communicates visible state to the editor
scorer: fix issue with wrong use of lastIndex
adjust opacity on focus too
css - do not hide outline in elements with focus
Treat surrogate pairs as one character
node debug: improve source path matching (fixes #1591)
Localization support for main, render and shared processes
panel: renames based on Ben's feedback
inherit some basic styles (colors, font) to the iframe
panel: limit panel height
listen to model changes and iframe reparenting
changed the default rules
add a HtmlPreviewPart
HTML editor input and preview command
make sure progress callback is passed alone, fixes #2039
panel: fix sashes
Simplify renderLine
Add tests for renderLine
Extract `renderLine` to its own file in /common/
Simplify renderLine
Stylistic changes to viewLine
Simplifications in viewLine
Clean-up in viewLine.ts
absolutly position the panel in workbench
a11y: do not eat the Tab key in iframe editors
merge master
ops
panel: add horizontal sash
[theme] remove variable and annotation colors from defaults
:lipstick: refine IResourceEditorContentProvider interface
api - send telemetry for usage of deprecated API
Tune new colors added for dark+ & light+ themes #1943
use scorer.matches() for files and handle wildcards properly
Commands: inconsistent matching (fixes #2031)
make slashes consistent in the shown file path
enable the microsoft rules directory
revert fuzzy scoring for commands
polish
add support for input validation
Integrated tslint
workbench.setPanelPartHidden
layout of panel first steps
action item: builder can be null
some linting and import polish
actionbar: no tabindex if no action
add panel part to workbench
update to debugprotocol 1.3.0
panelPart
Clean-up editor configuration
wip
fix regression with command args
panelService
introduce panel
update viewlet title
finalize
get rid of IViewletRegistry
expose matchOnDetail in API
make detail a highlight label, control matching via flag
fix fuzzy matching for commands handler
remove unused variable
detail all the way
debt - drop support for URL preview
debt - push down iframe editor actions to workbench/browser
debt - merge iframeeditorinput with derivededitorinput
debt - towards no derived input
debt - archive html iframe editor input
[themes] variable type not colored as type
Changed the view slightly. Replaced version with date since last update, and replaced install count with version in UI.
panel: introduce CompositePart so the logic from sidebarPart can be reused
work around travis-extension bug
update node-debug
fix #1988
add documentdb dependency
Add fuzzy search to commands in palette (fixes #1964)
push down compare by score
reuse meta-property for text below label & desc
api changes
quickopen - prep for meta reuse
enable fuzzy matching for file packer by default
support octicon in highlighted label
Add edit stack element before and after accepting a completion
bump version to 0.10.7
only report virtual document as unreferenced, fixes #1986
panel: import linting
panel: CompositeRegistry
panel: CompositeDescriptor
debug: make sure to send a breakpoints request when all bps have been removed
debug: wait for sendBreakpoint response before sending sendExceptionBreakpoints for backwards compatibility with adapters
use strictSSL on windows update download call
also use strictSSL on call to download extensions
move up octicon logic so that it can be reused in quick open
panel: move code from viewlet to composite. ViewletEvent -> CompositeEvent
no DOM in commen
debug: make sure to send configurationDone only after breakpoints response arrives.
panel: introduce IComposite
debug: do not specially massage some configurations
Clean up contentWidgets.ts
do not rename electron.exe
proposal for knowning when an item in pick quick pick was selected
:lipstick: tslint
:lipstick: fix typo
better focus element for "open recent"
move more inputs from browser => common
Added install count to view.
Pull down install count from marketplace API. Order by install count.
update node-debug
debug: improve simple wording
use VSCODE_ELECTRON_PLATFORM
Migrated autoSaveDelay formatting issues (fixes #1949)
introduce the concept fo ContentProvider to the ResourceEditorInput
debug: show warnings in launch.json for relative paths
debug: dipose breakpoint widget on model changed.
fail test script on error
enable tests
skip integration tests
use auth in proxies
:lipstick: tslint
debug: make hover grow and shrink with the tree
:lipstick: tslint
:lipstick: tslint
styles
virtual doc - support content provider signalling change via onDidChange event
Dark+ theme: fields hard to see #1880
[themes] color field types
:books: jsdoc for the text document content provider
set rejectUnauthorized in regular https requests
add viewlets to View menu
destroy virtual documents/models when not being used anymore
:lipstick: tslint
real fix for devtool focus issue
run proper tests in appveyor
fix weird NPE with calling webContents.isDevToolsFocused
fix test.bat
debug: small css cleanup
[themes] return types coloring
[themes] fix for parameterized types
debug: hover widget is a content widget
alex: add 'overlowingContentWidgets' container
resource input: make sure it can deal with the fact that the underlying editor model gets disposed
bring EditorService change back
update npm-shrinkwrap
move api/common to api/browser
exclude 'weak' from build, update weak.d.ts
[theme] storage.type is used for types
merge with master
Implement configurable cursor style
use weak references to track TextDocument that were given out to consumers
get rid of ITextInput and IFileInput
prepare for weak references - use ExtHostDocumentData with a TextDocument property instead of having just ExtHostDocument
proxy: support false strict ssl without proxy configuration
get rid of untitledEditorService in browser land
markdown: more from browser => common
suggest: renable blur
move more things in files land from browser => common
move outputMode from browser => common
count badge: make it rounder to improve single digit case
refactor ExtHostDocumentModel to ready for node_module consumption
suggest: extra info final polish
Show matches count in find widget
Add missing Counter Styles decriptors to syntax highlight
move inputs/models from workbench browser => common
move proxy helper from workbench => base
inline ScopedService into its only user
move actionRegistry from browser => common
move component from browser => common
Move timing-function to its own restriction‚Ä¶
move storage from browser => common
electron 0.35.6 it is
fix compile errors
Linux: userData path changed due to Electron update (fixes #1871)
Add common @robertpenner timing functions to IntelliSense‚Ä¶
add missing unicode-range to syntax highlight
Add additional descriptions to ranges that are a subset of a script.
Add some useful Unicode Blocks for unicode-range property
Move more find code from /browser/ to /common/
update node-debug
update node-debug
Don't use decorations to navigate to next/prev find match
Add tests for findModel
Split CodeEditorWidget into /common/ and /browser/
Simplify toggle selection find checkbox
debug: css order matters
debug: make repl compact to be more like a real editor
Revert "ATOM_SHELL_INTERNAL_RUN_AS_NODE => ELECTRON_RUN_AS_NODE"
suggest: details keyboard navigation
suggest: mouse accessibility
debug: nls love
debug: clear breakpoint soure raw source reference on debug session end
adopt postinstall script
debug: do not show hover for files other than the focused stack frame
add missing changes to test
suggest: show type label
debug: fix persisting and sending stored internal module data
deubg hover: tune twisite and indentiation
debug hover: set tree heigh dynamically when possible
no closeTextDocument
remove instant progress feedback from ext quickopen
default themes: fixes for csharp
Clean up widgets used in find widget
Clean up Checkbox widget
resource input does not dispose model anymore
debug: align twistie in complex hover
debug hover: enable selection in hover
refine API, add closeTextDocument call
Comments are not colored #1864
better marker
Revert "mark beginning of javascript changes to vscode.d.ts"
use base proxy util for request service too
Make replace not use `decorationIndex`
Minor renames
tree size tuning: center header action icons in split panes
tree size tuning: move monaco count badge in working file view
Clean up find widget logic
Minor cleanup in the find controller
remove merge issue
don't use an editor input
Add what at-rule a descriptor is used for in description‚Ä¶
Add @viewport desctiptors (that are not already CSS properties)
joao: tune the count badge size with regards to the new tree size
joao: tune the git icons with regards to the new tree size
mark beginning of javascript changes to vscode.d.ts
fix typo
fixes #1508
suggest: details
debug: show breakpoint condition in hover
clean up cssrules for comment tokens
suggest: clean deprecated state
debug: breakpoint widget should get dismissed with 'esc'
debug: do not hide breakpoint widget on 'blur'
debug: there can be only one breakpoint widget
[php] prefilter completion proposals based on prefix
remove experimental from label
[theme] rename extension to 'colorful-defaults'
language feature registry should not rely on Date.now, but just counting clock, hopefully fixes #1848
Add most remaining missing CSS value descriptions‚Ä¶
merge with master
proper use of EditorInput and EditorModel
better extension gallery sorting
fix compile error
remove one any use
Update descriptions and values for CSS Lists
Update SVG properties to latest SVG2
Stop strings from spilling onto next line
Add tokens to grammar for environment variables
Add tokens to grammar for parameter/loop variables
Improve Keybinding IO
Add tests for keybindings IO
Improve default keybinding generation; Formatting changes around keybindings code
use resourceEditorInput so that virtual documents can be shown in the editor
fixes #1787
fix missing sort call in language feature registry
debug: send configurationDone once all breakpoints are sent
update debugprotocol to 1.2.1
If Salsa is enabled look for the tsserver also in local node_modules
Add feature flag to support using tsserver for JS files
Change all trees from 24px to 22px
debug: debug hover line height is 18px
add tooltip to extension name
Replace IKeybindingContextRule[] with KbExpr
Add tests for contextMatchesRules and IOSupport.readKeybindingContexts
fix #1812
fix #1814
debug: wrap long string in simple hover
debug: make complex debug hover more compact
[theme] dark & light plus (#1470)
debug: check if characters are full width when wrapping
update node-debug
Update links to new native-keymap repo location
debug: remove Source.fromUri and always try to match source to a source from the active stack trace.
Extract code dealing with native-keymap in its own file
fix missing sort call in language feature registry
store window id in property
first implementation of registerTextDocumentContentProvider api-idea
yay, delete atom-browser.d.ts and atom-renderer.d.ts
:arrow_up_small: move thenable<->promise utility to async
debug: send configurationDone once all breakpoints are sent
adopt remote module
adopt menu and menuitem
adopt browser window and dialog
update debugprotocol to 1.2.1
If Salsa is enabled look for the tsserver also in local node_modules
Add feature flag to support using tsserver for JS files
Change all trees from 24px to 22px
debug: debug hover line height is 18px
add tooltip to extension name
adopt clipboard module
Replace IKeybindingContextRule[] with KbExpr
Add tests for contextMatchesRules and IOSupport.readKeybindingContexts
polish electron.d.ts
fix #1812
fix #1814
debug: wrap long string in simple hover
adopt crash reporter module
adopt screen module
debug: make complex debug hover more compact
adopt shell module
fix ipc: now has event as first arg on renderer side
Add @font-face descriptions
adopt web-frame
adopt auto-updater module
[theme] dark & light plus (#1470)
Some tidy up to border-* descriptions
debug: check if characters are full width when wrapping
Add image restriction to @counter descriptors
adopt electron module for 'app'
update node-debug
Update links to new native-keymap repo location
debug: remove Source.fromUri and always try to match source to a source from the active stack trace.
adop new imports for ipc
Extract code dealing with native-keymap in its own file
Extract isFullWidthCharacter in strings.ts
AutoSave setting is lost (fixes #1762)
TypeError: Cannot read property 'friendlyMessage' of null (fixes #1816)
annotate ipc to use
Add descriptions to CSS Wide Keywords
Use position restriction for "background" as well
Add image restriction
update node-debug
Add 'shape' restriction for basic shapes‚Ä¶
move SendASmile to twitter
Add 'geometry-box' restriction that builds on 'box'
Add 'box' restriction and remove the values from css-scheme
debug: conditiaonl breakpoint focus fix
update node-debug
sketching up some API
avoid using stdout for askpass
submitUrl => submitURL
debug: better handling of raw source objects
loadUrl => loadURL
adopt new options api for browser window
debug: bring colors to debug simple value hover
debug: hover use the tree only for complex variable inspection
debug: move debugHover.css to own file
debug: put a tree inside a hover
debug: do not hide the hover when user clicks or moves over it
debug: refactor hover such that doShow takes an expression
process.noAsar in forked processes
update hygiene script
ATOM_SHELL_INTERNAL_RUN_AS_NODE => ELECTRON_RUN_AS_NODE
filePicker.alternateFileNameMatching: true
search: fix bad callback use
no blank lines in sample code
Can't create a tsconfig.json file anymore (fixes #1785)
update debugprotocol module
Using the notice language provided in the W3C Document License
Update Jade.tmLanguage to version from Dec 1 2015
No Intellisense with package.json #1769
Add CSS Intrinsic Sizing values
Add misc missing descriptions
[json] 'format' missing in meta schema
[json] preloaded meta schema not used for *.schema.json
Update htmlbeautify (version of jsbeautifiy is unchanged)
debug protocol: add attribute 'adapterData' to Source
search: bubble cancellation further down to prevent work
add git askpass window title
remove unused
Update and add new properties for CSS Logical Properties
errors & warnings view must be prepared for no editor, fixes #1783
correct command argument caching for CodeLensProvider, fixes #1698
Update CSS Shapes L2 descriptions
Add descriptions to CSS/FX Motion Path properties
Add CSS/FX Masking, inc. "repeat" reduction
Update CSS/FX Filters L2
Update CSS/FX Filters properties
towards code lens lifecycle, still #1698
:lipstick: trim [ExtHost|MainThread]Commands classes
s/host/hostname/
create dummy commands (and manage them) when code action or code lens commands have argument #1698
don't reuse testing thread service, fixes #1382
:lipstick: use Disposable class
git lib: use iconv to decode buffers
better sync animation
debug: call stack message box shows stopped reason of focused thread
debug: introduce thread.stoppedReason
remove suggest optimization
we are actually on 0.10.6
update with new electron version
use electron 0.35.5
do not prompt to install an already installed extension
OpenAnythingHandler throws errors (fixes #1763)
debug: introduce variable.available to show variable request errors better
remove old test scripts
fix git changes view keyboard navigation
:lipstick: registerApiCommand
scripts/test
debug: do not complain for cwd conversion to absolute path
use win32MutexName
remove unused code
debug: do not send breakpoints before the 'initialized' event
add missing type info
better hint for new auto save setting
rootResources => folderResources
split search resources into roots and files (also fix #1721)
Assign accelerator keys to dialog buttons (fixes #1693)
fix absolute path not showing proper highlights in quick open
some perf improvements to file traversal and fulltext search
fix issue #1519
Update descriptions for CSS inline and add missing baseline-shift
Add descriptions to CSS Grid properties
Add descriptions to CSS Blending properties
Update CSS Text 4 descriptions, inc. -ms- versions
Update flexbox descriptions inc. matching -ms- flexbox
Update value descriptions for CSS Fonts L3
Update value descriptions for CSS Line Grid
Updated values and descriptions for CSS Overflow
Update CSS Page descriptions
Update CSS Position, adding new offset-* properties
Update CSS Regions descriptions
Minor updates to CSS Ruby‚Ä¶
Add missing descriptions to CSS Shapes properties‚Ä¶
Add descriptions to  CSS Size Adjust spec values
Add descriptions to CSS Scroll Snap Points properties.
Remove CSS2.1 Voice appendix properties‚Ä¶
Add descriptions to CSS Speech, and update to latest spec
Update CSS Text L3‚Ä¶
Minor updates to descriptions of CSS Text Decoration
Add missing descriptions to CSS Transforms properties
Update CSS Basic UI propertes‚Ä¶
Add descriptions to CSS Will Change spec values
Update CSS Writing Modes browser support
Add descriptions to CSSOM values, and update to Ed Draft
Minor update to CSS Exclusions descriptions
Update CSS Display properties‚Ä¶
Add descriptors from CSS Counter Styles‚Ä¶
Generate new browsers.js fro last few CSS property updates
Update descriptions for CSS Containment L3
Update descriptions based on CSS Color L4
Update descriptions from CSS Cascade L4
Update descriptions for CSS Break properties
Minor updates to Backgrounds L3 properties
Minor updates to CSS Animations‚Ä¶
Update Flexbox properties to add descriptions to all values
Generate new browsers.js file with Pseudo element updates
Update the WebVTT Psuedo elements
Update vendor prefixed Pseudo Elements‚Ä¶
Update Pseudo Elements from Scoping L1‚Ä¶
Update the rest of Pseudo Elements L4‚Ä¶
Remove/update pseudo elements from old GenCon 3 spec‚Ä¶
Added development instructions to tests README
Expand/update vendor prefixed pseudo classes‚Ä¶
:memo: using a type assertion can silently swallow typo errors
Generate new browsers.js based on recent updates
Update CSS Scoping pseudo classes
Update fullscreen API pseudos
Move Basic UI pseudo elements to Selectors 4‚Ä¶
Update Selectors 4 pseudo classes‚Ä¶
Update Time-dimensional Pseudo-classes‚Ä¶
Add :blank pseudo class
Update info for various webkit scrollbar pseudo classes
Remove pseudo elements from pseudo class ‚Ä¶
Make Psuedo-class descriptions more concise‚Ä¶
disable tests that fail randomly
make search tests agnostic to OS
scorer: reuse hash variable
add search test with unicode and spaces
fix an issue where all inputs with getResource method are mistaken as file input
workaround constructor issue
add more search test cases
delete unused getHttpStatus from errors
auto save: fix race condition with setting a model to auto save or not
Add last missing at-rules that are included in an offical CSS draft
Tidy up prefixed at-rules to match each other
Remove dead at-rules from Intellisense‚Ä¶
fix issue with absolute paths and line/col information in path on windows for quick open
optimize glob.match call - do not use try/catch in function body as it prevents method optimization in V8 - skip over disabled expressions
allow to set breakpoints in .tsx
debug: use source.origin
give user a hint about new auto save setting
debug: use 'condition' instead of 'expression'
debug: more orange for breakpoint widget
change SourceBreakpoint attribute 'expression' to 'condition'
debug: make conditional breakpoints orange for now.
debug: send the breakpoint condition to adapter
debug: timeout workaround to set focus for conditional breakpoint input
debug: clone chosen configuration to avoid conflicts with configuration service caching
rename auto save options to shorter words
Call app.clearRecentDocuments when clearing recent paths
Sanity check file names before writing to disk (fixes #1579)
update node-debug (support for conditional breakpoints)
add support for conditiona breakpoints (see Microsoft/vscode-debugadapter-node#6)
update node-debug (for Microsoft/vscode-node-debug#32)
Synrax highlight prefixes at start of properties
Add drop-shadow function to sntax highlight
Add CSS functions that accept <number> or <percentage> to syntax highlight
Add functions that only accept <angle>s to syntax highlight
Add functions that accept <length> values to syntax highlight
Add functions to CSS syntax highlight that accept only <number>s
Correct naming of extended color keywords in syntax highlight
Add :scope pseudo-class to syntax highlight
Add any-link pseudo-class to syntax highlight
Add fr unit from CSS grid to syntax highlight
Add missing image-rendering property to syntax highlight
Add touch-action (and standard values) to syntax highlight
branch: toggleWordWrap_1b desc: 2nd attempt at replacing leadings spaces with tabs. Looks like vscode adds them by default.
branch: toggleWordWrap_1b desc: correct indentation errors
branch: toggleWordWrap_1a desc:  Add word wrap toggle function. hotkey: Alt-Z
update node-debug (windows offline debugging)
update node-debug (inlined source)
debugProtocol: add attribute "origin" to Source (fix Microsoft/vscode-debugadapter-node#5)
debug: nicer font in breakpoint widget
debug: initial text in breakpoint widget.
naming
add option to auto save on focus change
when auto save is enabled, save all files on shutdown and avoid confirm dialogs
log auto save configuration to telemetry
save all dirty when enabling auto save
debug: plugin breakpoints widget
debug: breakpoints widget
remove the auto save option from the file menu and provide guidance
Add preserveFocus flag to showTextDocument and OutputChannel.show, fixes #1045
first cut introduce new setting to control auto save delay
also remove @Uses from instantiation service
debug: surface conditional breakpoint actions
debt - remove unused @Uses decoration
debt - remove last 'offical' use of IServicesContext
it's ServiceAccessor not ctx, fixes #1599
add highligths to errors and warnings list. implements #1606
debug hover: add a quote to the end of the string if cropped
Disassociate .gn with python language
fix build
When selecting a marker reveal when an editor for it is open, fixes #628
debug: get rid of SimpleActionProvider
debug: browser/ linting
debug common/ lint
debug: lint in node/ and electron-browser
debugService.ts - linting
trying to fix #1382
tslint
fix failing test
honor sort text in suggest view mode, fixes #1403
use same octicon sizes in status bar
put snippets into the first bucket of suggestions, fixes #1190
modify launch.json Zoom back to 100% (fixes #1536)
debt - tslint suggest code
Revert "debug: hide function breakpoints from UI"
debug: show variables changed in red in viewlet.
debt - tslint ftw
tweak search message for no results
inline outputworker
move services helper to common
debt - move all workbench events to common
debug: do not pass source.path when source is in memory.
debt - push down more events to common
debt - move untitlededitorservice to common
Support slashes in Quick open dialog even on Windows (fixes #1487)
Support menu bar visibility toggle also on Linux (fixes #1563)
Update browser support for non-standard webkit properties
Remove duplicative <line-width>'s and make a restriction
debt - fix a layer breaker in explorer
debt - move quick open service to common
workbench api linting
debt: move extHostStatusBar to common
more services cleanup
more tslint of workbench parts
lint workbench services
more linting in workbench
some tslint in platform
some tslinting in base
fix typos in htmlTags.ts angular globalattributes
debt - no code is the best code, remove unsued types and functions
debt - no code is the best code, remove more unsued types and functions
debt - Delete event provider,  #1522
debt - reuse converter code in marshalling
remove usage of EventSource in favour of Event & Emitter (fixes #1522)
debt - add toJSON methods to ext host types
debug: try to send source reference when possible to adapter.
remove unused variable
remove .m setting from C
missing change after rename
fix issue #1532
debug: respect message box size when layouting call stack view
debug: outter container in split view should have a class, not the tree itself.
Add missing invert keyword to ouline property
Move duplicative <line-style> values to a restriction
debt - rename PluginHostXYZ to ExtHostXYZ, do the same for filenames
debt - remove obsolete use of EventSource
debt - use Event over EventSource
Update spec links for CSS text-decoration-* and text-emphasis-*
workaround win10 focus issue
Move duplicative CSS <position> values to a restiction
debt - remove suggest participants
debt - remove validation participants
Opening a path with a space in it from the command line doesn't work correctly (fixes #1498)
colorKeywords should be values, not functions
Caret jumps to start on "Save As" or save new document (fixes #1497)
Add CSS Wide keywords to default declaration value completions.
file picker: tweak to sort prefix matches over non prefix matches
file picker: support for searching workspace relative paths independent from exclude settings
fs - add test to assert UTF 8 BOM is getting removed
Avoid 3x file size memory pressure when resolving file contents (fixes #1117)
Add SVG2 elements to CSS selector auto-complete
Remove 'none' from color keywords. Not valid color.
Remove duplicative color declarations in css-schema
fixes issue #1489
Rename variable and class to be more meaningfull
Implementation of editor.action.insertCursorAsEndOfEachSelectedLine - inspired by issue #950 and pull #961 - the same behaviour of Sublime Text ctrl+shift+l command...
use version 0.1.2 of native-keymap
debt - remove more unused string utils
C++11 keyword "noexcept" added
debug: second click on stop session force kills the server
whoopsey
There should be an option to hide the menu bar. (fixes #945)
debug: improve getFullExpressionName
Revert "debt - remove unused sortedList"
remove unused string utils
debt - remove unused sortedList
debug: introduce arguments to pass to adapter.
Windows: still allow to bring up the menu when in full screen
debt - remove unused trie
debt - remove unused injector
remove filename suggestion
debug: not available should be italic even if selected
Changed code.visualstudio.com hyperlink to HTTPS
fuzzy file picker: favor shorter matches over longer
debug: warning to no longer use relative paths in launch.json.
File picker: bypass exclude rules when picking a full file path (fixes #1445)
dev: restore last active viewlet to speed up dev flow
debug: resolve all values from launch.config.
systemVarialbes replacment: if you can not resolve a value, return the passed value.
debug: put margin-right to the .stack-frame div not the children.
make doc more clear to help out with things like #1248
quickPick ranking gives priority to class name then to file (fixes #1377)
Keyboard shortcut to navigate Working files (fixes #1363)
improve broadcast window detection logic
Windows: Running code in a console after code.bat was run causes issues (fixes #1438)
update hygiene script to ignore cmd and bat
fix an issue with opening files that exceed our file limit
Amend the hint "jsconfig.json-file" to "jsconfig.json file"
Clean up native node modules before shipping
Update ThirdPartyNotices.txt in preparation for 0.10.5
Improve gulp hygiene filters to cover top level files
Include full disclaimer text in W3C Document License
inline windows-mutex license because the repo is not yet public
fix OSS again
Updated TS version number in OSSREADME.json
check in string_scorer license
bump version to 0.10.5
add Omnisharp/CSharp OSSREADME
Revert "add Omnisharp and CSharp entries to global OSSREADME"
add Omnisharp and CSharp entries to global OSSREADME
Can not run decorator sample anymore (fixes #1413)
Revert OSSREADME.json / ThirdPartyNotices.txt changes
debug: breakpoints go back to red.
update test
document.isDirty appears to report false for dirty untitled document (fixes #723)
add OmniSharp as its been moved to a separate repo
fix spaces
update for 0.10.4 release
update leading spaces
fix tabs
fix whitespace
tweaks to OSSREADME meta data, add version and full license text
add licenseDetail for missing C/R statements
fixes #1385
remove turquise for types from light theme (for #1270 )
check extension version existence and semver compatibility
Accelerators in menu do not update btw restarts (fixes #1370)
gray for keyword.operator is inconsistent (for #1270)
Linux: numpad_decimal is "unknown" (fixes #1259)
remove turquise for types from light theme (for #1270 )
[python] strings in dictionary values incorrectly highlighted #1175 - adopt to changes to JSON
[json] should color string values red in light theme #1276
pluginHostMain: ovewriting an extension message should have a source.
[sass] Strings are colored same way as values in dark theme #1283
[json] json.schemas setting has no scheme / code complete #1272
Add MQL4 Interaction media feature values to syntax highlighter
Add @viewport (inc -o-/-ms-) to syntax highlighter
extension service: version in installation path
load latest extension version
delay git sync action disablement
spinning sync action
Update list of valid CSS values for syntax highlighting
Make dark theme more consistent with light theme (less colors)
[css] generate_browser.js doesn't included MIT copyright when generating browsersjs #1221
Duplicate module definitions upon opening LESS or SASS files #1282
fix git widget icon sizes
add tooltips to git actions
whitespace
suggestions: empty frozen state
Prepare for working around Chromium's implementing w3c's DOM Level 3 events Section B.2.4 on Mac
debug: initializing is also an active state for breakpoints.
[css] Word highlight is computed wrong when in CSS comments #1324
update node-debug
ignore vscode-api-tests extension in build
Revert "remove extension node modules"
[json] Bower.json has a authors attibribue but default code complete proposes author #1267
[html] HTML colors angle brackets wrongly in dark theme #1271
[css] at-rules in CSS no longer distinguished from selectors in dark theme #1311
git global actions
Improved error message to fix #872
git service dispose
Render missing key codes in current keyboard layout as errors in keybindings.json
extensions status: improve uninstall action titile
return false from shouldAutoTrigger when word before is just numbers, fixes #1003
remove extension node modules
Add information messages in keybindings.json when the current keyboard layout is not US standard
For now filter LICENSES.chromium.html
extensions status: improve title and text content
extensions: use proper backgroun size for status icon.
debug: null guard if the server crashes before the initialize response.
search.fuzzyFilePicker might not be a good name (fixes #1295)
Remove schemastore folder (unintended)
htmlWorker always needs a range, fix issue #1321
Use same highlighting strategy for fuzzy and full path search (fixes #1293, fixes #1294)
Upgrade to TS 1.7.5
fix in nls'ed string
clarify why a resource can be null in comments
"Zoom Out" does not work as expected if window.zoomLevel > 0 (fixes #1243)
QuickOpen: Cannot read property toLowerCase of null (fixes #1296)
Revert "Linux: Order of confirm buttons is wrong for dirty files (fixes #1297)"
Linux: Order of confirm buttons is wrong for dirty files (fixes #1297)
Also get global extension errors in plugin status.
Cannot close without saving (fixes #1247)
quick open: make sure to cap results from cache too with same strategy
wording
[json] Intellisense missing for jsconfig.json #1246
Use extension status icon provided by Brad. #1123
Remove "this property" and "the x property" from existing CSS property descs
Minor css-scheme fixes
Revert "remove send-a-simle"
fix return types
version bump
[Cancel] buttom should in [Don't Save] buttom's right (fixes #1196)
git publish action
provide more git global actions
PublishAction
Remove moveCursorWhenScrolling for now from stand-up feedback
Simplify keyboardEvent
use native-keymap@0.1.0
[ts] update grammars with latest from TypeScript-TmLanguage (05e623f)
[js] update grammars with latest from TypeScript-TmLanguage (05e623f)
debug: check what server exited before doing onSessionEnd.
fix a bug where the encoding indicator can get lost in the status bar
add more tests
var-> let
add action to maximize active editor and hide sidebar
debug: hide function breakpoints from UI
update node-debug
use vscode-omnisharp v0.3.0
better keybindings for ScrollLine[Up|Down]
Support encoding and lf/crlf from status bar for diff editor (fixes #1195)
git lib get remotes
extensions: add uninstall action when showing extension error.
extensions: move install and uninstall actions to extensionsActions.
Move overwriteBefore/overwriteAfter to ISuggestion #1191 - remove ISuggest.textEdit
Move overwriteBefore/overwriteAfter to ISuggestion
extensions status: respond to feedback from #1123
fix highlighting issue with overlapping ranges
always set signature offsets, fixes #645
[json] refactor intellisense participants to not depend on schema - fix
[python] strings in dictionary values incorrectly highlighted #1175
Enable emmet in jsx, tsx files #732
remove JavaScript source again
remove todo
better font for askpass dialog
render source in front of message
debug: null guard.
fix an npe in quick open
lift wordPathBoundary
fix fuzzy matching when using cache
rewrite fuzzy scoring and matching
add cache for scorer to speed up things
debug: introduce id to session.
debug: null guard.
fix bootstrap baseUrl
Tweaks for PR #1051: simplify view logic, renames, also add scroll page up/down
Adopt new import syntax
Find Widget: move images in images folder
Improvements in Find Widget: Ctrl+H always focuses replace, Ctrl+DownArrow focuses the editor
FindWidget: Do not hard-code keybindings
marker handler rendering, first cut
workaround #1117 by reducing max file size one can open from 100 to 50 MB
remove react
remove react dependency from editor status
drop react dependency from git status bar contribution
debug: support both "win" and "windows" in package.json
add plugin host API for Diagnostics#Source
Update CONTRIBUTING.md
Update CONTRIBUTING.md
Update CONTRIBUTING.md
unused imports et al
Create CONTRIBUTING.md
remove csharp-syntax-only-extension because vscode omnisharp ships that
unused imports and other tslint findings
debug: rawAttach if a attach session is already active disconnect it first.
es6 is the default
[json] refactor intellisense participants to not depend on schema
[json] preload meta-schema (#1148)
IFormattingSupport can be either doc or range formatting support, fixes #1163
missing change, gulp-tsb wtf
make description less verbose
add description to show references command
rename to extHostApiCommands
win32MutexName
use pre-wrap for code in hovers, fixes #842
Recent Folders should not be case sensitive in Windows (fixes #1151)
fix darwin bundle id
Add css properties to css.plist
fix broken package status bar entry
more fuzzy enablement
extract scorer.ts and give OSS attribution
some cleanup
get version 1.0.1 of debugprotocol
[json] move schema associations to extensions
JavaScript: Enable ES6 by Default - This tiny commit enables ES6 support for JavaScript files by default, ensuring that VS Code supports popular JavaScript frameworks and modules out of the box. - Tests pass, behaviour otherwise unchanged.
more command metadata, check args on exthost side
[json] configure built-in schemas for standalone editor
[json] take out preloaded json schemas
jsonSchema contribution point
add _generateCommandsDocumentation-command to print command metadata to console
Make the fuzzy option an option for the file picker only
update node-debug
reduce fuzzy use to file picker
let plugin host commands internally also accept ICommandHandlerDescriptions and have a way to get them all
back to normal sort/matching for commands
scorer - fix issue with prefix scoring
wrap service lib calls with try catch
remove leftover console.log
debug: duplicate contributed attributes should be marked as errors.
debug: no need to disable regular hover from debugService.
debug: 'Toggle Enablement' -> 'Enable/Disable Breakpoint'
add dependency to 'vscode-debugprotocol' npm module
Introduce ICommandMetadata with the option for TypeConstraints
Call extension deactivate(), dispose subscriptions on extension host shutdown
delete flaky test
suggest: bring back frozen
suggest: model.visibleCount
debug: another iteration on breakpoint state in UI.
suggest: final cleanup
[clojure] Block comment is not colored any different #12
[vb] vb dosn't support block comments
filter commands that start with an underscore, make it option in the API
fix some npes
Add fullscreen API pseudos
Update Input Pseudo-classes
Add placeholder pseudo element
Add missing CSS units from css.plist
Add speech media type
Update comments about colours in plist to be closer to truth
Add x and y properties from SVG2
Update writing-mode with values from latest draft
Add or update the various wrap-* properties from CSS Text & Exclusions
Remove hyphenate from word-wrap. Not valid value.
Add Edge to word-break property
Update will-change property‚Äôs browser support
Update white-space property
Update vertical-align to latest spec
Remove descriptor
Update user-select to current spec.
Update Transforms specs to unified transforms rather than transforms-2d
Add transform-box property
Update touch-action property
Update and add missing CSS text properties
fix for #348: use onEnterSupport to better handle indenting around doc block comments
suggest: finally, narrow with refresh
suggest: remove comments
suggest: view state
remove apiCommands call
suggest: cleaned up css styles...
ShowExtensionsStatusAction
Style the extensions status bar
suggest: fix dynamic height
move extensions status bar to the right of build status.
show all extension commands on extension status bar click.
suggest: more telemetry fixes
Revert "add an extensions action in the activity bar"
Revert "global extension action: show all extensions actions."
Revert "add a badge to extensions activity action"
Cmd+O proposes wrong folder (fixes #1098)
cleanup
Respect the fuzzy matching option in quick open and file search
debug: add an invisible element that measures character width for word wrap
debug: enable word-wrap for repl
Add fuzzy flag to comparer and matcher in quick open model
Introduce a new setting to enable fuzzy for pickers
suggest: fix best suggestion focus
fix typing issue
global extension action: show all extensions actions.
suggest: sorter
introduce a main quickopen contribution file
suggest: filter
more unified quick open sorting
suggest: view model
Update text decoration properties
first cut string scorer function based on some simple rules
Update tab-size property. Remove src descriptor
suggest: one step towards view model
Update shapes properties
add addApiCommand call which can be found by a doc tool
Add scroll-behavior from CSSOM and scroll snap point properties
simplify ISuggestEvent
add more tests for filter
Associate .atom with XML
Update ruby-align values
Make region-fragment description more concise
Add the r, rx, and ry properties
Update overflow-wrap browser support
Tidy up outline description
Remove orientation descriptor
Add CSS motion path properties
Add mix-blend-mode property
Remove min and max-zoom descriptors
add max-lines property
Add missing Edge from max-height
Add marker-side property.
Remove hanging as valid value for list-style-position
Add further image types to list-style-image
Add line-snap property
remove none value for line-height. Not a valid value.
Add line-grid property
Remove % from letter-spacing property. Not valid.
Add isolation property
Add initial-letter, initial-letter-align, and initial-letter-wrap
Update image-resolution, image-rendering, and image-orientation
Update hyphenation properties and add unprefixed versions
Update grid-template shorthand and add grid-template-area, -columns, and -rows
Added .rake extension to use ruby syntax
Remove whole host of grid properties from old syntax
Add grid-gap, grid-column-gap, and grid-row-gap properties
Add grid-column-start/-end and grid-row-start/-end properties
Update grid-row and grid-column to latest spec
Remove the old grid-cell property which is no longer in spec
Add grid-auto-flow CSS property
Add grid-auto-columns and grid-auto-rows properties
Add grid-area CSS property
Make font-stretch description more concise
Update font-size-adjust desc to be more concise
Update browser support for font-language-override
Update float spec to one that is more stable.
Remove fit and fit-position as no longer in the spec
Update filter property to cover the standard version
Correct elevation property‚Äôs spec and syntax example
Add dominant-baseline from CSS Line and SVG
Update direction property text and add warning from spec about not using for HTML.
Add the cx and cy SVG2 CSS properties
Add CSS contain property
Add color-profile property
Update color-interpolation-filters spec to Filters L1 rather than SVG
suggest: completion item groups
add a badge to extensions activity action
Do not colorize lines longer than 20k with TextMate (#1001)
suggest: reduce use of RawModel
cleanup filters
suggest: more cleanup
use ~1.7.3
suggest: cleanup
add an extensions action in the activity bar
fix builds
Allow building binary on Linux ARM.
debt - move things from browser to common that are easy to move
Add CSS box-suppress property
Add CSS box-snap property
make test less flaky
Add border-image-transform CSS property
Update background-position-x/-y to spec and add Edge support
Add CSS background-image-transform property
Add CSS background-blend-mode property
map diag #2459 and #2460 to unknown property option, fixes #1041
Add the backdrop-filter CSS property
bugfixing for windows
Replace azimuth spec link with more stable version
Add CSS animation-composition property
refactor excludes to be less error prone
Add alt CSS property
Some cleanup
Add revert keyword to CSS all property from L4 spec
suggest: remove SuggestWidget.setModel
Add alignment-baseline CSS property
Do not let highlights decide on visiblity in result set
Adopt fixed oniguruma on windows 8
suggest: proper events
Update spec links for properties now in CSS Positioning
exclude jspm_packages for perf reasons, tackles #703
Update CSS position property‚Äôs browser support
debug: merge contribution files, they should live in electron-browser.
debug: move debug actions to electron-browser.
Only show cached result if we have highlights
Insert Cursor -> Add Cursor
delete test that will never work in our PH
Do proper matching on cached results too
whitespace
Adopt vscode-textmate@1.0.9
enable another workspace test
Enable caching for path search too & push down highlight method for reuse
issue #527 with optional cursor scroll
Make dirty-indicator a real concept in quick open
Make file results processing simpler
Reuse one sort function for file related quick open results
Enable to search on the full path when parts of the query contain path separators
fix #674
Update z-index to latest spec link
Update zoom property
remove send-a-simle
first cut green integration tests on windows
update node-debug
Ctrl + click on quick open does not work ( fixes #1011)
ITextFileService.save() should trigger more UI updating¬†(fixes #939)
CRLF -> LF
Try to render keybindings with their physical labels
tackle issue #703
don't forget the *
tackle issue #703 - fix an issue with matching **/*.js without using the slower glob lib
Update to TypeScript 1.7.3
Register extensionsStatusbarItem in the statusbar.
Introduce extensionsStatusbarItem
JSON schema: filter duplicated messages
Add jsdoc about provider failure handling, fixes #647
configuration contribution validation
plugins: getPluginsStatus()
don't call resolve details manually but trust the focus event, fixed #35
debt - rename and dead code removal
debt - remove ISuggestion#hightlights
[ruby] Add Gemfile to supported filenames
quick open - better sorting when names are identical
[json] VS Code suggests another property when a property's casing is not correct. #881
update node-debug
debt - no id property on ISuggestion
debt - add ISuggestion.textEdit and fill it in when missing
debt - rename ISuggestions to ISuggestResult
debug: send restart as arg on disconnect.
Add .gn as a python file extension
[php] missing user code auto-complete on 0.10.1 #161
update node-debug
debug: polish breakpoints glyphs.
fix extension debug on windows
[javascript] Bring back ES6 syntax highlighting support #133
debug: remove passing extensionHostData around.
fix broken promise cancel with delayer
better type throttled delayer
debug: also pass the debugServer when doing the rawAttach.
debug: remove debugService.getConfiguration() and polish debugActionItems.
fix uri marshalling issue
stop special serialization of URL
IModel.getAssociatedResource is URI instead of URL
cap visible entries in quick open
quick open: make sure a search is canceled before running the next one
[lua] "goto" missing in Lua syntax highlighting #942
[scss] IntelliSense Suggestions After Semicolon #250
update node-debug
Refactor some variable names
remove the last csharp-o occurrences and make build happy
Implemented feature requested in issue #950
download and bundle vscode-omnisharp during build
move out vscode omnisharp
speed up extension query
[xml] entities are not highlighted  #820
install extension after readme
make vscode a dependency, don't use magic build, discover and fix some issues with the global vscode module
favor const
don't leak a listener
remove unused typings
sorry ben
jsp should not register for XML
[html] punctuation for tags can not be colored by syntax themes #928
[html] Please provide a built-in HTML.tmLanguage file #543
debug: rawAttach should also pass in the source map data.
git pull with rebase
cleanup
don't mention product names, fixes #949
make sure URL can be marshalled to/from in ext host, fixes #952
Revert "workaround: TypeError: Cannot read property '_acceptIsDirty' of undefined #952"
service: add a test for cancellation
workaround: TypeError: Cannot read property '_acceptIsDirty' of undefined #952
broadcast should support target window
Add licenseURL to default product.json pointing to MIT License in repo
Remove "Visual Studio" name from strings
update debug adapters
more URI over URL changes, remove getPath and getRequestUrl from request service
Extension host debugging: change to a model where VS Code triggers reattach (instead of polling)
perf - save an array when asking for language features
debug: do not expose debugSession.attach.
debug: expose debugService.rawAttach.
debug: some configuration attributes are optional.
[html] Please provide a built-in HTML.tmLanguage file #543
[html] Please provide a built-in HTML.tmLanguage file #543
adopt `isTooLargeForHavingAMode` in language feature registry
debt - remove unused ModelLike thing
Copyright noticies for #730 (HTML descriptions)
debug: breakpoints should be blue like the summer sky.
debug: stack frames show breakpoint when overlaping.
use URI in favour of URL
adopt loader error handling
debug: reduce opacity of disabled breakpoints.
debug: show verified with a dark red, otherwise use pale red.
debug: introduce breakpoint.verified to model.
use URI in favour of URL
[shaderlab] Support Shaderlab Highlighting for .cginc (Include files) #867
Quick open filters inconsistently between editor history and file search (fixes #258)
Pattern correction for TS 1.7.3
make quick fix be a command and a score
debug: oops wrong negation.
don't use \ for glob-pattern samples but a magic unicode forward slash character that doesn't break block-comments. fixes #891.
use URI instead of URL when possible 1/n
debug: show error breakpoints in breakpoints tree
Add Edge to supported -ms- prefixed properties
debug: remove breakpoint errors on session end.
Add browser support for object-fit/-position
patch exe file version
Update image-orientation. Supported by FF and add flip value
#723 mark untitled documents as dirty when opened
run runcode task when auto updating
debug: seriously polish debugEditorModelManager.
debug: show breakpoint error glyph.
debug: add breakpoint.error to model
Edge supports text-overflow property
Add Opera to resize property browser support
Edge supports ime-mode unprefixed
icon is no longer a valid property. Remove
Update browser support for font-variant-ligatures
[json] Uncaught TypeError: Cannot read property 'getResolvedSchema' of undefined #668
Add none, [no-]contextual, [no-]discretionary-ligatures to font-variant-ligatures
Add ordinal as valid value of font-variant-numeric property
ordinal no longer valid value for font-variant-position property
Correct browser info for font-features to FF34
Update valid values and browser support for font-variant-east-asian
Trim trailing whitespaces on line with cursor when explicitly saving (fixes #466)
Update browser support for font-variant-caps
Adopt latest loader
Update font-variant-alternates for browser support & non-valid values
Update browser support for font-synthesis
Telemetry: We should log startup times (fixes #707)
fix npe when splitting error from service lib
update comment
fail mocha upon loader fail
Update browser support for font-size-adjust and font-stretch
Update browser support for font-language-override
Update browser support for font-kerning property
Update support for font-feature-setting property
Update valid values for shape-outside CSS property
Update browser support for CSS Shapes
Update browser-support for text-combine-upright. Add -ms- prefix
Clean up text-orientation description
Update browser support for text-orientation property
Update writing-mode for which browsers support unprefixed version
Correct unicode-bidi browser support and spec version number
Update clip-rule to use a real description
Update clip-path to use real description
Update spec and valid values for clip-path
Update 'clip' property‚Äòs spec. Mark as deprecated.
Add recto and verso values for break-before/-after
Move isEmptyElement into a shared file
move the [*-]?break-* and windows/orphans properties to CSS Fragmentation
Update browser support for box-sizing
padding-box is no longer a valid value for box-sizing
Update box-shadow support info for intellisense
Update box-decoration-break intellisense information
Add Edge support to border-radius
Disable rtc and data html tag intellisense due to adoption
Use inline nls.localize for proper string externalizing
Update browser support for background-attachment: local
Syntax Highlighting for Roku's BrightScript Language
add missing copyright
debug: give priority to the later registered debug extension.
debug: remove setBreakpointsForModel and simplify removing breakpoints in model.
debug: remove toggleBreakpoint and setBreakpointLineNumber from debugModel.
debug: change decoration for disabled breakpoints.
update OSS readme for electron update
bring proxy stuff together
dont let mutex be garbage collected
respect configured zoom level in zoom actions
Ensure margin-view-overlays height on render (fixes #841)
cleanup zoomlevel configuration
parameter hint trigger characters are ( and ,  - fixes #758
command: executeFormatOnTypeProvider
initial wip
commands: executeFormatDocumentProvider, executeFormatRangeProvider
[js] TypeError: e.split is not a function #829
mixing extra suggestion support
Add a command line flag to disable loading of extensions (users, dev)
command: executeCodeLensProvider
update more comments around save dialog
disable save dialog extension filtering for now as there are issues
update windows-mutex
debug: expose attach to IRawDebugSession.
set ELECTRON_DEFAULT_ERROR_MODE when running code.bat and crash reporter is not enabled
command: executeCodeLensProvider
command: executeCodeActionProvider
Add Windows Workflow (.xoml) extension.
command: executeCompletionItemProvider
debug: better action enablement with respect to function breakpoints.
update electron to 0.34.5
fix npe in non git workspaces
silence service lib orphans
Markdown preview does not show images with relative file path (fixes #803)
bundle optional dependencies too
TextFileEditorModel tests seldom fail in Appveyor (fixes #766)
[fsharp] update tm grammar (1.4.11)
Remove menu and menuitem from tag list as they aren't widely adopted
Move tag specs back to htmlTags.ts and externalize strings
Consistency in JS/TS light and dark themes (#796, #148)
call CreateMutex whenever Code is running
add windows-mutex optional dependency
update vscode-textmate to 1.0.8
Improvements to the defineKeybindings contrib
remove quick suggest delay upper bound
fix npe
[json] JSON Schema wrong path encoding #789
Remove hardcoded string in favor of constant
Remove dead code in html.ts
Remove svgz from xml extensions
Add more XML extensions
Make xml extension list flat
debug: render action bar for function breakpoints.
debug: remove vertical-align middle for breakpoints.
debug: enable context menu on function breakpoints.
debug: remove all breakpoint removes also function breakpoints.
debug: clearBreakpoints -> removeBreakpoints
debug: render inputbox to enter function breakpoint name.
debug: renameFunctionBreakpoint
editorconfig updates
debug: rename functionBreakpoint.functionName to name
debug: renderRenameBox should be reusable.
debug: render function breakpoints in breakpoints pane.
[json] Don't propose keys that are already existing #662
debug: add function breakpoint actions.
fix calls to reveal (promise)
debug: function breakpoints first steps.
fix npe in context menu service
commands: executeDocumentSymbolProvider
commands: executeSignatureHelpProvider, executeDocumentRenameProvider
[js] Cannot read property 'then' of undefined #664
Remove hc-white theme
fix git services onEditorInputChanged
executeReferenceProvider-command
semicolon
outside workspace title
add utility method for the 80% case, add doc highlights command
first steps in exposing language featues as command. done with: hover, definition, workspace symbols
fade out out of scope git changes
debug: use consolas font for watch expressions input box.
scoped git in dirty diff
update comments
scoped git in git actions
Make colors in dark and light theme more consistent, fix xml (#23), jade (#277)
Improve default linux keybindings for move lines and add cursors
diff - restore ability to diff 2 binary files
on windows, honor comspec env variable when spawning a shell
cleanup
model.getRepositoryRoot
debug: only create SystemVariables if there is a workspace.
Revert "debug: remove taskService creation workaround."
inputs - some cleanup
debug: add breakpoint.condition to model.
readonlyinput/model => resourcinput/model
inputs - get rid of legacy resource editor input and model
input cleanup - extract binary editor model
Extract nls calls
adopt executeCommand returning a promise
Make executeCommand return a promise
don't scare people #693
adjust rejection log message
Add CSS Gradient snippet.
Add copyright to htmlTagSpecifications
Rename TagSpecification to HTMLTagSpecification
Add documentationLabel's for HTML tags
debug: show breakpoint context menu on right click in editor margin.
debug: polish
debug: move debugEditorContribution to own file.
add upper bound for recent paths to save to storage
Maintain File Permissions when Copying Directories/Files on Linux and MacOS (fixes #634)
debug: remove taskService creation workaround.
debug: introduce ConfigurationManager for better code structure.
fix appveyor badge
add repositoryRoot to git.IRawStatus
stop log piping for git service
isolate RawGitServiceWrapper
git lib: isolate exec
cleanup git lib
cleanup gitApp
debug: full expression name test.
Dispose inputBox properly (fixes #656)
debug: more model tests.
debug: move getFullExpressionName to debugModel.
Add a helper widget active in keybinding.json to help with defining keybindings
handle case where process.send fails
fixes #672
don't search for project when no folder has been opened, fixes #649
workspace.rootPath should be undefined when no folder is open, not null. fixes #690
debug: debugSource.test.ts
debug: move debugSource to its own file.
Actually set the maxResults-value when finding files, fixs #697
bump 0.10.3
uri: can not throw an error with a path due to privacy issues.
fix merge issue
fix the build
Quick open widget doesn't acknowledge tree.reveal(...) as a promise
merge with 'master'
debug: replHistory.test
some refactorings
remove old stuff
signature help provider as support
make sure recent list of paths is bounded
uri: improve error message when can not convert to file uri.
completion item provider as support
more changes for "Slow startup / crashes - unusable"
rename provider as support
Slow startup / crashes - unusable (fixes #335)
workspace symbol provider as support
debug: inline extension handler into debug service
extract method to send data to a window
compile before code
formatting edit provider as support
improve hygiene messages
prevent plain npm
window.showQuickPick is not closed when promise is rejected
code action provider as support
run npm install on scripts/code
close picker when promise input errors
place electron in .build/electron
File watcher fails with chinese characters in path (#481)
add ghooks dev dependency
refactor gulp.hygiene for a pre-commit hook
Cannot read property 'word' of null (fixes #648)
debug: adapter tests.
debug: adapter attributes are optional.
set exit code properly from main side
debug: simple view model tests.
debug: move replHistory to common.
simply code
reference provider as support
Running `code .` in a terminal does not get env vars from the terminal if there is any Code window already open (fixes #560)
doc highlight provider as support, also use IModel
Update vscode-textmate to 1.0.7
Update appveyor.yml
Update appveyor.yml
hover provider as support
debug: fix margins in debug call stack
debug: make it to possible to cancel debug environment picker.
better labels for extension quick open contributions
naming
use semver to compare versions
definition provider as support
add environment variable SKIP_INTEGRATION_TESTS
fixes #139 - don't sync large models to extension host
fixes #177
return early from confirmSave when we are in extension development mode
One code lens provider is one code lens support, fixes #360
first commands test (disabled)
api tests - more use of promises in mocha
add tests for the document symbol provider
[json] improve text mate tokenizer, enable as default
better cleanup for api tests
[json] 'JSON with comments' text mate bundle
fix document symbol duplication
move the logic of getOutlineEntries into one place
api tests: allow to run and debug them
use --force when running npm install on Appveyor
fixes #115
api tests: cleanup after test run
Update .travis.yml
fix hygiene
Make sure css is fixed as well
hygiene: emit file at end
travis: split electron and compile tasks
appveyor: split electron and compile tasks
Adopt latest loader
add more meaningful api tests
Update CSS Multi-column Intellisense
Update based on CSS Cascade and Inheritance spec
Add <picture> element to auto-complete and syntax highlight
W3C Fullscreen is discontinued. Link to WHATWG spec
Add rebeccapurple as valid colour in syntax highlight
Add CSS MQ L4 Interaction media features to syntax highlight
Update README.md
update debug adapters
Update README.md
use appveyor
damn these tabs
run gulp hygiene in travis
gulp hygiene
fix whitespace
Goto definition acts too early in some cases (fixes #189)
remove some older migration code
move configuration service into correct execution environment
Missed them typos
bin => bind
remove reference to atom-shell-installer-assets
Typo fixes for src/vs/workbench/parts
polish
Typo fixes for src/vs/workbench/services
[json] add tm grammer, not yet enabled
fix comment
Let shouldAutotriggerSuggestImpl always return true, fixes #179
fixes #144
improve initial progress reporting for slow loading file shares
fix issue with getting path label from root drive
Webdav network drive not work (fixes #218)
validate BUILD_SOURCEVERSION
debug: polish initial launch.json generation.
debug: show debug environment picker in more situations.
fix broken style, one file, one style
try to enable integration tests for linux
tests: make sure to set proper exit codes
try to enable display for linux
run integration tests as part of build
allow to run plugin tests through the command line
restore vscode:prepublish to compile tests properly
vscode api tests: add back publisher
npm install vscode-api-tests and some polish
Add Edge to a number of CSS features
Update CSS Transforms browser support and valid values
Add enum to animation-iteration-count and animation-name
Update browser support for CSS Animations
Add "Show Extensions Updates" command
debug: wait for preLaunchTask to finish if it is not watching.
line endings.
copyrights: use nicer gulp globing
Copyright polish.
debugService: minor polish
update node-debug
add the "Sync" command to the command palette as global command
Dispose all models in tests
debug: in case of an error when retrieving scopes return [].
add comment
DiffEditorInput => BaseDiffEditorInput
Updating cursor blink on config change
OS X Travis CI
Implementing configurable cursor blinking
travis: just linux for now
run tests in linux and osx
Javascript mode instantiated twice, issue #34
Format changes
Enable source maps for TS extension
fix whitespace
run tests in Electron
move timeout into test
Markdown syntax broken since last update #273
Bad Default/Regression: C++ .h headers colored as C files #145
Undoing some changes
file tests: set timeout in suits
Tabs don't update column counter (fixes #103)
Update CSS flex box property values
Correcting documentation to better match JSDoc's style.
Update browser support for CSS Flexbox
Add Edge support info for Pseudo classes and elements
window.openInNewWindow => window.openFilesInNewWindow
mkdirp: don't try to create fs roots
Update browser support info for @supports, @keyframes
Add Edge support info to CSS At-rules
Add Edge to list of browsers
increase test timeout
Remove no longer valid elements from emptyElements list
Add set for valid wrap values
Add yes/no set and assign to global translate attribute
Add valid shape and scope values
Add additional set for <form method> inc. dialog value
Set valid input mode values for the inputmode attribute
Add valid encoding type values for enctype/formenctype attributes
Set draggable attribute to a true/false bool, and remove t/f/a set
Add auto to valid dir attribute values
Add <menuitem> el to HTML autocomplete & update <menu>
Add valid values for the preload attribute for audio/video elements
Add valid values to track kind attribute for auto-complete
Remove no longer valid pubdate attribute from time element
Add sorted attribute to <th> element auto-complete
Add minlength attribute to <textarea> auto-complete
Add <template> element
Add valid <table> attributes to HTML auto-complete
Remove media attribute from <source> element
Add autocomplete attribute to <select> auto-complete
Add nonce attribute to <script> and <style> elements
Add the various HTML ruby attributes to auto-complete
Add type attribute to <ol> and specify valid values
Add HTML crossorigin attribute to <link> and <script> elements
Update valid input attributes for auto-complete
Update valid iframe attributes for auto-complete
Remove option attribute from HTML <datalist> element
Update valid HTML body attributes
Update valid HTML <a> & <area> attributes. + download, - media
Remove global inert attribute from HTML auto-complete
Remove <eventsource> (Server-Sent Events) from syntax highlight
Add missing HTML5.1 elements to CSS syntax highlight and Intellisense
Add missing HTML5 elements to CSS syntax highlighting
Remove obsolete HTML elements from CSS syntax highlight
Add <main> to valid HTML IntelliSense elements
Changes based in @aeschli comments
PHP autocompletion: $_GET completes into $$_GET #86
support to release "shift" key in quick open (fixes #265)
dont use lambda in this case
less hectic quick open visibility changes
trace the stack when process.exit is called from an extension
OutputChannel.hide throws error (fix #377)
try workaround for not being able to focus window on win & linux
improve settings parsing readability
fix message list ordering (fixes #279)
prevent an extension from process.exit() (fixes #411)
Add tests for ARIA 1.1 attribute auto-complete
Add ARIA 1.1 attributes to global attributes list
Add ARIA landmark role values to auto-complete
Add ARIA document structure role values to auto-complete
Add the composite widgets aria role values to auto-complete
Add ARIA widget role values to auto-complete
remove unnecessary files
update debug adapters
Visual Studio Code is no longer responding #160
.editorconfig added
Update vscode extensions to package.json schema #41
gulp: beware of es.merge and empty arrays
cpp: 'value' keywork removed.
Function calls not highlighted in JS
Included Edge UserAgent
- Included some Clojure Extensions - Included one Powershell Extension - Included some Csharp Keywords - Reorganization of the language.main.js define call (To match the folders order)
status bar: set cursor to default for non clickable entries
Add HTML aria attribute autocomplete
quiet, error number 9
report unexpected errors in tests
dont forget to reset global error handler
remove log messages from tests
Open a folder via navigation bar doesn't work in 0.10.0 (fixes #234)
debug: send a context with the evaluate request to the adapter.
Update css <length> units used by CSS auto-complete #290
use dot reporter
Add 'turn' to <angle> and 'dppx' to <resolution> data types for CSS auto-complete #294
Update browsers.js to reflect changes in #304
add tests
call InputBox.layout from the outside
remove npm-install-plugin:* tasks
keep search more stable while results are coming in
remove unnecessary dependencies
update debug adapters
debug: trim down IRawDebugSession
support to work with search results even when search was canceled
Keep the fix small, keep ext host side command
Better editor build tasks
support console.log string substitution in PH
use auth tokens for downloading omnisharp builds from gh
a little less use of mime in file editor model and input
add tests for outline
debug: remove unnecessery checks when revealing editors..
Middle clicking a working file in the working file list should close it and remove it from working files (fixes #56)
Diff editor: restore the action to quickly toggle between inline and normal diff (fixes #175)
add 'context' attribute to evaluate request. Partial fix for #252.
False positive in file path pattern matching in Output Channel (fixes #232)
Have a support for each provider on the ext host side, starting with outline and code lens
debug: move debug service into electron-browser
add comment on the new update.channel setting
allow to set the update channel from settings
Proxy support for extensions (fix #69)
extract reusable userSettings library
make sure to console.error startup errors
quieter build
quiet build
VSCODE_BUILD_QUIET
fix layer breakers
Enable regex's ^, $ and ^$ to be matched in file dialog
Use default cursor for .git-statusbar-item
Add description to @viewport CSS at-rule
Remove Mozilla/WebKit vendor prefixed @viewport CSS at-rules
Update to spec link for @viewport CSS at-rule
Add @counter-style CSS at-rule to auto-complete
Add Chrome 43 and Safari 9 to CSS @keyframes support list
Add Safari 9 to CSS @supports support list
Generate different header in editor build
Add more extensions to built-in PowerShell support
unify file/folder picker path under one storage key
Add build status
use github token in travis ci builds
Travis CI build
fix issue when extension tests fail to execute and no output message is shown
hide message bar when quick open shows
debug: do not automatically open the explorer when session ends.
debug: rename some rawDebugSession methods to align with debug protocol specification.
picker: make sure it calls the onShow() event also on first open
quick open: remove unused "checked" option and related CSS
extension tests: disable workbench storage in this case
‚û° gulpfiles into build
less ascii art for dirty file prompt
distro: extract env.product.win32AppUserModelId
debug: remove request:'attach' missing warning.
Small changes to improve document readabilty
vscode "--extensionHomePath" option does not work when used with the vscode proxy (fixes #37)
Leading whitespace fixes
reverting proxy support for extensions, for now
express node version dependency, tackles #142
fix build
Flash between opening of workspaces, reload #8
Center screenshot in README
proxy support for extensions
introduce forceActive flag as option for opening editors (fixes #182)
fix NPE when running "Startup Performance" command
support null, undefined and errors in extension output (fixes #9)
fix for #39
use Gruntfile.js instead of gruntfile.js
fix grunt task detector not considering description line wraps
Changed the adapters separation from "," to "and"
Add text/ng-template to the HTML mime types to enable HTML highlighting/help in Angular templates with in <script> blocks
fix #67
choice of tool --> type of tool
Update README.md
Update README.md
Update README.md
Delay handling of mouse events until view has finished painting
Remove rounded corners for selection in Edge
add image to readme
Typo
jsdoc, clarify CompletionItem.textEdit
some small fixes
more extension API doc for document selector score
add jsdoc for extensions API namespace
Small tweaks
fix missing api links
Update ThirdPartyNotices.txt
link to coding guidelines
add the last params
Refactor README.md
Some fixes in the API doc
JSDoc for vscode.d.ts
fix @see tag in API doc
documentation for extensions API
more API doc for extensions API
better icons for OSS distro
More jsdoc for extension API
More jsdoc for extension API
fix readme for selfhost debugging
some extension namespace doc.
Update README.md
Better title
Standardize naming
Update README.md
Update README.md
real fix for: gulp-symdest does not preserve links on electron #2
more jsdoc
formatting
formatting of debugging section
README.md: add debugging section.
fix README gallery link in windows
launch.json: add 'Attach to VSCode' configuration.
JSDoc improvements for vscode.d.ts
fix reference to resources
fixes #28
fix copyright statements in minified build
fix osx file limit issue in tests
fix instructions on how to run tests
Python: Block comment is three single quotes and not two #18
C# bracket insertion, indentation not working #4
remove hard wrap
eliminate hard wrapping (and rely on editor word wrapping instead)
fix up test and debug sections
Minor tweaks to README
Minor editoing of test README.md
update README with development workflow
add OSS icon set
initial README file
just merge in any top level resource
mixin repo instead of url
Add source.regexp.python rules
update vscode-textmate
jsdoc vscode.d.ts
fix welcomePage lookup
use relative path to gulp instead of installed
jsdoc fot vscode.d.ts
remove commented extension reference
gulp-symdest does not preserve links on electron (fixes #2)
Add reference to DefinitelyTyped, updated the TypeScript version, and generate a new thirdpartynotices.txt
Hello Code
