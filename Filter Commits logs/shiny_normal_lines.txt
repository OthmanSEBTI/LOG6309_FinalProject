Use getBoundingClientRect() over offsetHeight/offsetWidth to get more precise sizing (#3720)
Add fill arguments to plotOutput(), imageOutput(), and uiOutput() (#3715)
Bump version to v1.7.3.9000
Squelch R CMD check message
Use v1.7.3 instead
Remove Remotes, add NEWS item
Reverting selectize logic change from #3644 (#3716)
Add fontawesome remote
Skip template tests even if shinytest2 is available. Install shinytest2 from CRAN
Update template code to work with latest shinytest2
Remove types-jquery.patch (#3710)
`yarn build` (GitHub Actions)
Use correct type for messages
Disable eslint rules only within scope
Remove redundant setting
Remove makeBlob
Update eslint
Upgrade esbuild and typescript
Upgrade to yarn 3.2.3
Enable TypeScript `strict` mode (#3644)
Update jQuery-UI to 1.13.2 (#3697)
Sync package version (GitHub Actions)
`yarn build` (GitHub Actions)
Add link to Rook spec from docs
Bump version to 1.7.2.9000
`devtools::document()` (GitHub Actions)
Use inherits() instead of if(class(x)==y)
Remove URL because CRAN doesn't like it
Remove broken link
Check in most recent revdep results
Rebuild shiny.js
Code and comment cleanup
Update srcts/src/time/throttle.ts
Updated NEWS.md
Don't kill the session when a debounced/throttled reactive expr errors (#3624)
Use `ragg::agg_png` over `Cairo::CairoPNG` if available (#3654)
Sync package version (GitHub Actions)
`yarn build` (GitHub Actions)
`devtools::document()` (GitHub Actions)
Groom NEWS.md
Update URLs
Start v1.7.2 release candidate
Follow up to #3385: warn instead of message; update unit tests to reflect some parameters can now succeed when others fail (#3652)
Update the `_inputs_` and `_values_` regular expr to support a trailing `=` (#3648)
Enable `fileInput` to set the `capture` attribute (#3481)
Update NEWS
fix bookmarking bug #2297: don't break all bookmarking system if some URL params don't parse correctly (#3385)
Update NEWS
Corrected for stricter length checking in R 4.2.0 (#3625)
Make mathjax configurable (#3650)
Spelling `defintion` -> `definition` (#3649)
insertUI() now supports execution of <script> (#3630)
Use external, not internal, sourcemaps for extras
Add ability for autoreload ws to be at a custom URL
devmode should activate autoreload (#3620)
Spelling (#3618)
Update `shinyAppTemplate()` content to use `{shinytest2}` (#3599)
Update internal docs: `reexports.yml` -> `reexports.json` (#3522)
Use HEAD for ref instead of master in runGitHub() (#3564)
Bump dev version (#3588)
Opt-in to `C` collate order in test snapshots (#3515)
Trigger input event even when there is no input binding (#3584)
Update stack trace test expectations (#3550)
Update runapp.R
Pass args from knit_print.shiny.render.function() down to it's use of the knit_print() generic (#3569)
Update NEWS
put the extension class on the left.
Handle chained errors (#3567)
Cache the reactlog version found. Remove `mustWork` argument to `system_file()`. (#3554)
master -> main; use shiny-workflows (#3535)
Remove old unused JS files (#3547)
Some UI-related speed improvements (#3541)
Editor configuration improvements
Use all_files=FALSE for html dependencies
Remove â€œfile =â€œ
Rebuild JS files
Use .map() and .forEeach() instead of for loops
Rename HtmlDepSimplified to HtmlDepNormalized
Extract jquery-ui dependency into function
Streamline code for adding scripts and attachments
Use array of objects to represent meta tags
Update VSCode editor settings
Update NEWS
Use htmlDependencies with â€˜src=fileâ€™ for showcase mode
Minor cleanups
Extract restyle code into separate code path
Add simplifyHtmlDependency() function
Make dep.src.href field optional
Bump version to 1.7.1.9001
Allow array of attributes for stylesheets
Serve HTML dependencies from dynamic paths
Bump version to 1.7.1.9000
Bump version to 1.7.1
Update NEWS
Use esbuild option preserveSymlinks
add news item for #3512
Re-arrange conditions for testthat 1.0.0 compatibility (#3512)
Bump version to 1.7.0.9000
yarn build (GitHub Actions)
sync package version (GitHub Actions)
Document (GitHub Actions)
Update reexports
Address check NOTE: Undeclared package â€˜htmlwidgetsâ€™ in Rd xrefs
simplify gha
bump version
Update GHA workflows to use latest versions (#3492)
Remove `rlang` remote (#3487)
Adjust app port tests to use random port values (#3488)
Only ignore node_modules at top level
yarn build (GitHub Actions)
yarn lint (GitHub Actions)
Update NEWS
Remove `console.log("Shiny version: ", Shiny.version)` statement (#3480)
update news
Add test for `inject()`ed quosures when extracting the `cacheHint` (#3476)
`exprToFunction()` and `installExprFunction()` support quosures (#3472)
Move user documentation up to the top of Readme (#3464)
Update `esbuild-plugin-sass` to latest version (#3463)
Interpret NULL discrete limits as NA, fixes #2666 (#2668)
Add `sustainEnvAndQuoted()`. Remove `getQuosure()` (#3468)
Update NEWS
Update NEWS
Update pkgdown.yml
Update documentation
Add quosure tests for custom render functions
Update comment
Export getQuosure() and add internal getQuosure3()
Rename get_quosure to getQuosure
Modify exprToFunction to accept quosures
Move expression/quosure functions to utils-lang.R
Add note about R version support
TypeScript: Globally declare `Shiny` variable, `window.Shiny` variable, and `Shiny` type (#3457)
docs: update runapp port parameter docs, and add three more tcp ports to be blocked
Use random inline styles to ensure transitionend fires everytime (#3452)
Close #3446: get removeModel() working with Bootstrap 4 (#3447)
roxygenize
Update utils.R example to validate() (#2809)
Revert "Set selectize dropdownParent to "body" to prevent clipping" (#3450)
Leverage more `eslint` rules (#3439)
TypeScript other distributed JS/CSS files (#3436)
Replace dev versions with `-alpha` versions for JS code (#3435)
Change from .nav-item to .dropdown-item when inserting inside .dropdown-menu (#3434)
update news for breaking insertTab() change (#3433)
`./package.json` updates to make TS Types package cleaner to install (#3430)
Match casing for plot alt text `"Plot object"` (#3432)
insertTab(position = "after") by default (#3431)
Various cleanup (#3428)
Move `./srcts` configs to top level to support types installation from GitHub (#3425)
insertTab() now handles position correctly when target is NULL (#3404)
yarn add node-gyp; yarn build (#3424)
Export TypeScript type definitions to local folder (#3418)
TypeScript: Remove `any` types / improve type definitions (#3414)
Better color constrasting in sliderInput() (#3366)
Use ggplot2::get_alt_text() if available to provide better default alt text (#3398)
Set selectize dropdownParent to "body" to prevent clipping
Distribute TypeScript code into separate files (#3317)
Follow up to #3410: bump version and update news (#3411)
Bootstrap 5 support (#3410)
Use bslib's new nav() api to implement tabPanel() and friends (#3388)
Install Cairo macOS devel brew dependency (#3408)
Remove Font Awesome 5 message about the `level-up` icon (#3407)
Correctly render script tags defined as list() objects (#3395)
tagify() dynamic UI before attempting to write the tags (#3392)
Modify `icon()` function to call `fontawesome::fa_i()` for equivalent functionality (#3302)
Follow up to #3372: fix oversight in refactor (#3387)
Revert "Do not double pull within rituals"
Do not double pull within rituals
Remove deprecated code and parameters (#3137)
Prettify TS
Rebuild JS files
Add important flag
Update comments
Add sendImageSize2
Use removeSheet()
Make more CSS properties !important
Add note about synchronous behavior in IE
Rebuild JS files
Simplify IE CSS handling
New strategy for sending information when CSS loads
Make sure dev version of rlang is available (#3382)
Reduce complexity and 'black-boxed' nature of tab panel logic (#3372)
Install dev version of rlang (#3379)
Comment about the hoisting
Use sendImageSize instead of Shiny.bindAll to resend CSS info
Use tab instead of tooltip constructor to check Bootstrap version (#3377)
Remove ... args from function
Add news item
Export `register_devmode_option()` (#3364)
Add ORCID info (#3363)
Make external libs builder leveraging esbuild (#3357)
Update
Update R/bootstrap.R
Update R/bootstrap.R
Close #3299: bootstrapLib() should always call setCurrentTheme() when shiny is running (#3300)
Make ensureTabsetHasVisibleTab() is aware of BS4+ markup (#3349)
Allow trailing commas in more places (#3328)
update news
Various improvements to tab panels (#3315)
Specify both href and file
Close #3316: bootstrapPage() now includes jQuery so static rendering works as expected
remove logs
Poll every 0.1sec for 10secs
request on next tick
try using requestAnimationFrame
Try sending multiple times
Try not debouncing
Add debug statements
When refreshing a stylesheet, schedule a report CSS values once the sheet is loaded
jquery@3.6.0 is available. @types/jquery@3.6.0 is not ready yet.
Install `jquery` and `@types/jquery` in `./srcts`
Remove old @param theme roxygen documentation and rely in @inheritParams bootstrapPage (#3312)
Automatically record jQuery version
Update to jQuery 3.6.0
ðŸ¤¦
Initialize TypeScript (#3296)
Add isTruthy to pkgdown
Add note about auto-generated code
Update NEWS
Update to Font-Awesome 5.15.2
Update font-awesome update script
Tweaks to validate(), req(), and isTruthy() docs
Create restoreCtxStack in .onLoad()
Update NEWS
Replace queues with fastqueue
Use fastmap::faststack() and remove Stack
Typo (#3283)
Adjust test time
De-functionize tests
Recommend using bindEvent() (#3277)
Use testthat 3e (#3274)
Display devmode in docs (#3275)
Add info about render functions with bindCache
Update bootstrap-accessibility plugin (#3259)
Remove deprecated arguments to sliderInput
Tweak errors when reading from outputs
Drop tableOutput from ref index
Doc fixes
Improve table output docs
Update NEWS
Use rlang::hash instead of digest
yarn build (GitHub Actions)
Clarify supported types in sliderRange()
Bump version to 1.6.0.9000
Run accessiblity plugin JS when DOM is loaded (via defer attribute) aâ€¦ (#3256)
Documentation improvements for v1.6 (#3255)
Use url checker (#3249)
Reduce promises version to 1.1.0 and safeguard visibility test (#3252)
Use checkJsCurrent.sh to rebuild JS
Close #3244: sliderInput()'s handles are now always round
Start shiny v1.6 release candidate
Don't change the return value of bootstrapPage() if bslib isn't relevant (#3236)
Drop GHA pr-commands and add GHA Rituals. Use pak to install (#3230)
bindCache() docs typos (#3232)
Follow up to #3228. shinyAppDir() now throws a classed condition when appDir is not a directory (#3229)
shinyAppDir() now throws an exception with a special class if no app.R/server.R file is found. (#3228)
Closes #223: Add selectize patch file to capture changes from #3217 (#3227)
Check for empty list
Rebuild JS file
Simplify handling of empty options
Apply patches
Add patch for not triggering click on selectize
Update selectize-plugin-a11y comments
Add webdriver to remotes
Rebuild JS files
yarn upgrade
bump dev version to 1.5.0.9006 (#3221)
Cache packages on Windows
Add `devmode()` features (#3174)
Make sure setCurrentTheme() doesn't try and change bootstrap versions (#3210)
Use rlang from CRAN
Put pre-Chromium Edge in the same category as IE (#3220)
Close #3215, selectize's active item fg color now uses bslib's color-contrast() for more generalized contrasting (#3217)
Update `private$currentThemeDependency` label to be `Theme Counter` (#3206)
Revert "Make .shiny-text-output more aware of Bootstrap's pre styles (#3203)" (#3209)
fix typo in docs (#3204)
typos in documentation (#3205)
Resend CSS styles when relevant element(s) mutate. (#3198)
Make .shiny-text-output more aware of Bootstrap's pre styles (#3203)
Update NEWS
Rebuild JS files
Set min/max date before setting value. Closes #3197
Respect shiny.minified for bootstrap-datepicker.js
Skip POSIXlt slider tests on R3.6 and below
Update NEWS
validate_session_object: Also work with modules
All session parameters from the update* functions now default to `getDefaultReactiveDomain()` (#3195)
Respect reactiveConsole() in new errors (#3193)
Add NEWS notes for #3042 and #3038 (#3191)
Add a warning message when value < min | value > max in sliderInput (#3194)
Clear selected date if not within min/max range (#3188)
Add 'auto' brush fill and stroke (#2864)
getCurrentOutputInfo() bugfix (#3189)
radioButtons() and checkboxGroup() accessibility (#3187)
Cleaner logic for conditional CSS styles (#2671)
Experiment with error message (#3007)
Build JS files
Better setting of bootstrap-datepicker start/end dates, closes #2703
yarn build
Also default to aria-live='polite' when input bindings are about to receiveMessage
When binding shiny outputs, have the 'aria-live' attribute default to 'polite', closes #2987
Add label to private$currentThemeDependency
Properly attach jqueryui dependency when drag_drop plugin is used (#3185)
Create session$currentThemeDependency only when needed (#3182)
Do correct assignment of resizeObserverCreated (#3177)
getCurrentOutputInfo(): only create reactives when needed (#3180)
Add label to reactive
Set resolve = FALSE when getting thematic's bg option (#3178)
getCurrentOutputInfo(): only create reactives when needed
Remove old note about Bootstrap 3
Remove outdated comments
Add cacheWriteHook and cacheReadHook (#3173)
Replace %OR% with %||% from rlang (#3172)
Improve color contrasting in date and slider input (#3167)
Wait longer to disable old stylesheets (#3168)
shinyAppTemplate()'s shinytest tests should be calling expect_pass() (#2943)
Make sure dateInput() warns on empty string (#3165)
Replace `renderCachedPlot()` code with `bindCache()` (#3163)
Document
bindEvent(): alter observers in place and fix labels
Use `enquos0`, `inject`, and `zap_srcref` from rlang (#3157)
Add reactive `session$getCurrentTheme()` (#3116)
require newest bslib version, follow up to #3155 (#3159)
Always ship selectize HTML dependencies with name='selectize', closes #3125 (#3155)
Add render function quosure tests
bindCache: accept cache arg when used with renderPlot
bindCache: add documentation about renderPlot
Minor bindCache doc tweaks (#3156)
More bindCache documentation edits
Update bindEvent documentation
Update bindCache documentation
Test visibility with latest `promises` (#3151)
Add note about cleanup
Better cacheHint for renderPlot
Hoist attributes when wrapping render functions
Cleaner way to pass in fitDims to renderPlot function
Use enquos0
bindCache.shiny.renderPlot: Draw plot at size specified by sizePolicy()
First implementation of bindCache() for renderPlot()
Convert ... to quosures
Round pixelratio to two decimals (#3147)
Destroy correct object. Closes #3145
Rename blast() to inject()
Add additional quosure tests
Use brackets
Update bindCache documentation
Add cache hint tests
Update examples
added ... support to icon(); fixes #3140 (#3143)
reactivePoll: store environment
Add get_quosure function
Don't unwrap quosures for key or event expressions
Add tests for quosures in reactive() and observe()
Bump rlang version dependency
Reactive functions don't unwrap quosures automatically
Donâ€™t automatically unwrap quosures
Safer method for remove_source
pre.shiny-text-output shouldn't set border-radius by default (#3142)
Rebuild shiny.js
Remove source refs for nested functions
Bump version to 1.5.0.9005
Temporarily disable deprecatedEnvQuotedMessage
Documentation fixes
Use is_false function
bindCache documentation updates
Rename withCache and withEvent to bindCache and  bindEvent
Update withEvent help
Add tests for ignoreNULL
withEvent: invoke render function with ...
Add cache hint to reactive expressions
Resend CSS info (via bindAll) when a restyle (i.e., setCurrentTheme()) happens, closes #3119 (#3134)
Export quoToFunction
Make renderCachedPlot accept quosures
Use cacheHint
Include user expression in cache key for render functions
Allow render functions to accept quosures
Have slider's fg/bg defaults fallback to body colors if input colors are transparent, closes #3130 (#3131)
Remove unused function
rename bootstraplib package to bslib (#3132)
Add withEvent observer tests
Mark some render functions as uncacheable
Document withCache
Add methods for withEvent and withCache
Remove cachedReactive()
Convert observeEvent and eventReactive to use withEvent
Streamline reactive() and observe()
Add withEvent.Observer
Store original function as attribute on wrapper
Add functions for extracting parts out of reactive expressions
Add withCache and withEvent functions
Convert reactive() and observe() to accept quosures
Remove extra argument
Use cache objects from cachem package (#3118)
More code review changes
Move key after ...
Increase size of diskCache
Code review feedback
Add remove_srcref for R<3.6
cachedReactive: add tests for quosures
Update cachedReactive docs about cache collisions
Rename args for cachedReactive
Bump recursion depth to 20
Handle shinyOptions in nested modules
Register all theme dependencies to be processes since _new_ HTML dependencies may be added to the theme object (#3115)
Check for NAMESPACE file
Update NEWS
Warn when running app in a R package directory
Rebuild shiny.min.css
pre.shiny-text-output should have a border-radius set by default (#3111)
Get session$setCurrentTheme() working on IE11 & improve timing of disabling old stylesheets (#3097)
Increase default memory and disk cache size
Add valueExpr to cache key
Handle future objects
cachedReactive: add label arg
Extract reactive label code into exprToLabel()
Use consistent interface for preserving visibility
Skip visibility tests with old versions of rlang
hybrid_chain: preserve visibility
Cache errors and visibility
Split setVisible into two functions
Throw error if no cache object
Use ellipsis to check for empty args
Rebuild docs
Mention quosures
Use spookyhash
Update tests for cachedReactive
Add eventExpr to cachedReactive()
yarn build
Make sure shiny.scss can be compiled without Bootstrap
Use Bootstrap's border-radius mixin (mainly so BS4's enable-rounded works as expected)
Specify UTF-8 encoding for error page
Add cachedReactive example with actionButton
Add tests for cachedReactive error handling
More documentation for cachedReactive
Add support for async in cachedReactives
Add tests for cachedReactive
Add cachedReactive
Move resolve_cache_object out of renderCachedPlot
Make template test less brittle and failures more verbose (#3096)
Add list default to `getShinyOption("themeDependencyFuncs")` call
Explicitly state the default value in `getShinyOption(x, default)` calls
Dependency fixes
bs_dependency_dynamic -> bs_dependency_defer
Update MockShinySession
Add namespacing for bs_dependency()
Remove registerThemeDependency from pkgdown
Move bootstraplib to Imports
Make setCurrentTheme() a ShinySession method
Update R/bootstrap.R
prevent caching on restyle and account for fact that href may include hostname
`textAreaInput()` doesn't work as expected for relative `width` (#2049)
Update bootstrap dependency code
Add missing space for html lang (#3093)
Bump version number
Bump development version
Implement reactiveConsole() (#3092)
tabsetPanel binding: unconditionally trigger change on receiveMessage
NEWS
Forgot to actually force invalidation for freezeReactiveValue(input)
Preserve existing (CRAN) behavior of freezeReactiveVal/freezeReactiveValues(non-input), but warn
Force invalidation on freeze
Address ("fix" is too strong a word) #1791, #2946: freeze/thaw
shiny.css should also be using bs_runtime_dependencies()
Don't export setCurrentTheme() (just provide it as a public session method)
Use a for loop over an lapply to get better error reporting
Use inline template logic
Tell htmltools that the template is a complete template
Make sure lang is set in helper method
Add missing assignment from merge w/ master
Add missing close bracket
No need to capture options since the options are set at render-time
Use helper function to cleanly create <html> start tag given the lang val
Use `@inheritParams bootstrapPage` to inherit lang definition
Use `lang <- getLang(ui)` and `ui <- setLang(ui, lang)` methods
wip generalized real-time theming via setCurrentTheme()
Allow Shiny.renderDependencies() to re-render stylesheets, if requested
Make shiny.css bootstraplib aware; use jquerylib (#3060)
Add getCurrentTheme to pkgdown
yarn build
make sure is_bs_theme() is available
Localized bootstraplib themes (#3062)
Reogranize shinyOptions documentation
Document cache option, remove bootstraplib
Document shiny.autoload.r option
Update NEWS
Add shinyOptions scoping tests
Add missing paren
Add test for captureAppOptions()
Remove $saveFileUrl method
Separate docs for options and shinyOptions
Get rid of .globals$testMode
Remove .globals
Remove withLocalOptions
Copy app and session-level shinyOptions at instantiation time
Add session-level shinyOptions
Annotate runApp and use initCurrentAppState()
Use getCurrentAppState() for shinyOptions instead of .global$options
Removed useless option setting
Add tests for captureAppOptions
Rename consumeAppOptions to captureAppOptions and provide example
Re-document
Rename server-orig.R back to server.R
Create server-resource-paths.R from server.R
Create runapp.R from server.R
Rename server.R server-orig.R
Create viewer.R from server.R
Add back shinyapp.R
Remove shinyapp.R
Rename file
Re-document
Rename app.R to shinyapp.R
Split knitr.R from app.R
Split knitr.R from app.R
Create knitr.R from app.R
Rebuild shiny.js
Update NEWS
Remove allowDataUriScheme because it is no longer needed
Remove IE8 and IE9 file upload support
Rebuild shiny.js
updateRadioButton with character(0) (#3043)
Allow setting the state of RestoreContext (#3053)
Remove test for date object length>1 (Closes #2936) (#3061)
Include sources in source maps
Rebuild JS assets
yarn upgrade
Add more authors
Add Barret to Authors
Make sure we only include one version of Bootstrap (#3048)
Remove modalButton() from pkgdown reference (it's not included on modalDialog()) (#3046)
Document modalButton with modalDialog (#2907)
Combine point events into one doc file (#2906)
More themable dateInput()/dateRangeInput() (#2964)
More themable selectInput() (#2950)
More themable sliderInput() (#2958)
Resolve NEWS conflict
Rebuild docs
Add links to functions
Allow passing server function directory to testServer() (#2965)
Remove unneeded paste0
Added es5-shim removal in NEWS.md (#3032)
Make sure cache logging appends to file
Update NEWS
Move alt parameter after ...
Do not record the reactlog when enabling shinytest (#3025)
Other Rds generated by running devtools::document() on the package
All update*Input docs now inheritsParams from their standard counterpart
Update diskCache docs and rebuild
Update NEWS
Apply suggestions from code review
Allow icon arg to reference other downloadButton args
Change the evaluation rules for the icon promise in downloadButton(), fixes #3022
renderCachedPlot: improved documentation
`downloadButton()` icon can now be changed via the `icon` parameter (#3010)
Remove unused cacheContext class
Added missing alt arg
White space formatting to match the lines together
Cleaned code
Update R/shinyui.R
Used isTRUE inverse instead of isFALSE
Used attribute instead of option
Updated NEWS.md
Added a11y semantic landmarks for main and sidebar panels
Redocumented for alt param
Updated alt param description
Updated NEWS.md
Made alt param reactive
Update R/render-cached-plot.R
Update R/render-plot.R
Update R/render-plot.R
Added alt param
Unified eol in Gruntfile.js for all the platforms (#3001)
Rebuilt via WSL
Reran yarn after updating grunt
Got rid of es5 info and corrected selectize version
Made sure lang length to be 1
Used withr for applying datepicker patches
yarn grunt instead of yarn build
Updated NEWS.md
Reran yarn build
Tweaked updateSelectize.R
Used withr when applying patches and doing yarn build
Update tools/updateIonRangeSlider.R
Update tools/updateIonRangeSlider.R
Update tools/updateIonRangeSlider.R
Update tools/updateIonRangeSlider.R
Tweaked updateIonRangeSlider.R
Removed es5 shim
Updated grunt file to minify selectize-plugin-a11y
Update tools/updateSelectize.R
Added updating scripts and LICENSE info
Appended a11y plugin to options
Defaulting a11y plugins
Updated selectize-plugin-a11y
Added selectize-plugin-a11y
use expect_equal() instead of grepl() in expectation
Add info about calling registerInputHandler from .onLoad
Remove renderPrint from pkgdown index
NEWS edits
Update NEWS
Update NEWS
switched from * to + in the regex that checks resource path
Simple regex in addResourcePath
check that the prefix is not only made of dots
redoc the runExample()
Update server.R
Allow to pass resource path that starts with `.`
Updated test
Date format instead of format
Updated NEWS.md
Add tests
Warn on 1000+ choices for selectInput/selectizeInput
Followed convention for NEWS.md
Calling `runApp("app.R")` ignored options passed into `shinyApp()` (#2969)
Removed an issue URL from NEWS.md
Resolved NEWS.md conflict
Added Bootstrap accessibility plugin (#2911)
Remove html5shiv and respond.js
Use soft breaks in NEWS
Avoid spurious use of connections
on.exit(add = TRUE)
Add PR number to NEWS
Allow function-based UI to respond to non-GET requests
Allow function-based UI to return a complete HTTP response
Resolved NEWS.md
update news
Do the same when replaying plot
Include the pixelratio when setting showtext dpi
Rebuild documentation
Updated test-bootstrap.R
Further dep upgrades
Build JS
Upgrade build tools; fix Gruntfile.js for Windows
Clarify how testServer expression is evaluated
Bump version to 1.5.0.9000
Remove context() calls from example app
Documentation: say that withProgress returns the value of its expression. I didn't know if it does or doesn't and had to test it out, it should be explicit
Small documentation addition in withProgress (I did not re-compile roxygen)
Improved fileInput keyboard accessibility
Combine documentation of renderPrint() and renderText()
Rebuild docs with dev version of roxygen
run revdep. updates redep_cran notes
Remove Remotes field
Remove links from NEWS.md
Refer to shinytest migration function
Updated aria code and NEWS.md
Provided auto-label for icon() instead of aria-hidden
Updated NEWS.md
Redocumentation
Updated related scripts, templates, and NEWS.md
Documentation
Added lang ShinyOption
Added lang attribute to the default template
replace devtools by remotes
Improved accessibility for icon()
Drop testModule() from NEWS.md, fixes #2901
bump version to 1.5.0. Build JS
news update
Finish updating to jQuery 3.5.1, add a tools script, add documentation to tools/README.md
bump jQuery 3.5.0 -> 3.5.1
Remove old manual test app. Closes #2892
Update NEWS
Update tools/README.md
Update README
Rebuild docs
Update NEWS
Update Font-Awesome to 5.13.0
Add updateFontAwesome script
Move callModule() to separate .Rd; add various links to docs (#2889)
Clearer language for shinyAppTemplate prompt
isTempPath is now isTemp, simplified semantics (#2886)
Add reactive/promise test
Run pre-revdepcheck for v1.5.0. Found 2 errors. Made 2 PRs (#2885)
get() => !!as.symbol()
testServer() doc update
Ensure file encoding is specified for sort_c
Ensure temp files passed to downloadHandler() content functions are deleted on session close
Call session ended callbacks, fix related existing/broken test
Use GitHub Actions (#2876)
Code review feedback
Pass namespaced names to renderFile()
get_mocked_publics() cleanup
renderCachedPlot() support, minor reorg and misc. fixes
Unit tests
Safer default file deletion behavior for renderImage
sp
roxygenation
remove renderedFamily info field
roxygenation
shiny.useragg should default to FALSE
export MockShinySession; document
<<- to <-
sapply => names() <- + lapply
ensyms => list
Return invisible in noop functions
Test reactive() + downloadHandler
getCurrentOutputInfo() works, and tests
downloadHandler() test
downloadHandler() test
getCurrentOutputInfo()
Update private$downloads docs
registerDownload() and private$renderFile
Output context isn't well-defined
Un-noop a couple things we need to implement
undo id parameter for example
App template tweaks
Make runnable example for downloadButton
Remove unnecessary constructor
roxygen
Explain the return value of getCurrentOutputInfo()
feedback from @wch. Keep 'value' arg, drop 'id'
Add sort_c function for sorting in C locale
Remove trailing comma and extra return statement
Remove check note about function not found
roxygen tweaks
Down to 1 missing method and 1 missing field
Clarify test logic; better output
fix tests
Use getStyle() to support old browsers
safe-guard against NA values
make shiny.useragg an unofficial option that takes priority over quartz
Add instance methods in the constructor
smaller bump in version
update news and add to comment
Add more noops and errors
roxygen flailing
Wrap styles in reactive() so that calling getCurrentOutputInfo() doesn't always invalidate
Use is_available() more widely and remove unneeded complexity in check_suggested()
comments
generalize internal is_installed and use it in startPNG()
Update tests/testthat/test-tabPanel.R
Update tests/testthat/test-tabPanel.R
WIP noop refactor party; collation brokn
Use noop()
Remove reference to helper-load.R that's no longer there
Minor updates to shinyAppTemplate docs
code review with Winston
A good test of real/mock session difference
add mock method notify func
testServer(): Users can now pass in their own session
default to FALSE for now
let showtext know about the resolution
Pass check
Rollback the custom device arg (may come later) in favor of a shiny.useragg option
Auto values aren't resolved until plot time, so if we see one, resolve it
change device bg default only if the thematic option is set
somehow messed up rebase
missed passing device in renderCachedPlot()
bump version
code review with Barret
Provide a device argument to renderPlot() and plotPNG()
no need to call thematic
User-supplied bg to renderPlot should take 1st priority
ragg will take priority over Cairo
Auto-theming interface will come from thematic
First pass at an auto-theming interface
wip font support
port auto-theming logic to new thematic package
sequential colorscale now mixes fg/bg with accent (for the endpoints)
newpage should always come before ggplot_build
default to bg='white', not transparent
suggest scales; other R CMD check things
Add autoThemeOptions() to pkgdown
allow autoTheme options to be reactive
cleanup
Set default scales via plot_env for old ggplot2 and options for new ggplot2
mix colors using scales::colour_ramp
code review feedback; introduce autoThemeOptions()
Use htmltools::parseCssColors
Add sequential colorscale for ggplot2 based on the accent color
Add accent (link) color and qualitative color palettes
make sure ggplot_apply_auto_colors always returns a built plot
Report font-family and colors in getCurrentOutputInfo() if .shiny-report-theme class is present
Better autocolors for bars and other geoms that don't have colour; lighter lattice defaults
Tweak ggplot2 colors to look closer to defaults
More autocolor fixes
More robust un-setting of autocolor params
Implement plot.autocolors for cached plots
Add support for lattice and better default palette() for col scaling
facet strips shouldn't have stroke and fill should be a semi-lighten fg color
only assign default for aes that are relevant and non-transparent
Support a named vector as an override to computed colors
grep for hex codes properly and return exit length 0 character string if input is length 0
wip
update news
Have getCurrentOutputInfo() return NULL instead of error if called in a non-reactive context (extension of #2707)
news
yarn build
Use native String.trim() method since $.trim() is now deprecated
Bump jquery 3.x to 3.5.0, closes #2856
testServer(): Properly capture module return values
remove duplicate param docs
testServer does not return results. Do not test for it.
use 'id' instead of 'value' for tabPanel/tabPanelBody
code feedback for tabPanelBody
Move 'value' to first arg position for tabPanelBody. 'value' is now required. Add tests
Clearer wording for dryrun option
typo in NEWS
check if function, not if not null
do not call monitorHandle unless it is set
testServer should return invisible()
use list instead of rlang::list2
Dynamic dots for MockShinySession$setInputs() (#2838)
remove '../' from loadSupport calls as they will be found automatically now
Rebuild docs
replace ... with args in testServer
Combine docs for nearPoints() and brushedPoints()
Documentation edits
Do not flush when setting a returned value for a mock shiny sesâ€¦ (#2832)
loadSupport(): fix global.R support, run global.R in appropriatâ€¦ (#2831)
Remove deprecated arguments from plotOutput/imageOuput
Do not set a returned value for an app
Do not flush when setting the returned value in a mocked shiny session
Update test for new function name
Add migrateLegacyShinytest function
Small fixes
testServer() and loadSupport(): if app is a path, and not an apâ€¦ (#2823)
shinyAppTemplate tweaks (#2828)
code feedback
merge news items
safeguard testing by checking for some suggested packages
make sure shinytest is installed from github. Needs latest version
add comments
use mkdir_p to always create directories
fix test
display the test folder name when it fails
remove autoload.r test, as that code path doesn't exist anymore
removed dplyr
Test module app 107_scatterplot. Use pretty paths when printing the runTests output
Document
Test many combinations of shinyAppTempalte combos. Do not full matrix as shinytest is slow to execute
shiny.autoload.r is not required for runTests anymore
If no module is used with shinytest, do not test the module
feedback - remove all non-module/server test files in the testthat dir if the R folder is not used
Copy all files, but if they are glue files... use the template
Have output$sequence test be conditional on if the r dir is used
feedback - no `expr = `
feedback - drop adhoc
feedback - Do not require req(input$size)
Remove runTests output
Add full template + runTests test
use adhoc.R in stead of server.R in shinyAppTemplate
No longer need helper-support. testthat.R should do this before running
print the app folder name (if available), not just the test file name
Code feedback. snake case legacy_shinytest fn. add comments / change error
Update tests with the design that shinytest legacy can not be called. Add `assert=FALSE` where appropriate
Update to use withr / loadSupport
Throw error on legacy shinytest testing instead of allowing the legacy test structure
Commit revert
Update app to be consistent. Add testthat contexts
Add contexts and pass all tests
Update failure name
Enable broken adhoc test
Rename output
Edit docs
Document
white space and small comments
Add an environment argument to `runTests`
Remove code specifically looking for shinytest only files.  This is not necessary as it will still work in the current setup.
add another testing app that has a module that returns a reactive value
Each testing environment must require their own loadSupport call if necessary
Add assert logic
add print method
Reprint error
Add todo
pass tests
Consolidate testServer() fixes and enhancements (#2815)
roxygen sorted the reexports
Update NEWS
document
New path tag causes scoping issue in showcase mode
[WIP] Add skeleton function and example (#2704)
Don't set default id in clickOpts() and friends
Don't print loading R/ dir messages (#2817)
add !important attr to .nav-hidden css class
use a list. Use @cpsievert 's wording suggestion.
merge master
Add `updateActionLink` (#2811)
add news items. Add tabPanelBody() function. Document
document
add type = 'hidden' for tabsetPanel to hide the tab headers
NEWS.md
Bump glue dep
server => module
Remove strings from expect_error
Clarify testServer lexenv assertions
Use base versions of a couple rlang::env_* functions
Move session$env sanity check out of makeMask and into testServer
Un-inline assignment
Remove unused variable
Use vapply in mapNames()
Add markdown() NEWS item
Inline markdown tests, add to docs
document
Document new R6 methods
getEnv() => env, docs
Tests pass \o/
Getting there
fix one failing test
nested module tests pass now, many others fail %-)
WIP mock session scoped proxy
WIP more markdown() tests
Add failing proxy-related and ns() related tests
document
document
document
Doc and test updates
appobj coercion works
First passing app dir test for testServer overhaul
test-module.R => test-server.R
More test progress
Bring back scope tests
More test reorg
Split up and rename various tests
Update actionButton example (#2806)
Desired environment semantics are working
Add back many working/converted tests
Update Node.js build scripts (#2800)
Use roxygen2 reexport setup for htmltools and fastmap (#2795)
Add `./revdep` folder output and script (#2790)
add examples for actionButton and actionLink which adds extra css classes
Change indenting of module examples
Add class `'function'` to `reactive` and `reactiveVal` objects (#2793)
Bump version to 1.4.0.2
Add link
Skip debounce/throttle tests on CRAN
Update roxygen level
un-skip test
Add S3 class to MockShinySession
Update modules.R
get travis to pass for now
make sure the server is only run if the example is interactive
Add link
Skip debounce/throttle tests on CRAN
revert man/ changes to reflect CRAN version of htmltools
tests
minor reformat
markdown(): Improve docs; add .noWS; class result as html
Address feedback
Change test to not be locale-dependent
Add NEWS item
Add moduleServer function
bump version
yarn build
update news and update htmltools docs
Add test to mitigate shadow with unquote
yarn build
review feedback
Updates for new grid in r-devel
New session$env test
Minor changes and tests
Remove slack notifications
Subtle change to .testModule() semantics
Respect shiny.autoreload option being set in app.R or global.R
Remove Rd
Add noRd to private function
NEWS.md updates
Remove redundant new test
Normalize runTests() output, improve documentation of returned dataframe
Pass existing runTests() tests
More progress on runTests() format
Support shiny.autoreload even when there are errors
Revert "Support shiny.autoreload even when there are errors"
Support shiny.autoreload even when there are errors
revert names in app1 tests
Add working runTests test
runTests() output
Make improvements suggested by @schloerke
add_result() for test run
add_result() for test run
add_result() for test run
Type stability changes to shinytestrun object
update js files (version bump)
add news item
bump version
Invoke onSessionEnded callbacks with self reactive domain
document with modern roxygen
undo unnecessary diff; yarn build
Add more comments about why we are busting the appveyor cache
Add comment about why we are busting the cache
No need for bg-danger, progress-bar-danger is now in bs3compat
Remove .col-form-label
Get rid of striped progress bar style
Remove branch from htmltools remote
Remove btn-outline-secondary
Remove unnecessary bs4 compat shims from showcase
Remove unnecessary bs4 classes
requires htmltools >= 0.4.0.9001
Need to de-active any nav tab, not just navs in a dropdown
showcase compatibility
For some reason event.relatedTarget isn't populated when the previously active item is a dropdown item
Compatibility for checkboxes will happen via bs4 shims
progress-bar-striped needs to appear on the actual progress bar (not it's container)
progress-bar-danger class has been replaced by bg-danger
btn-outline-secondary is visually closer to btn-default (compared to btn-secondary)
dateRangeInput() should use input-group-sm, not input-sm or form-control-sm
remove debugger; more detailed comment
wip bs4 compat work
wip2
wip1
markdown(): improve docs, simplify call to markdown_html(), default to extensions = TRUE
Add shiny::markdown() for inline Markdown
Use test_path
.testModule(): remove args parameter fixes #2709 (#2713)
Timer functions always use ms, and better names. Closes #2725
Add MockShinySession$makeScope() (#2714)
add install cmd
Bust appveyor cache every time the DESCRIPTION file updates
Use a frozen lock file within CI
Use as.raw instead of charToRaw
display auto reload base directory for reactlog label
Rebuild docs with roxygen2 7.0.2
Add label to file reload observer
Bump node version on Travis
Rebuild docs with roxygen2 7.0.1
Rebuild shiny.js
Update docs
getCurrentOutputInfo(): return NULL if not in an output
Update documentation of Progress and MockShinySesssion
Update to roxygen2 7.0.0
Add a message to clarify what app is being tested, support setting progress on mock session.
Attempt to pin roxygen2
Don't use GH deps for appveyor
PR feedback
Expand testServer/Module docs (#2694)
Set working dir in testServer so the app runs in the proper dir.
Load shiny and inherit from global env. Non-error are no NA and errors are passed through.
Add entry in pkgdown
Rename testApp -> runTests
Integration Testing Docs (#2691)
Make cursor indicate when dates are not selectable
Update NEWS
Datepicker: make disabled months and years lighter gray
Remove vignette.
Regenerate docs
PR feedback
How do I still get paid to do this?
Placeholder docs for MockShinySession
Export session
Implement missing test.
Clean up test warnings
Pin to the beginning of the file path.
Change URL
Disable autoloading with a R/_disable_autoload.R file.
Add message about loading R/
Cleaning up the vignette
Test improvements for Windows and make CHECK pass.
Handle Joe's feedback.
Introduce integration testing functionality
Simplify run_now()
Refine which methods merit warnings
Export flushReact method
Bring in promise helpers and test for getOutput auto-flushing
Rename parameter, destroy old outputs
Update NEWS
PR feedback
Align default parameter values with real session
Try to fix failing Windows test
Include equality in scheduling comparisons
Introduce MockShinySession
Bring back the good parts of a003
Revert "PR feedback. Broke tests because of dependency on session, though, so might revert."
PR feedback. Broke tests because of dependency on session, though, so might revert.
Consolidate to two Timer classes and simplify conditionals
Attempt to get the current time from the session, if available.
Unrelated: fix autoload tests.
Add mock timer class
Best-effort task scheduling through the session
Revert "Best-effort task scheduling through the session"
Best-effort task scheduling through the session
Make shiny.autoload.r default to TRUE (#2659)
Update NEWS
Bump version to 1.4.0.9000
Use pkgdown for reference page generation (#2651)
Don't use dependency release candidates in Travis
Use absolute URL for CONTRIBUTING.md
Update link
Restructure NEWS
Relax test so it passes on R 3.3 and below
Run Travis on more R versions
Update contributing instructions for cla-assistant.
Don't notify slack on success
Disable call stack tests on CRAN
namespace packageVersion
Library updates -> Potentially breaking changes
review feedback
document
Do nothing if the package isn't installed or meets the version requirement
news feedback
jquery legacy is 1.12.4, not 1.12.1
update news
Provide an option, shiny.jquery.version, to opt-in into jQuery 1.12.1
Emit an upgrade message if an old version htmlwidgets is installed
have appveyor run github versions as well
Update stack call test expectation in light of https://github.com/rstudio/promises/commit/9ebad6#diff-1220ed154f06164c0a2d6cc053c1f3c1R134
Temporarily install rc branches to get Travis passing
Use pageX/pageY instead of offsetX/offsetY to determine if a second click is too far away before triggering a double-click event. Closes #2620
Update version number inserted by Grunt
Better checking for implicit globals
Document insertUI() and removeUI() together
Update docs
Tweak shinyApp docs about bookmarking
Improve inputFile() accept documentation
Combine documentation for textOutput() and verbatimTextOutput()
Update version dependencies
Bump version to 1.4.0
Rebuild documentation
Document default values of shiny's options (#2597)
Define what all input functions yield for server (#2600)
merge master
Update R/notifications.R
Clarify use of id argument
add fillPage() to the family as well
Hadley's feedback
code review
add @ family to all layout functions
add news item
yarn build
update news
Exit early if date parsing fails in _setMin() and _setMax(), closes #2591
Bump httpuv version dependency
Clarify comments
Code review fixes
Use safer method to remove observer
Update NEWS
Use safer finalizer for reactivePoll
Always suppress for now
Automate patches for ion.rangeSlider
In ion.rangeSlider, wrap removeProp() in try-catch. Closes #2587
Add shiny.resourcePathChanges option to get more information about resource path changes for a given prefix.
Load the helpers before the tests -- into an ancestor environment of the tests'.
Add a filter to test
Add namespace rewire option.
Adding a test runner
don't hide the current element, instead make sure new element is hidden before fading in
hide the prior element, not the new element
if no code tab exists, do not attempt to highlight it
Clarify required argumented to shinyApp()
More details about server argument
Document shiny.appobj in own file
Remove Sys.sleep in runApp()
Add basic print method for shiny.render.function
Implement print.reactivevalues
Remove from index
Minor formatting tweaks
Alphabetise options
Upgrade yarn dependencies
Soft-deprecate pageWithSidebar() and headerPanel()
Cross-link tabPanel() to navbarPage()
Document sidebarPanel() and mainPanel() with sidebarLayout()
Co-locate all sidebarLayout() functions
Clarify the three inputs to width/height
Disallow backslash in staicHandler paths
add js for opening broken reactlog routes
autload
- update NEWS - only source global in server.R mode - only use intermediary environment if opted-in to autoloading.
Only use loadSupport if opted-in to autload.r
Update NEWS.md
Use ctrl/cmd + shift + f3 to mark reactlog; return a 501 error code for reactlog paths when reactlog is disabled
Rebuild JS files
ignore any node_modules-like named folder
add messages in htmltools script to notify about version number
remove unneeded method roxygen tag
Make loading helpers opt-in.
add import htmltools statement
execute tools/updateHtmltoolsMan.R
Create updateHtmltoolsMan.R
use htmltools remote
Clarify docs
better news description
set start/end date after setting date if they land on the same day, closes #2335
copy in latest man files from htmltools
add roxygen tag to enforce s3 method for checking
Update NEWS
Register shiny's knit_print methods on load
only send requried information across wire to browser for showcase mode
Update reactiveValuesToList documentation
move news item to library updates and state 'resolved'
update htmldeps versions for jquery and bootstrap
add news item about upgrading bootstrap and jquery versions
update license info for bootstrap and jquery
change jquery v1.12.4 -> v3.4.1
change bootstrap v3.3.7 -> v3.4.1
Throw an informative warning if a subdirectory of www clashes with another static path (#2434)
Update NEWS
Update fastmap version dependency
add news item
use boostrap url stripper regex to remove url before looking for relative tag location
Update to new signature in test.
Move global.R sourcing into an exported load function
Only load top-level R files in R/
Require capitalized R/ dir.
Correct mistake around app.R in global
Add news
Test ui/server/app/global sourcing.
Revert "DI the source function for testing."
Revert "Break master ðŸ˜ˆ"
Break master ðŸ˜ˆ
Encrypt with --org
Revert "Break master ðŸ˜ˆ"
Break master ðŸ˜ˆ
Add Travis Slack notifications on fail
remove print statement
use new RegExp
remove leading url when removing relative url
add print to debug appendTab
DI the source function for testing.
Load helpers into isolated environment
Add dynamically-generated case-sensitive test.
Support case-agnostic r/ dir loading
Load helpers in R/ on app startup
Add .github to .Rbuildignore
Re-document
Remove fastmap from Remotes because it is on CRAN
Rebuild JS objects
Update JS build dependencies
add some historical context in the comment
Introduce removeResourcePath() & throw message if the local path of a resource path has changed
selectInput: improve factor handling (#2524)
Bump version to 1.3.2.9001
output$xxx should return the actual func passed in
Make output reading compatible with modules
tham -> than
Import and re-export fastmap::key_missing (#2517)
Update rlang dependency info
Remove outdated information for shinyApp()
Clarify interaction between width/height and CSS/templates (#2504)
en dashes -> em dashes (#2513)
Commit generated MD with new links, not manually reviewed.
Auto-generated link conversation, not manually reviewed.
Manually escape another % that wasn't getting rendered properly.
Manually escape one % sign that wasn't getting escaped?
Restore one \code{} block that contains inner backticks
Accept harmless RD changes.
Accept whitespace-only RD changes.
Convert R to MD
Remove escaping for % in preparation for MD conversion
Result of running roxygen2md(scope = "none")
Write errors to stderr.
Better bash
Specify node version
Script to check for JS.
Try matrix build for Roxygen check.
Test for Roxygen doc changes in Travis
Define optgroup when using (#2502)
Add sep argument to renderText (#2497)
Upgrade JS build dependencies
Add link to renderCachedPlot.
Bundle deprecated reactive functions into a single file.
M0ar README words
Suppress stack traces in tests
Mark deprecated functions as internal.
Switch from fastmap to rlang for weakref functions
More memory leak tests
Reactive expressions keep reference to context
Use Dependents in ReactiveValues
Use weak references for dependents of reactive values
Use weak references for reactive contexts
Update NEWS
Add tests for observer order
Ensure that dependents are sorted
Make Shiny outputs (optionally) readable
Unquote key
Use grep(value=TRUE)
Rebuild shiny.js
Disable dragging of plots with any interactions. Closes #1393, #2223
Update inputchanged news item with pr number, move to improvements
Trigger `shiny:inputchanged` event on related input element (#2442)
yarn build
Coordmap info should retain discrete limits (#2410)
Don't match text inputs with a trailing '-selectized' in their id, fixes #2396 (#2418)
fastmap moved to r-lib
Fastmap objects can now be saved and loaded
fastmap: exists() was renamed to has()
Removed redundant section of issue template
Incorporate feedback from @wch
Improve bug report template
Add issue templates
Convert MemoryCache to use fastmap
Import fastmap::fastmap
Convert ReactiveValues$.metadata to use Map
Convert ReactiveValues$.values to use Map
Convert ReactiveValues$.dependents to use Map
Use fastmap as backing store for Map class
update news (should've been done in #2404)
yarn build
doSetInput calls setInput (duh) so should have name and type
camelCase for consistency; clarify comment
comment on the difference between name_type and name
rename name arg to name_type where relevant in input decorators...
pass inputName to immediateCall() and normalCall()
type is only relevant for public methods setInput() and setRatePolicy()
Consistently ignore input type in all InputRateDecorator methods
InputRateDecorator's setInput method needs to strip of the input's ttype before looking up the input's rate policy, closes #2387
update news (#2428)
Have input labels always include 'control-label' class
merge with master
Update NEWS
merge with master; fix NEWS conflicts
have class come before the for attribute
update comment
update news
Have getSliderType() return '' early if min, max, and value are NULL
missed input_binding_slider.js
Inputs now always supply a <label> tag with a special CSS class for hiding NULL labels
update news
getSliderType() should be able to handle NULL min/max/value, fixes #2250
Apply label updating logic all relevant input labels
fix news link
Use jQuery's text() method for proper escaping when inserting data.label string
make return value of dateYMD() slightly more clear
update news
update NEWS
Include argName with warning when length > 1
fix typo in warning message
Throw informative warning if date coercion fails and original input
Consistent approach to coercing and formatting date strings, closes #2402
make sure to remove label tag from DOM if label is updated to NULL
Have textInput()'s receiveMessage method insert a label tag if one is needed, closes #868
Bump version to 1.3.2
Update NEWS
Add sys.www.root to createAppHandlers, so that subapps can access /shared/*
Add comments
Use v1.3.1.9000
Bump version to 1.3.1.9000
Manually bump the version numbers in shiny.js and shiny.min.js
Bump version to 1.3.1
Minimize `str` usage in `rlog$valueStr` (#2377)
Update NEWS
Don't wrap text in verbatimTextOuput in Safari. Closes #2233
Bump version to 1.3.0.9000
Re-document
Remove reactlog from Remotes
Improve bootstrap-datepicker update tools, add docs
Improve bootstrap-datepicker update script
Re-import bootstrap-datepicker 1.6.4
Remove httpuv and reactlog from remotes
Restore intuitive bookmarking behavior (#2360)
fix shortString is NA or NULL logic
add coverage for situation where label might be na or NULL
increase default length of label to 250chars from 100chars
make sure labels are short for reactlog
remove github location for reactlog and clean up flow of check_suggested
use httpuv rc-v1.5.0 branch
run grunt
use reactlog rc-1.0.0 branch
bump news and description versions to 1.3.0
Make sure the is.na() check in %AND% looks for length-1 input
Simplify session placement
bump dev version of reactlog. remove reactlog::reactlog_add_shiny_resource_paths()
Always exclude /session from static paths
Use excludeStaticPath() function
Code review feedback
Add unit tests for shared secret check
Add constant time check for shared secret
update man file name to reactlog from showReactLog in inst/staticdocs/index.r
document time for reactlogShow
update docs by removing showReactLog/reactlogShow (to reactlog) as much as possible
Add methods: reactlog, reactlogShow, and reactlogReset. Depricate showReactLog
add `stats::` to `setNames` function calls
merge Remotes
merged from master
added news item for reactlog
update rLog$msg output tests
fixed bad argument placement
always display the first n chars in a rLog$valueChange or rLog$define
add reactId to rLog$invalidateLater
add force option to retrieving reactive info
add define observer to rLog
fix rLog$reset to work as an installed package. added a dummy context reactId (different from noReactId)
use rLog$reset() instead of initializeReactlog() due to changing global binding error
fix broken test
move the actual setting of the reactiveValues key higher in set command for accurate logging
when calling rlog$define, set a value
fix .globals binding issue
turn off logging of value in console
add rlog$invalidateLater(runningCtxId, millis, domain)
remove `setLabel` from ReactiveValues
update reactiveValues set comments
async start stop rLog should use `domain = self`
use rLog$noReactId constant
document
init testing for msg logging
log, action, then perform invalidate action
dummy context should be created every time. allow for id to be passed in
add a noReactId label and init rLog method
add a default reactId for contexts for clearer msg logs and rLogs
add helper functions for msg logger.
when updating a value for reactVal or a reactValues key, the context should not be recorded
read reactlog version from description file
fix bad comma usage
markTime -> userMark; queueEmpty -> idle
this check is already covered
dec/increment with integers
no need to store messages
use curly brackets for all function defs
use class brackets for R6 def
consistent naming
remove writeReactLog
spelling and comments
use reactlog::reactlog_add_shiny_resource_paths
Grunt
Bump version to 1.2.0.9001
check_suggested now takes a github location and a source install script
Update NEWS
Use httpuv master branch
shinyreactlog -> reactlog
merge in master
Add headers for static serving
Use shiny-shared-secret validation for static files
Use setStaticPath instead of setStaticPaths
Use static serving for app's own assets
Use httpuv static serving
Grunt
Update NEWS
Remove QuitChildProcessesOnExit: Default option
Don't byte-compile when doing local install in RStudio
fix dependency version since htmltools 0.3.6 is used
Bump version for development
Add note about FontAwesome path change
Remove icon examples
Update NEWS
Update license information in README
Add support for Font-Awesome 5 brands (#2221)
Re-document
Add to fontawesome news entry (#2214)
Simplify DnD for fileInputs, fix #2142 (Firefox 57+)
Follow js event namespacing conventions and only possibly init brush once (#2202)
use naturalHeight and naturalWidth for default dim values. Followup comments from winston (#2201)
Initialize brush dims for renderImage objects (#2198)
Improve robustness of optgroup construction
Rebuild JS (to update version number)
Bump version
Refactor v1.2 news
Upgrade FontAwesome to 5.3.1 (#2186)
News item for #2180 (#2189)
Code review feedback--use an arrow function instead of aliasing `this`
Remove unneeded Remotes
merge master
add domain to reactlog for context exit (#2180)
remove display param from MessageLogger
if reactlog console option is set, display, or display is `display` is true
use shinyreactlog pkg directly
log create context with srcref and srcfile
Update NEWS
Add css and image locations to plot click and brush events (#2183)
add var name to error msg
revert two previous commits
update documentation to reflect new options for xvar and yvar
evaluate xvar and yvar for nearPoints and brushedPoints
Update NEWS
Grunt
Add note that Font Awesome support is for 4.7.0
merged master
do not depend on null reactid values
add informative errors when xvar or yvar not in data for nearPoints and brushedPoints
Check for existence of bookmark scope directory before creating
Tweaks to NEWS
Un-export knit_print methods from htmltools
Use xxhash64 instead of sha256 for hash algorithm
Update NEWS
Grunt
Update coordmap tests
Bump version and update NEWS
Update data structure comment
Import old brush after image has loaded
Make sure not to have multiple reset event handlers
Add isnan() function for IE
Add width/height to coordmap instead of using naturalWidth/Height
More consistent use of img to css conversion functions
renderCachedPlot: add note about interactive plots to help page
moved new dateInput arguments to last and added formatting conditional if datesdisabled is Date object
Inputs in renderUI/uiOutput don't work with bookmarks (#2139)
Include x and y pixelratio in coordinfo
Use canonical CSS property name
Reposition div when resized (without new image)
Remove redundant isEquivalent function
Remove unnecessary ggplot2 workaround
Initialize coordmap only after image loads
Add support for scaled images and brushing
Allow plot interaction to handle scaled images
DiskCache: use mtime instead of atime, check for time resolution (#2146)
added datesdisabled parameter to dateInput() allows disabling of specific yyyy-mm-dd format strings
Re-document with roxygen2 6.1.0
Don't cache plotResult
Documentation fixes
Remove env and quoted arguments
Simplify resize logic
Add shiny-scalable class
Safer file removal order
Small logic cleanup
Make session cache public, so that user can set it
DiskCache: make destroy_on_finalize default to FALSE
Update caches from code review feedback
Restructure drawReactive/renderFunc code
Set max-width and max-height to 100% for cached plots
Add exec_missing parameter
do not set shiny.reactlog option by default
turn all active `isLogging` bindings into functions
fix parameters for shinyreactlog (session_token)
add new option for shinyreactlog messages in the console
Suppress console logging for renderCachedPlot
Improved logging for DiskCache and MemoryCache
Update renderCachedPlot documentation and examples
Doc entries
Add 'missing' parameter to get()
merged in master
Add sentinel value cache miss
When MemoryCache is used, we can cache the displayList
Change default DiskCache size
DiskCache: make default finalizer behavior conditional on whether a temp directory is used
DiskCache: Add info about sharing across processes
DiskCache: Make destroy() work robustly with multiple processes
DiskCache: Avoid errors from a race condition
DiskCache: Check if cache has been destroyed by someone else
Add support for promisey cache key
DiskCache: Add warning when caching reference objects
Add comment about pruning
Prune after setting value
NEWS edits
Grunt
add new item
add news items
removed TODO comments
DiskCache: Use temp file when setting value
DiskCache: Don't call exists() before reading file
Rename cache.R cache-context.R
Rename cache.R cache-memory.R
Rename cache.R cache-disk.R
Rename $has method to $exists
Add memoryCache and make it the default
DiskCache: Add LRU eviction policy
DiskCache cleanup
Use promise domain for currentOutputName
Make renderCachedPlot work with async
add shinyreactlog as remote
changed output coordinate system to "ndc" to account for margin changes
Updates to Winston's feedback: removed for ... of iteration that is not supported in IE.
Update R version check information
move renderReactLog calculation above addResourcePath
Use output name in cache key
Add diskCache function, and app- and session-level caches
explicitly set number to null instead of implicitly for better documentation
update NEWS.md
refactored data type checking for consistency
updateInputSlider can now change from date to date-time formatting. fixes #2019
add reactlog resource path when calling for reactlog
use `self$` for all fn calls within rLog to avoid any conflicts
allow for null context id in dependents
remove old temp files
changes as per Winston's feedback; additional comments, and edge cases, and removed unnecessary JS.
remove old .graph methods and use shinyreactlog pkg for rendering
fixed default selection for multiple-select
remove "thiz"s and replace with explicit "selectize"
fix selectize for default `selected` value NULL
improve performance of R input processing
use original yarn lock file
remove _ignore folder
clean up tools readme to use yarn over global grunt-cli install
remove a LOT of files in favor of github.com/schloerke/shinyreactlog
merged master
gruntfile should run 'default' task to make sure everything is built like normal
add a R test to make sure shiny.js {{ VERSION }} was replaced
add a grunt test to make sure {{ VERSION }} was replaced
compile with grunt
Streamline renderCachedPlot API
merged master -> barret/reactlog
WIP
Use DiskCache class
Change cacheResetEventExpr to cacheResetExpr
Rename normalizePath2 to absolutePath
Add sizeGrowthRatio function
renderCachedPlot: pass ... args
Rename cacheClearExpr to cacheResetEventExpr
Isolate user code
Don't re-run user code when only dimensions change
Rename cacheInvalidationExpr to cacheClearExpr
Add entries to staticdocs
Remove createCachedPlot function
Code reorganization
Only invalidate plot when fitted dimensions change
Allow renderCachedPlot to take a directory for scope
Allow onStop to take a NULL session
Add app/session scoping for renderCachedPlot
Note bug fix in R
Implement cache invalidation
Convert renderCachedPlot to take expr and cacheKeyExpr
Initial implementation of renderCachedPlot
Move plot caching code into separate file
Rename plotCache to createCachedPlot
Get output info and auto-size plot cache images
Allow user code to pass width/height/pixelratio
Document cache scoping and minor code cleanup
Add different scoping levels for plotCache
First implementation of plotCache
add todo
respect existing class values and add tests
simplify colors
less case "STRING" and more case OBJ.VALUE
reduced hoverStatusOnNodeIds arg requirements and internals
add more flow classes and remove $FlowExpectError
fix searching on nodes
move mapValues to a util file
bump flow threshold to 95 percent
varSelectInput doc tweaks
add bullets in details for output return value (update corresponding example)
remove rogue staticdocs fn
merged master -> varSelectInput
staticdocs for varSelectInput
added news for varSelectInput
add shiny.symbol and shiny.symbolList tests
compile and document
add new input 'varSelectInput()' and input binding 'shiny.symbol' and 'shiny.symbolList'
Improve optgroup documentation per #1864 (#2084)
Addresses #2042: lighten dates outside of range for datepicker (#2087)
default log with marks
fix eslint and prettier clashes
first pass at a user time mark
update enter exit to not be off by one
first pass at reactlog mark
fix babel options bug in grunt config
add simpler lint then watch script
add cranwhales log
use log states from dictionary, rather than copies
set app data as log
export rlog object not as default
fix console bug
first pass at freeze/thaw in rlog
copy all rlog files to the temp directory
attempt to load rlog_data as a trycatch to work with showReactLog()
added news item
white space
when freezing a reactivevalues key, use the name space similar to `$.reactivevalues`
use utils namespace
white space
fix freeze/thaw rlog'ing
make sure log works with an empty log
up the flow type percentage
ignore yarn error
first pass at cyto flow types
flow more files
add index file for updateGraph to gather all exports for easy import
first pass at flowtype
add babel plugin transform class properties within yarn
add flow, flow scripts and update grunt-babel
remove rlog grunt tasks in favor of config files
add lodash flow types
add jquery flow types
add a flow config
runApp: add support for IPv6 addresses
clean up lint config
remove unused dep and script
working graph with es6 modules
first pass at distributed files. graph loads, not all perfect
prettier and build script updates
first pass at sep classes
lints
add Console module
Bump version to *.9000. Back to work!
copy in react_graph into index.js to start pruning into multiple files
added prettier config for rlog
add local rlog .eslintrc.js
add test files
add gitignore in rlog
prettier and lints
move node_modules and grunt file to root dir
Bump version to 1.1.0
Bump httpuv version and add NEWS note
add different log files for rlog to check
search regex implemented to update filtered data on getGraph.atStep(k)
next, prev, next cycle, prev cycle implemented within new search
massive sweep on how filtering and hovering is done.  Commiting. regex filter is unfinished
add filter by name
first pass double click filter
remove TODO
for future... make animation a setting
Drastically improve performance by not re-rendering the layout on a layout that isn't changing
fix hover and sticky hover to be stable throughout transitions
Update NEWS
first pass at hover highlight.  need to move to graph data object and not cyto object
clean up graph addEntry wrapper
update layout options
add alt shift arrows navigation and prev / next step calculations
skip adding entries if the reactId is rNoCtx
Allow for isolate calls to have no context and input name changes to have no context
fix missing period bug
active enter and value change now pulse and use ActiveStateStatus helper
fix progress bar tick leaking right bug
first pass at ActiveStateStatus class with invalidate
use graph style and do not animate graph style
first pass at cacheing graphs.  wait for now
make edges shades of grey
add cycle markers in the timeline
add nav buttons
Take dependency on later >=0.7.2
valuechange addressed when an isolateInvalidateEnd is called
do not double log observable set invalidation
add classes and colors for different states of a graph
log that invalidation has occured when an input value changes a key
invalidate rlog namesDeps on value change
on rlog object definition, do not trigger a value change
merge master --> reactlog
allow for skipping to next cycle by holding altKey and arrow L/R
styles added to animation in cyto nodes
set up ghost edge and use classes in cyto graph
first pass at cytoscape.js graph
be clear in action name provided in log and give dependsOnRemove a ctxId
brought observeEvent/eventReactive documentation up to date
single quotes to double quotes
add freeze and thaw to logger
Re-document
NEWS edits
use an rLog object to do all logging
Remove "experimental feature" tag from renderUI
Remove outdated Remotes
Upgrade Selectize to 0.12.4
Add test to demonstrate vectorized unscheduling
Update NEWS
Update NEWS
Modify internal JS to use Shiny.setInputValue, {priority: "event"}
Update NEWS
first pass at adding domain to all rlog functions
Change {immediate: ...} to {priority: "deferred|immediate|event"}
add rlogAsyncStart and rlogAsyncStop
isolate calls should be handled differently than regular rlog calls
clean up when reactivevalues are defined and updated in rlog
add test app for rlog
ctxId's are now upgraded to start with 'ctx' in logging
local logging done with ". " for spacing
withReactiveDomain now acts as a promise domain
first pass at reformatting rlog
use MessageLogger for node information cache
remove dot syntax
make the rlog messages a r6 object
change all nodeId to reactId
merge master -> barret/reactlog
first pass gantt chart... brings up future thoughts
break apart the large react-graph.html file
add npm scripts to build, clean, and watch the js
add rLogValueChange (no start/end, just change)
first pass at making rlog. need javascript to recognize new log format
renderPlot's ... args were being dropped
Implement #1989: Allow outputs to be removed by assigning NULL to them
Move some bullets around
NEWS
Grunt
Move trigger after value change
move attribute setting to after choices is reassigned (this was getting lost after the changes in #1861).
fix selectize capitalization (regression introduced by #1861)
Use seq_along instead of 1:length(x)
Update NEWS
Don't error when entire stack trace is stripped/pruned
Use qualified name for utils::tail (R CMD check NOTE)
Make srcref offsetting optional
Add deprecation docs
Refactoring and deprecation in conditions.R
Add new `autoclose = TRUE` param to dateInput() and dateRangeInput (#1987)
printError implements lobstr::cst analysis and deep-stack-aware frame suppression
First steps to improved stack traces
Update NEWS.md
relay offsetWidth/offsetHeight of htmlwidgets to clientData (#1981)
Lazily format stack traces
Bump httpuv dependency version
Improve error handling when `addResourcePath()` fails (especially for `runtime: shiny_prerendered` documents) (#1968)
Grunt
sliderInput: don't show commas after decimal
Remove unused keyboard_step parameter
Update to ion.rangeSlider 2.2.0
Remove background-thread branch from httpuv remote
For installation of Rtools on Appveyor
Update TODO-promises.md
Restore label to plotObj reactive
Stack traces were being lost inside hybrid_chain
Add to .Rbuildignore
Remove unused function
Use later >= 0.7.1
Remove extraneous comments
Don't allow invalidation from a child process
Update TODOs
More robust process identification (thanks @HenrikBengtsson)
Detect (probably inadvertent) attempts to inherit reactive contexts across processes
Add TODO
Respect pixelratio (retina) when redrawing cached images
Plots were not respecting pixel ratio (retina)
Update TODOs
Add TODO
Update TODOs
Make deep stack traces opt-in; fix imports
Update TODOs
Update TODOs
Suspend session during async download operation
Update TODOs
Support async downloadHandler content functions
Update TODOs
wip2
wip
Update TODO
Update TODO
async support for renderDataTable
Support same-tick execution for synchronous outputs
promises::finally() was missing namespace prefix
Support promise domain wrapSync; fix renderPrint visibility
Update TODO
Changes to flush cycle to support async
Refactor list of TODOs
Restore writing of _n_flushReact and _x_flushReact to stdout
Refactor flush cycle
Cleanup R CMD check
Update TODOs
Update TODOs
Add promises to remotes
Remove extraneous debugging code
"promise" package was renamed to "promises"
Add TODO comment
Add TODO
Add call_async temporarily; this should probably live somewhere else
Sync to changes in promise. run_now aggressively in serviceApp.
Implement execOnResize
Minor renderPlot cleanup
Update TODO
Use proper promise:: prefix
renderPlots works!!! Testing needed.
Adapt promise domains to handle multiple arguments
Some steps toward renderPlot working. Move to promise package instead of system2.5.
wip
Update NEWS
fixes #1859 (#1861)
Point to RStudio Community website instead of shiny-discuss
Quote arguments to do.call() for nicer stack traces. Closes #1851
reverted the relative positioning of the icon and the title text in `navbarMenu`s and `tabPanel`s back to what it was before Shiny 1.0.5 (fixes #1840)
Don't copy httpuv::decodeURIComponent at build time
Changed script tags in reactlog from HTTP to HTTPS in order to avoid mixed content blocking by most browsers (thanks @jekriske-lilly)
Avoid port 6697. Closes #1784
Grunt
Add Shiny.compareVersion() function
Add Shiny.version to Javascript (#1826)
Bump version to 1.0.5
Bump version to 1.0.5.9000
Add safe wrapper for fromJSON
Escape a few more characters for conditionalPanel expressions
Grunt
Clarify that choices must be strings
Bump version to 1.0.4.9000
Add functions to news item
Add NEWS summary
NEWS cleanup
Bump version to 1.0.4
Add references to issues
drag/drop-able fileInputs (#1782)
do `inputId <- session$ns(inputId)` in user facing functions for module functionality (rather than overriding the same functions in `makeScope`)
Joe's feedback
make hide and remove work well when we want to hide/remove a tab inside a navbarMenu (or the whole menu) and it is selected (before this commit, it wasn't navigating to the first tab like it is supposed to)
make this PR work for modules
added select argument to showTab function
for dynamic tabs, send message on `session$onFlush` (instead of `session$onFlushed`)
Abandon nearest neighbor tab-showing logic. Just grab the first tab.
htmlDependencies are properly loaded with dynamic tabs
Add `select=FALSE` argument to insert/append/prependTab
Make tab prepend/append just edge cases of insert
Properly escape jQuery selector strings
implement navigation after hiding/removing selected tab
more JS code refactoring; improved documentation
insertion fully implemented
refactored code and made insertion of navbarMenus possible
updated docs
remove extra line
typo: tag -> tab (makes a big difference!)
document similar things together; add prependTab and appendTab
now working for navbarPage and navlistPanel
clean up JS code (1 line only)
added NEWS and fixed typo
update examples
delete extra brackets
implement showTab and removeTab
implement removeTab
finish insertTab
add functions to index.r
changes
Move isRunning function to better location
Add onStop function (#1770)
Update NEWS and add comment
work around RStudio debugger issue (closes #1474)
Add 'setSerializer' function (#1792)
Add preprocessor for fileInputs that strips local path (#1789)
Add a function to test if an app is running (#1785)
Convert examples to single file apps (#1685)
New version of httpuv is on CRAN
Use a more suitable content type for file uploads
Don't include xtable comment in renderTable by default
Remove reinitalizeSeed
Remove branch name for httpuv remote
Add tests for random streams
Refactor withPrivateSeed
Add working app for conditionalPanel example
Support modules in conditionalPanel (#1735)
Required R version is 3.0.2 due to sourcetools
Don't send local package path to client when using htmlwidgets (#1756)
Bump version
Add snapshotPreprocess function
Triggers a new `shiny:outputinvalidated` event (#1758)
In test mode, send message to client even when no outputs change (#1747)
Grunt
Add placeholder parameter to updateTextInput (#1742)
fileInput JS: Allow uploading the same file. (#1719)
fileInput: Preserve extension of files uploaded from IE9 (#1717)
Grunt
More descriptive NEWS item and added an explanatory comment to the code
Add better error messages for errors parsing and evaluating JS code (#1727)
Update Rproj for new version of RStudio IDE
fileInput: If possible, retain uploaded file extensions on the server. (#1706)
Update links in CONTRIBUTING.md
Add tests for ReactiveVal independence
Bump version to 1.0.3.9000
Bump version to 1.0.3
Workaround for NOTE about objects in yet-unreleased version of ggplot2
Better reactivePoll example. Closes #1678
Make fileInput progress bar change color on error (#1673)
Bump version to 1.0.2.9000
pre-built => prebuilt
Bump version to 1.0.2 and update NEWS
Use RStudio replacement for deprecated MathJax CDN (#1664)
fix documentation (worng/misleading code example)
Add shiny:sessionInit event (#1568)
allow the `choices` argument in `checkboxGroupInput()` to be `NULL` (#1652)
PR: Add CC-BY-SA-4.0 license to showcase
Bump version number to 1.0.1.9000
Add CC-BY-SA-4.0 license to showcase
re-run grunt to update version number embedded in shiny.min.js
bump version numbers in DESCRIPTION and NEWS
Grunt
Update NEWS
Rebuild ion.rangeSlider.min.js
Stop propagation of mouse events on slider (#1631)
doc changes
Grunt
Remove need for babel-polyfill
Update NEWS.md
Allow arbitrary UI code in the choiceNames for radio buttons and checkbox group input (#1521)
fix typo
Add link to PR for reactiveVal feature
NEWS
Make fileInput text customizable. Closes #1617
More code review feedback
Code review feedback
updated tools/README.md (#1616)
Add NEWS item
Add S3 generics for format/print; freezeReactiveVal
Automatic labelling of reactiveVals
Add reactiveVal() for single reactive value
Change NS() to return a vectorized function (#1613)
Redocument with Roxygen 6.0.1
Use consistent value caching format
Grunt
Bump version to 1.0.0.9001
Add binding and el fields to shiny:inputchanged event (#1596)
Simplify user value check
Update NEWS
Update NEWS
Remove redundant calls to setInput
Update NEWS
Make sure input deduplication respects inputType. Closes #162
fix: dateRangeInput did not respect weekstart arg
NEWS edits
Grunt
Update NEWS
Improve escapeHTML
Update NEWS
Restructure code for clarity
Update plot interaction for ggplot2 > 2.2.1
Prepare code for ggplot2 api
Add entries to staticdocs index
NEWS formatting fixes
Grunt
NEWS
Remove shiny:fileuploaded event
decode URLs in staticHandler func - fixes #1565 (via #1566)
Grunt
Update NEWS
Set starting value to NULL
Progress: store value as raw value instead of normalized
NULL value no longer makes progress bar go to 100%. Closes #1472
Update NEWS
Grunt
Unexport markOutputAttrs and add snapshotExclude function
Add ability to exclude outputs from snapshots
Add shiny:filedownload JS event
Grunt
Trigger inputchanged event when fileupload is completed
Make fileInput trigger shiny:inputchanged. Closes #1511
Re-document
Update selectize URLs. Closes #1564
delete old message handler
news item
some adjustments after feedback
remove console.log and re-grunt
grunt
listify
will be removed!! only for testing purposes
stuff
Convert tabs to spaces in examples
support pushState for pseudo-nav
Another typo
Typo
Update ion.rangeSlider to 2.1.6 (#1540)
Update NEWS
Add plot interaction support for coord_fixed. Closes #1121
Bump version to 1.0.0.9000
Update URL
Update NEWS
Bump version to 1.0.0
Add link to PR in NEWS
refine regex
Relax naming requirements for `addResourcePath()`
Grunt
Update NEWS
Pressing Esc in a modal in a gadget only closes the modal. Closes #1453 (#1523)
Update yarn install instructions
NEWS: more info on testing
Update NEWS
Update to font-awesome 4.7.0
Replace structure(NULL) with structure(list())
Added skipFirst arg to observeEvent (#1494)
Add debounce/throttle tests, priority arg
Add link to pull request
Remove unnecessary namespace
Wording tweaks
Remove unnecessary link qualifier
Add session$userData feature (#1513)
Add limitations section to debounce/throttle docs
Add magrittr as Suggests because of ?debounce example
Add reactive debounce and throttle functions
fix #1487: better error handling for insertUI when selector does not match anything in DOM (do console log)
use past tense in all NEWS.md entries
allow navbarPage's `fluid` param to control both the content *and* the header containers
added a new arg (placeholder = FALSE) to verbatimTextOutput() so that by default it doesn't show up when it is empty; improved the documentation example
Add ... arg to downloadButton (merge #1492)
Added ability to pass arguments to the `a` tag function called inside `downloadButton()` and `downloadLink()`. Closes #986.
Grunt
`unbindAll()` should not be called when inserting content with `insertUI()`
Grunt
Sort input, output, export by name
Add sortByName function
Add getTestSnapshotBaseUrl function
Rename testEndpointUrl to testSnapshotUrl
Change arguments from plural to singular
Change default snapshot format to JSON
Emit message when running in test mode
Add testmode as an option to runApp
Bump version to 0.14.2.9001
Use singular form of input, export, and output
Add shiny:fileuploaded JS event
Update NEWS
Remove token check
Safer method for injecting code in test mode
Make sure test values are named vectors
Rename variable
Add args to getTestEndpointUrl
Basic code injection support
Improve documentation for submitButton and change 07_widgets example to use an action button (#1475)
Edits to contribution guidelines
mention support for the optgroup tag in the documention for selectInput (specifically in the `choices` arg). Added example app too.
add download attribute to the a tag that generates downloadButoon and downloadLink
drafted new contribution guidelines
Add link to NEWS
Render HTML dependency <meta> tag contents correctly (#1463)
fix typo in dateInput documentation (#1454)
Bump version to 0.14.2.9000
Bump version to 0.14.2
Remove NEWS entry for change that was reverted
Add list2env wrapper, for R <3.2.0 (#1446)
Add exportTestValues function (#1436)
allow overriding a JS custom message handler; fixes #1419 (#1445)
Use === in Javascript
allow shiny.trace option to specify which type of messages to relay; fixes #1422 (#1428)
Pass shinysession to applyInputHandlers
fix a typo: option() -> options()
Bump version and update NEWS
Add entry to staticdocs
Export function that applies input handlers
Update NEWS
Grunt
sliderInputBinding: setValue changes value immediately
Document InputBinding.subscribe's callback argument
sliderInputBinding: rename 'updating' to 'immediate'
Use Yarn instead of npm (#1416)
Remove unneeded npm package
Bump version to 0.14.1.9000 in DESCRIPTION
add "fade" arg to modalDialog() (#1414)
Bump version and update NEWS
Update NEWS
Bump version to 0.14.1
Remove file
more comments and NEWS
news entry
more tests
deleted commented out lines
a better fix
maintain names of factors when updating radio buttons' choices
Update NEWS
Add more plot interaction tests
Add support for coord_flip
Add plot interaction support for ggplot>2.1.0
Update update-input.R
Remove no-longer-necessary CSS class
Grunt
Set value after min in max when updating dates
Rename bootstrapDP to bsDatepicker
Update NEWS
Update to jQuery UI 1.12.1
Update NEWS
Updates to dateRangeInputBinding for new datepicker API
Add workaround for bootstrap datepicker bug with setStartDate and setEndDate
Don't try to set min/max date when undefined
Enable noconflict for Bootstrap Datepicker. Closes #1346
Update to Bootstrap Datepicker 1.6.4. Closes #1218
grunt clean && grunt
Add missing files to Grunt clean
Remove sourcetools workaround for Travis
Update NEWS
Use createUniqueId for consistency
Copy restored file to temp directory
Better check for unsafe paths in restored file inputs
Mark restored file inputs with correct serializer. Closes #1368
Use cache for AppVeyor
Bump version to 0.14.0.9000
Update shiny.rstudio.com URLs in NEWS
Bump version to 0.14
Ignore revdep
fix validation bug
updated 0.12 section
removed unnecessary line breaks now that we switched to .md
updated 0.11 section
NEWS edits
NEWS improvements (#1354)
Check whether hosting environment supports bookmarking (#1360)
make explicit link to external package
Convert validate example to single-file app. Closes #1345 (#1347)
Let modules get at the root scope (undocumented for now)
updateQueryString: add note about not working in IE9. Closes #1336 (#1339)
Grunt
Make sure displaylist is on for recording/replaying plots
Better checks in modal example
Add shinyOption for progress.style
Grunt
Update NEWS
Add old-style rendering as an option for progress
Rename shiny-progress CSS class to shiny-progress-notification
Add sections to NEWS and add some new items
Switch NEWS to Markdown
Add some issue numbers to NEWS
NEWS, doc update for sendBinaryMessage
Code review feedback
More docs for enableBookmarking
Add enableBookmarking arg to shinyApp()
Grunt
Slight tweaks
Rebuild minified files
Updates can clear date and date range inputs
Remove extra comma
Add updateQueryString example
Make staticdocs tests work in R CMD check
Update staticdocs index. Closes #1293
Make it possible to have multiple bookmark buttons (#1310)
Clarify observer priority documentation
Add travis fix for R-devel (thanks to @jimhester)
Documentation updates
Do Travis checks on multiple R versions
Replace stopWithCondition with reactiveStop
Add size argument to modalDialog (#1308)
Bookmark/restore actionButtons (#1304)
Don't error when creating tabsets without id
Add Dismiss button to URL modal
Document that enableBookamrking can be called in onStart function
fix typo in NEWS
Don't crash on malformed date input values. Closes #803
Update NEWS
Textarea refinements
Add arguments height, rows and cols
Update documentation relative to textarea input
Add textarea input
executeElapsed gets stuck returning TRUE even when nothing was executed
updateDateInput: better handling of malformed dates. Closes #1179
Add documentation about using selected=character(0). Closes #1182
fixes #1093 (#1291)
Bookmarking fixes (#1281)
fixes #1289
executeElapsed gets stuck returning TRUE even when nothing was executed
Upgrade to Font-Awesome 4.6.3. Closes #1274
Upgrade to Bootstrap 3.3.7
Upgrade to jQuery 1.12.4. Closes #1251
fixes #1270; improves docs; export isTruthy()
allow sticky nodes in reactlog if users drags them (#1283)
Solve updateSelectInput bug in IE 11.0 (#1277)
Unset shinyOptions when set to NULL
Bump version and update NEWS
Correctly handle bookmark options for global.R and app.R
Add showBookmarkUrlModal
Barbara/error handling/port as socket (#1263)
Grunt
More informative error messages
had forgotten to run devtools::document
removed extra line at end of example section
More details in enableBookmarking man page
urlModal: always show Ctrl/Cmd-C copy message
Barbara/appveyor (#1265)
Make bookmark button work when there's a submitButton
Rename updateLocationBar to updateQueryString
Simplify list2env
Make sure state ID doesn't have invalid chars
Always get appDir when shinyApp object is created
Update bookmarking documentation
When restoring modules, only provide state$dir if present
Ensure that state$values can't be replaced
Keep state$values as an environment for save and restore
For session_proxy, add [[ and disallow $<- and [[<- (#1262)
Change progress indicators to use notification API (#1160)
Allow modules to exclude their inputs
New version of reactiveValuesToList
Move methods out of ShinySaveState
More informative comments
Define filterNamespace and unNamespace locally
Add namespace support to reactiveValuesToList
Allow modules to call onBookmark, onRestore, onRestored
Use Callbacks objects for bookmarking callbacks
Add onFlush, onFlushed, and onSessionEnded functions
Re-document
When bookmarkStore="disable", don't restore
configureBookmarking affect next shinyApp object creation
give `where` arg a default value ("replace")
Remove configureBookmarking; add onBookmark, onBookmarked, onRestore, onRestored
fix typo
Add _inputs_ for url-encoded state
Rename 'type' argument to 'store'
Rename shiny_persist to shiny_bookmarks
Change function(req) to function(request)
Show copy instructions in bookmark dialog
Capture and log errors in initializing RestoreContext
Capture and log errors in bookmarking/restoring
Add onRestored argument
Use name 'bookmark' in more places
moved `multiple` to 4th argument
allows callback to be garbage collected
rebased with master
fix to outputOptions
Add bookmarking example with arbitrary values
Add check that UI is a function when restoring state
Documentation updates
Input not being initialized with insertUI if beforeStart/afterEnd
Update NEWS
Don't use randomly-chosen port numbers that Chrome deems unsafe
Do equivalent of "mkdir -p" when making state dir
Don't restore state if in a subapp
Change '_state_id' to '__state_id__'
Gracefully handle errors in restoring state
Grunt
Add asList method
Move loading and decoding of query string into RestoreContext
Add ShinyRestoreContext class
Replace bookmarkConfig with bookmarkObserver
Revise how onSave is called; move persist() and encode() into ShinyState object
Support pool package
Refinements to save button
Better splitting of state query string
Add invalidateReactiveValue function
Replace updateQueryString with updateLocationBar
Make 'restorable' opt-out instead of opt-in
Rename 'save' to 'persist'
Add bookmarkButton
Properly mark actionButtons and passwordInputs as unserializable
Call onRestore only if it exists
Refinements
Remove 'enable' argument
Add support for bookmarking arbitrary values
parseQueryString: ignore extra ampersands
Prepare things for separate values
 Add configureBookmarking function
Remove outdated example
Remove bookmarkOutput; add saveStateModal and encodeStateModal
Remove clipboard.js
Remove createBookmark function
Make names consistent
Remove unused code path
Use new ID each time state is saved
Check for '..' in restored file input path
Use wrapper functions for saving/restoring state
avoid overflow in R 3.3.0 radix sort
Add ability to save and restore fileInputs. Also improve fileInput appearance
Add serializers
Add ability to reset brush with session$resetBrush/Shiny.resetBrush
Save each state in a subdirectory
Better error handling when saving/restoring state
Use same state ID throughout a session
Remove unneeded randomID function
Initial version of saving state
small fixes; documentation; got rid of unnecassary things
Restore values only if 'restorable' option is set
Add shiny options
removed constraint that forced elements inserted with `insertUI` to be wrapped in a div/span
tiny fix
added NEWS item for IncludeWWW
Disable seralizing of passwords and actionButtons
Don't clear bookmark DOM elements on error
code highliting; dropdown menu for the www files
Add ability to invalidate a reactive value
Code cleanup
Add optional update button for bookmarkOutput
Add argument to exclude values from bookmarking
Make sure bookmark output is not a text input
Don't error when no restore context available
Make restore context available from server code
Add tooltip on copy
Rename functions
Add license info for clipboard.js
Add bookmarkOutput
Add ability for inputs to restore bookmarked values
Clearer variable names
Preserve type of bookmarked data
Add example
Bookmarkable state wip
added wwwFiles boolean option to DESCRIPTION file
init commit
added NEWS item for insertUI / removeUI
documentation update
call sendImageSize from unbindOutputs
fixed typos; included argument defaults; removed 'shown', 'hidden' triggers following chat with Winston
moved insertAdjacentElement to the right place
ran grunt
various updates
added `sendImage` and `sendOUtputHIddenState`
updated documentation; added ... argument to onFlush() and onFlushed() in order to be able to pass in arguments to the func
changed everything from sendCustomMessage to session$sendMessage
sendInsertUI now uses sendMessage instead of sendCustomMessage
added insertAdjacentElement for compatibility with Firefox
Change modal example
Re-document
updated insertUI; added removeUI
Rename argument
updated shiny-options text
updated NEWS
changed sanitization default to FALSE (on local development)
tiny fix
removed classError argument to safeError function
got rid of warning that popped up when renderFunc took no arguments; there really isn't a good reason to require this (not at this point at least)
update to safeError
undo last commit to be able to merge automatically
updated NEWS
added version to shinyDeprecated call; updated NEWS
Prototype insertUI functionality
another update to NEWS
deprecated position arg to tabsetPanel; updated NEWS
removed unnecessary line
updated customStop() documentation example to match Winston's pattern
Update NEWS
Make examples runnable with shinyApp()
Remove shinyUI() and shinyServer() from examples
Grunt
Modal dialog refinements
Add modal dialogs
Update package.json
implemented error hiding for ui.R and downloadHandler() cases
a few minor tweaks
a lot of not very productive experimentation
add placeholder option to passwordInput()
fixed documentation
a few tweaks to customStop()
a little code refactoring and added a customStop() function
made the tracker construct - now an R6 class - easier to understand (more obvious); fixed the `shinysession` and `name` issues related to the renderFunc's
errors are now sanitized in the app by default (must use options(shiny.sanitize.errors = FALSE) to override this behavior)
Bump version to 0.13.2.9001 and update NEWS
Allow setting selected item in navbarPage. Closes #970
Check that tab arguments are unnamed
Reconnection refinements
Remove bootstrapDependency function. Closes #1069
Grunt
Add "force" option to allowReconnect
Add 'action' parameter to notifications
Reconnect UI refinements
passed error through if handler accepts it
tiny documentation update
removed `func` arg from render functions; fixed issue introduced by rebase a few commits ago
Update ion.RangeSlider to 2.1.2
got rid of unnecessary lines
updated renderFunc's to include a shinysession arg
updated integration etsts
changed a warning to an error, following the "fail fast" principle
a better way to check which context the render function is being called from
Use notification API for reconnection interface
New reconnect UI
Add back gray-out on disconnect
Export show/hideReconnectDialog functions
Add onConnected and onDisconnected
Allow Shiny Server to properly override methods
Increase reconnect delay time with subsequent attempts
Tweaks to disconnection/reconnection UI
Allow app to control reconnection behavior
Show box when trying to reconnect
Implement auto-reconnect
Add support for menu section headers
Update NEWS
Add support for horizontal dividers in navbarMenu
harcoded colors used for the color-coding of the time labels (creditted colorbrewer)
added check for valid arguments if passed via outputArgs
really not a solution...
added outputArgs to all other renderXXX functions following the pattern used for renderPlot
Provide xxxOutput args via renderXXX passthrough
Grunt
Bump version to 0.13.1.9002
Re-document
Remove some public methods for notifications
Add exports.renderContent to modularize content rendering in JS
Modularize dependency handling in R
Escape ID
Rename 'style' to 'type'
added color scale for time labels
Add style argument
Rename argument from 'html' to 'ui'
Add note about IDs
Trigger
Bump htmltools required version to 0.3.5
Handle tag inputs and escape HTML text
Add missing entries to staticdocs index
Update htmlTemplate docs for htmltools 0.3.5
stored the `timeElapsed` float on the node instead of the fully formatted string; made sure we're not showing any time elapsed info while the node is active (it could be confusing)
changed time label color; updated default argument to renderReactLog
added time argument
Add R notification functions
Add randomID function
fixed y positioning
updated multilineTextNode
separated text label and time label
Restyle notifications and add close button
experimenting
added 'time elapsed' to nodes' labels
added NEWS item documenting the change to `renderTable()` and fixed tiny bug (`stop()` message was spanning two lines with only one string)
Simplify notification API
Rename Shiny.Notification to Shiny.notifications
Add delay before removal
Add notification JS API
Add estraverse-fb npm dependency
Grunt
Make ESLint gave warnings instead of errors
Add babel polyfill
Update eslint rules
Update npm packages
Switch from jshint to eslint
Use Babel for ES6->ES5 transpilation
added another check in the JS to make sure that we're finding the correct icon
throw error instead of warning in validateIcon(); updated documentation
fixed typo
compiled documentation
check icon validity more robustly; set `icon=character(0)` as the way to get rid of a previous icon; updated documentaion and NEWS
find i-tag elements with *any* class (to circumvent the issue of selecting italicized text)
updates to input_binding_actionbutton.js and got rid of `isIcon` function (substituted by simple check instead)
verify that button icons are in the right format (not necessarily valid though) and added updateActionButton()
updated documentation
improved defaultAlignment function and changed names of spacing value options
actually with multiple tables, their ids would all be identical (bad), so switched back to using classes to gain specificity
created table id to add css specificity
check valid spacing
updated documentation
changed `bordered` to `spacing` with four possible values, rather than only two
Update reactive graph sample data to include time
improved defaultAlignment function
mostly spacing
added alignment default character ("?")
tried fix
actually padding is necessary for headers too
padding on all cells
made the check for empty data frame more robust
coerce the input to a data frame (important if the input was a matrix for example, as some parts of the code might not apply)
fixed a tiny bug introduced by the previous commit
improved regex for substitution (less fragile, less hack-ish)
simplified alignment vector and got rid of an unnecessary variable
initialize `header_alignments` in a clearer way
added spaces after commas in a couple of places where they were missing
added "$" to regex to make sure we're subbing "</table>" only at the end of the input
updated createWrapper() per Joe's suggestion, added spaces between the "="
note to news file and upgrade number in R file
vectorized form to add format args to classNames
made isNumber() 1000x more elegant
return NULL instead of the empty string if no data is provided
"the" changed to "of"
2nd update to width documentation (copied straight from plotOutput() )
updated width documentation
update bootstrap to 3.3.6 see https://github.com/rstudio/shiny/issues/1056
latex bug in documentation (but shouldn't this be allowed?)
commenting and documenting
made sure theader is only present the argument colnames is set to TRUE
Add note about grunt clean
replaced format argument with 4 flags (striped, bordered, hover, condensed) and made headers look like bootstrap's
finally got headers to align nicely with columns
Bump version to 0.13.1.9001 and update NEWS
Streamline diagnoseCode
aesthethics
Add workaround for quartz res bug
used row.names() function instead of rownames() to avoid naming conflicts
removed unnecessary css, and garbage collection for renderBootstrapTable
replaced renderTable with renderBootstrapTable (but kept name renderTable) and ensured backward compatibility
check if rownames are numbers or strings
Add code diagnostics (missing/extra commas)
added arguments, minimal functional code
added more function arguments
Move tests from inst/ to tests/
changes to make function compatible with table demo app
fixed small width bug
added customizable width
aesthetic changes
added renderBootstrapTable
Update NEWS
s/abortOutput/cancelOutput/; add req option
Change 'replay' option to 'execOnResize'
Rename 'render' to 'plotObj'
Add ability to abort the processing of outputs
Closes #810: check if the input file is encoded in UTF-8 and warn if not
Bump version to 0.13.1
Really fix docs.
Use parent.frame() instead of sys.parent()
Pass tests. reactive(function() { ... }) is NO LONGER supported.
Partial fix of debugger breakage
Update NEWS
Add replay option
If plot code errors, re-execute on resize
More cleanup
Code cleanup
Implement replayPlot when width/height changes
Collect needed data structures
Restructure ggplot2 coordmap extraction
Separate rendering code into a reactive
More restructuring
Small restructure of renderPlot
Set sudo to false explicitly to enable caching
Really fix docs.
Use parent.frame() instead of sys.parent()
Pass tests. reactive(function() { ... }) is NO LONGER supported.
Partial fix of debugger breakage
Grunt
Unset attributes in img that aren't present in new data
Take advantage of new travis features
use the CRAN version of htmltools
Remove JavaScript events vignette
Concat and minify shiny.js
Convert internal use of sendCustomMessage to sendMessage
Add session$sendMessage wrapper function
Bump version to 0.13.0.9000
Bump version to 0.13.0
Use explicit namespaces
Use --run-donttest when checking package
CRAN maintainers prefer \donttest over \dontrun
Tweaks for improved staticdocs rendering
Remove unneeded do.call
Build and minify shiny.js
Revert "Simpler fix for updating hidden sliders (#1010)"
Add bootstrapLib to staticdocs index
Add note about printing ggplot2 graphics
Bump version to 0.2.12.9009
Update NEWS
Update NEWS
Pull out bootstrapLib into separate function
Add README file with info about jQuery UI
Update metadata
Use flex box layout vendor prefixes
Return stopApp value without visibility info
Make encoding tests work cleanly on different platforms
Don't show call when user cancels gadget
Refactor server function arg matching
Code review feedback
Code review feedback
Add stopApp test
runGadget handles cancel automatically (by default)
Proper visibility and error handling from stopApp
Update metadata
Remove dependency on newer htmltools
Specify remote repo for htmltools
Update staticdocs index
Add details to fillRow doc about containers
flex:none is more appropriate than flex:initial for weight=NA
Install htmltools from github until 0.2.11 goes to cran
Require htmltools 0.2.11
Rename flexRow/flexCol to fillRow/fillCol, other tweaks
Add fillPage, flexRow, flexCol
Migrate runGadget and viewer functions from shinygadgets
Update NEWS
Upgrade Font Awesome to 4.5.0
Add docs
Install htmltools from github until 0.2.11 goes to cran
Guard against window.Shiny not being defined
Defer subapp iframe loading until main app has loaded
Remove unnecessary environment() call
Further simplification and more tests for req()
req() simplification
req() now short-circuits on falsy values
Add `req` function for validating required inputs/values
Remove unnecessary check (feedback from @wch)
Roxygenize
Simpler fix for updating hidden sliders (#1010)
Add some tests for character encodings
Use templates from htmltools
Add knit_print.reactive
add a news item, and run grunt
Check R version at runtime (#968)
Re-document with Roxygen2 5.0.1
fixed custom message obj
cleanup
grunted
fixed typo
more tagging
added binary tags
added binary messages, yes, ws can do dat!
Bump version
Better stack traces for observeEvent and eventReactive
Catch errors when trying to print stack trace
More tests
Errors in ui function should get stack traces
Normalize shiny dir in smoketest stack traces
Quick and dirty smoke test infrastructure
Errors in ui.R, server.R, server func, etc. all get stack traces
Doc updates
Add more exports, tests
Remove support for shiny.observer.error option
Update NEWS with stack trace announcement
Add exports/docs
Automatically wrap installExprFunction with function labels
Add comments to stacktraceon/off directives indicating their partners
Random improvements to stack traces
Collapse stack trace to eliminate irrelevant bits
Collapse parts of the stack
Move error-handling logic into conditions.R
Work properly with non-call sys.call() objects
wip
Get xtable args using formals()
Separate xtable from print.xtable args. Closes #761
Move renderTable to separate file
Update bootstrap htmlDependency version
Upgrade bootstrap to 3.3.5
Implement autoreload
Don't require session to be explicitly passed to invalidateLater
grunt
reactlog label code review feedback
Correct a regression within modules
Update metadata
Cleaner reactlog labels for reactives and outputs
Add timing data to reactlog entries
Also override registerDataObj (essential for data table, DT, and selectize server mode)
Change evil `=` to righteous `<-`
Add information about clearing choices
Simplify function naming
Use cleaner method for generating function
Add session$ns(); some light refactoring; add tests; fix staticdocs
Simplify modules, by removing moduleUI and path arguments
Update to jQuery UI 1.11.4
Update to jQuery 1.11.3
Update metadata
let runApp accept single .R file parameters
A news item for #968
Rename 'func' to more descriptive name
Simplify try(tryCatch()) to just tryCatch()
Add function relabeler and relabel outputs
Update NEWS
Correctly handle unit and unit.list objects. Closes #962
LICENSE typo
Pass tests
Add callModule/moduleUI functions; scope sendInputMessage
Add namespacing functionality
a more fundamental fix of the Unicode issue
Add placeholder parameter to textInput
after reading a file as UTF-8, try to convert it to native encoding on Windows only if the conversion is not lossy
the check is.na(iconv(x, 'UTF-8')) does not really make sense
don't declare encoding on the anonymouse file connection
textConnection() can be lossy; use an anonymous file connection instead to preserve UTF-8 characters
make sure writeLines() does not convert text to native encoding
make sure the UI HTML is rendered into a connection with UTF-8 encoding
convert the result of readLines() to UTF-8 using enc2utf8() instead, since enc2native() can be lossy
fixes #961: the JSON string from jsonlite::toJSON() is always encoded in UTF-8, so there is no need to re-encode it
shiny requires R >= 3.0.0
Bump version, update NEWS
Add 'grunt clean' to delete shiny build artifacts
Allow shared brush IDs
run grunt
call setValue() only once
upgrade selectize.js from 0.11.2 to 0.12.1 to fix the ordering issue in #929
make sure `mop` is numeric
Add info about printing ggplot objects
Bump version
Bump fontawesome version after #932
Typo: name -> message.name
document the rest of events: shiny:conditional, shiny:visualchange, shiny:recalculating, shiny:recalculated
Update README.md
Run grunt
Move the shiny:conditional event to the top of $updateConditionals()
Trigger the recalculating event on null when the binding does not exist
Trigger shiny:visualchange in doSendOutputHiddenState() as well. Added a 'visible' property to the event object.
DO not assume '# + message.name' is the element id. Find the element through this.$bindings[name].el instead.
Trigger shiny:recalculated after the calculation is done
Events shiny:visualchange, shiny:conditional, and shiny:recalculating
add a summary section to the events vignette
Add a package vignette for the JS events
Run grunt
Events shiny:busy and shiny:idle
The shiny:updateinput event for inputs
The message object may be exactly false (or a falsy value), in which case shiny will fail to send the message to the handler. Use .hasOwnProperty() instead.
The shiny:message event
Events shiny:value and shiny:error for outputs
The shiny:inputchanged event
Events shiny:bound and shiny:unbound for inputs and outputs
Bump fontawesome version to 4.4.0, fixes #913
fixes #902: add jQueryUI dependency when the drag_drop plugin is used in selectize
Bump version to 0.12.2
Update httpuv version
Update NEWS
Add support for HTTP HEAD requests
Add explicit namespace to non-base functions
Move imageOutput docs to plotOutput
Update NEWS
Concat and minify shiny.js
Minor code cleanup in slider JS code
Don't use scientific notation for sending slider values
Doc tweaks
Update NEWS
Update to ion.rangeSlider 2.0.12
grunt build and bump version
trigger shiny:connected when the socket is opened and shiny:disconnected when it is closed
Set dragRange=TRUE as the default
Concat and minify shiny.js
Add timezone support
sliderInput: add timeFormat argument
Add strftime Javascript library
Add range dragging functionality
Add Date and POSIXt support to sliders
Move input handlers to separate file
Update to ionRangeSlider 2.0.10
Remove unneeded copy of normalize.css
Add two aliases of updateTabsetPanel(): updateNavbarPage() and updateNavlistPanel()
Make sure that directory removal is safe
Remove uploaded files when session ends. Closes #798
Refactor fileUpoadContext to use private members
Update NEWS
Add width option to input functions. Closes #834, closes #589
Move input functions to separate files
Update NEWS with changes from 0.12.1
Bump version
Un-deprecate data table functions until DT stabilizes
Bump version after #857
Update NEWS
Move sliderInput code into separate file
Concat and minify shiny.js
Remove no-longer-needed workaround
Don't overshoot end of slider
Move both handles when animating double sliders
Add shiny.minified option for minified JavaScript. Closes #826
Add staticdocs entries for interactive plots
Safer method for finding which method would be called
Don't attempt to extract coordmap when print.ggplot is not used (#841)
Depend on methods so Rscript doesn't fail
Bump version, NEWS
Ensure that callbacks fire in a FIFO order
query$field is either an atomic vector, or a matrix, so use c() to coerce the result to a vector (previously RJSONIO::fromJSON() would return a list, but now jsonlite returns a matrix)
bump version
make sure q$search[['value']] is not of length zero
Check htmlwidgets version
Clear cran comments
Bump version to 0.12.0
Concat and minify shiny.js
bump version
white spaces
closes #807: add messages of deprecation for DataTables in shiny
a news item for the change in server-side selectize
this comment is no longer true
fixes #814: load options after initialization of selectize in the server mode
Properly use hoverClip option
Change nullOutside default to TRUE
Concat and minify shiny.js
Hovering: add option to send NULL when mouse is outside
Show brush only after mouse starts moving
Add option to return all selected rows for mouse interactions
Re-document with roxygen2 4.1.1
nearPoints: add _dist column even when zero rows selected
Minify shiny.js
Lock grunt-contrib-uglify version
Update NEWS
Bump dev version for ggplot2 interactive graphics
Concat and minify shiny.js
Allow selectBrush to operate in just x or y direction
Document data structures for plot interactions
brushedPoints and nearPoints: handle Dates and POSIXt properly
Rename selectBrush to brushedPoints
Document missing argument
Simplify selectBrush and nearPoints code
Update tests
Add nearPoints() function
Change in sliderInput
Automatically find var names for brush selection
Send variable mappings in coordmap
Rename underBrush to selectBrush
Capture and display coordmap errors
More informative comments
Simplify facet code
Treat shiny.js as binary
Add underBrush() function
Make brush div 1px larger
Change default brush color to blue
Use NULL for session$user and $groups
Respect falsy opts for imageOutput
Allow brush resizing
Consolidate code for width/height
Grunt: jshint before uglify
Pixelratio workaround
Simplify sendBrushInfo
Send brush data when reset
Use 'expand' parameter
Cleaner coordmap initialization
Move clipToBounds from coordmap to panel
Get correct coordinates for panels
Restore brush even when scales change
Add functions to coordmap object
Partial implementation of scale/inv
Gruntfile: add watch support for concat
Implement client-side support for facets
Put shiftToRange in right place
Modularize brush code
Partial refactoring of brush
Encode facet information
Consolidate coordinate functions
Better function name
Safe handling of discrete scales
Add support for ggplot2 log coord transforms
Add support for ggplot2 log scales
Add support for ggplot2 reversed scales
Treat minified JS and map files like binary
Add click/hover/brush support for ggplot2
Rename coordmap usr and bounds to domain and range
Use separate function for getting coordmap
Move renderPlot into separate file
flowLayout's man page: % needs to be escaped
bump version
bump version of mime to 0.3
bump version requirement of jsonlite due to toJSON(json_verbatim = TRUE) (#795)
Treat the output of toJSON() as a verbatim JSON string, and do not double-encode it
Reinstate image error message fix
Clarifcations in tools README
Remove extraneous indenting
Split up shiny.js
Update to ionRangeSlider 2.0.6. Closes #777
Add session$onInputReceived
Use jsonlite 0.9.15
Allow updateSelectInput(choices=character(0)) to clear select choices
Remove unused function
Update travis config to use dev version of jsonlite
Update NEWS
Actually udpate jsonlite version
Bump version to 0.11.1.9003 and increase jsonlite version dependency
Update toJSON for more RJSONIO compatibility
Clear pending event on double click
use ISO8601 and UTC for POSIX[c|l]t time by default
Minify shiny.js
Simplify pending event tracking
Expand region to start a brush
Add overview comments
Add distance threshold for two clicks to count as a double-click
Simplify conversion of options to HTML properties
Update documentation
Minify shiny.js
Add option to reset brush on new image
Remove no-longer-needed IE9/10 workaround
Rename file
Simplify namespacing of image interaction events
Add dblclick workaround for IE8
Add IE version detection code
Make sure a double click doesn't trigger click event
Add double-click event
Change click/hover/brush arguments
Add left/right or top/bottom borders for x or y brushing
Change event listener bindings fo IE8 compatibility
Restructure brushing and dragging event handlers
Remove unnecessary code
Reorganize event handlers so they work properly in IE<=10
Document direction argument for brushOptions
Allow mousemove and mouseup outside of the image
Make sure bounds are constrained to plotting region
Add x and y brushing
Better function name
Show grab and grabbing cursor with brush
Only respond to left mouse button
Add brushOptions and hoverOptions functions
Replace bind() with explicit function wrappers
Clear click/brush/hover values when new image is received
Refactor click and hover handlers to use shared function
Add clip option for click, hover, and brush
Add isPending method to Throttler
Don't send brush info second time on mouseup
Consolidate image output options
Add debounce and throttle options to brush
Disable image dragging when brushing in Firefox
Simplify image render logic
Add click/hover/brush support to imageOutputs
Formatting tweaks
Streamline hover handler
Use crosshair cursor for brush
Get jQuery object just once
Add ability to clear previous brush
Add brush dragging
Refactor createBrushHandler
Add visible overlay for brush
Add basic brushing support
Refactor hover handler
Move mouse coordinates to separate function
Use lists instead of named vectors
Send HTTP errors as UTF-8
upgrade DataTables to 1.10.5
Add shiny.port option
Mention app.R in runApp help
remove the list of content types and use mime::guess_type()
Re-generate shiny.min.js
Simplify return value
Remove obsolete multiInput code (#206)
Re-generate shiny.min.js
toJSON: special case for length-1 atomic vectors
Bump version to 0.11.1.9002
Assign request object in self
Set up onEnd before calling onStart
Update NEWS
Remove leading dot from private item names
Add class attribute to ShinySession object
Remove unneeded 'session' object
Use explicit 'self', and make ShinySession portable
Use explicit 'private'
Remove leading dots from public methods
Remove duplicated 'destdir' documentation
Use native R config for travis
Bump version to 0.11.1.9001
Switch from RJSONIO to jsonlite (again)
Clean up observeEvent and eventReactive examples
Re-document
Restore ability to dynamically set selectInput labels. Closes #741
Update NEWS
fixed consistency issues
Bump version to 0.11.1.9000 for development
Add NEWS item
replace `` with \code{} in Rd
Update cran comments
Update Date in DESCRIPTION
Clarify docs for shinyServer and shinyUI
Bump version to 0.11.1
Update gruntfile to watch for changes in DESCRIPTION
Remove jsonlite NEWS item
Revert switch to jsonlite
Update NEWS and bump version
Don't error when tabPanel has value but tabsetPanel doesn't have id
selectInput: add control for size (height)
Update NEWS
selectInput: use form-control for multiple and single
Update input docs to explain NULL label (#727)
selectInput: use BS 3 styling when multiple && !selectize. Closes #724
Update NEWS and bump version
Minify shiny.js
Correct event namespace filtering
Debounce sendImageSize
Check for unnamed arguments in ...
Update NEWS
fix spelling
downloadHandler temp files should have same extension as final download file
Update NEWS
Switch to modified ion.rangeSlider 2.0.3. Closes #711
Update shiny.min.js
Better documentation of plotOutput height (#705)
Remove unused width control in shiny.js
Control width for non-selectize select inputs
htmlOutput: allow custom container function
Allow control over selectize width
parseQueryString returns a list, not a vector
sliderInput: use width argument (#675)
Convert donttest examples; check for interactive() instead
Remove remaining RJSONIO references
Add IE=edge to X-UA-Compatible header
Make jsonlite::toJSON convert all objects
Bump version and update NEWS
Switch from RJSONIO to jsonlite
Add other authors to DESCRIPTION
Bump version to 0.11.0.9000 for development
Update cran-comments
More license updates
explicit parameter check
fixed application exit
renamed to destDir and documentation
updated run-url.R
Add cran-comments file
Re-document with roxygen2 4.1.0
Update LICENSE information
Negative margin for checkboxes/radios only after label (#678)
Bump version to 0.11
Add CONTRIBUTING.md to .Rbuildignore
Change name of shinyBootstrap2 package to shinybootstrap2
restrict changes to Linux (Qt5 on Windows is unaffected)
suppress Bootstrap top margin around radios and checkboxes in Qt5
add a pointer to the DT package
should inherit params from textInput instead of passwordInput
Remove duplicate text in reactive domain docs
Add info about using shinyApp and runApp together
Update NEWS
Add staticdocs entry for passwordInput
Use correct class for inline checkbox/radio label
closes #668: emphasize that I() does not work for non-root level elements in the options list in renderDataTable()
Update devtools install instructions
Implement passwordInput in the same style as textInput()
Listen for events on all html 5 text inputs types
Remove unused jslider css entries
withProgress: check that `session` is a session object
Add note about tools in main README
Make JSHint more lenient
Clean up importBootstrap code
README edits
Add minified shiny.js
Re-minify datepicker
Don't run shiny.js minification
Simplify npm install instructions
Add grunt watch task
Update tools/README
Add jshint task
Use grunt for minification of datepicker
Add Gruntfile
Bump version
Remove use of rstudio::viewer for R CMD check
Use minified jquery
Re-document
Update license information
Bump version to 0.10.2.9006
Update Bootstrap link
Update license information for ion.rangeSlider
Add instructions for installing old version
Update to ion.rangeSlider 2.0.2 (with shiny mods)
Dynamically get font-awesome dependency from showcase body
Update NEWS
Remove web resources for jslider
Re-document
Rename slider2Input to replace sliderInput
Update heuristic for step size
Add keyboard support for sliders
Re-document
Add slider2Input documentation
Improve tick and step heuristics
Set HTML data values to "true" and "false"
Simplify label code for slider2Input
Add deprecation message for format argument
Add format options to sliders
Add script for updating ion.rangeSlider
Add QT-webkit touch detection workaround
Add updateSlider2Input
Add animation to ionsliders
Add customized ionslider skin for Shiny
Add slider2Input
Limit width of inputs
update the version info of DataTables
Update tests for new select input structure
Wrap select inputs in div
the css of the processing indicator seems to be okay with Bootstrap 3 now
Update version and NEWS
Refactor showcase ui code to handle body tags
If UI has body tag, don't wrap in another body
Bootstrap 3 for DataTables
upgrade to DataTables 1.10.4
Make sure progress bars draw above other Bootstrap components
Better examples and docs for renderTable and renderDataTable
Bump version to 0.10.2.9004
Don't limit text/number/select input width
Add CONTRIBUTING file
Add meta viewport tag
Modify HTML5 shims so they are handled by htmlDependency
Add HTML5 shims for Bootstrap 3 to work with IE8
icon: add support for glyphicon library
Re-document
Update navlistPanel for Bootstrap 3
actionButton: add btn-default class,  for Bootstrap 3
Update navbarPage for Bootstrap 3
Deprecate 'collapsable' in favor of 'collapsible'
Add Bootstrap 3 note to README
Register callbacks for each Bootstrap 3 class
Update NEWS
Re-document
Set width of divs inside of flowLayout
Update showcase CSS classes for Bootstrap 3
Update slider animation buttons for Bootstrap 3
Reduce spacing above sliders
Adjust CSS for slider and selectize
Wrap inputs in div with class 'form-group' to maintain bottom margin
Update selectize's CSS to use Bootstrap 3
Correctly find checkboxes and radio buttons with Bootstrap 3
Update tests for new DOM structure of choices
Update tab shown/hidden events for Bootstrap 3
Switch from Bootstrap 2 to 3
fixed iconClass function
Make font-awesome a dependency for icon()
Update font-awesome to 4.2.0
encode the JSON response for DataTables/selectize with UTF-8
Un-normalize Progress values
Refactor for code review feedback
Add shiny-options to staticdocs index
bump version
Add documentation for global options
a news item for #630
make `escape` support column names in renderDataTable(), per suggestion of @jcheng5
fix the issue reported by Tareef: dplyr tbl_df objects are also data frames, but the default non-standard evaluation df[, j] will fail in dataTablesJSON(), so we need to coerce such objects to data frames explicitly
a news item for #627 [ci skip]
apply `escape` to column names as well
per-column escaping
escape HTML entities to avoid XSS attacks in DataTables
Update NEWS
Bump version to 0.10.2.9002
increase version requirement of httpuv
Add observeEvent and eventReactive functions
use encodeURI[Component]() and decodeURIComponent() from httpuv
Remove eventFilter for now
Update NEWS, bump version
Update shiny.R
fixes #605: send DT requests via POST instead of the default GET
Update NEWS
Bump version to 0.10.2.9000
Remove explicit dependency install for travis
Add global option for error handler function
Add ... to actionButton and actionLink
Remove unused withCallingHandlers()
Add test for observer error handling
Better handling of observer errors
Bump version to 0.10.2.1
Change some examples to donttest, to make CRAN happy
Update NEWS
Bump selectize version in html dependencies
Update to Selectize 0.11.2 with computedstyle fix
Bump version to 0.10.2
use typeof(x) === 'undefined' instead of x === undefined
add a news item for file uploading in IE8/9
fileInput() works for IE8/9 now, but they do not support multiple files
do not store the FileUploader in el.data('currentUploader') for IE (it does not have the .abort() method)
use the IE8 file uploader only for IE
I do not see why this needs to be changed
IE8 does not support iframe.onload; we need to use .attachEvent() instead
install mime for travis ci
Add import for mime
Force IE8 uploads to kick off reactive flush
parse the multipart form data POSTed and save the file info in .input
the iframe does not need src, and we should attach the onload event after it is appended to body, otherwise it will be destroyed immediately
the key problem with the form submission was that the name was missing
return a valid response temporarily
if evt.target.files is undefined, it is probably IE8; we will use iframe from POST to upload the files later
use uploadie instead of upload2 because of  regexec("^/([a-z]+)/([^?]*)" earlier ([a-z]+ won't match upload2)
config.sessionId is in this.shinyapp instead of this
use encodeURI() instead of the deprecated escape()
file upload via <iframe> for IE8
Add missing entries to staticdocs index
Re-document with roxygen2 4.0.2
Add inc method to Progress
Refactor Progress to have private members
withProgress: evaluate expression in calling env, not in a child
Add `position` parameter to `navbarPage`
bump version
Update travis config: htmltools 0.2.6 is on CRAN
Added a clarifying comment to serverInfo.
Update NEWS
bump version
fixes #306: should use file_test('-d') to check if a directory exists, instead of file.exists(), because file.exists('foo/') is FALSE even if the directory foo exists
update URL in DESCRIPTION
Updated external links to the Shiny Dev Center.
fixes #581: check for undefined instead of null
Faster Map implementation
Restore class attribute for Map
Cleaner method of getting execCount
Remove unneeded @.Data field
Don't add class attribute for internal-facing classes
Update NEWS
Migrate reactlog to use Stack
Reverse order of Stack as_list()
Faster stack implementation
bump version
add the R version requirement to NEWS
Revert "Revert "Remove caTools dependency""
Bump version to 0.10.1.9005
Update NEWS
Install R6 for travis
Add tests for nested query strings
Update tests for R6
Switch from refclasses to R6
update news to reflect changes in DataTables
implement case-[in]sensitive searching on the server side (#400)
send search.caseInsensitive to the server to make it possible to do case-insensitve searching
Field type should be a string
Replace == with ===
Use encodeURI instead of escape
escape the placeholders of search boxes in DataTables, and strip the HTML tags off
use the latest version of htmltools
closes yihui/shiny#4 after cleaning it up a bit
Adopted Yihui's suggestion to use $.makeArray() to fix a bug with searchField option in selectizeInput(), caused by RJSONIO:::fromJSON()
need a newer version of htmltools due to 5f4c8cf176f12e58b86d4b216a8d7bc0b9849b93 and the bug rstudio/htmltools#7
add instructions for upgrading from DataTables 1.9 to 1.10
background color for selected rows
get rid of the ugly trick eval(parse()), and use a plain loop to create a nested list
tweak doc and roxygenize
new option names for DataTables from Hungarian to camelCase notations
support [] in query strings like $_GET in PHP, because server-side DataTables 1.10 passes parameters as arrays
the names of keys and values are useless
tweaking the bootstrap style copied from DataTables:
fix a bug when the number of rows of data to show is zero
upgrade DataTables from 1.9.4 to 0.10.2; closes #487
fixes #573: use the new MathJax CDN
Bump version to 0.10.1.9004
Update NEWS
Update progress documentation
Add missing semicolon
Update metadata
Add createWebDependency and renderDependencies functions
Roxygenize
Add missing semicolon
uiHttpHandler: return NULL if no ui
Update NEWS
Look for server.R before app.R
Bump version to 0.10.9002
Remove single file example
Automatically display app.R file in showcase mode
Detect showcase mode for single-file apps
Revert "Remove caTools dependency"
remove addResourcePath warning for overriding an existing prefix
Add support for resize(el, width, height) method on output bindings
Update missing-UI web page to include app.R
Add single-file app example
shinyApp: use NULL default for ui and server
Add support for shinyAppDir with single-file app.R
Refactor file.path.ci, add find.file.ci and file.exists.ci
Remove accidental browser()
Add container for all progress items
Don't use multiline string in JS
Make progress position more customizable
a typo in the news for 0.10.1
bump version
fixes #557: choicesWithNames() turns a character vector to a list, which is no longer appropriate as a column in data.frame()
no need to use wrap = FALSE for roxygen2 now
a consequence of PR #552 is R 3.0.0
Make progressHandlers a simple object
Update NAMESPACE
Fade in bars
Simplify R API for progress
Export Progress generator
Make progress bar show on top
Simplify argument handling
Unify binding and page-level progress interface
Use new message format for progress reporting
Add missing 'var'
Improve handling of closed progress
Simplify code
Put progress stack in session object
Add Stack ref class
Get session without needing to pass it in
Copy over progress code from shinyIncubator
Bump to development version number
Bump version to 0.10.1
Add custom version of selectize.js to work around Firefox bug
one more check before we use UTF-8: see if there are embedded nul's
Remove caTools dependency
add explanations of skipping *nix when checking encoding, and point to the shiny dev center article
update comment with more specific browser notes
deal gracefully with elements that have no computed style available
warn against the byte order mark if exists; fixes #545
a news item for the optgroup feature
add links to examples in shiny dev center
an edge case selectInput(choices = NULL)
bump version
tweak the warning message
add a note section about the clickId/hoverId arguments in plotOutput(), since they seem to have been confusing grid graphics users
a single quote ' was omitted here, making the Rd for plotOutput() incomplete since this line was ignored
Use consistent indentation for function definitions
Simplify needOptgroup function
Enable union merge for NEWS
the options and ... arguments are no longer needed
explicitly define updateSelectInput() instead of using the trick to change the `options` argument of updateInputOptions()
Add tests for deeper nesting with choicesWithNames
Make listify work on nested lists of depth > 1
Add tests for default selected items
Add tests for selectOptions
selectOptions: handle mixed options and optgroups
Slight clarification of comment
Add tests for choicesWithNames
Always convert choices to a (named) list
fall back to native encoding on Windows if UTF-8 does not work
factor out .Platform$OS.type == 'windows' as isWindows()
R CMD check will warn against the possibly missing variables `inline` and `type`
rename newOptions to config
inherit doc for updateFooInput() from fooInput()
when we need <optgroup> for the child elements of `choices`, we just generate it no matter what the child element is
when choice is not a list, we need to return its first element
make updateSelectInput(), updateCheckboxGroupInput(), and updateRadioButtons() work
factor out the code to generate options from checkboxGrouptInput() and radioButtons(), and use the new generator generateOptions() for them
validateSelected() does not validate `selected` for the optgroup case; this function is only for shiny <= 0.9
choicesWithNames() should also consider the optgroup case now: all optgroup nodes must be named
closes #326: generate <optgroup> when `choices` is a named list of choices
recursively select the first choice, to make sure `selected` is a scalar, even when `choices` is a list of lists (optgroup)
json2.js modified and uglified from https://github.com/yihui/JSON-js via http://lisperator.net/uglifyjs/
let's read ui.R, server.R, README.md, and DESCRIPTION also with UTF-8
convert the message to native encoding from UTF-8 before decoding it
add a Note section to the documentation of conditionalPanel(), since it always confuses R users
fix #500: check for null source ref highlight points
Calling getOption() with default is slow
use UTF-8 for showcase mode, and assume DESCRIPTION is also UTF-8
append rather than replace knit_meta with Shiny warning
bump version
emit R Markdown warnings for render* functions as well as shinyApps
Revert "tweak after #492: capture.output() does withVisible() and print() if necessary"
bump version
add news for #512
Add windowTitle parameter to navbarPage
roxygenize
ignore width/height in plotOutput() when inline=TRUE, and document required width/height values in renderPlot()
merge doc of width and height in renderPlot() and plotOutput()
roxygenize
preserve the formal arguments of plotOutput() in outputFunc()
closes #501: knit_print() for inline output uses the `inline` argument passed from knitr
add an inline argument to textOutput(), imageOutput(), plotOutput(), and htmlOutput()
fix two more staticdocs errors
quiet apt-get and install.packages()
r-base should just work, since the packages that need to be compiled are installed via apt-get
shiny 0.10.0 is on CRAN now, so the dependencies knitr and htmltools should be automatically detected
a news item for #427
a news item for #516
Bump to development version number
UTF8 encoding for runApp(list(ui, server)) as well
the cachedSource() function is not used anywhere, so perhaps we can remove it
make sure JSON messages are always encoded and decoded with UTF8
make sure the HTML content is encoded in UTF8
assuming all the input R scripts are UTF8 encoded
Bump version to 0.10.0
typo: flowPanel --> flowLayout
Control precision of JSON numeric representation
explain why par(mar = rep(0, 4)) is necessary before plot.new(), per @wch's suggestion
set the margin to 0 before plot.new()
subdir=NULL is the default of runUrl()
the message is not very useful, given that download() will emit a message
closes #427: runGitHub() can accept "username/repo" in its first argument
the name variable is not used anywhere
let download() fail in this case (ref=NULL); since ref='master' by default, if the user provides another value, he/she is expected to have read the documentation
move runGist() and runGithub() after runUrl(), and merge their descriptions into the description of runUrl()
closes #213: merge the documentation of runUrl(), runGithub(), and runGist()
stats may not have been loaded in the event of .onLoad()
there should not be #' before @examples
Update NEWS
Bump version
Allow shinyApp objects to appear inside tags
bump version
copy the documentation of knit_print methods from htmltools, too
export knit_print methods imported from htmltools
declare the method through @method per @hadley's suggestion at klutometis/roxygen#256
bump version
no need to assign a copy of these functions in shiny, because we have imported htmltools, and we only need to export the imported functions
cosmetic changes after #481, and roxygenize
htmltools was in both Depends and Imports, against which R CMD check will warn
use @export instead of @S3method
introduce an equivalent function to achieve set.seed(NULL) in R 2.15.x
fixes #456: use .Random.seed only if it exists in the global environment
bump version
news for #433
news for #481
news for #495
serverInfo() returns list(shinyServer=FALSE) by default, per suggestion of @trestletech
tweak after #492: capture.output() does withVisible() and print() if necessary
bump version
bump version
Revert "Allow Shiny apps to appear inside other tags"
Install htmltools in travis script
Allow Shiny apps to appear inside other tags
Depend on htmltools, not just Import
Bump version to 0.9.1.9009
Restore HTML generating functions
Make S3 method consistent with base
Update htmltools version
Dependency fixes
Adapt to htmltools 0.2.1 API
Remove obsolete entry from staticdocs index
Add S3 method for turning render function into tags
Extract HTML functionality to htmltools library
Use svg version of build status. Only show master build status.
Doc tweak to validation
Suppress validation errors from printing at console
Validation error causes real errors to look like validation errors
Avoid black background when renderPlot doesn't actually plot
Don't print NULL to the console during renderPrint
fix #220: the first entry is not necessarily a directory
make sure the `selected` argument never contains names; fixes #428
upgrade selectize.js to v0.9.1 to fix the third issue in #428
roxygenize
examples of the 'width' argument
add width to selectInput() as well
validateCssUnit(width) for selectize and slider
roxygenize
add a 'width' option to selectizeInput() and sliderInput() to specify the width of these widgets
\emph cannot be used in \code{}: only \var and \link are allowed
fixes #429, which is yet yet another WAT of RJSONIO
a news item for the 'width' argument of renderPrint()
add a 'width' argument so we can control the width of the text output
capture.output() has already considered withVisible(), and we do not need to redo it
add functions serverInfo() (exported) and setServerInfo() (not exported)
Make sure random bytes are formatted with 2 chars
Bump version
Add inline options
Allow shinyUI and shinyServer calls to not be the last expression in ui.R and server.R
put the custom class(es) in the first as Hadley suggested
Stop using literate programming
bump version
Validation refactoring
Refactoring/renaming of validation
Remove delayedAssign which causes problems for downstream packages
Document session object
Clearer error message when shinyAppDir is given a nonexistent path
Slider with label=NULL doesn't have tag classes attached
Add inputPanel to staticdocs index
Remove slider from bundled jquery-ui
Only double-encode on Qt
since NULL in tag() will be dropped, there is no need to check is.null(icon)
cosmetic: both `if (FALSE) expr` and for-loops return NULL
tweak an RStudio project option
Only show special "No UI defined" message for shinyAppDir
Update tests
Separate option tags with newline
the logic of the last commit was not correct: we should not stop immediately on a non-condition object; instead, we still need to collect all messages on all conditions before we stop
roxygenize
rewrite the lapply()/vapply() with a plain dumb for-loop
add a function validateCondition() to avoid ambiguity
use shiny-output-error as the _prefix_ for CSS classes of error messages
filter out some common error classes
use the classes of the error condition as names of CSS classes in the output
factor out stop() code to a separate function
condition first, message second
encode pathname when necessary on browsers that supply it decoded
Tweak padding
Update NEWS, tweak description for flowLayout
Add inputPanel
Replace horizontalLayout with flowLayout; add splitLayout
Update NEWS
Use standardized widths for selectize/jslider
New horizontalLayout function; put elements in a single table row
we -> you
Always use Rscript from R_HOME
a custom type of errors for unsatisfied input dependencies
Make tabsetPanel result visible
Massively faster selectInput
Bump version
Change all "is()" calls to "inherits()"
Add tests
Upgrade jqueryui to 1.10.4 and remove datepicker
Make renderPlot print result if visible
Add maskReactiveContext function
Allow naked renderXXX functions to be used inside other tags
fix the warning about stats not being imported in namespace
Added extra query param to identify sub apps.
make the `selected` argument of updateSelectizeInput() work even in the server mode
factor out a function columnToRowData() so both updateSelectInput() and selectizeJSON() can use it
Make meta of length 0 when we are sure there are no dependencies
Make sure shiny app objects are not cacheable using asis_output(..., cacheable = FALSE)
Bump version
Ensure dep.meta is an array
Don't send reactlog messages to the client unless showcase mode
fail when attempting to insert a shiny app into a cached chunk
Bump version
Add element argument to getRateCallback()
Remove Rmd examples
Include html-preserving comments in knit_print
do not ignore the names of choices data
Add str.reactivevalues
Do typeset mathjax on initial load
Use html_dependency for date inputs, datatables
Use html_dependencies for showcase mode
bump version
should use MathJax.Hub.Queue() instead of .Typeset(): finally solved the mysterious race condition issue
Remove unused class
First attempt at HTML dependency management
bump version
fix subapps on portmapped URLs
Add uiPattern param to shinyApp to allow one ui to serve multiple URLs
fix some JShint issues
closes #422: update the selectize options via updateSelectizeInput(options)
cosmetic changes (re-indent code)
Don't indent HTML during knit_print
implementing the server-side selectize input
the development version of knitr can be installed from rforge.net
use more idiomatic syntax for resolving rmarkdown.runtime
have validateCssUnit treat unit-free character strings as pixel units
Make normalizePath calls Windows-compatible.
Rename tempSet to withTemporary
Allow NULL input labels; add actionLink
emit appropriate warnings in R Markdown mode; collect <head> contents
Bump ver
Remove unnecessary :::
Refactor private random seed code
Isolate createUniqueId randomness from rest of R
Doc cleanup
Clear handler manager anytime runApp is called
Render functions can be inserted directly into .Rmd
Automatically remove subapps when their owning session finishes
Move "@include globals.R" directives to top; slight doc fixes
More reactive domain work
Code review feedback
Port showcase mode execution highlighting to domains
Implement reactive domains
Ignore additional knit_print parameters
Travis!! *shakes fist*
Travis: Install latest knitr master
Comment tweaks
Get rid of "incomplete final line" warnings in showcase code
Make the worker ID global across all sub apps
Update staticdocs index, tests pass
Pass R CMD check
More docs
Add documentation for handlers/middleware
Allow the use of .Rmd files for shiny impl scripts
Remove obsolete print.shiny.appdir
Major refactor of runApp/addSubApp pipeline
Minor doc updates
Painful refactoring of server.R
Clean up exports, examples
Restore index.r entries for app obj
More-correct impl of %OR%
knit_print tags and tagLists
Implement Shiny apps embedded as iframes in knitr
basically library(pkg) = if (!require(pkg)) stop()
change the deprecated @S3method to @export
using the latest master of klutometis/roxygen (d823c3a088b20ea5e38a60d78d42ccbe9f1e1eec)
Add more information to selectInput docs
Bump version to 0.9.1.9000 for development
guard against null source references
handle no-argument output calls gracefully
Redirect on no trailing slash
Prevent multiple apps from stomping on server func
initial prototyping of subapps
submit shiny 0.9.0 to CRAN
use `skipStartupTypeset: true` for MathJax config, and call MathJax.Hub.Typeset() later
Refactor server logic into separate file
Use new staticdocs packaging standards
Include withMathJax in staticdocs; improve test
Mention showcase mode and allow-dots in NEWS
Proper escaping of name, value, and type queries
Wrap for= value in double quotes
It's important to return values in JS. heh.
Allow '.' character in input/output IDs
fixes #416: use tags$code() to escape the code in showcase mode
Change example licenses to MIT
Make showcase mode work with .r files
Change version to 0.9.0
10px bottom margin for selectize input
update the test for selectInput() accordingly
roxygenize
add selectize=TRUE to selectInput(), but disable deletion for single input
fixes #306: remove the possible trailing slash under Windows
we have specified winslash='/' before, so it is impossible that this char is \
Restructure logic and simplify
closes #119: we do not have to do this special treatment to the label for sliderInput, and no other inputs do as.character() for their labels
More tag writing tweaks
closes #31: try to avoid scientific notation of numbers
add the missing Readme's and DESCRIPTION's for the examples
Faster singleton detection
the original hello-world example makes little practical sense -- it is unclear what really changed when moving the slider, especially when obs is large (we always see a "bell-shaped" histogram)
document the new features of DataTables in NEWS
roxygenize
the url of selectiz.js is already in Details
Revert "add selectize=TRUE to selectInput(), instead of adding a separate function selectizeInput(), per suggestion of @jjallaire"
Faster tag rendering
roxygenize
add a callback argument in renderDataTable() so that users can have access to the DT object
cosmetic changes
when the options is null, also show the search boxes
make it possible to filter numeric columns based on the specified range of the form "lower,upper"
iDisplayLength == -1 means "display all data" (#400)
respect the bRegex option (as well as bRegex_j for individual columns)
data.options is null by default
respect the individual bSearchable_j options in datatables
Use YYYY/MM/DD format only as a fallback
Add function for handling date strings in IE8
httpuv 1.2.3 is in marutter precise ppa now
spent two hours on this weird issue of disappearing checkboxes and radio buttons, just to find two missing backslashes for <label>
Avoid using browser URL with host of 0.0.0.0
implement bSearchable for individual columns (#400)
respect the bFilter option: when it is false, do not show the search boxes
closes #392: options in renderDataTable() can also take a function to return a list
a few cosmetic changes
xtable was built from R < 3.0.0 in the official ubuntu repo hence fails to load
the httpuv binary is not in the marutter/c2d4u PPA yet
klutometis/roxygen#191 has been fixed, so no longer need explicit @usage
bug fix: when evalOptions is of length 1, toJSON() converts it to a scalar; we need to use I() to make sure it is always a vector so that we can later $.each()
install some R package dependencies through apt-get instead of R to save time
fix Markdown content extraction on IE8
fix browser height detection and CSS on IE8
when searching is turned on, we need to make sure the filtering indices `i` are smaller than nrow(filtered data) instead of original data
fixes #401: pass numbers as character strings in updateNumericInput() to preserver numeric precision when possible
use IE8-compatible events; turn off highlighting in IE8
Add comment about format.shiny.tag's indent param
add selectize=TRUE to selectInput(), instead of adding a separate function selectizeInput(), per suggestion of @jjallaire
add a note in the NEWS that DataTables also works for IE8 now
IE8 does not have map() and forEach() methods
localize es5-shim.js
For IE8, $.text() does not work on <script>, so use $.html() instead
add es5-shim.js for IE8
add a note about the I() options in selectizeInput()
it is safer to evaluate the string inside ()
apply checkAsIs() to selectizeInput(), and store the names in data-eval in the script
factor out the code to determine which options should be evaluated into a utility function checkAsIs(), so that it can be applied to selectizeInput() as well
news for selectizeInput()
the search field must be renamed accordingly
new function selectizeInput() to use selectize.js
Add indent argument to format.shiny.tag
Revert "math expressions may come in through renderUI()/uiOutput(), in which case we have to re-typeset the math expressions"
remove includeMathJax() and use withMathJax() instead, per suggestion of @jcheng5
Staticdocs prefers lower-case .r on linux
Tweak two Rd titles
white spaces
math expressions may come in through renderUI()/uiOutput(), in which case we have to re-typeset the math expressions
Remove border radius on showcase well
Update server.R
news for #356
instead of assuming fnFooBar should be evaluated, let's use I() explicitly
it is okay to include README.md in an R package on CRAN now
ignore staticdocs/ when building the source package
use Rd2roxygen to convert the two manually written Rd files to roxygen comments, so that all Rd files are automatically generated from roxygen2 now
using roxygen2 4.0.0: the spurious changes are due to klutometis/roxygen#184 (text in Rd is no longer wrapped by default)
use @include to make sure the Collate field is correctly generated
strip white spaces
tweak news
Add index entry for absolutePanel
a news item for includeMathjax()
closes #25: a new function includeMathJax()
Suppress staticdocs test when run on a built package
allow display.mode to be provided for examples
Add check for staticdocs index correctness
Minor doc tweaks
Add comments about debouncing
Remove console logging code
Udpate to jQuery 1.11.0
Staticdocs index info
Remove caTools dependency
just to avoid the spurious warning in R CMD check "doRenderTags: no visible binding for global variable 'htmlResult'"
Don't show broken image when plot is empty
use values instead of names for radioButtons due to #340
Export renderHtml function and un-export singletons object
Add new object for handling singletons
Missing semicolon
and reactive({}) also works; closes #366
reactive(NULL) works now
Bind both mouse and touch events for jslider
Don't attempt to write if the connection is closed.
Flush react/output onSessionEnd
Added tests, stop converting NULLs to NA.
Removed deprecated function documentation.
Update inputHandler docs, revamped tests.
Define a non-S3 input registry.
Better handling of dynamically generated singletons
fixes #90: textOuput() can be put in any tag now
Remove extraneous library calls
cosmetic changes, just because Github is not aware of my new commits for the PR after it was down
a missing space
show the log files after R CMD check failures
need to run roxygen2
and a missing )
an extra )
move assignments out, per suggestion of @hadley
also include input ID in the warning message, per suggestion of @jcheng5
Unify jqueryui copies
make runApp arg take precedence over DESCRIPTION for setting showcase mode
remove extraneous parameter to startAppDir
Ignore NULL tag elements
update display.mode parameter and width for inputs
satisfy R CMD CHECK: validate srcfile, use with(tags rather than withTags
change DESCRIPTION Type field from ShinyShowcase to Shiny
make display.mode symmetric with DisplayMode in DESCRIPTION
improve code density and zoomed display of inputs
allow source highlighting in files other than server.R
simplify showcase mode setting in DESCRIPTION
complete refactoring of raw text output to tags$... methods
use tags functions for writing app info block
simplify & clean up construction of markdown content
yes, it is weird to select by names instead of values; now the weirdness has gone
news for #340
update JS tests accordingly
roxygenize
`selected` refers to values instead of labels/names of `choices`
per suggestion of @wch, we do not pass the selected/checked status in the message; the selected values are in message$value, and they will be set via this.setValue(el, data.value) in receiveMessage() in shiny.js
fixes #176: the problem of choices=NULL also affects selectInput()
pass the selected value(s) to checkbox/radio group
only do mapply() when length(choices) > 0, otherwise options = list(), and this will lead to an empty checkbox/radio group
it is not possible to do names(NULL) <- value, so return early when choices is NULL
for select input, setValue() with a nonexistent value turns its value to null
reflow comments (and a handful of code lines) to 65 characters
show license beneath code
add Readme.md files to most examples
Update to Cairo 1.5-5
change name of app start hook to be more consistent with app stop hook
update docs on updateTabsetPanel to reflect it's applicablity to navbarPage and navlistPanel
simplify handling of nested menus in tabInputBinding
add application run and stop hooks
add docs for icon argument to navbarMenu
add id parameter to navbarPage (support for tab input binding)
update DESCRIPTION files and a Readme; tweak spacing
clean up some comments and accidentally introduced whitespace changes
use correct selector for navbar menu auto-collapse
Minor doc tweak
Smarter cursor choosing for absolutePanel
Nicer printing of HTML tags at console
Add absolutePanel and fixedPanel (and jquery-ui)
don't auto-hide when collapased navbar submenu is clicked
make jshint happy (avoid leaking globals)
Forgot to roxygenize a previous doc change
Unlist dates to properly handle date ranges.
set height of code window based on height of surrounding window
don't emit superfluous newline at beginning of .R files
add descriptions for examples
fix incorrect character accounting with newlines
set sxs mode on load if browser is wide enough
hide entire well when app doens't have metadata in sxs mode
new layout: remove top bar, show app info by readme
coerce strings from DESCRIPTION to correct types
initial support for showcase mode from DESCRIPTION (not complete)
show contents of global.R if it exists
always use tabs to show code; show readme alongside code
nicer code tabs in code-alongside mode
use more bootstrap-flavored styles
use minified jquery ui
use rstudio fork of highlight.js
use side-by-side code and app instead of a popup window
use rstudio default highlight colors
use show with app / show below buttons to toggle
make initial transition a little smoother
make code position toggleable
begin restricting code height and scrolling relevant portion into view
move from popup window model to side-by-side model
move shinyapps gitignore to root
add new header-free showcase mode (use showcase=2 on query string)
restore javascript markdown formatter
gitignore for artifacts of deploying to shinyapps
move showcase-specific css to its own file
make jshint happy
add documentation for showcase mode parameter to runApp
improve docs on theme parameter
Bump Cairo to 1.5-4
Add type parameter to tabsetPanel to enable the use of pill style tabs
re-roxygenize
add navlistPanel function
re-roxygenzie
tweak news linebreak
merge from master
setAutoflush refactor for clarity
Incorporate code review feedback from @yihui
Features for easier explaining of reactivity
remove widths parameter from columnLayout; add width parameter to sidebarPanel and mainPanel
update NEWS
merge origin/master
fix R CMD check documentation errors
re-roxygenize
integrate icons into the rest of the ui
use markdown package instead of client-side md renderer
decouple showcase mode from app boot; factor out of shiny.js
add documentation on host parameter to runExample
fix documentation error in sidebarLayout
initial font-awesome import
refer to application layout guide
update link to component layout guide
all functions now work with fluid or fixed layouts
eliminate columnLayout (just use fluidRow)
eliminate horizontalPanel and pull left/right functions
move showcase js to its own file; fix cross-document bug on firefox
cross reference component and grid layout guides from help topics
Refer to Bootstrap without Twitter preface; link explicitly to v2.3.2 documentation
add title parameter to top level page functions
update examples to use sidebarLayout rather than pageWithSidebar
deprecation notices
tweak docs for theme parameter
ignore travis.yml in .Rbuildignore
enable Travis CI
update NEWS for theme parameter
fix node cloning on IE browsers
fix some animation and margin problems
clarify regions of app UI vs. showcase UI
add support for specifying an alternative bootstrap theme
fix highlighting for text points inside <SPAN>s
enable shiny applications to opt out of bootstrap responsive css
make default arguments of navbar page header and footer NULL
initial support for sending source refs for reactives (not wired)
remove head paramter from page functions
add showdown dependency
refactor showcase outputs from renderPage
initial support for Readme.md
enhance docs
add support for menus on navbars (navbarMenu function)
initial support for header generated from DESCRIPTION
concatenate duplicate attributes in tag definitions
Automatically concatenate multiple class attributes in tag definitions
Rproj changes: don't roxygenize; use --as-cran for test
Rd changes for R CMD check
prevent long line lengths for links to bootstrap docs
allow pullLeft/Right functions to take tags or lists of tags; validate that all inputs are tags
use paste0 where appropriate
improve style and behavior of code popout window
initial support for code pop-out
find column by sibling nodes
refine source ref location (columns still need work)
scaffolding for flashing executing outputs
fix incorrect ellipses arg in hr function
fix columnLayout function
allow row functions to take a class
update roxygen docs for navbarPage fluid argument
send reactive log information to the client
merge from master
update NEWS
update NEWS
add hr tag to exported html builder tags
add fluid parameter to navbarPage to specify fluid vs. fixed layout
more revisions to layout functions -- go back to page level constructs for fixed and fluid
highlight code with highlight.js
use built-in parseQueryString
show ui.R and server.R files in showcase mode
add validation of layout function inputs
showcase mode stub controlled by showcase=1 parameter
introduce more layout functions
refactor functions to use fixed and fluid explicitly and to introduce the notion of "layout" functions
Race condition where clientData$singletons can be NULL
move page functions to the top of the bootstrap-layout file
functions for creating lower-level bootstrap layouts
fixes #314: the data passed to htmlOutputBinding could be null
update NAMESPACE For removed panelWithSidebar
rename tabsPosition to position
remove panelWithSidebar (this scenario will be handled by more composable top-level pages)
remove condition attribute from tabPanel
re-roxygenize for tabsetPanel position argument
add header and footer arguments to navbarPage
use match.arg for tabsPosition
always assign data-display-if (it will be dropped if it's NULL)
Add example for actionButton
forward head parameter in pageWithSidebar
Improvements to invalidateLater docs
change name of position parameter to tabsPosition
Add position paramter to tabsetPanel to enable positioning of tabs above, below, left, or right of tab content
update NEWS
add optional head parameter to top-level page functions
conditional expression to determine visibility of tabPanel
docs for collapsable and re-roxygenize
auto collapse navbar menu on click
support optional collablable navbar
navbarPage and panelWithSidebar
re-roxygenize for host parameter
fixes #299: RJSONIO is unable to convert a matrix of 0 row to [], in which case we have to use an empty list() instead
Preface shiny input classes with `shiny`. Refine tests to use S3 dispatch.
closes #277: implement actionButton.setValue()
Add jshint options to suppress warnings
Check for own properties
Change function defs to vars
Update NEWS
Use ===
use globalenv() instead of .Globalenv; remove local()
Add updated version of jslider
Enumerate function variables, setup Roxygen to pass R CMD CHECK, added tests.
Update NEWS
Update to jQuery 1.10.2
Only allow access via localhost by default
Add quiet option to runApp
Bump version to .99 for development
Update version number in NEWS
fixes #288: moving shinyCallingHandlers() to a lower-level so that the shiny.error handler can be applied to observe() and isolate() as well
Move methods package to Depends
prepare the v0.8 release in the RC branch
Ah, brain poisoned by R's return() syntax; check if data is empty, then check data.colnames to make sure column names are passed in
fixes #286: if the data passed to renderDataTable() does not have dim==2, return an empty object
Make Shiny Server credentials available on session object
roxygenize and sync doc
tweak the roxygen doc for installExprFunction() (otherwise the second paragraph is treated as \description{})
news for shiny v0.8
the error object may not be interesting at all; just call the handler without arguments
a hack to remove the scrollbars in tab panels
make sure colnames is an array, even when there is only one column in the data
must empty the data table first
save $(el) in $el
should not have assigned installExprFunction() to func
use the new installExprFunction() instead of exprToFunction()
display 25 rows by default, again per suggestion of JJ
no CSS classes for sorted columns, per suggestion of JJ
roxygenize
debouncing is done single-handedly, thanks to Joe's smart debounce() function
roxygenize
allow users to pass initialization options to datatables
BSD license for DataTables
css for the processing indicator
the searching should use intersection instead of union
remove the ColumnFilter plugin; it is too heavy, and I just added the <input> by myself and implemented searching by individual columns
use the nicer bootstrap style
write a datatable output binding; the column names and action url are passed from renderDataTable() to the output binding
implement searching by columns
index from 0, sigh
now we can sort multiple columns: press Shift and click the column headers
implement sorting; the very basic features are there now, but this still needs a lot of improvement in terms of details
disable default sorting
make sure the data has two dimensions
a simple implementation of global searching
document renderDataTable() and dataTableOutput()
the ... argument is not really used
add dataTableOutput() and renderDataTable() for the DataTables library
white spaces
Parse incoming NULLs as NA.
add .csv to fileInput() to make it consistent with the tutorial (#280)
should pass a session object to invalidateLater()
Revert "Customize dispatch for NULL objects."
bump the required version of httpuv to v1.2
closes #238: use keep.source() for sys.source()
closes #236: use sys.source(envir=) instead of source(local=)
closes #272: the argument ws_env was not used anywhere
Customize dispatch for NULL objects.
Added S3-dispatched input parsers.
Don't clear timers when runApp returns
well, we still have to use do.call(`$`) on .self; closes #274
another attempt to close #249, using withCallingHandlers() instead of modifying tryCatch()
Update NEWS
Update to Bootstrap 2.3.2
notify iframe parent of disconnect when on the same domain
use a check hint (globalVariables()) in favor of modifying code in renderImage
roxygenize
a better solution for e.offsetX/Y in Firefox based on http://stackoverflow.com/q/12704686/559676
look up function by name (for R CMD check --as-cran)
allow a custom function for the launch.browser parameter
export and add docs for installExprFunction
simplify syntax for creating new debuggable expressions
roxygenize
no need to expose the documentation to users; expose registerShinyDebugHook to R so that R CMD check does not complain
tag Shiny server function for special debug treatment if needed
allow debugging Shiny server function itself
invoke debug hook function if present after instantiating app functions
we do not really need do.call() in these cases
Try up to 20 random ports if necessary
use .globals rather than .runContext
choose a random port for runApp and continue to use it for the duration of the session unless explicitly overridden
Conditional panel expressions were broken for typed inputs
save coordmap in $el.data() so it can be dynamically retrieved
Make websocket path relative to Shiny page path
Typo fix.
Typo fix.
Add mailing list information to README
websockets has been changed to httpuv
Bump version to 0.7.0.99 for development
Put man-roxygen in .Rbuildignore
Bump version to 0.7.0
Implement shiny.sharedSecret option
Wow, IE10 is *really* picky about websocket URLs
Make websocket URL work with IE10
Add docs for showReactLog. Un-export writeReactLog.
More updates to NEWS
Cleanups to reactive logging code for R CMD check
Doc fixes for R CMD check
Bump httpuv version dependency to 1.1.0
Update NEWS
Update sliderInput docs
Don't send websocket subprotocol
Added timestamp to reactive log.
Redue duplication in docs betwee date/dateRange
Add cross-references between input types
Re-document
Document range slider
Add is.reactivevalues function
Add compatibility wrapper for getComputedStyle in IE8
Class output of reactive. Also add print method and test
Added logging of start/stop flushing of reactives using a param provided via HTTP headers.
Changes to public-facing session object
Make WS request available on session object
Moved print out so we can put it where it belongs.
Added output of process ID on app start.
Add instructions for installing from GitHub
Allow Cmd+F3 to launch reactlog
Firefox scrubbing fix
reactlog: Support arbitrary temporal movement
Use more obscure keyboard shortcut for reactlog
reactlog: Firefox compatibility; visual tweaks
Configurable hover delay type (debounce/throttle)
Simpler math
Firefox locator compat
Add session$onFlush and session$onFlushed
Use crosshair cursor when plot supports hover/click
Restrict the number of observations to a valid, positive number.
Launch reactlog from Shiny app with F3
reactlog: Automatically run first step
reactlog: Show value changes
reactlog node shapes, visible labels
Reverse reactlog arrow orientation
reactlog code cleanup
Add showReactLog function
Introduce shiny.reactlog function
More visual improvements to reactlog
Improve appearance of reactlog
Work in progress
Add doc for workerId param
Make hover delay configurable
Retina display compatibility
Implement click and hover events on static plots
Add tests for escaping in tags
Preserve attributes in child tags
Update shiny-package
Export tagSetChildren and tagAppendChildren
Code review feedback, part 1
Implement reactivePoll and reactiveFileReader
Speed up input update functions
In tag functions, drop NULL attributes
Don't use named list items for selectInput and radioButtons
Refactor checkboxGroupInput
Refactor tag()
Add tests for creating nested tags
Add tests for adding children
Add observeEvent and eventFilter functions for handling events
Add tagSetChildren() and tagAppendChildren()
Expose session$input and session$output
Do away with dependsOnFile error
includeText should be HTML escaped
Add includeCSS and includeScript functions
Speed up radioButtons when there are many choices
Speed up selectInput when there are many choices
Add stopApp function, for returning a value from runApp
Incorporated a worker ID specification.
Add option for not using Cairo
Bump version to 0.6.0.99 for development
Remove annoying title="foo" tooltip on all tabset tabs
Document observer methods
Update reactives.R
Reorder namespace using latest roxygen2 code.
Exported validateCSSUnit function.
Bump version to 0.6.0
Update NEWS
Update NEWS
Documentation updates
Remove sendJavascript
Initialize slider at correct time
Export basicPage
Add basicPage function; like bootstrapPage with padding
Run apps without creating files on disk
reactiveTimer: don't invalidate when session closed
invalidateLater: don't invalidate when session closed
Bump httpuv version dependency
Update NEWS
Update NEWS
Update NEWS
Add tests for withTags
Add withTags function
Add comment in test
Add Makefile for building web assets
Documentation fixes
Add dateInput and dateRangeInput
Clarification of tagList help
Add callback for session end
Add priority to outputOption
Allow integers or numerics for priority
Add priority levels to observers
Move actionbutton into Shiny proper
Make external message handlers use 'custom'
Add message handlers
Add clientData to session object
Split sendMessage into type-specific functions
Add documentation for input updater functions
Workaround for Cairo resolution bug
Make updateFooInput functions behave like fooInput functions
Add dropNulls function
Allow setting labels for all input objects
updateCheckboxGroupInput: clean up and allow setting labels
Wrap slider in div so that it can be manipulated more easily
Add update-input functions
Add methods for setting bootstrapTabInputBinding
Streamline tests
Allow setting value of sliders when they have range
Add empty message tests
Make sure not to bind new-style multi-inputs
Add checkboxGroupInputBinding
Add radioInputBinding
Trigger change when message sent to input bindings
Add getState and receiveMessage support to selectInputBinding
Align checkboxes with labels
Put inputMessage in a queue
Allow listening on domain sockets
Add functions for sending messages to client
Add `selected` argument to `tabsetPanel`
Add messenge-sending support
Add input binding tests
shiny.js: allow setting inputs and getting input state
Undo license change
Code review feedback for version checking stuff
Bump version to 0.5.0
Give warning message on obsolete Shiny Server version
renderPlot: just return if width or height is NULL
Undo commit 'Remove redundant code in shiny.js'
Add section breaks in shiny.js
Send initial value of URL hash
Remove redundant code in shiny.js
Unbind controls in htmlOutput before displaying error
Update license information
Update NEWS
New method for detecting hidden outputs
Update NEWS
Add imageOutput function
Add to on.exit() instead of replace
Change license to GPL>=2
Separate private and public fields for input and clientData
Update NEWS
Add tests for parseQueryString
Move allowDataUriScheme into .clientdata
Add parseQueryString function
File uploads failed when no content type was provided
Send URL in clientdata
Add informative comments
Add renderImage function
renderPlot: send height and width along with image
Add plotPNG function
Rename ShinySession to saveFile
Create ShinySession$sendFile() and use from renderPlot()
Bump version to 0.4.1.99 for development
Memory-efficient file downloads
Allow shinyServer() to take clientData argument
Rename shinyapp to shinysession, and .shinyout_xx to .clientdata_output_xx
Rename .metadata to clientData
Add manageInputs() to handle metadata and normal inputs
Partial change to reactiveValues
Add shiny metadata channel and send pixel ratio
Bump version to 0.4.1
Don't animate when showing file upload error
More memory-efficient file uploading
reactivePlot: fix infinite recursion when height/width is function
Check for excessively large uploads before they begin
Update upload docs
Don't initiate file upload if no files were chosen
File upload improvements
Remove dead upload code
httpuv-style file uploading
Restore filter functionality
eventloop package renamed to httpuv
Conform to API changes in eventloop package
Greatly improve responsiveness of interruption on Windows
Restore startApp/serviceApp division of labor
Initial implementation on eventloop
Update NEWS
reactivePlot: correctly pass width and height to renderPlot
Bump version to 0.4.0.99 for development
Bump version to 0.4.0
Update NEWS
Treat unused outputs as hidden
Empty numericInput gets converted to NA
Make shiny.deprecation.messages option actually work
Remove unnecessary function() in renderXX
Update NEWS
Suspend overwritten output objects
Export exprToFunction
Add renderXX Rd files
reactivePlot: call height and width properly
Update documentation for renderXX
Change reactiveXX to renderXX
Make function for expr-to-function conversion
Add shinyDeprecated function
Re-roxygenize
Clean up instances of reactive() and observe()
Add label argument to reactive and observe
Change references of reactive 'functions' to 'expressions'
reactive() and observe() now take expressions
Documentation fixes
Add garbage collection tests
observe: add option to start suspended
Remove leftover testing string
Re-roxygenize
manageHiddenOutputs: check that output object exists
Call manageHiddenOutputs after timer callbacks
Don't allow another flush if currently in one
Better checks for hidden output objects
Add documentation for suspendWhenHidden option
Call manageHiddenOutputs when suspendWhenHidden is set
Run manageHiddenOutputs on app init
Stop extra update message from occurring on startup
Send output hidden state on init
Clarify suspend description
Observer: .flushCallbacks to .invalidateCallbacks
Change resume behavior for Observer
Add tests for suspended observers
Add suspended option to Observer
Add outputOptions function
Suspend hidden outputs
Update runUrl help and re-document
isolate help: mention debugging use and fix typos
runGist: accept new URL format with username
Chrome Frame compatibility
Follow redirects with curl for http
Add note about using local() with isolate()
Remove unneeded reactive() wrappers
Block some operators for shinyoutput objects
Cleaner method for creating objects with class
Add section markers
Add comments to test
Observers can be suspended/resumed
Bump version to 3.1.99 for development
Bump version to 0.3.1
Update NEWS
Add [[<-.shinyoutput operator
Better reactiveText test
Add tests for reactive function return visibility
Observable: save visibility state of function
Remove unneeded eval.parent
Flush all shinyapp instances
Bump version to .99 for development
Bump version and update NEWS
Add res dir to .Rbuildignore
Re-document
Add subdir argument for runGitHub and runUrl
Add runGitHub and runUrl functions
Remove failure comment
Documentation and examples for reactivePrint/reactiveText
reactiveText shouldn't capture print output
Escape percent sign in documentation
reactivePrint should not display invisibles
Move validateCssUnit to separate function
Re-roxgenize
Update NEWS
Better CSS unit validation
Rename reactivevalues_to_list to reactiveValuesToList
reactivevalues_to_list: add all.names option
Deprecate as.list.reactivevalues and add reactivevalues_to_list
reactiveValues(): improved check for unnamed arguments
plotOutput: check that height has proper format
Update NEWS
Rename 'dependencies' to 'dependents'
Add read-write wrapper class for ReactiveValues
Re-roxygenize
Remove subsetting operators from Map and Values
Two new recursion/circularity tests
Add back onInvalidate to Observer class
Un-export execCount
Clarify isolation test
Remove onInvalidateHint
Remove all pendingInvalidate
Don't call observers until flushReact()
Failing overreactivity test
Try LIFO pendingInvalidates?
Add execCount
Add ctx$.label to help with debugging
Use lazy evaluation of reactive functions
Add tests for isolate()
Add test for reactive evaluation order
reactive tests: count number of times observers are run
Add reactivity tests
Update NEWS
Update README.md
Add isolate function for accessing reactives non-reactively
Add implementation of reactive values
Update URL in DESCRIPTION
Bump version number to .99 for development
Update NEWS
Increment version to 0.2.4
Re-roxygenize
Use different method of accessing CairoPNG
Change maintainer
Update NEWS
Revert "Run invalidated hints only once per context"
Run invalidated hints only once per context
Suppress base64 output when tracing websocket messages
For png output, try quartz and CairoPNG before plain png
Separate request parameters from path; version 0.2.3
[BREAKING] Modify API of `downloadHandler`
Update package metadata for v0.2.0
Require Shiny at app startup
Trivial style copy edits to example 10_download
Update metadata for 0.1.14
Update version metadata
Clean up PNG file when no longer needed
I am stupid.
Update metadata for 0.1.12
Bring untar operations in-house
Squash another cygwin warning
Add CSS hooks for app-wide busy indicators
Add param docs
Implement arbitrary file downloads
Update metadata for v0.1.11
Dynamic plot sizing
Update metadata for v0.1.10
Add per-session GET infrastructure. Allow IE8/9 to avoid data URIs.
Issue #37: headerPanel HTML argument shows up in title
Address issue #35: Allow modification of untar args
More MIME types
changed html attribute of checkboxInputGroup from "selected" into "checked"
Pointer to Shiny homepage
Add linked example
Turns out GitHub doesn't like iframes
Add example to README
Update version
Add methods for including text, HTML, and Markdown files in UI
Export and document `observe` function
Shut down timer callbacks before runApp returns
More customizable error display
Much less flicker when updating plots
Rev downloader code
Change T and F to TRUE and FALSE
Capture stderr in download()
More robust setInternet2 workaround
Re-roxygenize
Use vectors instead of lists in UI elements
Remove problematic link (fails R CMD check)
Update NEWS
Add wellPanel and bootstrapPage functions
Update NEWS
Case insensitive probing for server.R, ui.R, et al
Download gists in binary mode
Remove RCurl dependency
Update docs
Update version to 0.1.8
Introduce input type hints
Run a GitHub gist
Do .Random.seed restoring correctly
Update NEWS
Convert JSON to UTF-8
Add `repeatable` utility function to stabilize RNGs
Add custom message handler support, console logging
Update docs for 0.1.6
bindAll should send initial values to server
Add uiOutput. Tweak comments.
Don't animate showing/hiding of conditionalPanel
Mark fileInput and reactiveUI as experimental.
Update websockets dependency version
Bump version number
Introduce shiny.http.response.filter option
conditionalPanel now triggers show/shown/hide/hidden event
[BREAKING] Simplify input binding callbacks
Add reactiveUI output type
Allow htmlOutput to contain inputs/outputs
Add conditionalPanel; JS API changes
Update NEWS
Improvements for output binding/unbinding
Upload example app should accept text/plain files
Improve blob handling browser compatibility
Expose and fix Shiny.unbindOutputs
Eagerly evaluate output name
Add missing param to prototype method
Refactor JS to use more consistent OOP style
Add NEWS for file upload
Add file upload feature
Update version
Update NEWS
Enhancements to Shiny transport
Allow binding and unbinding of Shiny input/output
Don't use WebSocket constant, it's not on IE8
Check inheritance properly
Packages can register their own URL namespace
Add checkboxGroupInput control
Extensible websocket creation
Execute sendPlotSize when anything is shown/hidden
Update NEWS
Upgrade to Bootstrap 2.1
Update NEWS
Let Bootstrap tabset send its selected tab as input
roxygen2 on my dev box
Documentation for numericInput(step)
Add step param to numericInput
Bump version/date
Add NEWS
Improvements to reactives and UI
Dynamic output bindings
Input binding enhancements
Remove comment cruft
Delay Shiny init to after document-ready
Don't debounce when animating
Use InputBinding for sliders
Infrastructure for extensible inputs
Inputs without names shouldn't be sent
Cleanup code, exports, radio values
Hook up modular input pipeline
Infrastructure for more flexible input handling
Update install instructions
New, simpler install instructions
Bump version
add .Rprofile to gitignore
update README with installation instructions
bump version to 0.1.1
sync readme to welcome
Only instantiate sliders if sliders are loaded
tweaks to readme
man page for shiny-package
update package DESCRIPTION
docs for output elements
fix types in bootstrap docs
docs for tabsets
docs for text and numeric inputs
docs for radio buttons and submit button
additional control docs
remove docs for startApp
remove more unexported functions from docs
remove internal functions from docs
break tag/tagAppendChild out into a separate help topic
add client param (rd file checkin)
fix typo in main panel docs
add docs for client param to registerClient
fix type in mainPanel example
don't export tagWrite or tagWriteChildren
simple docs shims for clearClients and registerClient
document top level shiny ui defintion functions
eliminate problematic usage section for HTML Builder Functions
change usage of tags in docs (was yielding a warning)
update namespace
Get rid of R CMD CHECK warnings
Document HTML function
Document and enhance builder functions
remove helpText from animation example
remove docs since they have been folded into the tutorial
update readme
Add doc for sliderInput's animate param
Rd docs for observe, reactive, reactiveTimer
Rd docs for runApp, runExample, shinyServer
Slider and animation docs
Use simpler output format for 05_sliders
More control over slider animation
Change git URL to SSH-style
Serialize logical attrib values using lowercase
Implicit initialization of jslider
Add htmlOutput function
Make slider send only 1 event per animation frame
shorten first readme bullet
bold recommended
update readme
use c for install packages
Slider improvements
updated readme
add comments to sliders example
don't use as.integer since it's no longer required
initial code for slider example
use span for textOutput
Back out accidentally-committed test code
Add rudimentary animation to sliders
Slider improvements, typed input values
Expose more slider options, add tick logic
dont import datasets into mpg ui
use reactiveText where appropriate
fix spelling error
change indentation for tabset app
user new header panel syntax for tabsets
headerPanel now includes a title element and just inserts a plain h1
roxygenzie
inlcude radioButtons in example 6
Observers defer first execution until flushReact
Comment tweaks
reactiveText -> reactivePrint
Support radio/checkbox; unlist input lists when unnamed
add comment noting immediate rendering of caption
add comments for examples 7 and 8
add comments for example 6
add main server comment for examples 3 and 4
different prefix for output comments
add comments to example 4
add comments to examples 2 and 3
add comments to example 1
load mpgData at startup
eliminate animation example
more widgets example
correct handling of variable inputs for helpText and HTML functions
example 2 should use a reactive function
export radioButtons function
stubs for examples we haven't built yet
use numeric sequences for example directories
use mpg dataset for user example
implement radioButtons (note that initial value isn't correctly sent right now)
rename model function to formulaText
add titanic example
add library(datasets) where required
add html ui example
remove br tags from reactivity example
add tabsets example
allow helpText to take multiple strings
remove allcaps and hash examples
add reactivity example
add text example
make min and max optional for numeric input
tweak hello initial value
use condensed style for tables
Use Sys.time instead of C code
More robust runExample logic
Bootstrap-styled tables
Integrate slider, more efficient input event handling
common.R => global.R
hello sample app
add support for select multiple attribute
Add support for progress indication
rename server function to shinyServer
Error handling support (very basic)
add jslider component
remove submit button from example 3
insert name/value handling for selectList (now has same behavior as manipulate)
remove html tags from example 3
change name of selectListInput to selectInput
bind directly to shiny css class names
flesh out Readme.md
add runExample function for easily running examples from within the tutorial
move doc and examples to inst directory
change applicationPage to pageWithSidebar
make tags module responsible for the export of the HTML function
eliminate withTags construct
fix HTML function
use panel suffix for tab components
export html tags from shinyui module rather than tags module
unify naming convention for tags module
remove jslider component
add COPYING and NOTICE files
liveText should not include a label (should be done at a higher level in the system)
submit button: change default caption and ensure it is wrapped in a block element
add comment on slider control source/dependencies
factor slider into core slider function and sliderInput wrapper for integration into bootstrap forms
merge
add primary style to submit button
initial implementaiton of slider control
initial implementaiton of slider control
add support for form submit button
add helpText widget
automatically generate ids for tabsets
add HTML function for including raw html
perform html escaping of attribs and text
use more natural attribute names now that we need to use withTags less often
export some additional commonly used html tags
ensure that attribute names don't conflict with tag names
explicitliy specify h1 element in headers
export a small set of text and heading oriented html tags
use padding rather than br for header panel
change name of application to applicationPage so as to be less likely to conflict with future apis
add some padding to the top of the header panel
change name of createTag function to tag
rename shiny core output functions with live prefix
Hot-reload of server.R
Hot-reload of ui.R
rename client.R to ui.R
improve names of functions in tags.R
use withTags where appropriate
implement withTags
Add option for printing websocket traffic
Don't plot unless width and height are positive
re-organize bootstrap.R
eliminate labelOnTop option
rename functions to clarify shiny core vs. bootstrap
support for otuput tabsets
use bootstrap for example 3
use standard html attribute names for components whenever possible
bootstrap for examples 1 and 2
eliminate withTags (couldn't get it to work properly)
roxygenize
Use new client.R/server.R scheme
recursively include lists of lists of tags
correctly handle lists of tags
unpack var args before calling createTag
break tags into their own namespace
Add Bootstrap 2.0.4 to shared resources
use html builder for example 2
add textInput function
change clientUI -> clientPage
remove example code from ui.R
replace defineUI and page functions with single clientUI function (page conflicted with base::page and having a single function seemed simpler)
use withHeadTags function rather than head directly (since it conflicted with base::head)
use withHeadTags function rather than head directly (since it conflicted with base::head)
Integrate UI builder into Shiny
HTML escaping utility function
comment out example/demo code
only self-close void elements
add doctype and charset to html header
Allow dynamic rendering of front-ends
allow attributes without values via NA
defer varargs processing until tag function
more work on html builder
Change startApp/runApp signature
Tweak docs
first stab at html generation syntax
more scaffolding for ui module
add initial scaffolding for ui module
update reactivePlot docs
Update Example 3 to use auto-sized plot
Add autosizing to reactive plots
Add client throttle/debounce support
Allow output functions to access shinyapp and their name
Values keys that start with . were not reactive
Allow deferred submission of input
remove launchApp
Include docs for launch.browser param
Better interactive app lifecycle management
Keep R responsive when running interactively
Take version number out of jquery filename
add launchApp function to run an app asynchronously and open it in a web browser
sleep for 100ms around calls to serviceApp (makes huge improvement in IDE responsiveness while apps are running)
Ignore Mac build directories
Add invalidateLater API call
Allow multiple clients to connect; doc improvements
Add time infrastructure, reactiveTimer
Pass input/output args to app func
Update gitignore
Add function for getting sys time in millis
add build type to project file
Allow running in package form
Roxygenize
Initial pass at packaging
Rename flush.react to flushReact
Use camel case for all functions and fields
Simplify output API
Simplify API
Don't crash on errors in callbacks
Drop 'shiny' from func names; layout changes
Make websocket URL port independent
Add summary to example 3
Add script for windows
Stop using private functions from websockets
Plots can now use <img>
Improve default table styles
Ignore .Rhistory
Update README, add proj file
Remove Ruby implementation... *sniff*
Generalize app serving
Implement Shiny server in R
Refactoring, plus Observable
First pass at R reactive lib
Make run script more modular
README edit
Bootstrap instructions
Make ObservableValue lazily calculate its value
More efficient message passing in both directions
Add support for input[type="checkbox"]
Slight tweaks to demo app
Remove RVM from run script
IT'S ALIVE
Minor refactor
Basic FR infrastructure
Add README
Initial commit
