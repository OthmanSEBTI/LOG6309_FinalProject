Disable parallel build in Make 4.4 (#12244)
Keep expression when normalizing is_struct in blame
Add time_zone_info as a choice for time zone support (#12239)
Add examples to Enum.group_by/3 (#12240)
Only build docs on ExDoc main on CI (#12238)
Recompile System from lib/elixir
Recompile System without .git for diffing purposes
Remove .git only on reproducible check
Pass the relevant module when generating unique vars for guards
Update automations
Publish hexdocs to s3 for main and version branches (#12235)
Update CHANGELOG
Generate docs_config.js for version chooser in ExDoc
Add IEx.Info for Range (#12236)
Document register
Improve docs for tracer events
Clean up formatting gutter
Default mix compile to --all-warnings
Generate unique vars in defguard
Update action.yml
mix format
Use :lists.keyfind/3 on hot code path in profiling
Avoid traversing lines if there are no comments
Optimize String.length for ascii
Release pre built composite action (#12234)
Include [if_undefined: :warn] on var metadata
Do not include module variables in prune_binding
Implement IEx info for DateTime (#12232)
Revert pruning of defmodule
Add prune binding to module tracing event
Assert there are no files if waiting/spawn are empty
Document char escaping for Path.wildcard/2 (#12226)
Consistently raise for circular module requires, closes #12225
Use previous --no-deps-loading naming for option
mix format
Add doctest metadata as tags
Prune binding from env and on literals
Add doctests to before?/2 and after?/2 functions (#12224)
Handle options consistently in with/1 and for/1 (#12223)
Check the project exists before checking the environment
Ensure proper error message on mix test when there is no test directory
Add before?/2 and after?/2 to Date, Time, DateTime, and NaiveDateTime (#12221)
Improvements to ExUnit
Remove duplication in cli formatter
Mention ELIXIR_ERL_OPTIONS="+fnu" on file encoding warning
Add prune_binding to Code.eval_quoted_with_env/4
Add a test for hygienic vars on eval
Add snippet when <%-- is not closed (#12218)
mix format
Refactor and normalize format
Include snippets in EEx errors (#12170)
Use orelse in for guard (#12217)
Remove file commit by accident
Improve error message for undefined application, closes #12212
Add spec for DateTime.from_iso8601/2 (#12215)
Include snippets in more syntax errors
Update notes on |
Add precision to error message (#12213)
mix format
Recurse over macro expansions in assert
Expand left side of -> in rescue, closes #12209
Warn when using override with in_umbrella
Do not expand or collect vars from quote in ExUnit assertions
Add more color configuration to ExUnit CLI formatter (#12208)
Refactor mix format text diff
Consider closing ) on keyword break, closes #12206
Do not perform completion on evaluated prompts, closes #12191
Mix.install accepts atoms as paths (#12204)
Remove unecessary parens in nullary type funs
Support "def cli" in Mix.Project (#12183)
Clarify mix format error message
Improve replace documentation of module regex (#12197)
Set compiler options throughout the whole test execution, closes #12189
Add more doc to debug_info (#12192)
Add example to ExUnit.Assertions.assert_raise/2 doc (#12190)
Use clearer style in Enum examples (#12187)
Use correct column in invalid alias terminator
Expand :for in protocols with the appropriate env
Add some minor edits to the struct docs (#12185)
Update CHANGELOG
Add note about after_compiler, see #12159
Add `--check-locked` to mix deps.get (#12184)
Improve URI tests
Skip unreliable stdin test on Windows
Expand default compile_env argument in expand literals (#12181)
expand_literal -> expand_literals
Add Macro.expand_literals/2 and do partial literal expansion in @
Define a callback for Logger.Translator (#12177)
mix format
Make pry tests less brittle
Add doctests for Kernel.ceil/1 and Kernel.floor/1 (#12176)
Use Blake2 when digesting source code files (#12173)
Perform __mix_recompile__? checks in parallel
Handle unused :uniq comprehensions (#12116)
More tests for malformed sequences
Don't warn if :user is not defined in Erlang/OTP master (#12168)
fix: typos on test and docs (#12167)
Improve coverage of malformed sequences in String
Ignore malformed pictographic sequences, closes #12165
Touch up hibernation description
Use @preferred_cli_env throughout test.ex (#12161)
mix format
Properly handle list output of :unicode_util.gc/1, closes #12160
Improve error message for invalid % { syntax
Add ExUnit.DocTest.doctest_file/2 (#12150)
Improve error message for too many arguments in access
Clarify interplay of stderr and async in captures
Add Range.split/2
Warn for nested calls without parens inside keywords
Add complete list of time units on DateTime.add/3 argument error (#12152)
Do not recursively traverse vars to simplify checker, closes #12149
Remove head blocking on Task.yield_many/2
Update release docs for runtime configuration without reboot (#12147)
Removes calls to exception raising functions in cp (#12146)
Harden release.yml (#12144)
Update CHANGELOG and docs
Address race condition in IEx test suite
Update Unicode to version 15.0.0 (#12143)
Build temp dir as part of the new process
Do not merge context as tags
Review Unicode documents according to Unicode 15
Clarify who does the logging in supervisor docs
Raise error message on missing metadata
Handle :port :undefined on URI.new
Do not spawn a process to read IO (#12138)
Add :close_stdin to System.shell/2
Use setup beam on CI (#12131)
Remove Cirrus CI (#12132)
is binding -> binds
ExUnit: define setup callback as private function (#12129)
Improve misc of docs for guards  (#12127)
Remove parser ambiguity within stepped ranges
Improve error message for unbound _
Do not delete enforce_keys on defstruct, closes #12126
Allow trailing comma in `xref group --group` parameter (#12125)
Accept --all-warnings on mix test
Do not crash when moduledoc and other functions are listed in only, closes #12120
Consistently use normalize prefix for AST changing options
Do not process binary modifiers as variables during type checking, closes #12121
Check for optional_applications when assembling releases
Document noproc behaviour in start_link_supervised!, see #11737
Add commas to bare usage of "however" where appropriate (#12119)
Make shell compatible with OTP 26 (#12114)
Convert to binary only in tests
Output diffs on mix format --check-formatted (#12109)
Do not cache inputs from .formatter.exs
Raise on missing struct for module conflict, closes #12113
Handle syntax_colors in quoted_to_algebra and dbg (#12106)
Do not use Keyword.split_with/2 on a list of atoms (#12112)
Add Map.split_with/2, MapSet.split_with/2 and Keyword.split_with/2 (#11482)
Add missing word in docs (#12111)
Future proof release automation
Also symlink src for rebar project, closes #12108
Improve logger deprecation warning from config files
Behaviour as runtime dependency (#12103)
List compile-time deps for after_verify
@after_verify should define compile-time modules
Mention IEx behaviour in dbg docs
Don't raise on overflowing floats in Float.parse/1 (#12099)
Update CHANGELOG
Raise when using Macro.dbg/3 in guards or matches (#12094)
Add TODOs
Improve error message
Update charlist documentation (#12091)
Use the result mapping to track waiting processes
Keep waiting in parallel compiler as a map for faster lookups
Only consume DOWN messages dedicated to the parallel compiler, closes #12087
Automatically install Hex and Rebar on deps.get/deps.update (#12090)
Only link checker process when we have to do some work
Update docs shell snippets (#12083)
Add support for automatic shutdown to Supervisor (#12077)
Update ExUnit.run/1 spec (#12081)
Add missing `@doc since` to `../0` (#12080)
Correct typo and add more info on shell process docs (#12079)
Minor Mix.Task doc updates (#12078)
Deprecate ... as a valid function call identifier
Do not set step to nil in ranges
Update IEx.Info for charlists (#12075)
Inspect charlists as ~c sigils (#12074)
Continue parsing after --no-pry, closes #12072
Expand pipelines on right-hand side of |>, closes #12070
Mix.install: Add :config_path and :lockfile options (#12051)
URI.append_query/2: Handle trailing ampersand (#12069)
Clarify CaptureLog level vs Logger level (#12067)
Run full load paths in mix format
Handle sigils in IEx help
Evaluate formating charlists as ~c sigils (#12064)
Bump ubuntu to 20.04 (#12062)
Improve docs in Task (#12058)
Improve wording in Task docs (#12060)
typo Where -> where (#12059)
Split the compiler process from the Mix process
Replace inner AST for bitstring modifiers (#12055)
Raise specific error for missing env
Allow multiple formatters per file extension and sigil (#12032)
Add spec for Enum.slide/3 (#12050)
Improve Calendar.strftime/3 docs
Add guards to Calendar.put_time_zone_database/1 (#12049)
Polish docs for Calendar.TimeZoneDatabase
Polish docs in the Calendar module
String.valid? should only take strings (#12046)
Show usage of @typedoc and @doc for structs (#12037)
Emit consistent position meta on fn capture traces (#12033)
Allow dry-run of notify workflow
Set correct permission in release action (#12036)
Only add if_undefined: :apply if necessary
Allow key-deletions and atom keys in System.put_env/1
Another example for IO.stream (#12031)
mix format
Write optional_applications to .app file
Do not use undefined as node name due to regressions in Erlang/OTP 24
Use setup-beam on Windows platform (#12026)
Improve logger documentation (#12025)
Remove deprecated option test
Do not lead body inference in cond, closes #12024
Add Process.alias/0,1 and Process.unalias/1 (#12020)
Support --sname/--name undefined and use it by default in releases
Use :sets v2 under the hood in MapSet (#12018)
Add nonempty_binary/0 and nonempty_bitstring/0 (#12022)
Keep documented return values after changing Mix.State to use :ets (#12017)
Improve spec for System.get_env/2 (#12019)
Add deprecations
Do not discard config on Logger.configure/1, closes #12016
Remove more conditional tests
Improvements to tasks
Warn on missing parentheses in bitstring modifiers (#11862)
Require Erlang/OTP 24
Start v1.15.0-dev
Commit pending test file
Lock mix compile.elixir to avoid concurrent usage, closes #12013
Convert Mix.State to a process and use better storage
Remove dialyzer workarounds (#12014)
Track all arities in imports inside quotes, closes #11651
Add Access.slice/1 (#12008)
Update CHANGELOG
Update CHANGELOG
Add dereference_symlinks to File.cp* (#12011)
Use tags instead of conditionals
Use describe blocks in file_test.exs
Improve error messages for dot syntax (#12003)
Update TODOs and deprecations
Typo fix for Kernel.in/2 documentation. (#12010)
Add TODO related to ...
Add Kernel.dbg/0 which debugs binding/0 (#12009)
Case insensitive module resolution (#12007)
Simplify and optimize fragment multi-line handling
Make Code.Fragment functions work across newlines (#11980)
Return exit code in elixir.bat (#12005)
Escape `$(MAKE)` path (#12004)
A better description for Enum module (#12002)
Ensure IO.warn in @after_verify are stored
Better docs for dbg/pry
Add @after_verify callback
Add CHANGELOG entry for dbg (#11998)
Bring back formatter pruning
Reenable formatters after disabled run
Support pipelines in the IEx.Pry dbg/2 backend (#11994)
Update type spec and tests for Regex.opts
Make sure release mode configuration cascades (#11990)
Improve documentation and examples about modifiers (#11993)
Share syntax colors between IEx and dbg (#11992)
Use fetch_env! for timezone database
Allow LINE to be set for tests
Show list opts when inspecting Regex (#11991)
Add basic IEx dbg callback (#11984)
Track dbg callback inside Mix projects
Ensure semantic recompilation cascades to path dependencies
Optimize variable loading in eval
Lazily expand module attributes to avoid compile-time deps
Do not assert order on struct fields
Add line-by-line evaluation of IEx breakpoints
Simplify passing of values to the checker
Start checker processes lazily
Add example to Enum.chunk_every/4 and Stream.chunk_every/4 (#11981)
First implementation of Kernel.dbg/2 (#11974)
Add specs to some functions in IO.ANSI (#11978)
Do not reset the lexical tracker
Add example with nested arrays to Enum.join/2 (#11979)
Automatically cascade generated: true on macro expansion, closes #11976
Treat requires from local macros as compile-time deps
Have File.rename/2 and File.copy/2 check path types (#11977)
Undeprecate Macro.unpipe/2
Register functions used in local macros as exports
Use Macro.expand_literal/2 were possible
Update DynSup reference in supervisor docs (#11973)
Update CHANGELOG
Add autocompletion of binary modifiers in IEx
Do not start apps on install with runtime: false, closes #11969
Clarify one sentence about DynamicSupervisor (#11970)
Improve docs to container_cursor_to_quoted
Remove compile-time dependency from defimpl :for, closes #11706
Improve DynSup docs
Improve docs
Use only major-minor on Rebar dir (#11966)
Do not emit already consolidated warnings during mix xref trace, closes #11899
Compile if mix format plugins are missing, closes #11915
Include reason on Code.LoadError
Keep file env consistently as an absolute path, closes #11964
Include column information on error diagnostics when possible, closes #11964
Improve diagnostic and compile typespec (#11962)
Remove unneeded assert from with_io/1 example (#11960)
Improve Macro.pipe/3 docs
Do not eagerly unpipe
Update CHANGELOG
Add `mix xref graph --group` option (#11943)
Add doc since to MapSet.symmetric_difference/2 (#11952)
Correct typespec for MapSet.symmetric_difference/2 (#11954)
Delete never matched clause in string_io (#11953)
Remove warnings from match? docs
Rename MapSet.disjoint to MapSet.symmetric_difference
Add disjoint function to MapSet (#11951)
Document that Kernel.match?/2 cannot take a variable pattern (#11950)
Map docs: update syntax is not for atom keys only (#11938)
Include backslash, space, and null byte in string escape documentation (#11945)
Small changes to 1.14-dev CHANGELOG.md (#11944)
Describe return value of `Stream.each/2` (#11941)
Improve docs for IO.binread/2 (#11940)
Make `mix xref graph --exclude` raise error for files that are not found (#11937)
mix format
Add literal_encoder option to container_cursor_to_quoted
Implement Enumerable.count/1 for lists
Improve docs and specs around custom log formatting (#11935)
Removes duplicated formatter call (#11934)
Add IO.Stream fields typespec (#11933)
Let `:runtime_config_path` accept false to skip the runtime.exs (#11932)
Note IEx' recompile does not include deps, closes #11894
Remove outdated TODO
Make Base encoding/decoding 100%/25% faster respectively
Raise when underlying erlang function doesn't return boolean (#11928)
Add missing return types (#11927)
Add examples to break
Dont change the exception type
Display friendly error when test name is too long (#11844) (#11864)
Add support for __MODULE__ in Code.Fragment (#11920)
Correct use of "who" (#11925)
Add Application.compile_env/4 and Application.compile_env!/3
Wrap more of the struct expansion stacktrace
Reorder format_status documentation (#11924)
Improve ExUnit's diff output for pinned struct match failures (#11923)
Add day/hour/minute on add/diff in Calendar
Improve calendar docs
Replace misspelt :nillify_clauses option with :skip_clauses in Module.get_definition/3 (#11921)
Add note on dot in code fragment
Replace misspelt helper nillify with nilify (#11919)
Move custom formatting docs to Logger.Formatter
Change MapSet.t definition to make Dialyzer happy (#11917)
Teach elixir.bat ELIXIR_CLI_DRY_RUN (#11916)
Add documentation about using guards for map fields (#11913)
Update instructions for Map.map/2 deprecation, closes #11912
Return keywords in Code.Fragment.surround_context (#11911)
Make Code.Fragment.surround_context behave consistently with windows line endings (#11910)
Bump actions/cache from 2 to 3 (#11908)
Bump actions/checkout from 2 to 3 (#11909)
chore: Included githubactions in the dependabot config (#11907)
chore: Set permissions for GitHub actions (#11906)
Add Float.min_finite/0 and Float.max_finite/0
Improvements to CHANGELOG
GitHub Template: Separate paragraphs when rendered (#11904)
Update CHANGELOG
Improve Inspect for structs (#11897)
Add remaining info for 1.14 CHANGELOG (#11896)
Improve Github issue template (#11902)
Show stacktrace if everything is pruned instead
Rename section to "Report an issue" in GH template (#11900)
Remove periods for consistency
Add structure issue templates (#11893)
Add PartitionSupervisor section to the changelog (#11892)
Small fix in docs for Application.ensure_loaded/1 (#11895)
Improve docs for RELEASE_MODE
Make documentation for hd/1 and tl/1 more beginner friendly (#11891)
Add typespec :delayed_write to File.stream! modes (#11890)
Add mix eval (#11861)
Improve docs for ExUnit.CaseTemplate (#11888)
Validate argument passed to "use ExUnit.Case" (#11887)
Correct specs semantics for hd/1 and tl/1 (#11884)
Skip docs on secondary bootstrap (#11883)
Rescue errors from formatting, closes #11880
Add example for Macro.traverse/4 docs (#11881)
Update prewalk and postwalk documentation (#11874)
Minor grammar fix (#11879)
Improvements to Code module
Docs improvements to Macro
Mix.Dep.Converger now tells which deps formed a cycle (#11873)
Introduce t:Supervisor.sup_flags/0 + Streamline specs (#11865)
Improve position typespec (#11868)
Normalize unicode characters once in tokenizer
Do not attempt to suggest starting tokens
Improve Code.Fragment.surround_context spec (#11867)
nfc and additional normalizations for identifiers (#11859)
Improvements to PartitionSupervisor
Allow any valid name for PartitionSupervisor (#11860)
Allow test modules to be compiled
Run Erlang/OTP 25 on CI (#11858)
Remove explicit reference to Kernel.SpecialForms.* (#11851)
Removes/Adds qualified calls to Kernel (#11852)
Copy-edit Supervisor docs + New types (#11849)
Update PartitionSupervisor implementation notes (#11853)
Manually link to functions with  multiple arities (#11855)
Replace default sorter in Enum.sort_by/3 with :asc (#11856)
Use zero-arity instead of 0-arity and so on (#11848)
Add examples to Enum.slice/2 docs (#11847)
Consider steps when slicing a list forward
Add spec to PartitionSupervisor.start_link/1 (#11846)
Polish docs for PartitionSupervisor
Add the :normalize_bitstring_modifiers formatter option (#11840)
Add tests for warning on atoms starting with a number (#11842)
Add note about Module functions availability during @after_compile (#11839)
Improve warning on quoted atoms, calls, and keywords (#11838)
Update section reference in Supervisor module (#11841)
Allow :warning to configure Logger Console color
Use :warning level for Logger threshold
Update t:Supervisor.child_spec/0 to reflect specs in minimum supported OTP version (#11837)
Improve t:Supervisor.child_spec/0 (#11835)
CHANGELOG: fix mention to Logger.put_process_level/2 (#11834)
Handle Calendar.strftime widths with "0" in them (#11833)
Clarify docs for Supervisor.start_link/2 (#11831)
Replace usage of "etc." (#11832)
Clarify value of :modules option, closes #11830
Add a guard to ExUnit.configure/1 (#11828)
Improve Exception blame for is_struct guard by reverting the macro (#11829)
When all tests are excluded, colorize summary in yellow with message (#11827)
Polish the docs for the ExUnit module
Grammar fixes related to A vs AN (#11826)
Improve docs for setup_all + on_exit (#11823)
Support filename in `mix format -` when reading from stdin (#11822)
Update README instructions for cloning ex_doc (#11821)
Document `import mod, only: :sigils` (#11816)
Optimize Enum.sort_by/3 when sorter is :desc (#11819)
Add --no-optional-deps to skip optional dependencies for compilation testing
Return proper syntax error on incomplete escape char in string, closes #11813
Do not expand expressions in IEx eagerly, closes #11807
Remove dead code in List.keysort/3 (#11809)
Add "@doc since" attribute to List.keysort/4 (#11810)
Mention module docs for EEx options
Add docs for the "options" argument in EEx.eval_string/3 (#11805)
Add allow_nonexistent_atoms to OptionParser spec (#11804)
Support more stacktrace formats in IO.warn/2
Change import metadata to imports as a list
Add when :asc/:desc were introduced in Enum.sort/2 (#11803)
GenServer: Rename `continue` argument in handle_continue/2 (#11793)
Raise ArgumentError when inspect protocol options don't match struct (#11801)
Update CHANGELOG
Do not add new line on all empty mix format
Do not format empty lines into line breaks (#11802)
Warn on underived derives, closes #11799
Generate less code in defstruct
Inline more code in Enum
Allow slice to overflow on both starting and ending positions
Improve docs for Task mfa field (#11795)
Store :mfa in the Task struct (#11794)
Support :test_elixirc_options in mix test
Update Copyright owners to manpages. (#11792)
Add ExUnit.run/1 to rerun test modules (#11788)
mix format
Update IEx.Helpers docs for open/1 (#11787)
Define how to_existing_atom works within modules, closes #11786
Clarify deps.compile will attempt to compile deps
Simplify recursion in ExUnit merge
Expand imports within describe, closes #11726
Warn if a protocol has no definition, closes #11588
Update CHANGELOG
Do not collapse small floats, closes #761
Add error details to ErlangError (#11779)
Adds start_link_supervised (#11769)
Remove trailing whitespace (#11782)
Use double # for comments in release script (#11781)
Mix: Remove exclamation mark from message release command (#11780)
Evaluate --dot-iex line by line
Return no_translation error in StringIO put_chars as in Erlang (#11756)
Supress output in doctest in String module (#11776)
Remove warning in Kernel default tests (#11777)
ExUnit: Group colliding test names in tests (#11774)
Add missing known tag `:describe_line` to ExUnit.Case docs (#11773)
Make individual files in `escript.build` example better distinguishable (#11772)
Do not generate more stacktrace than support on eval errors
Use stdio when boot fails to avoid cutoffs
Optimize Enum.with_index/2 for lists (#11765)
Add dark logo in README with #gh-dark-mode-only (#11768)
Add short hash to tmp_dir in ExUnit to avoid test name collision (#11764)
Talk about the byte representation
Improve docs for Unicode on String
Move error cases to new defaults_test.exs
Clarify what the correct xor precedence should have been
Mention key optionality for literal keyword typespecs (#11757)
Do not store logs when storing timings
Revert "Add compile-time dependencies on require"
Only store test timings in CLIFormatter when --slowest is used (#11754)
Run after_suite even when no tests were ran (#11749)
Remove duplication in unicode tokenizer
Make Registry.send work when value part is present (#11742)
Add ws and wss port configuration to URIConfig (#11738)
Warn if any of True, False, and Nil aliases are used (#11731)
Improve docs for then and tap (#11730)
Makefile: allow setting DOCS_FORMAT (#11733)
CI: Use latest ex_doc version (#11732)
Replace usage of comma with plus sign in "mix do" commands (#11729)
Remove new lines from multiline test name (with --trace option) (#11728)
Streamline release.yml Github Action with ci.yml (#11727)
Use EEP 54 pretty printer option
Do not mention compatibility in @dialyzer attr doc (#11725)
CI: Add build docs (#11724)
fix typo in the supervisor docs (#11723)
Improve error message clarity
Do not mention charlist segments in `<<>>/1` docs (#11718)
Change map updates type checking direction (#11713)
Add OTP-24.3 to CI (#11711)
Add more reasons to fallback to inet or inet6 (#11705)
Support ISO8601 basic format parsing with `DateTime.from_iso8601` (#11703)
Improve docs for throw
Add line in diagnostic for invalid struct key (#11701)
Document how to manually build URI structs (#11688)
Allow plus symbol in mix do as alternative to comma (#11696)
Add Logger.put_process_level/2 and rewrite enable/1 and disable/1 (#11691)
Add space before argument for documentation consistency (#11690)
Add missing word, closes #11686
Remove duplicated comment (#11687)
Raise when doctest's only function is undefined (#11684)
Make BEAM compression in mix releases opt-in (#11685)
Update Inspect.Algebra.fits?/5 spec (#11683)
Add examples other than keyword lists (#11680)
Add no_limit to Inspect.Algebra
Add release notes outline to CHANGELOG
Update CHANGELOG
Add Range.shift/2 (#11676)
Improve Macro.pipe/3 docs (#11679)
Update EEx.token() type (#11678)
Expose EEx comments as tokens in EEx.tokenize/2 (#11674)
Tweak type unification to fix infinite loop with recursive vars (#11664)
Only keep input in async_stream if necessary
Add zip_input_on_exit option to Task.async_stream (#11668)
Add `doc since` to `EEx.tokenize/2` (#11669)
Use main EEx tokenize API
Add EEx.tokenize/2 (#11667)
Remove TODO
Move some EEx syntax errors to tokenizer
Refactor EEx tokenizer (#11666)
Improve eval stacktraces on Erlang/OTP 25+ (#11665)
Skip --rpc-eval missing arg test on Windows
Adjust childspec documentation to note that DynamicSupervisor require the :id field (#11663)
Show errors for incorrect `--rpc-eval` usage (#11659)
Support general+reason metadata from EEP 54
Improve error messages from bad capture operator usage (#11656)
Profiler return the return value of the function (#11657)
Fallback to rebar3 when looking up command
Remove `{:from_app, app}` from typespec and docs (#11655)
Handle 'mix local.rebar' command options without arguments (#11650)
Remove Rebar 2 leftovers (#11649)
Update local rebar3
Add opening delimiter to sigil metadata/opts
Remove rebar2 support
Skip tests using Rebar2 on Erlang/OTP 25+ (#11643)
Deprecate rebar2
Recreate local.sample task fixture in test_helper.exs (#11640)
Add explanation for exit reason to GenServer (#11639)
Allow iodata in sigil formatting functions
Update Mix.TasksTestTest for Erlang/OTP 25 (#11637)
Update Mix.DepTest for Erlang/OTP 25 (#11636)
Improvements to docs in URI and Module
Deprecate levelpad of Logger.Formatter (#11633)
Document delete_attribute+accumulate, closes #11635
Only check for unwanted functions (#11632)
Update CHANGELOG
Clarify app env usage (#11627)
Remove `child_spec/1` from `StringIO` (#11625)
Add binary_slice/2 and binary_slice/3 (#11626)
@doc false URI.Error.message/1
Add compile-time dependencies on require
Allow slicing with steps in Enum.slice/2 and String.slice/2 (#11624)
Add .. as a nullary operator that returns 0..-1//1 (#11623)
Simplify process of copying SpecialCasing.txt
Improve Unicode module update instructions (#11622)
Allow only single- and highly restricted mixed-scripts in identifiers (UTS39 C3) (#11621)
Handle more unicode sequences in split_at, closes #11617
Only flags with multiple args can conflict
Add all command line flags as reserved application names, closes #11613
Remove usage of outdated MapSet in doctests
Change `Version.Requirement` inspect to use expression (#11616)
Change `MapSet` inspect to use expression (#11615)
Change `Version` inspect to use expression (#11614)
Change `Date.Range` inspect to use `Date.range` (#11612)
Further improve docs
Clarify docs and slightly optimize String.contains?/2
Use module and init_arg on DynamicSupervisor.start_link/3 for consistency
Raise exception if no PID is found (#11575)
Track all stale modules from config/lock as exports too
Update CHANGELOG
Tiny improvements to run_in_apps
Add the ability to limit tasks in given apps in umbrella applications (#11593)
Handle diff with strings as improper tail, closes #11607
Improve docs for Application to mention new warning
Do not break signatures over multiple lines
Donnot ask to change cookie in releases if overwrite is set (#11601)
Clarify invalid type annotation warnings, closes #11597
Use a counter as Supervisor example for simplicity
Tweak documentation for `get_in` (#11599)
Set release mode after loading env scripts
Ensure versioned_vars are updated at the end of evaluation
Do not emit warnings when formatting code
Improve Task docs regarding supervisor benefits
Supply file and line to formatter plugins (#11591)
Check for fun arity in formatter
Embedded Elixir Expressions in Formatter Plugins (#11587)
Run unicode security linting on more tokens
Warn on confusable non-ascii identifiers (UTS 39, C2) (#11582)
Add example using file extension in Path.basename/1 (#11583)
Don't allow restricted characters in identifiers (UTS 39, C1) (#11580)
Update doc for Time and NaiveDateTime (#11578)
Streamline warning message with docs in Logger functions (#11577)
Improve docs for Enum.sort* (#11576)
Improve overridable examples
expand Kernel.in/2 docs re range check efficiency (#11570)
Add `URI.append_query/2` (#11566)
Enhance documentation for SpecialForms.try (#11567)
Use falsy intead of falsey (#11565)
Optimize Map.new/2
Document that duplicate keys in validate errors, closes #11563
Mention Enum in Date/DateTime documentation (#11564)
Update CHANGELOG
Add MapSet.filter/2 and MapSet.reject/2 (#11493)
Bring back filter/reject on Map and Keyword
Allow any expression in bitstring size outside of matches/guards
EEP 52: Support for size expression in bitstring matching (#11558)
Strip name from checksum file (#11561)
Add some specs and clean up docs for Macro (#11560)
Add spec to Macro.expand*/2 functions (#11559)
Polish docs in the Path module (#11556)
File.write!/2 call File.write/2 to DRY (#11555)
Add nudge to do expression error (#11552)
EEP 52: Allow pins inside map keys in matches (#11544)
Add Path.safe_relative/1 and Path.safe_relative_to/2 (#11542)
Document logger messages, closes #11546
Reduce the amount of generated code for defdelegate
Raise ArgumentError when defdelegating points to the delegating module (#11545)
Remove references to HiPE (#11543)
Run formatter
Use :erlang.atom_to_binary/1 (#11541)
Add Stream.transform/5
Bump Erlang versions on FreeBSD CI
Add Node.spawn_link (#11540)
Remove support for Erlang/OTP 22
Update docs for ExUnit.CaptureLog (#11538)
Use consistent argument name in DateTime doc (#11537)
Add name lookup to pid/1 helper (#11536)
Add assignment as generator documentation at for comprehension (#11534)
Use more precise headers on Date function docs, closes #11533
Access callbacks always receive structs
Automate notifications
Add mail.exs script
No longer version archives
Update instructions
Pre-built Elixir release (#11522)
Define exception field as true instead of term when expanding struct type (#11528)
Remove unused variables
Do not raise when diffing unknown bindings in guards
Remove reference to t:Enum.t/0 in Typespecs page (#11521)
Warn on zero arity callbacks inside protocols (#11519)
Add note about which attributes support guard notation in typespecs (#11518)
Streamline t:Enumerable.t/1 docs (#11517)
Simplify context module handling
Ensure context modules are handled in optimized defmodule
Do not use type exclusive to Erlang/OTP 24+
Add a note about grapheme boundaries to replace
Link to page in current docs for current CHANGELOG (#11511)
for and with special forms expect at least one arg
Add t:Enumerable.t/1 (#11510)
Allow bypassing application mode validation in release spec (#11506)
Check plugins first so they can format `.ex` and `.exs` files (#11507)
Minor correction in TODO comment (#11508)
Introduce multi-line comments to EEx via <%!-- --%> (#11505)
Delete as many files even on rm_rf failures (#11502)
Add Code.env_for_eval/1 and Code.eval_quoted_with_env/3
Simplify contract between checker and compiler
Make Base.decode16's odd-length message more helpful (#11500)
Remove double when on TODO comment (#11499)
Improve specs and docs in Macro.underscore/camelize (#11498)
Improve docs around String pattern functionality (#11492)
Do not emit warnings on Cursor.Fragment.container_cursor_to_quoted/2
Deprecate map/filter/reject in Map and Keyword
Revert "Add MapSet.map/2, MapSet.filter/2, and MapSet.reject/2 (#11493)"
Use Enumerable.t() outside Enum module (#11494)
Rename Enum.t to Enumerable.t for consistency
Clear up MapSet's collectable implementation
Update CHANGELOG
Add List.keysort/3 and performance notes to sort_by
Add MapSet.map/2, MapSet.filter/2, and MapSet.reject/2 (#11493)
Consider empty lists in String.split/3 and String.splitter/3
Make starts_with? and ends_with? consistent
Return the original string if the list of replace patterns is empty (#11488)
fix typo in Logger Runtime Configuration documentation (#11490)
Add a note about chaining multiple map+filter calls
Add pattern to Code.Fragment.surround_context/3
Improve DateTime docs
Reduce one level of indirection in Enum.into implementation (#11481)
Deprecate <|>
Add "since" versions to some module attributes (#11479)
Ensure async streams can be consumed from a separate process
Further optimize Enum.into implementations
Add PartitionSupervisor (#11468)
Improve Keyword docs and examples (#11476)
Update CHANGELOG.md (#11475)
Add Map.replace_lazy/3 and Keyword.replace_lazy/3 (#11474)
Add mix local.hex VERSION (#11473)
Improve docs for Macro.inspect_atom/2
Consistently halt with 1 on standalone options
Set a max line_length for Macro.to_string (#11471)
Handle block and multiline clauses without line length
Export types in Module (#11464)
Improve xref docs
Revert "Simplify inspect testing structure"
Normalize important notes
Simplify inspect testing structure
Track environment changes from compile_env
Do not cursor sigil after dot
Change approach: never show error if line is empty (#11466)
Run formatter
Handle improper lists on apply, closes #11465
Update CHANGELOG
Deprecate use Bitwise and ~~~
Remove unecessary @ in bat file
Add deep-merge example in docs for Config.config/3 (#11458)
Mix.Tasks.Test.Coverage warns on failure (#11457)
Add Stream.duplicate/2 (#11456)
Remove doc repeat iex example for Date.end_of_week (#11454)
Make sure --version flag halts elixir and iex, closes #11453
Only check for path as nil
Do not deprecate URI.parse/1
Clarify summary for Keyword.validate/2
Add clarifications to Access error message
Mention Mix.install/2 on protocol consolidation
Specific base typespecs (#11449)
Make protocol consolidation part of the Mix.install cache
Add Macro.classify_atom/1 and Macro.inspect_atom/2 (#11446)
Update macro.ex
Warn on ::: to avoid ambiguity
Colorize Version.Requirement source in Inspect protocol (#11441)
Add missing `@doc since` (#11443)
Add guards and specs to Identifier.escape/4 (#11439)
Disallow shorthand pipe after matches (#11433)
Update code example for unquote/1 (#11437)
Update CHANGELOG
Clarify docs for use/2
Decouple parser state from buffer in IEx
Update microsecond typespec (#11436)
Do not run test suite on mix test --profile-require
Still document nil as part of the URI path, closes #11424
Add Map.from_keys/2 and Keyword.from_keys/2 (#11432)
Unify traversal for runtime dependent modules
Remove pending compile_ref
There is no need to check for compile time refs as they are always recompiled
Track transitive runtime dependencies coming from local deps
Add note in Float.to_{string/charlist}/1 (#11359)
Improve Version.compile_requirement/1 (#11427)
Warn if an outdated lexical tracker is given on eval
Clarify documentation for Stream.transform/3 (#11419)
Move syntax errors to parser file
Do not print control chars as unexpected tokens
Add Version.to_string/1 (#11422)
Handle outdated anonymous functions in Erlang/OTP 25 (#11421)
Disable ssa and bool passes (#11420)
Emit checker warnings on compile_string/compile_quoted, closes #11417
Preserve opts while formatting failed inspect struct
Improve user experience when there is a faulty Inspect implementation (#11403)
Update CHANGELOG
Revert introduction of ~E sigil to avoid conflict with other projects
Skip errors on head of generated clauses, closes #11407
erlang.org -> www.erlang.org
Add Registry.count_select/2 (#11405)
Polish docs in Mix.Project (#11406)
Update links and include zoneinfo in docs
Warn on trailing commas on calls, closes #11399
Make all Inspect tests asyncronous (#11402)
Document default value for :safe in Inspect.Opts (#11401)
Update CHANGELOG
Add clarifications to `Task.Supervisor.children/1` (#11395)
Update `~E` docs (#11394)
Add ~E sigil to EEx
Revert "Clarify risk of duplicate keys in Map.map/2 (#11360)"
Reject bidirectional formatting characters (#11391)
Support escaping of terminators in uppercase sigils heredocs for consistency, closes #11390
Do not raise on variable looking like an empty tuple
Corrections & clarifications to Task.Supervisor docs (#11384)
remsh: stop evaluator before exit iex_server (#11386)
Allow Application.compile_env* to accept attributes (#11383)
Ensure fixtures are executed in archive test
Do not crash on duplicate bindings, closes #11378
Consistently return an empty list for System.stacktrace
Update CHANGELOG
Deprecate features pending for v1.14
Update remaining references to master branch with main (#11376)
Do not extract comments without a newline
Use keyword syntax by default in tuple formatting
Add `Mix.installed?/0` (#11374)
Update references to main branch
Keep yes?/1 as a callback, closes #11372
Do not reinstall dependencies on same Mix.install/2
Minor typo fix (#11365)
Ensure structs can be in release configs, closes #11364
Use ERTS instead of erts (#11362)
Clarify risk of duplicate keys in Map.map/2 (#11360)
Improvements to Enum.slide/3 (#11361)
Start v1.14.0-dev
Add @impl to provider example (#11357)
Keep keyword format of tuple last element (#11354)
Add Enum.slide/3 (#11349)
Typespecs: show expanded module name on inexistent struct field error (#11353)
Start `:update_counter` loop on Logger.Config init (#11350)
Pass sigil/modifiers through to formatter (#11348)
Use algebra concat instead of binary concat
Settle elixir_errors:parse_error/6 InputString as charlist (#11345)
Ensure Code.string_to_quoted input only needs the List.Chars protocol (#11344)
Only consider StartColumn on first line
Show code snippet on syntax and token missing errors (#11332)
Add URI.new/1 and URI.new!/1 (#11341)
Handle more incomplete expressions in cursor_context_to_quoted
Include column in warnings emitted by compiler (#11339)
Include column in more errors whenever possible
mix: Add `MIX_INSTALL_FORCE` environment variable support (#11337)
Return :eof for read(dev, :eof) and there is no data
Revert "Default to including columns by default"
Improve Enum.concat/1 signature docs
Default to including columns by default
Add specs and improve guards to Calendar.ISO.parse_*/2 functions (#11329)
Use singular in formatter filename in changelog (#11334)
Show hint if comparing different but equivalent strings
Handle comments in EEx between do and the first clause
Clarify name registration (#11327)
Checkpoint mix compile state from semantic recompilations
Tiny improvements to Task docs
Add specs to Calendar.ISO.parse_*/1 functions (#11323)
Remove redundant guards in Calendar.ISO (#11324)
Expand System.stop/1 docs on binary exit status (#11322)
Stop some apps after Mix.install/2
Work around earmark limitation for rendering
Correct verbiage in reference to other section (#11320)
Add missing `@doc since` (#11319)
Update Mix.install :system_env docs example (#11317)
Support :config and :system_env in Mix.install/2
Clean up a bit of unreachable code from iex/autocomplete.ex (#11316)
Refactor and format code
Support token_metadata in container_cursor_to_quoted
Add Macro.postwalker/1
Update CHANGELOG
Add struct field autocompletion to IEx
Add Macro.prewalker/1
Add Code.Fragment.container_cursor_to_quoted/2 (#11315)
Tokenizer uses static_atoms_encoder on quoted keyword keys  (#11313)
Group Unicode upcase/downcase by prefix (#11310)
Upgrade Unicode database to v14.0.0 (#11308)
Also mention pattern matching on hint
Simplify with Macro.operator?/2
Print Erlang levels in :console backend (#11304)
List ..// under Macro.operator?/2
Keep --only-direct for backwards compatibility
Clarify Mix.Project usage
Raise if app in mix new already exists, closes #11300
Handle optional_applications field in .app (#11301)
Improve docs and remove unnecessary field
Add a snippet to the docs of `defoverridable/1` (#11293)
Update CHANGELOG
Run formatter
Support CRLF in doctests, closes #11291
Parameterize doctest assertions with lines
Do not escape metadata in unquote with dynamic expression
Always show step when range is descending (#11290)
Add function_exported? fallback to year_of_era
Add missing @impl true annotation
Keep year_of_era/1 and year_of_era/3 separate
Change Calendar.year_of_era/1 callback to /3 (#11285)
Update README.md (#11287)
Focus on the public API defined by defstruct, closes #11286
Add import Mod, only: :sigils  (#11284)
Allow sigil modifiers to contain digits (#11283)
Reduce copy of MFAs and values on Task.async* functions
Add task ignore
Correct return type in Regex.scan/3 function spec (#11278)
Also talk about encoding on IEx docs
Clarify mixing quotes in location: :keep
Track module removals and deps removals in the Elixir compiler
Handle symlinks in temp directory on local.install
Make sure old manifests are purged correctly
Track when Erlang modules are removed in the Elixir compiler
Improve error message on bad Mix aliases (#11270)
Ignore `MIX_TEST_PARTITION` when partitions set to 1 (#11261)
Update documentation for `apply/3` (#11269)
fix(elixir/List): Better errors when arguments reordered (#11271)
Changes 'function' to 'macro' in 'sigils' section of Macro moduledocs (#11268)
Run the formatter
No longer encode missing docs as empty maps in chunk
Reduce memory usage when applying flat_map to an enum
Add documentation to the IEx.Info protocol (#11263)
Update CHANGELOG and docs
Annotate code to be removed on Erlang/OTP 24
Allow reloading multiple modules at once, closes #11251
Ensure protocol consolidation metadata is deterministic, closes #11249
Update references and add date+versioning
Also mark 0 line annotations as generated
Update CODE_OF_CONDUCT.md
Recompile file if @external_resource is deleted
Clarify conflict vs merging in config, closes #11258
Print number of compiling files on all cycles, closes #11252
Add support for `mix xref graph --label=compile-connected --excluded=...` (#11254)
Update CHANGELOG.md (#11255)
Update Code of Conduct
Update README.md
Improve wording on README
Add a section on issues tracker management
Ensure proper precedence of and/or in version requirements (#11238)
Highlight Mix.install/2 limitation
Set inspect_fun to the default when building the error message
Add an introduction to line coverage
Use Mix.Tasks.Format behaviour in tests and doc fixes
Remove dependency pruning
Do not prune deps on --no-deps-check
Support plugins in the formatter
Add Mix.Tasks.Format.formatter_for_file/2
Allow custom sigil formatting on Code.format_string!
Be clear about the scope of the issues tracker
Add power operator (#11241)
Do not depend on :maps module internals in Map.{filter, reject, map} (#11243)
Use a b instead of n for Integer.extended_gcd (#11240)
Implement {Map,Keyword}.{filter,map}/2 (#11239)
Pass annotation forward when building Erlang AST
Kernel.tap/2: Explicitly ignore return value for compatibility with Dialyzer unmatched_returns (#11236)
Accept EEx expressions where -> is followed by newline
Update logger.ex
Match warnings on third element, closes #11232
Also handle nfd at the beginning of strings
Standardize on do-end notation for the block syntax (#11228)
Use strict map update when key is expectedly present (#11227)
Remove cyclic boot check as it fails when restarting daemon
Add more variants to Process.spawn_opt type (#11230)
Deprecate env options in eval functions
Add guards to IO.puts/2 and IO.inspect/3 (#11226)
Document how Enumerable suspension can be tested (in `t:Enumerable.result`) (#11224)
Improve registry error message
Use translator_inspect_opts for translating reports too
Improvements to async_stream docs
Add a tip on --include-siblings
Keep metadata when showing callback docs, closes #11219
Improve config docs
Tidy up config reader/provider docs
Pass annotation to arguments in more scenarios (#11217)
Add more tests for sigils
Do not allow slashes in module names
Do not touch hashbangs when formatting, closes #11215
Improve feedback inside Mix.install, closes #11214
typos in Code module (#11213)
Handle OP/ARITY syntax more consistently
Write down manifest whenever deps change
Align with markdown spec, closes #11207
Properly normalize multiple args keyword list
IEx.Helpers.h: Support `<b>` and `<strong>` tags in erlang+html format (#11206)
Run formatter
Add retries to tests that write to stderr on Windows
Recompile only necessary files whenever config/lock change (#11201)
Revert "Make Inspect.Opts.new/1 stricter (#11192)"
Handle uppercase sigils
Update CHANGELOG
Deprecate != and ! in version requirements, closes #11199
Warn if Application.compile_env is called without a require
Add sigil and struct completion to code fragment (#11197)
Remove trailing whitespace
Check configs_mtime() on application tracer
Update valid? for docs (#11198)
Task Docs Improvements (#11195)
Add `@doc since` to `Code.string_to_quoted_with_comments!/2` (#11191)
Make Inspect.Opts.new/1 stricter (#11192)
Update CHANGELOG
Do not recompile Elixir source when Erlang modules change
Do not recompile Elixir files if mix.exs changes
Split project_file out of config_mtime/config_files
Do not pass invalid AST to code formatter in ExUnit
Cache compile.lock mtime
Raise on invalid use of compiler vars in match, closes #11189
Make sure .beam files still exist for restored files  (#11187)
Small improvements on docs of Regex related functions (#11186)
Update Port.command/3 docs (#11185)
Add mix xref trace that shows all deps for a given file (#11184)
mix deps.compile: Copy priv/ before compilation (#11183)
Copy Rebar3 ebin after compilation, closes #11182
Load consolidate protocols even on --no-compile
Add --if-missing option to mix local.rebar (#11179)
Small improvement on mix local docs (#11177)
Write Elixir manifest if there are more recent files
Improve expected clauses in function unification (#11173)
Remove duplicate spaces in Enum.all? docs (#11174)
Update notices
Let runtime pass check for unrequired macros
Infer tuple size from is_tuple/1 and add hint (#11171)
More examples for foldl/3 and foldr/3 + link to accumulator doc (#11170)
Add typespecs to Macro.Env.required?/2 (#11168)
mix format
imported_from -> lookup_import
_for -> fetch_
Add `--short-version` to Elixir CLI (#11165)
Provide APIs around Macro.Env and mark more fields as private (#11167)
Set REBAR_PROFILE to prod, closes #11166
Revert "Cache default environment on persistent term"
Cache default environment on persistent term
Break Macro.Env apart (#11164)
mix release: Update docs (#11163)
mix xref: Update docs (#11162)
Remove empty root nodes whenever there is a label
Keep proper side of compile time transitivity
Code.Typespec: handle column in anno on newer OTP versions (#11158)
Detect bad compile time purging in more scenarios
feat: add keyword validate (#11149)
Remove Mix.Env.vars from elixir_env.erl as well (#11157)
Remove leftover comment about Macro.Env.vars field (#11156)
Fully remove vars from Macro.Env, closes #11155
`String.split/3`: special case some additional arguments (#11154)
Remove private and deprecated vars
Update record reflection docs (#11153)
Update docs and changelog
Raise with specific erorr message when guards used in defdelegate/2 (#11152)
Update CHANGELOG
Add {:on_module, bytecode, :none} to compilation tracers
Add nillify_clauses to get_definition and doc metadata, see #11145
Add Module.overridables_in/1, see #11145
Add Module.attributes_in/1, see #11145
Add reflection of records, see #11145
Bypass evaluator on fast compile
More docs on Code eval
Add Code.Fragment.surround_context/3 (#11143)
Improve Code.Fragment docs (#11144)
Improve ExUnit.CaptureLog docs (#11141)
Improve ExUnit.CaptureIO docs (#11140)
Add `with_log` and `with_io` (#11139)
Do not require authority on merge operation
Handle spaces around expressions in cursor context
Keyword: change sentences from passive to active voice (#11138)
Overhaul of documentation for `Keyword` module (#11137)
Update references
Move cursor_context to Code.Fragment
Simplify ExUnit runner
Make doctest work for "Erlang" modules (#11134)
Check map ast actually contain args
Handle dashes in option error suggestion (#11133)
Remove unused catch
Better format blame printing
Do not return context tuples on optimized eval
Update mix release code snippets in docs (#11132)
Add operator handling to Code.cursor_context
Add `did you mean` to error for unfound CLI option (#11129)
Preserve heredoc indentation metadata (#11128)
Add `@impl true` to Mix.SCM.Git and Mix.SCM.Path (#11126)
mix deps: Add :subdir option to git deps (#11125)
Deprecate exit_code accordingly
Do not error autocompletion with module attribute, closes #11120
Change exit status for test failures to 2 (#11119)
Rename exit_code to exit_status for consistency
Write failed manifest when suite fails due to warnings as errors
Add warnings to Kernel.@
Keep backwards compatibility on Range and Date.Range (#11117)
Do not export and define at the same time, closes #11114
Do not crash when handling ambiguity errors, closes #11111
Check for empty cookie if file is missing, closes #11114
Augment documentation for `Kernel.match?/2` (#11112)
Keep backwards compatibility on range usage, closes #11110
Pass annotation to arguments, closes #11107
Add List.keyfind!/3 (#11106)
Purge v8 manifests properly
Only warn for invalid ascii escapes
Add since to Task.completed (#11102)
Add `Task.completed/1` (#11101)
Do not check status code on Windows
ref and owner in tasks cannot be nil
Only expand the right side of in/2 in bodies for small and simple literals
Exit with a status of 1 when coverage falls below threshold (#11095)
Only add at_exit if failures are positive
Add note about recent Erlang versions
Parse .: as expected, closes #11093
Remove unreachable code in String module (#11090)
Rely on modification time and hash to determine modified sources (#11080)
Optimize Enum.into/3 an empty list
Clean up deprecation of Enum.into non-empty lists
Remove warning and improve coverage on Enum.into/2 tests
Optimize Enum.into and Map.new
Provide a mechanism to set a default ERTS_BIN (#11086)
Ensure deprecated macros emit warnings
Optimize Enum.zip/2 (#11083)
Compile most recently changed files first
Allow :eof on IO.getn (#11081)
Don't discard comments column information (#11078)
Remove trailing whitespace (#11077)
Update reference to IRC channel in CoC (#11076)
Remove more internals from stacktrace
Update record extract documentation (#11075)
Optimize Enum.concat/1 for lists of lists (#11073)
Suggest proper escape code for invalid escaped char
EEx: Add since to :parser_options (#11072)
Add parser_options to EEx.Compiler (#11071)
Update sigil_r use as per docs (#11070)
Only percent decode if followed by hex digits
Provide more information on both byte_size and bit_size
Ensure unconstrained rebar deps generate valid mix specifications (#11063)
Preserve user choice on parenthesis before do block (#11061)
Add doc example for :"Elixir.AnAtom" (#11060)
Add examples to guards (#11058)
mix xref: Standardize errors (#11057)
mix xref: Error on invalid format (#11055)
ci: Use Ubuntu 18.04 (#11056)
Make right side of <- behaviour consistent across for and with
Update `Enum.zip_reduce/3` docs (#11053)
Add missing config file
Update CHANGELOG and deprecations
Do not add compile time deps on args to Application.compile_env/2, closes #11052
Improve docs for `sigil_r` (#11051)
Support multiple sinks and sources in `mix xref graph` (#11049)
Add `--fail-above` option to `mix xref` (#11048)
Improve the error message when apply fails (#11041)
Warn if ?\lettter is used but there is no such escape sequence (#11042)
Invalidate a module's tests in RunnerStats if that module fails
Add `@doc since: "1.12.0"` and comments (#11046)
Rename --only-direct into --label compile-direct
Add `--label compile-connected` option to `mix xref graph` (#11044)
Improve error message on byte_size from binary concat, closes #11043
Add ParallelChecker to stacktrace pruning
Add @doc since: "1.12.0" (#11039)
Run the formatter
Add more token metadata to aliases and remote calls (#11038)
Align profiling times for better readability
Ensure waiting is tracked across typespecs
Small grammar fix for Config Providers section (#11035)
typo: hd/2 documentation (#11033)
Track structs in typespecs as export deps
Remove --no-app-loading flag from deps
Move Elixir version check to before deps are compiled, closes #11032
Include clauses in fn definition, closes #10998
Also annotate temp var for remote call in map.foo as generated
Enforce keys when building Date.Range structs to avoid accidental building
Depend on Erlang for computing grapheme clusters (#11024)
Simplify reading of apps from deps
Avoid central bottleneck when loading apps if we know their source
Remove duplication across branches
Load apps concurrently
Clarify `Path.extname/1` behaviour (#11025)
Add `end` token to example to avoid possible syntax highlighting issues (#11021)
OptionParser.parse/2: Validate switch types/modifiers (#11019)
Update CHANGELOG
Better format Elixir exceptions in Erlang (#10977)
Compile time error when aliasing non-Elixir modules without :as (#11008)
Link to Libera webchat (#11015)
Revert "Run all available tests if there are no pending --failed tests"
Accept :locals_without_parens in Code.quoted_to_algebra/2
Wrap all invalid nodes in normalizer
Do not assume that literals in blocks have been normalized
Functions are not valid quoted literals
Ensure Mix.install/2 can be called after errors with deps (#11011)
Mix.install/2: Expand paths for path deps (#11012)
Change freenode reference to Libera (#11010)
Improve error message on invalid config
Prevent 2-tuples from being normalized twice (#11007)
Reduce size of Unicode module in 33% by not duplicating codepoints
Always patch meta line in normalizer if one is missing
Preserve metadata on regular blocks (#11004)
Use Code.quoted_to_algebra on Macro.to_string (#11003)
More fixes on normalizer
Do not assume delimiter is always available for sigils
Run formatter
More fixes for quoted_to_algebra/2
Update code.ex
Reorganize code normalizer tests
Expose more formatter functions in the `Code` module (#10988)
Format multiline inside interpolation on first run, closes #10996
Revert keeping of underscores between digits in camelize, closes #10995
Assume Elixir is not started when accessing configs
Tiny improvements to formatter
Add `Code.string_to_quoted_with_comments/2` (#10990)
Allow filtering modules from coverage using regex (#10954)
Split on \r\n and \n accordingly during unicode compilation, closes #10991
Silence httpc warnings
Run loadconfig before building escript/archive from deps
Update CHANGELOG.md
Update `Code` moduledoc to mention relevant erlang functions (#10989)
Improve unused type variable message, closes #10985
Change formatter comments from tuple to map (#10986)
Remove sub_dirs support from Rebar 2 (#10981)
Build rebar3 dep structure before hand, closes #10978
Organize tests for rebar2 and rebar3
Add OTP 24.0 to Linux CI (#10980)
Specify how we track OTP versions
Improve error message for expression after keyword
Respect keywords in access in code formatter
Update ISSUE_TEMPLATE.md
Add --profile-require time to mix test
Clean up shared parallel checker table
Clarify docs
Add IO.stream/0 and IO.binstream/0 as convenience functions
Reduce the amount of module map copies when compiling
Update compatibility table
Add `@doc since` to System.shell/2 (#10967)
Add System.shell/2 (#10965)
Disallow streaming with max_concurrency=0 (#10966)
Allow unquote_splicing inside maps with no parens
Optimize Enum.unzip/1 for lists (#10963)
Improve ExUnit seed docs (#10962)
Remove note about length limitation in in/2 (#10960)
Clarify limitation of Kernel.in/2 for large lists
Mix.install/2: Recover from deps.get failures (#10958)
Provide more examples of Kernel.then (#10956)
Bump OTP version and fix CI on Windows (#10952)
Add documentation for `Macro.prewalk/2` (#10951)
Allow absolute path completion on windows (#10949)
Handle new significant key in sasl reports
Refrain GitHub CI from failing in development branches (#10948)
Document in Collectable docs the new range format (#10947)
Update CHANGELOG
IEx path autocompletion (#10895)
Remove unused code path and avoid transferring large maps, closes #10938
Hard-deprecate `System.get_pid/0` (#10946)
Add missing backtick in Code.cursor_context/2 (#10943)
Update __mix_recompile__?/0 code example (#10941)
Update error message on invalid external_resource value (#10940)
Add catch-all clause to Protocol.callback_ast_to_fa/1 (#10936)
Make functions attribute in protocols private (#10935)
Check function calls in guards (#10820)
Clarify mix local.hex documentation when both options are set (#10933)
Tail-call recursion `guarded_pow` (#10932)
Add line number in @callback and @macrocallback warning when inside Protocol (#10929)
Update Code.cursor_context/2 docs (#10931)
Add Module.reserved_attributes/0 (#10926)
Code.cursor_context/2 (#10915)
Add note about IP parsing
Simplify link in README file with 'mix new' task (#10925)
Use proper Unicode reference (#10924)
Properly case Elixir and EEx in tokenizer tests (#10920)
Mix.install/2: Add :elixir option (#10922)
Improve undefined function compilation errors
Warn if @callback, @macrocallback and @optional_callbacks defined inside protocol (#10912)
Do not crash on Path.absname(c:) (#10919)
Clean up README, closes #10918
Minor fix GenServer Doc (#10914)
Raise if local dep is unavailable while compiling (#10909)
Clarify documentation on timeouts (#10911)
Add documentation for qualified tuples AST (#10913)
Add IEx.Helpers.t/1 to module doc examples (#10908)
Do not respect MIX_DEPS_PATH for install commands
Use longnames to make CI happy (#10904)
Run Mix suite last
Improve docs for using Application.get_env/3 (#10903)
Improve URI docs & tests for IPv6 literals (#10896) (#10902)
Improve Task docs (#10899)
Path module will always return a binary() type (#10898)
Make sure we traverse all files when looking for definitions
Always pop the project stack
Improved wording in Struct Pattern Matching Docs (#10894)
Add `default` option to `Mix.Shell.IO.yes?` (#10892)
Add Struct Pattern Matching Guide (#10889)
Add tests and update CHANGELOG
Add functions for application wise log levels (#10854)
Allow default inspect fun to be set globally (#10859)
Support explicit ExUnit.run
Addition to @shortdoc documentation (#10885)
Explicitly mention relative and absolute URIs, closes #10884
Update Logger backend recommendations
Only try to inspect git! failures if response is a binary
Do not ignore unimplemented function headers from used modules
Add example to Task.async_stream documentation (#10876)
Add examples on more complex with clauses
More with
Simplify rules and error messages
Upgrade FreeBSD to 13.0 ALPHA in Cirrus CI (#10881)
Improve error message with invalid call at several locations (#10879)
Make message in error suggestion generic for ones or more suggestions (#10878)
Update CHANGELOG and remove defexception from forbidden calls
Mix.install/2: Allow calling with the same dependencies and don't generate .app file (#10875)
Update CHANGELOG
Update canonical instruction in Makefile (#10874)
Use docs canonical version in all built-in apps (#10872)
Standardize use of Erlang/OTP VERSION (#10867)
Update CHANGELOG
Sync unicode data to Unicode 13.0.0 (#10866)
Clarifications to Calendar.ISO
Remove invalid escaping of sigils, closes #10864
Make get_in consistent with pop_in and abort on nils
Update Unicode upgrade instructions (#10862)
Update Unicode to version 13.0.0 (#10861)
Use persistent term for tokenizer and bootstrap
Format source code with new rules
Quote range operator atom
Do not copy whole test config to test process
Rewrite test to make sure it failed before
Pass xref's compile args to compile task (#10852)
Update Enum.{random, shuffle}/1 docs to OTP 22 (#10848)
Correct and improve definition of decreasing and increasing ranges (#10850)
Replace deprecated random seed algorigthm in tests (#10849)
Do not discard blamed stacktrace from exception in exit in ExUnit formatter
Update compatibility-and-deprecations.md (#10846)
More range copyedit
Copyedit Range specs and docs (#10845)
Simplify specs in Range by introducing t:limit/0 (#10844)
Use types were appropriate in Range
Keeping underscore between digits on Macro.camelize/1 (#10843)
Use one-based var names in Types (#10824)
Add notes about struct creation to URI and Version
Document ranges structs are read-only
Add Registry.values/3
Add line numbers of first expression to lists
Set correct value returned by `get_fun/2` callback (#10842)
Update docs for release with OTP 22+ best practices
Use :cover.local_only() by default
Remove TODOs related to Erlang/OTP 22+
Use -- instead of MapSet.difference/2
Remove Range.empty?/1
Use :erlang.system_info(:ets_count) introduced in OTP 22 (#10841)
Minor improvements to Integer docs (#10837)
Simplify Range's step error message (#10835)
Update range definition (#10834)
Require Erlang/OTP 22+
Remove Integer.to_string/1 and Integer.to_charlist/1 (#8777)
Start v1.13-dev
Optimize Stream.zip and Stream.zip_with with only lists
Remove Enum.zip_reduce_while, as it is equivalent to Stream.zip+Enum.reduce_while
Update CHANGELOG
Clean up docs
Bring zip optimizations for lists, add docs and specs
Add zip_reduce and zip_reduce_while (#10828)
Add MIX_INSTALL_DIR and use it in Mix.install/2 (#10825)
More docs on ranges
Make ExUnit tmp_dir absolute (#10826)
Update CHANGELOG
Streamline get_and_update specs for Access for Kernel (#10822)
Adopt EEP 54
Better structure exception test
More docs around ranges
Add step to Date.Range (#10816)
Improve warnings
More docs and code comments for ensure_compiled!
Add "namespaces" guidance to library guidelines (#10818)
Update CHANGELOG
Do not warn for configured runtime: false deps, closes #10624
Update CHANGELOG
Properly underscore :rfc3986
Improve GenServer docs (#10812)
Support stepped ranges (#10810)
Handle assert [%_{}] = [] (#10811)
Update warnings for OTP master (#10807)
Deprecate ^^^
Add a section on file-system watchers
Handle ambiguous unary op in keyword, closes #10806
Move parser tests to its own file and clean up private API
Update rebar3 docs
Also copy priv before compiling rebar3 deps
Add ensure_compiled! to better handle deadlocks, closes #10802
Do not hide deadlocks between imports and structs, closes #10800
Clarify syntax for prepending an element to a list (#10801)
Add :consolidate_protocols option to Mix.install/2 (#10797)
Add timeout: :infinity and ordered: false in compile.erlang task (#10796)
Parallelize compile.erlang (#10789)
Only get consolidated files for --cover if in load path, closes #10790
Update `mix test --failed` test comment (#10792)
Support remote.vm.args to customize remote commands
Run all available tests if there are no pending --failed tests
Recompile export dependencies when file is removed, closes #10784
Update supervisor.ex (#10785)
All @dialyzer module attributes also work for functions
All dialyzer module attributes are also function attributes
Update CHANGELOG
Raise clearer error message on number followed by identifiers, closes #10755
Warn on wrong dialyzer annotation to avoid breakage
Improve improper lists typespecs readability (#10782)
Clarify what type1 and type2 mean in maybe_improper_list typespec (#10780)
Allow heredoc inside heredoc interpolation
Add :newline to unescape_map
Add a section on formatter line length, closes #10677
Validate dialyzer attributes, closes #10534
Improve spec in Integer.parse/2 (#10776)
Raise FunctionClauseError when passing invalid arguments to Date.compare/2 (#10774)
Do not add compile time dependencies on @compile {:no_warn_undefined, _}
Clarify compile-time dependencies on module attributes
Rewrite not (foo in bar) to foo not in bar
Update Module.ParallelChecker.fetch_export/4 spec (#10772)
Show removal and deprecated tips from Erlang/OTP
Ensure protocols within the current project are consolidated with --cover
Do not discard empty paths when merging, closes #10771
Rectify usage of reader in release configuration (#10769)
Add more docs around config providers
Further trim down generated doctest size
Remove default requirement for rebar3 deps (#10766)
Avoid generating large ASTs on doctests
Note that dependency configs are not used (#10765)
Standardize use of "data types" and "data structure" (#10764)
chore: remove unneeded whitespace (#10762)
chore: remove unneeded trailing whitespace (#10761)
Add internal link to mix task docs in mix alias docs (#10760)
Run formatter
Pass env and target to Mix.Config readers
Copy upstream documentation change about regex ascii character class deficiency (#10757)
Use :os.env/0 in System.get_env if available (#10753)
Do not pipe to previous value on dual ops
Use proper comparison of otp_release
No longer auto-sort bindings
Use maps as bindings on Erlang/OTP 24 for faster evaluation
Update erlang test helper
Remove duplicated tests
Add Link to erlang doc and update http to https (#10750)
CI: Upgrade FreeBSD to 12.2 (#10749)
Improve error message when erasing symlink fails
Add documentation for `Kernel.apply/x` about clarity (#10748)
Refine docstring for String.duplicate (#10747)
Optimize Enum.join/3 for lists (#10746)
Optimize Enum.intersperse/2 (#10745)
Optimize Enum.scan/2 and Enum.scan/3 (#10744)
Handle :compile.file/2 returning :error on OTP 24 (#10742)
Support 16bit floats in bitstrings (#10740)
Optimize Enum.dedup/1 (#10741)
Expand example and explanation of `with` clause (#10739)
Update erlang.org links (#10737)
Migrate Erlang module URLs to Erlang module links (#10736)
Revise use of link titles (#10735)
Improve wording and typespecs in ambiguous datetimes (#10732)
Mark is_struct/2 code as generated (#10734)
Add comma after First at the beginning of a sentence (#10733)
Add RELEASE_PROG to releases, closes #10728 (#10730)
Improve grammar around "then" (#10727)
Cleanup waiting map on Task.Supervised.stream/6 (#10729)
Simplify nested call
Add clarification in Atoms section in Unicode syntax page (#10725)
Improve syntax docs (#10723)
Use underscores in plural in warning messages (#10721)
Deep merge and support argv on config/runtime.exs for escripts
Reload .app files for path deps in tracer, closes #10718
Add a note about tasks running once, closes #10712
Minor typo fix in ExUnit.DocTest moduledocs (#10711)
Preserve file mode when copying non-beam ebin files (#10709)
Improve Task docs to mention shutdown and different patterns
Update to main branches instead of master on git usage  (#10708)
erlsrv.exs typo in release docs (#10706)
Update CHANGELOG
Revert "Do not support negative dates on the basic format"
Generalize operator completion on IEx' parser
Update Erlang warnings translation (#10694)
Minor fix: remove/add new lines in Mix.Tasks.Test moduledoc (#10702)
Talk about the most common case first
Speedup Enum.min/1 and Enum.max/1 (#10701)
Add export dependencies on Macro.struct!
Add a section for working with structs on get_in
Make Enum.any?/1 and Enum.all?/1 faster (#10700)
Document that File.cd!/2 affects the BEAM globally (#10695) (#10696)
Support basic datetime format in Calendar.ISO parsing functions (#10693)
Rework Calendar.ISO parsing function tests and examples (#10692)
Update references to the latest ISO
Improve Calendar.ISO documentation (#10689)
Do not support negative dates on the basic format
Interpolate module attributes in match assertions (#10686)
Add basic docs for Kernel.ParallelCompiler.compile_to_path/3 (#10685)
Add functions for RFC 3986 compliant space encoding and decoding (#10680)
chore: fix callbacks amount in GenServer docs (#10681)
Run formatter
Blow up on bad inspect in doctest
Improvements to xref docs
Print task times on MIX_DEBUG=1
Standardize use of key-value pair (#10676)
Add Mix.install/2 (#10674)
Add documentation about line break normalization for line based streaming (#10671)
Do not set the limit for derived inspect, closes #10669
Explain why Enum.all?/2 returns true for empty enumerables (#10667)
Improve clarity of Enum.reduce/3 spec (#10662)
Update context error test (#10657)
Do not require RHS of and operator to be boolean (#10659)
Make tap/2 and then/2 macros (#10658)
Improve error message on invalid pattern on test (#10649)
Remove warnings in test in latest Git version (#10654)
Improve docs to EEx, closes #10653
Make mix.release script rand() work with busybox (#10645)
Add System.trap_signal/3 and System.untrap_signal/2 (#10650)
Remove redundant guard in Collectable.BitString (#10652)
Update CHANGELOG.md (#10646)
Consider sync time only when sync tests start
Prevent using wrong test context (#10647)
Refactor replace/4 to remove guards on replacement parameter (#10644)
Ensure changed files persist across mix compile.elixir cycles
Revert "Ensure that a manifest is generated even with no source code (#10591)"
Document head of line pipe treatment in IEx (#10641)
Use ERL_ROOTDIR
Allow erl ROOTDIR to be set, closes #10638
Write a section on interpreting test results
Print how much time is spent on async/sync tests
Support compression on Registry (#10637)
Revert "Update String.printable? character_limit typespec (#10635)" (#10636)
Update String.printable? character_limit typespec (#10635)
Optimize String.codepoints (#10633)
Optimize String.valid? (#10632)
Remove rename_deprecated_at
Make copy-paste of piped multiline expressions to IEx work (#10626)
Make day of month documentation more clear (#10627)
Improve example in Protocol.derive/3 (#10623)
Update to a more descriptive typespec in Macro.Env (#10621)
Document what exception impl_for!/1 raises (#10619)
Properly handle keywords followed by ::, closes #10599
Update CHANGELOG
Support all literals in guards, closes #10613
Run the formatter
Improve Enum.chunk_while/4 docs to clarify `after_fun` semantics (#10595)
Clarify writing documentation guide, closes #10610
Do not break inside interpolation
Add Collectable.into/1 to Deprecation list & update Enum.into/2 doc (#10615)
Return :error on decomposing regular tuples as calls (#10612)
Stremaline specs in Kernel.{tap, then}/2 (#10608)
Improve grammar in IO (#10607)
Extend functions/macros not allowed inside Protocols (#10605)
Add Kernel.tap/2 (#10604)
Add Kernel.then/2 (#10603)
Add @deprecated attribute to macros in Behaviour (#10597)
Simplify import handling in lexical tracker
Ensure that a manifest is generated even with no source code (#10591)
Set evaluation to empty space to fix string replace on batch, closes #10495 (#10586)
Copy include directory before compiling ebin for rebar3
Also warn for literal structs on min/max
Properly track removals on export deps, closes #10584
Remove invalid entry from CHANGELOG
Update CHANGELOG
Do not warn for attributes used in after_compile
Improve xref error message, closes #10582
Add documentation for Keyword lists with default arguments (#10581)
Improve documentation for Protocol module (#10580)
Documentation for multiple values in case (#10576)
Update task.ex (#10574)
Generate error for unused "do" expression in EEx (#10566)
Revert "Improve perf for Integer.gcd (#10571)" (#10572)
Simplify Enum.each/2 (#10570)
Improve perf for Integer.gcd (#10571)
Remove trailing whitespace from ex file (#10569)
Make comment unambiguous (#10568)
Do not discard context from with, closes #10538
Avoid computing powers if possible
Add an example of handling tasks inside a GenServer
Add handle_text/3 to EEx.Engine
Add line and column to EEx tokenizer
Deprecate use EEx.Engine in favor of explicit delegation
Add offset to DateTime.to_iso8601/2 (making it to_iso8601/3) (#10315)
Do not use unicode chars if ANSI is disabled
Improve error message on do-block in module attr, closes #10544
Add left out clarification in Enumerable count (#10560)
Add Enum.product/1 (#10559)
bin/elixir: Rename erl() function to erl_set() (#10557)
Add offset option to Regex.scan/3 and Regex.run/3 (#10555)
Doc Enum.with_index fun expects a zero-based index (#10556)
Document compile flag
Add support for functions on Enum.with_index/2 (#10552)
Update Tuple.sum and Tuple.product docs (#10554)
Add Tuple.sum/1 (#10551)
Add Tuple.product/1 (#10550)
Do not match on error_info on OTP 24
Be clearer about Enumerable.count/1 implementations (#10542)
Hide Enumerable.List.slice/4 function (#10541)
Improve t:Enumerable.reducer/2 (#10545)
Use defaults when the mix env or target are empty (#10537)
Take \r\n into account when computing heredoc indentation
Add `Enum.count_until/2` and `Enum.count_until/3` (#10532)
Verify arith error on bad inputs
Add Integer.pow/2 and Float.pow/2 (#10528)
Use one-based generated arguments everywhere (#10523)
Clarify duplicate docs warnings
Add note about optional mix dependencies not being started by application (#10521)
Consider macros and module attributes on the left side of ++ on ExUnit.Diff
Use one-indexed args for clarity, closes #10518
Do not generate invalid code when formatting no args with when, closes #10508
Document formatter newline behaviour, closes #10504
Preserve CRLF for heredocs, closes #10504
Add more examples to assert/2, closes #10503
Add since annotations
Update CHANGELOG
Add Module.get_definition/2 and Module.delete_definition/2
Add missing punctuation (#10515)
Specify that Mix.raise/2 is available from 1.12+ (#10509)
Improve error message on multiple doctest exceptions
Add guard clause on functions in string module (#10506)
Handle in memory modules in Xref.calls, closes #10502
Do not raise when checking for ambiguity with static_atoms_encoder, closes #10501
Speed up Regex.replace/4 when there is no match (#10500)
Throughout reject aliases starting with numbers
Properly expand option aliases followed by numbers
Wrap around :file instead of calling internals
Handle recursive vars in map values (#10498)
Clean up docs and support paths in EEx functions (#10499)
Set @tag :unix to exit code tests
mix format
Allow setting custom exit code on Mix error (#10463)
Update GitHub actions/checkout to v2 (#10496)
Optimize Enumerable.List functions for empty lists (#10494)
Add a note about pattern matching to get_in
Update README.md
Improve docs around Map.equal? and MapSet.equal?
Improve coverage and add type docs
Small improvements to access docs
Add :compressed to stream_modes spec (#10490)
Explain REF format in `mix.deps` output (#10488)
Dependency Handling section in Library Guidelines (#10487)
Pass the shell as argument when autocompleting
Remove unnecessary @doc false in defimpl (#10483)
Simplify merge and check unused vars
Deprecate System.stacktrace/0 across the language
Propose pin operator with unused overridden variable (#10479)
Check for stacktrace at compile-time and runtime
Use directional unification for matches (#10473)
Two minor doc fixes in ExUnit.Callback (#10472)
Skip application boundary warnings for protocols
Add TODOs
Consider CRLF on Windows, closes #10470
Update ansi.ex (#10469)
Docs: add more guidelines around parens
Prune tracers when fetching __ENV__ inside functions, closes #10466
Remove unused function
Remove allocator areas from runtime info (they are not allocators)
Mirror release permissions to the ones in OS package managers  (#10458)
Add expected type (#10459)
Update DynamicSupervisor option typedocs (#10462)
Minor change on 'mix release' docs (#10461)
Improve docs for Kernel.raise/1-2 (#10457)
Update function convert_time_unit doc (#10455)
Ensure manually set tracers are kept on compilation
Clarify that imports override, closes #10448
Handle aliases with code recursion
Improve Config docs (#10447)
Add more information when behaviour_info/1 is called locally (#10446)
Warn when using special functions locally, closes #10444
Do not crash if a module is given instead of file on inner compiler error
Add --warnings-as-errors option to mix test (#10435)
Unset CDPATH while finding RELEASE_ROOT (#10445)
Minor docs updates (#10441)
Do not use private and removed ram_file:compress/1 (#10439)
Allow @on_load to be private, closes #10438
Do not crash when getting docs for missing erts appdir
Raise for is_record guards, closes #10436
Update CHANGELOG
Add inet6 fallback to Mix usage of httpc, closes #10423
Properly handle tags inside typespec in Erlang docs, closes #10430
Improve error message in Stream.cycle/1 (#10427)
Streamline docs and function head for recently introduced zip_with functions (#10426)
Use Application.ensure_all_started/2
Bypass protocol dispatch on zip_with
Implements Enum.zip_with and Stream.zip_with (#10419)
Do not deadlock Logger if handler crashes on sync mode, closes #10420
Add :append to stream_mode, closes #10421
Ignore tracers if lexical tracker is dead or explicitly nil
Do not show warning when `super` is in `GenServer.child_spec/1` (#10418)
Rename a variable in Inspect documentation (#10416)
IEx help in place with tab key (#10339)
Do not crash when :reduce is set to nil in comprehensions, closes #10411
Improves the docs of config/runtime.exs and Config.config_env/0 (#10414)
Keep warnings when traversing clauses
Do not add runtime dependencies to remotes in typespecs, closes #10406
Update CHANGELOG
Remove TODO
Consider targets when filtering apps, closes #10405
Add tests to Keyword.{replace, replace!}/3 (#10404)
Document since version in List.{first, last}/1-2 (#10403)
Add tests to Kernel.struct/2, Map.{replace, replace!}/3 (#10402)
Intercept sigquit on ExUnit
Move parse to its own block and only set history/whereami when evaluating
Make IEx parser customizable (#10394)
Consistently use :lists.reverse/1
Updated Enumerable implementation for Stream (#10397)
Document Logger.Backends.Console (#10396)
Remove #=> before exception
Remove compilation warning in doctest in Kernel.binary_part/3 (#10393)
Raise if @enforce_keys keys are not found in defstruct
Move struct tests in Kernel.ErrorsTest to their own describe
Add default value for List.first/1 and List.last/1 (#10391)
Only check the mode after matching on the codepoint
Add :turkic mode option to String case functions (#10376)
Restrict Logger.configure on config_change callback (#10388)
Add "--warnings-as-errors" documentation to mix compile command line options. (#10387)
Take --dot-iex into account after shell respawn (#10384)
Enum.max_by/3 and Enum.min_by/3 dialyzer fixes (#10383)
Lift on errors (#10380)
Handle value vars in open maps without singleton keys (#10378)
Handle var | left_type < right_type (#10377)
Clarify args passed to callback fun in File.cp/3 (#10374)
Use timer function instead of manually calculating milliseconds (#10367)
ArgumentError example for binary_part (#10370)
Update CHANGELOG
Make config/runtime.exs deep merge, closes #10365
Fallback to regular attribute lookup
Remove duplicate assertion (#10366)
Catch dialyzer bug
Raise instead of crashing on when trying to use list operators in guards (#10363)
Keep invoking loadconfig on cli boot
Add a note on async_stream+take
Update docs of Task.async_stream to talk more about side effects (#10359)
Remove duplicated assert in quote test (#10358)
Remove fresh context to optimize in-body guards (#10356)
Improved performance of List.last/1 (#10350)
Rename struct attribute in defstruct (#10354)
Add guard checks to Keyword.update/4 (#10348)
Deprecate @foo() in favor of @foo, closes #10344
Make replace and replace! in Keyword consistent, closes #10345
Return an empty map instead of none for public but undocumented functions
Handle empty map in other places, closes #10343
Align doc chunks return with EEP 48
Update iso.ex
Append space on middle and start expr if necessary, closes #10340
Include ExUnit examples in files to format (#10342)
Be less aggressive on picking files to format
Speed up compilation with multiple describe
Introduce register_test/6 to speed up test definition
Reduce amount of injected code in case
Update helpers.ex
Update formatter inputs (#10335)
Update map.ex (#10338)
Properly handle reduce in types, closes #10224
Format missing Collectable implementation (#10334)
More typing improvements (#10333)
Improve docs and argument names for Collectable module (#10332)
Add v1.12 to Comptaibility page (#10330)
Remove boolean and number as builtin types (#10329)
Infer -> Unify
Remove duplicate tests
Add pending deprecation, update CHANGELOG
Start v1.12+
Add "since" doc metadata to File.rename/2 (#10328)
Hoist expressions when creating records, closes #10313
Document all built-in types internally (#10327)
Move type warnings (#10324)
Handle subtypes in map keys (#10323)
add "since" doc metadata to System.otp_release/0 (#10325)
Improve wording in Map module (#10318)
Improve links in pattern matching page (#10322)
Update CHANGELOG
Added ignore module option to coverage report (#10317)
Move struct handling from unify to AST (#10320)
Use 'gmake' instead of 'make' when compiling deps on NetBSD/DragonFlyBSD (#10319)
Finish tidying up tests
Add map test and shared type helper
Check map updates (#10316)
Move Checker into ParallelChecker
Run formatter
Move of_head to Pattern
Clear out patterns from types_test.exs and use aliases
Improve docs and move all types tests to a single directory
Reuse logic on exception blame and types errors
Only compute error if necessary
Improve map unification (#10310)
Improve doctests docs
Refactoring
Introduce a type hint system (#10303)
Document atom comparison (#10302)
Remove reference to unknown function
Simplify metadata operation
reboot_system_after_config is opt-in if using config/runtime.exs
Include Erlang severity level to Logger metadata (#10300)
Add `Registry.delete_meta/2` (#10298)
Update CHANGELOG
Update CHANGELOG.md (#10297)
Mention right associativity of the `--/2` operator in docs (#10294)
Add note about how new log levels are reported in Elixir backends
Correct title for Mix aliases section (#10293)
Pass code location to :logger.macro_log/4 (#10287)
Change link in "Protocols" section in Kernel docs (#10288)
Add data structure info to first arg in Protocol (#10283)
Use to_string chars on Logger.Formatter
Improve error message
Document metadata used by Task, closes #10203
Compare to test coverage threshold inclusively (#10275) (#10276)
Raise CompileError when trying to define reserved types (#10274)
Use length instead of len in arguments and var names (#10273)
Minor grammar edits in Mix.Config (#10272)
Do not propagate tracers to dynamic definitions, closes #10271
Make sure --label property apply without sources/sinks
Allow both sink and source to be given to mix xref graph
Deprecate Exception.exception?/1 and Regex.regex?/1
Expand ordering explanation
Add since doc to String#myers_difference/2 (#10268)
Make child specification docs more accurate (#10267)
Add @since to System.os_time, System.schedulers and System.schedulers_online (#10266)
Also touch root manifest on will_recompile for umbrellas
Update string_to_quoted spec (#10265)
Revise use of Note and Notice verbs (#10264)
Mention missing required key syntax in Typespecs page (#10261)
Add column information to SyntaxError and TokenMissingError
Add test for invalid tokenizer expressions
Store dot_iex_path when restarting the evaluator
Handle comments in EEx, closes #10256
Improve docs for Kernel.var!, closes #10251
Do not crash when failing to eval/inspect structs, closes #10242
support rebar3 resource type git_subdir (#10246)
Make sentence about log levels more clear (#10243)
Properly handle GenServer message in logger translators (#10209)
Add `Access.at!` (#10193)
Use Path.relative_to_cwd/1 in file path for slowest test (#10237)
Sort t:ExUnit.state/0 fields alphabetically (#10236)
Document when :file was added to ExUnit.TestModule (#10235)
Additional changes to ExUnit trace (#10234)
Add file and line to ExUnit --trace, closes #10232
Rename "initial" argument to "default" in Dic and HashDict (#10233)
Update fetch_env application feedback, closes #10225
Do not warn when configuring Elixir app
Make spec clearer for update functions in Keywords (#10228)
Ensure reenabling a task from inside a child propagates up, closes #10227
Conform www-url-encoded parsing to whatwg spec
Make spec clearer for update functions in Map (#10223)
Improve Kernel documentation (#10222)
Update Map.update example to use full lambda syntax on first example (#10221)
Mention file:line in Already defined as ... error message (#10219)
More improvements to operator docs (#10220)
Improvements to operator functions and page (#10218)
Remove email workflow now that CI was moved to GitHub
Improve keyword list definition and introduce the concept of key (#10215)
Clarify use of Enum.member?/2 in in/2 operator (#10216)
Improve Operators documentation (#10217)
Raise ArgumentError in Keyword.keys when list is not a keyword list (#10214)
Small rewording in Supervisor.Spec (#10212)
Consider == and === operators in ExUnit.Diff, closes #10210
Update typespecs and enforce with and limit in Inspect.Algebra (#10205)
Make autocomplete work after pin and negation operators (#10207)
Require a trailing underscore to consider it a compiler variable
Always load apps, even if --no-compile is given
Revert "Add support for :hour and :minute time units (#10185)"
Add List.Chars to bootstrap modules
Add MIX_BUILD_ROOT to config _build dir
Use GitHub Actions for Windows CI
Allow local deps to be skipped on mix deps.compile
Remaining map guards should add optional keys
Do not warn if quotes are used on complex atoms
Warn if a variable that looks like a compiler variable is unused (#10198)
Add t:ExUnit.test_id, closes #10192
Remove incorrect arities in test descriptions (#10194)
Add support for :hour and :minute time units (#10185)
Load and clean tasks in two distinct steps, closes #10190
Use "bytecode" instead of "byte code" (#10189)
Clarify to_unix docs
Enforce typespec limitation in bitstring unit (#10187)
Update syntax highlighting on CHANGELOG.md (#10183)
Update CHANGELOG
Add Date.day_of_week/2, beginning_of_week/2, and end_of_week/2 (#10181)
Update Date.range/2 to accept t:Calendar.date/0 (#10182)
Add is_exception/1 and is_exception/2 guards (#10180)
Move logic for take over message to the server
Do not automatically accept multiple pry requests from same process, closes #10176
Also add :iex by default to application tracers
CHANGELOG for config/runtime.exs
Load config/runtime.exs in escripts
Improve compiler error message when using | in a def pattern
Remove tracers before prying (#10177)
Make sure app loading happens inside recursive task, closes #10175
Update CHANGELOG
Add app.config
Add missing subtract client function in calculator example (#10173)
Add Date.beginning_of_month/1 and Date.end_of_month/1 (#10171)
Change erl binary chmod in release to 755 (#10168)
Redact Git username/password in Mix output log (#10162)
Add config_target()
Optimize variable unification (#10166)
Remove trailing whitespace (#10164)
Standardize README heading (#10163)
Reduce matrix on Windows
Update CHANGELOG.md (#10160)
Update CHANGELOG
Add config_env() and allow imports to be disabled in config files
Use remote default branch instead of master (#10157)
is_map_key/2 should add optional keys (#10156)
Only show rev if one is given
Show ref information when getting or updating mix dependencies from git sources (#10147)
Clarify multiline support, closes #10152
Lint YAML for trailing spaces and indents (#10151)
Remove trailing spaces from Markdown (#10150)
Undeprecate Keyword.replace/3 and Map.replace/3
Remove extra blank lines from Markdown in some docs (#10149)
Display file:line in already defined type error message (#10145)
Correct mix format error messages (#10146)
Sync port specs with Erlang, closes #10143
Improve map warnings (#10142)
Add app.load task
Improve docs on map field access
Run the formatter
Support optional applications to be declared
Avoid more escaping on Windows
Use macros instead of special casing in the compiler
Improve coverage for types that look like built-in types, closes #10140
Clean up typespec suite
Remove quotes to address escaping on Windows
Remove spaces from tmp_dir and use it in more places
Another attempt at removing races
Update CHANGELOG.md (#10141)
Keep proper precedence in guards generated by in/2, closes #10138
Do not use backticks in error messages, simplify field/fun printing (#10139)
More changelog fixes
Update CHANGELOG
Support --export-coverage in mix test
Update CHANGELOG
Update TODOs
Introduce rel_templates_path and releases_config_path
Document loadpaths
Add map checks (#10136)
Raise if lists have more than 1023 elements in guards
Add :tmp_dir tag to ExUnit (#10135)
Properly handle --repo and --organization on *.install tasks (#10134)
Normalize paths before expanding them (#10132)
Add GitHub Actions CI badge to README (#10130)
Use GitHub Actions as CI for Linux (#10129)
More CHANGELOG
Add mix xref graph --format cycles
Clean up and add docs to new beam stripping behaviour
Adding support for being more granular when stripping beam files (#10125)
Add Version test for pre-release fields
Include transitive dependencies in mix xref graph
Update CHANGELOG
Use monotonic times to measure compilation times
Do not read from ExCk chunk if not necessary
Also track exports API via local deps
Revert "Consistently handle empty blocks"
Include compilation time of individual modules on --profile=time
Consistently handle empty blocks
Do not make requires/imports compile-time dependencies
Add --repo to archive.install and escript.install (#10121)
Sort the output of mix deps alphabetically
Typos on the erlang files (#10118)
Remove reference to Erlang compile notes
Correct doc, add spec and update TODO comment in System.stacktrace/0 (#10112)
include callers in translated Logger metadata for Task (#10111)
Mention the word "file" when refereing to .fomatter.exs (#10109)
Avoid first person, and improve wording (#10108)
Clarify whereis docs, closes #10106
Use Erlang/OTP "VERSION", instead of OTP "VERSION" (#10105)
Document performance updates to --/2 since OTP 22
Clarify use cases around at_exit/1
Make exception types public, closes #10103
Only run in interactive mode if there is a config provider
Change release default mode to interactive (#10091)
Rewording the default arguments warnings (#10097)
Use global gitconfig instead of individual options on commands
Add line numbers to deprecated imports
Use reserved word where appropriate instead of token/keyword
Remove code duplication between calendar modules
Adding gregorian seconds functions to DateTime (#10089)
Returning microseconds on `NaiveDateTime.to_gregorian_seconds` (#10082)
Don't add compile-time dependency on defdelegate (#10093)
Unify guards in __do_log__
Run formatter (#10090)
Make sure Logger.log/bare_log does not crash with :warn
Use new logger_enabled metadata
Add new! to Calendar Types (#10069)
Add is_map_key as a function that returns booleans
Print which deps got unlocked (#10085)
Do not diff guards if pattern does not match
Clarify @doc for Registry.unregister_match/4 (#10079)
Replace whitelist/blacklist terminology with allowlist/denylist (#10078)
Do not raise on foreign types, closes #10077
Undo change removing assigns from Mix.Generator.copy_template docs (#10075)
Corrections to docs Mix.Generator docs (#10074)
Link to Typespec docs from Module documentation (#10072)
Improves 'patterns-and-guards' documentation page (#10065)
Doctest to generate tests also from @typedoc (#10059)
Update patterns-and-guards.md (#10064)
Check function arity in ParallelCompiler.async (#10060)
Allow user to define a type named union (#10055)
Update docs for Mix.target to remove experimental (#10056)
Provide exception blaming to linked and trapped exits in ExUnit
Do not crash when checking empty receive
Added @impl to application.ex generated by mix new (#10052)
Correct the specs for Enum aggregate functions (#10050)
Update Enum.min_max_by/3 spec after #10033 (#10049)
Add :nfkd and :nfkc forms to String.normalize/2 (#10046)
Add extra suggestions when Hex can't be installed, closes #10039
Improve references around functions
Update docs (#10043)
Report the correct line number when raising inside a macro (#10040)
Pass a valid os option to filename:basedir/3 (#10041)
Add ExUnit.fetch_test_supervisor/0 (#10035)
Ensure tmpdir exists before changing directory to it
Add missing CHANGELOG entry
Add CHANGELOG.md to docs (#10038)
Update CHANGELOG
Document data and fun arguments to `update_in/3` (#10034)
Allow a sorting function on Enum.min_max_by/3,4 (#10033)
Stacktrace may no longer be available
Add coloring support for Windows (#10031)
Add support for new rebar3 output env option (#10018)
Introduce MIX_XDG (#10028)
v1.10.3 is compatible with Erlang/OTP 23
Add `:cd` option to `Mix.Shell.cmd/2` and `--cd` to `mix cmd` (#10029)
Skip test on Windows
Add note that System.stacktrace/0 will always return an empty list (#10023)
Add linear representation functions to Calendar types (#10009)
Test not only rebar3 (#10022)
improve performance of Enum.with_index/2 (#10020)
Adjust @type body for Registry to match erlang ets match_spec Result (#10017)
Enable overriding sys.config location via env var (#9974)
Slightly refactor Mix.Release path handling
Load app from dependencies path when it is a project dependency (#10007)
Run the formatter
Improve documentation for utc_offset and std_offset fields (#10014)
Improve Mix.Config docs to point to the Elixir library for Config and Config.Reader (#10013)
Improve tests for cond
Support proper encoding in releases config (#10012)
Enforce keys to be atoms in Keyword.keys/1, closes #10010
Revert "Add String.titlecase/2 (#10008)"
Run the formatter
Improvements to titlecase
Add String.titlecase/2 (#10008)
Update CI and use taskset 1 for reproducible builds (#10005)
Add a note about `@external_resource` not being there yet (#10006)
Recompile Kernel before bootstrapping stdlib (#10002)
Improvements to the diff script which helped tackle #10000
Do not send keyword through static_atoms_encoder, closes #9996
Remove redundant clause in ExUnit.Formatter.format_sides/6 (#9988)
Call :zip.extract/2 with cwd option as charlist (#9989)
Remove error handling of empty escript name in Mix.Tasks.Escript.Build.escriptize/2 (#9990)
Document Task.async_stream/5 infinity timeout (#9984)
Update Mix.Release.t type specification (#9983)
Call Mix.Dep.Lock.write/1 with a map in Mix.Tasks.Deps.Unlock.run/1 (#9982)
Remove redundant pad handling in Calendar.parse_modifiers (#9977)
Inline types not exported from their erlang modules (#9976)
Include all relevant OTP apps when building dialyzer PLT (#9975)
Handle ; inside empty parens, closes #9964
Do not use lists:concat, closes #9973
Force modules to be loaded when they are required
Update type spec for IEx.color to indicate that it works with iodata (#9967)
Allocate line zero ann just once
Update EEx docs (#9962)
Update CHANGELOG
Ensure generated docs can be overridden without explicit clause
Improvements in Time.diff() docs (#9955)
Update Enum.join and map_join docs (#9960)
Run the formatter
Respect :path when tar-ing releases, closes #9949
Always validate given IEx options, closes #9959
Do not assume all files have started to compile, closes #9943
Do not attempt to load in memory beam files, closes #9788
Bring back String.normalize and fix infinite loop
Add `__mix_recompile__?/0` callback (#9919)
Add +++ and --- with right associativity to the list of custom operators (#9954)
Update :skip_undefined_reference_warnings_on in docs.exs (#9953)
Use __MODULE__ alias (#9952)
Reload applications in app manifest for changed local deps
Update release.ex documentation (#9950)
Remove references to module in local_function and local_macro events docs (#9945)
Update build to a supported FreeBSD version (#9944)
Document environment variable defaults (#9938)
Make spec of `c:run/1` match the documentation (#9936)
Add |/2 to special forms
Document that File.cd/1 affects the BEAM globally (#9928)
Do not emit warwnings for injected funs
Improve docs and treat all missing as hidden
Refactor binary handling
Improve error message for nested binaries in match without specifiers, closes #9908
Add guard to Code.unrequire_files/1 (#9921)
Update CHANGELOG
Improve some documentation in the String module
Show Erlang docs directly in the shell (#9843)
Update aliases_test.exs
Deprecate non-atom keys on put_env, get_env, fetch_env*, delete_env (#9915)
Remove verbose flag from makefile
Minor documentation correction (#9913)
Use new ExDoc extras auto-links (#9912)
Add example for runtime_config_path, closes #9911
Revert "Use an empty keyword list instead of nil for empty definitions"
Run formatter
Use OptionParser.split/1
Adding @requirements to Mix Task  (#9905)
Document operators on the Operators page (#9903)
Pass arguments to the overridden alias
Improve app name detection by the application tracer (#9900)
Rollback on mix xref stats change
Revert "Move mix xref graph --format stats to mix xref stats"
Skip sys_core_prepare pass on Erlang/OTP 23+
Improves readability of Keyword module docs (#9897)
Includes an example of how to use ANSI functions to format output (#9893)
Improve 'check_reproducible' script (#9879)
Add missing new line to warning
Update changelog
Compare pins as values, closes #9872
Reduce the newlines count when they are immediately followed by a comment, closes #9873
Notify the script has been tested for bash, closes #9890
Warn when @doc attribute is replaced across clauses
Remove list generator clause erlang comprehensions (#9891)
Do not warn on nullary calls without parens
Add default and enforce keys in Version struct (#9886)
Support aggregate coverage results from umbrellas and OS partitioning (#9880)
Update String.replace/4 and String.split/3 docs (#9876)
Do not update packages on FreeBSD (CI) (#9881)
Refactor summary handling
Shutdowns can be any term, closes #9878
Add missing @doc :since
Document version of :start/:stop events (tracers) (#9871)
Do not propagate context between clauses (#9869)
Add start and stop events to compilation tracers, closes #9868
Ensure protocols are consolidated after compilation
Remove race condition with cli test
Unify compilation entry point in the compile Mix task
Documentation wording improved for Supervisor.Spec moduledoc (#9866)
Documentation wording improved for List.Chars moduledoc (#9865)
Return [{mod, bin}] from Code.compile_file/2, require_file/2, load_file/2 (#9864)
Clarify docs around codepoints
Add guards to Calendar.strftime/3 (#9862)
Remove unused compilation_status code
Remove application level functions as they require Erlang/OTP 22+
Pass application tracer warnings to the compiler, closes #9861
Handle nil in :profile accordingly
Update CHANGELOG
Use a single option to track profiling data
Improve docs and coverege for module levels
Expose functions for setting per-module levels (#9793)
Use meta[:line] first and then fallback to env.line
Respect the config path location in umbrella projects
Improve logging examples
Add structured logging (#9797)
Add application tracers to Mix
Do not emit duplicate stacktrace warnings
mix release for Windows 10 has dependency (#9852)
Add Mix.Project.deps_apps/0
Clarifies explanation of unicode and Regex character classes, includes example (#9845)
Make EEx trim behaviour more consistent
Code.fetch_docs/1: Support reading from `doc/chunks/*.chunk` (#9838)
Update `DateTime.from_unix` documentation (#9840)
Rewrite and deprecate System.stacktrace
Pass the documentation format to IO.ANSI.print/3
Also use markdown docs formatter when ANSI is disabled
Link to tz library too
Do not show binary types if they are inferred
Clarify Map documentation regarding map.key syntax  (#9834)
Avoid false positives on capture warning
Add checking of patterns in body (#9828)
Revert "Support `import Mod, only: :sigils` (#9822)"
Normalize literal functions during expansion
Use simpler example for doctests and exceptions (#9827)
Clarify inspect docs
Revert "No longer convert file name metadata upfront"
Support `import Mod, only: :sigils` (#9822)
Improve Git diffs (#9823)
Do not treat two empty lists as charlists, closes #9824
Do not compile erlang files with warnings_as_errors unless on CI (#9821)
Clarify System.cmd/2 environment handling (#9820)
Revert "Warn on use of non-match argument to with/1 (#9784)"
Use acc type alias in spec of Enum.reduce/3 (#9817)
Only escape contents outside of interpolation, closes #9812
No longer convert file name metadata upfront
Only print metadata of known types, closes #9814
Do not crash on fake down messages on stream monitor, closes #9803
Do not write files to disk if warnings as errors was triggered, closes #9808
Optimize Version.match?/2 and Version.compare/2 (#9807)
According to systools we only need to copy bin from erts
Unpack extra guards from with matches, closes #9801
Clarify Access docs
Update TODO notes
Expose all logger levels (#9791)
fix(logger): use correct return value from report_cb/2 (#9798)
Ensure assert_received still produces valid exceptions, closes #9799
Add guards to functions in Tuple (#9796)
Do not imply nil is caused by Access
Do not emit warnings for variables used in bin patterns
Do not require parens in IEx
Add missing :erlang.size/1 guard, closes #9789
Emit warnings for unused match vars in assertions, closes #9787
Improve documentation for ExUnit callbacks (#9785)
Warn on use of non-match argument to with/1 (#9784)
Add Code.can_await_module_compilation?/0 (#9777)
Emit each file on verbose elixirc
Use Erlang's logger timestamp (#9772)
Add IO.warn_once/3 (#9782)
Only warn for commas at the end of words
Quote variables in cli_bat_text install section (#9780)
Add tests for timer and interval with infinity
Remove unneeded code in test (#9778)
Add missing since annotations
Run formatter
Remove redundant process test
Update CHANGELOG
Optimize pattern match of access module's func (#9776)
Raise proper error message for invalid strftime format
Escape Unicode chars in doucmentation for String codepoints/1 (#9775)
Deprecate remote nil arity calls without parens (#9769)
Do not emit invalid code when formatting assocs in maps, closes #9771
Update ci_email.yml
No longer rebroadcast messages as this is taken care by Erlang's logger
Deprecations are automatically detected in ExDoc master
Allow using remote or rpc with compile_env
Allow users to tag doctests with options (#9754)
Do not allow bad lines at runtime
Add space to quote error message
Improve failure stacktrace by avoiding tail recursion
Ensure ERTS is not copied into release (#9752)
Updates to Calendar.stfrtime/3
Turn NimbleStrftime into a Calendar function (#9747)
Print conclusion when sending e-mail
Dump GitHub context
Allow file, line and context to be dynamically set on quote, closes #9721
Use check_suite key
Only run check when completed
Use Github actions e-mail (#9750)
Update return types in docs for Mix.Generator functions, closes #9749
Only error for duplicate map keys in matches (#9748)
Adds links and examples to docs around logging (#9743)
Clear up all monitors on async_many failures
Add Task.await_many/2 (#9741)
Move evaluation of default timeout in ExUnit to runtime (#9745)
Keep existing APIs for min/max/min_by/max_by
Improve example and add "implicit try" phrase (#9740)
Update Library Guidelines.md (#9739)
Add a new anti-pattern section to library guidelines
Add column to EEx.SyntaxError (#9734)
Tidy up Mix tasks docs
Increase memory on Windows builds (#9731)
Improves docs for tasks and shell (#9735)
Refactor invalid line numbers in ExUnit filters (#9733)
Add :indentation to sigil heredoc meta (#9725)
Add :indentation option to EEx (#9724)
Keep line number in cond_clause error (#9730)
Reject invalid line numbers in ExUnit filters (#9729)
Clarify dirs can also be given as args in mix test (#9728)
Add since to new :column option on string_to_quoted (#9723)
Update CHANGELOG
Add is_struct/2 macro (#9718)
Don't GPG sign commits or tags in git tests (#9719)
Do not expand interpolation twice, closes #9709
Make sure to traverse args in xref
Remove guard checks on is_odd/is_even as those are tested in defguard, closes #9700
Track column information in EEx if enabled
Add :column to Code.string_to_quoted*/2
Add :. to special forms (#9717)
Do not warn for functions generated by Erlang compiler (#9713)
Support map.field syntax in guards (#9711)
Use meta on rewrites, closes #9714
Move mix xref graph --format stats to mix xref stats
Add more no_parens check to quoted
Keep no_parens distinction in quote/unquote
Allow any type on the RHS of or/2 (#9706)
Improve type check error message (#9705)
Test copy_erts with string and without source
Also remove undefined warnings when loading projects outside the CLI
Clarify which home directory is referred to by `~` in `~/.iex.exs` (#9699)
Deprecate remaining supervisor API
Start v1.11
Remove type inversion (#9695)
Point to the proper docs in the consolidation warning (#9696)
Optimize Enum.join/2 with empty string (#9697)
Add option :all to :no_warn_undefined (#9691)
Always capture delimiter metadata for sigils (#9671)
IO.ANSI.Docs - Properly render quote blocks (#9684)
Clarify usage of version and requires it in releases, closes #9686
Run the formatter
import_file -> import_config [skip ci] (#9688)
Update release.ex doc - watch log file (#9690)
Update CHANGELOG
Revert "MIX_BUILD_PATH specifies only the build_path prefix"
Prepare for v1.10-rc (#9673)
Reduce the amount of data sent between compilation processes
Document :file option on quote/2 (#9679)
Set runtime config as false when not rebooting (#9677)
Allow releases as an anonymous function
Revert "Ensure project's Logger config is used when running Mix tasks (#9332)"
Allow reboot to be disabled in releases, closes #9552
Add support for overlays in releases, closes #9651
Allow running a single test file from make (#9669)
Use composition instead of conditionals
Respect :no_parens meta in nullary remote calls in Macro.to_string
Update enum.ex docs for find_value (#9641)
Allow positive range slices on infinite streams
Clarify which keys are kept, closes #9657
Make sure error messages contain all relevant information
Ensure multiline do/end with no spaces compile under trim mode
Add guards to enum index access (#9667)
Improve error message on import/2 (#9663)
"matched pattern" -> "match" (#9662)
Allow nested cycles, closes #9652
Support FreeBSD in Cirrus CI (#9599)
Use long attributes in make docs target + Use double-quotes around attribute values (#9650)
Use "code point" instead of "codepoint" (#9649)
Correct Logger.info/2 arity (#9648)
Clarify the prompt will be similar, not precisely the same, closes #9644
Clarify call syntax for Keyword, closes #9645
Replace UTF-8 code point with Unicode code point (#9643)
More improvements to Kernel typespecs
Update kernel.ex
Allow customization of the continuation prompt on IEx (#9620)
Adds more examples re setup callbacks (#9631)
Do not add no_warn_undefined to CInf chunk
Remove signatures from checker chunk (#9634)
Update CHANGELOG
Add Application.compile_env/3 (#9628)
Remove {:from_app, :app} from 1.10 changelog (#9633)
Preserve slashes in URIs without authority (#9632)
Close with correct accumulator in Stream.resource/3 (#9627)
Use .exs extension in config reader input
Do not filter warnings for external files
Ensure children are trapping exits before terminating
Refactor elixir_config and mix compilers for upcoming changes
Mix.Task.Compiler.after_compile/1 -> after_compiler/2
Emit information if mix.exs is available when a task is not found
:manager from dependency definition should override SCM (#9625)
Print all undefined functions as warnings and then raise (#9623)
Allows heading separator in IO.ANSI.Docs to not to have spaces around "|" (#9616)
Use fully qualified function calls in macros (#9626)
Add examples to ambiguous op error message
Grammar suggestions for syntax reference (#9622)
Do not shallow clone Git repo in CI (#9621)
Make Mix.Dep.diverged?/1 catch :divergedreq (#9619)
Introduce "format" make target (#9617)
Remove outdate put of env var
Add a code comment about the register option
Improve match error reporting in doctests (#9608)
Abstract common settings in a template in .cirrus.yml (#9612)
Replace usage of "etc." (#9569)
Replace exsplus with exrop as the OTP 20 default pseudorandom algorithm (#9609)
Only skip parens in assertions, closes #9610
Deprioritize Linux Development tasks in CI (#9607)
Remove duplicate element in matrix in .cirrus.yml (#9606)
Sort ENV variables alphabetically in .cirrus.yml
Do not auto-cancel CI if branch is master or a release branch/tag (#9596)
Use infinity timeout in internal services
Raise if trying to add case in the middle of run, closes #9601
Pass proper opts for Code.eval_quoted/3 in Mix.Dep.Lock (#9598)
Split Linux task in stable and development, and simplify them in Cirrus CI (#9593)
Add deprecation notice to System.get_pid
Reorganize docs and tests for captures
Improve documentation for Config.Provider (#9595)
Add missing unreserved character to URI document (#9591)
Raise if a non-absolute path is given with host or authority (#9589)
Use URI.parse/1 instead of building %URI{} manually whenever possible (#9590)
Add a section on Erlang/OTP handlers, closes #9545
Further cleanup on Mix agents
Refactor project stack into a GenServer for upcoming feature
Remove deprecate use of path_for
Expose an API for returning paths and streamline deprecations
No need to cache home
Replace usage of "e.g." (#9571)
Make generated app message consistent when building source, closes #9583
Add missing ex_unit folder to check_reproducible Make task (#9575)
Improve config and increase execution speed of Cirrus CI (#9573)
Show the whole doctest on invalid doctests
Sleep after sending restart command
Add second example for Stream.resource/3 (#9564)
Make Cirrus build button green (#9566)
Move the references from Travis CI to Cirrus CI (#9565)
Style mention to operating systems (#9562)
[ci skip] Copyedit deprecations table  (#9554)
Return {:error, :unavalable} for ensure_compiled in a deadlock (#9543)
Explicitly mention that def and defmacro define public functions/macros (#9556)
Use titlecase in Elixir, Erlang, EEx, Unicode, and Dialyzer (#9557)
Use argument instead of arg in error messages (#9561)
Example in defmodule shows the return value as mentioned in the bulleted list (#9555)
Correct title of section in mix test docs (#9553)
Refer properly to Erlang datetime tuple in the docs (#9560)
Remove the URI example for `mix archive.install` (#9551)
Add support for NO_COLOR environment variable (#9550)
Add comment specyfing possible values of RELEASE_DISTRIBUTION
Use "operating system" instead of OS (#9547)
Add note about package managers to release docs (#9542)
Deprecate Code.ensure_compiled?/1
Make the number of attempted function clauses in FunctionClauseError more obvious (#9544)
Introduce t:Calendar.ISO.microsecond/0 and fix t:Calendar.microsecond/0 (#9541)
Add new types to Calendar.ISO (#9512)
Improve Bitwise docs (#9538)
Add specs for Bitwise (#9537)
Remove outdated TODO
Support profiling via elixirc
Use version metadata in Erlang pass
Track variable version globally (#9536)
Update changelog with capture_io changes [skip ci] (#9535)
Refactor and remove races from tests
Add async: true to tests using capture_io :stderr
Make it so any capture with input cannot be async
More improvements to ExUnit diff and capture
Revamp capture_io for named devices to be async (#9527)
Remove travis and appveyor CIs
Add patterns information to guards page
Configure Cirrus CI (#9534)
Exclude tests that require epmd on Windows (#9533)
Documentation updates in Bitwise module and functions (#9528)
Use backticks around module name in `mix new` template (#9530)
Prevent calling non-async functions in async tests (#9455)
Improvements to MapSet moduledocs (#9531)
Use reverse rewrite in checker
Change Bitwise macros to rewrites
Add reverse rewrite and inline rules
Remove wrong flag for remote script too
Remove unecessary double quotes on batch script
Make unification directed
Move unification to Infer module
Split Infer into Expr and Pattern modules
Remove unused parameter from register_key (#9524)
Add --profile time flag to profile compilation steps (#9519)
Add variable version to expanded meta (#9520)
Remove struct/0 from the basic types in the typespecs docs (#9523)
Allow RELEASE_DISTRIBUTION to be set to none (#9517)
Only copy the relevant directories from erts (#9515)
Add parens to static remote nullary calls
Set protocol consolidation timeout to infinity (#9509)
Tidy up docs and specs for capture_io
Improvements to Calendar docs, specs and guards (#9493)
Traverse args of remote functions when looking for undefined/deprecation warnings
Add TODO
Add back GenServer error message translation to support libraries
Remove heisentest now that checksums are required
Add stop_supervised!
Do deprecation of Supervise.Spec in steps
Use type-check when it's an adjective (#9502)
Copyedit the guards page (#9500)
Link defguard/1 and defguardp/1 (#9501)
Minor corrections to recently introduced changes in Guards page (#9499)
Ensure reassigned variables are properly carried forward
Make distinction of guard expressions and functions/operators (#9497)
Improve documentation around guards (#9496)
Clarify evaluation rules for guards, closes #9495
Run Erlang/OTP 22.1 on travis (#9492)
Remove prompts and run the formatter
Remove test for outdated code path
Make checksum required for URIs
Warn when using unsafe URL local installs
Updates on DynamicSupervisor.start_child/2 (#9434)
Add missing doc annotations (#9489)
Add NaiveDateTime.local_now (#9472)
Remove anonymous function examples (#9488)
Improve error messages on keywords, closes #9467
Add Kernel.is_map_key/2
Standardize use of "#=>" for return values in Kernel (#9483)
Improve module docs in Kernel and Kernel.SpecialForms (#9486)
Clean up some minor things in the docs
Remove comment arrows from Exception messages (#9485)
Handle case when report_cb needs 2 arguments (#9478)
is_struct/1 fixes (#9481)
Use Erlang 21.0 on appveyor (#9480)
Add Examples section to Kernel.is_struct/1 (#9482)
Update CHANGELOG
Make release's boot scripts deterministic (#9387)
Add @doc :since to is_struct/1 (#9479)
Improve coverage for non-integers in split/drop/take
Add more strict guards on Enum.split/2 (#9436)
Clarify release instructions
Add is_struct/1 to Kernel (#9470)
Remove calls to error_logger (#9469)
Simplify emission of rescue clauses to avoid duplicate generation
Refactor Erlang try code
No need to track stacktrace usage
elif to else
Cleanup TODOs for OTP 21+ (#9477)
Improve MapSet comparison performance (#9381)
Clarify escaping rules in sigils, closes #9471
Avoid filesystem race condition in test (#9474)
Also handle parens in binary patterns
Handle binaries without specifiers
Remove redundant rewrite as it has been optimized in the VM
Avoid multiple passes on binary specifier
Filter more warnings and make filters less generic
Group log level tests
Ensure Logger config is properly reverted
Remove unecessary Erlang macro
Remove duplicated log level mapping
Translate logger level on startup (#9466)
Use Erlang's logger as main logging implementation (#9333)
Avoid second calculation of arity in expand_local/4 (#9463)
Run the formatter
Inherit config files from umbrella parent when loading children
Raise error on functions/guards without implementation (#9461)
Also validate types on remote types on self, closes #9460
Warn if duplicate key is found in record (#9457)
Add additional documentation for ExUnit.CaptureIO (#9456)
Bootstrap typespec before code
Use maps:merge on Erlang pass
Apply mergev optmization on erlang pass
Remove unecessary mergev on elixir_erl
Only transform environment in match if necessary
Further optimize variable merging
Move unused_vars to its own variable
Remove a need to merge unused vars
Simplify scoped merge of unused vars
Remove need for mergev on match/head
Warn if duplicate key is found in struct (#9452)
Speed up map intersperse for lists
Introduce Enum.map_intersperse (#9454)
Simplify :language check in compile.app
Document escript main/1 behaviour with language: :erlang (#9449)
Load IO opts only if file is empty
Execute callbacks on :elixir_compiler after all warnings are emitted (#9447)
Remove unused funtionality and erase pdict properly
Allow a sorting function on min/max/min_by/max_by (#9427)
Escape strings before diffing them (#9442)
Update frequencies and frequency_by to avoid the fun overhead (#9444)
Add asc/desc and compare support to Enum.sort (#9432)
Allow start_options to be configured on Logger (#9438)
Clarify docs for List.to_integer/1 (#9443)
Discard metadata in the formatter rather than backend
Run formatter
Improve diffing of escaped values on maps/structs
Sort release maps alphabetically
Validate bind_quoted, closes #9406
Improve errors for calls on aliases
Add tests for spawn_opt being passed downstream and fix Supervisor spec
Add Mix.SCM.t type and improve Mix.Project.deps_scms docs (#9437)
Add Mix.Project.deps_scms/1
Introduce Code.binding/0 type (#9424)
Add  Enum.frequencies/1 and Enum.frequencies_by/2 (#9425)
Reword docs for :static_atoms_encoder (#9431)
Keep inspected forms and avoid false positives in structs
Add since annotation to callbacks too
Add example compilation tracer to docs (#9430)
DynamicSupervisor Documentation polish (#9428)
Add ++ to pattern inference (#9420)
Add mix test partitioning (#9422)
Ensure shell is reverted after mix test run
Structure mix/tasks/test_test.exs with describe
Support counter for var context (#9419)
Add guard to String.replace/4 for better error messages (#9398)
Mark match? catch-all clause as generated, closes #9411
Update CHANGELOG
Use double-quotes around sections to refer to them (#9409)
quote/2: Sort option fields in documentation (#9408)
Remove redundant guard
Standardize use of verbs in bulleted lists (#9403)
Macro.Env: Sort fields in documentation and code (#9404)
ExUnit.Callbacks: Be explicit about the shape of a return value (#9399)
Raise when passing an empty list instead of clauses (#9402)
Provide further guidance on the test macro, closes #9400
Run the formatter
Ensure escaping inside tuples and lists, closes #9397
Consider options when running regexes on the fly
Update reference to Keyword.delete/3 (#9394)
Close unclosed backticks in the docs (#9395)
Run checker on Code.require_file/1 (#9393)
Ensure compilation works for a variable named super, closes #9390
Clarify docs for syntax_colors, closes #9391
Use elixir_expand to simplify guard tests (#9388)
Move map.ex to bootstrap (#9389)
Check more guard functions (#9386)
Add defmodule tracing event
Ensure reproducible builds (boostrapping issue) (#9385)
Improve Enum.sort/2 doc examples formatting (#9382)
Update docs for Kernel.SpecialForms.case/2 (#9378)
Update inspect.ex (#9377)
Minor typo in `mix release` docs (#9375)
Allow custom calendar representations in calendar sigils (#9367)
Minor typo fix (#9372)
Warn on circular file imports when loading .iex.exs (#9364)
Clarify Stream.transform doc and example (#9369)
Revert "Add inspect/2 callback to Calendar (#9128)"
Improve coverage and fix new diff implementation
Ensure project's Logger config is used when running Mix tasks (#9332)
Always add :debug_info to :erlc_options (#9348)
Allow to reset async for ExUnit.Case by using it again (#9360)
Speed up getting one random element from enumerables
Bump Hex dependency to v0.19.0 (#9357)
Update on_definition with Module.exists?/2 docs & test (#9352)
Add explicit examples of how to sort structs
Improve docs for strings, closes #9350
Optimize elixir_tokenizer (#9347)
Sort Inspect.Opts fields in documentation and code  (#9346)
Simplify t:Registry.guards/0 (#9342)
Use cat to create runtime configuration more reliably (#9340)
Make sure releases boot even with read-only config files (#9339)
Warn on trailing commas in word list (#9314)
Improve wording in Collectable doc (#9336)
Move ISSUE_TEMPLATE to inside .github folder
Add GitHub actions workflow to send CI emails (#9329)
Include pinned variables from all contexts for diffing
Properly indent mailbox and values
Use Base.encode32 when generating cookie to avoid unsafe chars, closes #9328
Simplify diff handling for lists
Simplify diff handling for maps
Simplify diff handling for strings and tests
Simplify diff handling for tuples and structs
Small typo (#9327)
Improve Config.Reader docs
Improve docs for runtime_config_path, closes #9323
Add Mix.Task.Compiler.after_compile callback
Add struct keys to tracing on struct expansion
Keep keywords syntax in formatter
Improve assertions on the process mailbox (#9282)
Documents __impl__/1 of protocol implementation (#9321)
Improve consistency of Enum.chunk_while/4 docs
Clarification in documentation for Enum.chunk_while/4 (#9320)
Properly nest blocks with code examples in Guards.md (#9318)
Improve behaviour documentation (#9317)
Ensure keyword replace and update preserve order, closes #9315
Improve ExUnit case/module docs
Small grammar improvements (#9313)
Move specification of env variables to their own block
Raise multiple args errors in case with guards, closes #9311
Standardize function expressions with multiple arities (#9309)
Support struct patterns (#9306)
Ask user to manually clean manifests if we can't do it, closes #9308
Remove deprecation on ok return result from compilers
Support binary path in Protocol.extract_impls/2 (#9304)
Split Module.Types and add unit tests (#9303)
Remove `mix xref warnings` reference in Module docs (#9305)
Rely on IO data and simplify Algebra handling
Split quoted and value handling in ExUnit.Diff
Add :tar option for releases to create a tarball (#9290)
Add MIX_DEPS_PATH environment variable for setting :deps_path (#9301)
Change List.Chars.to_charlist to return empty list when given nil (#9299)
Do not expand structs when comparing AST on ExUnit.Diff
Update CHANGELOG
Improve assertion on function head test
Warn when function head comes immediately after the implementation
Remove duplicated code in Enum (#9297)
Improve documentation on charlists (#9294)
Remove unecessary slice-clause
Correct guard in Enum slice optimization (#9296)
Do not traverse the list if we are keeping the whole tail, closes #9274
Use an empty keyword list instead of nil for empty definitions
Update documentation for :all_names in Regex (#9287)
Use read-only naming for Module operations
Make Module.open?/1 and family to match their docs (#9278)
Allow {:from_app, app_name} as a version for releases (#9280)
Add inference of function head to find function clauses that will never match (#9270)
Update @doc of File.open/2 (#9277)
Improve Node.start/3 documentation (#9272)
Allow mix deps.compile to ignore umbrella apps (#9273)
Add Range.new example (#9271)
Docs: remove missing link and ambiguous expression (#9275)
Redundant word was removed (#9268)
Remove undocumented process flags (#9267)
Add Function.identity/1 (#9260)
Compare tuples positionally in diff (#9262)
Document escaping in EEx more clearly (#9265)
Add example for Access.get_and_update/3 (#9261)
Add compiler tracing (#9247)
Verify transient runtime module dependencies (#9255)
Add @doc :since metadata to Access.fetch!/2
Add Access.fetch!/2 (#9254)
Add :encoding option to StringIO (#9250)
Use existing String.bag_distance and assert variable
Run the formatter
Add test for match? with guards
Do not accidentally import expand_pattern into user code
Do not expand variables as macros in Macro.expand/2
Support diffs on pattern matching
Improve docs for functions
Raise correct error message for incomplete interpolation in heredoc, closes #9252
Make the wildcard example equivalent with `Mix.Config` in an umbrella project (#9251)
Use :maps.take in Map.pop_lazy
Add version alongside app names in stacktraces, closes #9244
Add Keyword.pop!/2 and Map.pop!/2 (#9249)
Run the formatter
Include file+line range in eval errors
Reduce private API surface
Add @doc since metadata to Keyword.pop_values/2 (#9248)
Add Keyword.pop_values and deprecate non-standard API
Add Tzdata example to DateTime docs (#9246)
Ensure local captures work correctly on macro expansion
Quote executable path on Windows, closes #9242 (#9243)
Ensure build is reproducible
Rename Mix.Tasks.Escript.Build option to `:strip_beams` (#9241)
Clean up Macro.Env and hide private fields
Piping into unary and binary operator deprecation fixes (#9236)
Allow dumb terminal to be accessible via broker, closes #9239
Replace Distillery reference with "mix release" (#9240)
Improve typespecs for Registry.start_link/1 and Registry.child_spec/1 (#9234)
Pass runtime dependent modules to group pass (#9230)
Optimize StringIO get_chars, closes #9232
Add @spec and @doc since to Code.compiler_option/1
Update CHANGELOG
Store each compiler option directly in elixir_config, closes #9208
 Remove dispatch tracking in LexicalTracker (#9228)
Make sure contents are not empty before decoding
Remove warning on record suite
Preserve UTF8 encoding in release config files
Always recompile before running tasks from dependencies, closes #9190
Make 'make test_formatter' compatible with Windows (#9227)
:start cannot be customized on use
Increase understandability of the tuple documentation (#9226)
Print relative paths in the formatter error
Make sure reraise raises on invalid argument
Raise readable error for mismatched sources, closes #9218
Use Module.has_attribute?/2 in ExUnit.Case (#9222)
Change :attributes to :warn_attributes for clarity (module bag table) (#9223)
Use Module.has_attribute?/2 (#9214)
Update description of formatter in Mix.Tasks.Test moduledoc (#9224)
Regex.split/3 documentation and tests for :include_captures and :parts (#9220)
Revert "Adds &Kernel.identity/1 (#9182)"
Adds &Kernel.identity/1 (#9182)
Minor improvements in the documentation for <<>>/1 (#9217)
Add missing arity to reference to URI.encode_www_form/1 (#9213)
Improve docs in URI (#9215)
Remove :caller_module from Mix.Tasks.Xref.calls/0
Only run tests if epmd is available, closes #9167
Remove duplicated entry in Module.ParallelChecker.all_exports() (#9209)
Use Code.compiler_options[:no_warn_undefined] (#9207)
Add ExCk chunk (#9203)
Use :used instead of nil to express attr use (#9206)
Add Module.has_attribute?/2 (#9200)
Update CHANGELOG
Add since metadata to string_to_quoted options
Improve the documentation for Logger (#9205)
Optimize binary pattern matching in Integer.parse (#9201)
Correct grammar in Atom docs
Update to Unicode 12.1
Improve docs for built-in data types
Do not emit undefined warnings in old Erlang/OTP versions (#9193)
Improve docs for built-in data types
Add mix deps.unlock --check-unused flag (#9185)
Line is not always available
MIX_BUILD_PATH specifies only the build_path prefix
Clarify env var docs
Improve docs for releases
Avoid unicode codepoint computation for lower bytes
Add describe and module attributes (#9181)
 Move deprecation check to group pass (#9176)
Run the formatter
Support included applications, closes #9163
Add test for @describetag outside of describe block (#9180)
Slightly improve docs for ExUnit.Case
Minor improvements in the "mix release" docs
Raise for @describetag defined before use ExUnit.Case (#9179)
Improve zombie termination script (#9178)
Move unreachable function check from xref to group pass (#9168)
Improve zombie termination script
Example added for Agent.update/4 (#9172)
Make sure locals tracker can be stopped
Remove trailing whitespace
Example added for Agent.cast/4 (#9169)
Add catch all for bad supervisor names
Unify code path in String.split (#9165)
More details about the :native time unit, from the Erlang docs (#9157)
Use default_release option when name is not given (#9158)
Clarify the relationship with config/releases.exs, closes #9153
Do not pass Meta to Erlang AST, closes #9152
Ensure old manifests can be upgraded
Add literal encoder option to Code.string_to_quoted
Move module writing from mix to compiler (#9149)
Add end of expression token information
Exposing pairing metadata (#9146)
Rename :end metadata to less ambiguous :closing
Tweaks to the docs of protocols (#9145)
Use heredocs for top-level executables' usage docs (#9143)
Add example for Agent.cast/2 (#9142)
Exit IEx session if the group leader exits, closes #9138
Document AST metadata (#9140)
Postpone deprecation start_child/terminate_child for simple_one_for_one
Add missing @doc since annotation
Place Version.Requirement module under Basic Types in docs.exs (#9139)
Add TODO
Remove unused import_fa metadata
Add a metadata type
Add an introduction to the Macro module
Ensure started/loaded apps do not leak between Mix tests, closes #9137
Improve some documentation in Config.Provider
Update keyword.ex docs (#9136)
Improve a comment in env.*.eex for releases (#9134)
Add inspect/2 callback to Calendar (#9128)
Add RELEASE_BOOT_SCRIPT and RELEASE_BOOT_SCRIPT_CLEAN (#9132)
IEx: Sort Types in `t` helper (#9131)
build_info revision is at leasts 7 bytes
Keep struct fields ordered in types
Remove timestamps from release, closes #9127
Avoid mix compiler task warning on noop
Add DateTime.now!/2 (#9125)
Add DateTime.shift_zone!/3 (#9126)
Do not crash formatter on false positive sigils, closes #9123
Improve undefined struct messages
Autocomplete Erlang callbacks on IEx (#9121)
Do not autocomplete private types on IEx (#9122)
Perform Erlang type autocompletion in IEx (#9110)
--paths= in rebar3 bare compile fixes subcommand splitting on comma bug (#9120)
Immediately shutdown the lexical tracker
Add preferred_cli_target (#9118)
Update Enum.find/2 docs to include success example first (#9116)
Run the formatter
Rerun xref on --all-warnings, closes #9115
Add v1.10-ready deprecations
Enforce atom keys for config
Use :timer.tc/1 to measure time diff in tests (#9113)
Improve performance of release tests (#9112)
Remove redundant "a" from Inspect.Opts moduledoc (#9114)
Start v1.10
Raise on recursive macros (#9111)
Clarify syntax for custom Module attributes (#9109)
Mention custom scripts in mix release "One-off commands" docs (#9105)
Handle multiple versions of the same app during releases (#9102)
Clarify inspect docs and link to printable boolean functions, closes #9108
Typo: Window server -> Windows service (#9106)
Improve error message from wrong test invocation
Use SPDX full name of Apache License 2.0 (#9104)
Update registered process lists, closes #9103
Review CHANGELOG and docs for upcoming RC (#9100)
Store relative file in module definition (#9099)
Support unary functions in String.replace/4 (#9073)
Inspect.Opts.custom_options (#9096)
Add 'a' to {invalid_clauses, Name} error (#9090)
Use https instead of http when servers are redirecting (#9094)
Rewrite start_supervised already started into duplicate_child_name
Run 21.3.8 on Travis due to regression on 21.3.0 (#9088)
Assert runtime config is also sset during eval
Start elixir and load config provider app holder
Load the project config just once
Raise an error if the umbrella app's dir name and mix.exs app name doesn't match (#9072)
Review of README.md (#9086)
Remove duplicated typespec on t:GenServer.server/0 (#9085)
Improve documentation of GenServer.server() type. (#9082)
Improves module documentation of DynamicSupervisor (#9080)
Add SECURITY.md (Security Policy) (#9078)
Do not expand ~ when not followed by a path separator
Don't discard Logger messages from other nodes
Add guards to the Stream module (#9069)
Remove Dialyzer errors in Application module (#9062)
Support paths with white spaces in Windows releases (#9065)
Add a note about the scope of the syntax reference
Add possible Windows errors to File.cd!/1 tests
Do not explicitly recompile regexes, fallback to binary matching
Make regexes fall back to binary matching on incompatible runtime version (#9040)
Run CI on Erlang/OTP 22 (#9058)
Improve heredoc error message (#9048)
Start the VM in interactive mode for rpc/eval/remote (#9056)
Update CHANGELOG
Include apps/APP prefix in test locations when running from umbrella root
Resolve full umbrella path name in mix test arg (#9050)
Warn when executables are missing, close #9037
Try loading app from otp_root before :code.lib_dir (#9054)
Include erts paths for release script (#9055)
Base erts lib dir off erts source path (#9052)
Mention default return in List.keyfind/4 docs
Remove unnecessary is_reference/1 check
Delegate Erlang/OTP version check to Elixir
Support default value when reading inexistent module attribute (#9041)
Improve List.duplicate/2 (#9044)
Improve List.flatten/1,2 (#9045)
Revert #8777 (#9042)
Improve List.delete/2 (#9043)
Use proper heading for checksums
Add Erlang/OTP 22 compatible versions
Escape Unicode chars in String, closes #9039
Do not allow defmodule with special atoms (#9032)
Use backslash on Windows (#9035)
Ensure third element in location tuple is either nil or an integer
Nest all terminator metadata under :end key
Allow developers to choose between sname and name in releases (#9024)
Improve coverage and cleanup archive_test
Improved archive.uninstall to find any version of specified file (#9025)
Add Kernel.in/2 to bug fixes in CHANGELOG.md (#9027)
Only keep last expression from doctest
Display the actual doctest code when doctset fails (#8903)
Translate process crash on node in Logger (#9020)
Also provide nice error message on null bytes
Document Inspect.inspect/2 (#9015)
Use parens in IO.puts/1 calls around the codebase (#9018)
Rely on bootstrap only during compilation
Update documentation for less confusing read (#9014)
Add inspect_fun to Inspect.Opts (#8980)
Add docs example for Path.dirname/1 when path is a filename (#9013)
Consider @file attribute on undefined locals, closes #9005
Only linify if keep was given
Improve docs and use relative paths
Unify error handling and compiler deadlock checking (#9009)
Set ticktime and autohost on IEx --remsh (#8997)
Add defmodule/2 to default locals_without_parens list (#9007)
Allow multiple ex_unit filter excludes (#9003)
Update kernel.ex
Update docs to make them easier to read in HTML format (#9004)
Update Library Guidelines.md
Do not raise on deadlock on ensure_compiled
Add Registry.select/2 to changelog (#9001)
Improve the documentation and example for the Config.Provider module. (#9000)
Deprecate Enumerable keys in Map.{take|drop|split} (#8999)
More comments on release size
Use $RELEASE_NODE as the base for --remsh/--rpc (#8998)
Improve release text
Add a section on Why Releases?
Add missing guards to functions in Keyword (#8992)
Use proper files in "mix release.init" docs (#8991)
Trim whitespace
Streamline customization and configuration docs
Use --force in release.init as we use it everywhere (except in mix release)
Clarify root node only expansion in Macro
Replace bin/start by release/RELEASE_VSN/env (#8988)
More release fixes
No need for brackets
Improve to the release docs
Add `impl true` to Mix task run callbacks (#8984)
Be more descriptive in trim functions (#8983)
Document time complexity (#8981)
Remove complexity mention in intersperse
Update CHANGELOG
Use :persistent_term for Logger config (#8977)
Support :force_do_end_blocks in formatter (#8978)
Update EEx tokenizer tests
Consistently trim on multiple lines, closes #8792
Halt sibling compilation on errors
Do not suggest override: true for from_umbrella conflicts
Raise on bad EEx state, closes #8790 (#8976)
Allow vm.args to be set with env var (#8974)
Add templating support to releases (#8967)
Add Registry.select/2 (#8963)
Use Mix.Config instead of Config on import
Improve warning for duplicate behaviours, closes #8965
Add :steps to releases (#8966)
Update release docs
Updates documentation of capture operator with reference to Function.capture/3 (#8964)
Improve docs and since annotations
Update CHANGELOG
Optimize &super/arity and &super(&1) (#8962)
Add config providers (#8957)
Clarify that `elixirc_options` in supports all the command line options (#8958)
Implement static_atom_encoder tokenizer option (#8956)
Clarify assert/2 documentation (#8955)
Check that the first letter of alias is upcase (#8947)
Preserve order given in :applications
Improve typespecs for Enum.*reduce functions (#8951)
Improve invalid interpolation error message
No longer keep a field for tracking type in __ENV__ vars
Define what a "switch" is (#8944)
Emphasize not converting IO data to binary
Add a section about iodata to the IO docs (#8943)
Do not block the main ParallelCompiler process
Improvents to Kernel.in/2
Further improve Enum docs
Simplify wording in docs of some Enum functions
Mention support for negative start_index in Enum.slice/3 (#8941)
Ensure the first equal entry is returned by min/max
Do not depend on basedir
Refactor and document XDG support
Follow XDG base dir specification in Mix (#8933)
No longer generate config for mix new (#8932)
Allow to dry run the Elixir CLI command
Allow Code.ensure_compiled/2 to not raise on deadlocks
Pass env compiler options to v3_core
Move protocol consolidation tests to its own file
Move DebugInfo test into its own sync case
Ensure debug_info is kept in protocols, closes #8923
Clarify `Keyword.pop/3` docs on duplicated keys (#8919)
Ensure the struct name matches the given module
Make Version.Requirement public (#8920)
fix Code.Typespec.typespec_to_quoted conversion for variable (#8918)
Improve specs for List.first/1 and List.last/1 when list is empty (#8915)
List.to_string/1 improve error message and docs (#8913)
Simplify Kernel.in/2 (#8911)
URI works on bytes
Optimize Unicode graphemes
Use System.no_halt/1 instead of Process.sleep/1 in mix run
Document defines? does not include overridable, closes #8896
Raise when retrieving capitalized module attribute (#8908)
Ensure guard checks when expanding string interpolations (#8905)
Update CHANGELOG
Improve error message if dependency name is misspelled (#8904)
Add struct examples to put_in/2, get_in/2 and get_and_update_in/2 (#8899)
Ensure Erlang-based Mix compilers (erlang, leex, yecc) set valid position on diagnostics (#8900)
Add OTP 21.3 to the build matrix (#8898)
Add support for a default value in System.get_env/1 (#3798)
Warn if underscored type variable is used more than once (#8894)
Mention list of reserved and unreserved chars in docs (#8881)
Properly track files instead of modules in mix integration with lexical tracker
Pass lexical_tracker on each_file callback
Only spawn processes if a file has not yet been required
Simplify acquiring lock on Code.require_file
Take nil lexical_tracker into account
Run the formatter
Simplify source handling in compilers/elixir
Pass lexical tracker forward if available, closes #8893
Handle underscore variables (_, _foo) in typespecs (#8891)
Quote :: to avoid ambiguity (#8890)
Clarify touch behaviour in some OSes, closes #8875
Force System.build_info()[:revision] to be 7 char long (#8879)
Improve System.build_info/0 spec (#8883)
Improve System.build_info/0 documentation (#8884)
Replace use of "item(s)" with "element(s)" in Enum module (#8885)
Add an example that actually decodes to URI.query_decoder/2 (#8880)
Add a note that Erlang has to be installed before compiling from source
Ensure inspect returns valid ~r// expressions (#8872)
Use inspect/1 with values returned by __struct__/* (#8873)
Add guard to Macro.to_string/2 (#8870)
Use :elixir_aliases.inspect/1 with module aliases (#8869)
Update documentation of Logger (#8866)
More examples for Kernel.function_exported?/3 (#8865)
Validate __struct__ key in map returned by __struct__/0,1 (#8864)
Improve error on unknown backends
Improve documentation in test task cmd line options (#8858)
Tiny docs change falsy value (#8859)
Use in instead of on (#8854)
Improve clarification on string() type replacements in Typespecs page (#8857)
Avoid hyphen at EOL (#8853)
Update Syntax Reference.md
Improvements in the documentation (#8856)
Improve error message on invalid @doc (#8852)
Ensure :name is given in Registry.start_link/1 (#8850)
Replace "(un)defined" with "(un)set" for system env (#8851)
Clarify Enum.all? and Enum.any? for empty lists (#8849)
Add docs for truthy/falsy values (#8848)
Add System.fetch_env/1 and System.fetch_env!/1 (#8846)
Enable Access.at/1 to handle negative index (#8843)
Do not change super signature, pass info as metadata
Supervisor.start_link/2 with a list of children cannot return ignore
Slightly improve Macro.generate_arguments/2 (#8842)
Add typespec for Macro.generate_arguments/2 (#8840)
Avoid Dialyzer warnings on Inspect (#8841)
Remove StreamData-related stuff from the formatter configuration (#8833)
Allow atime, mtime, ctime to have integer() types (#8839)
Check for timeout to blame clauses, closes #8837
Raise if a macro is invoked before its definition (#8822)
Add ~U sigil for UTC date times (#8824)
Do not consider modules that are no longer cover compiled (#8828)
Add typespecs to IEx public functions (#8827)
Set DateTime.from_unix precision to microseconds for units not divisible by 10 (#8823)
Do not allow to override macros as functions (#8816)
Raise error when doc attribute is true (#8814)
Improve error message when deps.loadpaths/loadpaths/compile has not run
Use proper var_context in with optimization
Update docs to consistently use "keyword list" (#8808)
Improve defoverridable test suite (#8802)
Adding missing List functions tests (#8804)
Store overridable information more efficiently (#8799)
Improvements to the URI module (#8779)
Allow integer time units for DateTime.from_unix!/2 (#8801)
Improve Kernel.SpecialForms docs (#8798)
Specify that the formatter behaviour for operators has been generalized
Focus on defguard in the "Guards" page (#8795)
Improve Task.Supervisor.async_nolink/3 doc (#8794)
Escape protocols docs accordingly
Consolidate Protocols information in the protocol module
Remove project_plugins from dependency rebar.config (#8791)
Clearer documentation for GenServer timeouts (#8776)
Typo fixes in Kernel.def docstring (#8789)
Do not overwrite existent ERTS files in release (#8787)
Move precompilation section to the bottom, expand use cases
Added regex documentation for named character classes (#8785)
Use as_boolean/1 type in Enum.split_with/2 (#8778)
Remove Integer.to_string/1 and Integer.to_charlist/1 (#8777)
Reword docs about Collectable.into/1 (#8775)
Use "code point" instead of "codepoint" (#8774)
Improve Kernel.SpecialForms.quote/2 doc examples (#8771)
Change "vm" to uppercase in IEx.Helpers (#8772)
Add missing typespecs in File.Stat module (#8769)
Add missing arguments to man pages (#8764)
ExUnit: Improve timeout error message and info (#8766)
Change invalid uppercase letter in "ERlang" (#8765)
Sort alphabetically args in "mix new" task (#8763)
User "true or false" instead of the other way around (#8762)
Improve List.ascii_printable?/2 spec (#8761)
Add eval and version commands to releases (#8758)
Improve doc example in Kernel.Utils (#8759)
Run the formatter
Rename remote.boot to start_clean.boot
Check for POSIX compliant shell scripts in CI (#8750)
Shellcheck bin/elixirc too
Updates to Makefile and man
Optimize performance of dynamic dispatching for non-consolidated protocols (#8754)
Shellcheck improvements to bin/iex
Document the `$callers` tracking that is new in Elixir 1.8 (#8753)
Reverse order of OTP releases in .travis.yml (#8751)
Improve docs for Kernel.unless (#8748)
Avoid :erlang.apply/2 MFA indirection
Take into account spawned processes when checking for deadlocks
Improve docs for binwrite, closes #8746
Add remsh/1 to test output
Small improvements for releases
Bring back autocomplete for remote nodes, closes #8743
Include field names in generated type for records (#8742)
Make bin/elixir POSIX compliant (#8736)
Add function specs to Mix public interface (#8745)
More docs for releases
Avoid exporting and setting script var at once
Avoid races on windows on timer test
Wait until all log is flushed, closes #8738
Update CHANGELOG
Revert "Include optional dependencies in extra_applications (#8263)"
Organize iex test for l helper
Add missing parens to elixir.bat
Add Windows build badge
More fixes on Windows with werl
Add RELEASE_NODE, RELEASE_COOKIE and fixes
Add missing "`" to Mix.Release docs (#8732)
add missing "`" to Mix.Release docs
Clarify include_erts option
Wait until connected
Add docs to Kernel.CLI entry
Basic mix release support (#8677)
IEx h: sort results by arity (#8727)
Make .travis.yml valid (#8726)
CI feature: Reproducible build (#8701)
IEx docs examples improvement (#8725)
IEx.Helpers docs examples improvement (#8724)
Mix.Tasks.Compile.App moduledoc examples improvement (#8722)
Add typespec for Registry.unregister_match/4 (#8721)
Added typespec for Port.info/1 (#8720)
Added missing specs to new functions in System module (#8718)
Added missing specs for Node get_cookie/0 and set_cookie/2 (#8719)
Use default args in Calendar.ISO.*_to_string/* (#8707)
Add note about generating epub docs (#8711)
Mix.Compilers.Erlang.compile/6 example improvement (#8712)
Mix.Shell.Process docs examples formatting (#8715)
Do not compile Elixir with --warnings-as-errors (#8716)
Mix.Task moduledoc eample formatting (#8713)
Mix.Tasks.Test moduledoc example formatting (#8714)
Add spec for Mix.Project.consolidation_path/1 (#8710)
Improve the docs for ExUnit.Case (#8709)
ExUnit.Callbacks moduledoc example improvement (#8708)
Add missing @doc :since to Calendar.ISO functions (#8703)
Do not rely on timezone database for DateTime.now
Add missing doc and spec to Calendar.ISO.time_to_string/5 (#8676)
Raise error when attempting to run single line tests on multiple files (#8682)
Support SOURCE_DATE_EPOCH for reproducible builds (#8694)
ExUnit.Assertions docs examples improvement (#8698)
ExUnit.DocTest moduledoc examples improvement (#8697)
ExUnit.CaseTemplate moduledoc example improvement (#8696)
ExUnit.CaptureIO documentation examples improvement (#8695)
ExUnit.CaptureLog moduledoc improvement (#8693)
Explicity test EEx options in error messages (#8692)
Do not rely on map ordering when sorting specs, see #8689
Ensure we're testing the actual assignment metadata (#8691)
Do not execute :rand.uniform/1 at the time the docs are defined
Make tests pass in 2020 (#8688)
Improve docs for Access
Standardize on `iodata` variable name, as this is what docs use
Convert private is_iodata macro to a private guard
Remove confusing comment about dynamically generated cases
Add ability to filter by more than one line number (#8673)
EEx.SmartEngine moduledoc examples improvement (#8681)
EEx examples improvement (#8680)
Logger documentation improvement (#8679)
Agent moduledoc improvement (#8674)
Make documentation accurate in File.cp* functions (#8627)
Add version to umbrella projects too
Use hexadecimal notation in code points in tokenizer error msg (#8669)
Improve documentation and info on charlists (#8645)
Correct arity in List test (#8670)
Correct verb tenses (#8667)
Name args in Range.disjoint?/2 (#8666)
Optimize generated code for catch-all else clauses (#8661)
Simplify guards in List.ascii_printable?/2 (#8656)
Augment doctest errors with misplaced opaque types (#8653)
Mix.Config.import_config/1 doc improvement (#8665)
Format code sample in Mix.Project.in_project/4 doc (#8664)
Update Module.spec_to_callback to keep existing specs and copy docs (#8663)
Improve docs in Module functions and raise errors (#8635)
Hide functions accidentally made public (#8662)
Use "operating system" instead of OS (#8658)
Add test to List.ascii_printable?/2 (#8655)
Remove unneeded IO capture in IEx tests (#8652)
Move code and macros to after processes and applications
Update Kernel rounding documentation (#8648)
Rely on IO.warn whenever possible
Minor grammar fix in ExUnit.CaptureIO (#8644)
Ensure receive and send are done in a single read line operation, closes #8640
Improve capture_io signature and docs
Improve IEx.Introspection.h/1 error message (#8643)
Clarify the need for stop_supervised/1
Avoid dialyzer warnings on formatter, closes #8631
Use ID and not id (#8639)
Add missing colon and backticks (#8638)
Use PID instead of pid (#8628)
Add note to File.stat/2 and File.lstat/2 on optimization (#8632)
Sort Module.__info__/1 options alphabetically (#8637)
Mention Code.fetch_docs/1 and ExDoc in Module (#8634)
Replace use of "item(s)" with "element(s)" in List module (#8633)
Standardize non-doctest example in Agent moduledoc (#8630)
Use consistent variable naming in the docs (#8625)
Write to tmp instead of root
Do not halt the system on malformed .iex.exs (#8619)
Address bootstrap issue
Format compatibilty table so it reads better online
Allow __MODULE__.Something in a nested defmodule
Only perform behaviour checking if blaming
Consistently forbid upcasting in calendar conversion functions
Update typespec of drop to allow negative integer (#8614)
Update usage of Unicode characters in atoms, variables and friends (#8603)
Improve coverage of Version.Parser (#8607)
Update CHANGELOG
Revamp Elixir CLI (#8595)
Add File.rename!/2 (#8606)
Ensure we support counters in bitstring size vars
Provide better errors with invalid dates in Calendar.ISO (#8601)
Update Writing Documentation.md (#8599)
Use proper formatting in the docs for System.pid/0
Handle non-printable args in StringIO gracefully (#8600)
Remove remsh/1 from assertion
Remove remaining remsh autocomplete logic
Remove unecessary IEx module
Error on undefined variables in bitstring segments (#8598)
Use a descentralized mode computation for Logger (#8567)
Refactor Kernel.CLI tests and fix faulty assertions
Add System.restart/0 and System.pid/0 (#8597)
Handle unquote in remote call, closes #8588
Group tests and run the formatter
Properly handle closing brackets in do in EEx
Improve eex tokenizer further (#8594)
Allow more complex mixed expressions in EEx (#8591)
Document as_boolean/1, closes #8593
Remove needless comment
Move Calendar to its group
Also run CI on Erlang/OTP 21.2 (#8587)
Suggest quotes where appropriate (#8561)
Add verb to IO.ANSI.format/2 doc (#8586)
Show docs for callback with multiple clauses (#8553)
Module.__info__/1 docs and specs improvements (#8580)
Improve Protocol.UndefinedError message... (#8579)
Add documentation about ExUnit.Test.time (#8583)
Update enum.ex
Clear up MIX_ENV env variable before tests, closes #8584
Improve documentation for Enum.take/2 (#8581)
No longer wrap doctest errors in custom exception
Update System.build_info/0 docs (#8578)
Add additional guards for Keywords.merge/3 (#8574)
Add missing deprecation related to mix compile.erlang (#8577)
Improve spec and documentation for System.build_info/0 (#8575)
More docs to child specs
Make KeyError.message/2 private (#8573)
Improve docs for supervised proceesses
Default to required map keys
User defined types with the name `record` fail to compile in 1.8.0-rc.0 (#8569)
Avoid race conditions on behaviour checks, closes #8568
Streamline supervisor docs
Undeprecate Mix.Config.read!/2
Further improvements to Mix.Config docs
Improve docs for Mix.Config
Improve release instructions
Add IEx warning when using --remsh with 'dumb' terminal (#8563)
Halt IEx when it receives EOF from stdin (#8560)
Remove undocumented environment variable
Swap argument order to avoid failures on OTP master
Improve OptionParser docs a bit further
Rephrase useWerl option in elixir.bat (#8559)
Provide a quick introduction to OptionParser in mdocs
Correct use of repetitive "otherwise" in Map.get/3 (#8556)
Add a note about Hex and requirements, closes #8555
Add Supported Erlang/OTP versions for v1.9 (#8552)
Add Supported Erlang/OTP versions for v1.8 (#8549)
Improve `defprotocol/2` docs (#8548)
Move simple_one_for_one deprecations to v1.10
Standardize more TODOs
Update removal and deprecation annotations
Start v1.9
Remove deprecated Mix.Dep.loaded/1 (#8539)
Deprecate `%{key => value}` in typespecs (#8537)
Add :reduce to for comprehensions (#8531)
Remove trailing commas in templates (#8545)
Minor doc changes in Collectable protocol moduledoc (#8543)
Update CHANGELOG.md (#8540)
Move regexes guard up for better error messages, closes #8538
Raise compile errors on bad record types
Raise compile errors on bad binary types
Raise compile errors on bad range types
Remove week_of_year
Add missing typespecs to Macro.underscore/1 (#8536)
No longer wrap expression in binary as Erlang/OTP 20+ does it by default (#8530)
Add no_spawn_compiler_process option to previous OTP releases
Format optional macrocallbacks in IEx.Helpers.b/1 (#8529)
Use typespec info in IEx.Helpers.b/1 (#8514)
Simplify custom links when linking to Kernel and SpecialForms (#8528)
Ensure changes in deps propagate to all umbrella children
add hint for behaviours on UndefinedFunctionErrors (#8517)
Improvements to Operators guide (#8512)
Use "Unix-link / Bash" instead of Linux (#8508)
Properly stylize "Windows 10" and "PowerShell" (#8519)
Minor doc changes in the Protocol.consolidate/2 (#8518)
Mark escript.build and archive.build as recursive, closes #8393
Raise for capture outside of function, closes #8516
Add powershell environment (#8511)
Move record warning to warning test file
Add $callers tracking to Task (#8510)
Touch-ups to String.jaro_distance/2 (#8506)
Replace quotation marks (#8505)
Replace quotation dash with "--"
Replace en-dash with regular hypen
Use System.os_time/1 in the Erlang & xref compilers (#8501)
Make sure records use the dsetelement optimisation (#8062)
Revamp List.ascii_printable?/2 (#8491)
Clarify scope of `=>` operator in documentation (#8465)
Update CHANGELOG
Allow posix time on touch and document proper defaults
IO.ANSI.Docs: Make regex in escape_underlines_in_link/1 handle all schemes (#8497)
Simplify regex in URI.parse/1 (#8498)
ascii -> ASCII (#8499)
Stricter link check in IO.ANSI.Docs module (#8494)
Inline type definition for easier navigation (#8478)
Elaborate on which characters are considered printable in charlists (#8492)
Clarify String.next_codepoint/1 re invalid UTF-8 (#8489)
IEx: Special case "i" helper for improper lists
Add List.improper?/1
Check for function arity in guards for aggregates in Enum (#8487)
IEx helper "i" lists Implemented Protocols sorted alphabetically (#8472)
Compare String.next_codepoint/1 with binary pattern matching (#8482)
Replace calls to :lists module in files outside lib/elixir (#8467)
Don't trigger ExDoc warnings on compatibility-and-deprecations page (#8483)
Introduce Mix.target (#8443)
Update docs (#8479)
Avoid race condition on device re-registering
Be more assertive on expected broker messages to avoid races
Add `Range.disjoint?/2` (#8458)
Cover degenerate case in the description of ranges (#8473)
Correct return types for c:Calendar.day_of_era/3 (#8474)
IEx helpers: port and reference should be in lowercase (#8471)
Update docs in List.keystore/4 & keyreplace/4 mentioning new_tuple (#8470)
Simplify Makefile by introducing --path option to compile.app task (#8438)
Add missing `@doc since: "1.8.0"` to new functions (#8466)
Improve the documentation of Range (#8464)
Add week_of_year/3 (#8460)
Improve error message in multiline iex doctest (#8462)
Add Calendar callbacks and Calendar.ISO implementations
Update GitHub issue template with mailing list link (#8451)
Make sure DateTime.truncate returns DateTime when passed map (#8448)
Add '@doc since: 1.8.0' to IEx.Helpers.port/1,2 (#8447)
IEx port/1,2 helpers (#8439)
Add Calendar.datetime type and allow it in DateTime functions (#8444)
Consider :only from deps in compile.app (#8441)
Improve documentation of Enum.reduce_while/3 (#8446)
Avoid warnings on mix/tasks/new_test.exs
Disable tracer after use
Break Mix deps tests into groups
Change type to link to Elixir docs (#8436)
Remove outdated comment in NaiveDateTime
Remove :console backend from app env in Mix tests (#8432)
Eliminate warning for an unused variable (#8431)
Add special fn case to signature_to_binary (#8429)
No longer persist dynamically added logger backends (#8424)
Raise when passing invalid compiler flags to Elixir, closes #7839
Update Supervisor calls in Registry docs (#8423)
Update supervised Task docs (#8422)
Preserve user's choice on operators, closes #8417
Consistently use eol? in the formatter
Remove unnecessary try block in GenServer.reply (#8420)
Use --module value when setting up filenames in mix new (#8419)
Update File.Stat typespec (#8418)
Streamline EEx.Engine docs
Optimize EEx template rendering (#8413)
Add missing spaces in error message (#8412)
improve String moduledoc discussion about splitting a string with a pattern (#8411)
Improve error message on DateTime.add/4 (#8410)
Improve syntax on DateTime
Do not use same name twice
Compile charlist interpolation more efficiently
Add List.to_charlist
Always inspect MapSet content as regular lists (#8409)
Add DateTime.add function (#8402)
Improve error message for `BadFunctionError` (#8408)
Mention Erlang/OTP 21 no longer blocks on GenServer.cast/2 doc (#8407)
Use proper calendar types (#8403)
Use "time zone" instead of "timezone" (#8404)
Introduce IEx.Server.run/1 (#8395)
Wrap httpc read in a task to timeout (#8394)
Add missing ExUnit improvement to CHANGELOG (#8397)
Omit parens on calls with only do/end blocks (Macro.to_string) (#8396)
Revise use of "flag" terminology (#8347)
Remove code duplication by creating remove_colons/1 private function (#8392)
Allow DateTime structs to be passed to DateTime.from_naive in typespecs (#8387)
Update Kernel.sigil_D, sigil_T, and sigil_N macro argument names (#8388)
Split calendar_test apart, remove support files from fixtures
Better document when -> can be used, closes #8386
documentation typo fix: Calendar.put_time_zone_database/1 (#8385)
Update CHANGELOG
Add Macro.struct!/2 and use it where reasonable
Resolve circular struct dependencies in typespecs (#8377)
Add TimeZoneDatabase behaviour for time zone data.
Make __info__ docs a callback, closes #8376
Ignore escape characters inside markdown backticks (#8384)
Improve docs for jaro_distance/2
Use "etc." and not "etc" (#8379)
Improvements to the Mix module documentation (#8299)
Expand operands in size*unit bitstring modifier (#8375)
Minor docs updates (#8372)
Add `@impl true` to Mix tasks (#8371)
Remove APPENDIX from Apache 2 file
Handle years more than 9999 when printing, closes #8368
Simplify Task.Supervised implementation
Support subnormal floats in Float.ratio/1 (#8360)
Set the cwd for system calls in the git scm (#8279)
Avoid using function autolink in docs whenever possible
Update documented example for ExUnit register_attribute (#8363)
Update helpers.ex
Update helpers.ex
Change else clause error to warning (#8351)
Update TODO notes
Add since and spec to Mix.Task.recursing?/1 (#8349)
Respect :raise in test and move recursing to Mix.Task
Info instead of error on unmatched umbrella tests (#8332)
Improve GenServer docs
Remove deprecated IPv6 httpc setting
Avoid errors with more than one duplicated key (#8346)
Optimize common paths in date/time
Change order in which filter meesage are printed in  ExUnit.CLIFormatter (#8342)
Change the precedence in ExUnit.Filters.eval/4 (#8340)
Add deprecation
Replace raise Runtime+message by simply raise
Deprecate System.cwd/0 and System.cwd!/0 (#8344)
Remove backticks from error messages and test desc (#8343)
Remove extra empty line
Remove @doc from tests
Improve error message for invalid quoted expression (#8336)
Add OTP 21.1 to Travis (#8338)
Update AST documentation (#8337)
Format warning notation in error message (#8334)
Raise on conflicting .formatter.exs files (#8323)
Raise when piping into unquote, closes #8331
Mention Macro.escape/1 in quote docs
Document --only and --include --exclude difference (#8330)
Add missing space in error message (#8328)
Improve String.split/3 doc (#8329)
Capitalize Rebar (#8324)
Capitalize Mix (#8322)
Check for line ending in output messages (#8319)
Improvements to the Version module documentation (#8313)
Document missing auto-reenabled tasks xref and cmd (#8320)
Properly format atoms when denoting options (#8318)
Make folder path example more obvious (#8306)
Review Version module specifications (#8315)
Revert "Add new line after make test_* tasks are executed (#8316)"
Add new line after make test_* tasks are executed (#8316)
Swap order of commands in README file to run `make test` (#8314)
Do not count invalid and excluded twice if setup_all fails
Update failure message in ExUnit setup_all callback (#8310)
Clarify docs in ExUnit.Callbacks (#8300)
Update use of numbers as adjectives (#8309)
Use "third-party" instead of "3rd party" (#8308)
Use "charlist(s)" instead of "char list(s)" (#8307)
General documentation improvements (#8302)
Touch up max_failures tests in ExUnit (#8294)
Use the formal expression "For more information" (#8303)
Change Enum.reduce_while/3 (#8296)
Improve wording in "See the section" (#8298)
Add backticks around "set of `options`" (#8297)
Standardize use of "built-in" term (#8304)
Allow @type, @opaque, @typep, @spec, @callback, and @macrocallback to be used as module attributes (#8289)
Declare var/0 as built-in type (#8286)
Remove warning related to imperative assignments (#8288)
Point to the correct module documentation (#8282)
Improve docs of Logger.BackendSupervisor (#8280)
Rename Logger.WatcherSupervisor to Logger.BackendSupervisor
Do not make notify public
Introduce ExUnit --max-failures feature
Do not return test_module to avoid data copying in runner
ExUnit: Replace truthy and falsy functions in assertion tests (#8267)
Improve grammar in defstruct/1 docs (#8274)
Improve ExUnit example with messages
Correct use of truthy and not true (#8268)
Update supervisor_test.exs (#8276)
Improve docs for Enum.split_while/2 (#8273)
Link to https://elixir-lang.org instead of to http:// (#8272)
Reduce uses of note that
Use NOTE THAT (#8270)
Use "shut down" when it is a verb (#8269)
Yield to avoid race in tests, closes #8275
Use setup_all instead of "setup all" to refer to the callback (#8266)
Use ex_unit and not exunit in Makefile log (#8265)
Add --no-load-deps flag to deps.loadpaths task (#8256)
Include optional dependencies in extra_applications (#8263)
Run the formatter
Ensure eval_quoted properly resets last definition, closes #8261
Rename variables and refactor config and loop in ExUnit  (#8257)
Run the formatter
Allow child_spec function to be doc'ed through use
Expose IEx.Server.start/1 for custom sessions
Update CHANGELOG
Send & handle kills concurrently (Task.Supervised) (#8260)
Wait for worker termination in parallel compiler (#8259)
Avoid copying unused files in "mix compile.elixir" diagnostics test (#8258)
Raise when reaching max chidren in Task.Supervisor.async_stream (#8239)
Unload previous archive versions before building (#8253)
Use Git, GitHub, Hex instead of git, github, hex (#8255)
 Range documentation: "values" -> "integers" (#8251)
Use the no_spawn_compiler_process in more recent release
Improve docs for unquote, closes #8249
Print number of tests from graphemes tests
Bypass erl_lint and spawn compiler processes manually (#8241)
Don't raise undef type errors on invalid type ann (#8243)
Check for singleton type vars in Elixir (#8234)
Let the undefined function error be performed in Elixir-land (#8231)
Exclude deprecated functions in "did you mean?" hints (#8240)
Improve the docs around async_stream (#8236)
Improve documentation regarding Child Specifications (#8201)
Improve docs for @impl (#8237)
Raise an error in Task.Supervisor.async when reaching max_children (#8238)
Warn on underspecified opaque types (#8232)
Link docs for defdelegate functions (#8228)
 Optimizes multiple :maps put and merge operations (#8223)
Consider that Macro may have not been bootstrapped
Optimize time_from_day_fraction
Format kernel accordingly
Avoid range creation in Calendar.ISO.valid_date?/3
Add guards for atoms app and key (#8227)
Change "args" to "init_arg" in GenServer-like modules (#8226)
update undigits doc
Added a section to the docs on pasting multiline expressions into IEx (#8221)
Reword "mix format --check-equivalent" help text (#8222)
Forbid using only the "else" clause in "try" (#8219)
Add a check for record with conflicting definitions (#8215)
Raise on empty accumulator only on the first time inside Stream.cycle/1 (#8214)
Improve Record @docs (#8212)
Improvement to xref docs
Clear up Macro.Env.context description in the docs (#8211)
Small optimization in `Stream.Reducers.chunk_every/5` (#8206)
Use state instead of buffer for clarity
Add clarification about using `Process.send_after/4` with `time` as zero (#8204)
Change invalid typespec error to warning (#8202)
Improvements in ExUnit documentation and error messages (#8192)
Use head definition meta to warn about unused args (#8198)
Do not rely on atoms phash2 to check for function determinism
Improve message for unnecessary quotes, closes #8197
Remove `Guard test tuple_size(...) can never succeed` dialyzer warning on try (#8196)
Do not pass the whole env around
Check for unused, undefined, and redefined types (#8163)
Improvements in Task module  (#8139)
Improvements in the documentation (#8189)
Improvements in Mix docs (#8190)
Link to IEx.pry correctly (#8191)
Use Range instead of link to type
Improve wording in generated umbrella config.exs (#8195)
Export IEx.Server.start/0 for running without a callback
Raise errors with duplicated entries on import (#8188)
Improvements in documentation of ExUnit.Filters (#8185)
Rearrange assertions to capture error messages (#8186)
Minor edits to mix test docs (#8179)
Remove invalid flag from Emakefile (#8177)
Ensure that mix --cover displays correct coverage in an umbrella app (#8176)
Revise use of position in Enum module, and replace it with index (#8135)
Standardize namings in IEx module (#8175)
Tiny typo (#8172)
Minor improvement on ExUnit.CaptureIO (#8171)
Add a note about getting the current stacktrace
Revert wrong warning on parse_transforms removal
Mention variable size in bitstring docs (#8169)
Add @impl to the Mix.Task example (#8152)
Clarify the usage of 'var' keyword in spec guards (#8167)
Add note to `Task.yield_many` about output ordering (#8164)
Raise on invalid type annotation in typespecs (#8161)
Document that "else" can be used directly in function definitions (#8148)
Tidy EEx docs (#8159)
Remove Version.matchable/0 type (#8155)
Add Version.parse_requirement!/1 (#8156)
Release structs before asserting deadlock
Remove --template='' dir in git init to avoid warnings
Remove fs fixtures in favor of in test content
Remove trailing whitespace
Document Path.wildcard/2 expects / dir separator (#8149)
Use imported function in elixir_parser.yrl (#8151)
Expand paths so mix format path\for\windows.ex works (#8147)
Do not use user defined templateDir and hooksDir (#7923)
Remove race in GenServer tests
Minor tweaks to Enum documentation (#8140)
Link to functions and types (#8138)
Improve typespecs and documentation in Code.fetch_docs/2 (#8137)
Add section "Reserved module names" in defmodule/2 (#8136)
Clarify that multiple guards are useful for exceptions (#8127)
"Fall back" the verb is 2 separate words (#8131)
Use "file system" instead of "filesystem" (#8132)
Treat warnings as errors (#8006)
Minor tweaks to Agent docs (#8110)
Docs: change wording about WithClauseError (#8122)
Update File doc with expected errors (#8123)
Avoid checking for dependencies until we are sure a task is not available
Improve wording in assorted Code @docs (#8121)
Update test module sent to formatters (#8116)
Allow Inspect protocol to be derivable with the only/except options (#8104)
Do not run doctests with empty :only option (#8108)
Version.Parser.parse_version typespec improvement (#8115)
Update docs for `ExUnit.configure/1` and `ExUnit.Formatter` (#8111)
Standardize on `__MODULE__` in `@type t` definitions (#8113)
Consider :runtime and :app from mix.exs (#8109)
Document limitations of the runtime flag
Rename inspect to inspect_opts in Inspect.Algebra (#8106)
Add guard grouping to Elixir docs
Document config_change/3 callback
Use ETS instead of ets in documentation (#8099)
Correctly tag struct invocations, closes #8097
Remove check for legacy @export_type attribute (#8093)
Add missing key to type in `ExUnit.Test` (#8094)
Remove unnecessary "no_return" types in specs (#8092)
Add missing typespecs to public functions in `System` (#8090)
Add missing typespecs to public functions in `ExUnit` (#8089)
Use refute_received to not wait for the timeout (#8091)
Implement `ExUnit.after_suite/1` callback (#8087)
Update documentation of Mix.Task.Test (#8084)
Move --failed flag to alphabetize cli options (#8083)
Improve unused variable warnings (#8071)
Small optimization on `elixir_bitstring:expand/4` (#8074)
Ensure Macro.expand/2 does not change the meaning of interpolations
Update Process docs (#8073)
Add documentation example for a common use of Task.Supervised.async_nolink (#8060)
Small optimization on `expand_args/2` (#8069)
Consistently handle inputs in NaiveDateTime and DateTime
Update docs for truncate/1 on calendar types (#8065)
Only add context if vars hygiene is enable
Do not allow atoms inside maps
Optimize deps_paths filtering
Add examples for File.touch/2 (#8064)
Add :depth and :parents options to Mix.Project.deps_paths (#8061)
Make bind_quoted aware of variable contexts
Do not use protocols while consolidating
Ensure to always use existing references
Do not inline non-BIFs
InvaliadStructFieldValue -> InvalidStructFieldValue (#8053)
Remove error message from IEx test suite (#8055)
Overriden -> Overridden (#8054)
Repeat the variable name at the end for convenience
Mix docs improvement (#8050)
Minor improvements in match operators code (#8048)
Inspect.Algebra typespecs improvement (#8047)
Update CHANGELOG
Delete counter for vars in nested quotes (#8042)
Rewrite match operators in elixir (#8043)
Accordingly mark top level optional dependencies from child deps (#8035)
Reconsolidate protocols if stale local deps change (#8037)
Added unit type to DateTime.diff spec (#8044)
Use scoped deterministic counters in AST expansion
Revert "Use deterministic counters in AST expansion"
Do not fail suite if there are no tests to run
show last n messages from mailbox on assert receive fail (#8039)
Use list_to_bitstring so we don't have to track binaries (#8036)
Diverge on diverged system_env
Add a TODO about deprecated compiler returns
Allow :raw option in File.exists?, regular? and dir? (#8028)
Unify index handling on List.*_at functions
Take negative years into account in DateTime (#8033)
insert_tail: shortcut common inputs to List.insert_at/3 for performance (#8025)
Change error message for calling missing function in a guard (#8026)
Update CHANGELOG
Improve test suite for unnecessary quotes (#8011)
Add List.myers_difference/3 (#8021)
Unify alias doc handling
mix help when theres a task and alias (#8020)
Avoid Mix.ProjectStack deadlock, closes #8024
Add String.bag_distance/2 (#8022)
Change name of first argument of StringIO.open/2 to string (#8018)
Remove :since metadata when @doc false (#8017)
Do not use iso_days to mean just the day part
Registry: Associate value to process using via tuple (#8007)
Update assertions examples with the new format (#8013)
Add a note with ordered: false and Stream.run
Speed up from_iso8601 when offset does not change days (#8004)
Improve docs for Task.await/1
fix typo in module doc [skip ci] (#8008)
Remove since for @doc false
Remove warnings for docs in the same clause
Consistently expand patterns and guards in assertions (#8000)
Improve wording in String doc (#7997)
Talk about the new announcement mailing list (#7996)
Change the documentation for defdelegate from :lists to Enum (#7994)
Rename definition header to function head
Rename without body/bodiless to function head
Add an example for compile_doc warning (#7988)
Validate @on_load function in Elixir (#7973)
build: allow downstream packagers to tweak manpage generation (#7991)
Skip intermediate parts when creating NaiveDateTime
Optimize ISO-8601 parsing for UTC
Fast-track quoting lists with disabled unquote
Don't maintain order in env.vars
Optimise var building
Separate testing for unquotes from escaping
Use deterministic counters in AST expansion
Refactor elixir_quote:linify
Inline construction of remote erlang calls in compiler
Make Inspect.Algebra docs examples more formatter-compatible (#7978)
Mark contextual_vars as private
Add more deprecations to the formatter
Tiny perf improvements to the compiler
Make Registry docs examples more formatter-compatible (#7976)
Update Process.info spec to reflect the possible nil return value (#7977)
Make URI docs examples more formatter-compatible (#7975)
Make Keyword docs examples more formatter-compatible (#7974)
Make Module docs examples more formatter-compatible (#7972)
Make Kernel.Utils.defguard/2 doc example more formatter-compatible (#7971)
Improve Module.defines?/3 examples (#7968)
Make GenServer docs examples more formatter/iex compatible (#7969)
Make Supervisor.Spec docs examples more formatter-compatible (#7967)
Make OptionParser docs more formatter-compatible (#7966)
Path docs improvement (#7965)
Make Macro docs examples more formatter-compatible (#7964)
Make Map.new/1 doc more formatter-compatible (#7963)
Make File docs examples more formatter-compatible (#7957)
Make IO docs examples more formatter-compatible (#7958)
Make Port docs examples more formatter-compatible (#7959)
Make StringIO docs examples more formatter-compatible (#7960)
Make Kernel docs examples more formatter-compatible (#7961)
Rename variable utc_date (#7962)
Allow to prune metadata while escaping (#7949)
Make Supervisor docs examples more formatter-compatible (#7954)
Make Stream docs examples more formatter-compatible (#7953)
Make Agent docs examples more formatter-compatible (#7952)
Use quote fragments to remove duplication and optimize calendar parsing (#7951)
Make Task docs examples more formatter-compatible (#7950)
Make Record docs examples more formatter-compatible (#7948)
Make Process docs examples more formatter-compatible [skip-ci] (#7943)
Make Enum docs examples more formatter-compatible (#7941)
Make example in List moduledoc more formatter-compatible [skip ci] (#7940)
Added missing commas in Application.get_env/3 examples [skip ci] (#7939)
Make Access docs examples more formatter-compatible (#7938)
Clean up private elixir_config API
Throttle system warnings per location
Properly annotate key errors for structs, closes #7935
Move some runtime deprecations to compile time
Add reference to Integer.parse/2 in String.to_integer/1 (#7924)
Remove leftover spaces
Clarify Application.get_env by illustrating a use case (#7929)
Optimize metadata merging and ensure no nil leakage (#7927)
Properly populate top_level field of deps (#7931)
Check duplicated @on_load attributes (#7921)
Remove unecessary :message key
Allow all args on Mix.Dep.loaded
Added missing @doc :since metadata (#7922)
Marked reference to `Task.Supervisor` in Task moduledoc [skip ci] (#7919)
Use "time zone" instead of "timezone" everywhere (#7917)
Marked references to :re module in Regex docs [skip ci] (#7916)
fixed typo in float moduledoc (#7915)
Add an additional example to the docs for String.jaro_distance/1
Clarify documentation of @compile :inline flag (#7909)
Doc fixes
Clarify how to assert on exits from linked processes (#7904)
Remove duplicated sentence from Map's doc (#7907)
Minor update in the docs for Kernel (#7906)
Simplify guards page
Add guard: true to new guards
Annotate @doc metadata when something is a guard (#7893)
Make sure Logger is flushed before reattaching, closes #7903
Optimization for Float.round/2 when precision is 0 (#7899)
Test we don't warn for unecessary quotes in uppercase atoms/keywords
Add Function docs to "Basic Types" group (#7900)
Clarify how to configure :test_coverage (#7896)
Update --cover docs (#7897)
Update CHANGELOG.md (#7895)
Print checksums headings
Add Kernel.ceil/1 and Kernel.floor/1 buildins (#7888)
Update Process documentation (#7894)
Properly add parens around when with keywords as argument
Optimization for Float floor and ceil functions when precision is 0 (#7891)
Show documentation metadata in IEx (only since and deprecated for now) (#7886)
Ignore unknown child info in Logger.Translator (#7892)
Update doc for gen server add hibernate_after (#7064)
Minor updates in Syntax Reference page (#7890)
Compile protocols in elixir syntax (#7832)
Prefer local calls/types in Macro
Use map syntax in comprehensions instead of maps:put/3
Rely on Erlang/OTP normalization which is faster
Update deprecations list
Hard deprecate previously deprecated APIs
Deprecate using non-empty lists with the Collectable protocol (#7785)
Require Erlang/OTP 20+
Start v1.8-dev
Amend release process information
Do not send binread to streams with encoding, closes #7729
Properly guard in_project arguments
Properly pad formatted typespec
Small edits in CHANGELOG.md (#7879)
Use ets table for gathering cover data in test task (#7850)
Add soft deprecation attributes to modules
Allow :deprecated to be given as doc metadata
Reenable tasks without side-effects, that only run code (#7855)
Use passive present tense (#7877)
Support adding arbitrary docs metadata with `@doc keyword()` (#7852)
Change wording in error giving options (#7875)
Make description of IEx.flush/0 clearer (#7874)
Rename apply/3 second arg (#7873)
Specify that "mix new" APP name only takes lowercase ASCII letters (#7872)
Improve Supervisor docs and specs (#7871)
Be consistent in the use of present tense (#7869)
General corrections (#7870)
Improve specs and documentation for List.wrap/1 (#7864)
Use backtick in "returns true" and "returns false" in docs (#7865)
Change arg names in example in receive/1 (#7863)
Improve docs and type for Kernel.send/2 & Process.send/3 (#7862)
Extended documentation for sigils (#7861)
Clarify documentation in GenServer (#7860)
Use proper names when describing boolean operator args. (#7859)
Add comment in typespecs page next to port type (#7858)
Use garbage-collected as a single word (#7857)
Be precise in documentation about after values in Kernel.SpecialForms.receive/1 (#7856)
Do not capture stderr on async tests
Add missing colon in Logger documentation (#7853)
Update TODO and CHANGELOG
Add CHANGELOG highlights (#7846)
Replace compile_time_purge_level by compile_time_purge_matching (#7847)
Properly inflect names for structs
Use docs metadata to determine number of args with defaults in IEx
Add since, deprecated, and defaults to docs metadata
Move compilation of docs metadata to Elixir side
Use proper left == right in IEx signature tests
Lift signature_to_binary from ExDoc
Warn on unnecessary quotes (#7838)
Only count a cover line once
Do not account for generated lines in coverage summary
Include initial_call and registered_name in metadata (#7844)
Do not force clauses with comments to be unfit (#7843)
Update docs and CHANGELOG
Return error tuple for long quoted atoms
Add more test cases to invalid interpolation
Return an error tuple for interpolation in function call (#7836)
Reraise with stacktrace in task with shutdown
Run the formatter on translator tests
Include Logger metadata in crash reports
Add the test specific backend once
Reformat multiline logger calls
Unify proc_lib handling in tasks
Include crash_reason in Logger translator metadata
Include override true in rebar dependencies (#7837)
Run deps.get on parent and child on local installer (#7835)
Make sure converged dependencies are fetched on child projects
Automatically cache dependencies on load
Ensure Mix.Dep.cached() is set before compilation (#7833)
Run the formatter on dep_test
Ensure we re-run resolution when overriding a skipped dep in umbrella
Effectively deprecate Code.get_docs/2
Remove Code.get_docs/2 and streamline the new chunk generation
Use @deprecated instead of IO.warn in Kernel.Typespec (#7831)
Beginner-friendly revisions to Elixir's documentation (#7821)
Migrate to `Code.fetch_docs/1` (#7828)
Carry on the original naming of an argument to provide more clarity (#7827)
Check for no_generators? once
Do not leak inner key representation in signature
Adopt EEP 48 and add Code.fetch_docs/1 (#7826)
Unify handling of keywords with and without parens
Improve error messages for boolean operators with =, closes #7730
Add a note about the line length guarantees
Update CHANGELOG
Warn for redefined docs across clauses
Do not include overridables in definitions, closes #7823
Handle other unescaped tokens in tokenizer
Return error on bad hex escaping (#7809)
Add a section about pattern matching on struct names
Remove redundant code in IEx.Config (#7822)
Add a --force flag to mix archive.uninstall (#7818)
Make "mix help" list aliases (#7805)
Update Module doc - split behaviour link (#7814)
Allow force recompilation in IEx (#7767)
Updated docs für GenServer.terminate (#7812)
Disambiguate def/2 docs regarding anonymous functions (#7810)
Refactor ArithmeticError.blame/2
Annotates arithmetic error for better debug experience
Make test suite for assert_no_guard more robust (#7801)
Add `blame` callback for KeyError (#7803)
Ensure proper divergence error between remote and non-remote dep(#7802)
Update mix.ex (#7799)
Add assert no guard on !, && and || (#7797)
Improve examples of aliases calling tasks to show its capabilities (#7792)
Improve error messages for bad map key patterns
Add :allocators runtime_info topic (#7658)
versbose -> verbose
Updated with umbrella project example (#7790)
Typo in gen_server.ex comments (#7793)
Include SHAs on releases
Polish documentation of Kernel module (#7788)
Add missing backtick to logger docs
Restore and/or optimisation (#7764)
Add parens in doctest example
Correct grammar in Logger documentation (#7784)
Clarify the use of the value `continue`
Only evaluate Logger macro arguments when the message will be logged (#7768)
Add metadata based compile time logger purging (#7777)
Warn if nested comparisons are found (#7773)
Include caller information on struct expansion errors
Move did_you_mean for undefined function error to Exception.blame
Format deps.git_test.exs
Clear tasks so we can recompile the git repo in tests
Do not break assertion arguments apart if they are all quoted literals
Take into account structs from stale local deps (#7776)
Improve error message on nil dispatch
Blame badarg on apply/3 for better error messages
Only show mismatch hints for fn+do/end
Perform clean builds for dependencies on outdated locks
Revert "Support for map.field in guards"
Clarify the behaviour of dynamic remote calls in guards
Log to stderr if there are no logger backends, closes #7640
Document long running processes pitfall in mix cmd, closes #7495
Update CHANGELOG and deprecations
Add handle_continue/2 and deprecate super in GenServer callbacks
Allow map.field in guards for Erlang/OTP 21+
Test OTP-21.0 on travis (#7770)
Add Code.purge_compiler_modules/0
Add Mix.Project.config_mtime/0
Add info on child spec formats in DynamicSupervisor docs (#7763)
Expands the documentation of Application (#7731)
Update CHANGELOG
Move generate_app away from root
Update to Erlang/OTP 21.0
Correct bug in generate_app escript
Move the summary of child specs to the child_spec/1 section
Remove trailing period to match general style
Move rebar escripts to mix fixtures
Replace use of rebar in build scripts
Document DateTime.diff/2 leaps (#7756)
Add instructions for fixing deadlock errors (#7750)
Refactor __info__ so it generates smaller assembly (#7753)
Update RELEASE.md (#7749)
Improve documentation for Application.app_dir/2
Leverage defguard in Inspect.Algebra
Improve Enum docs regarding "truthy values" (#7743)
Add a note about apply/3, closes #7740
Only compute eol if necessary
When fn is followed by a newline, use multi-clause formatting style (#7737)
Add hints on mismatched do/end and others pairs
Clarify linear time behaviour, closes #7735
Add support for "--organization" in archive/escripts installation (#7732)
Clarify language syntax rules under Unicode 11
Update to Unicode 11
Erlang typespec vars should be fully converted to elixir variables (#7724)
Raise if piping into bitstring operator <<>> (#7725)
Indent and format an example all the way (#7723)
Change `:type` to `:test_type` and properly document (#7720)
Update CHANGELOG
Update to Erlang/OTP 21.0-rc2
Mention Path.wildcard/2 in :inputs docs
Add bad digit clause to Base.decode32!/1,2 for case: :mixed (#7715)
Point users towards Kernel/IO.inspect in the protocol docs (#7713)
Added References to Operators (#7714)
Avoid calling truncate_n/2 if truncate is :infinity (#7701)
Correct typo (#7704)
Adds minor reference for Kernel functions Enum doc (#7702)
Match files starting with dot in "mix format" (#7697)
consistently use "supervision strategy" term (#7695)
Use pdict instead of Agent on Mix.Config (#7687)
Consider possible accumulator in Stream.do_zip_step/2 (#7672)
More precise started and loaded_applications typespec (#7691)
Add "@impl true" to Exception callbacks (#7681)
Improve error message for bad argument to the h helper
Add performant impl for string upcase/downcase `:ascii` mode (#7680)
DynamicSupervisor documentation fix (#7686)
Improve File.rmdir/1 documentation (#7684)
Extend IEx autocomplete docs (#7682)
Slightly improve the docs for Stream.run/1
Remove the Access.get/3 callback (#7670)
Rename single-char variables from docs (#7676)
Use first..last in ranges (#7675)
Remove unnecessary catch from the parser (#7674)
Make more readable Enum.reverse/2 doc code (#7678)
Spelling corrections (#7679)
Format iex/helpers_test.exs
Ensure t/1 still works for Erlang types
Better document File.stream options, closes #7671
Also inflect the id from name in the Task.Supervisor child_spec
Display simple coverage summary to console (#7664)
Use common terminology in ExUnit.Diff
Avoid double matching on struct name in ExUnit.Diff
Improve guards in Kernel.*_in (Access-related) functions (#7669)
Avoid no match clauses from generated definitions
Standardize examples style and improve guards in Access
Simplify improper lists handling in ExUnit.Diff
Polish docs around Access and Access-related functions in Kernel
Do not traverse local entries when force compiling
Consider if definition should be checked for @impl
Improve diff output for subset lists
Make ExUnit formatting be better for subset lists (#7651)
Slightly refactor some code in elixir_erl_try
Remove extra whitespace in test file
Unify tuple and list logic in ExUnit.Diff
Doc String functions that accept compiled patterns (#7665)
No longer make DynamicSupervisor sup_flags opaque, closes #7666
Improve markup and grammar in open docs
Update logger.ex
Add helpful error message for improperly formatted type definitions (#7650)
Improve docs for IEx.Helpers.open
Improve docs for DynamicSupervisor.count_children, closes #7656
Count children restarting on exit in DynamicSupervisor max_children
Implement illegal_bin_pattern check in Elixir pass (#7444)
Condititionally compile and lazily compute __STACKTRACE__ (#7648)
Erlang/OTP 21 logger integration (#7649)
Improvements to compatibility and deprecation docs
Document Process.monitor/1 behavior for already dead processes (#7652)
Simplify ExUnit.Diff and remove unused clauses
Optimize Keyword.merge/2 for empty lists
Optimize Enum.to_list/1 for maps
Avoid capture operator warnings
Add a test for rescuing one of multiple exceptions
Provide better warnings when grouping multi clause functions (#7630)
 Move stdlib deprecations to `@deprecated` attribute (#7637)
Normalize trace config docs for Mix.Tasks.Test (#7642)
Improving wording on String.splitter docs (#7636)
Pass tracker destination forward to dynamicly defined modules
keys and values of decoded query are always binary (#7635)
Update CHANGELOG
Support infinity timeout on yield_many, closes #7633
Improve test names and regroup assertions in Inspect.BitStringTest
Update page list in Kernel (#7632)
Deprecate Exception.normalize/2 and Exception.format/2  (#7628)
Remove duplicate assertion in Inspect.BitStringTest
Remove throw/catch pattern for Keyword.delete/2 and friends (#7622)
Optimise String.ends_with?/2 (#7593)
Avoid false positive warnings
Optimise String.starts_with?/2 (#7592)
Use binary_part/3 instead of :binary.part/3
Provide more examples on how to improve the formatter output
Improve coverage and error messages when mixing clauses with defaults
Improve processes feedback in library guidelines
Standardize use of Erlang, OTP and Erlang/OTP names (#7618)
Add .formatter.exs to the list of inputs to format (#7620)
Add missing paren in config.exs template (#7621)
Remove unused convenience vars in elixir_rewrite (#7612)
Leave blank line before closing comment if idented (#7609)
Deprecation table: mention in table heading "Hard-deprecated in" (#7611)
Add missing deprecations in v1.4 (#7615)
Standardize on SECURITY PATCHES
Warn when a variable/atom that ends in / or ? is followed by = with no space (#7608)
Allow multiple DynamicSupervisors to be started easily (#7594)
Erase elixir_parser_columns from the process dictionary after use (#7601)
Consider the owner process may be dead
Include endianness in the regex version (#7600)
Mention in the docs every function inlined by the compiler
Sort alphabetically elixir_rewrite.erl
Mention that Map.merge/2 is "Inlined by the compiler" (#7598)
Improve String.printable?/2 (#7580)
Do not release missing structs in the compiler
Do not depend on Supervisor.start_child
Clarify behavior of strategies regarding the restart option (#7589)
Add informations about `Code.compile_string/2` insecurities (#7587)
Use descriptive argument name in Kernel.Utils.raise/1 (#7588)
Add diff to doctest (#7585)
Replace Mixfile with Mix project in docs (#7581)
Use timeout() typespec in Supervisor (#7579)
Add __STACKTRACE__/0 to Naming Conventions page (#7578)
Make clear Process.alive? is for local node only (#7572)
Talk about not using processes for organization
Add meta generated to for/1 clauses with bitstrings (#7560)
Remove unnecesary function clause in URI
Consider hygienic vars in defguard, closes #7566
Remove namespaces from module names in defguard tests
Talk about the code formatter in library guidelines
Do not include extra_applications in generated compile.app
Ditch two helper functions in StringIOTest
Improve test for DynamicSupervisor with :extra_arguments
Improvements to the myers algorithm
Remove and clarify notes regarding OTP versions
Do not skip parens on in_tmp/in_fixture
Refactor the test suite of compile.app (#7557)
Check if the left argument of the lists concatenation is a proper list (#7556)
Deprecations table improvements (#7555)
Check OTP version early in compilation process, closes #7549
Add TODO on old registry API
Standardize "Remove by" deprecation comment (#7551)
Capitalize Mix (#7552)
Be explicit about MINOR versions in deprecation policy (#7550)
Configure httpc to use ipv6 with auto fallback to ipv4 (#7548)
Spelling (#7547)
Preserve user choice on calls without parens when we have one arg per line
Improve warning about escaped codepoints in ?
Raise on invalid pin in maps, closes #7543
Use Function module (#7542)
Add missing translator_inspect_opts option (#7540)
Format Logger.Config
Keep thresholds separate from state on Logger.Config
Keep the user's choice on parens call with next break fits
Add missing discard_threshold option (#7533)
Ensure Macro module can bootstrap
Make sure Macro.to_string/2 emits valid quoted expressions
Promote @impl true in behaviour examples
Correct the exit reason from :brutal_kill to :kill in Supervisor doc (#7526)
Documents the :name option of start_link/2 [ci skip] (#7523)
Modify regex example output according to inspect (#7521)
Avoid race conditions with code evaluated in after_load callbacks
Use elixir_errors:form_warn/4 when possible in elixir_clauses (#7520)
Format warning_test
Make subject explicit and simplify cause->consequence in warning
Warn when list is not empty on guards (#7514)
Typo (#7517)
Simplify guidelines for module-based supervisors
Add a guard to invalid data example
Inline `&Kernel.function_exported?/3` (#7515)
Add guidelines for those writing libraries (#7506)
Add example .formatter.exs (#7510)
Improve documentation and specs in the Function module (#7509)
Reduce the amount of code injected in assert_receive(d)
Update CHANGELOG
Add Function module for introspecting functions (#7503)
Document @impl true automatically sets @doc false
Remove a useless guard in elixir_tokenizer
Use Bob's OTP builds on travis (#7492)
Optimize tokenizer for commas (#7493)
Clarify updates to compatibility documentation
tiny -> patch
Support specsdiff `__info__` spec clauses, closes #7460 (#7461)
Outline versioning schema and support, closes #7489
Avoid multiple check calls in remote
Improve error messages for lists concatenation operator (#7487)
Pass a function StringIO.open to allow the device to be closed automatically (#7477)
Improve error message for invalid clauses inside local functions (#7484)
Validate @compile attribute in elixir (#7476)
Handle bad chardata lookalikes in Logger (#7478)
Doc improvement to Regex functions with option return: :index (#7481)
Improve documentation and specs for Logger.Formatter (#7475)
Improve docs for with special form
Move accumulate attributes to a separate table (#7472)
Do partial matches on port commands to fix intermittent test
Refactor how typespecs docs are stored
Keep specs, types and callbacks in the bag table
Avoid full table traversals when building "deprecated" and "docs" chunk
Remove locals tracker table
Improve one test in the Inspect.Algebra test case
Share Bag and Set tables across a module functionality
Validate timeout in assert_receive, closes #7470
Skip :ets.update_element/3 call if attribute was already read (#7466)
Reduce amount of data in IEx history
Split Kernel.Typespec into Kernel.Typespec and Code.Typespec (#7462)
Move context and side matching up in <>'s implementation
Improve error messages for <> operator (#7349)
Add the ability to count the number of keys in a Registry (#7456)
Mix.Utils.stale?: Add support for empty target list (#7459)
Add Mix.Tasks.Format.formatter_opts_for_file/2 (#7457)
Remove invalid UTF-8 code from assertion failures (#7449)
Discount nesting when formatting typespecs
Ensure bitstring comprehensions work on OTP 20.3 (#7453)
Document how to programatically run profiling tasks (#7358)
Do not escape quoted keywords on formatting, closes #7451
Remove comma from operators table (#7450)
Updated NaiveDateTime moduledoc to use new/8 (#7446)
Promote stats format first
Reduce the amount of code generated per describe
Revise the description of :extra_applications (#7441)
Document :maxT in compile.app (#7442)
Raise if @describetag is used outside outside of describe
Remove unnecessary argument in a helper function in StringIOTest
Improve name of child with extra_arguments restarting test
Avoid protocol dispatch and multiple lists conversion in the formatter
Add missing paren in Map documentation (#7439)
Modernize Kernel.Typespec by reducing usage of :lists functions (#7437)
Extract some functionality from elixir_erl to Kernel.Typespec (#7436)
Implement check for @spec attributes for undefined functions (#7431)
ExUnit raise error for @moduletag and @tag when set before 'use ExUnit.Case' (#7432)
Properly cancel timeout on compilation error in ParallelCompiler #7428 (#7429)
Add a "erl_lint" check for behaviour_info/1 plus callback attributes (#7422)
Use relative paths for logger file when application is available (#7427)
Remove backported entry from CHANGELOG
Ensure proper reports from named DynamicSupervisor, closes #7425
Rewording for ease of reading (#7424)
Support compiling from other build tools (#7419)
Update CHANGELOG
Add missing spec
Remove checks for non string filenames
Optimize ExUnit manifest to store only failures
Add support for `mix test --failed`
Refactor: have mix pass the manifest file instead of dir path
Deal with `:file` tags that were incorrectly overriden by a `setup` block
Add calendar callback months_in_year/1 (#7417)
Add a simple example at the top of the "Typespecs" page (#7413)
Extend Macro.escape/2 docs to illustrate difference from quote/2 (#7407)
Improve documentation on string types
Consider commas when breaking groups, closes #7406
Ensure proper precedence between & and operators, closes #7412
Consider .formatter.exs when formatting stdin
Move `doctest Macro` to Macro module test file (#7408)
Update CHANGELOG
Allow subdirectories in .formatter.exs (#7398)
Add cursor movement to IO.ANSI (#7396)
Update CHANGELOG
Clarify the dual access syntax for maps and mention structs
Improve the documentation for Path.wildcard/2
Add additional documentation about `@moduletag`s (#7397)
Support imports when accessing documentation, opening files, etc (#7391)
Minor grammar fixes in Child Specification docs (#7394)
Properly normalize ExUnit filters, closes #7390
Ensure module is loaded before function exported check
Document versioning expectations since v1.0 (#7386)
Don't remove docs for previous function declaration on `@impl true` (#7383)
Update the arity of a function in the GenServer docs (#7380)
Do not talk about tuple child_spec before they are introduced
Handle nested bitstring pattern matching failures in a better way (#7370)
Inject less code when reading @attribute
Show better error when h/1 is used on type (#7376)
Do not raise if switches option finds an undefined switch
Deprecate dynamic mode in OptionParser and promote strict (#7366)
Minor typo fix (#7372)
Add a bunch of backticks to some docs in Code.Identifier
Make typespec declarations return :ok (#7364)
Revise the documentation for Mix.Tasks.Run (#7365)
Remove unecessery releases directory check (#7359)
Make typespec notation consistent with formatter
Only test the open/1 IEx helper on Erlang source if it exists (#7350)
Add some additional clarification to Float documentation (#7347)
Support perfect timing matches in stream tests
Delete only @echo instead of the whole tmp dir to avoid races on Windows
Prevent operators with many of same char to have same char after them (#7344)
Silence the Module.add_doc/6 deprecation in tests (#7345)
Update Typespecs.md (#7341)
Deprecate outdated Registry.start_link/2
Further expand Task docs
Improve Task doc example
Document defoverridable behaviour regarding compilation callbacks
Improve documentation for ExUnit.Callbacks (#7338)
Use :calendar.universal_time/0 that is commonly used in the codebase
Update CHANGELOG
Use ISO8601 in System.build_info (#7337)
Support negative dates in Calendar (#6638)
Simplify key check in map match
Improve test names for inspect/1 with calendar data types
Do not use module attributes when not needed
Remove unnecessary IEx numbering in Calendar.ISO.valid_date?/2 doc
Ensure -> does not pass line lengths, closes #7279
Bring add_doc/6 back, closes #7335
Clarify behaviour of failing gaurds (#7334)
Include the environment in missing dep error message, closes #7331
Consistently raise for missing do option in definitions
Optimize ExUnit manifest building
Bring back Mix.Shell.cmd/2
Improve the docs for mix format
Move all error messages to mix test and out of the test compiler
Only cache deps opts when the root formatter is used
Update comments, lazily read manifest and remove access specific check
Publicly document child_spec/1
Use tags on windows/unix and allow failures on appveyor (#7320)
Add DynamicSupervisor.stop and streamline event manager code
Clean up manifest implementation
Store the last_run_status of each test in a manifest (#7082)
Update deps.ex
Conform the spec for String.slice/3 to its guard clauses (#7325)
Missing `do` in documentation for binary matching (#7324)
Improve URI.to_string/2 doc
Format all the examples in the docs (#7318)
Clarify documentation for URI.to_string/1 (#7314)
Add is_integer/1 guard for argument "n" in Stream.drop/2 (#7315)
Cleanup typos in access docs (#7311)
Streamline the description of key-value data structures in the Access module
Restart contextual vars on function definitions
Use contextual vars for __CALLER__ (#7309)
Dog food __STACKTRACE__ (#7308)
Introduce __STACKTRACE__ (#7134)
Revert "Do not change argument evaluation semantics in bind_quoted (#7298)"
Document how to handle secrets with git repos, closes #7301
Remove --dry-run when --check-formatted is given
callbak -> callback (#7305)
Check the Elixir codebase is formatted before running tests (#7303)
Refactor a case + if into a cond in Inspect.Function
Make some improvements to the documentation for the "mix format" task
Do now show argument trace for operators
Update doc for DynamicSupervisor.start_child (#7299)
Update CHANGELOG
Do not change argument evaluation semantics in bind_quoted (#7298)
Properly format warning_test.exs
Do not change code invocation semantics in guards
Do not warn for underscored var access from quoted contexts
Mix test with only option raise a error if no tests matched (#7295)
Unify *.to_iso8601 functions for calendar types (#7297)
Consistently preserve the user choice in regards to parens, closes #7286
Teach Mix erlang compiler alternative spelling for -behavior declaration (#7290)
Update dynamic_supervisor.ex
Add missing & in port zombie script (#7287)
Defines the prep_stop/1 optional callback for applications (#7289)
Re-add missing Supervisor behaviour (#7288)
Do not change argument semantics in assert with function call
Show arguments in ExUnit reports for non-operator matches
Improve struct comparison warning (#7284)
Warn about comparison with calendar structs (#7274)
Do not assume module is loaded, remove conditional clauses
Add optional callbacks to IEx.Introspection.b/1 output (#7282)
Remove reporting behaviour in favor of upcoming improved assertions
Format case_test.exs
Continue passing :case to setup/setup_all/test
Filter missing chunks instead of adding them
Improve docs for dynamic and task supervisors
Ensure exit propagation only to non-root evaluators, closes #7255
Raise on invalid map syntax, closes #7268
Improve xref.ex docs (#7273)
Implement child_spec/1 for DynamicSupervisor
Remove unnecessary code duplication
Document how to force logger to be :sync (#7264)
Updated c() doc to reflect actual function behavior (#7261)
Add missing typespecs and fix error in docs (#7259)
Format utils_test.exs
Perform merging of bitstring subinaries
Add missing documentation, examples and specs to Calendar.ISO (#7256)
Use posix and raw when extracing stale sources in Mix
Add IEx.Helpers.use_if_available/2 (#7254)
Illustrate specifying function argument names in Writing Documentation docs (#7253)
Add missing typespecs to `File` module (#7252)
Add Mix.Project.clear_deps_cache/0 (#7248)
Support comments in the middle of pipelines and type expressions
Hide format of Date.Range.first|last_in_iso_days types (#7251)
Use a simpler approach to avoid unused variable warnings in Logger
Use Supervisor.init/2 instead of supervise/2 with the new child specs
Tolerate modules that do not export :deprecated info, closes #7182
Also use has_var? in Macro.expand
Do not assert for ANSI escapes
Do not expose current_vars, provide proper APIs in Macro.Env
Update tests with new exclude/skipped behavior (#7245)
Use the new child specification format in `DynamicSupervisor` docs
Change stdlib path to transparent for release/dev version (#7243)
Revert "Highlight skipped tests in yellow (#7203)"
Add typespec for Float.ratio/1 (#7242)
Support bitstrings in Collectable
Ensure do blocks do not exceed line length on single arguments
Do not track @since attributes while bootstraping
Move unused_vars check to Elixir land
Optimize variable merging
Process variable versioning on Elixir pass
Remove file from elixir_erl record
Remove export_vars in elixir_erl record
Remove export_vars from Macro.Env
Add `@since` attributes for behavior introduced in 1.6 (#7239)
Add `@since` documentation for 1.4 release (#7238)
Set proper path of common options used in manpages (#7237)
Add @since attributes for APIs added in v1.5 (#7223)
Format stream_test
Improve undefined behaviour warning
Clarify not in warnings
Support zipping of any collection, closes #7219
Only rearrange not in if explicitly opted-in
Do not inject @opts on OTP behaviours, closes #7230
Link remaining functions on Guards page (#7228)
Automatically translate deprecated code calls
More docs to Float (#7214)
Mention defguard on Guards page (#7226)
Update Tuple doc to express it's a composite type (#7222)
Reorder kw blocks in Macro.to_string (#7225)
Add @spec to second clause of start_link/2
Include examples to migrate to DynamicSupervisor
Update RELEASE.md
Remove trailing whitespace
Do not allow stabs mixed with expressions
Update Guards.md to for clairty on boolean ops (#7212)
Add documentation for quoted keys in Keyword's colon syntax (#7210)
Replace Code.load_file/2 by Code.compile_file/2 (#7201)
Highlight skipped tests in yellow (#7203)
Don’t add parens for defrecord/3 and defrecordp/3 (#7204)
Include OTP 20.2 in build matrix (#7202)
Mix.Tasks.Format: fix grammatical error (#7199)
Normalize built-in attributes error messages
Add type union explanation to typespecs (#7197)
Use flex_glue for bitstrings and tuples in the formatter (#7183)
Introduce a group for collections (#7185)
Add discard_threshold to Logger (#7193)
Fetch new dependencies on mix deps.update, closes #7194
Remove leftover inspect
Allow :macros and :includes to be given to Record.extract, closes #7195
Add additional documentation for `assert_in_delta` and `refute_in_delta` (#7191)
Simplify recursion in Integer.digits (#7190)
Consider case ignorable characters on Greek downcasing, closes #7149
Change `assert_in_delta` better handle a delta of 0 (#7189)
Remove unecessary digit/undigit clauses, closes #7187
Remove : from mix path helpers to avoid issues on Windows
Warn if heredoc is outdented, closes #7174
Do not autogenerate docs for defdelegate
Hint the node@host format in --remsh error, closes #7170
Raise if imported dependencies have not been checked out on mix format
Revert "Attempt to soft_purge modules, closes #7047"
Properly handle :erlang.element in Exception blame
Rearrange equals and inserts for shorter diff scripts
Add `@impl true` to StringIO & IEx.Pry (#7167)
Don't mention deprecated {Map,Keyword}.replace/3 in docs (#7166)
Autolink to calendar types
Autolink sigils
Autolink operators
Do not leak variables during optimizations, closes #7161
s/when/after/ in Application.stop/1 docs [ci skip] (#7164)
Organize struct name matching in map_test
Improve docs for matching macro arguments on break!
Return right side expression value on struct matching (#7160)
Clear up deprecations page
Make formatting options and task options clearer (#7150)
Remove deprecation warnings
Improvements to greek handling of downcase, closes #7149
Store expanded expressions in defguard, closes #7147
1.5 => 1.6 in changelog.md (#7148)
Explicitly specify :infinity as a :limit in IO.inspect (#7146)
Add new deprecation and CHANGELOG info
Hard-deprecate some things for 1.7 (#7139)
Clarify :async option
Update deprecations table, closes #7137
Ensure we can still receive [term()] in start_child spec, closes #7138
Revert "Add support for supervisor fun to Task.Supervisor.async_stream/* (#6552)"
Add advice regards deprecations
Start v1.7
Ensure old manifests can be upgraded
Add more headings to Application docs
Properly purge modules from app.start_test
Add --preload-modules to mix app.start
Provide better error messages for contextual operators
Expand reraise/2 without code injection similar to raise/1
Format protocol dialyzer test
Ensure no dialyzer warnings after protocol consolidation, closes #7107
Do not move comments from first argument of no parens calls, closes #7130
Remove exclude? logic from unreachable_mfa
Optimize MapSet collectable
Remove unecessary blank line
Add mix xref deprecated
Check deprecated calls on task xref warnings (#7128)
Optimize String.downcase/1
Allow mix cmd to be invoked multiple times, closes #7049
Format string.ex and improve upcase coverage
Provide :greek and :ascii mappings in String upcase/downcase/capitalize
Make split operations consistent with replace
Do not show duplicate docs for definitions with defaults, closes #7121
Update docs and typespecs for lock_status, closes #7125
Add missing ;
Do not invoke after_fun in chunk_while if emitted element halts, closes #7112
Ensure inspected strings are padded in function clause blaming
Read the deprecated chunk directly as a list
Reduce the number of ets lookups for reading impl
Introduce @deprecated (#7113)
Minor docs updates (#7123)
Improve protocol consolidation tests for docs (#7119)
Also consider when acc_count is more than count
Name enumerable consistently (#7115)
Improve docs about consolidation during tests, closes #7039
Improve documentation for Protocol.derive (#7073)
Allow "mix format" to read exported configuration from dependencies (#7108)
Format pending files
Store all manifests in a single .mix directory
Update Unicode Syntax.md
Remove multiple clauses warning for default values on bodiless clause (#7092)
Ensure we show docs for macros
Do not indent right-side of pipelines in the formatter (#7103)
Introduce @since as non-warning definition annotation
Improve docs for tuples
Update locals_tracker.ex comments
Format locals_tracker.ex
Use a single table instead of digraph for tracking locals
Only write formatted files if they changed, closes #7090
Only reduce over stale sources and not removed ones
State argument on Node should be documented (#7089)
Do not print errors when shell exits normally
Remove unecessary header
Do not use invalid paths on Windows
Inspect tuples closer to the formatter, closes #6509
Clean up stale sources updating code
Properly format DateTime error message
Files with only comments are no longer always stale (#7078)
Store lock from SCM on Dep (#7087)
More examples and rationale behind child_spec/1
Show UTF-8 BOM on inspected strings (#7085)
Sort calls before comparing
Move boolean checks optimizations to Kernel (#7071)
Document multi clause anonymous functions (#7076)
Make Exception.blame/3 extensible (#7075)
Build reference types in IEx (#7068)
Remove duplication in IEx introspection
Print out the specs of Erlang functions in `h` helper (#7065)
Add a Mix.Tasks.Xref.calls/0 function (#7026)
Explain bare expression behavior in with docs (#7067)
Translate clauses for boolean check (#7069)
Clean up IEx' introspection
Change Date.range/2 to only accept dates (#7061)
Do not raise on non-integer values in is_odd/is_even (#7063)
Update helpers.ex (#7062)
Add OTP compatibility table to the "Compatibility and Deprecations" page (#7057)
Preserve group leader in Logger.ErrorHandler notification to Logger (#7058)
Format lib/elixir/lib/file.ex
Clarify File.exists? behavior for dangling symlinks (#7056)
Use "ISO 8601" spelling in docs
Consider microseconds in maximum possible Calendar.ISO datetime (#7055)
Properly take "do" into account on line breaks, closes #7052
Attempt to soft_purge modules, closes #7047
Simplify Calendar.truncate/2 precision check (#7051)
Improve ExUnit documentation with regards to "setup" and "using" (#7045)
Update docs for DateTime.compare/2 (#7048)
assert_receive should expand in match context (#7042)
Use inspect in assertion diff for structs if possible (#7043)
Show better error if an anonymous function has default arguments
Document mix deps.unlock + mix deps.get workflow, closes #7030
Remove dialyzer warnings from else in with clauses (#7031)
Warn duplicate definitions in macros (#7037)
Document and use new uniq: true flag when appropriate
Support uniq: true in for comprehensions (#7020)
Improve documentation for the Mix modukle (#7027)
Minor ExUnit docs improvements (#7022)
Migrate Task.Supervisor to DynamicSupervisor
Improve the handling of helpers in autocomplete
Add DynamicSupervisor (#7006)
Ensure we track behaviours at compile time
Add notes and TODOs to variable handling
Move andalso and orelse expansion to the erl pass (#7015)
Remove unneeded function - no need to match "" (#7014)
Make sure proper reports are shown if app fails to boot (#7001)
Remove extra new line
Also add callback completion
Add types autocompletion (#7011)
Clear proxy variables, closes #6988
Add truncate to Time, DateTime and NaiveDateTime (#7010)
Do not reuse directories in tmp for Mix builds
Improve typespecs for Date
Improve typespecs for NaiveDateTime
Improve typespecs for Time
Update DateTime.compare/2 to actually accept Calendar.datetime()
Add NaiveDateTime.from_erl!/3 to match from_erl/3
Add Time.from_iso8601!/2 to match from_iso8601/2
Add Date.from_erl!/2 to match from_erl/2
Only consider a document doesn't fit if it has breaks
Group operands but not the operator
Add end_line information to string_to_quoted tests
Consider comments inside function calls
Pass the proper precedence to binary operator handling, closes #7005
Raise on reserved tokens, closes #6532
Allow pattern matching and guard expressions when on IEx.break!
Add examples of String going across boundaries, closes #6373
Adds Kernel.defguard/1 macro to build guard-safe macros
Add @specs to functions in the Code module (#7003)
Ensure file in stacktraces is a charlist
Properly guard bare_warn to catch errors early
Pass line and file to IO.warn whenever possible
Warn if init/1 is not implemented in GenServer
Improve documentation all around the Code module
Mention that HiPE-compiled modules won't call @on_load callback (#7002)
Increase long compilation threshold
Improve docs for Module.create/3
Always loadpaths in escript.build
Support slice on outdated protocol implementations
Add Kernel.ParallelCompiler.async/1
Ensure we handle :undefined returns for optional callbacks, closes #6993
Track structs separately from compile time deps, closes #6575
Improve documentation for Kernel.put_elem/3 (#6995)
Update CHANGELOG
Use integers for manifest version
Support --include-siblings in mix xref reports for umbrella support
Add mix xref graph --format stats
Add --only-nodes and --label filters to mix xref graph
Remove test marked with @tag :skip
Separate tracking structs from compile-time dependencies
Do not generate specs for exceptions
Inline expressions when possible
Minimize generated beam size by using ranges
Handle final sigma unicode exception
Raise when calling GenServer.stop/3 with current process (#6987)
Rename foreign atom
Consistently use GenServer API in Supervisor
Document Enum.EmptyError exception for Enum.reduce/2 (#6986)
Restrict next break fits and eols on operators and function calls
Discard malformed lines in metadata
Better handling of non existing atoms (#6978)
Tidy up implementation detail section
Respect the user's choice on calls
Treat => and : as operators in the formatter
Use flex when inspecting tuples
Store the number of defaults in the definition Meta
Do not raise while tasks are being processed
Pipe all the way in string
Update codebase with latest formatter rules
Consistently add spaces after not
Support next break fits inside tuples
Clarify supervisor docs
Remove end column information from tokens
Support columns: true in string_to_quoted, closes #3554
Avoid conflicts with erl_anno in meta
Also mention you may want to start an application manually
Improve fetch_env error message
Run the formatter in the formatter and remove code duplication
Recognize hashbangs in the formatter
More docs for inspect algebra
Simplify the condition for implementing count
Automatically include and format specs when showing docs
Use Mix.shell.info over IO.write in Mix xref (#6964)
Avoid multiple passes if there are no entries
Handle external files for xref callers and warnings (#6947)
Avoid warnings during bootstrapping
Improve optional callback checks
Move all remaining behaviour usage warnings to Elixir
Perform some behaviour lint checks in Elixir (#6841)
Avoid shadowing in Stream.do_reduce (#6962)
Format expansion_test.exs
Improve warnings during expansion
Add Enumerable.slice/1 and use it in Enum (#6958)
Add file information to the dispatches on the source manifests (#6954)
Do not write files outside of tmp
Update CHANGELOG
Clarify the workflow for proposing new features
Add :system_env option to dependencies (#6933)
Format @spec with map literal with multi keys
Ensure left side of | in maps has parens when necessary
Use iodata instead of binaries when building dot graph format
Take compile dependencies with higher priority that runtime ones
Pass all caller files on map
Updating what seems to be outdated documentation. (#6949)
Always match on date calendar
Deprecate Range.range? in favor of pattern matching
Tidy up code layout in Date.Range
Run the formatter on assertions_test
Use explicit atom to mark stdin
Do not expand variables to argless macros in assert
On mix format checks formatted for stdin (#6943)
Update CI builds: add OTP 20.1 (#6940)
Simplify rules for & with binary operators
Stop using keyword lists in IEx.Info (#6935)
More examples in the formatter
Keep integer/float underscores in the formatter, closes #6931
Don't put a comma after the main clause when a dependent clause follows it (#6937)
Remove print option from mix format (#6939)
Support reading from stdin and writing to stdout with -, closes #6934
Run the formatter in parallel
Collect nested macro variables as part of assert matches (#6929)
Do not allow interpolation in formatter docs
Improve formatter docs
Ensure all files are formatted
Do not deprecate Mix.shell.cmd/3
Do not pass :in_memory to load_binary
Update default implementation in docs (#6928)
Take file system casing into account
Include a .formatter.exs in new projects and ensure they are formatted
Add more docs to the formatter
Formatter should not fail on empty clauses, closes #6924
Check files are formatted on CI
Format errors_test.exs
Run code formatter on tokenizer_text.exs (#6905)
Run code formatter on lib/elixir/lib/module.ex (#6846)
Run the code formatter on Inspect.Algebra
Run the code formatter on Kernel.QuoteTest
Run the code formatter on MacroTest
WIP
Run the code formatter on Mix.Tasks.XrefTest
Run code formatter on ExUnit.AssertionsTest
Run code formatter on Code.Formatter.GeneralTest
Run code formatter on RegistryTest
Run formatter on Mix.Tasks.New (#6917)
Format archive_test and inspect_test
Format more pending files
Format more pending files
Run code formatter on ExUnit.CallbacksTest
Run formatter on unicode/properties.ex (#6916)
Improvements to previously formatted files
Run code formatter on Kernel.RaiseTest (#6914)
Run code formatter on lib/elixir/test/elixir/option_parser_test.exs (#6913)
Run the code formatter on ExUnit.CaptureIOTest (#6912)
Run code formatter on lib/ex_unit/test/ex_unit/diff_test.exs (#6911)
Use String.to_atom/1 for Unicode atoms
Run the code formatter on Protocol (#6909)
Run formatter on lib/logger/test/logger/translator_test.exs (#6908)
Make sure to not break guards on clauses with comments
Format more files with little formatting requirement
Ensure proper access to git_rebar_string
Format more files with little formatting requirement
Allow quote without parens
Run the code formatter on lib/elixir/lib/inspect/algebra.ex (#6903)
Run code formatter on lib/mix/test/mix/tasks/compile.erlang_test.exs (#6904)
Format more files with little formatting requirement
Run the code formatter on lib/elixir/test/elixir/string_test.exs (#6897)
Run the code formatter on IEx.InfoTest
Format kernel/impl_test.exs (#6900)
Format more files with little formatting requirement
Improve formatting of previous files
Run Code formatter on Kernel.CLI
Run the code formatter on Kernel.DocsTest
Run the code formatter on Kernel.TypespecTest
Run code formatter on test/mix/tasks/app.start_test.exs (#6892)
Run the code formattter on lib/elixir/lib/calendar/iso.ex (#6893)
Run formatter on deps.compile (#6894)
Run code formatter on Assertions (#6895)
Improve formatting of calendar types
Format DateTime
Run the code formatter on Date (#6888)
Improvements to formatted files
Run the code formatter on lib/elixir/test/elixir/kernel/warning_test.exs (#6858)
Run code formatter on lib/mix/lib/mix/utils.ex (#6872)
Run code formatter on CodeTest (#6877)
Format doc_test_test.exs
Improve formatting in task/supervisor_test
Run code formatter on lib/elixir/test/elixir/task/supervisor_test.exs (#6890)
Formats NaiveDateTime (#6889)
Run the code formatter on Logger.Translator (#6875)
Use trailing \ instead of trim_trailing
Format lib/iex/test/iex/helpers_test.exs
Format more pending files and ensure proper clause args break
Format ExUnit.Callbacks (#6886)
Run code formatter on Record (#6882)
Format Stream
Run code formatter on Mix.Tasks.Archive.Build (#6885)
Run formatter on Mix.SCM.Git (#6884)
Format more files with little formatting requirement
Run the code formatter on Mix.ProjectStack (#6878)
Run the code formatter on Time
Preserve escaped new lines in formatter, closes #6861
Run the code formatter on Mix.Tasks.Compile.AppTest
Further improve reporting on mix format
Better `mix format` error message when it crashes during formatting file (#6879)
Format more files with little formatting requirement
Improve formatting on more files
Format calendar_test.exs with auto-formatter (#6866)
Run the code formatter on Code.Formatter.OperatorsTest (#6865)
Run the code formatter on Mix.Project
Run the formatter on Mix.Compilers.Elixir (#6864)
Run code formatter on lib/ex_unit/lib/ex_unit/formatter.ex (#6863)
Improve formatting of some files
Run the code formatter on Inspect (#6855)
Run code formatter on lib/elixir/lib/kernel.ex (#6842)
Run the code formatter on Kernel.Typespec
Run the code formatter on Mix.UmbrellaTest (#6852)
Run the code formatter on Calendar (#6876)
Run the code formatter on Mix.Tasks.Escript.Build (#6860)
Run the code formatter on Mix.Tasks.TestTest (#6874)
Run the code formatter on Mix.Tasks.Compile.Erlang (#6856)
Run the code formatter on Stream.Reducers (#6867)
Run the code formatter on OptionParser (#6862)
Run the code formatter on Mix.SCM.Git (#6859)
Run the code formatter on Map (#6873)
Run code formatter on ExUnit.Diff
Run the code formatter on File.Stream (#6870)
Run Code Formatter on lib/elixir/test/elixir/kernel_test.exs (#6853)
Run formatter on GenServerTest (#6849)
Run formatter on Logger.ErrorHandler (#6848)
Respect multiline decision regarding keyword lists
Format more files with little formatting requirement
Format more files with little formatting requirement
Make sure optional callbacks can be specified multiple times
Format calls_test.exs (#6847)
Group left and right side of operators
Run code formatter on EnumTest (#6845)
Run the code formatter on Mix.Tasks.App.TreeTest (#6839)
Run code formatter on profile.eprof.ex (#6834)
Run the code formatter on Mix.CLI (#6843)
Run the code formatter on Date.Range (#6844)
Improvements to formatted code
Run the Formatter on lib/iex/lib/iex/evaluator.ex (#6840)
run code fomatter on lib/elixir/lib/io/ansi/docs (#6838)
Run the code formatter on Access (#6837)
Run code formatter on lib/iex/lib/iex/pry.ex (#6836)
Run code formatter on lib/elixir/test/elixir/kernel/binary_test.exs (#6833)
Remove unecessary atom quoting
Run the code formatter on Macro (#6744)
Run code formatter on lib/mix/test/mix/tasks/new_test.exs (#6831)
Run the code formatter on ProtocolTest
Format more files with little formatting requirement
Run the formatter on Mix.Dep.Fetcher (#6829)
Run code formatter on lib/mix/test/test_helper.exs (#6828)
Run code formatter on TaskTest (#6817)
 Run the formatter on lib/elixir/test/elixir/uri_test.exs (#6808)
Format more files with little formatting requirement
Simplify IEx.History implementation
Format more files with little formatting requirement
Format more low hanging fruit files
Run code formatter on GenServer (#6826)
Format more files with little formatting requirement
Run the code formatter on lib/mix/lib/mix/tasks/compile.yecc.ex (#6825)
Run the code formattter on lib/ex_unit/lib/ex_unit/case.ex (#6822)
Run code formatter on compile.elixir.ex (#6824)
Run formatter on lib/elixir/unicode/tokenizer.ex (#6813)
Format more low hanging fruit files
Format more low hanging fruit files
Run code formatter on lib/elixir/test/elixir/file_test.exs (#6820)
Run the code formatter on lib/elixir/lib/file.ex (#6821)
Run the code formatter on Mix.Tasks.RunTest (#6823)
Store immutable arguments in a tuple in Stream.transform
Run the code formatter on MapTest
Run the code formatter on IEx.Info
Run code formatter on lib/ex_unit/lib/ex_unit/on_exit_handler.ex (#6819)
Run the code formatter on ModuleTest
Run formatter on lib/eex/lib/eex/tokenizer.ex (#6816)
Run the code formatter on Task.Supervised
Run the code formatter on Base
Run the formatter on Mix.Dep
Run the code formatter on Mix.Shell.IO (#6814)
Improve clarity of group_by docs (#6818)
Improve formatting on eex_test
Run code formatter on EExTest.Compiled (#6781)
Run code formatter on lib/elixir/lib/stream.ex (#6761)
Run the formatter on IEx.Introspection
WIP
Reformat ExUnit.DocTest with mix format (#6702)
Run code formatter on lib/elixir/test/elixir/io/ansi_test.exs (#6811)
Do not add parens for var.field before do/end blocks
Run the formatter on ExUnit.EventManager
Run the code formatter on Version
Format all files that have less than 10 entries in myers difference
Run the code formatter on Exception
Run the code formatter on List.Chars
Run the code formatter on Mix.TaskTest (#6793)
Run format on collectable_test.exs (#6810)
Run code formatter on Mix.Tasks.DepsGitTest (#6807)
Document defimpl for multiple types (#6799)
Nest function heads on cursor
Run code formatter on Behaviour
Run the code formatter on Mix.Shell.IOTest
Run the code formatter on Mix.Tasks.IexTest
Run the code formatter on Mix.Tasks.Archive
Run the code formatter on Hex
Do not introduce trailing whitespace on heredocs
Run the code formatter on Bitwise (#6805)
Run the code formatter on HashDict
Run the code formatter on ExUnit.Runner (#6803)
Run the formatter on Mix.Tasks.Compile.LeexTest
Refactor an unused for comprehension in IEx.Helpers
Run the code formatter on Logger.Utils (#6804)
Run the code formatter on NodeTest (#6801)
Run the code formatter on IEx.ServerTest (#6802)
Format the formatter
Consistently format operators in capture
Ensure maps/structs with updates converge
Format fprof_test.exs
Improve formatted code in a couple files
Slightly improve documentation for Inspect and Inspect.Algebra
Run the code formatter on Mix.Rebar
Run the code formatter on Mix.Task.Compiler
Run the code formatter on Registry
Run code formatter on `lib/elixir/unicode/unicode.ex` (#6795)
Run code formatter on Kernel.ParallelCompiler (#6796)
Run the code formatter on IO.ANSI (#6798)
Run formatter on lib/test/mix/tasks/profile.fprof_test.exs (#6794)
Run the formatter on Kernel.ExpansionTest
Run the code formatter on ExUnit.CaptureIO
Run the code formatter on Mix.Tasks.Deps.Loadpaths
Run the code formatter on ExUnit.CLIFormatter
Run the code formatter on IEx.CLI
Run the code formatter on Mix.Tasks.LocalTest
Run the code formatter on Atom
Run the code formatter on Mix.SCM.GitTest
Run the code formatter on HashSet
Run the code formatter on Mix.Tasks.App.Start
Run the code formatter on PortTest
Run the code formatter on Code.IdentifierTest
Run the code formatter on Range (#6791)
Reformat Mix.Dep.Umbrella with mix format (#6790)
Run the code formatter on Mix.Tasks.Compile.All
Run code formatter on Path (#6789)
Run the code formatter on Mix.Local (#6778)
Run the code formattter on lib/mix/lib/mix/generator.ex (#6763)
Run the code formatter on Mix.DepTest (#6731)
Run the code formatter on Mix.Tasks.Deps.TreeTest
Run the code formatter on Mix.Dep.Loader  (#6727)
Run the code formatter on Mix.Tasks.Deps.Precompile
Run the code formatter on Mix.Tasks.Xref (#6788)
Run the code formatter on LoggerTest (#6776)
Run the code formatter on Logger.Watcher (#6696)
Run the code formatter on IO
Run the code formatter on Task.Supervisor (#6779)
Run the code formatter on Mix.Tasks.Deps.Clean (#6780)
Run the code formatter on Mix.Task (#6787)
Format with_test (#6786)
Format Kernel.ParallelRequire (#6785)
Run the code formatter on Mix.Tasks.CleanTest (#6784)
Format IEx.Helpers (#6783)
Specify group_by values are ordered but map is not (#6782)
Run the code formatter on Dialyzer.ProtocolOpaque (#6775)
Run formatter on lib/iex/test/test_helper.exs (#6774)
Run formatter on lib/elixir/test/elixir/float_test.exs (#6773)
Run the formatter on lib/mix/test/mix/project_test.exs (#6769)
Run the code formatter on Regex (#6770)
Run the code formatter on IEx.Autocomplete (#6767)
Always wrap binary operators in groups
Inline filter results
Run the code formatter on ExUnit.FiltersTest (#6745)
Do not apply next_break_fits if eol is present
Run code formatter on Mix.Config.Agent (#6766)
Run code formatter on PathTest (#6765)
Run code formatter on lib/mix/test/fixtures/test_stale/mix.exs (#6764)
Run code formatter on lib/elixir/lib/set.ex (#6762)
Run code formatter on lib/elixir/lib/string_io.ex (#6760)
Run code formatter on lib/elixir/lib/supervisor.ex (#6758)
Run code formatter on lib/elixir/lib/system.ex (#6757)
Format Mix.RemoteConverger (#6754)
Run the formatter on lib/elixir/test/elixir/calendar/date_range_test.exs (#6753)
Run the code formatter on Mix.Tasks.Run (#6749)
Run the code formatter on Kernel.LexicalTracker (#6748)
Run the code formatter on GenEvent (#6746)
Properly render :-> as an atom
Keep the user's choice on non-module remote calls with no args
Order maps in group_by example
Run code formatter on Task (#6756)
Run code formatter on Mix.CLITest (#6741)
Run code formatter on import_test.exs (#6736)
Format bitstring generators in comprehensions
Run code formatter over comprehension_test.exs (#6737)
Use IO lists in URI
Run code formatter on lib/elixir/lib/uri.ex (#6755)
Run the code formatter on Enum (#6752)
Run the code formattter on String (#6750)
Do not apply special keyword syntax if there are generators
Run the code formatter on Mix.Tasks.Compile.Protocols (#6712)
Run the formatter on Kernel.Overridable (#6743)
Run code formatter on lib/logger/lib/logger/formatter.ex (#6720)
Run code formatter on Logger.Backends.Console (#6708)
Run the code formatter on IO.ANSI.DocsTest (#6703)
Run code formatter on EEx.Compiler (#6692)
Run the code formatter on IEx.Server (#6709)
Run code formatter on Compile.XrefTest (#6674)
Run the code formatter on Code (#6747)
Run the code formatter on Logger.Backends.ConsoleTest (#6742)
Run code formatter on Agent.Server (#6739)
Run the code formatter on Logger (#6706)
Run the code formatter on BaseTest (#6717)
Run the code formatter on Mix.Tasks.DepsTest
Run code formatter on Kernel.DialyzerTest (#6681)
Run the code formatter on Kernel.SpecialForms (#6722)
Run the code formatter on Mix.Shell.Process (#6715)
Run the code formatter on MapSet (#6686)
Run code formatter on Logger.WatcherSupervisor (#6697)
Run the code formatter on Mix.Tasks.Compile.ProtocolsTest (#6726)
Run the code formatter on Mix.GeneratorTest (#6705)
Run the code formatter on Mix.Tasks.Profile.CprofTest (#6667)
Run the code formatter on Mix.Tasks.Archive.Check (#6719)
Run code formatter on ExceptionTest
Run the code formatter on ExUnit.RegisterTest (#6710)
Run code formatter on Logger.Config (#6707)
Run the code formatter on Mix.Tasks.Deps.Tree (#6701)
Remove unecessary concatenation operator
Run formatter on Process
When when and | also respect new lines
Run the code formatter on Logger.Case (#6700)
Run the code formatter on IEx.AutocompleteTest (#6694)
Run the code formatter on Mix.PublicKey (#6735)
Run the code formatter on RegexTest (#6732)
Run the code formatter on Tuple (#6734)
Run the code formatter on Mix.Tasks.Archive.Check (#6733)
Run the code formatter on Logger.ErrorHandlerTest (#6730)
Run the code formatter in Mix.Tasks.HelpTest (#6714)
Format Mix.Dep.Converger
Do not skip parens for right associative operators
Only keep locals_without_parens if they never had parens to start with
Run the code formatter on ApplicationTest (#6716)
Run code formatter on Compile.YeccTest (#6668)
Run the code formatter on Macro.Env (#6698)
Add Mix.Config-related calls to locals_without_parens in the formatter
Run the code formatter on Mix.Tasks.Compile.Leex (#6699)
Run the code formatter on Dict (#6691)
Improve keyword formatting
Run the code formatter on KeywordTest (#6690)
Run formatter on Dialyzer.Macrocallback (#6689)
Format atom_test.exs
Run code formatter on Mix.Shell.QuietTest (#6687)
Formatted lib/mix/lib/mix/tasks/escript.install.ex (#6685)
Run formatter on lib/mix/lib/mix/tasks/escript.ex (#6684)
Run code formatter on Mix.Exceptions (#6683)
Run the code formatter on Mix.Dep.Lock (#6682)
Run code formatter on Mix.Tasks.Loadconfig (#6680)
General improvements to formatted files
Run the code formatter on Mix.Tasks.Compile.App (#6663)
Run code formatter on Kernel.AliasTest (#6678)
Run the code formatter on Calendar.Holocene (#6679)
Run the code formatter on List (#6677)
Keep () in no args type funs for clarity
Run the code formatter on Mix.UtilsTest (#6660)
Run the code formatter on IO.ANSI.DocsTest (#6672)
Run the code formatter on Mix.Tasks.Archive.Install (#6673)
Run code formatter on Record.Extractor (#6676)
Run the code formatter on Mix.Dep.ElixirSCM (#6670)
Run the code formatter on Agent (#6675)
Run the code formatter on test_helper.exs (#6671)
Run the code formatter on Version (#6666)
Run the code formatter on Mix.Tasks.Local.Rebar (#6665)
Run the code formatter on Logger.App (#6664)
Improve docs and tests for algebra group
Allow groups to inherit the parent break
Run the code formatter on Mix.Tasks.Local (#6662)
Add do-block special forms to the list of locals_without_parens
Run the code formatter on ExUnitTest (#6661)
Add doctest to the list of locals without parens
Run the code formatter on CodeFormatter.IntegrationTest (#6657)
Apply formatting to elixir’s port.ex (#6656)
Run the code formatter on Mix.Tasks.Deps (#6655)
Add in_fixture/2 to the list of locals_without_parens
Run the code formatter on Mix.Tasks.LoadconfigTest (#6658)
Run the code formatter on Mix.Tasks.DepsPathTest (#6654)
Run the code formatter on ExUnit.Server (#6652)
Also compute stats of formatted files
Consistently respect user's choice on clauses
Add Kernel.reraise/2,3 to the list of parenless calls in the formatter
Store specs/callbacks in the order they are defined
Show and verify clauses for the same callback (#6641)
Update process.ex (#6650)
Doctest for List.to_string/1 with deeply nested list (#6649)
Warn on trailing commas in calls
Also preserve user newlines if trailing commas exist
Clarify conditions for expanding containers
Properly track one args in formatter, closes #6645
Format first file and mix.exs scripts
More improvements to the formatter grammar, docs, and locals without bindings
Check formatting is equivalent on travis
Add script for picking random files for formatting
Add mix format
Remove unecessary specs for callbacks
Small typos in code formatter docs (#6640)
Improving the error message for capture_log when Logger is down (#6628)
Add code formatter (#6639)
Do not raise on clauses with newlines before and after ->
Add end_lines to do/end blocks and represent empty ones with empty blocks
Add more metadata to containers
Return empty block for empty parens instead of nil
Do not match on empty block meta
Add endline for functions and blocks
Implement Access.filter/1 (#6634)
Update tokenizer and interpolation tests
Add end_line to interpolation
Rely on side effects for preserving comments
Deprecate Keyword.replace/3 and Map.replace/3
Clarify that the :trim option defaults to false (#6633)
Update Port ### spawn example (#6630)
Save warnings to manifest in Erlang-based compilers and return diagnostics (#6601)
Remove underspecification warning for consolidated protocols (#6627)
Improve Task.await/2 doc (#6625)
Small doc fix for Task.shutdown/2 (#6624)
Improve the wording in alias error messages (#6623)
Add groups_for_modules when generating Elixir docs (#6621)
Improvements to Unicode syntax document
Translate OTP apps sources
The start_link needs one parameter in docs for Agent (#6620)
Improve accuracy of diagnostic lines in Elixir compile task (#6609)
Typo in Logger module documentation (#6619)
Include lib/*/lib files in Precompiled.zip (#6615)
Introduce first child specifications, then child_spec/1
Remove entry points for rebar 2
Mix.Tasks.Profile.Eprof: Protect against division by zero (#6614)
Only return noop / ok / error from recompile helper
Keep backwards compatibility on previous shells
Do not define a generic collectable implementation
Expose Mix.shell.into and rely on System.cmd and Mix.Shell.cmd directly
Add a test for & and | precedence
Move & up in the operator table to avoid conflicts with | in cons, closes #6613
Improve error message on oversized atom (#6612)
Properly convert from list to string in git commands
Raise on middle expression without start expression in EEx (#6610)
Save Xref warnings to manifest and return diagnostics from compiler (#6603)
Use a different random seed for each ExUnit test (#6593)
Keep only the shared logic in Mix.Task.Compiler
Return diagnostics from compilers (#6598)
Clarify application docs
Include the module name in slowest tests reports
Keep seed precision on unix
Properly get line in parallel compiler
Add support for supervisor fun to Task.Supervisor.async_stream/* (#6552)
Show link to guards docs when an invalid guard expression is used (#6594)
Add string_to_tokens and tokens_to_quoted
Support path with spaces as argument to elixir.bat (#6596)
Improve docs for import
Define typespec for compiler diagnostics and return them from Mix.Compilers.Elixir
Clarify Macro.to_string discards all formatting
Add Mix.Tasks.Profile.Eprof for profiling using eprof (#6573)
Always use flex_glue for bitstrings
Update CHANGELOG
Update CHANGELOG
Add Inspect.Algebra.container_doc/6
Unify parallel require and parallel compiler
Introduce new parallel compiler function
Add option :return_errors to ParallelCompiler (#6446)
Add ExUnit.Callbacks.start_supervised!/2 (#6548)
Detect describe block at given line filter and run all tests in it (#6569)
Improve docs on IO.puts/2 (#6579)
Format mix.lock with one dep per line (#6578)
Optimise Keyword.delete/2 and friends (#6564)
Prefix variables with V when emitting Erlang code
Mention multi-line strings in the syntax reference (#6572)
Do not prematurely raise on end tokens, closes #6567
Describe reserved words, sigils and structs in syntax reference
Raise better child_spec error if module is not defined, closes #6565
Allow passing empty string as match argument to String.replace/4 (#6559)
Only add eol marker with both begin-end in containers have eol
Introduce Time.add/3 (#6513)
Use the name of a registry as its child spec id (#6560)
Document all atoms exposed through __info__
Translate built-in Elixir apps sources, closes #6562
Do not traverse clauses table to retrieve defaults
Split the AST discussion from the syntax reference, closes #6343
Rely on Supervisor.child_spec/2 and clean up code generation
Warning on the use of length(x) == 0 on guards (#6538)
Improve the error message for rescue, catch and else inside def (#6542)
Use :io_lib.scan_format/2 on Logger.Utils.inspect/4 (#6521)
log -> long
Warn if catch comes before rescue in try (#6537)
Making the converger load the umbrella children optional deps (#6531)
Clarify binary comparison (#6468)
Use __info__ and module_info where appropriate
Remove unnecessary helper function in Process
Return valid MapSet when union-ing a legacy MapSet (#6534)
Display usage of mix command whenever appropriate
Add newline spacing around documentation example (#6524)
Use "number" instead of "amount" for count nouns (#6528)
Do not use __block__ and __aliases__ as literal identifiers
Store eol info in arrow ops
Store if containers and stab are followed by eol
Convert iodata to binary instead of bitstring concatenation
Test Port.monitor/1 and Process.monitor/1 inlining
Rename cancel_break to next_break_fits
Push blocks to parser
Add Port.monitor/1 and Port.demonitor/1 functions (#6518)
Update IO.write/2 documentation (#6523)
Remove Process.monitor/1 inlining test
Add more formatter metadata
Improve coverage of inspect algebra
Add link to Hex options (#6517)
Add collapse lines to algebra
Extract parts per day value in Calendar.ISO to module attribute
Allow enabling and disabling cancellation mode
Only check the current group for breaks
Group documents for inspecting
No longer group by default to avoid full document traversals
Allow nesting to be reset
Properly order try/else/after
Add literal annotation for aliases
Add parser rule for call with unary and do-end block
Properly order keyword blocks in exception.ex
Also wrap keyword literals in blocks
Do not unescape interpolation
Remove need for utils function in Macro
Improve coverage on Macro.to_string
Ensure doc_line comes after cancel logic
Introduce force_break and cancel_break
Do not use cursor nesting on surround
Correct Registry.match/4's typespec of its "pattern" argument (#6508)
Make terminator binaries
Introduce string document that counts graphemes
Add cursor-based nesting
Introduce next_break_fits doc
Rename lines to soft and hard instead of boolean
Instead of flex groups, use flex breaks
Add conditional nesting
Introduce forced line breaks
Make sure all lines in group must fit
Add Inspect.Algebra.line/0
Do not translate empty files to nil
Refactor tests for the :wrap_literals_in_blocks parser option
Add :format metadata to strings and charlist literals (#6505)
Improve error when NaiveDateTime given to DateTime.to_iso8601/2
Split callable in two types
Add test for date limits enforcing in Calendar.ISO
unquote_splicing has arity of 1
Remove incorrect wording regarding test cases
List doctests separately from tests in reports
Simplify operator logic in Macro.to_string
Wrap unary operator in parens as well
Add String.Tokenizer back to tokenizer scope
Clarify Path.join/2 behavior when dealing with lists (#6502)
Allow strings/atoms/charlists to be emitted unescaped
Improve doc for Kernel.SpecialForms.&/1 (#6498)
Keep the representation of "float" tokens like we do for "int" tokens (#6501)
Remove extra new line on umbrellas' .gitignore
Ignore package tarball (#6494)
Change the format of tokens (#6495)
Rename :mode to :group and provide better defaults
Silence behaviour warnings on bootstrapping
Add Code.Identifier to hold shared identifier logic throughout Elixir
Rename the "hexadecimal" token to "hex"
Remove ordering issue on errors_test.exs, closes #6490
Expose the operator table in Macro.operator/2
Correct mix.exs naming in code
Use MixProject instead of Mixfile in mix.exs files
Properly advertise the --no-mix-exs flag
Do not trigger additional error reports on failures when loading tests
mixfile to mix.exs
Improve docs for custom formatting
Add more information about system start and shutdown
Consistently refer to callback functions as fun (#6481)
Mention quote+pry gotcha, closes #6477
Remove double space from Supervisor doc (#6474)
Clarify group modes
Tweak performance of `Enumerable.member?/2` for Map (#6471)
Slightly refactor capture_io
Improve docs for multi-lines outputs (#6464)
Reword Supervisor moduledoc line (#6465)
Remove extraneous 'is' from Supervisor moduledoc (#6466)
Ensure nested evaluator entries exit
Allow mix archive.build to bundle dot files from priv folder (#6420)
Do not crash for unknown var inside binary pattern in match (#6459)
Add current stacktrace to whereami/0 (#6458)
Reword Supervisor moduledoc (#6463)
Remove double space from Supervisor moduledoc (#6462)
Improve docs for Supervisor.child_spec/2 (#6452)
Use default match_vars and context on definitions
Remove --if-missing when calling archive, closes #6453
Raise exception when passing negative delta to assert_in_delta/4 (#6441)
Correct indentation and style in one of URI tests
Update docs `Enum.reduce/2` (#6442)
Minor fix in the docs for ExUnit.Case (#6433)
Add is_binary guard to String.length (#6430)
Do not expect a certain order from tests
Improve Calendar.ISO.date_to_string/3 default format definition
Make Calendar.ISO independent of :calendar (#6290)
Improve docs for Enum.filter/2
Do not crash IEx on :init.stop
Improve formatting of Supervisor documentation (#6416)
Improve error message on invalid use of Supervisor.Spec
Do not always write tuple vars as tuple types, closes #6411
Document :eval_interrupt color in IEx (#6413)
Extract MapSet dummy values to a module attribute (#6410)
Make format_date and format_time part of the Logger.Formatter API
Make it clear new child specs are not supported, closes #6407
Always use in_context definition for struct expansion, closes #6409
Add example of using sort_by with multiple "properties" (#6406)
Correct process name from example in Supervisor docs (#6402)
Add mix test --slowest reporting to ExUnit (#6385)
Add handle_begin and handle_end to EEx
Ensure elixir_erl:debug_info/4 does not require elixir running (#6401)
Do not serialize references, closes #6393
Allow profile tasks to run without a project
Properly track unreachable defmacrops in locals tracker
Properly trim all quotes on Windows
Minor grammar tweak in doc of lib/mix/dep.ex (#6396)
More doc fixes, see #6395
Update docs for Task.async_stream, closes #6395
List applications in runtime_info (#6389)
Add OTP release to System.build_info/0 (#6387)
Inline supervisor child_spec for readability
Make sure both old and new specs can play together at the supervisor level
Add missing type information in t/1 example (#6383)
Support :infinity timeout on Task streams (#6382)
Add a test case for failed dialyzer check in with
Add heredoc info to heredoc list/binary literals when parsing (#6372)
Add check for correct types on System.cmd/3 (#6368)
Check for null bytes and invalid environment vars on System
Improve usage of `succeeds in` in Code module docs (#6366)
Remove erlang:get_stacktrace() warning
Update CHANGELOG
Ensure recursive file/path ops raise on paths with null bytes
Also require 19.0 on Makefile, closes #6363
Do not use named ETS tables during module definition
Bring the "e in _" syntax back to try/rescue (#6360)
Add :strict and :flex modes to Inspect.Algebra
Augment integer literals with representation info (#6344)
No need for Exception.normalize/3 on exception in rescue
Remove special case for %_{} translation
Use %module{} syntax where applicable (#6355)
Also deprecate nil which was silently accepted
Handle -compile module attribute when specified as a list (#6356)
Give a tour of the standard library on Kernel (#6335)
Add Stream.intersperse/2 (#6353)
Build match var instead of relying on translate
Talk about style changes and  "Allow edits from maintainers"
Validate variable struct name (#6347)
Do not rely on ops code stacktraces, closes #6352
Add note about precompiled source code for IEx.Helper.open/2 (#6349)
Tidy up StringIO
Allow __FILE__ and __LINE__ customization in EDITOR
Add more Time.compare/2 examples Showing :eq and a an example of dates not having any effect.
Allow more than Time structs in Time.diff/2
Optimise binary pattern matching in String.Break (#6340)
Use orelse instead of or when expanding in operator (#6314)
Minor updates to Calendar.ISO and Calendar.Holocene fixture (#6331)
Add file:line to errors_test.exs
Improve warning messages for the @impl attribute and code around
assert_compile_fail -> assert_eval_raise in errors_test.exs
Remove remaining mentions of rata die (#6336)
Remove links from Erlang functions and instead let tools do it
Introduce Registry.unregister_match/4 (#6326)
Remove parens in "fn" calls in the Agent docs (#6330)
Move away from rata die reference and use iso_days instead (#6328)
Minor optimisations in MapSet (#6329)
Wrap lists and two-element tuples literals in blocks (#6323)
Ensure Registry.match/4 works with :_ as key
Improve table column alignment logic in IO.ANSI.Docs
Improve naming in strip functions of "escript.build" Mix task
Correct function name in ExUnit.DocTest
Enhance duplicate map keys test
Force {Enum,Stream}.zip/1 to take a list of enumerabls as argument (#6322)
Do not pass kind to definition_scope
Continue raising on unbound __CALLER__
Do not silently prune defmacrop
Improve coverage and fix regression on Stream.chunk/4
Couple minor optimisations in Kernel (#6315)
Ensure with is tail call optimizable
Do not lose source compile info on protocol consolidation, closes #6270
Improvements to IEx.break! docs
Rename system_info to runtime_info
Rename e/1 to exports/1 in IEx.Helpers listing
Rename e to exports
Update docs & typespecs for calendar modules (#6313)
Add breakpoint support and user conveniences to IEx
Style improvements to IEx.Pry changes
Add remaining delegations to IEx.Pry
Add IEx.Helpers.break!/2 and break!/4
Add IEx.Helpers.continue/0
Disable warning of IEx commands via match_vars := apply
Add IEx.break!/4
Add IEx.Pry infrastructure
Improve the failing guards guide (#6312)
Add IEx.Helpers.open/0 and open/1
Improve documentation for Mix.env/0,1 (#6308)
Add terminator info to sigil AST node metadata (#6305)
Add IEx.Helpers.whereami/0
Clean up IEx.Introspection
Refactor IEx.{Server,Evaluator,Pry} APIs and test suites
Move match vars handling and warnings to elixir_expand
Postpone deprecation until v1.8
Ensure defaults and defoverridable work together, closes #6300
Minor update to Map.replace/3 and Keyword.replace/3 docs (#6304)
Add IEx.Helpers.system_info/0
Ensure run --no-start still triggers loadpaths, closes #6303
Do not color map's => differently in inspect
Use full Apache 2.0 LICENSE
chunk/4 -> chunk_every/4 and chunk_by/4 -> chunk_while/4
Share chunking logic between stream and enum
Improve docs for chunk_by/4
Do not warn on unused variables in rescue, closes #6287
Increase assert_receive timeouts on CIs (#6297)
Add allow_failures to appveyor (#6296)
Add back assert comment in Base test
Implement Inspect for DateTime (#6269)
StringIO.get_until bug fix, performance, and tests (#6268)
Optimise Base encode/decode (#6261)
Raise Protocol.UndefinedError on bad functions in Enumerable implementation (#6292)
Update to Unicode 10 (#6293)
Allow markers "/" and "|" to be used in a custom EEx engine (#6281)
Raise on more invalid patterns and expressions in guards
Strip docs from escript beams as well
Improve the documentation for try/1 (#6279)
Always return defaults on configuration() access
Load ExUnit configuration as late as possible
ETS table names are not quotable on OTP 20
Cache the AST on definitions
Improve ExUnit documentation for the :test tag (#6271)
Do not use .Test prefix in docs
Create behavior for Mix compiler tasks (#6239)
Add wrap_literals_in_blocks option to parser (#6263)
Return {:error, :invalid_time} for wrong precision
Do not use colors when inspecting for error messages
Update map.ex (#6267)
Add exunit doc about trace mode and test timeouts (#6266)
Add EEx deprecation to Deprecations.md (#6265)
Emit warning when using %{foo => bar} in typespecs (#6259)
Remove a couple TODOs now that we no longer support Erlang 18 (#6260)
Update a TODO in Kernel.defexception/1
Use :binary.split/3 in String.Break.split/1 (#6257)
Bump version in VERSION files
Start v1.6.0-dev
Prepare for release
Remove unused functions and variables in ExUnit
Update CI builds to use newly released OTP 20.0 (#6249)
Document how to get shell history
Make parallel: true opt-in in Registry.dispatch/3, closes #6226
Optimize String.replace_* functions (#6240)
Do not show variables on error reports due to verbosity
Keep Task.async_stream backwards compatible
Improve the docs for non temporary restart in Task.Supervisor
Update CHANGELOG
Do not clean files that are not compilation artefacts
Mention Erlang's :unicode on String
Update TODO version
Update Logger format on docs, closes #6244
Give variables used alongside patterns high priority in signatures
Do not use erl_prim_loader as we no longer keep archives around
Add :ordered option to async_stream (#6234)
Improve argument name in c:Mix.Task.run/1
Add a preserve_comments option to the tokenizer (#6222)
Inline String.duplicate to :binary.copy BIF (#6238)
Add missing variable names in function definitions (#6194)
Update link to `:erlang.module_info/0` (#6233)
Prevent describe blocks with the same name in ExUnit (#6237)
Add --all-warnings option to Elixir compiler (#6224)
Make assert_raise fail with broken message/1 implementation
Code: Improve grammar in `require_file` docs (#6232)
Add table column alignment in IO.ANSI.Docs (#6230)
Do not silently discard Erlang compile errors, closes #6209
Improve coverage in Date.RangeTest
Do not expose @doc false functions in Date
Add Date.range/2 (#6227)
Do not use exit(msg) in parallel compiler/require (#6229)
Inline comparisons on same calendar for date and time
Turn EEx.SyntaxError into a warning to keep backwards compatibility (#6220)
Add missing calls of remove_dot_segments to URI.merge/2 (#6208)
Add start_supervised/2 and stop_supervised/1 to ExUnit (#6193)
Clean up nested conditionals
Show better error when h/1 is used on callback (#6206)
Raise on doctests that don't finish on a trailing new line (#6180)
Remove implementation details from sort_by
Improve documentation for Process.delete/1
Refactor read-only argument handling in Task.Supervised (#6219)
Clean up the Map module by checking for maps and reusing code (#6205)
Use new mix.exs style in docs, core apps mix.exs and generated README (#6215)
Add a couple of tests for maps
Extract a function in Task.Supervised
Minor improvements to match?/1 docs (#6207)
Do not leak EXIT messages on Registry dispatch
Optimize interpolation for calls that always return strings (#6203)
Add bugfix to IEx CHANGELOG (#6197)
Correct Changelog (#6196)
Standardize arguments in Integer.gcd/2 (#6198)
Polish minor things in the documentation for Range
Retire use of Supervisor.Spec (#6191)
Update CHANGELOG
Improve Supervisor.child_spec/2 docs
Include an example in the error message
Make sure generated child_spec/1 is overridable
Show available implementations on Protocol.UndefinedError
Add __protocol__(:impls) to protocols (#6184)
Do not choke formatter if file is suddenly not available
Streamline child specs (#6189)
Ensure we properly migrate from old to new manifests
Solve race condition in tests
Update Task.start_link/1 docs (#6188)
Add Unix epoch example to DateTime docs showing an easy way to get the Unix epoch (#6187)
No longer deprecate Calendar functions and take rollover into account
Handle changes to crash reports in OTP 20 (#6185)
Improve docs and optimize Calendar add/diff functions
Replace Keyword.t/0-1 types with built-in keyword/0-1 (#6124)
Remove race condition in profile.fprof test
Keep one path per app for consolidation
Correct the :printable_limit option default for Inspect
Increase printable limit
Ensure the module has been fully built on multiple sources test
Remove travis-ci announcements from IRC [ci skip]
Include assert/receive in code snippets
Update CHANGELOG
Show bindings when assertions fail in ExUnit (#6175)
Move a private function around so that it's always used in ExUnit tests (#6176)
Improve docs for tag reporting
Extract code snippet from source for test errors, closes #6173
Inflect task from module
Do not rely on Mix.Local for install/uninstall
Do not lose precision in NaiveDateTime.add/3, closes #5938
Make comprehension filters as generated
Add for with boolean check dialyzer test
Do not show pinned variables from other contexts
Optimize iso rata die conversion
Slightly refactor Calendar.ISO
Store multiple sources in case of module conflicts (#6167)
Improve NFC error message
Do not start oldshell alongside IEx, closes #5730 (on Windows) (#6168)
Do not rely on on_load because it breaks releases
Remove unecessary use of find_value/3
Improve docs for "mix local.hex" (#6145)
Do not start oldshell alongside IEx, closes #5730
Check enforce_keys are all atoms
Only write to manifest if xref ran
Document manager behaviour, closes #5830
Add Enum.chunk_by/4 and Stream.chunk_by/4 (#6090)
Deprecate Enum.filter_map/Stream.filter_map
Improve filter_map docs
Support ram/raw files in File.copy/2, closes #6163
Rename module names to avoid conflicts
Add non-quoted Unicode atoms and variables (#6158)
Make Mix-scaffolded test actually test something (#6159)
Clarify Enum.uniq_by/2 function parameter (#6156)
Increase timeout for more resilient builds
Kill leaked erl and epmd instances on Windows
Use proper Windows build badge
Do not add multiple lines to blame report on ExUnit
Move private function to describe block to avoid warnings
Account for line endings in sigil test
More work regarding making CI on Windows green (#6150)
Use :binary.split/2 instead of part+match
Support Erlang modules for use as structs (#6146)
Show specific description for dont_display_result atom in i/1 helper (#6137)
Add OTP 19.3 and 20.0-rc1 to travis
Include Windows build in the README
More build fixes on Windows
Try new versioning format
Do not depend on .git on appveyor
Add appveyor.yml for ci configuration (#6143)
Test Suite Windows compatibility (#6141)
Add a test for use of --no-deps-check
Move check_lock/1 inside deps_check
Update CHANGELOG and Deprecations with v1.5 changes (#6136)
Add Inspect.List.printable?/1 back
Also apply printable_limit to char lists
Move printable_limit check to escape
Provide inspect opts printable_limit (#5822)
Sort deprecation clauses alphabetically in :elixir_dispatch (#6135)
Remove in IEx autocompletion default arg. functions with @doc false (#6131)
Give a proper syntax error when invalid sigil delimiters are used (#6133)
Document deprecation of Integer.to_char_list/2 and List.Chars.to_char_list/1 (#6134)
Dogfood new defoverridable syntax (#6100)
Add Exception.blame/3 and Exception.blame_mfa/3 (#6127)
Don't call self/1 unnecessarely in  Task.Supervisor (#6129)
Deprecation of "strip" functions in String module (#6128)
Polish the documentation for the Logger module and its functions
Make helper function name clearer in Exception
Remove exports field from UndefinedFunctionError struct
Ensure safe stacktrace use in Exception
Add a test that struct syntax is maintained
Do not remove structs syntax in Elixir pass
List strip and just String functions in deprecations page, closes #6125
Consider unicode non-characters as valid (#6108) (#6121)
Properly slice titlecase_once binaries
Inline Map.new for lists
Handle negative parts when applying tz offset
Document lack of support for the 24:00:00 notation
Improve typespec of EEx.Engine.fetch_assign! (#6118)
Add missing "require Logger" in ExUnit.CaptureLog doc example (#6117)
Make sure System.stracktrace is first thing done in the handler (#6119)
StringIO read_line performance and binread bug fix (#6056)
Update atom docs, closes #6115
Clarify the purpose of MIX_NO_DEPS
Remove unecessary match on key
Optimize Access.get/2
Warn when a :__struct__ key is used when building/updating structs (#6113)
Improve doc for Enum.map_every/3 when nth is 0 (#6111)
Update project.ex (#6112)
Show overriding information when using path with query string
Items in the enumerable are prepended to the args (#6109)
Use inspect when displaying file paths and extensions (#6106)
Remove unnecessary specs for funs with default arguments (#6095)
Standardize messages that suggest to run a command (#6096)
Refactor Version.parse/1 to not use regexes (#6107)
Full stop is part of the sentence, not the data type (#6102)
Add :pid to list of Logger metadata builtins in the documentation (#6101)
Do not warn about missing @impl for overridable functions (#6098)
Prepend slash to directories in .gitignore files and generated ones (#6091)
Use explicit function names in DocTest tests (#6093)
Clean-up use of get_stracktrace in elixir_errors.erl (#6092)
Improve test for no import options in DocTest tests (#6094)
Replace GenEvent.remove_handler/3 with :gen_event in GenEvent.Stream (#6087)
Properly escape fields passed to defrecord (#6086)
Improve doc for default argument operator
Use classify_identifier to avoid creating atoms
Remove unused ignored entries in .gitignore (#6073)
Skip autocompletion of module names that are invalid without being quoted (#6080)
Make sure @impl warns even when @impl is first-used later
Implement @impl directive
Add docs and specs to String.Chars and List.Chars (#6084)
Optimize Regex.escape/1 (#6083)
Rename clean_exbeam Make target to clean_elixir
Tidy up Version tests
Simplify output format handling in Calendar.ISO
Enhance Process.cancel_timer/2 test
Use nil_container type where applicable
Clarify variable content in ExUnit.RunnerStats
Various minor improvements
Polish documentation in the Version module
Show invalid options in error message during expansion (#6075)
Use a cached environment to minimize tree when using specs
Add a couple of test cases for Version.parse/1
Simplify integer parsing (#6081)
Also store file sizes in manifest
Ensure no segment follows tiny version
Update CHANGELOG
Remove  use of Regex in the Version.Parser module (#6077)
Use the new debug_info option on OTP 20
Do not include typespecs on module map
Use appropriate chunk formats in each place
Build a metadata module for the compiler
Use binary keys in beam chunks
Respect beam_lib:build_module/1 API
Use default compression throughout
Move beam chunk logic back to elixir_erl
Remove Erlang warnings on Mix suite
Use new extra_chunks option when possible
Remove custom warning on "use Dict" (#6074)
Break calendar file apart
Optimize MapSet.equal? with incompatible versions
Do not discard MapSet version when map is not repacked
Version MapSet instead of imposing a breaking change
Reduce MapSet's space usage in Erlang term format (#5954)
Improve specs for Process.flag/2-3 (#5929)
Silence compilation warnings about the deprecation of HashDict/HashSet (#6072)
Recompile projects if OTP version changes, closes #6066
Remove unnecessary regexes in IO.ANSI.Docs
Remove more regexes from stdlib and logger
Improve documentation for String.split/3
Handle OTP 20 GenServer log messages (#6071)
Preserve attributes even if `strip_beam` is enabled (#5965)
Remove regexes from ExUnit, IEx and Mix
Add check for OTP 20
Add Regex.recompile/1 and Regex.recompile\!/1
Avoid race conditions on capture_err reuse
Remove warnings on OTP 20
Properly account failed tests when setup_all fails (#6061)
Get rid of the requirement-parsing DSL in Version (#6067)
Improve SASL+Logger docs, closes #6064
Mark variable as unused in Kernel.use/2 example (#6052)
Use overridable checks in defoverridable test
Finish moving documentation links to hexdocs.pm (#6054)
Integer.parse/2 simpler and faster (#6044)
Add missing `c:` for callback reference (#6049)
Support :on_timeout in Task.async_stream and friends (#6009)
Change focus in require explanation (#6041)
Document default argument operator (`\\`) (#6035)
Validate the value of the @on_load attribute (#6038)
Silence compilation warnings about the deprecation of Dict (#6039)
Do not log exits on IEx.Helpers.c failures
Add extra documentation for developers (#6033)
Better namespacing for overridable test (#6034)
Correct use of hyphens
Improve docs for archive.install, and escript.install Mix tasks
Use proper case for ASCII acronym
Additional fixes in the "Syntax Reference" documentation page (#6030)
Correct indentation in elixirc output
Do not mark -file as generated, closes #6015
Polish the "Syntax Reference" documentation page
Document Elixir syntax rules, closes #6026
Use single-equals when comparing variables in bin/elixir (#6028)
Make defoverridable/1 accept a module name as an argument (#6022)
Read compiler option directly from the function that uses it
Introduce Task.Supervisor.option type
Calendar support ISO_8601 supports basic format (#6005)
Add Process.cancel_timer/2 (#6014)
Improve variable names in Kernel functions (#6017)
Update the documentation for `archive.install` (#6018)
Remove duplicate test in MacroTest
Tidy up Macro test suite
Change @impl to @protocol_metadata for protocol info (#6012)
Avoid warnings in hd/1 and tl/1 tests (#6006)
Always use "rm -f" for deleting files in Makefile (#6008)
Use timeout/0 type in t:Supervisor.Spec.shutdown/0 (#6011)
Remove the trailing period in the installer message (#6007)
Mention that File.regular?/1 and File.dir?/1 follow symbolic links (#6002)
Improve specs in Access module (#5991)
Create "clean_residual_files" target in Makefile (#5982)
Improve guards and naming in Kernel.pop_in/2 (#5998)
Correct "mix new" command message in Mix.CLI (#6004)
Test tl/2 and document use with improper lists (#5997)
Document usage of hd/2 with improper lists + hd/2 tests (#5996)
Do not raise when expanding dynamic size
Rename parameter in Protocol.each_struct_clause_for/3 (#6000)
Remove temporary files in "clean_man" target in Makefile (#5981)
Makefile fixes (#5980)
Improvements to elixirc command (#5977)
Minor tyding up in Task.Supervised
Improve error message from Mix CLI
Make Mix more friendly for newcomers
Replace calls to :maps.update/3 with Map.replace!/3 (#5984)
Implement List.delete/2 in Elixir
Clean up and reorder tests for the Regex module
Replace maps calls with Map in Kernel.struct (#5978)
Give an argument a more descriptive name in the Record module (#5973)
Use "negate" instead of "neg" in the Kernel.SpecialForms docs (#5976)
cover calls to anonymous functions in `:.` docs [ci skip]
Document --help option in elixir command and include long version of --version (#5971)
Standardize elixirc bin files (#5970)
Standardize iex bin files  (#5972)
Make it more clear that file permissions are octal (#5975)
Complete typespecs for Record module (#5932)
Integer.gcd/2 improvements  (#5946)
Minor doc cleanup (#5968)
Improve some naming in the implementation of Enumerable for Range
Slightly polish docs for Integer.gcd/2
Improve raise docs and error message
Removes .gitignore pattern for generated lexer [ci skip] (#5960)
Tidy up MapSet tests
Improve arguments naming in Enum.reverse/1
Drop do_ prefixing in helper functions for MapSet.new/1-2
No need to reverse lists on MapSet
Set up ExUnit based on the whole data, closes #5952
Add parentheses to the aliases example (#5955)
Clarify @preferred_cli_env docs
Add head for GenServer.whereis/1 to match spec
Improve Code.ensure_compiled docs
Add information about after clause timeout limit (#5942)
Add a test suite for Integer.gcd/2 (#5945)
Document the edge case Integer.gcd(0, 0) [ci skip] (#5944)
Improvements to calendar modules
Simplify conversions by working on gregorian seconds
Improve docs for Calendar's diff functions
Tidy up more calendar details
Improve {(Naive)DateTime, Date, Time}.diff/2 (#5923)
Improve port docs, closes #5937
Example for error on agent start, closes #5936
Improve docs and specs for {(Naive)DateTime, Date, Time}.convert/2 (#5921)
Revise grammar in Mix.Config config template (#5935)
Be clearer explaining how to create a record with a customized tag (#5931)
Small formatting improvement to Application.put_env/4 doc
Improve naming of errors in elixir_expand
Use "option" instead of "keyword" in error message for alias
Tidy up few tests in Logger.Backends.ConsoleTest
Improve test of discouraged types in TypespecTest
Remove unnecessary calls to abs/1
Improve test messages in ExUnitTest
Use System.schedulers_online/0 where possible
Improve doc formatting for ExUnit.configure/1
Add missing comma (#5933)
Remove unused import in Calendar.ISO (#5930)
Replace compile_error/4 with form_error/4 in elixir_erl_compiler (#5925)
Restore (deprecated) Integer.to_char_list/2 (#5928)
Inline Map.replace!/3 and comments about inlining (#5922)
Properly document passing strings to Module.split/1 (#5927)
Slightly refactor Mix.Utils.print_tree/3
Minor improvements to the docs and specs in the Module module
Add typespecs and guards for the Module module (#5869)
Mention :sys.suspend/2 and :sys.resume/2 in the GenServer documentation
Update CHANGELOG
Properly inline code and remove warnings
{Map, Keyword}.replace/3 and replace!/3 (#5917)
Improvements to calendar
Do not use _underscore_ notation on markdown
Adds internal Calendar Rata Die format for conversions between Calendars (#5841)
Use GenServer.stop/3 instead of :gen.stop/3 in Agent.stop/3 (#5915)
Replace compile_error/4 with form_error/4 in elixir_import (#5916)
Polish the documentation for the Agent module
Ensure Access.at/1 guards for integer index instead of just positive
Polish the documentation for the Access module
Mix archive.install parse file before installing (#5895)
Mention Erlang-style modules in the documentation for Module.split/1
Enum refactoring (#5818)
Perform only single enumerable dispatch on Enum.fetch (#5911)
Document and test function/0 built-in type (#5908)
Validate options for comprehension (#5907)
Add space after semi-colon in Issue Template (#5910)
Clarify starting value in scan/2 documentation (#5906)
Remove function guards as the BadArity and BadFunction reports provide more information than FunctionClauseError
Improve docs for Process.link/1 (#5904)
Use passed value for ExUnit.Callbacks.raise_merge_reserved!/3 (#5903)
Add original values to context merging in ExUnit (#5901)
Optimize Map.merge/3 by choosing merge direction (#5899)
Underscore unused variables in test suite (#5896)
Add float overflow error message to Tokenizer (#5893)
Typespecs changes (#5875)
Use defdelegate/2 whenever possible in Process module (#5885)
Improve docs of Process.monitor/1 (#5891)
Add metadata: :all option to Logger.Backends.Console (#5892)
Remove unnecessary indirection in Task.find/2 (#5890)
Reword String.to_float documentation (#5878)
Add spec to Process.sleep/1 (#5884)
Inline functions in Process module
Add nonempty_charlist/0 built-in type (#5879)
Clarify docs
Solve race conditions on struct dispatch
Typo in uri.ex (#5877)
Add missing word in URI module doc (#5874)
Improve docs for URI, closes #5872
Add guard to OptionParser.split/1 (#5868)
Improve docs and guards for File.cp_r/3 (#5867)
Expose generated seed and max_cases options (#5862)
Correct spelling in Calendar
Ensure NaiveDateTime.to_iso8601/1 raises for non-Calendar.ISO structs (#5865)
Improve doc and typespec for Enum.map_join/3 (#5866)
Improve helper function name in Enum
Typo in Deprecations.md (#5863)
Provide a Mix task example with use of arguments (#5860)
 Refactor configuration handling in OptionParser (#5853)
Outline the importance of reduce/3
Add more clarity on how reduce works through each iteration (#5861)
Optimise integer parsing (#5859)
Optimize checking of unused and unreachable locals
Implicitly document dependency sources (#5858)
Propose new styling for generated applications (#5855)
Clarify build_embedded
Improve deps and compile.app docs
More improvements to Mix' Elixir compiler
Update documentation of the Process module (#5848)
Remove hardcoded beam references in Mix.Compilers.Elixir
Do not raise on invalid eex expression as it was accidentally supported
Do not allow PIDs and References to survive function-based AST
Tidy up profile.cprof task
Correct tense in test messages
Improve naming of fixtures for escript tests
Unify mfa logic in xref and profile.cprof
Update elixir_parser.yrl
Rename a helper function in Task.Supervised
Add some explanatory comments around Task.async_stream and friends
Inline binaries inside interpolation
Provide more examples when solving comma conflict
Remove duplication in run, profile.cprof and profile.fprof
Add Mix.Tasks.Profile.Cprof and its tests (#5834)
Revert "Add MapSet.map_set?/1 function (#5835)"
Make variable type clearer in the escript.build task
Move variable bindings closer to the place where they used
Remove unnecessary Enum.sort/1 calls
Remove unnecessary inspect/1 call
Add char_list deprecations to CHANGELOG.md (#5807)
Add instructions to RELEASE to update Deprecations page (#5836)
Add line break in NOTE in Deprecations page (#5837)
Add test for OptionParser.parse/2 when it raises (#5838)
Use clearer comment in OptionParser example (#5839)
Add MapSet.map_set?/1 function (#5835)
Add a "Deprecations" page to the docs (#5808)
Implement own version of List.starts_with?/2 (#5802)
Strip debug information from escripts by default and add option :strip_beam (#5829)
Update InvalidVersionError & InvalidRequirementError messages (#5828)
Support of ETS guard conditions for Registry.match (#5825)
Rename Macro.parenthise/2 to Macro.wrap_in_parenthesis/2 (#5824)
Add a short summary about Elixir, closes #5823
Improve Float ceil/round/floor error messages (#5820)
Add a security warning to Code.eval_string (#5819)
Add space after comparison operator in Version example (#5821)
Prevent creation of DateTime above year 10k (#5812)
Mention and/2 and or/2 operators in the "unsafe_var" warning
No need for helper function for Enum.concat/1,2
Remove unnecessary clause for "unsafe_var" handling
Use correct file and module names for charlist tests
Remove unnecessary clause for "with" translation
No longer use dicts for building specs form
Allow comma as the decimal sign for Time, NaiveDateTime, DateTime per ISO 8601 (#5816)
Refer to :net_kernel.monitor_node from Node.monitor (#5814)
Keep ?var_context per module to avoid chance of conflicts
Do not require size for bound literals
Check for float size on elixir_bitstring
Check for binary size in bitstring matches
Keep <> operator at the end of lines
Improve code style in EEx.Compiler
Correct module name for grapheme tests
Split bitstring logic into proper modules
Improve checking of bitstrings
Use noenv_forms in code evaluation
Support custom backends (undocumented behaviour for now)
Move beam building to elixir_erl
Add elixir_erl_compiler
Start refactoring on elixir_compiler
Add argument guard for Task.Supervisor.start_child/3 (#5811)
Add prematch_vars
The default implementation of Enumerable.count/1 does not use === (#5806)
Clarify that modules are removed during recompile, closes #5809
Use elixir instead of Elixir for var_context/0
Add var_context/0 helper macro
Use generated/1 helper macro in elixir_def
Improve to suite and docs
Update CHANGELOG
Deprecate parens as nil and support guards on funs with zero arity
Add `List.starts_with?/2` (#5789)
Remove unnecessary :location cleaning in Kernel.ExpansionTest
Ensure we won't change line numbers for earlier Erlang versions
Do not introduce empty buffers in EEx
Do not use negative line numbers in ExUnit
Do not assume all load path exist
Unify formatting of some common expansion errors (#5797)
Replace elixir_errors:compile_error/4 with form_error/4 in elixir_map
Replace elixir_errors:compile_error/4 with form_error/4 in elixir_fn
Replace compile_error/4 with form_error/4 in elixir_clauses
Unify the error we raise when cond/case/etc don't receive clauses (#5796)
Move more from elixir_module to elixir_erl
Add tests for option handling in case/cond/try/receive
Deprecate parse transforms, closes #5762
Replace elixir_errors:compile_error/4 with form_error/4 in elixir_with
Get rid of do_ prefixing in elixir_clauses
Rename KV to Opts in the Erlang part of the codebase (#5795)
Keep generated meta in definitions
Make the error for local calls in matches/guards uniform (#5794)
Rename elixir_exp_clauses module to elixir_clauses
Rename elixir_exp module to elixir_expand
Rename m/2 helper macro to key/2 in the main header file
More module renaming and organizing
Move erlang modules to new erl namespace
Replace elixir_errors:compile_error/4 with form_error/4 in elixir_exp (#5793)
Start moving files to elixir_erl
Move many expansion errors tests from errors_test to expansion_test (#5792)
Store meta per clause
Properly eliminate clauses with unused defaults
Split erl and ex passes in elixir_def
Correctly inspect options for "quote" when an error happens (#5791)
Improve variable name in elixir_exp:rewrite_case_clauses/1
Raise CompileError on empty :else option in "with"
Get rid of the need for "with" translation (#5790)
Unify local handling in elixir_def
Refactor and clean up dispatching of locals
Clean up expansion and translation of def clauses
Use consistent names in elixir_translator
Simplify local warnings
Convert default argument handling to Elixir pass
Replace compile_error/4 with form_error/4 in elixir_bitstring (#5788)
Rename get_pairs/4 –> get_clauses/4 in elixir_clauses (#5787)
Validate type for literal binaries in <<>> during expansion (#5786)
Raise for invalid literals in <<>> during expansion (#5785)
Clarify code comments
Raise for size() with literal binaries in <<>> during expansion (#5783)
Enhance the guard guide (#5782)
Make URI.path_to_segments/1 private as it's not meant to be public
Move case inlining out of Elixir pass
Allow consuming multiple items from suspended enumerable in Stream.transform/3
Improve some namings and add comments around Task.Supervised (#5779)
Clean up around File.read_link(!)/1 and its tests
Add File.read_link/1 and File.read_link!/1 (#5739)
Improve .travis.yml formatting
Disable OS X builds on Travis CI
Move tokenizer macros to tokenizer
Hard-deprecate gen_event handlers as ExUnit formatters (#5778)
Perform map_key check on elixir_exp
Remove some rescue-related errors from elixir_translator (#5776)
Move "unbound variable ^foo" to elixir_exp (#5774)
Avoid expanding macros twice and improve messages
Move &1 check to expansion pass
Improving the function header def args compilation error (#5765)
Remove an unused import from elixir_translator
Check for "unbound variable _" in elixir_exp (#5773)
Drop support for "rescue exception in _" (#5771)
Add syntax reference documentation
Move CompileAssertionFail to errors_test exclusively
Explain custom console formatters (#5770)
Move expansion related tests to expansions_test
Remove unused elixir_scope fields
Move maps/structs validation to elixir pass
Move compile error for _ in cond to elixir_exp (#5767)
Stop aliasing :filename to FN in the Path module (#5769)
Move local-calls compile errors from elixir_translator to elixir_exp (#5764)
Stop aliasing :file to F in the File module (#5768)
Improve code aesthetics and indentation in Logger.TranslatorTest
Add grapheme tests
Incorporate new grapheme rules in Unicode 9
Revise @doc to reflect current compile/5 params (#5758)
update .travis.yml to test on osx (#5740)
Add hard links (#5755)
Warning for duplicated deps on project root level (#5751)
Remove duplication in format_errors
Implement IEx.Info protocol for calendar types (#5747)
Added example to Enum.into/3 (#5756)
Document custom formatters, closes #5754
Docs call `respawn/0` using parentheses (#5753)
Support middle expressions on trim mode, closes #5752
Use GenServer as behaviour example
Comment that the in/2 operator on ranges succeeds only on integers (#5750)
Expand attributes on bootstrap only when Macro module is available
Remove deprecated GenEvent tests
Assert valid match and guard constructs on Elixir pass
Remove translation from elixir_fn
Remove super attribute from elixir_scope
Correctly inspect functions with undef arity in Logger.Translator (#5744)
Improve doc for ExUnit.Callbacks (#5736)
Add TODO to archives extension
Properly cache apps_paths configuration, closes #5622
Rename Mix.Dep.Converger.topsort/1 to topological_sort/1 (#5729)
Delete previous .ez archives
Improve docs for Application (#5724)
Remove unused arg allow_nonexistent_atoms? in OptionParser.do_next and rename function
Avoid bootstrap warnings on macro, closes #5725
Improve docs for OptionParser
Only expand aliases known at compile time, closes #5721
Minor documentation improvements to Calendar, and Regex
Introduce :trim_bom option for File.stream!/2 (#5702)
Improve docs about comparisons, closes #5716
Implement allow_inexistent_atoms for OptionParser (#5709)
Add Application.start_phase/3 callback and associated docs (#5694)
Made ansicode and ansilist public types. (#5706)
Hard deprecate GenEvent and provide alternatives in its docs (#5705)
Correct datetime types spelling in Calendar
Also mention new versions file
Run `make clean` for erlang.mk (#5698)
Improve the documentation for the "try" special form
Introduce Macro.generate_arguments/2 (#5699)
Improve local.hex slightly more
Improve code style in local.hex
Add --if-missing flag to local.hex mix task (#5674)
Remove outdated super test
Move super up to Elixir pass
Add an example to the docs of Task.async_stream/3 (#5681)
Tidy up overridable and make sure def, defp, defmacro and defmacrop work accordingly
Only pass overrides from parent to child rebar dep (#5687)
Use `elixir --version` instead of `elixir -v` in ISSUE_TEMPLATE.md (#5693)
Support rebar3 dependency package declaration (#5678)
Improve error message on invalid middle/end in EEx
Tidy up EEx test suite
Improve error message for invalid arguments in Protocol.def/1
Enhance variable names in Protocol
Consistently name function arguments in the MapSet module (#5663)
Tolerate missing git repo "info/" when setting sparse configuration (#5525) (#5690)
Correctly inspect function calls with weird atoms (#5629)
Slightly polish the documentation for ExUnit.Callbacks
Documentation signature and typespec improvements (#5677)
Remove % from callable
Clarify docs for :limit, closes #5671
Improve error when using non-arith guard BIF in match (#5667)
Rephrase doc in Macro (#5668)
Improve error if dialyzer errors in tests
Clarify invalid pattern in match error
Polish test names and comments in tests for Tuple
Comment to Enum.flat_map/2 about flattening (#5660)
Logger docs: recommend using thunks for expensive computations (#5655)
appended -> prepended, closes #5656
Clean up tests for Path
Remove leftover trailing whitespace from the code base
Slightly polish the docs for the GenServer.terminate/2 callback
Optimize paths calculation in Mix.Compilers.Elixir (#5648)
Make MapSet.new/1 doc more descriptive (#5646)
Slightly reword the docs for IEx.Helpers.ls/1
Add e/1 to IEx.Helpers' summary
Polish the docs for a couple of IEx helpers
Add e/1 IEx helper to list all exports in a module (#5638)
Remove dead paren from URI comment (#5636)
Simplify IEx.Helpers docs
IEx.Helper documention improvement (#5632)
Add `-` to Regex.escape/1 (#5626)
Add link to version spec to mix deps documentation (#5625)
Polish tests for Inspect.Atom
Refactor some functions in Inspect.Atom
Support "left not in right" syntax (#5620)
Improve docs in inspect algebra
Optimize Enumerable.count/1 implementation for File.Stream (#5613)
Improve task docs, closes #5618
Disable ansi detection for powershell to avoid false positives
Simplify documentation to fix a missing word (#5614)
Cleanup exit messages on Task.async_stream (#5612)
Update typespec for System.get_env/1 (#5611)
Simplify "/" handling in Path.unix_pathtype/1
Add special case for "/" in Path.unix_pathtype/1 (#5607)
Improve docs for System.get_env/0 and System.get_env/1
Remove isolated multiple space from VersionTest (#5600)
Eliminate import, alias, require translation (#5599)
Improve validation of aliases (#5598)
Remove redundancy from Version doc (#5597)
Improve docs for ..
Improve reading in error message
Update docs for `File.dir?/1` (#5581)
Test against Erlang 19.2 (#5584)
Add doctests for Agent functionality (#5583)
Improve test_stdlib usage paragraph in README
Clarify how to use test_stdlib instead of test_elixir (#5585)
Mix do: Ignore left part of comma if its just empty. (#5566)
Add System.stop/1 over :init.stop/1 (#5578)
Add explanation how to quit the IEx shell (#5579)
Replace :previous_line tagging with eval/1 in IEx.AutocompleteTest
Make IEx.AutocompleteTest.expand/1 private
last_day_of_month -> days_in_month
Ensure autocomplete does not raise on struct keys, closes #5576
Talk a bit about keyword syntax in the Keyword module (#5574)
Add examples and polish docs for the Collectable protocol (#5572)
Correct documentation referencing System.schedulers_online/1 to System.schedulers_online/0 (#5568)
Better behavior for the default test task (#5561)
Optimize Enum.count/2 (#5567)
Minor grammar tweak (#5558)
Add detail on usage restrictions to Module.defines?/{2,3} (#5557)
Make the example a valid mix project (#5555)
Add i/0
Use "Semantic Versioning" wording
Minor grammar fixes
Make it clearer we depend on the semantic version format
Highlight that :gen.stop/3 is synchronous (#5553)
Polish the docs for the Path module
Polish the docs for the async_stream family of task functions
Make sure put_attribute still returns a quoted expression
Move extract_files to proper test file
Do not traverse filesystem on empty paths
Improve style of examples in Kernel.SpecialForms
Improve test names and use describe/2 blocks in tests for URI
Improve test names in a few modules
Properly indent parser block code
Wait for message before crash in exception tests
Clarify :transient supervisor restart (#5550)
Polish the docs for Process
Do not interpolate in defprotocol docs
Do not promote Blank protocol in docs
Use Elixir apps from deps when building escripts (#5540)
Refine docs for many functions in Mix.Project
Typo in the docs for Process (#5543)
Improve IEx width configuration width (#5541)
Remove redundant preposition from Access doc (#5539)
Use :extra_applications instead of :applications in escript.build (#5534)
Remove double space from application doc (#5537)
Don't deprecate {:ok, keywords | map} callbacks results in ExUnit (#5532)
Improve syntax error for "fn do ... end" (#5530)
Improve test names in the tests for Base
Tidy up tests for Code (#5531)
Use proper case for proper nouns and acronysms (#5498)
Annotate the context for variables as zero-arity funs in quotes
Improve docs for spawn and module callbacks
Move a bunch of hard deprecations to elixir_dispatch (#5524)
Remove extra article from Application start callback doc (#5521)
Add links to Erlang modules (#5505)
Do not use abbreviations, e.g. "e.g."
Allude to other valid guards in Guard Page docs (#5502)
Hard-deprecate the "char_list" spelling (#5517)
Update ISSUE_TEMPLATE.md
Double assert_receive_timeout to avoid failures on slower machines (such as CI)
Unify building of functions into a single place
Improve IEx autocompletion to handle manual imports (#5518)
Deprecate String.rjust/2,3 and String.ljust/2,3 (#5516)
Update the deprecation TODO for Enum.partition/2
Hard-deprecate the Set module (#5513)
Soft-deprecate GenEvent (#5514)
Hard-deprecate String.*strip/1,2 functions (#5508)
Improve IEx autocompletion to handle variable names (#5504)
Update some TODO deprecation comments
Make unregister semantics clearer (#5512)
Ensure comprehensions with guards and filters keep proper ordering, closes #5509
Add white-space before =, == (#5506)
Correct inner indentation in Calendar
Show a list of options in the docs for String.replace/4
inflect -> infer (#5503)
Use https for tools.ietf.org links (#5491)
Improve wording in Module and Map docs (#5495)
Use proper case for Erlang in error messages (#5492)
Add missing arity to functions and types (#5494)
Remove white-space between fn and parenthesis (#5499)
Do not use backticks in error messages (#5501)
Correct tense in verbs (#5500)
Add backticks to ranges in docs (#5497)
Update links for learning Markdown (#5493)
Unify testing of evaluator related functionality
Improve IEx autocomplete to support navigating map atom keys (#5488)
Include proper line numbers on unused module attribute warning, closes #5490
Improve docs for archives
Add DateTime.from_iso8601/1
Ensure child task cannot link after parent unlinks
Update CHANGELOG
Update instructions with new docs setup
Use capture_log in Task tests
Release v1.4.0-rc.0
Document how to show all the entries in IEx (#5486)
Simplify port wrapper script
Raise when given non-keyword-lists in Keyword.merge/3 (#5479)
Allow console device to be configured
Update CHANGELOG
added clarification to Enum.uniq_by (#5483)
Remove double line-break in List (#5482)
Disable warnings_as_errors for rebar3 dependencies (#5481)
Remove unnecessary spaces in KernelTest
Add underscore in file names, and atoms (#5478)
Replace :timer.sleep/1 by Process.sleep/1
Improve Stream.interval/1 documentation (#5480)
Optimize Enum.reduce/3 for ranges (#5477)
Use red or green background for whitespace-only diffs (#5476)
Speed up String.split/1
Automatically inflect the list of applications (#5473)
Warn on invalid umbrella child applications
Validate the :build_per_environment option in Mix.Project.build_path/1 (#5474)
Improve error messages for bodyless and skip warning on quoted headers
Improve options validation in Mix.Tasks.Compile.Elixir (#5470)
Purge consolidated protocols before and after recompiling, closes #5228
Also rewrite local calls made in local call arguments, closes #5149
Remove unecessary module in quote tests
Improve option validation in Erlang-related compilers (#5471)
Validate options in Code.compiler_options/1 (#5472)
Improve error messages when validating Mixfiles' application/0 (#5469)
Support GenServer in new ExUnit formatters
Optimize Enum.reduce/3 for ranges
Slightly refactor some code in Mix.Tasks.Compile.App
Tidy up code around syntax highlighting in IEx
Remove unnecessary newline
Use ranges instead of :lists.seq/2 in Registry
Remove spaces around * in bitstring definitions
Use literal velues for size modifier in bitstring definitions
Rename shift_{left,right} helper functions in Float
Raise when given non-keyword lists in Keyword.merge/2 (#5466)
Improve error message on default handle_call/handle_cast clauses, closes #5356
Raise BadBooleanError on and/or, closes #5297
Refactor KernelTest to use describe/2
Improve compiler message on unexpected end of line, closes #5137
Update CHANGELOG
Update to Unicode 9.0.0
Warn for unused module attributes
Move module attributes to a new structure to support warnings
Don't print `cd .` to shell (#5457)
Add specs to a few Logger functions (#5465)
Remove double space from Path (#5467)
Expect tuples in Keyword
Update TODOs
Use default color on collections on IEx syntax colors
Ensure compile.app properly writes utf-8 applications
Mention {} syntax in the alias docs (#5456)
Add doc example for Module.eval_quoted with __ENV__ as first argument (#5455)
Remove duplicated assertion and improve formatting in KernelTest (#5454)
Remove double space from KernelTest (#5451)
Generally improve code readability in Inspect.Algebra (#5446)
Document and refactor syntax colors
Syntax highlighting of IEx results (#5355)
Allow Logger passed functions to return metadata (#5447)
Inline do in def sequence for KernelTest (#5448)
Document the Port module
Inline do in def sequence for KernelTest
Document implicit function try (#5442)
Polish docs and examples in Inspect.Algebra (#5445)
Support match lookups in the registry
Remove liveness guarantees as races exist anyway
Use bitshifting instead of * power_of_2_to_52
Use bitshifting instead of log when scaling
Optimize exponent building in Float.round/3
Suppress few warnings
Minor improvements around OptionParser.to_argv/2
Favor datetime over date_time
Correct doc for DateTime.to_iso8601/1
Tidy up Kernel.TypespecTest
Rename vars in Kernel (#5433)
s/expression/value
Document when some functions raise in Kernel module (#5424)
Improve grammar in a comment in Kernel (#5432)
Improve docs, specs, and guards for get_and_update functions (#5420)
Update defdelegate/2 docs to reflect deprecated features (#5425)
Two fixes in record/1 (#5412)
Allow "super" types in Calendar functions
Simplify Kernel.match?/2 (#5429)
build_embedded no longer controls protocol consolidation
Add a warning about Code.eval_quoted and macros
Choose more descriptive name for Kernel.defstruct/1 result var (#5423)
Mention how to use multiple type variables in Typespecs (#5422)
Small improvements to Kernel module docs (#5419)
Also inline Node.list/0/1
Make tokenizer recognize VC merge conflict marker (#5416)
Mention true, false and nil literals in typespecs (#5418)
Add notes
Remove code for Erlang version which is no longer supported (#5417)
Use lower-case letters for non-system messages
Remove use of underscore before ordinal numbers in functions and variables (#5414)
Add RemoteConverger.post_converge/0 callback (#5074)
Give a meaningful error when doctest has invalid prompt (#5386)
Improve the docs for File.open/2 and File.open!/2 (#5407)
Complete specs and guards for Kernel module and some submodules (#5391)
Improve documentation of File.open* functions (#5398)
Standardize of use verbs in bulleted lists (#5402)
Improve docs and specs for Calendar.ISO
Implements Date.day_of_week/1 (#5404)
Only deliver tasks that have exited
Serialize lookups to avoid race in tests
Reorder code in Module's @callback example (#5400)
Add Date.leap_year?/1
Use Macro.to_string/1 when printing bad struct keys (#5403)
Improve guard in Enum.sort_by/3 (#5399)
Add Makefile variable to control ExDoc output format (#5397)
Clarification of aliases' non-visibility if defined in dependency (#5396)
Improve docs for to_argv
Mention the Registry in GenServer docs
Add Registry
Update CHANGELOG
ActuallCompiled -> ActuallyCompiled (#5392)
Tidy up code comments
Include the callback for unexpected message
Teach ExUnit.DocTest to handle fenced code block closings (#5389)
Introduce Task.async_stream/3 and Task.async_stream/5 (#5367)
Correct docs for Node.connect/1 (#5390)
Add the MapSet.t/1 type and use it where possible (#5365)
Add backticks in Kernel.SpecialForms.<<>>/2 docs (#5372)
Complements the docs of Version.compare/2 (#5387)
Use iex> prompt in IEx.Helpers examples (#5380)
Correct tense in Mix.Tasks.Test cmd line options (#5381)
Improve docs
Add double-quotes to command in Mix raise msg
Spell "builtin" as "built-in" (#5376)
Update CHANGELOG.md
Make sure Access.key/2 consistenly accept only maps/structs
Ensure we check for microseconds in Time.compare
Improve Typespecs page and test every document type (#5362)
Properly spell UTF-8 (#5373)
Edit pass over access.ex (#5369)
Remove spaces around * in bit syntax in Macro.to_string/2 (#5370)
Correct EEx.Engine.handle_assign/1 spec
Improve NaiveDateTime docs
Improve names of String tests
Ensure both inner and outer transform streams are closed
Refactor Task tests to use describe/2
Improve the docs for List.myers_difference/2
Complete specs and guards for EEx (#5348)
Generalize and move myers_difference/2 to List
Improve variable names in {String, Inspect}.printable?/1
Inline compare helpers in Calendar data types
Favor struct update over Map.put/3 in Calendar tests
Improve varible names in NaiveDateTime tests
Use sigils in {Date, DateTime, NaiveDateTime}.compare/2 tests
Put expected result on right side of assertion in Calendar tests
Rename to_*_tuple/1 –> to_tuple/1
Refactor ExUnit options construction
Improve names of tests for "test" Mix task
Use Keyword.update/4 instead of put_new/3 + update!/4
Remove unnecessary String.split/2 call in "test" Mix task
Improve specs, guards, and variable names in ExUnit.OnExitHandler (#5334)
Append with cons instead of prepend + reverse in inspect (#5354)
Inline all ascii cases on printable?
Increase performance of Inspect.BitString.escape/2
Use sigils in Date/DateTime/NaiveDateTime.compare/2 doctests (#5352)
No need to check for equality given the first two clauses
Add Date/Time/NaiveDateTime.compare/2 (#5349)
Always include last message on reports
Add --formatter option to `mix test` command (#5347)
Ensure we consistently wrap variables in quotes
Emphasis on must await
Refactor loading logic for macros in import/2
Restructure doc samples in DocsTest
Test all available doc kinds in the test for Code.get_docs/2
Fully validate the shape of the options for import/2
Favor ==/2 operator over match in assertions
Make actual testing of doc attributes instead of occasional matching
Remove unnecessary apply/3 calls
Add comment why we do not check :except exports in import/2
Improve URI.encode/2 doc
There is no :erlang.is_record/1 function
Add missing space in Kernel.defstruct/1 docs (#5345)
Test against Erlang 19.1 (#5340)
Polish some docs for the File module (#5335)
Improve specs and guards in Code module (#5332)
Improve specs and guards in GenEvent (#5331)
Page Typespecs: Sort alphabetically literals, basic and built-in types (#5333)
Add/correct arities (part 3) (#5326)
ExUnit.Callbacks: improve guards, specs and small docs correction (#5329)
Remove argument error example to avoid warnings
Cache umbrella lookup
Add Mix.Project.apps_paths/1
Kernel.++/2: comment on improper lists being returned (#5323)
Link to callbacks in the docs (#5316)
Add/correct arity and link to callbacks and types throughout the docs (#5317)
File.rmdir!/1: give a less confusing error message when directory is not empty (#5299)
Reword ISO 8601 and add link to standard (#5321)
Reword and polish a few docs (#5322)
Support add() and diff() for NaiveDateTime (#5298)
Remove incorrect NaiveDateTime.from_unix/to_unix
Remove incorrect NaiveDatetime.from_unix/to_unix
Enforce rule of only guards should start with "is_" (#5300)
Add backticks to Kernel module (#5315)
Add any to Access.t (#5311)
Correct arity of functions and types in docs (#5301)
Reword "latest  moment possible" to "latest  possible moment" (#5314)
Add backticks to Stack server (#5313)
ISSUE TEMPLATE: remove mailing list as a source for getting help (#5312)
ExUnit includes tests when configured with [include: :skip] (#5305)
Use singular time units (#5303)
Reword "pseudo-variables" with "compilation environment macros" (#5308)
Use correct canonical reference
Update applications built by mix new (#5275)
Add test for unused var warning when defined inside case/2 (and similar)
fix typo (#5302)
Update CHANGELOG
Enhance Dialyzer test for and/2 and or/2 expansion
Ensure non-recursive tasks inside umbrella are reenabled
Suppress unused variable warning in Kernel.FnTest
Simplify assertion formatting in Kernel.FnTest
Add TODO about generated/0 removal
Correct Task.yield/2 usage example
Improve code around check_application_name!/2 helper in "new" task
Inspect path in the existence check dialog
Remove trailing period in error messages
Add Dialyzer test for and/2 and or/2 expansion
Add test for variable usage during in/2 expansion
Compile or/2 to case/2 when in non-guard context
Compile and/2 to case/2 when in non-guard context
Convert round back to float without loss
Introduce Float.ratio/1 and fix Float.{ceil/2, floor/2, round/2}
Improve `Task.yield/2` docs to suggest `Task.shutdown/1`. (#5292)
Use fully qualified call in in_range_literal/3 helper
Improve in_range/3 helper indentation in Kernel
Expand in/2 test samples only once
Extract in/2 with range literals handling to its own function
Add an example of Regex.scan/3 using unicode (#5294)
Improve CHANGELOG entry (#5291)
Use guards in deps.compile make check
Mix: use gmake on FreeBSD instead of make (#5290)
Make it clear pull requests are squashed on merge
Implement Stream.zip/1 and Enum.zip/1 (#5289)
Add a TODO to variable warnings
Use underscore after "my" word in code samples  (#5284)
Handle pid/port from other nodes explicitly and talk about ports on errors
Ignore bad type errors for Process.register/2
More helpful error message when Process.register/2 fails (#5281)
Break big paragraph into smaller ones
Flush error_logger before capturing (#5280)
Switch Logger to Erlang's gen_event (#5262)
Add @moduledoc false to GenEvent.Stream
Check directory existence in mix task new (#5273)
Use sub headers instead of a big list
Log error on unhandled GenServer message by default (#5250)
Check for both error messages when testing race conditions
Improve summaries for any/all
Consider is_process_alive/1 calls in returns_boolean/1 check
Consider is_record/1,2,3 calls in returns_boolean/1 check
Consider is_map/1 calls in returns_boolean/1 check
Update return boolean check for orelse/andalso
Update CHANGELOG
Do not build matches if variables are the same
Move raise checks to runtime callback, closes #5257
Add extra test for string concatenation as match usage
Add info about protocols in the i/1 IEx Helpers (#5241)
exit(child, :kill) -> Process.exit(child, :kill) (#5245)
Use Unix time wording
Simplify Calendar.ISO.last_day_of_month/2 definition
Remove unnecessary whitespaces in "colors" test for IO.ANSI
Remove Kernel.rand/0 and Kernel.rand/1
Clarify some of the subtleties linked to term ordering in the docs (#5238)
Add documentation: `Enum.random` accepting ranges (#5237)
Update dialyzer tests for OTP-19.1/dialyzer-3.0.2
Update README.md
Polish the example in the docs for Mix.Config.config/3 (#5233)
Add a section about comparison operators in the "Operators" page (#5230)
Add light foreground and background colors to IO.ANSI (#5231)
Tidy up Enum.concat/1,2 tests
Make the docs for Task.Supervisor slightly more clear
Extended test suite for Enum.concat/2 (#5229)
Update CHANGELOG
fix typo (#5223)
change mix cmd to use --app instead of --only (#5220)
Return given value value in Module.put_attribute/3 (#5218)
Improve Calendar docs
Add DateTime.from_naive/2
Augment the Calendar APIs with utc date/time and last_day_of_the_month
Document additional options for String.split/3 (#5217)
Rename varialbe s -> status in Mix.Tasks.Cmd
Properly format :"foo-bar" atoms in diff for keywords and maps
Polish the docs for dependency options in Mix.Tasks.Deps (#5215)
Allow a list of apps to be passed to mix cmd (#5211)
Keep markdown formatting on IO.ANSI.Docs
Polish the documentation for a bunch of Mix.* modules (#5206)
Avoid warnings and tidy up assert_receive timedout message
Explain race condition in assert_receive to user when it happens (#5204)
Remove references to elixir-lang-talk
Ensure take/2 does not consume next element on suspend
Refactor some error messages in OptionParser (#5203)
Improve the i/1 IEx helper for module-like atoms (#5200)
Copy files from source when they're newer than dest (#5194)
Change argument 'val' to 'value' in Map.put/3 (#5198)
Update Logger.metadata/1 documentation (#5158)
Remove deprecated module compile time information (#5196)
Introduce Process.send_after/4 (#5182)
exclude git sparse tests when git < 1.7.4 (#5185)
Replace `b(Dict)` example (#5189)
Correctly use stack name in all commands
Avoid naming conflicts
Ensure lhs of in/2 is expanded only once
Add Kernel.rand/0 and Kernel.rand/1
Specify that the timeout is expressed in milliseconds for increased clarity (#5186)
Use NUL instead of /dev/null on Windows
Correct small inaccuracy in EEx.Engine moduledoc (#5187)
Also store external resources that are not part of the cwd
Produce meaningful warning when with's else clauses have no effect (#5179)
Grammatical improvements to the "Writing Documentation" page (#5180)
Add missing period in .gitignore template
Align multiline when in specs to the standard (#5183)
Minor grammatical improvements to the doctest documentation (#5175)
Update helpers.ex (#5177)
Ignore .fetch in project root (#5174)
Add Guards and Operators to guides
Make the docs for List.delete/2 unambiguous (#5172)
Clean up code around Stream.zip/2
Wrap fn calls in parens in Macro.to_string/1 (#5170)
Polish some code around Stream.zip/2 (#5169)
Add a "Guards" page to the docs (#5167)
Mention the optional function in the docs for Macro.to_string/2 (#5168)
Polish docs for the IEx module
Improve UndefinedFunctionError when using macros without require (#5156)
Don't crash in macro_exported?/3 when dealing with Erlang modules (#5165)
Kill a bunch of trailing whitespace lurking around
Update special_forms.ex (#5162)
Make ExUnit server timeout configurable
Use "In" instead of "Every" in the handle_info/2 example
Expand on the use cases behind handle_info/2
Add example of sending/handling custom messages to GenServer documentation (#5151)
Polish the docs for some helpers in IEx.Helpers
Add example to the docs for the v/1 IEx helper (#5146)
Minor refactoring in Mix.SCM.Git
Improve {Enum, Stream}.map_every/2 description in CHANGELOG
Clarify String.ends_with?/2 docs
Minor grammatical improvements to mix tasks docs (#5147)
No need to provide nil default for defexception fields
Enhance variable names in Stream.Reducers
Update CHANGELOG
Document the new :sparse option for :git
Make Enum.drop/2 to use Stream.Reducers.drop/0
Allow git migration to and from sparse
add git sparse checkout (#5063)
Allow logger to use ansi_color from metadata
Do not mention FunctionClauseError in the docs
Suppress unused variable warnings in Enum
Add a page in the docs about operators (#5142)
fix #5144 (#5145)
Refactor and optimize aggregations over lists
Add `min/2`, `max/2` and `min_max/2` to `Enum` (#5140)
Make sure bad remote call errors have file/line info (#5116)
Support Enum.map_every/3 and Stream.map_every/3 (#5141)
Spelling correction in GenServer reply docs (#5139)
Rename args -> argv in OptionParserTest
Use String.to_existing_atom/1 for option conversion (#5134)
Remove trailing period in error message for missing terminator
Update doc for built-in types
Implements `Integer.mod/2` and `Integer.floor_div/2` (#5117)
Enhancement: negative integer support in `DateTime.from_unix` (#5128)
Tidy up OptionParser
Tidy up trimming of leading & and % chars in IEx.Autocomplete
Resolves issue with autocompletion on structs not working in IEx (#5133)
Remove duplicate parallel compiler tests
Use dialyzer attributes instead of ExUnit exclude tag (#5131)
Remove private from public API
Use the usual default of 30s for "private" servers
Do not re-compile a compiled pattern for String.split/3 (#5127)
Expand h and t variables to full names in List
Improve docs for functions in List
Enhancing error message for token matching failure (#5123)
Base List.delete_at/2 on List.pop_at/3
Introduce List.pop_at/3
Add Elixir Forum to list of help channels (#5121)
Minor grammatical improvements to mix shell docs (#5120)
Standardize test names in ListTest
Remove irrelevant test in ListTest
Add missing is_integer/1 guards in List
Remove trailing period in warning message
Properly splice binaries inside binaries
Omit redundant information if both sides in assertion are exactly equal (#5113)
Add an example in the docs for the i/1 IEx helper (#5111)
Minor grammatical improvements to Mix.Project documentation (#5109)
Do not remove trailing newline in doctests with inspect
Improve docs for :optional option, closes #5107
Tidy up ExUnit.DocTestTest.Haiku
Expand DocTest's RegExp to allow Unicode and Multi-line inside opaque inspect types (#5106)
Correct a link in the docs (#5105)
Minor grammatical improvements to mix documentation (#5102)
mix xref provides "did you mean?" for missing functions (#5098)
Rename do_drop/2 -> drop_list/2 in Enum
Use "amount" instead of "n" to describe amount of values to drop
No need for abs/1 in Enum.drop/2
Synchronize variable name with docs in Enum.slice/3
Tidy up Enum.slice/2,3 tests for ranges, improve record test formatting
Revise Enum.slice/2,3 implementation
Do not consider remote typespecs as a compile-time dependency (#5093)
Always include the compiled file source in manifests
Make an example for Enum.drop_while/2 clearer (#5092)
Document that the :consolidate_protocols option is true by default (#5091)
Properly check for earlier Erlang versions, closes #5090
Use :stdio instead of group_leader() as default device (#5089)
Do not wait for self in parallel compiler (#5086)
use positive in @doc of Enum.sort/2 (#5085)
Optimize flat_map, closes #5082
Simplify when condition in Enum.slice/3 helper function
Add example difference between :one_for_one and :simple_one_for_one (#5081)
Support interrupting IEx evaluation (#5080)
Update supervisor.ex
Use unique names in via tests
Cleanup lib/mix/lib/mix/compilers/elixir.ex (#5075)
Add MIX_REBAR(3) for overriding local rebar
Raise on incorrect digits in Integer.undigits/2 (#5068)
Add missing is_function guards to stdlib (#5066)
Mark struct update syntax as generated (#5067)
Improve docs for Process.exit/2
Avoid "just" in instructions
Expand message for mix deps.unlock (#5062)
Tidy up enum docs, specs and optimizations
Enum.split_while/2: Improve guard (#5060)
Update :test_started to :test_finished events (#5059)
Optimize  Enum.split_with/2 for lists (#5057)
Eliminate "if" warning (#5055)
{Enum, Stream}.{take_every, drop_every}/2 little improvements (#5054)
Revert "Deprecate Dict, HashDict, and HashSet (#5044)"
Emit compilation warnings for HashDict, HashSet and Dict
Be more strict with the type of @moduledoc, @typedoc, and @doc (#5051)
Add tests for :via on Supervisor and GenServer
mix xref: loadpaths before compile (#5050)
Improve an example in the docs for Integer.digits/2 (#5048)
Deprecate Dict, HashDict, and HashSet (#5044)
Clarify comment in the supervisor example included in the Supervisor moduledoc. (#5041)
Deprecate some functions here and there for v1.4 (#5039)
Remove tests for the Behaviour module
Deprecated the Behaviour module and its macros (#5037)
Rename a variable in OptionParser to make its type clearer (#5038)
Don't process -pr in a special way in mix run and mix profile.fprof (#5036)
Expand multi-letter aliases in OptionParser (#5025)
Document :sys module and give example on how to use it (#5016)
Enum slice docs + fix typespec (#5032)
SCM should override manager for rebar children
Show full path to rebar.config
Naming inconsistencies in Enum.group_by/3 (#5031)
Document and test String.replace_prefix|suffix with empty match
Raise helpful error if a string is used to name a GenServer/Supervisor (#5027)
Stadardize function name: dirsep => dir_sep (#5029)
Break =~ doc into multiple lines
Enum.slice/2 and Emum.slice/3 rewrite (#5017)
Don't escape record literals on keyword conversion (#5021)
Remove accidental file
Do not unload deps for MIX_NO_DEPS=1
Docs and typespec for Kernel.get_and_update_in/3 now mention :pop (#5018)
Simplify type splicing for binaries
Add the :label option to IO.inspect/2 (#5010)
Optimize Enum.fetch/2 for lists with negative index (#5014)
Use System.delete_env/1 to unset variable
Tidy up docs for ANSI sequences
Remove redundant parameter (#5015)
Suppress unused variable warnings in Enum.find_index/2
Change "data" to "bytes" in IO.binread/2 doc
Document and test MIX_NO_DEPS
Always skip deps with MIX_NO_DEPS
Remove typo (#5012)
Make sure to return nil if enumerable halts
Remove `local` field from type of `Macro.Env.t` (#5008)
Make Enum.sort/2 example use a stable sort function, to avoid confusion (#5007)
Clarify optional callbacks documentation (#5000)
Allow 0 as URI scheme default port (#5001)
Give helpful error message if a string is used to name a GenServer/GenEvent/Supervisor (#4994)
Rename Enum.partition/2 to Enum.split_with/2 (#4997)
Add ANSI escape sequence 27 for turning off reverse video (#4995)
Add MIX_NO_DEPS env var for disabling dep loading
Improve error for bad return value in Keyword.get_and_update(!)/3 (#4992)
:nil –> nil
Improve error message on bad return in Map.get_and_update(!)/3 (#4965)
Typespec.md: spell it "two-element tuple" (#4988)
Move range matching to its own clause in Enum.fetch/2
Optimize Enum.fetch/2 for negative and out of bound indexes (#4950)
Mention offset arg. in Enum.with_index/2 and Stream.with_index/2 docs (#4985)
Enum test file: Correct/move range related tests (#4987)
Correct Enum.slice/2 doc (#4986)
Standardize `mix escript` task's shortdoc (#4984)
Using ~r{} instread ~r// to fix syntax highlight on Regex.split/3's doc example (#4978)
Update Enum.index/0 type to be `integer` (#4979)
Enum: Improve function guards in drop/2, drop_every/2, take_every/2 (#4980)
Use 18.2 instead of 18.2.1
Run Travis against every supported minor Erlang version (#4981)
Typo fix (#4982)
Enhance in/2 to support |/2 (#4973)
Add missing is_function/2 guards in Map
Rewrite Enum.into/2,3 with empty map into Map.new/1,2
Improve code around Enum.into/2,3 and Map.new/1,2
Run travis tests against Erlang 19 (#4972)
Task.await/1 returns the reply of a task (#4971)
Move Enum.reverse/1,2 tests for ranges and maps to the proper place
Add parenthesis on Keyword doc example to match rest of the code (#4969)
Polish the docs for Kernel.use/2 (#4964)
Rewrite Enum.reverse/1 to Enum.reverse/2 for non-lists
Tidy up Access docs
Optimize a couple of functions in Mix.Utils
Simplify Enum.reverse/1,2 definitions
Add tests for Enum.reverse/1, Enum.reverse/2 and Enum.to_list/1 (#4962)
Add typespecs for Keyword.{split/2, take/2, drop/2, to_list/1} (#4966)
Force defmodule to not be tail-call optimized (#4958)
Improve clarity of Enum.reverse/1 (#4961)
The else clause in with supports guards (#4960)
Enum.fetch/2: Optimization for ranges (#4951)
Improve error message when importing undefined or private function (#4946)
Unify Access docs
Add docs for Access.pop() (#4948)
Add support for NO_PROXY to Mix.Utils.read_path (#4936)
Make batch style more consistent (#4944)
Polish the docs for the {} special form
Polish the docs for the %{} special form (#4947)
Polish the docs for the Access behaviour
Add specs for String.replace_* functions (#4945)
detect terminal, detect ANSI support (#4942)
Clearer "no process" error (#4925)
Replace lhs/rhs with left/right in ExUnit.Formatter (#4940)
Adds documentation for Access behaviour Callbacks (#4939)
Correct code formatting on exception in doctest
Improve error messages for :only conflict
Optimize Enum.random/1, Enum.take_random/2 for ranges (#4927)
Remove unnecessary pipeline
Add Stream.uniq_by/2 and deprecate Stream.uniq/2 (#4934)
Simplify guards in Integer.do_digits/3
add filter option to deps.unlock (#4932)
Refactor handling of the --parallel-require CLI option
mix test --listen-on-stdin will no longer exit on failure (#4930)
Simplify --parallel-require option rewriting
Integer.digits/2 & Integer.undigits changes (#4868)
Ensure missing protocol dependencies are discarded, closes #4842
Polish and fix docs for OptionParser (#4924)
Deprecate -pr CLI option in Mix.Tasks.Run (#4923)
Remove defmacrop support in leftover code in elixir_def_overridable (#4922)
Actually hide to_char_list/1
Make port send data as binary in Mix tests
mix test --listen-on-stdin (#4921)
Correct multiline guard definitions in Enum
Hexdocs -> HexDocs (#4917)
Disable --warnings-as-errors for deps
Reword some docs in String because of an Earmark bug
Reenable dialyzer reaise test
Allow custom fields in Exception.t typespec
keep tokenizer's column counts in sync for numbers with _ characters
Ensure Access.at/1 properly pop list elements, closes #4911
Add IS_DEP=1 env var when compiling make deps
Polish the docs for the Record module (#4908)
Correct a bunch of adjectives in the ExUnit code (#4905)
Add Hexdocs link to generated new project README (#4906)
Do not run remote converger if no deps will use it
Remove function clause that will never match
Do not attempt to load modules that have not been required, closes #4900
Default to rebar3
Compress archive files
Make Mix.Tasks.Do.gather_commands/3 private
Ensure structs can be expanded in dynamic module names, closes #4894
Traverse dependnecies when consolidate umbrella protocols, closes #4842
Use underscore in functions and variables (#4885)
Do not load modules for xref purposes, instead use BEAM info
Revert mix do to enforce space after comma (#4893)
Use :proc_lib start instead of custom start logic
Enhance difference highlighting for proper lists
Generalize difference highlighting for keywords
Rename keyword? –> keywords? in ExUnit.Diff
Support module attributes in remote types (#4891)
Ensure we don't emit warnings when cleaning wildcards
Improve doctest failure messages for exception assertions (#4889)
Add @specs to Enum.reduce_while/3
Simplify argument name definition in Calendar.to_string/1 callback
Improve an assertion in MacroTest
Rename filter –> predicate
Improve test for application properties validation (#4886)
Allow to set BINDIR for binaries and SHARE_PREFIX for manpages (#4887)
Properly spell PID (#4883)
Spell properly BEAM (#4882)
Remove unused import in kernel/overridable_test.exs (#4884)
Add missing double quotes to doc_test ExUnit.AssertionError (#4881)
Name variables in callbacks (#4880)
Update CHANGELOG
Deprecate import_file/2
Add import_file_if_available, closes #4878
Deprecate support for making private functions overridable (#4872)
Add IEx.Helpers.import_if_available/2 (#4877)
Generate error for no pid given to Genserver.reply (#4876)
Validate application properties before altering them
Stop appending a trailing dot when autocompleting modules in IEx. (#4863)
Raise an ArgumentError when overriding an undefined function (#4870)
Enum.take_random/2: Update docs and optipmize (#4869)
Raise an error when trying to make private macros overridable (#4856)
Add missing backquote in Module docs (#4866)
String.splitter/3: add doctest example (#4867)
Check for nil doc in proper place
Skip/fix tests on OTP 19 (#4855)
Refactor an assertion in Kernel.OverridableTest
Clarify Enum.group_by/3 deprecation message (#4852)
Move TODO to Erlang 19 umbrella issue #4617
Simplify function kind check in elixir_def_overridable.erl
Support macros with defoverridable/super (#4848)
deps.check -> deps.loadpaths
Reenable deps.check on loadpaths dry-run
Explicitly announce structs
Make iex c helper compile in memory by default, closes #4836 (#4843)
Improve with/else error message on invalid form (#4847)
Add link to security mailing list
Do not load mix.exs file for rebar deps
Detect rebar.lock file as rebar3 manager
Check for proper Makefile when compiling on Windows, closes #4841
Do not expect stacktraces to be always present, closes #4840
Add example escript module (#4838)
Update docs for c/1 and c/2
Improve docs around Grapheme Cluster
Improve lexical tracker test (#4835)
Add warning for an invalid path on deps.clean task (#4831)
Suppress warnings in Map doctest
Consider variables are on different lines in assert_receive
Do not leak external variables used in guards in assert_receive
Add docs for the "set" datatype in the MapSet module (#4825)
Clarify some confusing docs for the === operator (#4823)
Ensure sync tests don't overlap when the timeout occurs
Add docs for the "tuple" data type to the Tuple module (#4821)
Document the "map" data type in the Map module (#4820)
Ensure we get test process reply when it's finished in time
Remove some trailing whitespace in the List module
Expose schedulers_online and otp_release information
Mention improper lists too
Improve the docs for lists
Add more is_function/2 guards to functions in Enum (#4817)
Handle stracktrace retrieval for exited process properly
Add timeout handling to on_exit callback in ExUnit
more mix xref doc improvements (#4818)
Improve mix xref docs
mix xref graph (#4811)
Simplify code to remove warning: unsafe in 'case' (#4816)
Ensure variables in function clauses are not reused, closes #4815
Remove elixir_counter in favor of unique_integer
Ensure entries are sorted to avoid non-determinism in compilation, closes #4814
`yecc` instead of `yeec` (#4813)
Check for recursive imports in config files. (#4809)
Trim trailing newline in "mix new" output
Do not use deprecated String.strip
mix xref command-style (#4808)
Move test for deps.compile --force to the proper place
Make sure struct expansion results in a remote dispatch (#4807)
Make sure with/1 does not leak variables to else (#4804)
Improve Kernel.LexicalTracker module docs (#4803)
mix archive.install from scm (#4797)
Ensure we compare against the loaded project
Disable relative paths when loading mix.exs, closes #4465
Raise some more informative errors in the Map module
Add some guards to functions in the Map module
Polish the docs in the Map module
Include with when warning about unsafe variables (#4800)
Clarify Logger docs
Simplify assertions in kernel/errors_test.exs
Get rid of do_var! helper function in Kernel
Standardize use of "variable" word in warnings and errors
Emit warning when variable is being expanded to function call (#3517)
Add mix escript.install from SCM (#4742)
Calculate beam files only when writing manifest data
More informative message for DOT tree generation (#4791)
Clean deps when deps.compile is run with --force (#4780)
Add a is_map/1 guard to Map.take/2, Map.drop/2, and Map.split/2 (#4796)
Ensure conflict with umbrella children are shown, closes #4792
Do not silence unused variable warnings in assert_receive
Clarify docs: mix task receives arguments as a list (#4790)
Start v1.4.0-dev
Release v1.3.0-rc.1
Only invoke callback if file was on queue
Do not allow loops in dot graph formats
Option for `mix app.tree` and `mix deps.tree` to be output as DOT file (#4764)
Assert the ISO calendar in DateTime.to_unix/2
Correct example and code formatting of DateTime.to_unix/2
Increase long compilation thredshold to 10
Use 0.1.0 as default first version in `mix new` task (#4788)
adds: DateTime.to_unix can accept non-UTC DateTime structs
Enhance difference highlighting for keywords (#4785)
Only call compile_path when we effectively need it mix test, closes #4783
Add a "Behaviours" page to the documentation (#4782)
Mark variables captured by modules as generated
Use proper case for proper nouns and acronyms
Remove unnecessary string interpolation
Simplify manifest reading in Mix.Compilers.Test
Simplify compiler heuristic
Clean up the "Typespecs" page in the documentation
Add a reference to String.to_integer in the doc (#4781)
Use read timestamp in both Erlang and Elixir compilers
Store only filename of beam files in elixir manifest (#4767)
Clean up compiler checks
use ETF for elixir_scm and protocols manifests (#4779)
Nuke consolidated protocols when changing Elixir versions
Add code comments for compiler heuristic
Use a more explicit pdict key
Use heuristic for compiler errors (#4778)
Do not mark cases as loaded after failures, closes #4771
Keep the full list of modules being defined
Update CHANGELOG and docs
Enum.take_random/2: Correct typespec, guards and optimize (#4765)
Make microsecond fields for Time, NaiveDateTime, DateTime default to (#4775)
Remove unnecessary newlines
ApplicationTest fails under Windows (#4761)
More explicitly use the term annotation throughout
Propagate generated: true in Elixir definitions
Use flush/0 instead of GenEvent.which_handlers(:error_logger) in (#4762)
Update TODOs and CHANGELOG
Provide information about how to force install hex and rebar (#4758)
Remove reference to iso8601 T separator for Date (#4756)
Correct use of indefinite article a/an (#4752)
Use www.erlang.org instead of erlang.org in the docs (#4749)
Remove backticks in message to stdout/stderr (#4751)
Add a bunch of missing backticks to the docs (#4750)
Small fixes in comments and documentation (#4744)
Correct some docs to use the proper verb conjugation (#4746)
Make casing consistent in error messages (#4745)
Remove spaces between "fn" and "(" (#4747)
Convert hex literals to uppercase (#4748)
Optimize range construction with integer literals
Optimize in/2 with empty list only for match/guard context
Improve warnings for escript.install, closes #4735
Unpack archives after installation, closes #4733
Mention @optional_callbacks in the documentation for Module (#4739)
Add docs for `Enum.chunk/3` with count greater than number of elements (#4731)
Improve docs for max_buffer
Use explicit variables instead of binding()
Buffer console logger backend (#4728)
mix profile.fprof --warmup (#4729)
Allocate single binary in URI.percent/2
Always optimize in/2 for literals
Do not require mix project in profile.fprof
Update Enum definitions and tests (#4721)
Update CHANGELOG.md (#4726)
Convert to binary while still on client
Better logger for console with direct access (#4720)
Also fix naive date time example
Switch date sigil in Changelog to correct YYYY-MM-DD (#4722)
Release v1.3.0-rc.0
Clarify Enum.chunk/4 behavior with partial chunks
Rename bundle/2 to describe/2
Implement Access.at/1 (#4719)
Replace *just with pad_* calls and optimize around
Replace *strip with trim* calls and optimize around
Make one of the code examples in the changelog clearer
Include abbreviation in DateTime.to_string/1
Improve ISO8601 offset parsing
Better names for sample type definitions in Kernel.TypespecTest
Improve format helper definition in IO.ANSI
Update CHANGELOG.md (#4717)
Execute test runner in a separate process instead of the parallel require
Only compute warnings_as_errors if necessary
Update CHANGELOG
Refactor things here and there in the URI module (#4714)
Spelling, grammar and missing negation in Calendar docs (#4713)
Improve edit script construction for root level strings
Add specs to the URI module (#4711)
Remove unused and incorrect type Stream.t
Change the order of keys in edit script for map
Improve map keys handling in ExUnit.Diff
Polish the docs for the URI module (#4710)
Handle empty data structures gracefully in ExUnit.Diff
Make separated difference highlighting in ExUnit
Enhance the ExUnit.AssertionError message (#4709)
Bring back the correct doc for ExUnit setup_all callback (#4708)
Add missing todo to ExUnit callback return
Use GenServer over :gen_server as the behaviour for GenServers
Add an example of inner difference for large strings
Add the format_status/2 optional callback to GenServer
Add support for the @optional_callbacks behaviour attribute (#4705)
Remove duplicated tests
Update CHANGELOG
Add support for bundles in ExUnit
Allow named setups in ExUnit
Correct typespec group names (#4706)
Allow units in any base in DateTime.utc_now
Update CHANGELOG
mix test --stale (#4696)
Add some extra tests for take_every and drop_every (#4702)
Replace last remains of char_list with charlist (#4701)
Record.is_record/2: fixes bug when dealing with non-record tuples (#4697)
Use longer strings difference example for whitespace highlighting
Show whitespace in ExUnit diffs (#4689)
Correct Time.from_iso8601! typespec (#4699)
Implement Enum.drop_every and Stream.drop_every (#4698)
Add empty string support to String.contains?/ends_with?/starts_with?
Remove incorrect reference to arrays (#4694)
Clarify the use of `async: true` (#4692)
Correct "fullfilled" typo in a private function name (#4693)
Clarify args in docs for `apply` (#4691)
Update CHANGELOG
Break apart parallel require and compiler tests
Add each_module callback to Kernel.ParallelRequire (#4690)
Raise nice error messages for failed access
Also add is_tuple data checks
Improve usafe of the word field throughout access and structs
Improve docs for Access
Mention new accessors in get_and_update_in
Add @enforce_keys to defstruct, defexception and friends
Keep brackets in the authority of URIs for IPv6 hosts
Add struct expansion via __struct__/1
Use square brackets for IPv6 in URI.to_string/1
Add basic accessors, closes #4009
Store precision alongside microseconds, closes #4681
Small wording fix to String.split/3 documentation (#4687)
Add `mix xref --callers M.f/a` (#4683)
Bump the number of max cases to double of schedulers to support both IO and CPU bound tests
Add support for OTP 19 map typespecs
Do not emit diff for strings with bag difference > 0.6
Use tail recursive implementations for zip, take and take_while
Add Calendar.date/3 and DateTime.utc_now/0
Use :calendar in to_unix and from_unix implementation
Add to_unix and from_unix to DateTime
Add to_time and to_date to NaiveDateTime
Add to_time, to_date and to_naive to DateTime
Implement String.Chars and Inspect protocols
Unify return values from to_* functions
Add ~N, ~D and ~T sigils
Add bang variants to from_erl and from_iso8601
Add conversion to_string and to_iso8601
Restrict years to the 0..9999 range in Calendar.ISO
Add mentions to filter and register, closes #4678
Add from_iso8601 parsing
Tidy up calendar docs and specs
Get rid of Kernel.Utils.defexception/1, and make small improvements
Add to_erl/from_erl conversions to Time/Date/NaiveDateTime (#4675)
Simplify leap year implementation
Support leap seconds
Add Date.new, Time.new and NaiveDateTime.new
Warn on missing and unknown fields in raise/2, closes #3657
Update CHANGELOG
Error out when an app depends on itself in umbrella projects (#4667)
Use needs_xref? name though
Remove new line after "Found at" and enforce one mode
Adds mix_project_config[:xref][:exclude] for Xref (#4665)
Export read_manifest instead of parse_manifest
use `:erlang.term_to_binary` for elixir compiler manifest storage (#4664)
Use correct code style /cc @lexmag
Change grouped warning format, split test, and rename needs_xref (#4660)
Store runtime and compile directly on lexical tracker state
Add --warnings and --unreachable flags to mix xref
Improve spelling of private function name (#4658)
Warn for remote calls that cannot be resolved at compile time (#4639)
Check options for *.build, new, profile.*, run and test tasks
Convert OptionParser.ParseError into Mix.Error
Add proper error for missing argument
InvalidOptionError becomes ParseError
Allow doc tests to match against multi line exceptions
Add parse!/2 and parse_head!/2 to OptionParser
Tidy up OptionParser code and docs
Remove C from no_mixfile fixtures
improve option_parser.ex to support counter :honeybee: (#4412)
Get rid of if_value/3 helper function in URI
Tidy up URI.merge/2
Support custom hex package name from rebar3 deps
Do not print colors in rebar3 output
Polish the docs for the functions (not callbacks) in GenServer (#4652) (#4654)
Polish the docs for the functions (not callbacks) in GenServer (#4652)
Polish the docs for Supervisor and Supervisor.Spec (#4648)
URI.merge/2 (#4644)
Update docs for LexicalTracker (#4653)
Disable overriding the async tag (#4649)
Replace ets table in Kernel.LexicalTracker with a map (#4651)
Unify sources and files records
mix elixir compiler manifest: separate file and module (#4647)
Store function definitions and clauses in the same table
Do not sort items before compilation to allow user configuration
Use a map to pass around in Kernel.ParallelCompiler.spawn_compilers (#4643)
Add group_by/3 with a value fun
Windows: batch file improvements (#4642)
Update CHANGELOG and docs
Use the shortest possible representation when printing floats, closes #3413
Always add an environment and print it alongside the dep
Tidy up LexicalTracker
Minor corrections to Writing Documentation
Only overridde only if child did not specify it
Tidy up paragraph and move from appear to listed
Do not include requirement if it is nil
Reword the section about hiding docs in "Writing Documentation" (#4634)
Detect cousin conflict for optional dependencies, closes #4636
Do not apply overrides for rebar2 deps
Use ExUnit.start in capture_log example
Add capture log example to one of each
Make ExUnit.Case.register_test part of ExUnit.Case API
Correct calendar typo
Move check outside of quoted expression
Relies only on tags for specifying the type
Test noun customization (#4635)
Improve docs for maps
minor fixes in "Writing Documentation" [ci skip] (#4632)
Make recompile and r as debugging/development helpers
Simplify test name under --trace
Rephrase some documentation Enum.max* and Enum.min*
Remove unused ExUnit attribute
Ensure cases are always loaded and that errors are logged once
Start running tests as cases are loaded
Improve unsafe vars warning
Correct IO.warn/1,2 examples
Improve warning output (#4631)
Add refute back to warning test
Improve ambiguous pipe message
Unify warning calls
No longer announce unicode
Add a --long-compilation-threshold option to "mix compile" (#4628)
Enrich tests for alias, import and require return
Add assertions that match on the imported value
Make lexicals (alias, import and require) return the given module(s) instead of nil (#4629)
Print number of files to be compiled
Rename :each_timeout and :timeout compiler options (#4627)
Use --verbose flag in more tests
Use --verbose in tests
Add verbose option throughout compilers
use timeout and each_timeout
Add a callback for long-to-compile files in Kernel.ParallelCompiler (#4626)
Improve elixirc options and use upcoming waiting mode
Style fix for try ... after docs (#4625)
Make IOTest sync since we're capturing stderr now
Tidy up IO.warn/1,2
Improve guards definition in {Enum,Stream}.chunk/3,4
Define Application as a behaviour and document its callbacks (#4621)
Do not restart apps and compile protocols on recompile/0
Friendly error message for duplicate ExUnit test names (#4613)
Correct ExUnit.Case typo (#4620)
IO.warn to unify warnings (#4615)
File.open/2: complete list of modes (#4600)
Correct Inspect opt value (#4601)
Clarify that flat_map only flattens one level deep (#4610)
Replace "thing" arg with more appropriate "term" arg (#4607)
Keep naming it enumerable for documentation consistency (#4611)
Ensure args 2 and 3 to Enum,Stream.chunk/3,4 are integers (#4614)
Document the blocking nature of timer/interval
Add responsibilities for proposing features
Add section about `after` to special forms docs. (#4599)
Remove 'is_integer/1' from guard when is used in combination with 'in/2'
Do not emit warning when "with" clause always matches (#4597)
Integers: Tests added
Integer: Polish docs, Improve guards and Optimize functions
Ensure .app file is written with UTF-8 encoding, closes #4578
Fall-back functions: Kernel.to_char_list/1 and List.Chars.to_char_list/1 protocol
Limit execution time for difference formatting
Use bag distance to pre-filter non-similar strings in ExUnit.Diff
Map: correct arg name and add backticks (#4591)
Replace 'char_list' and 'char list' with 'charlist'
Polish the docs for the Logger module (#4589)
Range.t typespec: args are integers
Range.range?/1: Checks for valid ranges
Standardize unicode and friends (#4569)
Improve guards definition for IO stream functions
Split command in 2 and put it back in the traversing list
Do not force spaces between arguments in mix do (#4577)
Always release waiting children regardless of type
Improve Supervisor docs
Add documentation for c/1 IEx helper (#4576)
Clean up mix deps.clean
Make prune part of the public API in the formatter
deps.clean should not remove source of local deps (#4575)
Suppress unused var warnings
No need for InErrors purging in kernel_test.exs
Ensure poorly formatted chardata is pruned in Logger watcher
Improve summary for StringIO
Clean up logger
Add a couple of tests for errors with in/2 in guards
Add a nicer error message for in/2 with a non-literal range in guard
IO: Several improvements (#4560)
Update README.md
Stringify truncated function data in Logger (#4562)
String.split/3: parts option should be pos_integer (#4564)
Correct CHANGELOG
Consider improper lists in ExUnit.Diff.format/3 (#4552)
Add entry about Mix and umbrella applications
Update CHANGELOG
Show version that caused diverging requirements
Remove buggy --elixirc-paths
String.split/3: part opt should be pos_integer (#4557)
Do not change underscore behaviour in Macro
Remove String module reference inside replace_{leading,trailing}/3
Optimize String.replace_{leading,trailing}/3
Hide String.{strip,lstrip,rstrip,ljust,rjust} functions
Introduce String.trim{,_leading,_trailing}/2
Introduce String.pad_{leading,trailing}/3
Remove the use of the word `pad` from chunk
Improve docs for reporting tags
Ensure multi does not raise when calculating message
Formmating: Add white space around vertical bar (#4507)
Make Mix projects definitions consistent across all tests
Use not/1 instead of !/1 with a boolean check
Change documentation for some Calendar fields. (#4551)
Return explicit error if escript main_module target is undefined (#4550)
Correct byte_size/1 definition to use 'bitstring' instead of 'binary' (#4549)
Use consistent spacing in code snippet. (#4547)
Add more information to Macro.camelize/underscore functions
Eliminate spaces in bitstring definitions (#4542)
Adjust a String code example (#4541)
Move named arguments paragraph
Update Typespecs doc page to mention argument/element naming.
Add sigil w doctest (#4534)
Use custom domain for hex.pm repo
Formatting: add white space after comma (#4491)
Add more tests for sigil `~w` interpolation behaviour (#4532)
Add a note about `uniq/1` to `dedup/1` (#4531)
Add tests for underscores in records
Support for Erlang's #rec{_ = '_' } on match and update (#4523)
Also support :pop on get_and_update!
Reduce noop cost for compile.erlang
fix(IEx.pry/1): remove unreachable code (#4525)
Mix error messages should be capitalized
Make links to Elixir Core mailing list more prominent
Improve docs for pipe
Use data[key] instead of foo[bar] in description
Improve docs for implementing Access
Document :elixir option in Mix configuration
Cache loaded dependencies in Mix for performance
Annotate --elixirc-paths to be removed
Ensure we prune load paths even when build_path is set
Do not assume @impl is a list, closes #4519
Improve escript check and error message
Check the file is an actual escript before writing to disk (#4515)
Shutdown supervised task if caller dead
Move difference formatting functionality to ExUnit.Diff
Updated documentation for delete/2 of MapSet (#4516)
Enhance difference highlighting for tuples (#4505)
Also purge modules on outdated manifest
Only traverse beams if manifest was updated
Do not build structs if not necessary
Integrate non-fetchable (path) dependencies into compilers
Added more tests in GenServer.call/3 (#4513)
Migrate from previous manifest versions
Only recompile empty files if they changed
Improve test for 'mix --version'
Raise error message if you try to GenServer.call/3 yourself (#4512)
docs(Enum.partition/2): fix "enumerables" -> "lists" (#4514)
Improve calling self message
Raise nice error message if you try to GenServer.call/3 from yourself
Add more test cases to try, improve error message
Inspect difference for strings
Use :extra_info color for ExUnit.AssertionError fields formatting
Enhance difference highlighting for lists
Bring other activities closer to the description of the official mediums
Few improvements to EEx docs (#4494)
Improve docs for Mix.Compilers.{Erlang, Elixir} (#4495)
Make error messages have no trailing period
Enum.sum/2: Simplified formula for ranges
Enhance difference highlighting for numbers
Add a user friendly error for merge conflicts on mix.lock
Polish here and there in the System module
Add some more detail to System.cmd arguments documentation.
native -> native
Normalize and document time and time units
Add difference highlighting examples
Do not show the difference for non-printable strings
Show matched elements in maps difference as "..."
Make ExUnit.Formatter.format_diff/3 public and add tests for it
Display difference for structs correctly
More helpful deprecation warning for piping into unary operator.
Display difference for keyword-style maps properly
Make maps difference recursive
Add its own difference logic for maps
Add difference highlighting to ExUnit
Introduce String.myers_difference/2
Add the System.time_unit/0 type and document it
Handle chars literals in the parser for better syntax errors
Handle chars literals in the parser for better syntax errors
Add test coverage to String.Chars implementations
Define callbacks for Supervisor behaviour
Simplify completion test for underscored functions
Improve number validation in OptionParser
Add test coverage to EEx
Spell out our deprecation policy
Update TODOs
Allow OptionParser to parse negative numbers
Improve error stacktrace in Kernel.SpecialForms
Include default implementation in docs
Add test coverage to for and capture
perhaps -> did you mean
Alter UndefinedFunctionError message wording
Hint function may be private if not available
Removed unused variable
Use proper indentation on GenServer docs
Allows ArithmeticError, Enum.OutOfBoundsError and Enum.EmptyError to be raised with a custom message.
Update bitwise.ex
Show the full call when calling a function inside a match
Add test coverage and examples to Enum module
Add System.os_time/0,1
Rename microsecond to micro_second to align with System time units
Improve merge exception texts inside exunit callbacks
Purge Erlang modules on recompilation
Include archive.check inside deps.check
Add tests for archive check
Ensure mix deps.compile --include-children recurs on root dep
Add :archives option to Mix.Project
Add deps.precompile hook and --include-children option
Prune :restarting entries from Task.Supervisor.children/1
Handle non-called anonymous functions in Macro.pipe/3
Update map.ex
Allow to pass :infinity to Logger.Utils.truncate.
Add some comments to the Logger module
Suppress unused var warnings when removing Logger macros from the AST
Use parens consistently in some function calls in the IO module
Remove trailing whitespace in a bunch of files
Add final newlines to a bunch of files
Add coverage to URI module tests
Error out when passing :__aliases__ to Macro.pipe/3
Fold decomposition recursions at compile time
Do not reorder starting classes
Handle compositios with non-zero combining class
More optimizations and improvements to normalization
Make decomposition recursive and consider exclusion list
Use combining_classes from UnicodeData
Rely only on UnicodeData for composition/decomposition
Add more docs to Macro.unpipe/1
Add coverage/examples to Float
Polish the docs for functions in StringIO
Add coverage to private function Version.to_matchable/2
Simplify colorizing in ExUnit.CLIFormatter
Ensure String.jaro_distance/2 works on graphemes
Correct variable name
Spelling correction
Resolve dialyzer warnings: Function checkout/1 has no local return Function raise/1 only terminates with explicit exception
Resolve Dialyze Warning: Function only terminates with explicit exception
Add `Version.parse!/1`
Do not store file information in def with name unquote
Actualize comment about check for Module in at (@) macro
Make @doc, @doc(value) and get_attribute/2, put_attribute/3 consistent
Improve Access related docs
Add a TODO for HEX_CDN note
MapSet Optimizations
Deprecate use of pipe with unary operators.
Deprecate HEX_CDN in favor of HEX_MIRROR
Move Enum.sum/1 with ranges test to the proper place
Faster implementation of Enum.sum for Ranges
Use https to hex.pm repo
Remove reference to old `Inspect.Opts.new`
Add a note about line filter for a file with multiple test cases
Allow dots in the metadata info in Version.parse/1
Minor URIConfig refactor
Make it explicit the range is also at compile time
Clean up unicode range parsing
Add the keyword/0 and keyword/1 built-in types
Add notes about the complexity of ++ and --
Update ISSUE_TEMPLATE.md
Update docs and CHANGELOG
Make app_dir accept a list as path argument.
bullet point - documenting functions with multiple clauses.
Add --logger-otp and --logger-sasl to the command-line args
Do not bypass warnings_as_errors on Calendar warning
Add Mix.Task.rerun/1,2
Make arguments and docs more clear for assert_receive, assert_received, refute_receive, and refute_received
Update Unicode to 8.0.0 (equivalent pending)
Avoid regular expressions
New definition of whitespace & breakable whitespace
Introduce calendar types
IEx pid/1 helper to create pid from string
Added a few backticks around the names of errors that didn't have them
Clarify ExUnit async docs
Improve ~w,W split_words and add tests for whitespace escaping
Validate modifies in ~w,W even for empty input
need colon to make gen_event atom
Use fastly as Hex CDN
Do not display internal tasks in mix help
Enable rebar3 manager by default
Tidy up error messages for application properties
Improve error message when missing :version in the project definition
Implement functions in Kernel.SpecialForms so we don't special case them in IEx
Improve sections on writing documentation
String.split/1 docs - clarify treat multiple whitespace as single
Use "key-value pairs" instead of "key-values"
Replace `quote do:` one-liners with quote do...end
Correct n-element terminology in tuples
replace "of the form" with "in the form of"
Macro.validate/1: improve docs for return values, and add examples
Improve naming in ExUnit.DocTestTest
Add integer support for Macro.underscore/1
Add integer support for Macro.camelize/1
Clarify docs for Process.register/2 and Process.unregister/1
return example for location: :keep option in quote/2
Correct tense in verbs
Improve tests for unused import with module
Many small improvements to Process docs
Added a note about dialyzer not using map pair type information
Minor correction to URI.encode_query/1's doc block
Improved docs for Process -Added backticks appropriately in docs for Process.exit -Mentioned default behaviour for Process.get
Spell behaviour consistently
explain that timeout in receive/after block can be :infinity because variable values are allowed
clarify Process.cancel_timer docs
Handle rebar3 sub-dependencies without a requirement
improve mix help test (--seed) description
Remove mention to dict in ExUnit.Callbacks example
clean up duplicated code in Task.Supervisor.async and Task.Supervisor.async_nolink
mention that Task.start/1 can isolate a Task without needing Supervisor
Improve rebar handling on Windows, closes #4345
Add TODOs to supevisor typespecs
Remove some dead code in Mix.Dep
Do not expect every year to be bissextile.
Track {module, function, arity} imports and warn on unused ones
Ensure docs can be read from disk in autocomplete test
Clean up autocomplete reload test
Update iex autocomplete to show new functions in reloaded modules.
Generate .bat files for escripts on Windows
Pass deps to remote converger in defined order
Add escape for closing brackets
Optimize into: %{}
Update reference to Kernel.Typespec
Correct formatting
Update the docs for "for" and "with" to showcase guards
Mention protocol deriving in `defprotocol/2`
Do not change MIX_HOME in escript tests, closes #4332
Do not local install into subdirectories
Create full path when local installing
Clean up archive implementation
Consider :allow_pre for all operators
Explicitly compile requirements
Clean up git scm and add a new tag based test
Refer to the revision in mix.exs when updating deps
Remove an outdated FIXME commit
Remove a redundant message send in a mix archive test
Unify the common code involved in installing archives and escripts
Rename Mix.Local.Utils to Mix.Local.Installer
Rewrite escript.install using Mix.Utils.read_path instead of copy_path!
Add tests for the new escript tasks
Extract common code for archive- and escript-related tasks
Check the file type when building the list of installed escripts
Check whether the installed escript is in the PATH after installation
Implement 'mix escript.install' task that works similarly to 'mix archive.install'
Implement 'mix escript.uninstall' task
Implement 'mix escript' task
Compile requirement matchspecs
Restrict allow_pre to ~>
Remove unnecessary quoting of atoms
Add option for disallowing pre-releases
Refactor requirement => matchspec
Improve local.rebar docs
Also mention erlang-dev
Use && in mix exception check as it could be plain exception there
docs(Macro): clarify difference between sigils
Print stacktraces when MIX_DEBUG=1
Update ISSUE_TEMPLATE.md
Update ISSUE_TEMPLATE.md
fix typo in def v(n \ -1) documentation
Use new issues template
Update CHANGELOG
Tidy up UndefinedFunctionError suggestions implementation
Handle cover options only when needed
Better naming in Base
Support canonical URLs
Simplify padding rules
Add option to omit / ignore padding
Support --raise in mix test, closes #4318
Adds nl to IEx.Helpers
Beginning some changes to improve compilation error information.
Improve the error message on List.to_string conversion, closes #4241
Allow variable struct names when matching
Update CHANGELOG
Polish docs in Mix.Config
Add in PATH note to remaining files
Use System.build_info[:build] consistently in Mix and Elixir
System.build_info/0: add :build
Makefile and System.revision/0 no longer read from .git/HEAD
Improve documentation for iex -S
Add take_random tests with maps
Add Mix.Project.deps_paths
Reject non fullfilled optional dependencies later on
Update new.ex
Improve helper name for Application.format_error/1
Support guards in for
Optimize Enum.random for ranges
Update special_forms.ex
Support generated: true in quote
Do not allow negative line numbers without generated annotation
Clearer explanation of the {:exit, reason} return value from Task.yield
Call Inspect.Integer directly
ExUnit: Add note in docs about `:include` ignored without `:exclude`
Support :base option when inspecting binaries
Standardize use of range operator (..)
Improvements to the parallel compiler
docs(Regex): typo in deprecation warning for /r
Leave a note to use :trim_all from :binary.split/3
Update new.ex
Improve Map.take/2
Add iex> to make some doctests run
Update @spec for Kernel.hd/1: it can take a maybe_improper_list
Typespecs.md: fix backticks in iolist
Add arity to functions in docs
Mix task: correct tense
Remove 'mix -help' command option
Don't run IEx.Case asynchronously as changes config
chore(Mix): typo in tests - Overriden -> Overridden
docs(ExUnit): typo - overriden -> overridden
Rename delete_in to pop_in and support paths
Solve bootstrap issues
Document identifier() type in Typespecs.md
Use List.to_string/1 in IO.chardata_to_string/1 for lists
Remove remaining imperative cases
Remove more imperative cases and related test cases
Get rid of more imperative conditional uses
Remove imperative use in ex_unit
Remove imperative use in logger
Warn on imperative use of case/cond/if/&&/||
Enable unsafe warnings for && and ||
Support guards in with (related to #4015)
Use tuple wrapping instead of references in with
Format beam validator errors properly, closes #4263
delete_in
small typo in docs for ExUnit.Case
Make app.tree and deps.tree recursive
Add mix deps.tree
Add a test for included application in app.tree
Make sure app is compiled in app.tree
Move print_tree to its own function
Add document about scoping rules
Add task app.tree
Improve docs for `case` and `cond`
Point to :rand module in docs
Make GenServer.cast/2 always return :ok. Closes #4251
Correct typo in Map.split/2 documentation
Ensure Module.create respects var/alias hygiene, closes #4254
Removes the use of () in built in typespecs
Do not accidentally override tags
Ensure we always load configuration if a non-default is set
Remove outdated debug_info test
Remove debug_info from unicode
Add some tests String.replace_trailing. Another test for String.rstrip
String.replace_trailing bug: Line 661 (String Module) prefix_size > 0 cannot happen when string === match
Improve tests for registered attributes in ExUnit
Add test attributes
Update Naming Conventions.md
Improve writing docs
Simplify reserved attribute detection and listing
add `preferred_cli_env` attribute to task definition
Only autocomplete underscored functions with doc
Tidy up docs
Added @moduledoc documentation to Range
Add Process.sleep/1
Update code of conduct
Improve error message formatting for multiple clauses with defaults
Force recompilation if dependency was recently fetched
Correct error message for overriding of reserved tag
Raise if trying to override reserved tag, closes #4236
Add doc about ignore: :whitespace to Base.decode64.
Add option to ignore whitespace to base64 decoding. Close #4186.
Automatically merge manager according to internal priority, closes #4230
Do not require all compilers available on manifest
Tidy up IEx helpers implementation and tests
Make `__DIR__` docs more accurate.
Display doc for underscored functions only if it is set
Add a test for mix with disabled autoload
Do not rely on compiled functions in Mix for autoload
Update CHANGELOG
Improve module docs for the Module module
Support disabling autoload after compilation
Inspect path in File.Error exception message
Improve error message of definitions with multiple clauses and defaults
Bypass List.Chars.to_char_list calls with list literals
to_string with binary literals is already handled during rewriting
Bypass String.Chars.to_string calls with inspect result
Support passing io_device to File.copy/3
Stream.resource/3 @doc and @spec change
Introduce Logger.reset_metadata/0,1
Update base.ex
Remove minor ambiguity in Enum.sort/2 doc
Add @doc false to impl_for and impl_for! protocol functions
Define @callback init for EEx.Engine
Include init/1 in EEx engines
Document 1.2 options and avoid 1.2 warnings
Ensure Application.spec/2 returns nil for unknown applications
Include where the module being redefined is currently loaded from
Remove tests for deprecated functionality
Correct Macro.to_string/1 formatting for a call on captured function
Ensure proper integer to list conversion, closes #4213
Add missing changelog entry
Remove references to Kernel.Typespec, closes #4206
Add a Regex.split with :on and :include_captures
Implemented option :include_captures in Regex.split/3
Control escaping of unicode sequences with ?u
Do not put newlines in defdelegate warnings
Detail how to "skip" the requirement
Add deprecation for defdelegate list arguments and append_first option. Close #4199.
Add defdelegate optional parameters. Close #4196.
Tidy up Macro.to_string/2 tests
Update exunit match operator and match? to show pinned variables. Close #4192.
Update doc to use the correct format
Update elixir_parser.yrl
Correct the type definition of ExUnit.state for the failed state
Warn when defimp is called for consolidated protocol
Update example code to use correct method name
Issue #4158 - documenting `:width: 0` and adding a guard for neagtive widths
Improve iex expand to handle '&'.
Update iex config_test.
Ensure binaries break into new lines
Preserve variable metadata during collection from assertion pattern
Remove duplicate line in module IEx.Helpers doc
Explain the fact that a :DOWN message can be received when using async_nolink
code.ex docs: typo
Clarify the doc for Task.shutdown
Clarify the doc for Task.yield_many
Clarify the doc for Task.yield
Explain how await() should not be used with an OTP behaviour
Multiple fixes in the Task and Task.Supervisor docs.
Highlight the app name in README
Emit a summary of compilation errors when modules are missing
Do not include debug_info in metadata String modules
make it clear what's passed to `init`
Do not warn in match assertion if variable is reused in pattern
Document that non-atom keys are ignored by struct
Ensure dependencies are properly skipped when running in another environment
Correct Macro.to_string/1 formatting for capture operator
add missing preposition
Use Kernel.inspect for bootstrap purposes
feat(Kernel): raise when defstruct is called more than once
Add newline to create paragraph to fix markdown formatting of the code example
special_forms.ex docs: typos, clarification
Improve docs and error handling for Access
Tidy up error message for misnamed mix task
Naming Conventions doc: typo, commas
Improve error message for when the named mix task cannot be found.
abbreviations -> acronyms
Macro.traverse/4 doc typo
Zeropad compile time in i/1
Consider some dicts are structs in URI.decode_query/2, Enum.group_by/3
Enum.at docs: mention negative indexing
Naming Conventions doc: function name typos
Add more information to naming conventions
Support remote pids/ports with IEx helper i/1
Add "Naming Conventions" page to docs
task.ex docfix
Do not discard given map in URI.decode_query/2
Small fixes to the CHANGELOG
Deprecate soft-deprecated functionality
Tidy up String API and docs
Optional else clauses can be added to special form with
specify syntax highlighting for mix README.md template
Remove unused `escape_char/1` function
Remove deprecated and outdated code
Start v1.3.0-dev
Release v1.2.0
Pedantic improvements to the output of the i/1 helper in IEx.
Use private context for generated variables inside with
Make sure variables are not leaking from with
Remove unused noname field
Keep GitRepo.Mixfile loaded between runs
Add missing purging of GitRepo.Mixfile and extra renaming
Make Mix projects definitions consistent across tests
documenting the default return value for `Module.get_attribute/2`
Add missing purging of GitRepo module
Add a note on how to reference a callback
Use :binary instead of String in Macro.to_string for bitstrings
fix the indent of moduledoc in Module
Update the spec for the generated __info__/1 function to please Dialyzer
Override some opts passed to leex in compile.leex
Override some opts passed to yecc in compile.yecc
Mention IEX_WITH_WERL in docs
Add documenation about env variables to Mix module.
Add mix debug mode. Close #4106.
Use IEX_WITH_WERL environment variable to enable --werl by default.
Amend writing docs
Add section about function arguments to 'Writing Documentation'
Improve docs for each compiler, closes #4099
Document --werl for autocomplete on windows, closes #4103
Fetch umbrella child deps across environments without conflicts
Revert "Load all umbrella children from the fetcher, closes #4069"
Add environment variable to iex.bat so user can default to --werl if desired.
update Kernel.SpecialForms.import summary
Release v1.2.0-rc.1
Improve error message on invalid map definition, closes #4068
Check for :name or :id in Logger translator, closes #4073
Load all umbrella children from the fetcher, closes #4069
read vs. erad
is -> may be
Add pages about typespecs and docs, closes #4079
Add deps.clean --build documentation.
added return values to the Logger macro's documentation
Use question mark at the end of boolean variable
Add --build flag to deps.clean mix task. Close #4088.
Clarify the use of --deps option
Bring back umbrella specific configuration
Emit proper error if parsetools is not available
Revert "Warn if no status after eof"
Ensure halt on system cmd collectable
Warn if no status after eof
The Access is not a protocol
Provide better error message for keywords access with non-atom keys
Make Access syntax fail to compile for unsupported values
Do not run converger if dependencies have diverged
mix.bat changed to emulate mix script on Unix-like systems. This solves #4075 Using mix file as input to elixir. Note that #!/usr/bin/env elixir will be intepreted as an Elixir comment
Raise when Access syntax used on non-keywords
Bring Access.fetch/2 tests back
More consolidation effects on test clearer
Update CHANGELOG
Update CHANGELOG.md
Release v1.2.0-rc.0
Avoid generating accumulator for nested comprehensions
Use nil for resetting env vars instead of false #4067
Allow `false` value in env passed to `System.cmd/3`
Improve rebar config script error message
Converge dependency managers
Update rebar3 config merge
Do not disable convergency checks for optional deps
Example of String.codepoints/.graphemes difference
String docs: link codepoints/graphemes to details
Don't use deprecated Dict reference
Ensure we treat deps as a git dependencies
Make non semver versions a dependency status instead of raising
Remove io ansi macro
Add helper methods and macro to IO.ANSI for rgb216 color
Clarify codepoint vs. grapheme in String docs
String.split docs: codepoints -> graphemes
String.slice docs: codepoints -> graphemes
Make import with conflicting options to raise
Add specs and enhance docs for Mix.Generator
Clarify the new default behaviour for protocol consolidation
Update a test for Mix.Project.in_project/3-4
Enhance the docs for Mix.Project.in_project/3-4
Add @specs to the functions in Mix.Project
Do not run remove converger multiple times
Clean up expand dot implementation
Cover bittype_mismatch error missing in `:erl_lint.format_error/1`
Add spec to Map.drop/2 and Map.split/2
Map.take/2 missing spec
Remove improper checking from update and get
Correct "unrequired macro" assertion
Properly handle import with invalid options
Documentation fixes
Ignore only requirements from optional dependencies
Implement Stream.with_index/2
Implement Enum.with_index/2
Update CHANGELOG
Make Rebar 3 support opt-in
Use proper grapheme on String.reverse example
Document that reverse x reverse != identity
Raise error for incompatible OptionParser options
Reword OptionParser moduledoc
Rebar3 dependency support
fix grammar:  does -> do.
Add support for HEX_CDN var in mix local.{hex,rebar} tasks
Add System.time_offset/0-1
Adding code to the Windows batch files to make it easier to diagnose issues on Windows with Elixir
Add System.convert_time_unit/3
Add monotonic|system_time and unique_integer to System
Ensure Macro.pipe/3 in stacktrace on bad call
Do not bypass warnings_as_errors on `Dict` and `defdelegate` warnings
Improve the docs for File.Stat
Improve guards in Regex module
quick changelog 1.2 edits
Reword confusing `build_path` documentation.
Don't print the result of the 'ls' and 'cd' IEx helpers
Eliminate spaces in bitstring definitions
Improve Macro.to_string/1 formatting for nested bitstrings
Make Macro.to_string/1 consistent with Kernel.inspect/1 for bitstrings
Don't print the result of the 'pwd' helper.
Only expand Erlang modules when ':' is a prefix.
Explain IO devices maintain position
Typo in CHANGELOG.md
Make new replace implementations tail recursive
Update CHANGELOG
Rename String.trim_* into the more general purpose String.replace_*
Remove dependency between loadconfig tests
Do not check for configured apps when build path is set
Ensure config_path is respected
Typo in CHANGELOG.md
Update CHANGELOG
Use kind and stacktrace from each error in multi error
Support tag reporting
Only show not available deps after deps.get/update
Support raising and formatting of errors in ExUnit
Improve code style
Warn on non-variables for defdelegate, closes #3994
Include file and line in all doctest errors
Check for link label without using regular expressions
Do not prune deps if build_path is set
Do not show duplicate info on iex -v
Dependency requirement can be missing
Print line number when indentation level mismatch
One reference link label per line
Improve Info helper test for Ports
Add missing comments about inlining in Process
Improve Info helper test for PIDs
Use `:lists.map` instead of hand-written recursion
Support for proxy auth with mix calls to httpc
Remove location keep as we rely on the user's using block
Share build and config paths in umbrella apps
Use a module name other than Foo to avoid conflicts
Rename get_key to spec
Implementation of get_key and get_all_key from :application in Elixir
Improve docs for List
Show more process information
Move doctests from central place to the modules they describe
Suppress warning in set file
Add a test for the i/1 IEx helper
Add tests for the IEx.Info protocol
Polish IEx.Info for BitStrings
Unify undefined function messages
Enhance the docs for Process.put/2
Specify that keyword list is made of 2-elem tuples
Use the name of the app for :path dependencies, closes #3979
Improve styling of how location is shown on pry
Expand sigil s to binaries when possible
Added verbose pry functionality
Use List.foldr in Console metadata handling
Tests for raising with default args in defdelegate
Raise when default args are used with defdelegate
Better check for functions, closes #3983
Update CHANGELOG
Add raw representation and Object -> Module in module info
Remove outdated set_test.exs
Check for docs instead of :__info__
Improvements to IEx.Info
Optimize functions in MapSet
Document functions in MapSet
improve docs for task module
Make IEx.Info fallback to any
Polish the implementation of IEx.Info for modules
Implement the IEx.Info protocol for all data types
Soft deprecate Dict, HashDict, Set and HashSet
Document and remove Map dependency from Dict
Document and remove Keyword dependency from Dict
Rename IEx.Evaluator functions
Do not skip variables from bitstrings when collecting them
Properly change __ENV__.file when @file is set
Make `ParallelRequire` aware of warning_as_errors option
Improve error message for invalid do/do:
fix tuple module docs
No need for `default_callback` private macro in `ParallelRequire`
fix typos and spells in Version module
Don't escape underlines outside url in docs.
remove additional pipes from Stream docs
Remove unreachable function "branch" in parser
Remove undesirable output in parser
fix spellings and grammar typo in string module
Expand assertions before extracting vars and pins
Warn on conditional vars
Simplify some assertions
The OptionParser parses options, not argumemnts
Tell how to solve access field names in uppercase
Changed ./bin/elixir -v/--version to be more verbose with Erlang system_version and short revision hash.
Clean up and optimize cond implementation
Remove wrapper export_vars function
Use new module location
Clean up destructure implementation
often undesired -> ambiguous
tests(Kernel.WarningTest): test for pipeline without parentheses
Warn when piping into functions without parens, closes #3642
Wrap values read from ex_unit app environment, closes #3940
Introduce Task.yield_many/2
Add cancel and read timer functions to Process
Return {:exit, reason} in yield/shutdown
Set stop timeout to infinity, same as OTP
Unit test ANSI `color/1` and `color_background/1`
Remove the need for export_head
Update CHANGELOG
Remove m/0 and m/1 helpers
before -> after
Add tests for endianness
Warn if compiled endianness is different than current one, closes #2785
Ensure .compile.lock is per project, closes #3849
Drop if_ok in favor of new with special form
No need to use https for local hex/rebar as we sign and verify packages
Throw an error for -> with an empty right-hand side
Make `with` a special form
Add ANSI escape sequences for extended colors
Test Integer: rename tests + test in guards
minor fix
Add examples to Integer.is_odd/1 and Integer.is_even/1
only use count == 0 for enumerable containers implement count interface
implement Enum.empty? as Enum.count == 0
Add `with` expansion and translation
logger.ex: doc typo
Improve documentation for logger metadata
Add file to logger default metadata
Use ~S in Supervisor's moduledoc, fixes #3937
First incomplete version of the i/1 IEx helper
Use String.to_char_list when converting shell commands
Updated documentation of Enum.all? and Enum.any? to reflect the actual implementation
Correct mime type as 'x-www-form-urlencoded'
Add `new/1` and `new/2` to Map and MapSet (mirroring the Keyword variant)
Correct message for invalid indentation in doc test when is "1 space"
Remove --quiet, document MIX_QUIET
Correct String.jaro_distance/2 spec definition
Implemented Mix.Shell.Quiet
Remove |>  from end of line
Simplify code by using pipe operator
Suppress warning in Task test
Documentation improvement to GenEvent
Tidy up bad owner error message in Task calls
Favor local calls inside modules
Remove needless :stop clause in GenEvent `receive`
fix(Mix.Dep.Umbrella): prevent error when app is missing mix.exs
Clarify Float.ceil/floor handling of decimals
Ensure keys can also be used on update
Remove uses of soon to be deprecated Dict
Add Supervisor.stop
Move eex error to warning
Remove warnings from test suite
Streamline docs and warnings in Task, Agent, GenServer and GenEvent
added stop/3 to GenServer and GenEvent using :gen.stop
Do not start apps on "recompile" in an IEx session with --no-start
Emit status reports at the end of deps.get/deps.update
Ensure Task function in stacktrace when invalid owner
Ensure we cannot pipe into tuples or maps (literals)
Raise an error when a task is queried from a non-owning process.
Validate git options and warn on conflicting ref, branch or tags
Update CHANGELOG
Make it clear about top-level cases
Optimize base encode/decode about 10x
Allow pin in fns and comprehensions
Allow size and map key variable matching in for and fn
improve doc for restart of supervisor spec
Grammar fix for error message returned by :elixir_aliases.format_error/2
Support variables as map keys
Error with tuples in map access syntax
Add Process.get_keys/0
Move code server and compiler away from ord*
Move more items away from ord* when possible
Provide better error messages for context modules
Mix.Task moduledoc update: correction
Use empty bindings
Move internal vars and backup vars from orddict to maps
Migrate to :rand
cleaner (?) error messages when attempting to use the module from the same module
Remove unused functions in utils
Remove more dependencies on HashSet and HashDict
Include line for previously defined doc attribute warnings
Introduce String.trim_{prefix,suffix,leading,trailing}/2
Only load consolidated protocols if consolidation is enabled
Don't block Task.Supervisor when starting tasks
Properly check for docs atrribute value on redefining
Warn on attribute change even if value is the same
Add Task.Supervisor.async_nolink/1/3
Update enum.ex
Do not warn on attribute change if value is the same
Update CHANGELOG
Do not mark erlang:error as generated as it prunes stacktraces
Include underscore/1 & camelize/1 in the Macro module
Add link to monitor/2 example
Add clarification to comprehension match example
Do not generate install instructions for umbrellas
Remove unecessary warning, make type opaque
Tidy up implementation for warning on @attribute redefinition
Test duplicate @doc warn
More helpful List.to_string argument error
Tidy up code from merged PRs
Solve bootstrap issues with @doc
Make workaround for dialyzer warnings suppression on raise
Silence dialyzer warnings on raise
Add note to deprecate size functions in Map / Keyword
Document limits of `Float.parse/1`.
A first pass at implementing an m helper for modules.
m/1 version of :c.m is working
Ensure no warnings on rewrites
Remove old dialyzer test file
Clean up generated code
Add dialyzer tests for generated AST
Add generated annotations
Consolidation is now on by default
Update CHANGELOG and remove deprecated code
Remove unecessary System.put_env
Do not recur on non recursive tasks
Display type docs with `t(Module.type)` and `t(Module.type/arity)`
Make tests that assert consolidation more robust
Use fixtures only when necessary
Add tests for always on consolidation
Make IEx.Helpers.h handle automatically looking up callbacks when the implementation is requested.
Solve bootstrap issues on defdelegate
Add default docs for delegate methods
Cache and always consolidate protocols
Split ElixirSCM and Lock manifests apart
Add protocol information to manifests
Transplant Behaviour module docs to @behaviour
inspect invalid ANSI sequences
List `as_boolean()` under `Kernel.Typespec` built-ins.
change irc:// URI to freenode's webchat
Tidy up GenServer docs
Add `Macro.traverse/4` pre/post-order traversal at the same time
fix3761:  Add more info about :via registry to GenServer
Omit `else` option in `if` and `unless` clauses if it returns `nil`
Add IEx width option for larger terminal screens.
Add NFC support to String.normalize/2
Update special_forms.ex
run compile before regular tests
use macro to show code sample in error message
Add demonstration for Enum.shuffle's randomness
Optimize Enum.map/2 for lists
Optimize `Keyword.new/2` function
Enum: rename variable in priv. func.
[#3707] Warn when @attributes are redefined
Do not delete only information from deps
Print byte information on base decoding errors
Ensure we print unicode codepoints on errors, closes #3804
Add an example for IO.gets
Ensure we keep ordering and last properties in keyword
Add comments to the first GenEvent example.
Add a test for umbrellas with build embedded
Enum - Several fixes
Ensure stacktraces are shown on app_path failures
removed obsolete type option from the GenEvent handler type
Configuration file now supported
Wrap docs
Check Range creation at runtime
Remove surrounding spaces in range example
Remove external links in summary and update docs for Port.
Use same form for ranges in error messages what we use for `inspect/2`
Сurrently `Kernel.struct!/2` raises only `KeyError`
Macro.to_string/2 : add test
Clarify instructions for building the docs
Update docs and CHANGELOG
Optimize Unicode normalization
Update README.md
Add text Files to Docs.zip
License: Use NOTICE (remove LEGAL)
Remove trailing semicolong from summaries
Improve Summaries
Add String.normalize/2
Rename String.is_equivalent/2 to String.equivalent?/2
New config, :warn_test_pattern Display warning for files matching :warn_test_pattern that are not matching :test_pattern. Default config,"*_test.ex".
Bring unused warnings into tests
Add String.is_equivalent/2 to test canonical Unicode equivalence
Bring Access.Map temporarily back
Streamline more code specific to Erlang 18
Add missing NOTICE file
Move away from HashDict and HashSet
Rely on Erlang's Apache 2 license
Require Erlang 18.0 forward
Add raising on unknown keys version of `Kernel.struct/2`
Consider multi-alias call on use
Consider multi-alias call on import, alias, require
Add support for `x.{y, z, w}` expression
Add test for `use` macro
Start v1.2.0-dev
Release v1.1.0
Make the Access API based on fetch
Ensure we list structs and requires as compile time deps
Mention config/config.exs in warning
Update CHANGELOG
Link to the public keys page
Raise if arity not in 0..255, closes #3754
Ensure suspending flat map does not consume items, closes #3751
Raise `CompileError` in case of duplicated `do` clauses for `case`
Raise `CompileError` in case of duplicated `do` clauses for `cond`
Raise `CompileError` in case of duplicated clauses given for `receive`
Raise `CompileError` in case of duplicated clauses given for `try`
`compile_error/3,4` is already imported in `elixir_exp_clauses`
Update doc for Kernel.hd/1 to indicate guard clause utility
assert_raise: document that message can be regex
Add IO.ANSI.clear_line
Add missing after callback in Stream.transform
Added an example to the to_list function
Code.get_docs/2: check for valid doc kind in public function, not in  private
String: Rename args "str" to "string"
Stop apps in reverse load order
Update release instructions
Make a distinction between touching and updating the lock manifest
Add Mix recompilation from IEx
explain String.replace/4 :insert_replaced option
Module.__info__ : correct links
Add examples using alternate capture/replace syntax
Make test that relies on shared dir sync
Release v1.1.0-rc.0
Improve deps.compile error message
Fetch archive/escript with version in filename
Polish docs for Mix.shell and Mix.Shell.Process
Default to universal times throughout File
Update CONTRIBUTING.md
Improve wording in COC links
add links to code of conduct
ANSI: standardize docs
correct tenses in Agent, Mix.Dep, GenServer docs
"mix deps.clean": Reword docs to make it consitent with "mix clean"
Title case Hex
Mix.Dep: show instructions on :nolock and :lockoutdated
Prepare for upcoming release
Add a couple of tests for assert_raise/3
Use multiline failure message for asser_raise/3
Provide reporting e-mail
Mention how to write docs for public Mix tasks
Add GenServer.option type
Remove leftover callback docs from GenEvent
Properly close GenServer heredoc
Make it clearer that unimplemented callbacks always stop
Support logo when generating docs
Ensure File.touch and File.touch! properly work with universal time
Update CHANGELOG
Rephrase @moduledoc for Mix
Correct "truth value" with "truthy value"
Replace en-dash when it should be hyphen
Replace all occurrences of em-dashes in favour of hyphens
Raise right away for Mix tasks with slashes
IO.ANSI: move away link from Summary
Rephrase @doc for Mix.raise/2
Standardize use of backticks and quotes; including Error messages and Title Case commands
Inspect.Algebra: Move numbered link off the first line
Indent pinned vars and received messages in the receive assertions
Improve assertion readability in test
Display pinned vars in the receive assertions
Only warn if no test pattern matches due to umbrella apps
Update CHANGELOG
Ensure binding() doesn't warn on underscored vars, closes #3708
Only warn apps that come from the current project stack, closes #3710
Set ex_unit stacktrace to 20 by default, closes #3705
Improve assert docs, closes #3709
Mention the Pin Operator in its documentation
Enum: renamed the rarely used `ifnone` argument, in favour of `default`
String: strip functions : mention that ALL leading/trailing `char`s will be removed
New test cases for exponent marker E and leading +
Use Mix.shell.error for fprof warning
Update CHANGELOG
Add a code of conduct
Use Title Case and backticks for Erlang and Elixir applications
Correct descriptions in docs to use Present Continuous (2)
Add text to all links
Do not choke on unknown manifest files
Provide a best practices section for use
Allow list of spec in Process.info/2
spelling `miliseconds` -> `milliseconds`
Add arity or correct it for functions that are not being linked in the html docs
Format raise message consistently
Correct spaces in iex>
correct wording
Add backticks to true, false, nil
Mix.Hex: improve documentation and code
ensure_structure: rephrase wordings
Avoid splitting words that use hyphen
Correct descriptions in @doc, @moduledoc, @shortdoc to use Present Continuous
Correct indefinite article a/an
Regex.regex?/1: name unnamed argument and improve docs
Correct double words
made parse() support complete scientific notation
Match on proper error on lock format mismatch
Release v1.1.0-beta
Raise nice error merge when setup returns bad data
Include link to Hex publish
Convert remaining test :atom to strings
Add support for File.rename (unix-like mv) based on elrang specs
Prune more elixir internals in stacktraces
Ensure we merge excluded values
Upgrade travis to check against Erlang 17.5 and 18.0
Update public key
Document and test :only behaviour, closes #3664
Properly convert captures in Macro.to_string/1
Update b/1 helper for callback docs
Perform merging of only in non-shared paths
Add and document GenEvent callbacks
Improve Supervisor.start_link/2 spec
Improve docs on GenServer.init/1 returning :ignore
Add and document GenServer callbacks
Update a map for non existent key will raise a KeyError, not ArgumentError
Remove reference to GenServer.Behaviour from LocalsTracker
Include docs zip in the publish process
Provide detailed description on how to change timeout
Add Stream.transform/4
Ensure we don't warn on missing imports if nothing was imported
Raise nice error message if ExUnit.Case was not used
Update CHANGELOG
Improve unexpected token error messages
Forward all info values to get_module_info
Also download signed rebar packages
Add task for managing public keys
Use public key encryption for downloading Hex metadata
Provide sha512 checking on mix archive.install
Move Hex loading into its own module
Enum.chunk: correct types in specs
CHANGELOG.md: Add missing period in header
Add missing character in delete_at code sample
implemented iex pid helper, using :c.pid
added docs for :keep option in OptionParser module
Update documentation for IEx.configure
Update elixir.bat
Add URI.to_string/1
Update CHANGELOG.md
Correct formatting
Correct function argument name
Cut off "Elixir." prefix for modules in Logger metadata
Do not inject `:application` key in metadata if it has `nil` value
fix(Kernel): check arguments on if and unless
Update CHANGELOG
Also store lines in typedoc and ensure @*doc return strings
Keep metadata when rewriting assertions
Ensure only restriction is passed from parent to child
Erase app directories on full recompile
Improve error messages for `match?` assertions
Handle warns coming from erlang with line set to :none
(#3603) add more application functions
Improve GenServer docs
Do not assert on local paths
Remove amount of fixture data in deps test, improve coverage
Warn when dependencies have conflicing :only
fix a typo in bitwise documentation
update error messages, handle non-call first arg to :::
Improve error message when no return value specified in func spec
Recompile projects if SCM changes, closes #3375
Keep proper line info in rewritten/inlined code
Match errors should have higher priority on assert =
Clean up map access code
Do not change the code semantics in assert/receive
Raise if heredic terminator in invalid location
Assert key-value pairs in type structs
Improve binary docs
Do not add fetch to access
Also perform new line checking with structs
Remove unnecessary code in Enum.uniq example
Allow operators to work still after comments
Also fail on do after , and ;
Support \u in strings and char lists for unicode mapping
Deprecate as: true | false in require/alias
Deprecate ?\x in favor of simply 0x
Soft deprecate booleans in :as, closes #3190
Emit syntax error for invalid fn end, closes #3311
Convert test :atom into test string
Make a distinction between Location, Token and Node in parser
Improments in module,  function & variable  names syntax
Clean up  makefile
Makefile: print a success message on `realease_precompiled`
Remove usage of use Behaviour
Soft-deprecate Behaviour
Add a short description about ExUnit and Mix improvements too
Update CHANGELOG
@callback can now be used directly (without Behaviour). Add @macrocallback.
Always warn on mix config when application unavailable
Stop/unload applications started/loaded in mix tests
Improve async docs
Warn on build embededd instead
Alias `Fprof` mix task for readability in tests
Remove dead code from mix tasks tests
Tidy up `Mix.Tasks.Profile.Fprof`
Dog food `Application.put_env/3`
Mention sigil_R as valid option to create a regex
URI: add RFC links
Added a blub about underscore names to the `import` documentation
documentaion for module names, variable names and custom sigils
Move test to compile task (compile.all is an impl detail)
Ensure to always clearn up logger configuration
Add application to logger metadata
Further optimize in range
Add test to verify compiled protocols are removed
Clarify some type descriptions in typespecs
Warn defaults not defined in function head with multiple clauses
Clean up typespec docs to avoid current confusion
Add GenServer.whereis/1
Support custom tasks using monitor of registered process
Always unlink when shutting down task
Allow nil pid in task
Remove warnings from erlang suite
Use or in left in [a, b, c] as the compiler can opt it better
Update app.start.ex
Handle abnormal exit in System at_exit
Warn if app configured but not started when build_embedded
capture non-symbolic operators (&and/2, &not/1, &c.)
Check for PID result from Logger
Move logger flush to kernel cli, closes #3100
Raise an error if there are no files available to run test
Introduce :capture_log ExUnit configuration.
Add useless building warnings for module attributes and variables
Handle optimizable returns explicitly
Warn when numbers or binaries are not used within a block
Add = to list of functions that handle returns
Stop with bad_return_value on bad return in Agent
Set Agent initial call
Add @type struct and error when overriding builtins
Improve coverage for dynamic in clauses
Restrict ranges to work only with integers
Do not compile project if deps contain the task
Remove +T 9 flag
Inline map operations in put_in and update_in
Access is no longer a protocol
Make sure we support multiple environments in only
Validate :only in mix deps, closes #2980
Be more strict on the supported deps formats
Support translator_inspect_opts
Update CHANGELOG
Allow tests to be skipped with @tag :skip
doctests raising exceptions and assert_raise show original stacktrace
Raise if piping into binary operator with 2 args
Mention expressions without results in doctests
Indent code sample for __protocol__/1 & impl_for/1
Improve error message in case of lockfile eval failure
Improve mix.exs code sample
Add a note to the docs for Enum.reduce/2
Optimize many functions in String
Speed up `Enum.take_random/2` for big inputs
Match on proper error message prefix
Make a distinction between strict containers and strict calls
Avoid race condition in `capture_io` "device re-registering" test
Mention restart: :transient in Task moduledoc to clarify Supervised Tasks example
Tweak the docs for the Inspect protocol
IO.inspect: @specs fixed, + see full options
Introduce Task.yield/2 and Task.shutdown/2
Pass build path as ERL_LIBS for deps.compile commands
Add an example for running Task.find
Better documentation for the GenServer terminate callback
Start logger if --no-start is passed
run `man/make clean` dir after `make install_man`
Add man pages to Precompiled file
Polish the documentation for Mix.Task.alias?/1
Streamline aliases and imports in lexical tracker
Reduce noise in lexical tracker output
Only recompile compile time dependencies in mix projects
Split compile and runtime in lexical tracker
Update elixir compiler manifest to use file:consult/1
Improve error message for build_embedded true
lock / git scm mismatch should be mismatch
Preserve metadata order defined in the backend's configuration
Ensure Logger metadata is merged on log call
Allow Logger metadata removal from the pdict
Improve `capture_io/3` on exit test
Use `spawn_monitor/1` to avoid race condition
Enum.slice/2: guard added was missing from previous commit
Avoid race condition in tests
Enum.slice Check for integers in arguments
Correct docs for --
Update regex.ex
Favor explicitness in Mix.Utils.read_path with rebar/archive installs
Bitwise module: remove docs in __using__ and move it to @moduledoc
Provide detailed error message for nested parens calls
Update CHANGELOG
rename Inspect.Algegra.folddoc due to inconsitencies
rename Enum.minmax* due to inconsitencies
Make `Macro.interpolate/2` private
Improve IO docs
Add explicit sort of map to Mix.Dep.Lock.write/1
Optimize struct building
Update CONTRIBUTING.md to avoid code style pull requests
Load IEx env just once to avoid race conditions
Clarify which call sets up the Task monitor
Enum.take_every/1: remove unnecesary Module reference
Enum & Stream, take/2 & take_every/2 variables renamed. +Improvements
Check for compile_path on build_embedded
Remove reference to dynamic operators in table
standardize erlang.org/doc links to use www
update links to https. remove period adjacent to URLs.
add proper credits to copyright holders
Make `Logger.log/3` macro and introduce `Logger.bare_log/3` instead
Split handle_call and handle_cast callbacks in GenServer docs
Provide link to Elixir's GenServer tutorial page
link to search issues
.gitignore : sort alphabetically
make absolute path for gitignore rule for man
Reword Agent docs for readability
Add warning on underscored variable access
Improve docs for Task supervisor
Fallback to known Elixir version if csv is not available
Simplify `List.do_zip/2`
Adjust code in `List` to style used in the codebase
Introduce `List.keytake/3`
Makefile: fix manpage installation in packages
Ensure proper precedence of operators when mixing matched and unmatched
Disallow more ambiguous expressions
Do not allow nested ambig expressions
Support rebar3 style git refs in rebar.config files
Only remove extra archives
Do not rely on ansi escapes, closes #3456
Restrict support for binary message in the default impl of exception
Clarify example in ExUnit.Callbacks docs
Improve docs for mix run
Set proxy options for the correct URI scheme
Use shell for fetching hex versions
Update special_forms.ex
Simplify `ExUnit.Server.log_capture_on/1` return
Add test for log capture removal on exit
Improve error message for bad raise
Move add/remove logger backend to client
Mention Enum.reduce/3 in Enum.reduce/2's documentation.
sync documentation with code
fix typo in special_forms
Add missing dot to docs
Improve opaque types section on doctests
Generate installation instructions with READMEs
Mix new: use only umbrella template for config.exs, not both
Add muting for the `:console` backend for the duration of capture
Make error messages in lowercase
Improve Kernel.Def
Run badkey and badmap only on 18
Ensure we also normalize badmap and badkey in rescue
Get rid of `ProxyIO` and merge `:console` and `:capture` backends
Support dialyzer attribute
fix for Erlang R18.0 changes in maps module
Give curl priority over wget
Translate emulator logged process crashes in 18.0+
Move tests to Erlang 18 which has proper logger behaviour
Switch mix to using https:// instead of git:// in GitHub URLs
Handle map() typespec correctly
Add support for `:capture_log` ExUnit test tagging
Rename `Logger.CaptureLog` to `ExUnit.CaptureLog`
Rename `ProxyIO` to `ExUnit.ProxyIO`
Document Logger.CLIFormatter
Add tests for `Logger.Backends.Capture`
Introduce `Logger.CLIFormatter`
Demonitor proxied device and consider unknown messages handling
Document ProxyIO and implement own :io.request
Consider `:standard_io` as a valid device name
Add docs and custom io device support to capture_log
Introduce `Logger.CaptureLog`
Introduce `Logger.Backends.Capture`
Introduce `ProxyIO`
Properly offset columns on dot
Use the given length instead of calculating it
Revert "Use https in test fixtures too"
Revert "Convert last git reference to https"
Revert "Use https on github shortcut"
Not implemented test sets tag
add :not_implemented tag
raise 'Not yet implemented error' on such tests
Typo in doc for custom logger backends
Add example of Agent.get_and_update/2
Be clear where the config is set for logger
Add more configuration examples to Logger
Add explicit docs that Mix.Config sets Application env
Build embedded requires explicit compilation step
handle completion of erlang module aliases
Move autocomplete server to IEx env
Move current_env to IEx.Server
Reduce length of first paragraph to improve summary readability.
Corrected grammatical errors
Corrected grammatical errors in string documentation
Use file alias 'F' for consistency
Remove previous archive after download success
fix warning of unused variable in test
Update Application docs to make them more accurate.
Additional Enum.reduce_while/3 tests
Add example of Bitwise in guards
Move terminate reason to second line in logs
Add support for Enum.reduce_while/3
Better documentation for Task.await
Convert last git reference to https
Use https in test fixtures too
Use https on github shortcut
Support IEx.pry with --remsh
Elaborate on codepoints and the :binary module in String.to_char_list
Remove an erroneous comment from String.to_char_list's doc
Ignore man build artifacts
Small manpage corrections
Mention the use of records in pattern matches
Ensure that a digit follows the underscore in binary, octal, hex notations.
Allows underscores in binary, octal and hex literals.
spell backpressure consistently
eex engine raises on missing assigns
Clean up <<>> docs to avoid doctest failures
Restructure and add to Kernel.<<>>/2 docs
Skip test that depends on read-only file when running as root
Avoid non-fix table errors
Rely on loaded_applications instead of running ones
Changes to "v" IEx helper
Really fix race condition in logger translator test
Update CHANGELOG
Remove leftover obsolete code
Handle :undefined in Exception.format_arity/1
Remove duplicate test in `StringIOTest` and correct test names
Only consider outer halts in flat_map when the op is not halt itself
Speed up upcase and downcase for large strings
Ensure take/1 does not consume more than required
Defining arg0 for System.cmd tests so it can work with busybox
Ensure we properly underscore acronyms followed by paths
docs(Mix.Tasks.App.Start): fix typo
Improve wording
Also document exit reasons
Add docs for simple one for one
Use reliable home directory source
Handle corner cases for small strings in rstrp
Optimize rstrip
Improve docs for Stream.interval
Suppress warnings in `Inspect.Algebra`
Remove duplicated assertion in `ProtocolTest`
Improve test coverage for implicit protocol deriving
use # instead of nbsp
Copy-edit the module documentation of Application
IEx Autocomplete assumes module at each level #3361 Squashed commits: [f0bb5a0] move sublevel test module inside IEx.AutocompleteTest [5b70ad9] move sublevel test module inside IEx.Autocomplete [0130aa3] add test for iex autocomplete sublevels [f88b853] IEx Autocomplete assumes module at each level #3361
minor styling fix
properly layout the table
Update escript.build.ex
profile.fprof mix task
Read 4K blocks instead of lines in IO.binread
Add unit test for IO.binread with :all option
`surround_many/5` handles empty documents
Initial support for fenced blocks in IO.ANSI.Docs.
Add tests for fenced code blocks in IO.ANSI.Docs.
Add test for .app file in archive
The latest requests were taken into account
Optimize Dict.merge/2, make Dict use cae clearer
Read assert and refute receive timeouts from ex_unit config
Completed mix man page
Correct doc and error message for `File.cp!/3`
Remove empty starts_with usage in IEx.Autocomplete
Ensure String bool functions do not fail on empty lists
Ensure we return strings on String.split based on unfold
Add String.splitter/3 and optimize String.split/3
Deleted the  note.
Improved docs for bitstring.
Consider subdirectories in `Mix.Project.config_files/0`
Support printing pids and refs in Logger metadata.
Added another preview version of the mix man page
Rename the first argument to the Logger macros
Refactor extraction of meta location
Do not assert when find_executable is returning relative paths
Add `Process.hibernate/3`
Trace always win over timeout when set
Give a meaningful timeout value to ex unit runner stats handler
update anchor portion of link to erlang docs
Bugfix to syntax error before sigil
Correct `Port.info/1,2` functions
Ensure blocks do not clobber eex buffer
Properly set remaining timeouts
Improve error message and increase test timeout to 60 seconds
Ensure Access is derivable for now
use $REBAR on mix tests
Revert "make test: avoid writing to $HOME"
Clean up MIX_HOME setup
make test: avoid writing to $HOME
cli_test: skip test that relies on chmod() when under fakeroot
Makefile: allow passing REBAR and PREFIX via environment
Clarify what deps.clean removes
Revert "Update gen_server.ex"
Update gen_server.ex
Use agents to store Mix config
Added documentation and examples for File.stream!
Underscore does not need to handle paths
Revert d49fb06 now underlying issue has been resolved.
Derived protocols should go through Any
Embed consolidation information as a function in the protocol
EEx doc: Prevent list from being rendered as code blocks
Do not trigger the code server on Any dispatch
Clean up cmd tests
Optimize simplify_signature by traversing only atoms again
Document dedup uses ===, remove usort
Update CHANGELOG
Refactor `Kernel.CLI.CompileTest` to be async-safe
Improve message for compilation error writing .beam
Refactor `IEx.Autocomplete`
No need for `started?/0` check in `start_iex/0`
Provide tab-completion for aliases
Support for structs in `Module.simplify_signature/2`
Clean up defstruct/defdelegate implementations
Mix: fix import_config with non-matching wildcard
Support maps in `Module.simplify_signature/2`
Join pre-release parts with "."
in use -> taken
Mix new: raise if mod name in use
Polish the docs for `Regex.split/2` and `Regex.scan/2`
Avoid "module currently being defined" races in tests
Do not expand in/2 argument in module body
Add `Application.fetch_env!/2`
Simplify `Application.get_env/3`
Ensure we escape config before injecting into escript
Add further docs for `Kernel.struct/2`
Improve test coverage for `HashSet`
Introduce `MapSet` data type
EEx: allow `)` after `end` in end tokens
Add `Tuple.append` inlining
Added a preview version of the mix man page
Cosmetic changes in the elixir, elixirc and iex man pages
Implement `Tuple.append/2`
Refactor File! methods to avoid going through IO.chardata_to_string twice
Refactor File.cd! in terms of File.cd
EEx: correct doc for handle_assign/1
Rename `term` into `value` in `Tuple.insert_at`
Replace `:erlang.now/0` with `:os.timestamp/0`
Assert proper return type from app.start task
Update CHANGELOG
Ensure protocols are also consolidated in umbrellas
Tag async tests as such
remove repeated word
Wait until test process is down in ExUnit runner
Add some docs to `Kernel.defprotocol/2`
Add some docs to `defstruct/1`
Keep IEx history state in the evaluator process
Update translator.ex
Clean up spaces in code docs
Update TODOs
Tidy up `IEx.History` implementation
No longer translate arguments to `@on_definition`
Polish the docs for the `Set` module
Avoid missing behaviour warnings when compiling erlang files
Add message for failure due to `--warnings-as-errors`
Keep IEx history in an agent instead of process dictionary
Clean up ExUnit.Assertions docs
Do not propagate protocol consolidation to children
Ensure we quote proper file on exceptions
Added documentation and doctest examples to many of the functions in code.ex
Remove readd_paths
Update archive.install.ex
Ensure we consolidate only when there was a change
rename :shell option to :system in mix
Update rebar_test.exs
Improve error message for IEx.pry/1
Do not print app name as a filename
Generate build_embedded and start_permanent in new apps
Support start_permanent
Support build_embedded and consolidate_protocols
Remove function deprecated < 1.0
Update CHANGELOG.md
Added documentation and examples for List.to_existing_atom/1
Support specs for unreachable private functions
Optimize `Keyword.new/2` function
Optimize `Keyword.new/1` function
Make `import Foo, except: []` respect previous imports
fix typo in previous commit. bodyless defmacro added to show proper arg in b/1, t/1
fix failing test on erlang 18 release candidate
Update CHANGELOG
Only make tokenizer return char lists
rename function arg. when "other" was used
add backticks to a massive amount of true, false and nil
Refactor trim mode
Improve error message for invalid struct fields definition
correct @spec for `handle_expr`
Explicitely declare argument names for functions with unnamed arguments.
Document that ExUnit.Case :async defaults to false
Document and test the behaviour of Process.exit(self(), :normal)
fix Kernel.=~/2 for "" =~ ""
EEx: Add trim option
Check the number of schedulers online in exunit suite, closes #3199
add backward compatibility with cmd/2
EEx: convert tag type markers to char lists
Make IEx `b` helper to accept single module argument
EEx: fix interpolation inside quotations
Add `IEx.Introspection.puts_info/1`
Make `defmacrocallback` to be shown via IEx `b` helper
Move doc default to the `IEx.Introspection.print_doc/2`
Alias `Kernel.Typespec` inside `IEx.Introspection`
Don't emit deprecations for access
Polish the docs for the functions in the `IEx.Introspection` module
Introduce `b` IEx helper to display behaviour docs
Add `IEx.Introspection.print_doc/2`
Simplify docs lookup in `IEx.Introspection`
Run all tests with +T 9 to get a better chance at finding races.
Add `IEx.Introspection.puts_error/1`
Add a test for submodules
Comments from the last review taken into account
Rename `print_doc_arg` to `format_doc_arg`
Improve handling of multiple modules in the `h` iex helper
Remove superfluous guards in `IEx.Introspection`
Add example to `ExUnit.CaseTemplate/using`
Speed up decode_www_form
Speed up URI.decode_query/1
remove double space
Add space after comma: Format consistently
Update documentation for doctest
Move moduledoc fun_arity down to where test is extracted
Add elixirc man page
Filter :moduledoc
Easier to understand Enum.member? in doctest filters
Amend elixir and iex man pages
Optimize `Keyword.pop_first/3` function
elixir.1 and iex.1 share the same options list
Remove duplicated doctests in `Keyword`
Optimize `Keyword.new/1` function
Optimize `Keyword.pop(_lazy)/3` functions
Replace is_win?/0 with windows?/0
Store behaviour docs in the byte code
Rename output to quiet in Mix.shell.cmd
Refine parsing of no parens calls
Make `on_definition` insertion more readable
Increase elixir_counter timeout
Make Exception.exception/1 support binary argument in default impl.
Add `@spec` for `Keyword.pop/3` and `Keyword.pop_first/3`
Add `Keyword.put_new_lazy/3` function
Add `Keyword.pop_lazy/3` function
Add `Keyword.get_lazy/3` function
Use exits instead of stop so we get stacktraces
Add output and stderr_to_stdout options to Mix.shell.cmd
Rollback to use Mix.shell.cmd
Module.split accepts only module atoms or strings naming these (#3161)
Update CHANGELOG
Depreciate Enum.uniq/2 in favor of Enum.uniq_by/2
Make Stream.dedup/1 use Stream.dedup_by/2.
Add dedup(_by) and usort(_by) to Enum and Stream.
Reduce time complexity of Enum.uniq and Stream.uniq
Add error_logger metadata when notifying Logger
Properly inline regex docs
Refactor compiler errors (elixir_errors:parse_error/4)
Convert quoted interpolation to strings
remove duplicate words + add quotes to nil and false
Mention default values in String.split/3
the example is correct but in the description have a small difference
Add example to Regex.replace with option "global: false"
Produce clearer messages for syntax errors before a sigil
Clarify where truthy and falsey values suffice in the Enum docs
adds guards to dict lazy funs
adds Dict.put_new_lazy/3
adds Dict.pop_lazy/3
adds Dict.get_lazy/3
Improve docs for GenEvent.stream/1, closes #3138
Added test for markup ending in . and code to pass the test
undefined attribute does not need to be set to nil
Return value when matching with `_` on last line of block
Also check mix options for divergence
Make ::/2 a special form
Update CHANGELOG
Ensure changes in child deps forces the parent to recompile
Use identifier instead of name
Improve tokenization of identifiers and `k: v` keys
Replace "parenthesis" with "parentheses" in comments and doc strings
Replace "in between" with "between" in comments and doc strings
Store relative paths in erlang manifest
Use best match in "Did you mean?" mix suggestion
Remove crypto and syntax_tools dependencies
Replace `String.levenshtein_distance/2` with `String.jaro_distance/2`
Polish the docs for the functions in the `Float` module
Add line breaks to code comment
Add assertion that `[f g a]` is ok
Add comments explaining changes to parser
Throw syntax error on [f g :a, :b]
Add distinction between no_parens_one and no_parens_ambig to parser
Add String.levenshtein_distance/2 and "Did you mean?" suggestion to mix
Add documentation with examples how to assert return values and capture IO output at the same time
Split containers and call args expressions
Unify empty parens and map exprs handling
remove blank in README template
Emit deprecation warnings for Access protocol
Use `:lists.reverse/2` instead of `:lists.reverse/1` and `++`
Add test for error on struct field value
Reuse `ArgumentError` creation in `elixir_quote` module
Replaced all but one Mix.shell.cmd call with System.cmd. The remaining call is for windows systems using powershell and I don't know the appropriate token parsing for powershell command lines.
Also run tests on 17.4
Ensure mix CLI-wide that we print Logger messages
Polish the docs of the sigils in the `Kernel` module
Fallback to undocumented API only if necessary
Do not erase stacktrace on bad configs
Support R18 standard error
Turn some examples in `Kernel` into doctests
Mix: add comma at the end of worker()
Polish the docs for the Kernel.def* set of macros
Polish the docs of some `Kernel` functions
Update logger translator tests for OTP 17.4 format
Update Task logs to OTP 17.4 behaviour format
Use Behaviour in exception
No need to pass cmd, include output in errors
Tweak the docs a bit.
Correct usage of `ExUnit.Assertions.flunk` and add guard for it
Add more documentation for ~> requirements
Move test for `:foo.Bar` syntax error
create individual tasks for "make docs"
Use stderr_to_stdout option in run_cmd_or_raise
Replaced all uses of :os.cmd
Correct the phrase "if there already exists"
Replace os.cmd in git with System.cmd, done one to verify what is wanted.
Add import flag to Bitwise
Hack The Docs contribution
Update new major.minor instructions
Also ignore elixir_clauses in stacktraces
small corrections in docs
Add Record.extract_all/1 returning all records information
Update docs for `IEx.Helpers.import_file/1`
Add an :optional option to IEx.Helpers.import_file/1
Add tests for IEx.Helpers.import_file/1 with missing file
Logger uses chardata, not iodata
Logger: Format OTP 17.4 terminate reasons
Add a note for in memory reloading to r/1
Refactor the runner configuration to make it testable
Update CHANGELOG
Set the timeout to infinity when trace option is true
Remove internals from IEx stacktrace
Add positive test case for punctuation in atoms
Throw syntax error for `:foo.Bar`
singular plural issue fixed for tests
Added to tuple.ex module doc a see also note reference the various Kernel functions dealing with tuples. The Rationale for this is that its confusing for a newcomer to the language that these are not members of tuple and it provides a hint as to where these are actually found
Polish the docs of a bunch of Kernel functions
update links to website
Add the timeout option for running the test
Add the timeout option for tests
Remove 17.1 which has a bug in its filelib:wildcard check
Allow rebar dependencies to be specified via :path
Remove @moduledoc false from requirement
Raise an appropriate error when raise/1 is called with an invalid arg
Rebar dependencies can be compiled with mix if they have a mix.exs file
Make it clear that Keyword does not preseve ordering
Ensure quoted expressions are properly shown in error messages
Expand attributes and macros in record extractor
Add details to the docs of a bunch of Kernel functions/macros
Remove a Kernel doctest that issued a warning
fix broken system path test
Add examples to some of the Kernel functions delegated to Erlang
Polish the docs for the Kernel functions delegated to Erlang
Added man page for iex/elixir
Optimize more Enum and Stream functions
Use which_applications instead of undocumented info
Tell user to run mix deps.get on lock mismatch, closes #3038
Bring change removed from v1.0 into CHANGELOG
Add an example of defining a `__using__/1` macro
No need for `args` in `Mix.CLI.load_mixfile/1`
Ensure rebar is quoted when running escript on windows
Always rebuild structures on Windows
Make `Dict.get_and_update/3` overridable
Suppress warning in `Mix.Tasks.Test`
Use :application.info[:loaded] to avoid races
Update CHANGELOG
Simplify Logger checks
Improve docs for functions in File
Ignore exported vars warning
Avoid export vars in destructure
Optimize the performance of Map.get_and_update/3 and Keyword.get_and_update/3
Add Keyword.get_and_update/3
Add Dict.get_and_update/3
Update CHANGELOG
Improve error message with invalid structures in maps
Ensure priv/include are copied on Windows even if source did not change
Call Logger.flush in System.at_exit when running mix test.
Do not choke when Exception.message/1 does not return a string
Explicitly pass allowed attributes to __info__
Change Record#extract to a function - Also adds docs for defining records that were extracted with anonymous functions
Corrected incorrect docstring.
Avoid escape characters in System.cmd/3 docs
Add an example of Enum.find_value/3 to the docs
Get rid of ets from Mix.State
Do not show aliases and import warnings when code cannot compile
Don't ignore escape characters in regex
Remove unused umbrella flag
Use actual message in the metadata assertion
Add test for metadata defaults
Add examples to System.cmd/3
Add --color option description to mix moduledoc.
Inline common map cases in into
Do not repeat the module name
Optimize common flat_map_reduce paths
Add missing :ok return
Invert the order of non matching token messages (closes #2993)
Improve error message when using attributes inside match in module
Set MIX_ARCHIVES in mix tasks archive tests
add missing assert call
Ensure mix compiler is able to handle nested directories
Ensure ExUnit survives inspect and exception message failures
Failing test demonstrating ExUnit crash on inspect failure
Remove broken and unfixable delegate_locals_to implementation
Improve IEx helpers docs
GenServer docs fix: missing {:ok, state, :hibernate} for init callback
Count \\ as just one character in column info in tokenizer
Support safe: boolean option in inspect
Store tests in a list to keep ordering
Change location info format in tokenizer
Add column info in tokenizer, #2987
Update CHANGELOG
Don't go through hex.pm API server to install Hex
Remove "private structs" from struct types
Keep original stacktrace on inspect errors
Compile docs to doc/
Specify error from node/1 as an atom
Document the implications of setting embed_elixir to false. Closes #2970
Check Elixir version right after archive installation
fix spec for Integer.digits/2
make doctest syntax consistent
Remove unnecessary Integer.parse/1
Integer.parse/2 shouldn't parse when base is not an integer
Use a guard to check if a valid base is given to Integer.parse/2
Implement Integer.parse/2
Do more strict matching on URI scheme
Copyright requires just the starting year
Further improve URI parse docs
Improve docs for URI
Keep .gitignore ordering
Optimize reduce for maps
Add cover directory from 'mix test --cover' to default .gitignore
smart_engine: Rephrases doc
fix typos
this resolves #2952 compile error
improved performance of Integer.undigits/2
Only shut down Logger if the application is being actually started
Improve `Enum.reverse_slice/3` performance More than thrice for lists Around 35% for other collections
warning about dumb terminal just irritates users
require otp 17.3 to pass on travis
Add `@spec` for `Enum.reverse_slice/3`
Improve test coverage for `Enum.reverse_slice/3`
Use actual range in the `EnumTest.Range`
Remove test duplication
Improve loadconfig docs
Add Enum.unzip/1
Optimize and also add completion for Erlang modules
Always use the loaded application modules
load modules from load path
Add support for --werl in Windows bash-like shells
Remove dead @doc snippet
Use same verb tense across Elixir documentation
Simplify color sequences definition in `IO.ANSI`
No need for default `code` arg in `IO.ANSI.Sequence.defsequence/3`
Improve Mix doc intro section
Remove empty/1 callback from Collectable implementations
Document `\g{N}`
Add `\g{N}` for &Regex.replace/4
Enum.sample/1 should raise if the list is empty
Improve IEx autocomplete implementation
Improve archive error on Windows
remove unnecessary prefix
fix documentation for Record Types
Update CHANGELOG
Clean up IO.ANSI.Docs handling of `
Register test with duplicate names only once
Use IO.ANSI.format/1 for escaping mix shell messages
Add test cases for non-space delimiters
Execute tests with same name
add more test cases for in word symbols
fix corner case for end detection
add 17.3 to allow_failures section
Use the new build env on Travis
Add Integer.undigits/2
introduce Enum.reverse/3
fix typo
Update documentation for Enum.join
More spelling and grammar fixes.
Introduce an implementation of Integer.digits/1
Delegate to :erlang.binary_to_float on Float.parse/1
Update CHANGELOG.md
Raise on previous alias warning expansion
Add @spec for `main` in escript
Remove unnecessary binding
Add Enum.minmax and Enum.minmax_by
Clarify \x applies to unicode codepoints
- adding example for float-32 - making it more clear that ther order of type options doesnt matter
Ensure compilation does not leave random spurious data on failure
Add number of skipped tests to ExUnit output
Document --unlock flag in deps.clean
Drop unneeded functions and fix module_name_to_command conversions
Make map_reduce @spec stricter
Add doctest to the test template
fix broken link in GenServer module
Don't show hex update message on mix local.hex
fix wrong CRLF grapheme
correcting broken url in GenEvent docs
Make IO.ANSI.Docs readable on white background
rename two identical variables to same name and remove guard
Move same pos match to the function head in `Regex.apply_list/5`
Move 0 index match to the function head in `String.split_at/2`
fix doc line's length and test one more time
fix mistake on test
bypass warning
explains when to use Float.parse/1 and that String.to_float will not deal with integer fmt strings
fix wrong String.at/2 output when second arg is not an integer
fix wrong String.split_at/2 output when second arg is not an integer
fix floating point approximation error
fix typo
fix inline documentation because of broken ansi representation in iex
Improve documentation of Dict module
fix spec and add more test for String.duplicate/2
fix documentation of String module
Correct Enum.take, Enum.take_every, Stream.take, Stream.take_every to accept proper nth/count values
link to docs.html
improve important links
No need for `do_` prefix in `String.do_justify/4`
Move string justification defaults to the function heads
complete test coverage for Stream.take_every/2
should throw an exception when the second argument is negative
fix typo
Create directory before copying file
Use elixir tmp directory instead of /tmp, closes #2849
fix typo
change some doc examples to iex style
Replace `defstruct/2` with `defstruct/1`
Highlight main logger level config
fix escaped terminatiors in sigil
spelling mistake in iex docs: dafailt -> default
More updates to instructions
Update release instructions
Fail to compile try without else/catch/after/rescue, closes #2797
Improve token errors for aliases, closes #2818
Unify error reporting from EEx, closes #2833
Properly handle eval_failure warnings, closes #2835
mix.ex: example "mix run hello" -> "mix hello"
explaining #elixir-lang (better option)
explaining #elixir-lang
fix link to bug reports
List foldl, foldr @doc
Use a not confusing example for String.grapheme
correct is_nil @doc to have the same format as the other is_* functions. So it is consistent in the Kernel > Summary docs
Use unamed tables for module compilation
fix typos
Revised tests to use tmp_path for file paths.
Update CHANGELOG
Do not set not shell as we know have a custom prompt
set null prompt function in dumbterm mode
fix typo
No longer inline binary expressions in EEx
Revert "Based on email from Paulo Almeida, I removed the apparently extranous calls"
Based on email from Paulo Almeida, I removed the apparently extranous calls to IO.char_data_to_string in the stat! and lstat! methods.
Added File.lstat and File.lstat! functions and associated tests. These functions are elixir versions of the unix lstat function.
Make the parameter more explicit
Added :read_link option, doesn't break current tests, needs new tests
 Add OTP 17.3 to run on Travis CI
Remove unecessary comment
Build .beam location from scratch on mix compile.elixir
Add task for pushing standalone mix
--elixirc-paths should be a subset of project paths
Write to manifest when file is removed
Support mix help --search PATTERN
downcase path comparison in application directory test
Test that we do purge and delete artifacts
Also purge and delete during tests
Purge and delete modules before compiling them
Refactor and add new rewrite rules
Don't crash on malformed proxy env var
Give higher prio to powershell on windows
Make some docs more gender neutral
Send elixir version as parameter when installing hex
Define value before using it
Introduce `StringIO.flush/1` function
Move printing out of copy_path, always create dir
Do not pass false into port command
Also remove elixir_exp from stacktraces
Remove :elixir module from stacktraces
:gen_event_EXIT can only be successful reasons for process handlers
Change implementation of System.cmd to match the docs
Test the way System.cmd finds for executables
Add copy_path! instead of read_path!(..., file: ...)
Bump Hex requirement
Report correct location if local.hex failed
Add MIX_ENV output to archive.build
Improve stat docs
Documented File.stat options
Remove previously generated beams before installing new ones
Improve GenEvent docs
Filter out :elixir_lexical from stacktraces
Change version requirement to be MAJOR.MINOR
Update release instructions
Small fix for Application docs. Returning value is not a tuple
Add compatibilty with OTP 18 typespec changes
Ensure Mix.Config is deep merged
Include stracktrace on ExUnit timeouts
Update CHANGELOG
default ports for WebSocket
Add tests for add_process_handler/2
Load dependencies before deps.check compiles
Allow U (upper case u) as an option for sigil_r
Add U as ungreedy option, soft deprecate r
Do not require {ref, :done}, instead allow sync removal
fix example sample.ex -> sample.eex
Ensure chunk/4 is haltable
fix previous commit typo bug
Improve UndefinedFunctionError
Start v1.1.0-dev
Release v1.0.0
Remove broken List.unzip
Document and test Logger functions return :ok
Update CHANGELOG
Add Logger.enable/1 and Logger.disable/1
Add integer guards around Enum.fetch/2
Remove support for inner swap_handler
Properly document Task.Supervisor options
Remove deprecated code
Start v1.0.0
Release v1.0.0-rc2
Add free operators
Return the proper exit code from powershell
Raise if status code != 0 and use non-verbose modes
Bump Hex requirement
Add file exists check on windows when installing archive
Fetch Hex with wget or curl
Ensure we don't look up inexisting variables for default args
Update CHANGELOG
Lowercase drive letters from cwd, closes #2747
Make the regex type non-opaque
Test :sys functions with GenEvent
Tidy up GenEvent docs and test suite
Deprecate monitor option in GenEvent
Move from already_added to already_present
Do not wrap process handlers in a tuple
Move from module_not_found to the more generic handler_not_found
Allow only one process handler per process
Leave clause in case the handler can fail
Remove deprecated branches
Do not consider handler swap to be failures
Tag all doctest tests
Don't check for race conditions with dialyzer
Update CHANGELOG
Default max_restarts to 3 (closer to Erlang)
Improve iex error message
#2744: Ensure Path.relative_to is case insensitive on the drive letter
Document how to obtain a custom instance of Macro.Env
Introduce new operators intended for use by parser combinator libraries.
#2737: deps.unlock should warn when given missing dependency
Typo fix
Correct documentation for proper grammer.
No commas in deps.unlock
Update Logger mode after configuration
Friendlier unquote_splicing error with hints
Start v1.0.0-rc2
Release v1.0.0-rc1
Add tests for sync_threshold
Get rid of Logger timeout config, closes #2724
Document that @compile accumulates.
Straight up and unify impls of clean, deps.clean and deps.unlock
Print process mailbox on failing assert_receive
Format multiline AssertionError message with correct padding
Make do_surround_many private on Inspect.Algebra
Normalize is_guard checks
Update CHANGELOG
Deprecate x.Alias syntax
Remove warnings from the test suite
Add version checks and proper error formatting to escripts. Closes #2709
Ensure we tag the destination when compiling through mix
Add missing fixtures for escript test
Demonitor and flush when appropriate
Add timeouts to ExUnit, closes #2660
import_config/1 now accepts wildcards
Update CHANGELOG
Remove code duplication on watcher
Use to_string when possible on Logger.log
Allow configurable timeout and catch exits on logger
Do not crash the caller when Logger is not available
Add protocol consolidation support to escript.build. Closes #2699
Purge in memory in modules before consolidating, closes #2700
Ensure we automatically load deps on compile
Mix should not depend directly on Logger
Always compile project if task cannot be found
Update CONTRIBUTING.md
Use common code for Elixir and Erlang escripts
Use task start to get better reports
Add Task.start/1 and Task.start/3
Add a small note to UndefinedFunctionError when the module is not available
Update CONTRIBUTING.md
Don't print the underlying type for @opaque
Wrap erlang macros in ()
Move elixir.hrl to src/
Better error message on nbsp
Rename :add_stream_handler to :add_process_handler
Document alias arguments
Remove duration from GenEvent.Stream
Allow gen_event_EXIT notifications to be disabled for streams
Include makefile in precompiled zip
Improve error message for invalid typespec
Make tests that remove the logging backend sync
Update CHANGELOG
Split GenEvent.Stream into its own file
Also tag notify messages
Make the mode a property of the sender
Ensure Logger watcher monitors event manager
Document the :language setting
Update docs
Document lack of guaranteed on monitored handlers
Ensure proper whereis expansion
Do not add duplicated handlers
Implement some of fishcakez feedback
Improve coverage for GenEvent
fix doc typo in Macro.expand/2
Support building Erlang-based escripts in mix escript.build
Do not pre-compile a project if an alias was found
Only add :elixir application for Elixir projects in compile.app task
Properly handle compilation errors in Erlang compiler
Deprecate Collectable.empty and Enum.traverse
Use the new resource acc on GenEvent.stream/2
Make Stream.resource/3 more like Stream.transform/2
Using autocomplete for function discovery
Improve Logger formatter defaults
Use monitored handlers instead of linked ones
Update docs
Port GenEvent to Elixir for upcoming extensions
Talk about correctness first, performance later
Port the :gen_event client API to Elixir
Add --force option to 'mix local.rebar'
Ensure load_tasks return no duplicates
Output mix version on 'mix -v'
Improve error message for undefined struct
Use GenServer when possible
Minor unquote/1 doc fix.
fix --no-color / --color option for `mix test`
Do not inherit bugs on GenServer calls and casts
Make a distinction between eol and ;
Clarify match?/2 docs.
No need for `Stream.` prefix
No need in some purges in `Kernel.WarningTest`
Use quotes to avoid space-in-path issues with cygpath
Ensure code escape \ works in IEx
Start v0.15.2-dev
Add special case for lists in Stream.cycle
Clean up interval/1 and timer/1 docs
Add Stream.interval/1 and Stream.timer/1
Release v0.15.1
Update CHANGELOG
Bind value to proper name in `elixir_tokenizer`
Ensure elixir and iex works on MinGW
Check for terminal on both stdout and stderr
Check for terminal support from Elixir command line
Also support :sync mode in GenEvent, make :ack one the default
Deprecate functions as collectable
Reply to GenEvent manager from stream right away
Ensure aliases are invoked for recursive tasks
Leave it to the application to start Logger after compilation
Accept more forms of git versions
Suppress "-s elixir start_cli" for IEx
Set -noshell on bin/iex
Prepend -noshell and friends always within Cygwin
Improve translator formatting
Makefile: shorten tip about Unicode embedding time
Update CHANGELOG
Load handlers inside supervisor as they are now dynamic
Copy and check elixir version in archives
Update configure_backend docs
Persist calls to add_backend and remove_backend
Added @doc false to handle_info function
Print warnings when used ? with characters with escape codes
Create the config directory before writing to config file
Load config/config.exs into escript
Add Logger.flush/0
Deprecate Module.function/3
Do not raise conflicts on imports used from quotes, closes #2589
Do not allow invalid quoted expression to leak
Ensure we can escape bitstrings, add Macro.validate/1
Make environment explicit on escript build
Improve Logger's SASL report translation
Improved RFC compliance for URI to_string
Ensure backends receive the id when added, closes #2635
Update CHANGELOG
Correctly follow code specs when loading binaries
Add the Windows wiki link to the README
Add tests for SASL report logging
Add SASL log forwarding option to Logger
Use `not` instead of `!` in `IO.ANSI.enabled?/0`
Remove Windows-related CONTRIBUTING.md section (now in Wiki)
Support  on log messages
align the messages between log messages with different length level text. Added an extra format $levelpad, which is a space if the level is "warn" or "info"
Doc correction for GenEvent
Use the Logger PID to avoid race conditions on shutdown, closes #2628
Do not expand args for unknown functions, closes #2387
Update Mix.Dep.Lock documentation
Load mix deps only when there is a need to use them
Enum.sample/2: dedup code in reducer branches
Update CHANGELOG
Remove documentation from defimpls
Since IO.ANSI.enabled? is a fast operation, no need to prefetch it on IEx
Add integer base support to inspect
Implement flag to clean unused dependencies
Reuse pathtype detection in `Path` module
Improve IEx docs about .iex.exs
Do not normalize paths on join, closes #2500
Remove deprecated code
Start v0.15.1-dev
Release v0.15.0
Print a nice prelude if we fail to load a project, closes #2430
Use Mix.Shell.printable_app_name
Push the given app name as default on Mix.Project
Bump hex requirement
Add a test case for printing samples on IO shell
Print app name on Mix.shell.cmd/1/2
Print app name before compiling Makefile deps
Avoid race conditions in the struct detection
Improve mix new error messages
Validate app and module on mix new
Allow `elixirc_paths` to also be given through the command line
Accept upcoming hex formats
Ensure defoverridable is not order dependant, closes #2615
Do not load mix.exs for mix deps coming from hex
Ensure IO.ANSI.Docs can correctly fill missing columns
Speed up and calculate effective length after rendering
Add basic support for markdown tables to built-in formatter
Quote bash comparison arguments
Reduce limit as we traverse collections on inspect
Add logger to the list of elixir apps for escript
Use Command Prompt for stdlib test on Windows
Inspect.Algebra.surround_many/6 now expects Inspect.Opts
Handle tilde in `Path.expand/1,2` properly
Add Agent MFAs
Move children decision down the tree so we don't ignore umbrella children
Only print req mismatch for dependencies on compile
Deprecate IO.ANSI.terminal? and tidy up colors
Ensure log configuration triggers a restart
Add flush to Logger.add_backend/2
Remove warnings from the test suite
Optimize IO.ANSI.format/2 by avoiding remote calls
Add ANSI support to console logger
Improve docs for Logger
Update CHANGELOG
No more binding with a list
Enum.sample: use Tuple.duplicate for sample init
Add Logger
Provide :on option for Regex.split/3
Deprecate IO.ANSI.escape/2 and IO.ANSI.escape_fragment/2
Ensure no lock for rebar dependencies, closes #2561
Add OTP 17.1 to run on Travis CI
Always touch all marked dependencies from deps fetcher
Do not consider subpatterns on Regex.split/3
Update CHANGELOG
Deprecate octal and upcase char syntaxes
Remove duplicate test
Update gen_server.ex
List crypto, compiler and syntax tools as dependencies, closes #2593
Ensure private functions are not exported, closes #2587
Do not expose protocol convention on assert_impl!
Update CHANGELOG
Do not leak Stream representation
Remove IEx warnings
Remove escript from elixir app
Do two separate :io.setopts calls
Add new --werl option
Suppress "dumb terminal" warning
Use start to spawn werl without lingering cmd window
Use setlocal/endlocal to prevent polluting user's environment
Added @doc false to terminate and code_change
Update Elixir's mix.exs to fix escript.build
Update mix's mix.exs to fix escript.build
small evaluator refactoring
use os.timestamp for setting random seed in doc examples
fix Enum.sample docs
Added @doc false to handle call
test Enum.sample with different random seeds
don't walk the collection on 0-sized Enum.sample
eliminate count>=n corner case in Enum.sample/2
guard for Enum.sample/2
Enum.sample using reservoir sampling
Parse unary/binary operators regardless of number of spaces
allow lowercase http(s)_proxy env var
Docs: change Dict.merge description to read more naturally
Docs: ensure docs for Dict use full variable names
Fallback to no tab expansion if not supported
Remove bug where access/update was incorrectly filling values with maps
Exit on GenEvent call, move stream to its own module
Reimplement IO.ANSI do_format
Add test case for nested improper lists
Add docs to format/2 and format_fragment/2
Put IO.ANSI.reset inside a list before concat'ing
Implement IO.ANSI format/2 and format_fragment/2
Improve config.exs docs
Trigger rebuild in Makefile for io/ansi/docs.ex
Change IO.ANSI tests to assume chardata is returned
Bring back original tests for IO.ANSI
Avoid unecessary wrap inside do keyword
Rewrite IO.ANSI tests to match new behavior
Provide Inspect.Algebra.format/2 that returns iodata
Allow --app flag to be passed on mix new
Revise mix.ps1 to use FileInfo object to represent path, modify $args directly
Skip additional refutation due to code server file handle on Windows
Optimize rstrip for ascii chars
Add OptionParser.to_argv/1
No longer allow empty access as in [][]
Use john and meg in code samples
Update CHANGELOG
Clean up String.slice/2/3 impls
Do not traverse the string twice in String.slice(<str>, <range>)
Remove invalid return values from GenEvent.handle_info/2 docs
Also allow structs atoms on Map.from_struct/1
Added Map.from_struct/1
Ensure all elixir dependencies are started before hand, closes #2542
Remove non-existing from argument from handle_cast
Call Mix.start, Mix.CLI.main directly in bin\mix.bat
Update doc for GenEvent.stream/2
Improve description of operations that takes linear time
Add linearity notes to Enum.fetch and friends
Optimize String.slice by using binary_part
Insert new line after IEx clear message
Updating System.cmd return types
Ensure type_to_signature works for all AST variables
use pure erlang function to judge the erlang version, no shell.
Ensure functions in `Kernel.SpecialForms` and `IEx.Helpers` are also auto-completed
Update bitstring syntax in base.ex
Remove deprecated features and deprecate soft ones
Clarify the consequences of using System.at_exit
Clarify release instructions
Start v0.14.4-dev
Release v0.14.3
Update CHANGELOG
Optimize and improve docs for Float operations
Clarify attributes and exit signals in the language
Add typespec syntax for records
Allow expansion of local macros via Macro.expand/2
Add compile time optimisation to record fields macro
Add precision to Float.ceil/1 & Float.floor/1
Update docs and CHANGELOG
Document and list aliases on help --names
Support aliases in Mix.Task.run/2
Add field retrieval of records via `record(record())`
Make sigil doctests more readable in the source
Optimize and add specs to Mix.Task module
Warn and reset mime on future files
Only read mtime once per source file
Clarify elixirc_options are overridden via CLI
Use Keyword syntax instead of list check
Add OptionParser.split/1
Don't keep all in the option parser config
Update changelog
Only accept --no-SWITCH for booleans
Do not remove interpolation escape on uppercase sigils, closes #2512
ErlangError -> CompileError
Manually call check_command before eval, closes #2449
Improve cannot pipe error
Use sigil syntax in Macro.to_string
Require Record before in defrecord samples
Add performance note to String.slice/1
Mention app: false on no app error
Use short filenames to handle spaces in path to bin\mix
Do not allow deps names on mix deps.get
Do not call handle_file_warning directly
Make elixir_errors API more strict and consider :file in meta
Emit :file attribute on all nodes instead of a select few
Use line from :keep when there is a :file meta in definitions
Update CHANGELOG
Slightly improve IO docs
implement IO.(bin)read which accept `:all`
Add comments to code:ensure_loaded/1 snippets
Ensure we don't loop when printing inspect failures, closes #2503
Clarify behaviour of split on Windows
Ensure deps are not recompiled every second time, closes #2471
Improve mix docs
Use a native splitting on String.split/1 instead of relying on regexes
Emit warnings for underscored variables appearing twice in a pattern, closes #2480
Rename Mix.Shell.info option :escape => :ansi
Shell info messages can still be escaped
Ensure the message is not ANSI escaped
Ensure docs with no function raise warnings
Check if ANSI escape codes are enabled on IEx's clear, closes #2441
Add test cases for ExUnit.DocTest failures
throws error for missing docs in DocTest
Ensure case wrapper in cond gets the proper line
Return explicit :ok from more functions
Always return ok from tracking functions
fix range typo
Store stacktrace before invoking callback function
s/file/function in IO docs
Add a note for binary_part/3 on String.slice/3
Consider multiple @external_resource entries in mix
Add a note about IO.bin*
Re-add deprecated local tasks
Do not crash if applications are already started
Ensure line numbers are properly preserved in EEx, closes #2485
Update CHANGELOG
Add Mix.compilers
Pass a list to :error_logger
Improve typespecs for protocols once more
Improve more typespecs
Improve poorly specified callbacks
Do not include unreachable locals
Update plt in .gitignore
Refactor how definitions are analyzed
Ensure yanked locals are added back with all nodes, closes #2188
Improve some typespecs
Update CHANGELOG
Convert existing bitstring examples to new syntax
New bitstring syntax, closes #1950
Ensure mix preserves -pa and -pz given to the command line
First deprecate types in struct fields
Add shorthand syntax for `nonempty_list()`
Improve typespecs and docs
Mention MIX_ENV on compile.protocols
Umanbiguous check for parameters
Process Erlang commands last
Use absolute symbolic links on windows
Raise on multiple clauses with default arg
Remove default generation of `@type t` for structs
Rename escriptize to escript.build
Deprecate embed_extra_apps in escriptize
Inline functions in Port module
No longer fill in missing intermediate values with empty maps in Access
Improve error message for struct expansion in invalid contexts
Allow functions in get_in/2 and get_and_update_in/3 (#2470)
Bug fixes on windows for buggy 17.1
Deprecate lists in find_executable/1
Update CHANGELOG
Use binaries so we can use Elixir functions
Use the new System.cmd/3 in stdlib and apps
Add System.cmd/3, closes #2251
Remove wrong usage of exit(0|1)
Use iolists in collectable for binaries
Also use exit({:shutdown, 1}) on mix test
Use exit({:shutdown, int}) to signal shell status
Move local.install and local.uninstall to archive.*
Run command line and escripts in a new process without trap exit
Remove duplicated specs and old PR example
Pull reused test data into variable
Improvements to the operator table
Update (soft) deprecations
Improve <<>> docs
Match test lines by proximity, closes #2450
Start v0.14.3-dev
Release v0.14.2
Update documentation on Kernel.var!/2
Add @spec for Enum.sort_by/3
Add @doc for Enum.sort_by/3
Enum.sort_by/3
Bump Hex version requirement
Use iodata_to_binary in join/2 and map_join/3
No need to reverse a list when building an iolist
Update CHANGELOG
Change precedence of & to not special case /
Remove usage of :filelib functions
Add @external_resource attribute, closes #2455
Also filter out .ps1 files
Add MIX_ARCHIVES env variable
Enum.join/2 and Enum.map_join/3 now uses iolists
Ensure we can only use variables and `\\` as arguments of bodyless clause, closes #2374
Document the role of MIX_HOME more explicitly
Ensure we show a consistent error when we cannot evaluate .iex.exs
Remove --gen-debug option
Soft deprecate Mix.Generator.from_file/1
Update CHANGELOG
Raise CondClauseError for cond clause mismatch
Make cond a special form so it does not leak vars on head
Simplify .git directory check
Error if git executable is not available
Remove `git rev-parse` check for valid .git directory
Soft deprecate EEx.TransformerEngine and EEx.AssignsEngine
Update CHANGELOG
Sigils no longer balance start and end tokens, closes #2284
Ensure derived protocols are defined with a file
Registered name returns an empty list, as in Erlang, to avoid ambiguity
Convert build_info to a map
Support paths inside archives in -pa and -pz options. Closes #2442
Only set encoding when there is noshell, closes #2432
Do not set -noshell if we are going to override it afterwards
Remove a stray XML tag from the path docs
Improve docs and defaults for File
Use mfa when starting remote nodes so it works with any elixir version
Cleaning up IEx.Helpers.Flush warning
Update escript options: :name, :comment, :emu_args
Let `URI.parse/1` work with `%URI{}`
Do not expect options to have a certain format in the environment
workaround 'epmd -daemon' not working on Windows
Add extra Path directory, remove PowerShell warning
Set :proc_lib initial call on task
Check if Makefile.win is available before running nmake
make manager calls nmake /F Makefile.win on Windows
Delay typespec compilation to after expansion
Remove previously deprecated behaviour
Start v0.14.2-dev
Release v0.14.1
Update CHANGELOG
Start epmd, clean up warnings
Improve GenEvent.stream/2 cleanup
Ensure handler does not get stuck and properly clean up mailbox
Add GenEvent.stream modes and make it sync by default
Work around and document for mix test on windows, closes #2375
Attempt to start epmd before running tests
Update to Unicode 7.0.0
Attempt to fix race condition on test by depending on last compiled file
Add Node.start/3 and Node.stop/0, closes #2406
Apply uniform capitalization and punctuation rules to all lists
Improve task log based on @fishcakez feedback
Deprecate previously soft deprecated conversion functions
Update CHANGELOG
Remove deprecated on_exit callbacks
Do not match files starting with . in Path.wildcard/2 by default
Make `URI.encode*` to work only with binaries
fix typo in docstring of Enum.at and Enum.slice
Add missing backticks
Improved match and guard
Add normalize dispatch for Windows volume letters
Reformat unordered lists in all docstrings
Ensures Enum.slice always returns a list.
Properly indent tables
Ensures String.slice returns a string.
Add deprecation warnings for old escript options
Put escript options under :escript in the project config
Add options for which case to use in Base functions
Bump hex version requirement to 0.2.5
Clarify quote docs
Improve compile.protocols docs and make it public
Remove get_in/1
--quiet is no longer supported
Do not tag mix exceptions if in root project
Ensure we can measure a timestamp difference on tests
Ensure umbrella is recompiled when a child dependency changes
Rely on print_app for mix deps.compile and ensure path deps are compiled
Update CHANGELOG
Log when tasks go down
Introduce `URI.decode_www_form/1` function
Introduce `URI.encode_www_form/1` function
Do not warn on case template teardown/teardown_all definition
Disambiguate (w)erl to (w)erl.exe
Make test and test cases exit with reason :shutdown
Do not allow underscores in option names. Closes #2391
fix typo in `mix help new`
Ensure mix test print app name for umbrella
Remember users umbrella deps are not shared
Improve docs for URI
Introduce `URI.encode/2` function
Make `URI.encode/1` to conform to RFC 3986
Improve function naming in `URI`
Guarantee we get a keyword on mix deps specs
Remove previously deprecated code, enable new deprecations
Update Access docs, closes #2388
Kill test process only after on_exit runs
Update IEx.pry documentation
Start v0.14.1-dev
Release v0.14.0
Do not support Macro.var/1
Update CHANGELOG
Deprecate var!(:atom), add Macro.var/1
Make the exit conditions for GenServer/GenEvent/Supervisor clear
Support --config on mix run
Allow mix loadconfig to be called multiple times
Migrate from size to byte_size and tuple_size
Provide Protocol.derive/3
Soft deprecate size/1
Support E in scientific notation for floats
Avoid race conditions on ExUnit test suite
Grammar fix.
Initial PowerShell script addressing mix commas
Get rid of Mix.Sup
Deprecate teardown and teardown_all
Also support on_exit on setup_all
Move on handler functionality to its own module
Only import select functions from Mix.Config
:eaccess becomes :eacces
Remove dependency on manifest files
Clean up Path and Task code
Add tests for Path.expand("/") to be "/" (the issue is already fixed).
Tidy up previous commits
Add http and https proxy options
Corrected octal/decimal handling
Added rm test for read-only files
chmod does not require conversion of bases
Revert "EEx tests aware of CR+LF newline on Windows"
File.rm makes files writeable on Windows before deletion
Support on_exit for registering callbacks in ExUnit.
Add a CHANGELOG entry to task change
Do not catch failures on tasks
Revert "Set up the monitor only on await for tasks"
Add guard to impl of Enumerable for Function
Add missing |> Stream.run/1 to its documentation
Document the additional `--names` argument that `mix help` can take
add test for `mix help --names`
combine loops
enable passing --names to `mix help` to only display command names
Improve formatting
Use new Mix.Config in generated files
Define Mix.Config
Provide Mix.raise/1 that attaches mix info to Mix exceptions
qualify that PowerShell doesn't work yet
Set up the monitor only on await for tasks
EEx tests aware of CR+LF newline on Windows
Raise if giving non-keywords to Keyword
Make available_compiler_options public and improve error message
Improve protocol docs
Add get_and_update_in/* ops and update CHANGELOG
Require get_and_update/3 instead of update/3 in Access
`supervise` vs. `supervisor`
import happens already with `use Supervisor`
Small typo
Mix.CmdTest, Mix.ShellTest and Windows newlines (take 2)
Defined os_newline in test_helper for Mix
Test and assert valid paths
Mix.CmdTest, Mix.ShellTest and Windows newlines (take 2)
Mix.ShellTest aware of Windows newline behavior
Mix.CmdTest aware of Windows newline behavior
Add get_in/1, put_in/2 and update_in/2
Do not allow custom compiler options
Add get_in/2, put_in/3 and update_in/3
Add Access.update/3
Mix.Project.build_structure test asserts according to symlink_or_copy
Mix.CLITest redirects stderr to stdout for testing on Windows
Mix.Utils.build_project returns :ok always
`mix new` no longer generates a supevision tree by default
Write consolidated files to _build
Update CHANGELOG and fix tasks printing
Add protocol consolidation with mix compile.protocols
fix documentation of `:timeout` option in `start_link/2`
Escape invalid characters in the docstring for String.chunk
Add docs for @derive
Ensure variables do not leak on callbacks
No need to name the agent
Update repo links
Generate docs per app
Improve IEx description
Convert Mix.Tasks.Compile.Elixir.ManifestCompiler from a GenServer to an Agent
Instructions for contribution from Windows (first draft)
Initial work on @derive for structs
Remove deprecated quote options
Convert Mix.ProjectStack from a GenServer to an Agent
Convert Mix.TasksServer from a GenServer to an Agent
Move Protocol consolidation up to the Protocol module
Mark trie structs as private
Update CHANGELOG
Remove wrong record wording
Remove duplication on utils test assertion
Add String.chunk/2
Enable previously set deprecations
Remove deprecated records
Get rid of Kernel.access/2 in favor of Access.get/2
Simplify beam writing mechanism
Consistent naming of the “Name Registration” section across docs
Proof-read GenServer docs
Proof-read Supervisor docs
Start v0.14.0-dev
Release v0.13.3
Change Stream's struct to just %Stream{}
Update tests that need to read module docs to write BEAM code to disk
Preserve docs chunk during protocol consolidation
Add version tag to Elixir’s beam chunk
Add Code.get_docs/2 function
Remove :docs and :moduledoc clauses from the __info__ function
Mix.Utils.symlink_or_copy: return types for copying and corresponding tests
Do not allow keyword on containers without pos args
Ensure config/config.exs is really persisted
Mix.Utils.symlink_or_copy always copies on Windows
Update CHANGELOG
Remove unused reduce/3 from map
Ensure doctests failures are properly tested
Change help heading on mix
Do not install rebar bundled with elixir
Deprecate Dict.Behaviour in favor of Dict
elixir.bat fixed to prevent eating quotes
elixir.bat only triggers help at first argument
Proof-read Agent docs
elixir.bat defers to mix for handling help options
Exit with proper test code on test_erlang, closes #2313
Update CHANGELOG, fix tests and typespecs
\d is a printable character
Mix.CLITest: explicitly declare environment variables (Windows-friendly)
Mention removal of String.to_char_list! in the CHANGELOG
Return invalid options as strings
Bump Hex requirement
Always return nil for undefined options (#2308)
Do not assume invalid options are of boolean type
Add tests for non-existent file errors in mix run
Report errors about missing files in the mix run task
Parse "-" as a plain argument
Ensure we don't leak erlang terms on failure, closes #2303
(Soft) deprecate set_elem/3 in favor of put_elem/3, closes #2259
Support :strict option on parse and improve return types
Description for mix test --seed option
Unify mix run tests
Trailing whitespace.
Make the title in the Readme generated by mix new more prominent
Speed up CLI tests by avoiding booting Elixir
Tag wrong heredoc start as SyntaxError instead of TokenMissingError
Small fix in the run task tests
Refactor option parsing internals to support strict mode
Tentative implementation of the `next` function
Change `OptionParser` to remove the end of command options (`--`)
reraise should work like raise
Add links to LEGAL and LICENSE files in README.md
Remove inlist and inbits from keywords list
Update CHANGELOG
Ensure map_join also works for empty binaries
Disabling :hygiene in quote is deprecated
Do not allow nil context to be set on quote
Add Macro.prewalk/2/3 and Macro.postwalk/2/3
fix Enum.join for empty elements in the begining of the collection
Update record.ex docs, closes #2291
Reduce examples of disabling macros hygiene
Update CHANGELOG
Move binary and list conversions to String and List
Get rid of BitString module and bitstring conversions
Move Integer/Float conversions to their respective modules
More deprecations around tuples and records
Move List and String deprecations to new mechanism
Optimize cond expansion
Make deprecations compiler warnings
Add String.to_char_list and List.to_string
Add iodata_to_binary and chardata_to_string to IO
Add a test for mix config files
Do faster expansion on rewrites
Deprecations should go to standard_error
Improve docs for string, process and supervisor
Make exception specs match the ones defined in callback
Add typespecs for builtins, __record__, and __struct__
Add Atom.to_string, Atom.to_char_list and BitString.to_list
Deprecate defrecord/3
Remove dependency on Record.Backend
Reduce bootstrap list
Convert exceptions to structs
Prepare elixir_try to be able to handle upcoming map clauses
Disallow variables on the right side of in
Properly handle atom keys in kw_list_to_string
Update String moduledoc
Allow h +/1 as valid syntax
Remove warning from new applications
Small doc fixes for Keyword
Better docs and tests for Keyword.update and Keyword.update!
Remove unused import in elixir_translator.erl
Format OptionParser tests more nicely
Don’t ignore values for ‘--no-*’ options
Add more sanity-check tests for OptionParser
Properly handle non-boolean values for boolean options
core -> stdlib in makefile
Rename some Makefile targets. Closes #2274
List all soft deprecations that have become deprecated
Update exit signals in Exception to {:EXIT, pid}
Mention ERL_COMPILER_OPTIONS and rename ELIXIR_ERL_OPTS to ELIXIR_ERL_OPTIONS
Format EXIT signals consistently
Always filter children of remote dependencies
Deprecate code that was previously soft-deprecated
Remove deprecated code
Start v0.13.3-dev
Release v0.13.2
Bump hex requirement
Rename Application.format_reason/1 to format_error
Remove some cruft from Version and fix to_string/1
Improve contributing guide
Inline functions in the Tuple module, closes #2261
Support functions in Regex.replace/4
Update config.exs sample file
Reduce amount of noise on elixir manifest files
Tighten guards in Exception to avoid false positives
URI.decode_query returns a map, not a HashDict
Implement default split/2 for Dict.Behaviour
Add Mix.Config.persist/1
Added check to raise an error if escript_main_module cannot be loaded
Update CHANGELOG
Improve docs and code regarding ansi formatting
Allow mix/apps configuration via ~/.mix/config.exs
Print help when --help, -h, or /h are given on windows
Bring the multiple .iex.exs functionality
Use IO.ANSI.Docs to format mix help
Normalize IEx and ExUnit configurations
Initial work on config
Rename :application to Application and remove unused fixtures
Silence instalation process
Simplify binding implementation
Allow records without field default values
Update CHANGELOG
Convert ex_unit context to a map
Convert internal records to structs
Ensure proper @type is generated for dynamic struct
Only check for erlang release when copying .app file
Add a target to check minimum required Erlang version
Update travis badge [skip ci]
Ensure --cover works on umbrella apps
Ensure defrecord and defstruct executes its args
Convert doctest Test to a struct
Improve application error formatting
Convert ExUnit.Test and ExUnit.TestCase to structs
Implement default pop/2, pop/3, update/4, update!/3 for Dict.Behaviour
Soft deprecate is_exception/1 in favor of Exception.exception?/1
Update CHANGELOG
Use Exception.message/1 instead of exception.message
Improve docs for generated apps
Ensure aliases are respected on root, closes #2227
Use rebar hosted on S3
Rename symlink to ln_s according to File's convention
Create remote funs even in &mod.fun/arity, closes #2133
Hide module's location attribute
Removed superfluous 'be'
Do not throw/catch, instead use Process.info/2
Only print char lists if in the ascii range
Print all errors in case of missing files, closes #2239
Use Application.format_reason when formatting application exits
Rename format_message to format_banner
Rename format_reason to format_exit, make some defs private
Mention how generators in comprehensions can be used for filtering
Also support tuples in struct/2
Format exceptions consistently
Ensure IEx.pry works with iex -S mix test (--trace)
Define an Application module
Update CHANGELOG
Ensure --umbrella generates gitignore, closes #2237
Adds "Elixir" to check module availability naming list
Update use of deprecated :global option to use :parts
Use parts: :infinity instead of parts: 0 to split globally.
Add deprecation warning for :global in String.split/3
Deprecate :global in Regex.split/3
Add a soft deprecation entry to the CHANGELOG
Add Kernel.spawn_monitor and deprecate duplicated functions from Process
Make String.split behave more like Regex.split
Do not recompile the whole project when an .eex file changes
Consider only valid .git repos as checked out
Test git in dep folder to consider checked out
Add spaces in between |
Migrate records in mix to maps.
Deprecate Process.delete/0
Only load Hex if we are actually going to use it
Update erl version header in README
Convert Version.Schema and Version.Requirement into structs.
Convert Kernel.CLI.Config into a map.
Convert StringIO's state record into a map.
Convert Stream.Lazy into a struct.
Improve mix help deps
Report the test line on exunit errors
Convert Inspect.Opts into a struct
Add Exception.message
Soft deprecate Mix.project
Improve docs for Mix.Project
Ensure filters can compare aliases and regexes
Simplify exunit test name generation and update code samples
Ensure teardown failures are shown, closes #2222
Update CHANGELOG
mix deps.clean works accross environments, closes #2210
Remove unecessary .hrl macros
Convert #elixir_env to a struct too
Convert Macro.Env to a struct
Ensure we start a new evaluator in case the old one dies
Ensure string switches are not treated as booleans, closes #2218
Add a test to ensure Code.eval_quoted keeps stacktrace
Revert "Use esl package to get erlang 17.0 on travis"
iodata_size -> iodata_length
Revert "Convert StringIO to a struct."
Tidy up ExUnit.Filters docs
Move URI and Inspect.Algebra out of Elixir records
Convert StringIO to a struct.
Support line numbers in mix test, e.g. test/some/file_test.exs:12
Convert File.Stat to a struct
Disable ANSI on Windows
Improves macro expansion stacktraces, closes #2211
Properly format binary tokens on errors, closes #2144
Improve default args with multiple clauses error message
Do not call :io.columns on every inspect, closes #2036
Store relative beam paths in manifest
Ensure we cover compile modules before we start the app
Add comments to dialyzer work around
Ensure ranges are supported on right hand side of in
Make HashSet and HashDict structs
Update CHANGELOG
Convert Range to struct
Convert regexes to structs
Remove Mix.Dep unloaded in favor of a direct converger call
Extract hex functionality to common module
Convert remaining functions in System to rely on char data
Improve docs for IO devices
docfix: delete the extra 'the'
Rename the `args` variable to `attrs` or `opts` where appropriate
Do not wrap single lists in :__block__
Remove deprecated code, enable previous soft deprecations
Start v0.13.2-dev
Release v0.13.1
Don't load dependencies in remote converger
Check for the hex version on CLI start
Use proper message when replacing a package
Add top_level field to Mix.Dep struct
Allow remote converger to set children of dependency
Use esl package to get erlang 17.0 on travis
Don't mention default EEx engine twice; add a note about it in the code
Add mix iex
Ensure we only allow horizontal space in heredocs
Make more deprecations soft, update CHANGELOG
Improve message for rebar errors, closes #2189
Improve hex workflow
Revert "Allow overriding of undefined dependency SCM"
Make iolist_to_binary/iolist_size a soft deprecation
Pass the relaxed option when downloading rebar
Deprecate :env in project config and support MIX_EXS
Use project :description if one is available
Docfix: write error
Remove records from EEx
Remove records from IEx
mix clean works accross environments
Inline some map calls
Correct Enum.group_by/3 typespec
Add String.split_at
Move preferred_cli_env to a map
No longer support tuples in function_exported?
Do not add spaces after { and before }
Deprecate ListDict and access for lists with non-atom keys
Regexes are no longer unicode by default
Emit a warning if running on latin1
Macro.unpipe/1 now returns the pipe position
Also add a test for teardown failures
Clean up doc tests
Do not set +fnu by default
Ensure we properly raise on doctest failures
Update CHANGELOG
Tidy up some final changes regarding regexes and deprecations
`Regex.named_captures/2,3` returns a map of binaries <-> values instead of a keyword
:named -> :all_names
Deprecate "groups" in Regex
Remove some deprecated functions and add missing warnings
Update CHANGELOG
use 0.13 exunit exception in doctest
Start v0.13.1-dev
Release v0.13.0
Improve noscm error message
Allow overriding of undefined dependency SCM
Properly format and indent test output
Reject __struct__ field on struct/2
Clean up new formatter implementation
Spruce up the output format of ex_unit
Update example to use Map.put/3, accordingly with the last proposal
Proper error message for bad args to 'mix help'
Minor grammar tweak
Small grammar fix
Use smart shell for iex, and werl instead of erl
Use werl instead of erl when executing iex.bat
--app argument should be converted to atom
s/records/structs in protocols docs
Fetch if remote converger updated dependency lock
Accept :structs, :binaries and :char_lists as iex inspect options
Add a note about Enum.sort/2 stability, closes #2163
Document how ErlangError works, closes #2166
change some doc examples to iex style
use map_size guard, add test
fix matching on every map in Enum.into/2
Automatically define types for structs
Support maps in typespecs
Update release steps to rebuild build_info
Remove is_map/1 optimization that breaks reduce on structs
Properly set standard_error to unicode
Add Kernel.struct/2
Raise KeyError for now in map.bad_field
Tidy up new record API
Start new records API
Add a deprecation note to records, split deprecated modules
Make defstruct work on quoted expressions, closes #2156
Remote converger should receive and update lock
Update to Erlang 17.0
Document --no-deps-check rather than --no-deps
Document `--no-deps` on 'mix compile'
Add `handle_body/1` callback to EEx.Engine
`Exception.normalize/1` is deprecated in favor of `Exception.normalize/2`
Do not fill in stacktraces on protocol dispatch
Look text ahead on EEx do/end blocks instead of relying on buffers
Remove line and convert text tokens to char lists
Serve rebar without https, closes #2152
Allow queries in `mix local.install` URL
Do not reuse shell variables in IEx, closes #2149
Improve float docs
Improve docs for Macro.expand/2
Ensure tracing set default max cases to 1
Unify precedence of when, ::  and |
Remote converger should receive full dep struct
Show correct error if mix task could not be found
Ensure --help and mix help go through the same path, closes #2142
Support older gits in mix
Update CHANGELOG
Add Code.eval_file/2
Rename StringIO API to be more IO like (start -> open, stop -> close)
Added Base module implementing base encoding functions according to RFC4648
Update heredoc tests
Ensure doctests run as expected
There is no need to rely @on_definition callbacks to store tags
Ensure the same pid is not queued twice in the parallel compiler
Do not assert for all entries at project root, closes #2129
Revert "Use 17.0-rc2"
Use 17.0-rc2 no_auto_import compiler option
Use 17.0-rc2
Define a type for structs
IO.stream/1 isn't a thing, this fixes the example
List arg1, arg2 and so on in supervision tree sample
Revert "Add :app to dep opts"
Rename Mix.Dep test cases
Convert lock to a map
Improve docs for & and |>, closes #2125
Make Mix.Deps private and improve docs for apps and deps
Update CHANGELOG
Also raise proper error on keywords followed by numbers, closes #2091
Adds symlink to File
Ensure generated .app always contains core dependencies
Mention ArgumentError in Process docs
additional notes for Process.register/2 to highlight failure conditions
Add Process.send/3
Add --gen-debug
Remove reduce as a requirement from Dict API
Add :app to dep opts
Do not allow structs on Dict nor Set
Ensure do can be at the start of its own line, closes #2053
Update Node docs and CHANGELOG
add ping method to Node module
Add Enum.sum/1
Write tests for streams in append mode
Generate the applications list in new apps
Allow splicing of binaries with specified size
Update Mix docs
Bring v0.12.5 CHANGELOG
Remove duplication in IEx.History
Release v0.12.5
Convert Mix.Dep record to struct
Macro.to_string/1 should not treat `%` as binary op
Document dep option `:override`
Remote converger should run on all deps
Properly clean spurious entries in waiting list
Properly clean spurious entries in waiting list
SystemTest should be sync
Remove native checks and improve typespecs
Remove Enum deprecated code
Update dict and set types
Remove GenFSM
Deprecate GenFSM
Remove support to MIX_GIT_FORCE_HTTPS environment option
Remove support to MIX_GIT_FORCE_HTTPS environment option
Remove wrong traversable reference
Remove outdated test
Support :into with Collectable in comprehensions
Update CHANGELOG
Rename Traversable to Collectable
Rename Traversable to Collectable
WIP StringIO improvements
Update CHANGELOG.md
Ensure an after clause is generated only if required
Update char list samples in IO tests
Ensure an after clause is generated only if required
Use raw modes for File.write/2 and File.Stream
Add traversable to bootstrap
Add IO.Stream as well
Add File.Stream and Stream.into/3
Deprecate more functionality to be changed or removed in v0.13
Initial work on traversable
Support interpolation in keyword list atoms
Update CHANGELOG
Raise error if another capture_io process already captured the device
Compile project if a task via the CLI cannot be found
Inline System.stacktrace/0
Do not impose reduce/3 on Dict implementations
Add `Mix.Shell.prompt/1`
Update Gen_FSM example to be more explicit, clear.
Make the ParallelCompiler aware of missing structs
Ensure struct fields are properly escaped when injected into AST
Support :io.get_password in StringIO
Improve error message for illegal use of variable in map key, closes #2083
Add `:only` dep option to filter on environments
Add a __struct__ field on defstruct and ensure proper message on struct body access
Update CHANGELOG
Ensure we properly convert !(foo > bar) to strings
Ensure we only print a map as a struct if the keys match
Improve docs for EEx
Ensure structs can be used on pattern matching
Remove unecessary return checks from comprehensions
Properly indent StringIO examples
Send user-agent on archive downloads
Remove all old archives on local.* tasks
Update tests to reflect we no longer need to check for reserved types
Ensure undefined modules are reserved for future usage
Ensure argument to Keyword is a list
Verify that Mix.Tasks.* modules are tasks in 'mix local'
Guarantee HashDict.equal?/1 returns proper value when comparing subsets
Guarantee HashDict.equal?/1 returns proper value when comparing subsets
Properly indent chunks in System module
Typespec and allow char data in File functions
Properly @spec functions in Path
Rename iolist_* to iodata_*
Provide List.from_char_data! and String.from_char_data!
Convert File and IO to char data, use +fnu flag by default
Change the Path module to work only with char_data and always return binaries
Add RemoteConverger
Stream line getting started workflow
Add test case for  bug
Add test case for  bug
Start app after changing System.argv on 'mix run'
Start app after changing System.argv on 'mix run'
Remove unused .line field
Support `--only` for filtering when running tests with `mix test`
Add a note about capture_io stderr requiring async: false
Add defstruct and allow unquoting inside maps/structs
Remove section from Access to be deprecated
Properly document regex options
Properly normalize filters in ExUnit runner
Deprecate is_regex/1 and is_range/1
Remove deprecated code
Update CHANGELOG with ListDict soft deprecation
Deprecate is_regex/1 and is_range/1
Add _ = EXPR to the list of expressions that can handle no return
Add try/case/receive to list of constructs that can handle returns
Support end-of-line backslash in quoted expressions
Do not accumulate results in comprehensions if they won't be used
Update Macro functions to support maps
Add `System.delete_env/1`
Ensure that dep compilation doesn't error on elixir req mismatch
Configure ExUnit before requiring test_helper
Start supporting no return in expressions
Add a test to ensure setup_all doesn't choke on errors
Correctly report test setup errors and dont run tests
Ensure variables can be defined in comprehensions
Minor style changes
Add support for Enum.group_by/2.
Soft deprecate bc and lc
Do not recognize undefined aliases as switches
Migrate from bc to for comprehensions
Start migrating lc to for comprehensions
Support :into in for comprehensions
Forbid bit generators without size in comprehensions
Support binary generators
Ensure structs can be access from context modules
Only access public __struct__ function
Add map access
Made Mix.Utils.camelize handle empty string
Make Mix.Utils.Underscore accept .'s and empty args
Made Mix.Utils.camelize handle empty string
Make Mix.Utils.Underscore accept .'s and empty args
Improve comprehensions test suite
Support nilly values and exceptions leaking in for filters
Refactor translation and comprehension building in two stages
Support filters in comprehensions
Start translating for comprehensions
Add a test for capture with access
Start expanding for comprehensions
Revert "`mix deps.get` does not use MIX_ENV"
Revert "`mix deps.get` does not use MIX_ENV"
`mix deps.get` does not use MIX_ENV
`mix deps.get` does not use MIX_ENV
Automatically recompile on outdated elixir version
Automatically recompile on outdated elixir version
Remove private structs for now (new proposal coming soon)
Add v0.12.4 CHANGELOG
Add guards to lstrip and rstrip
Emit warnings for using % as sigils
Add guards to lstrip and rstrip
Start v0.12.5-dev
Release v0.12.4
Return remove_handler from handle_event
Randomize cases and tests in ExUnit
Spawn one event manager per ExUnit run instead of a global one
Use a gen_server for exunit formatter dispatch
Remove release files
Update CHANGELOG
Support ERL_PATH in bin/elixir
Add prompt option for IEx
Updating Version specs, dialyzer warnings
Updating Version specs, dialyzer warnings
Only raise on conflicts coming from functions
Only raise on conflicts coming from functions
CaptureIO now returns an empty string instead of nil when there is no capture
Write docs for StringIO
Add default callbacks to StringIO
No need macro for string_io_test
Use StringIO in CaptureIO
Implement StringIO
Clean up s/t/h helpers in IEx
Use export_head instead of export_all
Use export_all for assert_received
assert_receive(d) should leak
assert_receive(d) should leak
Ensure deps can run after mix deps.get
Ensure deps can run after mix deps.get
Emit warnings for Regex.match?
Use :application.ensure_all_started/1
Update OTP release
Make module signature writer aware of structs
Add R16B03, R16B03-1 and 17.0-rc1 to .travis.yml
Avoid warnings on iex suite
Avoid warnings on iex suite
No longer require regexes to be compiled with group information
Remove support to deprecated char lists in regexes
Deprecate char lists in Regex
Deprecate char lists in Regex
Update CHANGELOG
Do not compile after deps.get and deps.update
Mark dependencies as requiring compilation every time they are fetched
Compile dependencies when we can in deps.check
Take deps.loadpaths out of loadpaths to simplify call graph
Do not compile after deps.get and deps.update
Mark dependencies as requiring compilation every time they are fetched
Compile dependencies when we can in deps.check
Take deps.loadpaths out of loadpaths to simplify call graph
print_doc_arg attempted to handle argments with defaults. However, it added " \\ " between them, which is actually the string " \ ".  This meant that (for example) "h IO.puts" dislayed "def puts(device \ group_leader(), item)". Changed it to escape both backslashes.
print_doc_arg attempted to handle argments with defaults. However, it added " \\ " between them, which is actually the string " \ ".  This meant that (for example) "h IO.puts" dislayed "def puts(device \ group_leader(), item)". Changed it to escape both backslashes.
Add a test to ensure we can still inspect "outdated" functions
Remove unecessary exceptions
Do not defined a URI.Error, simply raise ArgumentError
Remove unecessary exceptions
Do not defined a URI.Error, simply raise ArgumentError
Raise URI.Error on malformed URIs, closes #2034
Raise URI.Error on malformed URIs, closes #2034
Implement structs fallback in Inspect and add structs option to Inspect.Opts
Implement protocol support for structs
Update Erlang dependency in rebar
Improve doc test error messages
Document %{} and % special forms
Support structs special forms
* fix Enum.reduce for Maps * implement Map module * add Map as Dict implementation
Move map and struct functionality to elixir_map
implement updates on maps
Implement access and slightly reorganize tests
Implement Enum for maps and add map_size to Kernel
Temporarily disable consolidation since we cant handle both records and structs at once
* implement Inspect for keyword in maps * add basic tests for inspecting maps * add basic support for inspecting structs
Remove outdated default args syntax
Effectively deprecate // and deprecate ^ in anonymous function clause heads
Remove deprecated sigils
Move to new sigils syntax
Move to new sigils syntax
Properly raise on matching on map keys
Get rid of record rewriter
Ensure maps properly handle variables in values
Inline is_map, ensure proper traversal
Basic maps compilation
Macro.to_string/1 for maps and struct AST
Ensure multiple kw args with pipe
Support map updates
Allow %{ foo => bar }
Unify max_expr to avoid duplication
Basic support for maps in the grammar
Refactor grammar and unify base_expr into max_expr
Move to_matchable back to private
Slightly reword version error messages
Use throw/catch only inside matchspec. Keep to_matchspec/1 and from_matchspec/1 as public
:override option should override the version requirement
Mix error messages should be capitalized
Only allow semver versions for mix projects
Better Mix errors when version or requirements are invalid
Simplify Version interface
Only allow semver versions in Version
Remove deprecate code
Enable erlang 17.0 support and squelch some warnings
Start 0.12.4-dev
Release v0.12.3
Print warning when inspect fails
Only justify applications in IEx  stacktraces
Remove valid_requirement?/1 from CHANGELOG
remove all deprecated // and replace with \
Remove tty error handler and simply point to print report on bad return
Raise proper error on invalid function in quoted expressions, closes #2020
Update CHANGELOG
Default build_per_environment to true
Deprecate Record.import/2
Raise early on pipes into & special form
No need to store environment in .compile.lock
Remove m/0 helper
Revert "Deprecate =~"
Lexer's valid_required? can now be private
Add `Version.valid_requirement?/1`
Remove unecessary lexical check in parser
Remove Unix specific behaviour from File.cp/3 and File.cr_r/3
Prefix all warnings with [warning]
IEx now loads the .iex.exs file instead of the .iex one
Generalize unary operators followed by int have higher precedence
Deprecate =~
Improve error messages for bad arity errors
Address undefined macro if on bootstraping
Deprecate usage of @behavior in favor of @behaviour
Move from  // to \\
Allow operators to be captured, example: &+/2
Remove uneeded mix fixtures
Limit the allowed sigils
Make explicit is_range / is_regex are allowed in guards
Update CHANGELOG
Only accept stacktraces in Module.get_attribute/3
Improve coverage for Set and Dict with mixed types
Make sure unintialized @attribute warnings points to the correct file
Improve contracts for Set
Improve Error on bad_return from Application.Behaviour.Start
Improve contracts for Dict
Document inlined functions are BIFs
Respond to review comments
Don't use Regex module inside Exception, as it may not be available
Add exception formatting and colorization to iex
Remove pre-copying of dev dependencies
Ensure doc_line resets algebra formatting line buffer, closes #2014
Ensure File.cp_r/3 respects trailing / in sources
Raise on unknown dependencies for deps.get and deps.update
Clean up app.start tests
No longer compile unicode in parallel
Add Process.send/2 and Process.send_after/3
Store Mix.Dep records in Mix.Dep.deps
Inline some process and node calls, closes #1808
Add Version.compare/2
Consistently inline functions in the Kernel module by the compiler
Update CHANGELOG
Do not erase elixir_compiler_pid
Unify deps.get and deps.update workflows
Rename Mix.Deps.Retriever to Mix.Deps.Loader
Move Elixir version mismatch to a warning, closes #1951
Remove duplicated type assertions
Ensure proper tokenization of the ... identifier
Clear project stack in mix teardown
Ensure proper dependency on bootstrap
Deprecate keywords, getter and list getter functionalities of defrecordp
Add a test for records with default function fields
Convert HashSet to use the new trie implementation
Update CHANGELOG
Range is no longer a record
Inspect :... and :foo@bar as valid atoms
Remove ** from operators list for now
minor typo in doc
Clean up DictTest implementation
Change HashDict implementation to use tries with compound nodes
Ensure ExUnit doesn't hang on linked failures
Deprecates binary_to_term and term_to_binary in Kernel.
Simplify diverge/override mechanism in Mix.Deps
Add index reflection to private records
Change precedence of <- to be the same as other generators
List iex -S mix at the bottom of mix help
Remove @hidden in mix tasks
Remove deprecated code
Guarantee nullary funs/macros are allowed in guards, closes #1997
Ensure heredocs are allowed in calls, closes #1998
Bump to 0.12.3-dev
Release v0.12.2
Deprecate `<-/2` in favor of `send/2`
Update CHANGELOG
Deprecate Enum.first/1 in favor of Enum.at/2 and List.first/1
Change String.next_grapheme/1 and String.next_codepoint/1 to return nil on string end
Deprecate continuable heredocs, closes #1986
Ensure git scm does not take lock into account when comparing deps, closes #1992
Cleaning up Module docs
Allow EEx.AssignsEngine to accept any Dict.t
fix error with float midpoint rounding
Dict.Behaviour doc cleanup
Add missing fixture file for previous commit
Add a test to ensure no hanging in ParallelCompiler
Remove unecessary protocol in IEx.Autocomplete
Remove :[] as a valid atom and do not allow remote container calls
Invert the precedence of | and when
Improve Enumerable count/member? docs
Add Eric to the list of .travis.yml recipients
Take into get_rev_info command may fail when not in a git repository
Delete .git source when running the build
Add :records, :binaries and :char_lists options to inspect/2
Update CHANGELOG
Ensure recursive copy takes into account the proper target directory
Improve binary handling to properly consider chars and bitstring with specifiers
Improve docs for Dict.Behaviour
Path dependencies can only be used with mix projects, closes #1967
Compile unicode modules in parallel
`Kernel.inspect/2` with `Inspect.Opts[]` is deprecated
Document that ^ always points to the previous value
Turn off dependency tracking for compilation on release, closes #1982
Add Enum.flat_map_reduce/3
Update CHANGELOG
Add Stream.transform/3
Add Keyword.delete/3 for deleting explicit values.
Unify precedence of ++, --, **, .., <> ops
Ensure Elixir own .app files include all lib modules
Small improvements to records and others
Add a test for multiple vars in IEx for the previous commit
Give erl_eval bindings as an orddict
Create a signature for callbacks
Use :application.get_application/1 in stracktraces
Annotated types should not be in guard vars
Use relative paths when compiling elixir itself
Compile with relative paths and include apps in stacktraces
Deprecate is_alive in favor of Node.alive?
Improve stacktraces and error messages during expansion
Format lock opts with the lock
Ensure teardown test case is returned
Update CHANGELOG
Only run setup_all if there are tests in the case
Support @moduletag in ExUnit
include in ExUnit only has effect after an exclude
Ensure bitstring modifiers args are expanded
Reenable case clause rewriting, closes #1972
Do not export case and receive vars
Start v0.12.2-dev
Release v0.12.1
Only expand __ENV__.call if it is a known function
Ensure local is disabled on module definitions
Move environment cache to locals tracker, which is per module
Cache the environment for function definition
Deprecate __FILE__ in favor of __DIR__ or __ENV__.file
Remove old deprecated functions
Improve typespec docs
Properly handle tuples in typespecs
Require arguments to be expanded to simplify relative symlink logic
Bring back no name and simplify var merging
Reset tags for every test
Update CHANGELOG and error messages
ex_unit teardown should run even if setup fails
Shut down GenFSM on unknown messages
Remove non ansi handling from IO.ANSI.Docs
Remove trailing whitespace
Move filters functionality to ExUnit.Filters
Improve docs for case, try, receive and ^
Use a main counter for hygienic variables
Ensure variables in remote do not leak to args
Be more conservative on how counters are passed forward to decrease var copy
Remove expansion counter
Define IEx.dont_display_result in IO.ANSI.Docs
Move IEx.ANSIDocs > IO.ANSI.Docs
Add documentation for ANSIDocs printing functions
Add default color options for ANSIDocs
Remove IEx options from default args in ANSIDocs
Refactor ANSIDocs.write helper
Use parameterized colors in ANSIDocs for inline handling
Pass colors parameter to inline handling functions in ANSIDocs
Use parameterized colors in ANSIDocs for code
Use parameterized colors in ANSIDocs for body headings
Pass colors parameter to process* functions in ANSIDocs
Use parameterized colors in ANSIDocs for headings
Add the failed module to the exception message.
Do not leak clause heads, closes #1948
Always return #elixir_env from callbacks
Make sure the given module is loaded before trying reload it.
Skip merge when arg is a literal
Speed up how variables are merged by keeping a counter
Simplify erlang translation var building
Update CHANGELOG
Ensure aliases dispatch to the proper function, guarantee files are binaries
Ensure warnings are recorded only if there are no errors
Temporarily disable case clause rewrite optimization
Add missing elixir_counter
Ensure we run lexical warnings for dynamic modules
Get rid of environment macro counter in favor of a global one
Improve error message for IEx.Helpers.r when module does not exist.
Stop GenServer on unknown call/cast request
Remove more duplication in between expansion and translation
Rename translate_each to translate and temp_vars to match_vars
Clean up literal handling and add elixir_bitstring
Clean up synax_error, asstions and merge mechanisms
Discard old dispatch
Use expansion on function bodies
Move to the new expansion on the front-end
Move module compilation to rely on elixir_exp
Work on Elixir expressions rather than forms
Also expand binaries
Pattern match just on "-"
Raise better message on invalid or reserved codepoints
Expand try
Remove unneeded assert in assert_raise
Using relative symlinks, fixes issue #1953
Rename redundant is_ prefix in internal APIs
Expand receive
Expand case
Combine get_rev and get_origin into one system call
Expand fn
Change how -> is represented in the AST
fix bug in code sample for Stream.resource
Move capture to elixir_exp
Use spawn_monitor instead of spawn_link to avoid EXIT messages leaking into the mailbox.
fix typo in URI docs
Move test for matching origins to tail of lock_status check
During update, always set the origin url to the lock url
Flag lock as outdated if origins do not match
Make sure IEx r helper does not return a record
Simplify and fix bugs around lexical scope on try
Expand requires and imports
Expand comprehensions
Delay some error handling to translation
Rename DispatchTracker to LocalsTracker
No need to require for requires for all expansions
Improve compilation times and memory consumption
Handle unary ops when converting typespec to ast
Expand super
Expand ^var
Implement pending tests
Handle remote calls
Expand quote
Expand tuples and other special forms
Start locals expansion
Write in-depth docs on how to use filters as flags
Simplify import dispatching
Add raw string compare in doctests for #Module<...>
Add variables expansion
Start expanding aliases on their own
Update docs to define include and exclude filters
Display include and exclude filters separately
Refactor filter evaluation
Run tests against erlang R16B03
Add support for include and exclude flags
Support separate inclusion and exclusion filters
Bump to v0.12.1-dev
Release v0.12.0
Update CHANGELOG
Support + for lists in ANSIDocs too
Ensure arithmetic constants are supported in function heads
Support - lists in ANSIDocs, closes #1937
Added links to Regex docs
Support filters for multiple tags
Match filters with a case
CLI/Compile: added a test to showcase the new behaviour
CLI/compile: fail when some patterns aren't matched
Correct the function name in Stream.take_every spec
Cleaning up Stream docs
Ensure suspensions are closed on failures
Add Float.round function
Change typespec guards to keyword list
Dont add [] for last arg keyword lists in tuples, lists and when/2
Dont require [] for keyword list operand in when/2
Update CHANGELOG and remove warnings
Ensure c helper works with full path
Add floor and ceil functions to Float
Deprecate Enum.chunks* in favor of Enum.chunk*
Add bang to stream_to! entry in CHANGELOG
Add Stream.after/2, Stream.run/2 and File.stream_to!/3 for side effects
Ensure Stream.zip/2 and Stream.flat_map/2 follow up suspended calls
Ensure Stream.resource/3 is zippable
Automatically enforce build path for in_dependency
-S cannot be given more than once
Improve URI and Stream docs
Update record and stream docs (tks @pragdave)
Update CHANGELOG
Add Stream.scan/2 and Stream.scan/3
Add Stream.uniq/2
Add Stream.chunks/2,3,4
Add Stream.chunks_by/2
Support Stream.drop/2 with negative count
Support Stream.take/2 with negative count
Add Stream.take_every/2
Add Stream.each/2
Start sharing reducers in between Enum/Stream
Change Enumerable.count/1 and Enumerable.member?/2 to return tagged tuples
Ensure certain streams and enumerables are zippable
Add Stream.zip/2
Improve docs
Make the reducer function part of the suspended continuation
Convert to new iteratee-based enumeration
Cleaning up ExUnit.CaptureIO docs
Added URI to doc_test list
Ensure full alias is stored in context_modules
Add Stream.resource/3
Simplify the logic of translate_assert
Clean up formatting error
Add examples to url.ex
Ensure record aliases in the same quote can be accessed, closes #1915
A series of minor description text changes for clarity and consistency.
Create consolidation directory before writing to it
Use :elixir_env.ex_to_scope/1 insted of :elixir_scope.to_erl_env/1
Cleaning up Macro docs
Always run tests without matching tags
Reverse filter match happy path to make more sense
Support exclusion of any tag key-value pair
Move filter parsing logic to a more testable place
Ensure filter is always a list
Don't hold on to the filter after printing it
Ensure macro expansion does not expand on variables
Clean up mix test options wrangling
Parse filters in a more sane way
Add more hygiene examples
Override test helper with command line flags
Accept and parse filter command line option
Filters apply to tests instead of cases
Don't count tests that were skipped
Skip tests with a mismatched filter
Print formatted filters before running tests
Add helper function to format filters
Write test exercising case filtering
Add R16B02 and R16B01 to .travis.yml
Cleaning up Exception docs (and other Kernel doc typos)
Ensure aliases defined in macros do not leak
Promote exception/1 as the best mechanism to customize exceptions
Ensure path dependencies manifests point to the proper path
Update CHANGELOG
Deprecate Macro.extract_args/1
Slightly refactor and improve doctests code
Require :escript_main_module for generating escripts
Warnings rely on stdio and should be sync
test cleanup as per comments
More precise regex exception match
Reduce the size of String.Graphemes module
defrecordp support dynamic name and fields
Removed hard links to modules. Relying on ExDoc to autolink
Remove record_test from eunit suite
@type and friends support unquote fragments
Some more unicode tests
Cleaning up ex_unit docs
Store tags in context, remove records from context
Move test outcome to an explicit state
Support ExUnit tags for customizing tests in callbacks
Add typespecs to List
Add List.update_at/3
fix for issue #1896
Ensure we have a project before popping the stack
Improve typespecs when formatted as strings
Implement Module.eval_quoted in Elixir
Update CHANGELOG
location: :keep only affect function definitions
Share quote annotations with unquote fragments
Simplify get_opt(internal) handling
Simplify lookups in elixir_dispatch
Update kernel.ex
Ensure that Macro.expand_once/2 works with HashDict
Port module_nesting handler to Elixir
Move more code to Elixir land, simplify serialization
Implement defmodule in Elixir
Refactor aliases handling before we move defmodule to Kernel
Implement left in right in Elixir
Move super? to Elixir as well
Implement var! and alias! in Elixir
Move case/try/receive to special forms
Move function/macro definitions to Kernel
Pass context information for definitions in the first argument
Move remaining functions to elixir_env
Move function definitions to new serialization schema
Get rid of unused _@MODULE var
Make module compilation work with elixir expressions
Macro functions and macro macros to Macro.Env
Automatically handle File.stream and File.binstream based on modes
Move some macros back to __op__ to work around bug in erl_eval
Convert bitwise
Convert remaining operators
Move more operators to Kernel
Move arithmetic ops to Kernel
Start porting elixir_macros to pure elixir
Update release docs task
Ensure test fixtures are kept clean
Add Enum.intersperse
Mention File.open/2 modes in File.write/3
Properly .gitignore automatically generated rebar_dep/ebin
Add Enum.reverse/2
Update typespecs in Inspect.Algebra
Make inspect in general 20% faster
Updated 'make docs' to latest ex_doc cli args
remove `.git` suffix for `:github` referenced deps
Improve EEx docs
Update CHANGELOG
Tidy up list docs
Implement List.delete_at
Have a convenience function that does not change the lock in umbrella
Switch Enum.drop/take behaviour for negative counts
Attempt to improve elixir version error message
iterate -> enumerate
Make surround_many accept an optional seperator per-invocation, or fall back to module attribute default. Passes tests+doc_tests.
Also symlink include directory
Ensure symlink_or_copy can override previous symlinks
Minor consistency update to Dict.values doc
Simplify how app files are generated and checked
Improve coverage for streams with nested accs
Compose streams as we go and remove tuples nesting
Make IEx task with @moduledoc false
Start v0.11.3-dev
Release v0.11.2
Catch attempts to compile missing files in iex and give slightly tidier error messages
Ensure build per environment in umbrella children do not clash
Updated mix.new success wording
Do not access compile_path for umbrellas
Remove unecessary apply optimization
Update CHANGELOG
Copy dev build if the environments match
Do not clean whole build on clean, only libs
deps.loadpaths no longer loads the dependencies, it relies simply on builds
Ensure we can clean deps that no longer exists
Prune tasks when build per environment is on
Allow builds to be customized per environment
Add mix iex that simply fails and tell users to use iex -S mix
Rename _build to _build/shared
Update new applications .gitignore
Improve coverage for builds and rebar integration
Keep debug info for unicode files
Ensure rebar dependencies are stored in the proper directory
Share _build path when running commands from umbrella
Move rebar and other deps to _build
Ensure archives work with new _build setup
Sinplify mechanism for checking and handling locks
Rename fetched to loaded and add a manifest_path
Move mix dependencies to _build
Move typespec guards to end of spec
Add is_var/1 for use in typespec guards
s/wether/whether
Compile not ok dependencies on deps.get and deps.update
Do not override builtin type
Move mix configs to app environment and split TasksServer
Extract Mix.ProjectStack from Mix.Server
Ensure app key is required when getting the compile_path
Add :++, :-- and :** to Macro#binary_op_props
Remove :compile_path from config and move it to Mix.Project
Ensure Mix properly recurs rebar subdirs, closes #1862
Reduce the amount of fixture files in mix
Remove unused variables from mix test file
Start v0.11.2-dev
Release v0.11.1
Ensure Mix.Shell.IO do not puke on :eof
fix typo in changelog
underscorize unused argument
Improving docs on var! Remove implementation details about variable name. Try and make it clear it is just unquoting a var.
Skip remote call on dict behaviour size
Improve some Kernel error messages
Remove optional parameter on __using__
Make test that changes global state sync
Update CHANGELOG
Improve docs and error messages
Optional deps should be kept for the project that specifies them
Add support for optional dependencies
Store only app names in Mix.Dep.deps
Dependencies convergence properly relies on requirements
Allow lower case escapes in URI
Allow compilation in R17A
Mark the autogenerated lib/src/elixir.app.src as such
Remove duplication in deps.compile
Renamed Macro.split_call/1 back to Macro.decompose_call/1
Do not allow duplicated projects to be pushed onto the stack
Move unicode from priv/ to unicode/
Add a test case ensuring managers are not set eagerly
Do not fetch the manager before the repo is available
No need to support @recursive :both anymore
Add a workaround for Mix deps.get and deps.umbrella what was not loading path deps
Check the elixir req for dependencies too
Improve syntax error on invalid calls
Improve error message for overriden deps
Precalculate the manager for unfetched dependencies
Just skip loadpaths on deps.update and deps.get
Update CHANGELOG
Move topsorting to Mix.Deps.Umbrella
Remove some unused variables
Improve exception messages in case of missing app
Oops, rename children to unfetched also in umbrella
Topsort umbrella children
Simplify protocol code
Topsort mix dependencies
Ensure umbrella projects sets the proper children environment
Add a test case for overriden deps with cycles in umbrellas
Insert overriden dependency before any of its dependencies
Ensure LexicalTracker doesn't fail accross lexical contexts
Add more information to generated mix.exs
use a separat compilation status per parallel compilation
Wrap formatted results in quotes
Properly format test cases names in --trace headers
Update String docs
Set the manager before going into the dep
Remove more deprecated code
Remove deprecated code
Improve docs for Mix.Archive
Deprecate :load_paths in preparation to Mix' _build
Add tests covering a bad mix.exs file is not loaded on deps.get/deps.update
Do not load the dependency on check lock but only when it is fetched
Split Mix.Deps into fetched and unfetched
Start v0.11.1-dev
Release v0.11.0
Updated defexception docs
Update CHANGELOG
Remove unused alias
Get rid of useless fourth argument in defexception
Document side-effects on stream APIs
Add typespecs and to_string conversion to some IO APIs
Updated documentation for Macro.split_call/1
renamed Macro.decompose_call/1 to Macro.split_call/1
Do not write manifest down if there was a compilation error, closes #1833
Avoid interpolation which would convert char lists twice
Simplify current module macro handling
Add tests for LexicalTracker
Add warnings for unused aliases
Move lexical tracker to scope
Add Kernel.LexicalTracker
fix wrong error message for `nil.func()` call
Add Macro.decompose_call/1
Updated Code docs
remove whitespace
Update CHANGELOG
Ensure Enum.member? uses match (===)
Deprecate x in y inside matches
Doc updates for Application.Behaviour and Behaviour
underlines within links have to be escaped
Eval should take into account other contexts
Same module variables must be explicitly shared
Swap variables to kernel context
Improve coverage for location: :keep
Make unicode the default for regular expressions
prevent iex process termination when autocomplete on a single dot (.)
Update CHANGELOG
Allow IEx to take over itself
Allow IEx take over while evaluating
Improve and/or operator docs
Added advice to clean when building into the README
Use :lists.member as it uses === and not ==
Impose === as the operator in the Set API
Impose === as the operator in the Dict API
Cleaned up Record docs
Clean up ebin on Makefile recompile, closes #1808
Improve and/or docs, closes #1812
Cleaned up ExUnit docs
Doc fix for Kernel.SpecialForms
Cleaning up Version docs
Improve mix coverage for dependent files
Speed up mix compile by relying on the manifests information
Sigils can now handle balanced tokens as in `%s(f(o)o)`
Move parsing from elixir_interpolations to elixir_parser
Clean up escape char duplication
fix defrecord doc error
Remove warnings on protocol/consolidation.ex
Refactor string interpolation to delegate to the tokenizer
Do not wrap fn -> end in do keyword
Document try else clause
Document fn special form (tks @wycats)
Add an 's' to an expresion.
Log paths relative to the current working directory
Use if_ok approach on protocol pipes
Update CHANGELOG
Add Macro.pipe and Macro.unpipe
Added summary friendly docs to System
Remove too early project declarations
Ensure overrider is placed after its dependencies
Make mix work out of the box if it's escriptize-d.
No need recur on loadpaths because children apps are now deps
Updated docs for Float, Integer and Tuple.
fixed typos in ChangeLog
Remove dead code from Protocol.Consolidation.ensure_protcol/1
Clarify Integer.parse/1 code with comments
More typespecs improvements
Optimise raise/1,2 at compile time
Optimize binary handling in Integer.parse and Float.parse
No need to store result in IEx.Config
Ensure consolidator works when functions are reordered
Improve error messages throughout Mix codebase, closes #1779
Ensure changes in mixfile forces a complete scm update
Update CHANGELOG
Drop .elixirrc
Ensure deps at the same level converge, removing duplicated results
Automatically generate umbrella refs in mix new inside apps
Umbrella projects now treat apps as deps
My skills are a bit rusty...
Still not fixed!
Broke the build!
Docs and code clean up in Mix.Project and Mix.Dep
Add Enum.slice(coll, range)
Ensure Integer.parse and Float.parse do not accept double +, - and .
Native float parsing
Native Integer parsing
Added extra test coverage for float parsing
Improve String.slice implementation
Also deprecate atom<->binary conversions with encoding
Address typos
:ok should the default gen_fsm reply
Use bitwise and to check if an integer is odd/even
Split Number into Integer and Float in protocols
Move tuple functionality to Tuple module
Remove pid conversions from Kernel, clean up String conversions
Avoid flattening in access[...], closes #1763
Lists are already a literal, they don't require a :[] container
Use if instead of case
Indent code examples correctly
Add version of String.slice that accepts a Range
Ensure Stream.flat_map does not intercept wrapped lazy enumeration
Do not block the client if take is refused in IEx.pry
Set ExUnit color based on IO.ANSI.terminal?, closes #1756
CHANGELOG and doc typos (thanks @ericmj)
Store key-values in @protocol and @impl
Improve IEx.Server coverage
IEx.Server.boot -> IEx.Server.start
Move booting process to IEx.Server and allow take over
Make ExUnit autorun configurable
Append archives/paths before executing any task
Extract IEx.Evaluator to its own process
Add IEx.Helpers.respawn
Keep IEx helpers around for pry
Test IEx.Server start options and configurations
Make the taking over process the evaluator
Initial pry handling
Do not store the whole config in IEx.History
Add a test for IEx.History.reset
Clarify the docstring for `IEx.History.nth`
Implement IEx.History.reset
Move all IEx config handling to IEx.Server
Improve IEx docs, mention remsh, unify options handling
Do not start and configure IEx all the time
Handle markdown escapes in ANSIDocs, closes #1757
Remove duplicated code
Do not split words for handling inline code
Simplify list handling by delegating to the same text handling function
Improve coverage of backticks, underscsores, etc in ANSIDocs
fix problem with lone stars
fix bug with nested lists
add a few extra tests
mend
Split IEx colors into categories
respond to review. make internal methods private. Add tests for external methods.
Allow H3s to be nested inside lists
First pass at formatting iex help output
Assert messages are received instead of flushing.
Get rid of @only in List.Chars, improve deprecation message
Update code comment
Ensure we raise a meaningful error when there is no SCM
Ensure cover compiling results yield the app name
Ensure `defexception` fields can be set dynamically
Update CHANGELOG
Deprecate Macro.expand_all
Remove @prioritize from Protocols
Use attributes so we don't force protocols to be loaded
Remove unused warning
Provide a wrapper in CLI for easy stacktrace pruning
Normalize all stacktrace under the same name and improve IEx errors
Read fallback_to_any from @only and @except for backwards compat
Ensure custom types can be prioritized
Falling back to any in protocols needs to be explicit
Implement protocol consolidation
Improve iex typespec helpers output on bad data
Improve mix compile.elixir code comments
Improve warn on invalid expressions
Update CHANGELOG
Upgrade clustering from legacy to extended
Update Unicode database to 6.3.0
Use GraphemeBreakProperty as in Unicode Annex #29
Deprecate @only and @except
Clean up protocol implementation setting the ground for consolidation
Allow a module to force its debug_info to be compiled
Remove unused types from formatter
No need to filter raise from stacktraces
Remove deprecated and unused code branches
Improve Enum docs and optimize ops with negative indexes
Improve record docs
Bump to 0.10.4-dev
Release v0.10.3
Ensure both strings and atoms go through the same lookup
Disallow mixed use of strings and atoms in record initialization/update
Allow for string names when instantiating or updating records
Allow apps to be selected in umbrella projects
Update CHANGELOG
Ensure &() works on blocks with one expressoin, closes #1704
Deprecate Regex.captures and String.valid_codepoint?
Move verify! to an is_doc guard in algebra
Add validity checking for Inspect.Algebra documents
explicitly use `Dict.size` rather than just `size` in `equal?`
String module now depends on Regex module
Ensure String.split/2 works with unicode
Support String.split with an empty binary as the pattern.
Save typespecs attributes with proper line numbers, closes #1613
Improve guards on IEx.Helpers, closes #1535
Avoid calling Kernel:raise from erl
Kernel.raise should be a macro to avoid messing up the stack trace
Add a tricky pattern example for assert_receive
Remove unecessary vars cache
Minor english correction
Get rid of the r helper since it causes conflicts related to modules dependencies
Don't compile deps too many times
Preserve correct order when deps are overriding
Make --sup the default for mix
Add Stream.unfold
Deprecate previous partial application syntax
Document the dot as a special form
IEx now respects signals sent from user_drv, closes #1566
Slightly tidy up IEx.Server
Correction of small typos in Regex docs.
Provide better exceptions for invalid unquote args, closes #1680
Improve doctest stripping, closes #1678
Improve invalid match and guard errors, closes #1673
Record docs adjustments
Minor style fix in Enum.take_every/2
Move to capture syntax
Update CHANGELOG
Provide better error message for mix -e, closes #1639
Adjust code to style used in the codebase
No need to mark typedoc as persisted if we are manually persisting it
Avoid duplicatation by making the typedoc signature always an empty list
Move Mix.Version to Version in kernel.
Update quote docs
Update IO docs and clarify bin* functions
List types in docs giving the idea of aliases
added handling of multiple heredocs on the same line
Rename File.IteratorError -> IO.StreamError
Improve String.split and Regex.split docs
Improve inspect docs
Document issues and improve IEx booting process
Improve IEx out of bounds message
Make clear behaviour of assignments in comprehensions
Remove previously deprecated code
Update CHANGELOG and move to new style
Bump version
Release v0.10.2
Deprecate `%b` and `%B` in favor of `%s` and `%S`
Move is_odd and is_even to Integer
Update CHANGELOG
Only support iolists on IO
Support negative indicies in Enum.at/fetch/fetch!
parsing embedded IPv4 addresses
Return error on unsupported options in Regex.compile
No longer trim by default when splitting
more tests for IPv6
Consider stream_lazy to always return the result, move nesting check to after reduce
handling IPv6 addresses on URIs
adding tests for ipv6 addresses on URIs
Markdown rendering fix
Make a distinction about eager and full evaluation of the collection
out of it -> as result
Improve Enum docs
Add note to Enum to clarify what's returned
Add tests for Stream.concat/1,2 and Enum.concat/1,2
Add support for enumerables of enumerables
Move the List concat tests to Enum
Replace occurrences of List.concat/1,2 with Enum.concat/1,2
Deprecate List.concat/1,2
Add Enum.concat/1,2 and Stream.concat/1,2
Update record docs style
Add bit about documentation style to CONTRIBUTING
Make it clear Dict.merge expects an enum that yields two-item tuples
Optimize split implementation
Accept the `trim` option for `Regex.split/3`
Accept the `trim` option when splitting strings
Enum.slice returns nil when start is out of bounds
Use ifnone in Enum.find for all collections
Implement `Stream.flat_map/2`
Add a count guard check for slice
Update CHANGELOG
Add Enum.slice/3
Remove empty Tuple module
Allow any function identifier as a variable, closes #1649
Allow Macro.escape([1|2])
Handle more types on bitsyntax.
Splice nested binaries with default types and size
String.to_float/1 docs updated
Supress 'Compiled' msg by default in elixirc
Deprecate def/4 and friends in favor of def/2 with unquote and friends
Keep empty strings when splitting
No need to wrap quote do: nil in a block
Use `typedoc` attribute to store typedocs.
Remove unneeded empty lines in the typedoc tests.
Add a `@typedoc` attribute to document types
Another attempt at cwd handling
Handle when :file.get_cwd returns a binary
Properly order CHANGELOG
Update CHANGELOG
Deprecate to_binary in favor of to_string
Update CHANGELOG
Print failures for ExUnit as soon as they come
import accept :functions and :macros as values in :only
Add a take_every function.
Add a pair of even and odd checking functions.
Update CHANGELOG
Deprecate :umbrella path opt in favor of :in_umbrella
Make a distinction in between overriden and converged, closes #1631
Rename manifest -> manifests to support compilers with multiple manifests
Update CHANGELOG
Convert external functions into quoted expressions
Add chunks_by.
Improve checks of functions inside records
Refactor Enum.chunks to use Enumerable.reduce/3, avoiding starting lazy collections twice
Properly handle @file that comes from warnings
Refactored Mix.Tasks.Local.Install to make it more explicit
Add Enum.chunks.
Avoid extra eval on EEx
Add Macro.to_string/2
Provide more semantic names for ExUnit.ExpectationError
Improve error message for h(:lists)
Allow << _ :: utf8 >> <> binary in matches, closes #1619
Improve warning for ungrouped clauses
Allow erlang options when compiling elixir regexes
Remove unecessary modules from docs
Add underscore for avoiding variable unused warning
Rely on :binary.part since we are using :binary prefix functions
Always stop on --, even for parse
Do not show dest info when comparing deps
Update LEGAL file
Do not touch lock manifest if there is no change
Update Macro.to_string comments
Macro.to_string: don't add unneeded binop parens
Ensure we are not allocating a new binary on each step
Update CHANGELOG
Limit inspect by default, closes #1595
Rewrite IEx.Autocomplete to work on strings
Cleaned up Kernel.iolist_to_binary/1 docs
Change DocTest to conform with updated specs
Update file.ex
Macro.to_string handles access and kw-lists nicer
do_justify should be private
Add missing helpers file
Handle unsafe vars inside or/and
Clean up and expose are more complete API in Exception
Add Path.relative_to_cwd and rely on it when generating stacktraces
Improve docs for iolist_to_binary
Quote arguments on elixir/iex help check
Review and deprecate list <-> binary conversion
Update CHANGELOG
Remove unused variable from DocTest
Add "too much" and "not enough" tests to DocTest
Make mismatched indentation test pass
Add mismatched indentation test to DocTest
Make heredocs indentation test pass
Add heredocs indentation test to DocTest
Add example to Enum.take docs using negative count.
Only accept a single character as padding
Do not truncate strings when justifying
Include documentation for justification functions
Implement rjust and ljust string functions
Return an empty string from slice with valid index
Do not compile behaviour docs if --docs is not set
Update CHANGELOG
Move from unicode to list to String.to_char_list
Move from unicode to binary to String.from_char_list
Macro.unescape_binary -> Macro.unescape_string
Deprecate Dict.update/3 in favor of Dict.update!/3
Remove sleep in recompile test
Support removing unicode characters with strip
Make Process.info return nil instead of :undefined
Support IO.stream/2 and IO.binstream/2 and deprecate current IO.sream/1 and IO.binstream/1
Allow capture on anonymous function calls
Clean up option parser
Update CHANGELOG
Detect windows symlinks on File.rm_rf
Return error when tokenizing oversized atom
Include line number in atomization
Separate atomization from tokenization
Do not stack rm_rf errors together
Clean up app.start tests
Get rid of unused variable warning
Pass Line and File as arguments to we don't read the table twice
Recompile project if elixir version changes
Ensure proper line on interpolations inside heredocs, closes #1581
Put overridden def test in warning_test.exs
Use relative filename in redefined def warning
Add test for overridden def warning
Add location of overridden def in error message
Add Enum.flat_map
Converge store_option and validate_option in OptionParser
Update mix tasks for OptionParser permanent invalid list
Update OptionParser test for permanent invalid list
Change OptionParser to always permanent invalid list
Add documentation for invalid switches
Use list concatenation operator instead of function
Improve OptionParser switch validation
Add Dict.Behaviour to CHANGELOG
modifications according to comments from the pull request
Slight clean up on dict_test.exs
added Dict.Behaviour
Support --detached and --hidden options
Allow iex to --remsh into an Erlang node that has IEx
Clean up Dict interface
Make System.get_env/0 behave sanely.
Update CHANGELOG
Deprecate Enum.min/2 and Enum.max/2 in favor of Enum.min_by/2 and Enum.max_by/2
Refactor Enum.min/1 and Enum.max/1
Add Enum.reduce/2 that sets initial value of acc to the first element of collection
List.replace_at
Improve Enum.shuffle and String.replace docs
Add regex pattern support to String.replace
Reduce the ammount of module binaries being passing around
Remove deprecated code
Test mix clean with the --all flag.
Original clean arguments need to be passed to deps.clean.
IEx helpers r and c can handle erlang sources
Make it explicit Regex.run returns all captures in a match
Document dash to underscore in OptionParser
Update CHANGELOG
Ensure watched extensions trigger full recompilation on change
Raise on &0 inside capture
Minor mix compile.elixir task documentation fix
Ensure even a greater level of quiteness when --quiet is used in deps
Only touch look if a dependency possibly changed
Use a specific .compile.deps flag for tracking deps changes
Use list argument in h helper for strings
Rephrase h helper doc for string arguments
Add h helper doc for string arguments
Allow for strings in iex h helper
Mention capture operator in CHANGELOG
Bump to 0.10.2-dev
Release v0.10.1
Capture now works with macros, closes #1534
Remove weird chars from bat, closes #1539
Issue #1531 - fix slow running of batch file in Windows
Stop checking for matches once we reach a fun
Only raise on local macro conflicts if it was previously defined
Remove space excess in compile.elixir docs
Update docs for Mix.project/0
Normalize and allow captures in Regex.scan/3, closes #1526
Allow &1.foo syntax inside capture
Allow &() as a general capture mechanism
Deprecate function/1 and function/3
Add &local/arity and &Remote.fun/arity
always remove unmatched beam files when compiling
Remove old mix artifacts without a need for force or changes
Update CONTRIBUTING.md
Get rid of buggy System.halt/2
Make & an unary operator
Using 'binding' to refer to a keyword list of variable bindings
Remove another invalid syntax sample
Move definition of with_index below
Dont escape " in shell commands on windows
Improve docs for Enum.all?/2, closes #1508
Remove undocumented Record.new(tuple) feature
revive a non-functioning test tested on Windows
test_helper files still need to be required upfront
Make it explicit that some tasks require a project to be defined
mix run now properly sets System.argv
Improve docs for EEx.AssignsEngine, closes #1499
fixing a test to also work in Windows used to do this: 'MIX_ENV' is not recognized as an internal or external command, operable program or batch file. Tested to work on both Windows and Linux. However the following is seen on console: Mix requires the compile path "ebin" to be inside a directory with the  same name as the application name :no_mixfile, got "s:/workspace.elixir.2013/elixir/lib/mix/tmp/Mix.CLITest/test env/ebin"
Return :ok from FileCase callbacks
No longer clean or unlock deps unless --all is given
Ensure path dependencies are compiled on mix deps.get
Update @on_definition docs
Trivial wording changes in the Changelog
Clean up Elixir path related tests
Avoid echo with no args on windows
Revert "Update ExUnit.Assertions docs, closes #1493"
Only set preferred cli env if MIX_ENV is nil
Do not double escape strings inside interpolation, closes #1494
Properly treat :<<>>, :[] and :{} as atoms
Allow defmacrocallback to be specified in Behaviour
Update CHANGELOG
Support --color option in ExUnit
Add mix cmd
Use %B on docs
Get rid of Mix.Tasks.IEx
Add umbrella: true to supported deps options
Group ExUnit.start calls into one, closes #1489
Ensure environment is set before any task is executed, closes #1490
Update ExUnit.Assertions docs, closes #1493
Update new app docs
Mix retriever should use the .app set at compile_path
Update deps docs
A test case changing compiler options should not be async
Do not re-use stacktraces on IEx, closes #1486
Update CHANGELOG
Clean up IEx helpers to not contain spurious functions
Get rid of unmatched docs warnings
binary_size => byte_size
Rename Protocol.UndefinedError keys
Give more information on invalid versions
Warn for unmatched docs
Improve inspect for functions
Do not show internal compiler output in stacktraces
Split @protocol into @protocol and @for and add __impl__(:for)
Wrap Mix.Shell.cmd with " instead of '
Updated GenFSM example code
`mix deps.update` no longer update all dependencies unless `--all` is given
Normalize windows home, closes #1462
Print detailed information on conversion errors
Check ExUnit.Server is registered before adding cases, closes #1472
Add String.to_char_list and String.from_char_list
Add record type `Record.t`
Allow coverage tool to be pluggable
Update CHANGELOG
Include test time on trace results
Clean up make clean
Tidy up IEx docs and tests
Forgot the changelog
Add the clear helper, which cleared the screen. Also introduced the convention that if a helper returns dont_display_result/0, then we skip the inspecting of the result. Changed the introspection helpers h, s, and t to use this.
Update mix test docs
Improve docs for ExUnit
Ensure sigils with no interpolation are fully expanded at compile time, closes #1471
Remove duplicate in erlang, leex and yecc compilers
Only clean up manifest for files that were actually removed, closes #1440
Updated windows elixir.bat to use -pa instead of -env ERL_LIBS
Add String.reverse to reverse the given string.
Add Enum.shuffle
Add MIX_GIT_FORCE_HTTPS system environment var
Dont raise on erroneous rebar.config.script
Update dyalizer task and fix some of the reports
Remove deprecation warn on regex dep requirement
EEx exprs should receive binaries and use Behaviour
Update typespecs for Enum and Inspect.Algebra
The manifest variable is already set
Update CHANGELOG
Reverse behaviour docs at compilation time
reverse @__behaviour_docs__
Improve docs for Mix
Add List.keysort
Record aliases separatedly from remotes
Simplify translate_apply
Ensure no duplicate keys in the compile.elixir manifest
Also record aliases as dependencies
Just preload files if something is stale
Put old beam files back if compilation fails
Improve ManifestCompiler to track more dependencies
Initial work on ManifestCompiler that tracks dependencies in the manifest for quick compilation
Support each_module callback on ParallelCompiler
Support for multiple callbacks in parallel compiler
Remove deprecations pre 0.10.0
Watch the target directory on compilation
Issue #1448, Mix.Tasks.Compiler.*.manifests returns complete path
Slight clean up on mix tests
Document mix loadpaths and app.start options
Move the Elixir version requirement check to a better place
Always load paths on app.start, even with --no-compile
Updated tests to verify exceptions raised
Upated test cases to support compilation halting on first failed compiler. Updated existing tests to handle CompileError being thrown on failure.
Make Mix.SystemVersionError message more meaningful
Reduce cases where IEx parser can get stuck, closes #1443
Only delete beam files with no source
Check path deps to see if we should recompile
Improve docs for Mix.Deps
Remove test at the wrong location
Ensure __impl__ follows the same convention as other dynamically generated info functions
Add @protocol attribute to defimpl
No need to define a new compilation error
Update CHANGELOG
Document that on_definition can only be a function, closes #1431
If no deps.check is done use all available deps
Rename mix flag --no-check -> --no-deps-check
Remove hard-coded project defaults
Update CHANGELOG
Clean up GenFSM docs
Created 1st version of GenFsm
Add expansion callsite to the end of the stacktrace, closes #1426
Improve use of operator has no effect messages, closes #1431
Remove unused test_helper project configuration from mix
Bump to 0.10.1-dev
Release v0.10.0
Mix.Tasks.Help.run([]) outputs information about current default task
Do not call :io.columns if width is set
Tidy up CHANGELOG
Use all compilers manifests when cleaning
Check .compile.erlang mtime when compiling elixir
Add manifest files to erlang compiler
Add manifest files to yecc and leex compilers
Deprecate mix run EXPR in favor of mix run -e EXPR
Never allow a comprehension to behave like a guard
Deprecate Kernel.float/1 in favor of explicit conversion
Clean up Elixir internal errors
Improve error messages for in-erlang macros
Update CHANGELOG
Do not support inline types with defrecord
Improve error messages from typespecs, closes #1401
Raise proper exception on invalid quoted expression
Deprecate quote binding: in favor of quote bind_quoted:
Add deprecation warning to __index__ on Records
Update CHANGELOG
Keep head|tail format on splice, closes #1393
kwlist are inspected as a list of tuples with raw: true
Updated System and Mix to use __record__(:index) syntax
Updated docs to use __record__(:index) instead of __index__
Implemented Record.__record__(:index) syntax, Issue 1414.
Start app before perfoming requires
Optimize stale handling
Clean up mix tests
Simplify manifest API and put tests back on green
Ensure eval callbacks gets a fresh vars dict
Delete files in the manifest instead of removing the loadpath
MAKE: respect LIBDIR variable
MAKE: standardize install variables
MAKE: allow more verbose build output
Raise an error when Dict/Set doesn't support the target
Allow -boot start to be overriden on releases
Check the key on register_attribute
Continue checking first for a mixfile before a rebarconfig
Erlang release for Elixir should use start.boot instead of elixir.boot
All deps of a rebar dep should be handled by rebar
Add some comments to Mix.Deps.Retriever
Improve coverage for lexical scope on try and case
Dont use manager to decide where a dep was defined
Ensure --app switch does not halt upcoming ones, closes #1398
Pretty printer now prints grouped elements in the same line, closes #1383
String.split("") should be [""], %w() should be []
Improve types for Stream
Install rebar from elixir repo which is more up to date
Remove hopefully uneeded rebar hacks
Ensure unquote_splicing followed by tail works, closes #1393
Forgot the changelog
Update rebar to rebar 2.1.0-pre. This (among other things) fixes a crash if an environment variable contains non-ascii characters
Update CHANGELOG
First element of defrecordp is now the record name and longer the current module
Ensure record rewriter keeps tags after setelement
Allow quoting on aliases with calls
Just iterate the next value if we are going to use it
Rename --docs tests file to docs_test.exs
Add Stream.repeatedly
Add Stream.iterate
Small refactoring on IEx.Options
Refactor IEx.Options and raise on bad key
Ensure Stream.take/2 halts execution
Add Stream.seq() for generating potentially infinite streams of values
inspect_kw no longer is
Replace ?is_new_atom macro by ?is_atom_start
Minor doc fix
Projects without a mix.exs can't be recursive
Ensure Elixir can run on directories with :, closes #1375
Optimize Inspect implementation
Doc typo fix
Update CHANGELOG
Rearrange how ambiguous ops are handled, closes #1378
Document the Inspect protocol and Inspect.Algebra
Get rid of Inspect.Utils
Change inspect formatting to use spaces in between ,
Remove the need for Inspect.Utils.return and Inspect.Algebra.text
Use a Inspect.Opts record instead of passing opts around
Rename Binary.Inspect -> Inspect and Wadler -> Inspect.Algebra
Make Wadler API conform with Elixir API and update doctests to actually run
Do not enable pretty by default
Require `override: true` option to override a dep
Use Mix.Version for dependencies
Update CHANGELOG
Consistently allow empty expressions on both side of operators
Improve Mix dependency error messages
Tighten up the grammar rules regarding parentheses omission
Update and remove out of date erl tests
Ensure HashDict can be serialized into attribute, closes #1368
Do not try to parse arguments for undefined functions
Clean up ExUnit.Case
Clarify docs for Macro.expand_all/2
Implement bindings in Elixir
to_binary always equals to 2.
adding documentation for Binary.Inspect.Utils
tests use tuples instead of recordp macros
using defrecordp for all records on wadler.ex
Clean up ExUnit.CaseTemplate to allow composition
Improve error report on unhandled ->
Show exit messages in IEx
elixir.bat: accomodate for paths with spaces
Optimize `HashDict` to store pairs in a cons cell reducing storage per key by half
Small clean up on parser file
Added doctest examples for Regex.split
More doctests for Regex.captures and fixed return type doc
Tidy up Record and access docs
Improve Record docs
Re-organize records tests
Rewrite how records are introduced
Get rid of specifics
Remove the URI lookup mechanism in favor of application env
Rename the ExUnit option from debug to trace
Update CHANGELOG
Add mix test --debug
No need to print 'test' before each test name
Support --debug on internal tests which are not run through mix
Support :debug option on ExUnit
Remove unecessary overheard on ExUnit runner and ensure messages are in order
Refactor and improve coverage of ExUnit formatters
Update CHANGELOG
Decide on IO.stream and unify read/readline API
Add Stream.reject/2 and Stream.(drop|take)*/2
Improve the docs
Deprecate File.*iterator! in favor of File.*lines_stream!
Improve Stream doctests
Add Stream.cycle/1
Add Stream.with_index/1 and Enum.with_index/1
Add Streams
Update CHANGELOG
Avoid bootstraping issues
Do not automatically nest defrecordp argument
Put doc tests in alphabetical order
Remove docs from functions documented on behaviours
Macro.escape should also escape nested tuples, closes #1344
We don't need the HashSet, its already one.
when contributing it is important to run the tests
Do not downcase host and inline common lookups
Go directly through :elixir_errors.warn
Flip the order of first two arguments in defrecordp/3
Added additional iex output to GenEvent.Behaviour example
Add test for String.duplicate with n of 0
make String.duplicate return empty string for n of 0
defrecordp/3 should nest aliases under the parent module
Implement `defrecordp/3` that enables specifying a custom record tag
Contraction trie after filtering if needed.
Move HashSet examples over to Set.
Doco Set functions.
Adding Set behaviour * Pushing some HashSet tests into the Set tests.
Remove unused var.
Increase node size
Remove unecessary overhead on put/delete
Speed up HashSet.member? and HashSet.intersection
Adding doco.
Improve performance by using set_filter for `difference` with tries. Beautiful.
consistency with other bucket_... functions
Support set_filter with tries. Set intersection for tries now uses set_filter.
Refactor: Add filter. Use filter for both intersection and difference.
quieten warnings.
Set renamed to HashSet. Separate Set from the implementation strategy.
Add examples for disjoint? and subset?
Use doctests.
Adding disjoint? for sets
Adding useful Enumerable functions.
Adding test subset?
Adding set equal?
Don't use new on set_difference, just create the ordered directly.
new was wasteful, just create the new ordered bucket.
formatting tweaks
Corrected definition of difference. Set 1 minus Set 2 members.
difference and intersection support for nodes. Though not very efficient for nodes.
Refactor: removing unneeded comparisons
documentation for functions.
Correcting a bad merge
nodes also don't contain duplicates
delete works with nodes
union works with nodes
member? for sets works with nodes
Support expanding depth of nodes. There is a lot of CRAZY resizing logic that is copied from HashDict. Once everything is working consider extracting.
put supports growing into a trie. * to_list works with trie
Adding set member? for buckets
Adding set difference for buckets
Adding set intersection for buckets
Adding set union
I think member is a better name than value
delete from a set
Adding Set with simple ops just for bucket (small sets)
IEx autocompletion should support identifiers that include numbers
Require Erlang 16B+
Import records that depends on others, closes #1334
Simplify runcmd on IEx
Skip color tests on windows
Skip symlink tests on windows
We no longer execute the doc_tests for elixir file helpers
Disable coloring by default in IEx on Windows. Closes #1329
Added more doctests in Keyword module
Simplify binding handling
Remove verbose doctest
Set a PROMPT when invoking rebar
Added examples for Enum.count/2 and Enum.zip/2
No need to wrap lists in blocks
Inline list funcs in HashDict too
Refer to the moduledoc from Record.defrecord
Update CHANGELOG
Remove matchspec duplication
Erlang says that the first directory of an archive should be the same as the archive name
Remove doctests from Mix.Version
Validate Elixir version in projects, closes #1310
Don't end it with ? if it doesnt return a boolean
Ensure variables from when in match? do not leak too
Remove variables defined in `match?` from scope
quote calls them context, so let's keep it consistent
Ensure binding(..., false) also works
Skip windows test for CHMOD 777, as this does not work on windows
Cleaned up test_helper some more
Cleaned up the elixir test_helper.exs a bit
Grouped some windows functionality in test_helper for elixir
Tests on windows now intercept stderr from elixir(c) invocations
Remove useless assignment on defrecord
Improve doctest error messages, closes #1318
Improve error message and optimize record macros
Allow a record to import itself, closes #1319
Add Enum.reject
mix archive version # & -o flag for #1284
Make release instructions clearer
Bump to v0.9.4-dev
Release v0.9.3
Use semver for development version
Update docs for Record.import/2
Rename sigils from __ to sigil_$, closes #1301
Record type should be private by default, closes #1288
IO.ANSI now uses binding
Allow :binding as an option in quote
Add unquote: true support to Macro.escape
Inspect module before printing, closes #1309
Clean up defdelegate docs
Update CHANGELOG after clean up on the operators table by making it sane and clean in case we want to add custom operators in the future.
Finish operator table clean up
Move ++, --, ** and // to new table
Move operator table clean up
Group arrow-like ops together
Move and and or operators to the new table
Move comp_op to the new table
Move all unary operators to new schema
Initial work cleaning up op table
Improve mix escript_app's documentation
Ensure escript_app doesn't break the app
Ensure esriptize does not try to read directories
Update CHANGELOG
Add tests for nested whens
Support (x, y) when z, closes #1313
Do not use Enum on bootstrap
Add docs to Mix.Version and make version always the first arg
Allow types to be given to defrecordp
Inline list funcs so we don't pay an extra dispatch cost
Mix not using pretty printing
fixing inspect pretty: false option
Added functions for changing mode, owner and group to module File
moving over to :lists.duplicate
^x variables should always refer to the value before the expression
Clean up ExUnit tests
Include description and improve formatting
Optimize temp_vars lookup
Slight clean up on erlang tests
Show original statement if assert or refute fails
Output next steps information after creating repos, closes #1297
Ensure escriptize is performed recursively, closes #1296
Stop parsing on -S, closes #1294
Removed "*.ex/file" parameter checking from elixir.bat
Update CHANGELOG
Use .bat executables on Windows
Update error message in ExUnit
Use the significantly faster Git protocol for github: dependencies
Move .gitattributes files to repo root
Deprecate (fun(...) -> ...) spec style
Added .gitattribute for fixtures in tests, so CRLF is not autoconverted
Support binding/2 that goes across all contexts
Wording on File's @moduledoc
Clean up docs for File
No longer support .beam files on mix local
qoute -> quote
cleanup after refactorization of Code.string_to_quoted
Update CHANGELOG and minor fixes
Add Process.self
refactored/renamed from Code.string_to_ast to Code.string_to_quoted
refactor/rename Macro.to_binary to Macro.to_string with deprecation warning
File.rm_rf! should not complain on invalid entries
cp_r should pinpoint place of failure on errors
Use regex on matching on some of File exceptions
Some IO tests return alternate error codes on windows
Catch invalid arguments for binding/1
Add `binding/0` and `binding/1` for retrieving bindings
Validate eval options, closes #1238
Update CHANGELOG
Add -f option to make clean_exbeam
Get rid of unused variable warning
Warn on undefined module attributes, closes #963
Emit warning for 'x in []' in guards
Raise proper warnings when default clauses from different definitions collide, closes #1244
Use = instead of == on shell comparison
Use proper path separator in msys
adjusting failing tests relying on inspection
stripped spaces from record pretty printing
Make sure we don't receive an EXIT message from the dependency tracker
Update CHANGELOG
Update executable docs
elixir.bat only worked from the bin folder
Update CHANGELOG
Avoid clash in between modules
Clean up error messages, move defaults warning to an error
Removeved the echo prefix from the elixir.bat file
Added parameter validation in the elixir.bat file
Refactoring of some mix tasks
Make sure all Erlang parameters are extracted and parsed in elixir.bat
Do not check in utf8 directories into source control
adjusting nesting tests and behaviour on wadler.ex
adapted wadler.ex unit tests to current interface
using iolist_to_binary over Enum.join on wadler.ex
Follow the bullet point standard on this file
Use the proper code highlight for functions
Ensure errors point to the proper -> clauses
Avoid race condition on CLI tests
Improve error message matching on local.uninstall with archives
Ensure imports inside quotes are properly registered, closes #1225
Ensure defmodule :atom does not define an alias
Return Foo for __MODULE__.Foo outside of a module
Improve mix test to rely on possible multiple messages
Don't assume terminal availability in ANSI doctests
Update CONTRIBUTING.md language
Update docs for Macro.expand
Optimizing string concatenation calls on wadler.ex
Uniform use of whitespace after commas on codebase
Update CHANGELOG
Rename packages to archives
Avoid usage of defrecordp and move all parsing to Mix.Version.Parser
Remove documentation of .split, .drop and .take on HashDict and ListDict
Update CHANGELOG
Handle --warnings-as-errors and other elixirc options in mix compile
fix typo in doc
Go to :binary.match(left, right) directly instead of hoping through String.contains?
Allow +, -, and friends to be called dynamically
There is no need for =~ to be a macro
Only change compilation status if warnings_as_errors
Always print warnings to stderr
Add a test for warnings_as_errors option
adapted IO.inspect calls to Lindig interface
using Lindig's strict pretty printer
Ensure Enum.take/2 doesn't peek ahead
document equal?
Bug: equal? on HashDict was not comparing the two dicts
local.uninstall warn on uninstall package task
changes from PR discussion
implement mix package and related tasks re #1124
Improve efficiency of HashDict contract
Never use the dependency rebar
Simplify out of date deps error message
Remove deprecated code branches
Start v0.9.3.dev
Release v0.9.2
Update CHANGELOG
Deprecate Regex.index/2
Update docs for `defoverridable` and `super`
Implicit super arguments is deprecated
Optimize doctest generation. Closes #1226
Replace @export_type with @typep in the docs
Add support for `h AnyModule.__info__`. Closes #1230
Document `__info__/1`
Provide reference documentation for module attributes
Add missing rm -rf ebin back to docs task
Rename test/doctest.exs file to test/doc_test.exs to follow file name convention
Added more informative error to Makefile when ex_doc is not available.
Add a --force option to `mix local.install`.
Improve error message for diverged deps
Implement Mix.Version, closes #1115
removed use of local variables in shell scripts in order to remove dependency on bash
print compiled even if compilation_status is not :ok it may have been from another file. Halt on an :error
Don't pass warnings-as-errors to module since it isn't needed
Implement José's suggestions.
Unwind a lot of the wrong direction, output warnings based on warnings-as-errors setting
Update parallel compiler callback documentation
Pass exit status to callback so we can decide there whether to stop or not.
a little closer, status is passed to main process
Experiment with how to pass back status. process dictionary doesn't work.
Mostly done. Still need to fix warning printout.
Use =~ with strings where it makes sense
Reimplement =~ to use Regex.match? or String.contains?
Add a few sanity check tests for upcase & downcase
No need for accumulator on downcase/upcase
Optimize downcase, upcase and rstrip in Unicode
Dont run any tasks recursively from another task
Convert project stack to records
to_binary for URI.Info do not ignore the path
Remove unneeded `case`
Add tests for compile_string and compile_quoted, closes #1206
Wrap rebar command on windows inside escript.exe
Ensure default calls are connected in dispatch tracker
Mention mix and testing conventions in ExUnit's doc
Extend the documentation for ExUnit.Callbacks. Closes #1142
Move the description of records to Record's moduledoc. Closes #1166
Reorganize tests for starts_with? and co.
Don't support nested lists in starts_with? and co.
Refactor String.ends_with?
Document super and add more docs to defoverridable
Update CHANGELOG
Add deps to 'mix new --umbrella'
Add support for direct dependencies of umbrella
Implement assert_compile_fail
Disallow &-partial calls on the right side of |>
Clean up DocTestTest
Ensure --cookie is set before remsh starts, closes #1190
:binary.match supports a list of matches
Added -v --version option to all elixir commands.
Bring system.ex back to bootstrap. Closes #1155
Adding String.contains? Detect whether a string contains another string.
Implement Binary.Chars for URI.Info
Make rebar skip deps since mix compiles them
Minor comment cleanup
Proof-read the doc for capture_io
Add prompt test
Update the docs for Code.load_file and Code.require_file
Update the r helper
Clean up test code for module helpers
Add docs for IEx test framework
Add more tests for shell coloring
Don't process ANSI escapes in ExUnit output
Update the tests for l and r helpers
Rewrite tests for helpers to use capture_iex and capture_io sparingly
Write tests for IEx helpers
Implementation of a basic test framework for IEx. Closes #919
Ensure Enum.to_list and Dict.to_list return exactly the same result
Ensure noname scope does not leak after assignment
Option that enable to decide whether `capture_io` captures a prompt or not
Set load paths for dependencies with Makefile
Speed up escriptize tests
Rebar dep with no config is given rebar as manager
capture_io captures a prompt when capturing of stdio
Improve docs for IEx helper l/1
By default, start the application on escript
Don't ignore nil during aliasing. Attempt to fix #1159
Do not access another task directly, use Mix.Rebar module instead
Correctly add load_paths for rebar dependencies
Move dependencies callbacks back into Mix.Deps.Converger
Don't process ANSI escapes in strings in IEx
Update changelog and move version to 0.9.2.dev
Do not interpret ansi escape codes in IEx results
Add documentation to Regex.escape
Improve Regex.escape tests
Support extended syntax in Regex.escape
Minor indentation fix
document update and to_keywords
Better error message for Binary.Chars.List.to_binary. Closes #1144
Implement Regex.escape
Use the shell to run Mix.Shell.cmd commands
Use rebar from project root directory
Release v0.9.1
Ensure we can define a nested record named Record, closes #1133
Remove get! from Dict behaviour spec
Remove deprecated code
Remove remaining function implementation from access protocol old versions
Precompile groups regex
Change project/rebar to manager/source in Mix.Dep
Use Mix.Rebar as module for project pushing
Add tests for %w(BigAtom)a mentioned in #1131
Add space to error message in mix
Give higher precedence to |> than =~
Include location info in the multiple exceptions error
Clean up code, add tests, fix bugs found in tests
Don't test DocTest's doctests
Revert "Make test_doctest target depend on test_ex_unit"
Test doctests for ExUnit.CaptureIO
Review doctests in stdlib to use extended doctests
Minor formatting fixes
Clean up the docs for doctests
Add a couple of comments explaining decisions
Deduplicate test generation code
Make test_doctest target depend on test_ex_unit
Remove unused debug output
Add a test for leaking vars
Little refactoring
Implement extended doctest sessions. Closes #1020
Test ex_unit before doctests
Remove unintended connections between some doctests
Do not include remotes on reachable results
Add tests for body-less functions
Error if guards are given but no implementation, closes #1125
Update CHANGELOG
Remove unused variable warning
Allow keywords in typespecs
Implement the heuristics for garbage collection
Inline nillify in Process
Minor code formatting fix
Use just the process dictionary for keeping history
Ensure aliases from macros are properly expanded, closes #1123
Make IEx helpers use inspect_opts where appropriate
Extract history management in its own module
Handle raw option in rebar deps
Handle rebar dependencies better
s/less than 0/negative/
Don't reverse v's output
Document :history_size option
Add :history_size option to IEx
development and questions
Update mailing list links
Provide source information to all dispatches and complement the API
Module.DispatchTracker also records remotes
"Thank you" sounds better
Be more strict about changes in master
Update pull request creation guidelines
Don't mention the project owner, this is open source
Ensure warnings are proper with yanked and reattached overridables
Check for imports conflicts in batches
Record each definition on tracker as soon as defined
Rename Kernel.LocalsTracker to Module.DispatchTracker
Use precalculated binary size
Extract imports handling to locals tracker (soon to be renamed)
Start refactoring LocalsTracker to support more vertices
Add @doc false to each gen* callback by default
Don't mention `inspect` and `IO.inspect` in IEx.Options
Switch to using pure binaries
Reduce atom footprint when compiling an elixir module
Remove *_table terminolgy in favor of setup/cleanup
Add String.starts_with? and String.ends_with?
Rename Mix.SCM.equals? to Mix.SCM.equal?
Mention IEx.Options in CHANGELOG
Unused functions with cyclic dependencies are now also warned as unused
Print all of the error messages using color :error.
Get rid of elixir_glob now that we run on > R16
Reduce the number of files required for bootstrap
Update rebar version
Default info to normal color and make print_help use it
Set encoding to unicode in io device and no longer process inspect_opts
Clean up how we store recorded locals in the imports table
Mention IO.ANSI in the doc for :colors
Mention value types for individual options
Mention IEx.Options in IEx's doc
Make option docs in IEx.Options visible to ExDoc
Move the list of inspect options back to Kernel's docstring
Deprecate IEx.inspect_opts in favor of IEx.Options
Filter out unknown keyword lists' keys in IEx.Options
Moduledoc for IEx.Options
Add an example of using the `limit` inspect opt
Add get/0 and set/0
Fully support inspect_opts in IEx.Options
Code and doc formatting fixes
Provide color options for escape_fragments
Simplify color enabling logic
Add color options for ls helper
Add color option for informational messages
Add color option for error messages
Initial implementation of IEx.Options
Ensure Enum.to_list and Dict.to_list return the same results for dicts
Do not abort erl names processing when +iex or +compile appear
Start v0.9.1.dev
Add tests for warning
Release v0.9.0
An Elixir module now translates to Elixir.Module instead of Elixir-Module
Enum.Iterator -> Enumerable
Update docs for Enum.Iterator and reduce
Ensure we emit a warning for recursive non used calls
Add missing clause definitions
Remove warning in capture_io
IEx.Server break out of the loop when accepting :eof as input
Clean up and fixes in reducer code
Remove file open in File.iterator and File.biniterator
Enable ExUnitCaptureIO.capture_io to receive input
Remove iterator references in code
Run just R16 on travis
Use reducers in Enum, File and URI
Add reduce to Enum.Iterator protocol
Update CHANGELOG
Add --dot-iex command line option to IEx
Make import_file raise ArgumentError
We don't need import_file/2
Add ability to disable loading of .iex
Remove redundant blank lines in iex helpers' docs
Add import_file/1 and /2 helpers
Add :elixir.scope_for_eval/2 convenience function
Add missing comma in the doc
Split the long :elixir.eval line into shorter ones
Move load_dot_iex to IEx.Server, after `require IEx.Helpers`
Don't mention the f() helper for now (it's not supported yet)
Pass the stacktrace explicitly to IEx.Util functions
Expand ~/.iex before using it
Include description of .iex in the doc for IEx
Don't wrap Code.require_file
Use System.halt instead of :erlang.halt
Add initial support for .iex files
Start v0.9.0.dev work
Release v0.8.3
Add IEx processing to Kernel.CLI
Deprecate Exception.format_entry in favor of Exception.format_stacktrace_entry
IEx.Remsh should be private
Remove Enum.equal?
Do not raise if a dependency can't be found, closes #1052
Update CHANGELOG
Support MIX_PATH as alternative load paths, closes #889
Consider load time on ExUnit reports, closes #893
Deprecate Code.eval in favor of Code.eval_string, closes #953
Remove empty? from the Enum protocol, closes #1097
Improve error messages when there is a space in between function name and parenthesis
Mention Path.expand/2 in the Changelog
Update CHANGELOG
Improve docs for the IEx module and some error messages as well
Change the break-trigger for IEx to #iex:break
Document the break-trigger in `h/0`
Call it simply break-trigger in the docstring
Implement a break-trigger for incomplete expressions in IEx. Closes #1089
Improve error message for invalid patterns in guards and matches
Deprecate IO.getb in favor of IO.getn
Check if the module is in the same context before checking if it is open
Check if we are in the current module context as a fast path
Check if a module is open or not when defining a record
Change preference of |> to support constructs like `1..5 |> Enum.to_list`
Improve docs for records
Remove unsupported matching on rescue clause
Only mix compile -q recompiles unnecessarly
Improve docs for IEx.Helpers
Update moduledoc for IEx.Remsh
Add a docstring for IEx.Server.start
Clean up the code some more. Closes #1051
Optimize HashDict.take and HashDict.split, update CHANGELOG
Use faster HashDict.drop/2, ListDict.take/2 and ListDict.drop/2 implementations
fix inappropriate doctests for drop/2, take/2, and split/2 functions of Dict module
Update ExDoc directory
Split SOURCE_REF into its own makefile function
Use :stdio as default argument in capture_io
Issue #1069: Add Dict.drop, Dict.take and Dict.split
Remove unnecessary Mix test output
Replace getrev.sh with a one-liner (thanks @bellthoven)
Remove deprecated usage of keywords in Mix
Update CHANGELOG
Deprecate Enum.at! and Dict.get! in favor of Enum.fetch! and Dict.fetch!
Clean up mix dependency retrieving and converging
Remove IExTokenMissingError and clean up the code
Distinguish between TokenMissingError raised during parsing from the one raised during evaluation in IEx
Add Enum.at/2, Enum.at/3 and Enum.fetch/2
Also convert String.to_integer tests to use ===
Remove if in favor of extra function clause
Change == to === in tests for String.to_integer and String.to_float.
Retrieve the most suitable revision for source links in the docs
Make String.slice consistent with Ruby semantics, closes #1034
Ignore files in umbrella apps directory
Optimize HashDict.pop
Implementation of Dict.pop (proposal #856 for Dict)
Update CHANGELOG
Move List.Dict to ListDict
Use level two headings when appripriate
Add some sample pull requests
Improvements to contributing guide
Also allow explicitly capturing of stdio and stderr
Remove unused variable
Ensure no group_leader leakage on capture_io and remove stderr test which was printing on run
Propagate dependencies in mix tasks
Implement capture_io for ex_unit
Ensure record args are evaluated in the parent context, closes #1065
Expand macros and quoted variables inside << >>, closes #1063
Add missing unquote/unquote_splicing documentation
Revert "Expand macros and quoted variables inside << >>, closes #1063"
Expand macros and quoted variables inside << >>, closes #1063
Update CHANGELOG and verbage from previous pull request
Update CHANGELOG
Accept macro/@attribute options on quote
Support options from macros and @attributes in import, alias and require
Make String.valid? work on characters
Add String.valid?
Ensure nested modules are properly defined, closes #1057
Only add quoted: true to required ast nodes
Ensure imports respect the quote context
Deprecate var_context in favor of context
Provide a more robust alias and import expansion
Store in the AST if contents come from a quoted expression
Downcase host and scheme in URIs
A test case for empty receive block
Add missing trivial clauses to record rewriter
Clean up and speed up exceptions
Improve warnings related to default arguments
Use a manifest to store generated files
Improve cons cell and other operators precedence, closes #862
Remove :app project setting in umbrella projects
Improve function(some_macro/x) error message
Add '--quiet' option to 'mix deps.get'
Add --umbrella option to 'mix new'
Remove unnecessary task handling deps.compile
Add tests for String.to_integer and String.to_float
Binary.Inspect now uses pretty printing library
Make String.to_float always return a float
Add String.to_integer/1 and String.to_float/1
Remove outdate docs and example
Use in_project in deps.compile (tks @ericmj)
Move the umbrella check to Mix.Project.recur
Make Mix.Project.load_project private in favor of in_project
Put pretty printing library into core
Tests for wadler; Guards for primitive types.
Add documentation about import warnings
Add support for umbrella project as dependency
Clarify the CHANGELOG
`IO.gets` and `IO.getb` now return binaries when reading from stdio
Improve specs and docs for String module
Report setup_all errors and mark tests as invalid
Run tasks for umbrella projects in correct order
Add pretty printing library to Elixir stdlib
Automatically detect when to warn on import
Don't warn on unused imports
Refactor elixir_import to mention special forms list
Improve docs for String.split
Don't output if there is no doc, closes #1025
Add support for unicode to EEx.Tokenizer
Another attempt at fixing the build on R15
Use the macro to automatically transform into R15 call
Improve representation of floats and integers, closes #1021
Add List.insert_at/3
Add Dict.fetch
Ensure directories have the same name as their applications
Private on_load functions should not trigger unused warning
Add __DIR__, closes #1019
Add a CONTRIBUTING.md
Private functions used by private macros no longer emit an unused warning, closes #885
Ensure lexical scopes are not password forward by accident
Optimize Mix.Shell.output_app?
Don't use the full stack for umbrella test
Support --cookie, --hidden, Node.get_cookie and Node.set_cookie, closes #910
Add support for umbrella projects in mix
escriptize should yield arguments as binaries, closes #995
Deprecate List.member?/2 in favor of Enum.member?/2
Deprecate assert inlist in favor of assert in
Update CHANGELOG
Keyword.keyword? should work with any atom as key
Add Enum.uniq/2
Improve previous clause does not match warning
Refactor elixir_quote to work on Elixir expressions
Liberate `in`, fixes #817
Add Enum.empty? and Enum.member? to the Enum.Iterator protocol, fixes #804
Ensure s and t helpers work with code compiled via c
`unless` argument clarification
Replace "execute" with "evaluate" for consistency
x in "x in [1,2,3]" is evaluated only once
Evaluate first argument in is_record once
"executes" -> "evaluates and returns"
Better explanation for XOR
Clarify on the return value of Enum.sort
Update CHANGELOG
Implement Enum.min/1 and Enum.min/2
Implement Enum.max/1 and Enum.max/2
Add test for SyntaxError in Kernel.CLI
Print Exception in Kernel.CLI.run on standard_out.
Encode Kernel.CLI.main argv in unicode.
Ensure String.Unicode is in elixir.app on clean install, closes #999
Remove custom dispatch to records in Binary.Inspect.Tuple
Remove special case for implicit splicing inside quote
Add a test for inline keyword blocks
Ensure we don't splice keyword args unecessarily, closes #989
Consider current project rebar if it is available, closes #962
Ensure do/else|*/end are inlinable, closes #966
Properly encode unicode binary chars, closes #961
Update CHANGELOG
Move read_path to Mix.Utils for now
Ensure IEx won't crash on bad error messages and invalid stacktraceqs, closes #974
Remove unused variable warning in Enum
Implement Enum.member?
Remove short paths on Enum
Add more documentation to ExUnit.Callbacks
Use monitors instead of links in exunit
Define missing Kernel functions
Calculate target just once
Ensure imports are passed around arg by arg, closes #990
Clean up conversion to list
Return nil from import
Return early in Dict.equal? if the dicts have different size
Implement Dict.equal?
Implement Keyword.delete_first, closes #984
Handle exit messages from tests in ex_unit
Implement Enum.equal? with equality callback
Improve flag error messages in CLI
Flags -p and -pr fails if pattern match no files
Implement Enum.equal?
Implement Enum.to_list, closes #977
Dont swallow undef errors in Binary.Inspect
Improve `ls` IEx helper output when ANSI colouring is available
Remove accidental logs
Simplify coloring logic (thanks ericmj)
Expand ~ in cd
Improvements to mix
Expand ~ in ls
Multi-column output + coloring for ls
Update exdoc links
ls helper
Make it clear the current section in Typespec is about anonymous functions
add parens for function calls in examples
Add local.rebar task
Remove last use of eval in IO.ANSI
Revert "Use unquote instead of @ in HashDict"
Do not go through eval if there is nothing to evaluate
Unfold the loop manually
Optimize elixir_tree_helpers:abstract_syntax
Store clauses in a separate table (thanks to yrashk for first iteration of this patch)
Bump to 0.8.3.dev
Remove deprecations
Get rid of eval on IO.ANSI
Release v0.8.2
Also dispatch to local macros
Do not import IEx.Helpers since we delegate to them, closes, closes #957
Implement GenEvent.Behaviour
IEx's h helper should not render ANSI codes in the documentation pieces, otherwise it becomes impossible to read IO.ANSI documentation
Improve some docs
Make Enum.Iterator's docstring more descriptive
Ensure the macro system respects imports hygiene, closes #875
Ensure hygiene also works with directl calls to Kernel.function
Ensure hygiene applies to function and partial applications
Remove check_require in favor of a meta tag
Refactor elixir_dispatch to rely more on elixir_scope
`function(:is_atom, 1)` is deprecated in favor of `function(is_atom/1)`
Uncomment features related to unquote fragments
Ensure the proper scope is passed on args call, closes #949
Properly quote | expressions, related to #944
Minor defrecord documentation improvement
Mention Record.import in defrecord documentation
Do less work at runtime for %w/%W
Improve doctest expectation messages
Implement Record.import macro that allows using private macros on public records
Add support for %w and %W (words) sigils with return type modifiers
Extract import functionality
Improve elixir application doctest coverage
Compile process upfront and do not rely on it in the error handler
Revert "Enum.split_while did not behave as advertised and provided the wrong API. Provide Enum.split_with instead"
Update CHANGELOG
Enum.split_while did not behave as advertised and provided the wrong API. Provide Enum.split_with instead
Add insert_elem/3 and delete_elem/2 functions, deprecate setelem in favour of set_elem
Report compile-time doctest errors during test runtime
Minor doctest source code improvement
Improve doctest exception tracking and reporting
Add import: option to doctests. It is false by default.
Improve error messages on else do grammar mistakes, closes #888
Can defined a nested module called Elixir, closes #858
Allow match syntax on nested records, closes #871
Make it clear module attributes are prepended, closes  #872
Define Record.options for each record with the allowed options
Refactor find_dispatch to loop data functions and macros lists just once
Clarify import conflict semantics.
apply is a macro
If a doctest fails with an unexpected exception, test failure message should contain the original expression that caused the exception to be raised
Split doctests that expect an exception from the ones who does not
Allow doctests to be defined dynamically
Split doctest structure from other kernel tests
Improve deprecation of :+.() and friends
Undoctest Kernel.float_to_binary/2 test as it can't be tested on R15B*
Convert Kernel to doctests
Somewhat better line reporting on doctest failures
Capture the offending expression in DocTest if we can't AST it
DocTest: add a note on using standard output
Add support for exception tracking in DocTest
Initial ExUnit.DocTest implementation
{}, [] and friends are purely deprecated
Allow multiple lines 'foo . ()' calls
Allow 'foo . (42)' calls
Add Macro.escape_quoted instead of Macro.escape with options
Split IEx introspection functions into its own module
Make s and t helpers private too
Make h/2 and h/3 private in IEx.Helpers
Improvements to File.ls implementation
Replace length check with a check against []
Remove trailing whitespace in iex/helpers.ex
Add documentation on @record_fields and @record_types to defrecord
Improve docs for function
Make record types in record public as well
Improve documentation for the String module
Include more recent Erlang versions into Travis-CI configuration
Update binary_to_ macros to use binary_to_ functions in R16B.
Unicode split
Improve error messages
Also allow unquoting on setup and teardown callbacks
Ensure unquotes are respected in the test macro
Improve docs and exceptions for regexes
Use at least 2 runners regardless of the number of schedulers
File.ls & ls! tests now cover non-existent directory situation
renamed to ls, added unit tests
Added File.listdir! variation
Added File.listdir API
Revert "IEx autocompletion should show all exported functions, not only documented ones"
Add Path.t (for input types) and Path.r (for output), closes #873
Fail if an application can't be started, closes #869
Support --help and -h in elixir and iex, closes #854
Improve error message on unclosed interpolation/string, closes #794
Do not run cover tests before R16
Add cover support to mix test
Improve docs for Dict
Add pwd and cd helpers to IEx
Ensure Macro.escape also respects nested quotes
Use unquote instead of @ in HashDict
Clean up Unicode using the new unquote fragments
Allow dynamic dispatch names on defdelegate
Support unquoting on Macro.escape
Update CHANGELOG
Allow unquote in def*/2
unquote now applies to the closest quote
change comments to match the code
add some missing parenthesis in an assert
Add space and parenthesis were appropriate
defrecord should return body evaluation result
Improve formatting for assert left = right
Show a better error message in cases of possible deadlocks
ANSIfy iex helpers' output
Change the color of result printouts in IEx
Do not depend on terminal values for IO.ANSI tests
Aliases defined inside macros should be carried over
Reimplement Binary.Inspect.Utils.escape/2 without bitstr comprehension
Suppress an unnecessary warning
Minor CHANGELOG fix
Update CHANGELOG
Record rewriter should also optimize in-module calls
Binary.Inspect.Utils.escape/2 shouldn't escape a standalone hash (#)
Reimplement Binary.Inspect.Utils.escape/2 with bitstr comprehension
Better error reporting for invalid bit string comprehension generators
Use latest ExDoc
Update CHANGELOG
Add elapsed times to ExUnit runs
Print a warning if ExUnit user config contains an invalid value, and assume an empty user config
ANSIfy ExUnit formatter
Add more info to release process
Release v0.8.1
Deprecate ExUnit.after_spawn callbacks
ExUnit callbacks must return :ok or { :ok, data }
Add support to case templates
correct apply/3 example
Add metadata support to ExUnit
Disable native compilation when on_load attributes is present
Use fn clause matching
Make Mix CLI support --help, -h and -help, fixes #843
Backwards incompatible change on `before_compile` and `after_compile`
Switches are now overridden by default but can be kept in order if chosen, closes #782
Update CHANGELOG
Small refactoring on Mix tasks
Only accept the IO device on inspect when we have three args
Doc typos, misc. style cleanup
Suppress minor warning (unused variable) in hash_dict.ex
Misc. documentation cleanup
Default mix task should be run, closes #834
Push a test case related to the nested vars in clauses
Pick latest variable in between clauses instead of picking a random one
Drop HashDict.t type and spec HashDict.new with Dict.t
Add HashDict.t type
Change references or invocations of Process.self to Kernel.self
Deprecate Process.self in favor of Kernel.self to make imports easier, closes #832
Minor indentation fix
Remove some garbage
Unpack __block__ in type specs
Add Node.connect/1 method
s/on/in
Ensure aliases expansion also works for implicit aliases
developing in progress for: * check erlang files and dependencies before compiling * error output for erlang compiling * compiling of leex and yecc
Improve aliases hygiene by using metadata
Improve docs for File
Refactor aliases handling
Tidy up and clean up quote API, closes #814
Implement as_boolean/1 type
Use tag from VERSION on package.exs
Minor IO.ANSI.terminal?/0 documentation improvement
Add missing specification for IO.ANSI.terminal?/1
Better error reporting for invalid ANSI escape sequences
Don't emit ANSI sequence escape codes in shell in OTP prior to R16
Update CHANGELOG
Expand current module macros with Macro.expand, closes #815
IO.ANSI.escape shouldn't emit a reset sequence if no ANSI sequence was emitted
Better error reporting for invalid type specifications
Reduce vars footprint in case/receive clauses
Take into account Erlang may pass line numbers as none
Improve how aliases for defmodule are generated
R16A fixes
Allow building Elixir on R16
Use hardcoded version on elixir.app.src for now
Move bootstrap code for IEx to IEx.CLI
Deprecate :local.(args) syntax
Minor IO.ANSI documentation fix
Remove deprecated branches
Update CHANGELOG
IO should default to the group leader
Allow mix projects with just one letter, closes #799
Change IO.ANSI escape from #[] to %{}
Move ansi control to Mix.Shell
Define a sequence as a key, value pair
Initial ANSIfication of mix
Better support for Unicode lists
Compile before release targets
Release v0.8.0
Path.join merges second path regardless if it is an absolute or relative path
Add Path.relative and Path.type
Add default timeout to elixir_code_server and unify all call points
Ensure consistent use of stab operator in do/end, parens and fn/end, closes #780
Implement integer -> size(integer) syntax shortcut for bitsyntax
Consolidate Elixir's version into a VERSION file
Preserving mtime needs to be invoked per task
Update lib/elixir/lib/hash_dict.ex
We no longer have a .release task
Properly declare .PHONY targets
Update rebar.config
Call preserving_mtime just once, at the root compile task
Previous commits fix #769.
Use System.services_timeout/0 in Mix.
Use System.services_timeout/0 in ExUnit.
Use System.services_timeout/0 for kernel tests.
Use System.services_timeout/0 for elixir_code_server calls in the kernel.
Add System.services_timeout/0 function.
Use system_services_timeout for elixir_code_server calls in elixir_compiler.
Add a system_services_timeout app env var to Elixir.
Bump to 0.8.0.dev
Add hygienic imports to macros
Raise an exception if var!(x) does not expand to a proper var
Export elixir:translate_forms/3
Provide an endpoint for translating elixir forms
Improve var! docs
Properly expand var! second argument
Aliases for defmodule also works for raw atoms
The AST now allows metadata to be attached to each node
Update LICENSE
Properly invoke mix on tests
Check if native name encoding is utf8
String.capitalize now considers Unicode's titlecase property
Ensure File.cwd works with utf-8 file names
Provide iex -S mix instead of mix iex
IO.ANSI.escape implies terminating #[reset] now and IO.ANSI.escape_fragment has been introduced
mix escriptize: Only include .beam and .app files from ebin.
Use the new Path.relative_to and ensure it won't fail for equals paths
Improve IO.ANSI test case so it can be run on non-terminals correctly
Put proper IO.ANSI tests in
Add System.tmp_dir, System.cwd and System.user_home
Ensure we do not ditch modules with anonymous functions in them
Introduce IO.ANSI.escape/1,2 functions
Add a pre-R16 warning about ANSI escape sequences in iex/erl
Initial IO.ANSI implementation (based on https://github.com/yrashk/ansiex)
Inspect should represent non valid terms with #
fix deprication message typo
Improve Binary.Inspect for Function test
When possible, represent functions in a literal way
Use @moduledoc for the module documentation in Path
Compile Path on bootstrap
Use the new Path.expand on mix
Add Path.absname and expand ~ on Path.expand
Move path related functions from File to Path
Deprecate OrdDict and Binary.Dict
Instead of a dynamic array, HashDict uses nested tuples
format_entry should also handle fun, arity, location entries
More docs fixes to string
Improve docs for the string module
Tidy up HashDict and the Dict protocol
Introduce List.Dict, DRYing the tuple list as Dict implementation
Implement more of the Dict API into HashDict
Increase large hash dict tests range
Initial work on a faster HashDict (it currently suports get/put/delete/size)
Support SpecialCasing.txt on Unicode
Do not generate lowercase clause if lowercase == codepoint
Better error messages when a dependency compilation fails
Do not print messages on up to date escript and update CHANGELOG
Consider config_files in escriptize and improve tests
Use binary matching with the utf8 specifier to implement String.next_codepoint/1.
A few 'mix escriptize' fixes:
Add a disclosure about setting Code.eval options
Do not recompile a dependency if nothing changed, closes #759
Ensure requires are sorted on Code.eval
Document var_context option
Remove time calls from Makefile
Expand aliases inside quote
Improve hygiene for variables, related to #722
Also handle < and > inside interpolations
Make IEx rely on ensure_compiled and add a fix for when the function has no docs
mix escriptize: Correctly set :escript_embed_elixir to true by default.
Allow protocol definitions nested inside modules
Add a stacktrace to /> deprecation
Add changelog entry about /> -> |>.
Add back /> as a deprecated operator.
Enum: Use index type consistently.
Support indexed Enum.each/2.
Support indexed Enum.map/2.
Remove unused optional argument from Record.{deffunctions, deftypes}.
The pipeline operator is now '|>'.
mix escriptize: Support escript_path to specify the path on disk to write the escript to.
Provide elixir compiler specific options instead of sharing
Only starts erlang compilation if a file was actually found
Provide faster record dispatching for protocols that do not have fallbacks.
Add cwd as parameter to Exception.format_entry
fixing identation for markdown
Ensure Enum.take(iterator, 0) does not consume any item as well
Allow file iterators to be closed, Enum.take should not take items it is not going to use
Improve docs
Add String.valid_codepoint?/1.
Initial mix compile.erlang task, issue #625
Clean up Mix.project after setting it
Define tests functions used as a dependency explicitly
Extend the Dict protocol to work with tuple lists
Get rid of a minor compile-time warning
Functions defined inside quote(location: :keep) retain the source stacktrace
Make a distinction between file and module body in stacktraces
Propagate configs from ParallelCompiler in ParallelRequire
Do not rely on the third arg of catch clauses
Rename BOOTSTRAP to __BOOT__
Discard spurious cons list from stacktrace
Keep \377 and 0377 as the octal syntax, closes #737
Update CHANGELOG
Improve how exceptions are handled in general
Underscored functions are allowed with passed via only
Add type specifications to the Node module
Add type specifications to the Process module
Improve documentation for Process.get/0
Minor documentation improvement for System.at_exit/1
Documentation typo fix in Kernel
Support "\a"
Insert new line in between printed docs
Reduce default assertion timeout to 100 miliseconds
Add Dict.put_new and Keyword.put_new
Add assert_receive and refute_receive to ExUnit
Update CHANGELOG.md
Improve message for bad function error
Remove __info__/1 from __info__(:functions)
Update octal and hex escapes for characters, char lists, and strings to all accept the same syntax and be case insensitive.  Also relocated the character type macros into lib/elixir/include/elixir.hrl so that they didn't need to be defined in both lib/elixir/src/elixir_interpolation.erl and lib/elixir/src/elixir_tokenizer.erl. Added to the erlang and elixir unit tests to test the new syntax.
IEx autocompletion should show all exported functions, not only documented ones
add octal and hex escapes for characters
add code and tests for case insensitive hex interpolation.
modify atom with interpolation tokenizer
Implement String.slice/3
Implement String.capitalize/1
Add ExUnit.ExpectationError and move special formating to ExUnit.CLIFormatter
Better error message when no test directory exists, closes #716
Support else clauses on try
Fuller make clean
Align expected and actual values in assertion failure messages.
Get rid of deps.start
Support << "string" :: utf8 >> as in Erlang, closes #700
:flags option was deprecated in favor of :switches to support many types
Small refactoring on RecordRewriter
Typespec syntax should support [type, ...] shorthand for nonempty_list(type)
String.first and String.last now return nil
By default mark messages in exceptions as binaries
Further optimize record calls
String.Unicode.rstrip raise error when an argument is not binary
String.Unicode.lstrip raise error when an argument is not binary
Deprecate raw in favor of path, closes #703
Compiler and test runner now check for the number of schedulers online
ExUnit supports many manual runs
Improve test to verify ExUnit.Runner is not in the stacktrace
Unload sync and async cases from ExUnit.Server at once
Use System.cmd instead of Port.open
The default formatter of ex_unit should not prints unneeded stacktraces.
Improve ExUnit stacktrace to ignore ExUnit internals traces
No need to actually rely on ERL_LIBS since we just need elixir beams
Allow custom mtimes to be given to extract stale
Improve docs for GenServer.Behaviour
Update CHANGELOG
Mix now starts the current application
Explicitly support file in quote
Dependencies' apps are started by default on compilation
More improvements to bitstring docs.
Add a supervisor to Mix, closes #392
Improve coverage for Supervisor.Behaviour
Refactor module_test.exs to reduce assertions on load time, closes #696
:... is a valid atom, closes #697
Improve assert_raise when message matching fails, closes #694
Improve docs for << >>, closes #693
Application.Behaviour.start is a private function to Elixir's stdlib
ExUnit now defines proper application and supervisor callbacks
Introduce `Supervisor.Behaviour` to define supervisors callbacks
Improve coverage for GenServer.Behaviour
Introduce `Application.Behaviour` to define application module callbacks
Improve GenServer.Behaviour docs
Start an app and its dependencies with --app
Converting typespec to an AST should transform range/2 type back to a `..` operator
Recompile the project when a dependency is recompiled, closes #687
Bump to 0.7.3.dev and get rid of deprecations
Release v0.7.2
Improve docs for mix run
Ensure update_* fields work with record rewriter
Add a test for conflicting record inference
Move more behaviour to Enum
Ensure RecordRewriter is no-op for non record fields
Decapitalize Erlang-style named variables in type specifications' annotations when converting to AST
Minor CHANGELOG improvements
Ensure Macro.to_binary work with unary not
Update CHANGELOG
Document the record access rewrite feature
Rewrite records accessors when possible
Improve documentation for the /> operator
Enable record rewriter inference
Add String.Unicode.{lstrip,rstrip}
Support try/receive in record rewriter
Record rewriting works with case clauses
Extend reach of record rewriting
Improve IEX's s helper implementation
Type specification to AST conversion should support paren_type
Initial work on RecordRewriter
IEX's s helper should include callbacks in its output
mix compile.app should allow custom keys in .app
Improve Typespec stacktraces
Add Macro.extract_args, closes #677
Validate all app properties and do not accept nil values
Implement Mix.Project.application values validation
Get rid of unused compilation mode
Keep variables in a single dictionary
Deprecate record default-based generated functions
IEx.preload is gone
Ensure new IEx works on Windows
Ensure IEx runs only after Elixir's CLI process its options
Improve System module type specifications coverage
Consider zero-arity on Macro.to_binary, closes #682
Add yrashk to .travis.yml notification recipients
Store @specs in the order they were specified in the source code
Update lib/iex/lib/iex/helpers.ex
Add a note about string(), char_list() and String.t() types
Add IEx helper l/1
Mention r/1 helper in IEx help
Simplify API exposed in IEx.Helpers as h/1, s/1 and t/1 are more flexible now
Add IEx helper flush/0
Improve shelling out on mix, closes #492
Add support for "local" function syntax in IEx's s helper
Catch invalid IEx's h helper invocations
Make h/0 IEx helper work again
Minor IEx helper improvement
Add support for h(function_name) helper in IEx
Add support for h(Module.function) helper in IEx
Initial piece of documentation on type specification syntax
Minor documentation fix in IEx.Helpers
Improve h/1 IEx helper to handle some cases that were not handled before
IEx's h/1 helper should check IEx.Helper's macros before handing off to Kernel
Add macro_exported?/3 helper
Update CHANGELOG
Add new typespec syntax to defcallback too
Ensure proper stacktrace is shown in macros, closes #676
Add support for s/2 and h/2 helpers
AST representation for the :elixir.char_list() type should be char_list() as it is possible to use this type directly without specifying :elixir module name
Support -> in Macro.to_binary and improve fn printing too
Add a more explicit syntax for ((...) -> ...): (fun(...) -> ...)
Change fun(... :: signature) specification format to (... -> signature)
Ensure parenthesis are allowed in call args
Support -> inside parenthesis
More work on improved typespec syntax
Change function type specification syntax (WIP)
elixir_code_server should not trap exits and should not log on terminate
Ensure IEx boots fast and with Elixir available, closes #673
Do not add lines to __info__ function
Make ExUnit exit happen in two steps.
Ensure debug_info is actually set to true
Support `\xXX` and `\x{HEX}` escape sequences in strings and char lists
Make CHANGELOG more consistent
Deprecated `assert left in right` in favor of `assert left inlist right`, closes #662
Update CHANGELOG
--debug-info is now true by default
Add function(Module.fun/arity) and function(fun/arity) syntax
Revert "/u is not required for Elixir regexes"
fix some doc typos
Update lib/elixir/lib/record.ex
Update lib/elixir/lib/record.ex
Speed up native compilation by skipping it in the bootstrap process
Raise an exception if invalid record field is given, closes #554
More improvements to typespecs, closes #617
Improve error message when invalid token is followed by new line
WIP on bounded_fun support
Raise an error if clauses with different arities are defined in the same function, closes #657
Also allow multiclause functions on fn
Improvements to Regex and String
Add String.strip/1
Strip whitespace characters instead of space in String.rstrip
Strip whitespace characters instead of space in String.lstrip
Show warning if a rescue clause can never match, closes #641
Show better error message when rebar is not available, closes #647
Deprecated `Enum.qsort` and `List.sort` in favor of `Enum.sort`
Add Enum.sort which uses merge sort and performs considerably faster than Enum.qsort
Perfomance improvements to Enum.drop/take
Do not exit after each run on ExUnit
Improve IEx by using the -user option (ht @yrashk)
Updated rebar with more env variable fixes
Remove tests since utf-8 names on env variables are poorly supported depending on the OS and ERTS
Remove previously deprecated code
CI doesn't like utf-8 chars as env, let's try iso
Update version to 0.7.2.dev
Ensure we are inside a git repository before retrieve git info, closes #649
Ensure System env functions properly handle utf-8 data
/u is not required for Elixir regexes
Update rebar executable with utf-8 env fixes
Improve docs and style on unicode.ex
Add `make install` task
Release 0.7.1
fix typo in enum docs
Convert integer to a list in order to generate the module name
Add IO.binread, IO.binwrite and friends, closes #645
No need for lists:concat
Reduce atom footprint when compiling code
Bring the same __ENV__ semantics to Module.create
file needs to be a binary
Copy all __ENV__ information on eval
Ensure rstrip and strip work on emoty strings, closes #643
Support R15B
`halt` was moved to System module
Make update no-op if no args are given
default record vals to :undefined instead of :nil
Do not print warnings for injected private macros
Use new defrecordp in Regex module
Add support for defrecordp
Update CHANGELOG
Filter out compilable files from stale ones in Mix
Only allow () under special circunstances
Ensure parenthesis can be used in macros and fn shortcut, closes #634
Use File.read instead of File.exists? + File.read!
Clean up ExUnit.Formatter
Improve mix test helpers with respect to user configs
Add Keyword.keyword?/1 function
Flexible formatters for ExUnit
Add support for ExUnit user configs
Bring one more check back in mix's deps.git_test
Suppress an unnecessary (optimization-related) warning in one of the kernel tests
Improve defrecord documentation
Improve t helper documentation
Update lib/iex/lib/iex/helpers.ex
Resurrect t/3 iex helper
Support `-q` when running tests to compile only changed files
Add support for printing record typespecs
Generate a proper clause var name
Do not name quoted variables
Remove Calendar from the upcoming release
Tidy up Typespec API, improve docs
Only generate needed clauses in Protocol
Compile specs and callbacks to @spec and @callback so they are easier to access
Use $(RELEASE_FLAG) in Makefile
Actually define types for Macro.Env
Add support to record_type in defrecord
Speed up protocols by concatenating modules at compilation time
Improve shadowed variable warning
Update CHANGELOG
Deprecate Enum.times, closes #619
Check if the first aliases argument is indeed an alias atom
Warn that function definitions should start with lowercase characters or underscore, closes #620
Reorganize keyword handling clauses
Keywords are allowed after . identifier, closes #621
Support annotated types in Kernel.Typespec.to_binary
Kernel.Typespec.types/1,3 should recognize typeps and opaques
Remove unused variables
Keep user's given name when rebinding variables
Do not print elixir modules as keywords, closes #603
Implement a simple version of the t helper for the interactive shell (prints out type/spec information)
Record field types definition support
Remove dialyzer warnings from elixir_errors
Remove dialyzer warnings from ExUnit.Assertions
Add typespecs for Dict
Add typespecs for Enum
Support (parallel) requires on mix run, closes #495
Add typespecs for Keyword
Add typespecs for String
Keep arguments order on OptionParser
Purge loaded modules on tests
Changing deps information on mix.exs forces users to fetch new dependencies
Make SCM formatting more flexible
Wrap mix escriptize in Elixir's default CLI setup, closes #560
Make typespecs compilation happen in two steps, closes #598
Use Behaviour in Dict
Only define types in protocols and records if one was not defined yet
Add Typespec.to_binary/1
Support @opaque
Add Kernel.Typespec.defines_type?
Ensure defoverridable functions can be referred in many clauses, closes #595
Do not check clauses just after non quoted ones, closes #591
Provide faster, with docs and debug info first compilation
Avoid possible race conditions on test suite
Do actual matching on = assertions
Add support for access macro in typespecs
Add get! method to dict behaviour
Run make dialyze only after .release
Add String.t() and char_list() types, discourage use of string() because it might lead to confusion.
Protocol compilation happens during the internal phase, therefore @callback and @type are not yet available
Correct dialyzer option use when adding Elixir to PLT
Reorder core modules so that elixir will compile
Protocols should define a @callback implementation
Avoid dispatching to locals from compiled structures
Deprecate Behaviour.defcallback/1 in favor of the typespecs wrapper, closes #520
Use new callbacks on Mix.SCM
Disable internal as soon as core is fully compiled
Add Module.to_binary
Use new callbacks in URI.Parser
Add support to new style behaviours
Define a type t for records and protocols
Allow to define a callback from a spec
Define __info__(:module) instead of __info__(:self)
Add make dialyze target
More dialyzer fixes
Avoid negation in unless, simply invert the clauses
Implement more returns boolean checks
Do not take :__exception__ for granted as a record
Avoid generating extra clauses for protocols
Many dialyzer fixes
Filter no auto import list
Typespec fix in Kernel
Revert "Work around a dialyzer bug"
Invert the order arguments are handled on in
No need to special case the compiler_clause anymore
Convert file to char list, closes #583
Work around a dialyzer bug
Direct to Binary.Inspect
Also add debug_info to Erlang source
Use inspect to convert atoms
Compile with --debug-info by default, closes #580
Macro.to_binary should correctly process expressions involving regular atom module names (e.g. :lists.seq(1,100))
Support do blocks on __scope__ special form
Only unquote() if unquote is permitted
Refactor the Makefile and recompile kernel by default
Use String.printable? instead of Enum.all? on tests
Also autocomplete when / was already typed in
Show available arities when function name is complete in autocomplete
Show docs for default generated functions
Only show documented functions on autocomplete
Minor documentation fix for defdelegate
Try a different and simpler approach to clauses warnings, closes #567
Out-of-bounds String.at should return nil
Store overridable funtions defined in before_compile callbacks, closes #572
Improve docs for __aliases__
Rename String.Unicode.sequences to graphemes
Atoms true and false are also boolean returns
README: List all applications provided
Add support for named sequences and make String module aware of it so it does correct job at calculating length, picking characters, etc.
Update Makefile
Minor improvements to the unicode compilation step
Compare all known compilation types
Add String.Unicode.version/0
Use bin/elixirc (fix the build)
Support String.downcase and String.upcase according to Unicode 6.2.0
Optimize range match when values are known at compile time
Rename Mix.SCM behaviour functions
Remove unused function
Initial work on Calendar.format (based on ICU)
Improvements to Calendar module
Improvements to SCM behaviour specs
Add package.exs, update RELEASE file
Remove deprecated branches
Give more context to h()
Bump to 0.7.1.dev
Revert "Remove Calendar from the upcoming release"
Use Keyword and check for atom key
Release v0.7.0
Remove Calendar from the upcoming release
Improve wording in CHANGELOG
Update CHANGELOG
Normalize __ENV__ as the last argument, closes #552
Improve IO docs
Use Keyword.equal? instead of sorting
Add Keyword.equal?
Improve docs for IEx
Rename d helper to h, and h helper to v/0
Slightly better helpers documentation in IEx
unquote_splicing should work with pipes
Improve Code.string_to_ast docs
Remove convertion to atom from parser
Refactor elixir_tokenizer scope options
Make tokenizer be able to limit atoms to existing atoms only
fixing examples in kernel
fixing examples in string
fixing examples in file
fixing examples in enum
Add binary_to_(integer|float) to (integer|float)_to_binary
Keywords are no longer sorted
Better inspect for floats
Deprecate List.zip/2 in favor of Enum.zip/2
Improve comments and remove docs for Dict impl's functions
Prevent List.zip([]) and List.unzip([]) from hanging forever
File.cp family should preserve file's mode
Make mix compile.app task populate description & registered properties
A protocol should not generate documentation to behavior_info
Whitespaces :scissors:
Add support for defining multiple protocol implementations in one go
fixing docs indentation
Update System.build_info docs
Include the most recent tag into the System.build_info tuple
Allow line in quote to be an expression, closes #525
Get first element from module name
Add support for record.update/2
Support bytes, bits, utf8, utf16 and utf32
Optimize Binary.Inspect.Utils.escape
Optimize protocols when there are no fallbacks
Solve a::b ambiguity
If :B is allowed, B: should be too
Pass context in setup/teardown callbacks
Quote keywords on inspect
Solve inconsistencies in the Dict API
Rename Macro.term? to Macro.safe_term
Use cond instead of nested ifs
Add support for inspecting keywords
Support unquote_splicing on root
By default embed elixir in escripts
Make function naming consistent across modules
Allow partial application on literals
Support for decreasing ranges
Remove unused calendar functions and warnings
Make +:foo behaviour consistent with foo:bar (both still raise a warning though)
Remove extra parens
More Calendar implementation:
Support unary plus and minus in Macro.term?
Add Macro.term?/1
Print environment when dep cannot be found
Protocols are powered by behaviours behind the scenes
Use local rebar, closes #515
Avoid false negatives in protocol dispatch, closes #503
Improve env related error messages
add iex reltool.config
cp_r/c test file should be managed in tests' setup/teardown
Simplify __scope__ API
`Erlang.` syntax is deprecated in favor of simply using atoms
Remove special case for specs in elixir_module.erl
Ensure Kernel.__info__(:functions|:macros) returns the complete set
Typo fix
Unify Regex and String APIs, closes #505
Tidy up CHANGELOG
Add Module.create
Support <%% and <%# in EEx, closes #287
use proper offset on record extensions
Use references instead of relying on file names
Support watch_exts
Reset internal variable data when assigning binding
Separate sigil tests into their own test case
Added initial work on Calendar module
Simplify import api
Clean ebin dir on make clean
Import ignores function/macros starting with underscore, default callbacks to underscore style
Improve tests for bitstring macros
Allow macros as bitstrings specifiers
Supports --detached option on command line, closes #487
Check if tty is actually supported before invoking it, closes #489
Simplify protocol handling
Properly idented missing case
Properly identing case statement
Refactoring in order to move the logic to functions signatures
Add nil? macro
Add optional comma in lists, tuples, bit strings and keywords, closes #479
Whitespaces :scissors: [ci skip]
Implemented String.at/2
Implemented String.length/1
Implemented String.last/1
Implemented String.first/1
Refactored String.codepoints to use String.codepoint which in now the main entry point for utf8 strings
Implementation of to_list macro for Record.defmacros
Implementation of to_keywords macro for Record.defmacros
Get macro implementation for Record.defmacros
For consistency use find_index in Record.
`Module.read_attribute` and `Module.add_attribute` deprecated
Simplify Enum protocol
removing some unused code
adding more tests
added some examples
supporting more codepoints
Ensure proper order of dependencies
Mix now supports nested dependencies
Enum.split_with -> Enum.split_while
Convert internal API to use the convergences one
Initial work on recursive dependencies
Improve the docstring for reduce
mix test automatically sets the environment to test unless another is explicitly given
Improve handling and messages around nested deps
We need to refresh the project configuration in case we change the environment
Runs deps on prod by default (since we don't want to carry dev deps over)
Reword slightly text, keep line length
Use exec to replace the shell process instead of forking
Updating documantation in regards to renaming of Binary into String.
defmodule returns module name, binary and the result
defmodule only returns the result and the binary
Limit output in IEx to 50 items
Inspect accepts limit and raw as options
GenServer behaviour also defines init, closes #467
Load records before inspecting them, closes #469
:trim has no effect here
Update inspect on bitstring to use new notation
Keep Binary.Inspect (no need to rename it)
Update lib/elixir/lib/behaviour.ex
Clean up mix tmp on make clean
Docs for functions without implementation are automatically marked as defcallback
Improve docs
Module.split also accepts binaries
initial working on codepoints
Properly expand other unquote expressions
Improve Behaviour docs
Calculate the stacktrace before calling inspect, closes #457
Changed argument var name to better reflect erlang's documentation terminology
Added more tests
Added support for String.duplicate/2
Added support for String.replace/3 and String.replace/4
s/keywords list/keyword list/ in docs
Use new bitstring syntax, make rstrip tail recursive
String improvements
Docs now use the new on_definition hook
Add support to on_definition hooks, closes #448
Make overridable internal function more readable
Implement new bitstring syntax, closes #421
Now we employ consistently zero-based indexes, closes #459
Improvements to escriptize task
Small improvements to Mix.Utils
Update lib/elixir/lib/string.ex
Ignore hidden files in mix 'test'.
Ignore hidden files on mix compilation.
implemented String.(r|l)strip
hard coding calculation
implementation of upcase and downcase
Binary module is gone, long live String
Ensure we don't try to print <<193>>
Add a String module responsible for handling UTf-8 binaries
Extract Mix.Utils.extract_files
Organize changelog entries alphabetically, closes #455
defmodule returns the module binary
Simplify some assertion tests
Raw function definition now evaluates all arguments
Also add after_spawn support to IEx
Break IEx into its own application
ExUnit now supports after_spawn callbacks
Remove unecessary new line
travis-ci.org now provides R15B02
Enum.split/2 with negative numbers iterates just once through the collection
File.iterator should strip new lines
Add ensure_loaded? and ensure_compiled? conveniences
Use default test environment for test task
Remove unused --no-check option
Add a prepare task
Add tests for working with nested dependencies in mix
Ensure pipe op can start at new line, closes #450
Leave it up to tasks to remove code paths
No need to pass default value
Adding support for Enum.split to accept negative numbers
Provide just Module.split/1 for now that returns binaries
Update lib/elixir/lib/gen_server/behaviour.ex
Skip deps check when compiling deps
Use binary for the splitting and split docs
Implementation of Module.split_name
Implementation for Record.__index__
Check if the file really belongs to the compilable set
Allow file names to be passed to compile and test
Add compile_exts, add default config to mix
Show proper messages in case of failures
Only touch directory after all tasks
Rename MIXENV to MIX_ENV
Allow mod.unquote(fun)(args) on quote
Improve mix new docs
Properly expand access on module attributes
Give apps back in the proper order
Add -f support to common mix tasks, closes #431
Provide Regex.captures instead of Regex.match
Add support to mix environments, closes #397
Mix should load paths before running tasks
Improvements to the access protocol
Do not complain if docs are the same
Added `;'s to the end of the lines where calls to the `time'.
Mix now exits with status 1 in case of failures
Code.require_file and Code.load_file now expect the full name as argument
Allow files to be unloaded
Erlang already logs when it really matters
Use elixir_ensure_compiled to enable Code.ensure_compiled
Accept atoms on Mix.Utils.underscore
handle dots and slashes in underscore and camelize
Code.require_file blocks until file is available
Add guards to assert_raise to avoid passing a block
compile callbacks must be executed on reverse order
Add Enum.count, allow behaviour to define default functions
Provide some behaviour conveniences
Update CHANGELOG
Ensure quoted variables are properly carried in clauses
Ensure hygiene works with temp vars
Use orddicts to store vars, since we rarely have more than 20 vars
Matching ^ inside quotes should work as expected
We no longer need to close io port because we are turning tty off before. This also fix an issue where IEx was hanging when printing to console.
Add Record.defmacros
Allow access protocol to be invoked on the currently being defined record
Support for named groups in Regexp.
Improvements to the record API
'return' option is added to Regex.run and Regex.scan
Adding test case for Regex.index with list arguments.
Get only specified dependencies
Add Keyword.update/3 and Keyword.update/4
Make elixir source $HOME/.elixirrc if it exists
Linify def args and guards
Add Module.overridable? to check if a definition is overridable or not
Add Process.group_leader
Bring some behavior from Erlang's shell to iex
If we are connected to a remote node, print "rem" in iex
Add support to function on Enum.OrdIterator
Add Enum.reverse
URI.decoder -> URI.query_decoder
Improve Enum implementation for functions, provide a decoder iterator
Allow the access protocol on nil, and always return nil
Allow nested access
Add a Dict binary that converts its keys to binaries on insertion
Simplify Dict, speed up some transforms, define access protocol
Optimize protocols, improve documentation signature
Add documentation for Binary.part and Binary.split
Regex.split accepts 'parts' as an option param
Test when Binary.split doesn't match the given pattern
Binary.split accepts 'global' option in order to match all occurrences
Binary.split supports regex
Add Binary.split
Reorganize Binary test in different modules (Literal tests/API tests)
Add support to List.keyreplace and List.keystore
Add a test case to import with empty except
Compile Range before Binary
Add Binary.part
Allow finer grained control of included apps in mix escriptize
Properly handle dependencies in mix escriptize
Add miminal mix escriptize test
Allow elixir itself to be built as an escript
Add initial escript support to mix
Allow empty except option in import statements
mix deps.unlock should not complain on unavailable deps
Expand @attributes in Macro.expand if possible
Remove referance to accessing tuples.
Update and reformat CHANGELOG
Better error messages when invalid options are given to import, alias or require
Validates import, alias and require opts
Setup a name for the git repo in case the build machine does not have one
Update makefile clean
Update version, remove deprecated APIs
Update release process
Release v0.6.0
Use to_binary/1 instead of guard for URI.parse/1
Allows URI.parse/1 to take a char_list without throwing an error
Do not use stderr in IEx.Helpers
MixFile -> Mixfile
update release_docs make task
Support -S as an option, closes #415
Make mix an Elixir script
Add supported use cases to IEx.Remsh docs
Use an Elixir module for the IEx remsh autocomplete helper
Update Mix.SCM docs
Ensure deps.get also updates locks
Pass some options down to erl, accept --erl as arg
Accept tuples in bin specifiers
Print node name in IEx prompt
Do not rely on bashisms
Tidy up remsh support in iex via --remsh option, closes #368
Add Mix.loadpaths shortcut, closes #417
Check if lock is out of date
Refactor common logic to Mix.Local
Allow :test_helper to be set to nil, closes #419
Be sure to expand rebar path before using it
Pass deps_dir by default to rebar, closes #414
Support raw dependencies, closes #410
Allow a SCM to tell which options it consumes and configure it further
Allow custom SCM to be added, closes #411
Do not locate app files if there is no requirement, closes #409
Bring defdelegate back with new syntax, closes #412
Get rid of -i shortcut for ignore module conflict
Initial work on remsh
There is no need to define macros using the atomic function name
Deprecate defdelegate
Move some functions from Process to Node module
Add deps.unlock
Pass no check when compiling subprojects
Improve and move option parser to OptionParser root
Ensure repeatability in repos
Initial work on mix.lock
Split default template around
Support ! inside guards, closes #401
Better zip packaging
Do not use tty on win32 fmaily
Escaping for bat files
Quote all the paths in sh files
include mix in make release_erl
Do not rely on Code.loaded_files, get the proper source
Update the reload iex helper documentation
Add reload helper to iex
IEx.Helpers improvements. Get the proper maximum size in m, remove m/1 (we need to format it better), improve docs
Properly convert fn and partial to binary
Update CHANGELOG
Avoid whitelisting Elixir on Code.ensure_loaded
Do not show nested Elixir and Erlang modules
Test that Elixir and Erlang appear on E autocomplete
Ensure we can autocomplete self, do not trigger errors on ensure_loaded(Elixir)
Do not print functions on d() since we now have autocomplete
Autocomplete kernel calls
Allow autocomplete of Erlang. and Erlang.mod.
Allow Elixir. autocompletion, try to force module loading
Properly expand aliases
Ensure IEx.Helpers is loaded before getting funs
Add macro support to IEx.Autocomplete
Add tests for IEx.Autocomplete
Cleanup function access in IEx.Autocomplete
Add Elixir autocompletion to iex
Move common deps logic to Mix.Deps
Add a Mix.Dep record
Avoid compiling deps that were not retrieved
Adjustments for release
Improve docs for ExUnit
Optimize if/cond clauses when possible, rely more on erl warnings
Use if and || in Enum when possible
Optimize if and cond to avoid casting to boolean
No need to special case def clauses anymore
Add Mix to changelog
Add mix local.uninstall
Add mix local listing
Initial work on mix local.install
Solve conflicts in Makefile
Add Regex.compile! besides Regex.compile
Add a smoke test for mix new
Add unit tests for Mix.Generator
Initial work on mix new
Small improvements to elixir_def
Add parse_head besides parse in options parser
Add camelize and underscore to mix
Other small improvements to mix
Basic mix docs
Add mix do
Improve more exceptions for unmatched tokens
Add binary_part to the list of guard functions
Add mix clean and deps.clean
Improve assertion docs
Clean up a couple more assertions
Reduce mix help output, improve mix compile --list
Revert "Do not expand prepend and append paths"
Update all except unavailable
Do not expand prepend and append paths
Add deps.update
Show a warning instead of exception on module redefinition, closes #396
Expect aliases as part of many options
Add Code.ensure_compiled
Cosmetic changes
Rename __MAIN__ to Elixir, closes #390
Rename Elixir.Builtin to Kernel, according to #390
Avoid nil conversion if expression is known to return a boolean
Deprecate Module.function_defined? in favor of Module.defines?
Remove the need for special <& &> tags, closes #393
Clean up fn implementation
Properly wrap fn/do end in tokenizer
Improve coverage and implementaiton of function
Initial work on removing fn ambiguity
Revert "Use more explicit naming in module functions"
Simplify EEx.Tokenizer
Support backreferences in regex
Add File.iterator
Warn when unsupported macro is invoked inside guards
Improve error message when calling local inside guards
Improve error messages with terminators
Support terminators in tokenizer
Improve error messages for unterminated strings, sigils and heredocs
Typespecs now support macros, closes #385
Simply use private macros for defining dicts
Use more explicit naming in module functions
No need to define location
No need to make location part of the behavior, we can get it from compile info
Do not automatically forward tasks, move some logic to Mix.SCM
Make dependencies available when compiling other dependencies
Use the project stack instead of shelling out
Another attempt to fix build
Try to get more info on the build failure
Add run and deps.loadpaths to mix
Improve docs for assert_received
Add deps.compile
Add deps.get
Add deps.check
Initial work on dependencies
Generated .app should also include applications key
Use mix to generate .app files
Rename Mix.Project.config -> Mix.project, Mix.Shell.Test -> Mix.Shell.Process
Ensure there is no ambiguity in tuples
Ensure default task works
Specs for app generation
Initial version of compile.app
Do not convert underscores to defined arg
Clean up exunit server and exception docs
Use a Mix.Server instead of storing info in the application env
Rely less on slow mix cli tests
Add mix shell to avoid noise in tests
Add assert_received to assertions
Add compile meta task, move logic to compile.elixir
Improve docs for functions that return both binaries and char lists
Add self() back since it is allowed in guard clauses
Add mix help
Add function_exported?, improve warnings for behaviors
Add IEx task
Improve docs for d, make it easy to query builtin functions
More improvements to printed docs
Add loadpaths before running tests
Allow macros to be used in rescue clauses
Register shortdoc and hidden as attributes
Add d to print docs in IEx console, compile by default with docs
Add a test task
Provide a parallel require that runs require in parallel
Tasks are invoked only once unless reenabled
Refactor Mix.Task and Mix.Utils
Make the default for ExUnit case to be sync
Add compile task and tests
Add Mix.Project.config and Mix.Project.current
Make sure cp_rf also handles symlinks too
Ensure rm_rf does not follow symlinks
Avoid unix specific calls in tests
Add File.rm_rf
Add rmdir, use path consistently in File
Do not depend on the filesystem order
Introduce File.CopyError, File.cp! and File.cp_r!
Add File.cp and reorganize test cases a bit
Support File.cp_r
Support File.copy
Add mix file executables
Support File.touch(!) and File.write_stat(!)
We are now able to run tasks
Add File.cwd/0, File.chdir/1 and File.chdir/2
Use a main fixture_path helper
Allow File.open with a function
Document File.open
Provide proper setup and teardown hooks
Add setup and teardown callbacks to ExUnit
Allow mixfile module to be set
Refactor code now that we have local macros
Initial structure for mix
Update repo info
Refactor previous commit by moving the fix to cons_to_list
Ops, fix types on function definitions
Document __block__, __scope__ and __aliases__ special forms
Remove remaining __MAIN__ from erlang code
Add elixir's parse transform to be used with erlang code
Update LEGAL to point to the proper files
Update master
Provide Enum.nth! for now since we want to ensure we are on the proper bound
Ensure we are on master for docs generation
Add Enum.nth, change IEx code to rely on it
Break IEx into many files, move it to the root namespace
Allow IEx to take control even when started without -noinput
Pipeline op must be right associative
Add very basic shell history support
Small fixes to typespecs
Actually provide an implementation for erlang proxied functions
Raise an error when not a function call is given to :/>
Add quote location: :keep
Refactor unpack_ast code
Adds function type specifications to Elixir.Builtin
Add Code.string_to_ast(!)
Deprecate loop, used named functions to recur instead
Tidy up README
Allow env as a @file argument
Normalize file attribute in the expected place
Update CHANGELOG
Introduce regex match operator (=~)
Remove extended semantics from the access protocol
Dispatch the access protocol in atoms to __access__/2
rebar_elixir_plugin compat
Add rebar.config so elixir can be easily used as a rebar dependency
Allow elixir to work as a rebar dependency
Add the ability to toggle bolean fields in Records
Introduce pipeline op
Add bitwise operators
Introduce new operators: <<<, >>>, &&&, |||, ^^^, ~~~
Add Enum.first
Move all code to erlang style apps
Split eex from kernel
Split ex_unit from kernel
Try to make travis happy
Move Elixir's kernel to lib/kernel
More explicit docs for Macro.expand
Update version
Small improvements to %shorcuts
Ensure ends are correctly nested in Macro.to_binary, closes #376
Handle kw blocks on Macro.to_binary
Functions generated through default are not documented
Add operator handling to Macro.to_binary
Convert a tree expression to binary
Update CHANGELOG
Add signatures to docs information
Reorganize makefile
Invoke to_binary on IO module arguments if they are not an iodata
Raise nice error message if attempting to define a module that is being defined, closes #373
defmodule shares the variable scope, closes #374
Allow new line before binary (but not unary) ops
Remove Range.new/2 api for now
Update CHANGELOG
Allow ranges to be iterated
Add some in range assertions
Provide ranges and support them in the in operator
Move away from packages since they don't work as expected with embedded mode
Map device name in runtime to save some typing
Update files and grammar in LEGAL
Support Enum.count
Add support to @after_compile
Deprecate add_compile_callback in favor of the attributes API
Update CHANGELOG
Improve inspect of atoms, closes #361
Document line option for quote, support line: :keep, closes #364
Improve docs and add CHANGELOG for access macro changes
Adds record '_' syntax to match with Erlang syntax
Allow extra space in heredocs ending
Optimize in operator
Solve inconsistency with in not allowed inside some exprs
Adds support for @callback type specification attribute
Improve docs and tests for Elixir.Typespec
Protect type, typep, export_type and spec attributes
Move Typespec to Elixir.Typespec, ensure it works with @spec and friends
docs was renamed to full
Make assert smarted deprecating unecessary counter-parts
Initial support to @spec, @typep and @type attributes
Add a full flag for release
Refactor Typespec by grouping functions, enforce 80 chars column limit when possible
Refactor Typespec: use Macro.escape instead of quote/unquote
Update CHANGELOG
Document IEx, split helpers into its own module, update CHANGELOG
Matching the return value in ExUnit.Server.start_link is too early
Adds m/0 and m/1 helpers to iex (similar to their equivalents in erlang's shell)
Adds support for the range operator (..) in typespecs
Adds support for `opaque` option in deftype
Changes `returns:` to `do:` in defspec
Changes `deftype <type>, as:` syntax to `deftype <type> ::`
Typespecs now make use of the ... token
Changes function type syntax in type specification adjusted according to the plan outlined in #333
Update CHANGELOG
Allow dict and orddict to use the faster interation functions
Optimizes remaining enum functions
Optimizes find, find_value, find_index
Optimizes split, drop_while and friends
Provide faster versions for Enum#any? and Enum#all?
Update CHANGELOG
Do not use read_port, add System.find_executable
Improve docs for bitwise
Allow OP: syntax
Filename -> File
Provide a file to tokenizer
Remove limitation use cannot be called outside modules
Reorganize tokenize clauses so the compiler can optimize better
Add range op and ... identifier
Refactor token handling
Allow quoted calls
Allows use of externally supplied ERL_LIBS in release-packaged elixir
Allow ambiguousop with many values
Ensure filename is a binary
Solve ambiguity with a +1 when a exists, closes #342
Change comprehensions syntax to be more compatible with Erlang behavior, closes #335
Better exceptions in cond, closes #337
Document the macro @ and allow attributes to be read inside functions
Allow values @ to be read inside functions
Remove incorrect conversion to binary
Use File.open and File.close
Add File.close/1
Add File.open/2
Update changelog, add callbacks to the list
Unify data and attributes
Improve docs for comprehensions
Add IO.read, IO.write and IO.readline
Add IO.gets to read a line from the IO device
Add IO.getb to read bytes from a IO device.
Use Macro.expand instead of Macro.expand_aliases
Ensure refute can also show nice messages, closes #319
Raise an error if an invalid alias is given, closes #316
Support identifier?:, closes #322
Support Macro.expand
Expose expand_import and expand_require functions
initial work on exposing Macro.expand
Add File.delete
Share the same bin scripts
Actually boot the release we're building for Elixir
Adds `rel` makefile target that builds self-contained elixir
Renames defdelegate's append_handle option to append_first
Add tests for custom range iterator
Adds :append_handle boolean option to defdelegate
Typespecs should use of an actual ArgumentError exception instead of badarg
Changes = operator to :: for typespec annotations
Adds support for multiple defspec clauses for the same function
Improves indentation in typespec_test.exs
Improves indentation in typespec.ex
Replaces `or` with `|` in typespecs
Typespec should use Macro.expand_aliases/2 instead of Code.eval_quoted/1
Initial implementation of deftype, deftypep and defspec
Add :: as an operator
Decouple macro expansion from macro translation
Update lib/module.ex [ci skip]
Update lib/module.ex docs [ci skip]
Ensure nice stack trace on compiled callbacks, closes #314
Add tests to ensure proper stacktrace on macro calls
Compile regexes at compilation time, speeds up considerably runtime
Use refute instead of negative assert
Add File.write
Ensure aliases can be overriden
Simply let unhandled -> fail, closes #315
Use filelib:ensure_dir
Regex is not multiline by default, closes #310
Support :as in defdelegate, closes #311
Generate keywords at compile time, so we don't need to sort nor loop at runtime
Force rebar on R15
Renames record's to_keyword function to_keywords
Minor improvement to Record.to_keyword implementation
Adds `to_keyword(record)` function to all records
Test File.read with a utf8 file
Use the new in guard syntax
Add mkdir_p
Copy edit documentation [ci skip]
Add File.mkdir
Be more strict on inspect since we cannot be sure of the list encoding
Update CHANGELOG
Deprecate refer in favor of alias, use atom aliases throughout source code
Rewrite use in Elixir, force it to rely on __CALLER__
Rewrite access macro in Elixir \o/
Add Macro.expand_aliases
Support on R15B01 on travis-ci <3
Deprecate in_guard special form in favor of the more flexbible __CALLER__.in_guard?
Get rid of assign and guard in favor of context in #elixir_scope
Simpler mechanism for references
Update CHANGELOG
Add support to __CALLER__ inside macros
Rename internal variables from _EX to _@ since the first can also be user defined
Initial spike with __ENV__
Convert default values to nil for better interop with elixir
Add support to %R
Refactor duplicated logic in elixir_def_local
Improvements to release process
Get rid of the watcher
Have a script to generate the package file
Release 0.5.0 \o/
Add c shortcut helper to iex, closes #303
Add iex.bat file for windows
Improvements to iex to allow windows support
Partials with fn also work with imported funs
Add partial function application via fn, closes #297
Improve reporting on protocol assertions
Clauses out of sync now raises a warning
Add file directive to customize how functions are defined
Improve docs, skip unecessary linify calls
File info should come first
Ensure in works inside function definitions, closes #298
Ensure records can be created with no field, closes #299
Improve docs for the in macro
Remove special conditions inside catch
Support many args in -> exprs
Allow comma_expr on stab op
Implement EEx rules
specify master branch in the build status image
Remove function single do: definition syntax
Do not allow stab inside stab operators
Stab at new syntax
Basic implementation and docs
Basic tests for File.rootname, File.extname and File.dirname
Memoize the Rebar executable
Provide a make task for releasing docs for now
Finish documentation and import just part of the spawn functions by default
More builtin docs
More docs
More builtin docs
Update code to Elixir format
Move more functions to the process module
More builtin docs
Do not auto import exit/2
More builtin docs
Add allowed in guard clauses info
Mention erlang docs
Add a list of functions that are pending documentation
Add a note with the command to generate docs
Small fixes in the docs
Docs for genserver, uri, lists and others
Document File module
Docs for ExUnit, make records non documented by default
Docs for EEx
Clean up for_docs [ci skip]
Properly inspect module names in docs
Make the build also compile docs to catch doc errors
Properly escape documentation chars
Improve docs for dicts and bitwise modules
Improve documentation for access, chars and inspect protocols as well as their outputs
Ensure wrapped erlang exceptions can also be raised from Elixir, closes #283
Document __record__(:fields) behavior
Do not include exbin
Define an exception protocol on raise (similar to Ruby's) and avoid defining __exception__ accessors
Decouple the API from internal implementation on OptionParser.Simple
Don't waste CPU cycles on calling rebar multiple times
Ensure app is generated with all files
Since we now compile to ebin/__MAIN__, remove the need for exbin
Properly tag size functions
Normal exits should not end up in error messages
Get rid of List.prepend (as it works the same as ++)
Do not care about handling char lists on URI module
Return nil in decode_query (according to its docs) and allow dict to be passed as argument
Improve query parsing
Handle charlist queries
Implement decode_query in URI
Do not remove blank strings on strip, closes #282
OptionParser.Simple receives aliases
fix precedence for not x in [], closes #278
Converting to a list should not be part of the enum protocol
use correct doc format in ExUnit
Simplify docs for || and &&
Do not hardcode blocks to use = as marker
Changing File.exists? implementation. Now using file:read_file_info() from Erlang.
Optimize record generation as well (if we can)
Allow function definitions straight from eex
Ensure paths in tests are also expanded
Expand paths to avoid relative paths
Tag properly as defmacrop
Make Enum.split_with behave the same as :lists.splitwith
Private functions should not appear on docs
fix typo in argument name
Add EEx.SmartEngine that can handle assigns and for loops
Add File.exists?
return a keyword in module.__info__(:compile)
Overridable is no longer a data attribute, but a macro. This allows it to work fine with multi-clauses.
Use MACRO- instead of MACRO_ since the former is the pattern throughout the codebase
Store filenames with function and improve backtrace
Ordered partial application is converted into "named" function
Normalize module data for easier input
Add behavior info to EEx.Engine
Change EEx API to accept a list of options instead of many arguments
Add keyfind, keymember? and keydelete to List
Raise a relevant error message when a non bit string is returned from a bit comprehension, closes #185
Allow record matching in rescue clauses, closes #238
Ensure in with match can be mixed with guards
Allow "in" match clauses
Add support to in as operator
Rename bin comprehension to bit comprehension
List and bit comprehensions now expects filters after the when operator
Add Keyword.from_enum and Enum.qsort
Rename elixir_kv_block to elixir_kw_block, closes #270
The binary matching can take into account bound variables for size
Rename URI.url_encode to URI.encode, rely on Binary.Chars protocol for normalization
Loop the URI as a binary entity instead of a list
Import the bitwise module for bitwise operations
Return binary unicode characters in URI.url_decode
Add URI.url_decode
Move files to lib/
Docs and tidy up to Enum protocol
Clean up and optimize compilation dispatching
Get optional macros only if we really can do it
Ensure we do not deadlock on rescue clauses
Remove unecessary hooks
Parallel compiler now receives notifications as soon as a module is loaded to reduce lock time and deadlock chances
Avoid error reports
fixing Keywor docs
Add a logic that handles try/match/catch but leave it disabled by default
Since we haven't released yet, bump to the logical 0.5 instead of 0.9
More improvements to dict, rename Keyword.from_enum to new to behave as Dict
Reorganize and optimize the dict protocol by doing pattern matching
Improve protocol handling
Enum should always return lists, unless explicitly mentioned
Raise an error if invalid keys are given when matching a record
Ensure we don't rescue the wrong exception accidentally
Now that we have faster load times, get rid of assert_equal
Spawn more files at once when compiling in parallel, add parallel require
Remove the paragraph about custom iterator
Comment out one assert in enum_test
Reimplement the Enum iterator
Don't list all funs, simply ask for erlang's exports
assert_raises -> assert_raise
Use the new defprotocol for Dict
Test that Enum.join does not work for dicts
Keep Orddict.values in order
Revert "Implement arbitrary term access for List"
Rename Dict -> HashDict and encapsulate it in a record
Review the docs for Enum functions
Add `ordered_iterator` function
Generalize the Enum module to support dicts
Implement PDict.to_list
Document the usage of tricky ref
Implement arbitrary term access for List
Additional tests for Dict.new and Orddict.new
Add tests for size, update and empty
Clean up the code a bit more
Add a small optimization in `put` invocations
Remove duplication and cleanup the code
Implement Orddict
Use capitalized name for Dict instances
Implement Dict.from_dict
Implement GenDict.extend and GenDict.update
Add tests for GenDict.merge
New Dict module wrapping Erlang.dict
New GenDict protocol
Use assert_equal as well in access_test.exs
Revert removal of assert_equal
Improve docs for assertions
Make Code.require_file 'thread safe'
Get rid of assert_equal
Convert more files from assert_equal to assert ==
Convert more files from assert_equal to assert ==
Convert more files from assert_equal to assert ==
Smarter guesses on expected and actual, convert access_test.ex
Get rid of assert_access in favor of assert
Get rid of assert_operator, handle it with assert
:foo@bar and other atoms representing nodes are now valid, closes #263
URI.parse now returns a record, closes #199
Avoid atom injection on URI parsing, closes #212
Add Module.safe_concat
Remove unecessary tuple wrapping in __kvblock__
Avoid sorting more than once
Clean up kvblocks now that keywords accepts multiple entries
Implement Keyword.get_values
Keywords can have duplicated entries, but still quack as a dict, closes #262
import with except should not add old keys back
Provide a new protocol API, closes #251
Tidy up and rename __protocol_for__ to __impl_for__, related to #250
Add __protocol_for__ that returns the protocol that matches the given structure, related to #250
Move error handler to Elixir source
Require should trigger child modules
Simplify Code API regarding compilation
Tests for deadlock message.
Improve coverage and code for parallel compilation
Rewrite parallel compilation samples in Elixir
Spike of parallel compilation.
Clean up Makefile
Move code server to erlang source so we can bootstrap
Initial work on elixir_error_handler.
Add a test scenario for discovery samples.
Move foo.txt to proper fixtures directory.
Compilation of directories is now possible.
Ensure a runtime error is raised if a macro is called at runtime
Reuse the imports table instead of creating a new one for local imports
No need to store non macro invocations.
Add __info__(:functions) and __info__(:macros) to retrieve module info at runtime.
Rewrite macro names to avoid accidentally calling them on runtime.
Do not rely on elixir_clauses in order to calculate defaults.
Allow macros to be invoked __MODULE__.macro during compilation
Invoking an undefined local macro at compilation time raises an error
Raise when a private macro is unused, closes #188
Ensure nice exceptions when a local cannot be found during compilation.
Ensure macros that call locals can be invoked locally without failures.
Add support to private macros.
Allow macros to be invoked locally.
Avoid unused variable warnings.
Reduce spurious entries in functions table.
Print a warning if defaults are used with multiple clauses, closes #209.
Definitions without implementation can specify default clauses.
Faster compilation times if a file is simply defining one (or more) modules.
Add tests for loop with no `match`
Allow implicit `match` in argless loop
guess expression meaning in ExUnit assert
Improve errors messages a bit, closes #253
Allow uppercase letters to be used in numerals
Ensure protocol functions with more than one arity works, closes #247
Small cleanup on zip functions.
Implement List.unzip
Improve doc for List.zip
Implement List.zip
Implement List.sort
fix regex documentation (~r => %r)
Doesn't use @doc in private functions
Do not test System.pwd return value.
Tidy up system, focus only in returning binaries instead of char lists.
Move compilation options to the code server, closes #205.
Add literal support to hex, octal and binaries, closes #235
Provide a macro convenience that escapes values.
Ensure overridable definitions are private, closes #241
Ensure access syntax works with record syntax, closes #237
adding `## Examples` header
Do not create a new var is final expression is a single var.
Do not generate a tuple if it is not required.
fixing trailing space
refactoring some code
adding test to atom_to_binary
adding atom_to_binary with UTF8 encoding as default
Ensure versin can be print
Small tidy up on file.ex
More documentation improvements.
Add read_info(!) tests.
Add tests for System
Rename to read_info(!)
Markdownify docs and add file_info!.
Fail on invalid file input, closes #206
Avoid side effect in tests.
allow binary_to(_existing)_atom uses :utf8 as default encoding when it is not specified, refs #221
Minor code cleanup
Use :httpd.rfc1123_date to get a nicely formatted date
Set up a more robust scheme of calling to git
Improve documentation for build_version and its internals
Make a direct call to :os.putenv/2
Add binary support for put_env/2
Return binaries for binary arguments.
Add an experimental put_env(dict)
Add binary counterparts of cmd and get_env
Add useful functions to System
Rename build_version -> build_info
Added a file_info function.
Make process_options testable
Allow passing a wildcard to -pa, -pz and -r options
Work with binaries, remove char list module.
Ensure nested case works, closes #231
Revert "Allow many files to be passed to iex, closes #203"
Revert "Allow multiple paths to be given to -pa and -pz, closes #229"
Move escape to Binary.
Ensure we can print and inspect utf8 strings.
Revert "Ensure in_guards is properly set to true inside args."
Allow record matches.
Properly match bin args.
Provide escape and printable check for Binary.
Allow multiple paths to be given to -pa and -pz, closes #229
Allow locals to be delegated to a module.
Move Module.eval_quoted to the new API.
Move evaluation options to an options setup instead of multiple args.
Rename Env to System, move Code functionality to it.
Start using halt since it has improved semantics in Erlang R15B01.
Add --ignore-module-conflict as official part of elixirc
Ensure we can return utf8 code points.
Finally ensure we are priting properly.
Copyedit.
Ensure iex still returns the proper bin size
Replace def with defdelegate where appropriate
Implement the remaining spawn functions
Implement Process.spawn/1 and /3 and Process.spawn_link/1 and /3
Convert comments to doc strings
Add inspect to Regex.
Remove integer based access protocol from lists and binaries.
Store options as binaries.
Add source and opts to Regex.
Initial draft of the new Env module
Allow modules to be nested.
OptionParser.Simple is now based in binaries. Closes #208
Rename Orddict to Keyword, closes #216.
Ensure nested loops work, closes #215.
Give a warning if docs are being overwritten.
Don't overwrite existing documentation in clauses.
Add a failing test for multiclause docs.
destructure can handle nils.
Reword the explanation of Iterator
Remove duplicate default value in `range`
Comment binary_part for now.
Rename List.append -> List.concat
Replace `seq` with more powerful `range`
Add tentative range_a and range_b functions
Update doc strings in List
More doc string fixes in Enum
Minor fix in enum_test.exs
Implement split_with
Implement take_while
Implement drop_while
Review doc strings and examples in Enum
Show the top of iteration should be passed.
Add assertions for access.
Tests for invalid access signatures.
Allow access protocol in signatures.
Function access.
Atom access.
re_pattern and atom access for lists.
re access to binaries.
Integer binary access.
Access for lists.
Allow negative index access on tuples.
Initial work on the access protocol.
Ensure in_guards is properly set to true inside args.
Code.argv should return a list of binaries.
Ensure we don't pattern match after clauses, closes #200
.bat files to run Elixir (elixir and elixirc) from Windows batch
Allow many files to be passed to iex, closes #203
Ensure we don't accidentally dispatch to protocols based on tuples.
Update nillify comment.
Remove redundant list_to_atom.
Swap expected and actual values to match the actual ExUnit API.
Added URI module.
Add destructure.
Check that Filename is a charlist in eval
Pass 'iex' instead of "iex" to the eval func
Ensure \d is not wrongly unescaped.
Update lib/elixir/special_forms.ex
Prefer %r// syntax to regular expressions in the documentation.
Ensure Regex can also accept lists as args.
Implement split, replace, replace_all, scan and run for Regex.
Initial work on regexes.
Improve coverage, behavior and docs for Module.concat.
Add Code.eval
Compiler options should be by process.
Provide %C and %c.
Remove module String.
Improve coverage of sigils.
Ensure we properly handle octal notation.
Allow sigils with heredocs (yeah!)
Rename %Q -> %B
Ensure %Q does not escape chars.
Start working on sigils.
Improve coverage and docs for file.ex
Remove noise from ExUnit backtrace.
Disable parallel compile.
Ops, it will be hard to kill this habit. :)
Bump to 0.9.0, because that's what we are aiming for.
Add refer back.
Remove automatic aliases from defmodule.
Ensure protocol is properly concatenated.
Down to two protocol failures.
Remove support to ::, down to 16 failures.
Down to 23 failures.
Compile files using . and inside __MAIN__
Start escaping remotes to avoid ambiguity when we move to packages.
More naming related fixes.
Append __MAIN__ to each generated module.
Allow .Foo to retrieve references.
Allow incomplete quotes in IEx, closes #181
IEx now keeps the lexical scope, closes #182
IEx can accept utf-8 characters, closes #186
Update join's docs.
Default to binary instead in join.
Add make docs
Please don't violate the DRY principle
Update the Travis-CI URL
Default joiner to an empty list in join.
Improve builtin docs.
Still allow two args tuples to be spliced.
Ensure a tuple with two elements returns itself when quoted
Ensure compilation sets the source.
Move exbin dependency to Makefile.
__FILE__ returns the absolute path
Returns the not parsed arguments too
Add doc
Ignores not option arguments
Add support to alias options
OptionParser -> OptionParser::Simple
OptionParse parses key/value option
Parse boolean options
Add List.last
Whitespaces :scissors: [ci skip]
Update the Code documentation
Added Orddict.key?
Added List.find_index
Change code documentation for @doc anotation
No need to run test sync
Add EEx.eval_string and EEx.eval_file to evaluate the values usings bindings
EEx now receives the filename and the line
Rename EEx.compile and EEx.file to EEx.compile_string and EEx.compile_file
Add EEx.file to compile from a given file
Add File.read! that raises an exception with a descriptive message
Add File.read
Whitespaces :scissors:
Use the Elixir method to File.join and File.split
File.join and File.split
Do not splat use args.
fix receive examples
Add File.basename
List delegate
Do not special case erlang format.
add assert_throw, assert_exit and assert_error to ExUnit
Add link to vim-elixir in README
add assert_in_delta/refute_in_delta to ExUnit
List.duplicate added
add assert_nil/refute_nil to ExUnit
add assert_empty/refute_empty to ExUnit
Provide a more robust solution for protocol handling.
Improve protocols in order to avoid false positives, closes #146
Get rid of special __EXCEPTION__ and __STOP_ITERATOR__ tokens.
Do not mix macros with pseudo variables, closes #147.
add assert_operator to ExUnit assertions
Foldr & Foldl with docs
add IRC build notification
Add docs to assert_raises/3
Use assert_raises in the tests
Add assert_raises with expected message
convert ExUnit assertions doc to the new format
Ensure erlang errors are handled properly.
get record name using elem/2
add assert_raises to ExUnit assertions
run make test on travis
add refute_equal to ExUnit assertions
Update README.md [skip ci]
Minor rewording and grammar fixes
Allow deep linking and handle CDPATH issues
Serve logo image out of the elixir-lang repo
Rock out the logo in the README
Bring readlink back
Further improvements to script initialization
Attempt to get rid of cd; pwd
Allow meta compilation.
Split EEx::Compiler into its own file, adds docs, improve case.
Add a node.ex file and clean up namespace even more.
Point to the new guides.
Change the method visibility and add some docs
Add more tests to line
Consider lines in embedded string
Error handler
Make EEx works with variables and requide code
Add tests to nested expressions
Move down the wrap_expr to the Compiler
Do not ignore expression when is not a print expression
Update to last Elixir
Consider middle expression too
Do not evaluate simple expressions
EEx now compile blocks
Use blank string as buffer
Add tests to EEx::Engine
Test compile with an embedded code
Expressions should not be a string
EEx compile a simple string
Make tokenizer accepts a binary
Tokenizer is ready.
Move to Apache 2 License. Copyright Plataformatec.
Update travis.
github.com/josevalim -> github.com/elixir-lang
Update Makefile
Update docs/4_protocols_and_records.md
Add split and take to enum.
Do not expose erlang's element and setelement in favor of elem and setelem.
Add is_record that works with Elixir record semantics.
Add setup_all and teardown_all to ExUnit.
Move to new docs format.
Add Enum.drop and Enum.entries.
Both use and require checks if the module is loaded.
No stop shuold not trigger compiler.
Allow Erlang attributes to be added more than once.
Add Enum.partition
Linify guards to avoid warnings.
Update @overridable docs.
Support on_load data attribute.
Proper handle errors if super is not available.
Tests for calling super implicitly.
Add tests for handling super.
Rename abstract to overridable.
Initial work on @abstract.
Process.erase -> Process.delete
Remove attributes table.
Start working on defabstract, remove defforward.
Support on_load data attribute.
Update docs/3_modules.md
Rename defforwarded -> defcallback.
Finish implementation of defforwarded.
Start work on defforwarded.
Pass the callbacks arguments to forwarded functions.
Allow super to be implicit.
Remove orelse and andalso in favor of only and and or.
Added a missing quoted
bin/* docs.
Update docs/2_diving_in.md
Add @moduledoc and @doc to the list of attributes.
Remove extra new line.
Move Elixir to the new doc style.
Documentation and tests for runtime docs.
Start converting comments to new documentation format.
More work on annotated docs.
Initial work on docs.
Allow module conflicts to be ignored.
Decouple docs and debug_info opts.
Disable debug_info on compiled Elixir.
--docs turn on debug_info on compilation.
Revert "Temporarily remove build status as CI can't connect to Github."
Accept docs option when compiling.
Allow heredocs to be aligned according to the position the heredoc end.
Assert heredocs accept expressions after its declaration
Assert heredocs do not modify __LINE__.
Initial implementation of heredocs.
Provide GenServer::Behavior with the default implementation for GenServer callbacks.
Define super for defforward.
Improvements to defforward and module functions.
Allow forwarding to be removed and redefined.
Add List.wrap, ensure __protocol_for__ doesn't fail.
to_binary nil should return an empty string
Do not check clauses in compiled callbacks.
Automatically require module definitions in the same lexical context.
Small clean up regarding quoting.
__using__ always expects two arguments.
Remove old xrl file.
Implementing missing hooks in the syntax.
Do not automatically include any in the protocol.
Do not automatically set references.
Cleaning up docs.
Clean up function definition.
Add unquote: false to quote.
Docs for apply.
Remove module and code reloading related functions.
Move port functions to their own module.
More adjustments to dispatching.
Do not auto-import error.
Import all funs from Erlang.
Make apply a macro and ensure it does not fail with custom tails.
Add __FUNCTION__ reflection.
More tests an examples to forwarding.
Forwardings are now compiled.
Initial take on defforward.
Adopt fn(x) -> _ end as preferred syntax.
Add more functions to Orddict.
Make Orddict follow the Erlang process API.
Remove the else clause from try, clean up the code.
Add --no-stop back.
Add an else clause to try, rely on Erlang.init.stop().
Update executables.
Improve SyntaxError and like to include proper backtrace.
Convert from def test_rest to test :rest
Define a test helper.
More tests and docs for quote.
Allow dynamic function generation.
Allow hygiene to be disabled when quoting.
Add update_field to records, remove append_field.
Add flunk assertion
Rename assert_included to assert_member
Make the assertions tests fail when nothing is raised
Add docs to assertions
Add Enum.filter_map
Get rid of for loops.
Enum.foldl -> Enum.reduce
Add docs and tests for keyfind.
Enum.detect -> Enum.find
Added match? to builtin macros.
Use & for partial application instead of _.
Include a Record segment in Protocols.
Restrict the binary protocol.
Added assert_match as assertion.
Use new assertions on tests
Refactor assertions to use assert method and add tests
Add assert, refute and assert_equal
Enum.times start form 1
Allow records with dynamic names.
Make it possible to extract definitions from existing Erlang files.
Evaluate record values just once.
Update docs, closes #110
Allow duplicated attributes.
Allow developer to register custom attributes. Add add_attribute and delete_attribute APIs.
Add more tests for -> end, update docs.
Clean up function syntax.
Allow :[].(1,2,3)
Improve docs.
Revert "Rename tuples { 1, 2, 3 } to %{ 1, 2, 3 } to remove ambiguity."
Rename tuples { 1, 2, 3 } to %{ 1, 2, 3 } to remove ambiguity.
Better exception message in case a failure happens on macro.
Revert "Support implicit string concatenation, closes #105"
Optimize and write docs for <>
Initial pass at string concatenation.
Keep & precedence close to |'s
Remove & and | from guards in favor of multiple when clauses.
Revert "Demote andalso and orelse from operators."
Rename to_list to to_char_list, closes #108
Officially depend on R15.
Improve docs, update guides.
Improve docs for try.
Use new exceptions control schema in lib.
Refactor exceptions on src.
Removed Elixir::Formatter in favor of exception messages.
Move lib code to the new exception handling format.
Move more functions to Process module.
Add SystemLimitError.
Support function clause.
Support to badmatch, case_clause and badfun.
Badarity support.
badarith support.
argument error with tuple
Support ArgumentError.
Refactoring and more unit tests for exceptions.
Move shared functions to Exception.
Optimize multiclause matching.
Ensure defined variables also work with wrappers.
Wrap UndefinedError exception.
Allow to catch erlang errors.
Start exception normalization.
Refactor exceptions a bit.
Rescue with defined variable.
Rescue named exceptions.
Catching an explicitly defined exception.
Initial work on try/rescue.
Update README.md
Temporarily remove build status as CI can't connect to Github.
Add Process module
Use is_function instead of erlang:fun_info
Add special form in_guard.
Initial work on exceptions.
Initial work on defexception.
First argument to defrecord doesn't need to be an orddict.
Split elixir_try into its own file.
More cleanups for easier bootstraping.
Get rid of exunit now that we can pass multiple args to bin/elixir
Use the new at_exit hook.
Add at_exit hook, closes #107
Remove translate_splat.
io_lib actually returns an iolist
Filter stacktrace by removing internal BOOTSTRAP calls.
Move special forms to Elixir::SpecialForms.
Reduce the list of non-overridable macros.
Update docs.
Finished imports clean up.
Clean imports logic.
Initial implementation for new import.
Remove unecessary limitation.
Improve coverage.
Improve guards support.
Rename tokens block, kv_block, erlang_op and module_ref to __BLOCK__, __KVBLOCK__, __OP__ and __REF__ to avoid the likelihood of conflicts.
Remove noref.
Modules and files are compiled before evaluated.
Revert "Remove noref, disallow dynamic module names."
Remove noref, disallow dynamic module names.
Revert "Linify quoted contents."
Linify quoted contents.
Use __info__ instead of module_info.
Initial version of more robust module compilation.
Remove operators colon support.
Properly inspect unproper lists.
Revert "Get rid of defp in favor of data and @visibility :private."
Revert "Do not allow private macros."
Do not allow private macros.
Get rid of defp in favor of data and @visibility :private.
Refactor scope error handling.
Shortcut data API works.
Small changes to data attributes.
Update reserved data attributes and mention them in the getting started guide.
Add reserved data attributes.
Not all lists can be converted to binary.
add a section about module data.
Dipping the toes -> Diving in
Support \ at the end of lines, closes #106
Support implicit string concatenation, closes #105
Demote andalso and orelse from operators.
Add support to clauses that can handle exceptions.
Provide simple short-circuits to list for performance.
Define defdelegate.
Add Enum#times.
require macros before usage.
Improve docs and tests for Orddict and List, closes #71
Add tests and docs for List.
Finish chapter 6.
Rename internal variables to _EX
Do not merge kv-args and kv-blocks, #100
Chapter 6 and other changes.
Macros chapter is done.
Move to the same License as Ruby. Also add a LEGAL file to be explicit about files that are not under Elixir's license.
Chapter 4 is done.
Add missing behavior(application).
Improve refer test.
Modules chapter is done.
Start working on chapter 3.
Finished chapter 2.
Docs for fn, loop and try.
More docs.
Improve docs for Orddict.
Rename Orddict.fetch -> Orddict.get.
Clean up.
More partial application tests.
More docs guidelines.
MOAR docs.
More docs.
More docs.
Start working on docs.
Discourage module nesting, closes #101
Rename unquote_splice -> unquote_splicing, closes #96
Add docs to for.
Implement Enum.for
Rename for and bitfor to lc and bc.
Solve precedence issue with function calls followed by tuple + op.
Implement Enumerable comprehensions.
Add TODOs related to exception handling, finally closes #99
Do not hide backtrace on protocol failures.
Remove tuple from module scope.
Clean up docs.
Added Module#function_defined?
Rename __data__ to __info__(:data) so it also properly abstracts Erlang's info.
Add missing assertions.
Allow custom record extensors to be used.
Add test for error message for scheduled modules.
Update quote docs to mention hygiene
Implement macros hygiene. Also move kernel behavior to test/elixir/kernel.
Simplify try/catch to be more like Erlang's and not require a tuple.
Escape chars also need to be eescaped on inspect.
Rename args for vars from false to nil.
Extract method to elixir_ref.
Refactor variable handling into its own module.
Change Enum protocol to return a function that expect one argument.
Handle UTF-8 encoded files properly.
do not allow __MODULE__ to be assigned (as in ruby)
Read a specific key in one step.
Do not return the binding after eval.
Use __var for quoted variables.
Add some explanation for ExUnit::Escaper.
Provide a mechanism to escape _
Do not import macros.
Allow isolated function declaration.
Add a default hook name for add_compile_callback
Add List::Inspect and to_list.
Rename stringify to to_binary.
Add __using__ to the list of never imported functions.
No need to reverse at the end.
Make all tuples with two args literals.
Allow refer with one argument, closes #91.
Reset the last stored item when evaling a module.
Properly escape empty atoms, closes #90
Add List.flatten and do not check for previous clause on function declaration.
Add Code#eval_quoted.
Add more tests.
Improve exunit runner.
Add tests for compile callbacks, closes #70.
Initial setup for compilation callbacks.
Allow data to be store in modules.
Add Module.compiled?
Add Enum.filter
Add refer that extracts one of the responsibilities from require.
Remove ROADMAP references.
Allow records to implement their own iterators.
Add detect and detect_value.
Implements any? and empty? for Enum.
Implement all? and fix a bug related to default clauses.
Remove wrong usage of List
Enum.mapfoldl
Solve list inspecting.
Implement Enum.foldl
Add Enum#join
Allow shortcut try on def/defp/defmacro.
Add each to Enum.
Start working on Enum protocol.
Add more protocol docs.
<3 travis ci
Finish porting CLI tests.
Start porting Code and CLI tests.
Start bringing code_test back.
Add __impl_for__ on defimpl
Tests for __protocol_for__
Add List#join.
Extract string.
Protocol expects an argument.
Refactor protocol to also implement __protocol_for__
Add a test_helper
Add tests for File.
Bump up Code file.
Move stuff to module.ex
Create a distinction between eval and eval_quoted.
Test already compiled module.
Test for invalid bitstring specifiers.
Test inspect with tuple like records.
Support for bitstring modifiers.
Allow scientific notation for floats.
Tests for bin comprehensions.
Deprecate bitstr in favor of the << >> syntax.
Support bitstrings.
Add list comprehensions.
Let the compiler do the hard work for you.
Implement partial application for module:fun calls.
Add test for partially applying an internal macro.
Import syntax_error from elixir_errors.
Rename some modules and add docs.
Extract local macros another file.
Extract macros that work as local calls.
Refactor partial handling.
Partial application for functions.
Initial partial application support.
Break apply clause apart to ensure it won't clause conflicts.
Record internal macros invoked and raise an error in case of conflicts, closes #81
Raise an error if trying to require an invalid macro, closes #86.
Improve error messages.
Allow kv-blocks for curly blocks.
Finish documenting main macros.
Docs for quote, unquote and unquote_splice.
Docs for __MODULE__, __LINE__, __FILE__, use, require and import.
Add docs for case/receive/try.
Small doc fixes.
No need to fetch from orddict.
More docs.
Docs for defmodule and def.
Allow to define functions without a body as a documentation format.
Break tests into smaller ones.
Define elem and setelem as macros according to Elixir style, closes #61
added missing formatter_test [fixes #85]
Use the new ^ unary operator.
Minor improvements.
Add support to ^ and clean up remaining test/erlang/* files.
Update README.
Bring the bundle back.
merge changes: defmodule with orddict tests
added missing orddict test, small refactorization
Test implicit module generation on protocols.
module -> defmodule
Use the new Inspect protocol instead of manual conversion.
stringy(nil) -> will return empty string
string interpolation is now stringify
handling linu numbers in stacktraces on R15
Inspect false/true/nil properly.
Handle printable lists properly.
Implement inspect for lists and tuples.
Inspect for Numbers.
Inspect for BitString.
inspect(any)
Finish anonymous loops.
Support functions with multiple clauses.
Documentation and small changes.
Support comma_expr in key-value blocks.
Refactor kv block handling to support multiple args.
Rename assigns_blocks -> assigns_block
Rename loop -> do_loop to avoid conflicts.
Initial version of loops and recur.
Add tests for records + protocols
Protocols now work as expected \o/
Added module eval.
Improve tests for protocol.
Add tests for protocol pointers.
Improve protocol handling.
Implement inspect for atoms.
Add token chars.
More inspect API.
Rename ref -> module_ref
Remove call operators as they are ambiguous.
Improvements to protocol implementation.
Initial work on defimpl.
Start work on defprotocol.
Update docs.
Allow only/except to be given to import.
Remove only_import references.
Clean up uneeded code.
Check first if module is available.
Add tests for require and import with Erlang.
Add tests for import mechanism failures.
Create import macro.
Prepare structure to handle imports.
Be more liberal about raising an errors when there is a macro conflict.
Start logging macro and local calls for modules.
Validate can't import Elixir in erlang macros
Add tests for require.
Update README to mention only: and except: for require
Nested calls to require overrides previous definitions.
Raise error on macro+local conflict.
Better error messages in elixir_clauses.
Allow import: true to be given to require.
Add ability to import macros.
No need to pass the name as parameter.
Improve docs as I needed to do a brain dump.
Ensure that modules are required before dispatching them.
Allow dynamic modules and ensure modules are loaded on load.
Rename refer to load
Remove public/private helpers in favor of defp.
Tests for record references.
Refer works.
Enable lazy module compilation.
Remove non nested modules from tests.
Nest ALL the modules.
More work on references.
Start implementing lookup rules.
Start out elixir_ref.
Implement use as a very simply hook mechanism.
Simplify IO since Erlang IO can take care of both bins and lists.
Start IO module.
Show proper exceptions in IEX and CLI.
Improve stacktrace on ExUnit.
Improve records docs to talk about default based functions.
Default arg as first argument works.
Add clause check.
More exception handling tests.
More error tests.
Improve and test error messages.
Start work on formatter.
Halt baby, halt.
Kick Elixir tests back to life.
Refactor a bit record usage in ExUnit.
Add increment to integer record field.
Add merge to records.
Refactor sync cases handling.
Make ExUnit formatter a genserver.
Attempt to get ExUnit running again.
Move to markdown.
implemented __FILE__ and fixes for __LINE__
implemented __LINE__
Optimize var/tuple dispatch.
Remove List.prepend.
Bring USAGE back to README.
Do not allow custom functions on records.
Bring Elixir CLI back.
Improve compilation order.
run rlwrap only if present
remove iolist_to_binary conversion form elixir_errors:error
new version of iex merged with string interpolation fix
Add tests for empty strings.
initial version of iex - elixir repl
initial version of iex - elixir repl
Refactor module macro.
Support nested defrecord.
Move Record function definitions to inside the module.
Revert "Ensure __MODULE__ is never quoted. It is a special form."
Ensure __MODULE__ is never quoted. It is a special form.
Support char lists as 'foo'.
Pass the parent as argument to Record.define.
Solve case match ambiguity.
Add some docs to defrecord.
Implement defrecord.
Initial implementation for records.
Support unquote splice.
Remove support to .()
Remove endmodule from docs as it is not the usual behavior.
Solve match block ambiguity.
Quote expects a block, also support ns do end.
remove old namespace_test file
[fixed #56] - rename of ns/endns to module/endmodule
Use when instead of | for guards.
Optimize tuple calls.
Add tests for dynamic functions.
Add more dynamic calls tests.
Support default args with //
Factor table name into one method.
Clean elixir_def.
Start refactoring def handling.
elixir_def_method -> elixir_def
Clean up Erlang dispatch.
Get rid of warnings.
Rename namespace to module internally.
Improve coverage for single refs.
method -> function
Improve reference lookups.
Allow dynamic reference lookup.
Properly transform args.
Simply parens call.
Assert that later keys have higher preference.
Solve ambiguity between p { }, p { 1 } and p { 1, ...}
Turn on reportings for xrl and yrl files.
Another attempt at getting travis-ci working.
Attempt to make travis work.
Add andrzej.sliwa@i-tool.eu to the list of travis notifications.
Remove bogus file.
Compile exbin only if it changed.
commit r14 compiled rebar
update .gitignore
cleanup of rebar config - remove escriptize options
fix for rebar configuration
cleanup
update ignores
add rebar 'binary'
fix for rebar configuration
cleanup
update ignores
MOAR TESTS.
Add support to receive and <-.
Support to try.
Improve coverage for case.
Improve coverage for functions.
Mark some Elixir::Macros functions as private.
Allow handle_else to work with match/catch/after blocks.
Move else handling to elixir_clauses.
add rebar 'binary'
added public macro
added documentation for 'private' macro
added private function
added __NAMESPACE__ macro
Add and, not, xor, or, andalso, orelse.
Provide div and rem as macros as well. Improve docs.
Add bitwise operators.
Refactor operator handling.
Change syntax for functions.
Revert to more conventional method declaration.
Refactor some methods now that we have guards.
Guards in case and defs and functions.
Allow quoted keys.
Add ++ -- ** //, implement only ++ and --. Leave ** and // open to developers.
Small refactoring in Elixir clauses.
Add comparison tokens, improve grammar.
Improve tests.
Add Elixir::Code.version
Add more docs.
Implement if as an Elixir macro.
Atoms with interpolation.
Strings as binaries works.
Simple string works.
interpolations return the syntax tree.
More preparation for strings.
Start work on strings and interpolation.
Update README.
Remove old include contents.
Get rid of old files.
Remove old handle_file_warning.
Add comments.
Optimize !!.
Remove and disable old tests.
Update .travis.yml file.
R14B01 is temporarily not provided on travis-ci.org but we now have R14B04 ;)
Simplify unless macro now that we have "!"
MOAR MACROS.
Ensure nested || works as expected.
Optimize g df calls.
Refactor || macro.
Invoke ::Elixir::Macros on local calls.
|| macro.
More tests.
Refactor lists handling.
Fuck yeah. Solve do ambiguity.
Add tests for do ambiguity.
No need for do_identifier.
Split operator call in blocks.
Implement && as an Elixir Macro.
Organize tokenizer code in sections.
Add || and && operators.
Allow dynamic dot calls.
Refactor macro dispatch logic.
Add support to case clauses.
Optimize function clauses.
Improve clauses exceptions.
Clauses can handle many clauses.
Solve ambiguity in kv expressions.
Add more META info.
Remove line numbers on quoting.
Add support to if/elsif/else with many clauses.
Remove function from elixir_clauses.
Tests for curly calls.
Ensure key-value blocks also works on function calls.
More tests reorganization.
Improve arithmethic tests.
Rename to conditionals_test.
KV blocks work as expected.
Do not consider eol on expr_list.
Get rid of ; on yrl files.
Remove old files.
Improve tokenizer and macros system.
Macros work! :bomb:
KV tuples are also literals
Got rid of all '[]' containers
Remove lists containers.
Start working on macros and new literals.
Compile lib files once again.
Clean up old Elixir code.
Add quoting and unquoting.
Add defmacro support.
Check macro entry.
Optmize sorting of kv.
Methods can be compiled.
Start work on method definitions.
Properly namespace references.
Namespaces work.
Improve references.
Improve Elixir scope.
Function calls.
Allow dot operator calls.
Allow any reference call.
Invoke erlang methods.
Do not compile old Elixir files.
Add references.
Properly define special operator to solve ambiguity unary and binary operators.
Typo fix: conver -> convert
Initial work on remote calls.
Sort key-values.
Improve kvblock syntax.
Add tuples to the gramar.
Allow kv inside lists.
Keywords is a list of tuples.
Add curly to the grammar.
Representation for binary ops is the same as for call ops.
Function with args work.
Add support for empty lists and tails.
Add basic lists.
true/false/nil
Keyword args should have the line number.
Add do blocks with proper precedence.
Basic test for function work.
Add call args.
Use {} instead of :
Assignment works.
Tokenize identifiers.
Tokenize atoms.
Match op tests.
Support op calls.
Unary and float grammar.
Tokenize floats and start translating unary operators.
Add a test with many parenthesis.
More tests for the new grammar.
Allow _ as number separator.
Move to the new tool chain.
Handle new lines.
Start tokenizer.
Refactor clauses handling into its own module.
Add tests for if/elseif/else clauses.
Support if clauses.
I haz functions.
Add assignment special clause.
Automatically handle expressions list.
Add && and ||.
Start working on the translator.
added travis status to readme file
Added comments
Added more numeric functions.
Added more standard functions to Numeric module (round/ceil/floor/truncate)
Added proplists-based access to lists
Need to add exbin path because application:start doesnt do it automatically
Updated 'Function' section to include examples of invoking a function using brackets and the `apply` function.
Updated doc for creating an empty Tuple.
changed Math module to use delegate instead of defining each method with meta programming
added math module
Function#and_then now works with self.arity != 1
Revert "added atom to proc to List#map"
added Function#and_then
added atom to proc to List#map
added each_line and comments for the each_* methods to string
added ruby like each_char and each_byte to string
Add to_i to String
update
updated versions
removed unsupported services
updated yml
partial application
removed old erlang version
added travis yml
enable .gitignore rules for all *_parser.erl and *_lexer.erl autogenerated file, removing eex_lexer.erl whicshould be ignored
Don't try to format lists.
Also solve the issue for interpolations.
Add an if/else/end example for eex.
Improve signals.
Add a test case to previous commit.
Sort items before evaling, closes #34.
Edited ROADMAP.md via GitHub
Add wildcard tests.
Small adjustment.
Use space instead of tabs on identation.
Support adding and removing dot files.
Start working on dir glob with ** support.
Add append, first and last to list.
Provide shortcuts for prepand and append paths.
Add SafeEngine with tests.
Add EEx::Util.
Improve eex coverage.
Enforce -> for one liners and do...end for multiline
Add a defining callback that is invoked at the end of module definition.
__used__ -> __using__
Update version and CHANGELOG.
Optimize interpolations.
Add count and * to string.
Iterate the chars instead of regexp.
Split inspect into different tests.
Properly fix line break in strings.
Also escape \r and \n from strings.
String inspect properly handle quoted strings and interpolation.
Use iolist for better compatibility.
Execute iex code in IEX::Context.
Improve syntax errors.
Removed old nthtail tests
Replaced list#nthtail by a bracket slice
Changed list#replicate to the * operator
Allow begin; expr; end.
Edited ROADMAP.md via GitHub
Added nthtail, duplicate and flatlength to lists
Added Max/Min/Sum, any? to Lists
Added dropwhile, partition and splitwith to lists
Release v0.3.0.
More README cleanup.
Add Module.eval and Module.stacktrace.
Remove useless to_s.
Inline regular expressions.
Cleanup ROADMAP.
Add remove_ivar method.
Raise an error if an internal method is overridden.
Allow respond_to to be overridable.
Rework binding section on README.
Allow bind operator without parens.
Clean up sharp grammar.
no_constant exception is now no_module.
Test binding exceptions.
Allow rebinding.
Added  with the method  used for benchmarking.
Clean up Regexp API.
Add tests to respond_to.
Optimize respond_to by using pattern matching.
Add explicit to_str conversion.
Tidy up conversions.
rename arguments names of gen_server functions to be consistent with OTP documentation and to be more accurate  meaning
Update CHANGELOG.
Allow nested brackets, closes #28
Bring Ruby method dispatching semantics. Local calls only apply to private methods from now on.
Resolve local calls as late as possible.
Keep private methods counter as well.
Actually, this is not a good idea, revert @@.
Update README.
Improve docs.
Retrieve ivars.
Dialyzer fixes.
Metaprogramming is a big deal here.
More tests.
Bring old code back.
Update CHANGELOG.
Add respond_to? and __send__.
Check for __mixin_methods__ instead of exports.
cache local and mixin methods.
Update error messages.
Limit symbol shortcut only to '/'
Make it clean that it only happens during definition.
Add a section about mutability to README.
Update examples.
Move to 0.3.0.dev.
Remove old TODO items, 8 to go.
Update DOCS.
One less item as TODO.
More tests and docs for Using.
__added_as_mixin__ -> __mixed_in__
Test definition methods.
No need to pass the arity.
Finish methods clean up.
Start cleaning up methods.
Updat TODOs
Always have exName.
Moving things around to continue refactoring.
More cleanup.
No need to pass kind around.
Reduce beam size.
More cleanup.
Precompile many methods for perf.
Making tuples not raise 'badarg error when [] called with out ouf bounds index. Return nil instead.
More README fix.
Tidy up README.
Tidy up some todos.
Move builtin_mixin around for perf.
Get rid of method_missing.
Remove method missing references.
More code reorganization.
Rename elixir_module_methods -> elixir_module_using.
Rename elixir_object_methods -> elixir_module_behavior.
Optimize orddict as well.
Rename Instance -> Behavior.
Remove handle_new_call.
Remove parent as well.
More reorganization and moving things around.
More cleanup.
More refactoring.
More clean up, start playing with Using.
Removing more code.
Cached (and fast) mixins.
Removing more stuff.
Discard more useless code.
Removing more code.
More code going out.
Object is gone.
Remove unused methods.
Remove remaining objects.
More cleaning up.
Use binding on Regexp.
More conversion to binding.
Converting more and more to the binding format.
Use binding on methods.
Move optimizations to elixir_slate.
Convert builtin to use bindings.
ExUnit now run with bindings.
Start converting ExUnit to use binding.
More work on binding.
Start working on bindings.
Edited README.md via GitHub
Add links.
Wording correction in Variables and Pattern Matching
Typo fix: works -> work
Changing parenthesis to parentheses. Parenthesis is singular meaning:( and parentheses is plural, meaning:()
Link fix in Bit String section
Removing duplicate 'also'
Typo fix execute -> executes
I believe that only one file is generated. The plural-singular jump is a bit confusing
Add TODO
Red, Green, REFACTOR.
If dispatching to a constant, resolve it a compile time.
Find constants at compile time.
Also optimize set_ivars.
Order dicts at compile time if possible.
Optimize set_ivar.
Inline get_ivar code.
Pass the arity as argument is possible.
Ensure parent returns nil.
Remove already done TODO.
Avoid infinite loops with method_missing.
Order by most used.
Add apply_to.
Changed String#chop to use a regex
Optimized String#capitalize
Remove take from List
Changed Regex to accept a type argument
Added some docs on Integer
Added capitalize, index and chop to String
Added split and insert to Lists
Added take and takewhile to Lists
Remove needless self.
Update docs.
Remove {:} and use {} as empty dict. And empty tuple can be retrieved with Tuple.new.
Added sort and zipwith to List api.
Added some tests and docs to List api.
Update CHANGELOG.
Add UnboundMethod and Method.
Add unbound method.
Anonymous methods now work.
Add some comment.
Use only the owner methods.
No autoimport for exit.
parse time -> compile time
Improve atoms inspect.
Initial work on anonymous methods.
Just rescue instead.
Return method object.
Raise errors if methods, modules or objects are being defined inside a method.
Relax syntax restrictions.
Nest tests.
Tidy up processes API.
Do not fail on empty files.
Add key?, get, set_new and store_new to ordered dict API.
'Foo::Bar now works without double quotes
Invert the order of most error arguments.
Update CHANGELOG.
Add Ruby's operators and method calls precedence.
Tidy up lists.
Check if characeters are printable on String#inspect, closes #23.
based on Ruby -> inspired by Ruby
string example fix
Remove deprecations.
break tests in different test cases so they can run in parallel
Update CHANGELOG.
Add an example of async cases.
Make configure call optional.
Make ExUnit run test cases in parallel.
Remove three args spawn.
Bump to 0.2.1.dev.
Release 0.2.0.
Properly inspect empty dicts.
Add strip to strings.
Update help info.
Add compiler specification.
Provide a public API for compile file. This should make the implementation of reload quite easy.
Move compilation info out of the internals.
Be more explicit about when the error happened.
Apply feedback form yesterday's talk, i.e. remove ambiguity between functions calls and local calls.
Clean up ROADMAP.
Code improvements.
Divide and conquer.
README.
Beware of reserved module names.
Raise an error when reopening modules/objects to avoid common pitfalls.
Remove unused operator from README.
More updates to README.
Docs, docs, docs, docs.
-pa and -pz
Compiler tests.
Compile stuff (OH YEAH).
More work on command line compiler.
Rename test files to Elixir script files.
Elixir tests are back alive again.
Move compilation code to its own module.
Only compile if compile_path is given.
Do not burst tail cail optimization if last line in if clauses is not really assigning any variable.
Extensive work on hot code swap support and autoload.
Remove code related to the cache directive.
Elixir tests now pass as well.
Erlang tests are green.
Initial version of code compilation for hot swap.
Edited README.md via GitHub
Update docs.
Update ROADMAP.
Edited ROADMAP.md via GitHub
Edited ROADMAP.md via GitHub
Elixir scripts should work if they are invoked using symlinks (e.g. /usr/local/bin/iex -> /usr/local/agner/packages/elixir-@master/bin/iex)
Update examples (so glad string manipulation got much simpler, fast and powerful).
Strings are now binaries without no extra pass. This makes playing with strings faster and more compatible with Erlang.
~w is more appropriated here.
Add Regexp#run, String#scan and tests.
Allow escape characters in strings, add Regexp.escape and allow strings on split, sub and gsub.
Add begin/end, that opposite to try/end, pass variables forward.
Improve date/time facilities.
Empty ivars should return nil.
Use init:stop(), otherwise we may abort before printing error messages and so on.
Added upcase, downcase, and reverse to Strings
Added documentation for Date
No need for this .gitignore here.
Allow cache directive to specify dependencies.
Improve DateTime with more methods, tests and docs.
Add DateTime and also make Date implementation rely on Erlang's Calendar.
Update Makefile.
Use abs on integer, rather than calling Erlang.abs
Update CHANGELOG.
Rename to_dict to to_tuple
rename set paramaters to set methods as other
add superset?, - and some clean up
avoid to_list as it returns the elements in an undefined order
add filter and fold
initial work on set
Oops, bad initializer
Changed Date's constructor to initialize
Added Date, with support for addition and subtraction of dates
Extract ROADMAP.md file.
Update README to remove references to constructor.
Remove constructor in favor of initialize.
Remove code pushed accidently.
Reword this to be more compatible with workflow.
Update README and CHANGELOG.
Treat after in receive clauses as a normal scope.
Refactor those scenarios.
More variable scopes handling with guards.
Tests now pass.
More vars improvements.
Initial work on simple guards.
Bump to 0.2.0.dev. Update README and CHANGELOG.
Finish removing forced single assignment.
Update README to mention ~.
make pattern matching explicit
Support to explicitly bounded variables.
Actually, there is no need to special case clauses.
Initial work on multi-assignment vars.
Optimized times using pattern matching.
Prepare setup for inheritance.
More perf improvements and others small fixes.
Calculate mixins faster for common cases.
Simplifying modules behavior.
Update optimizations list on README.
Update ROADMAP.
No need for those extra parameters on dispatch.
Be explicit that R14A and R14B do not work.
Update CHANGELOG.
Finish optimization round up.
Allow some operators on method signature.
Optimize operators.
Update README and CHANGELOG.
Remove protected warnings.
Remove elixir_numeric_methods.
Add the ability to define methods using Erlang's Abstract Form.
Make dispatch much much faster using the new flat modules.
Dispatch information is now in the record itself.
Generate implicit mixins and protos when necessary for caching.
Regular modules are also flattened.
Deprecate protected. Also remove references to both protected and callback visibilities.
Modules are now flattened. This becomes self. unecessary if the included module can be found at load time.
Mixins are lazily compiled at the end of the object. Next step is to flat modules.
We need this when ebin/ folder is empty.
Small fixes to GenServers
Allow brackets read on instance variables.
Improve Process STDLIB.
Add String.split and allow tabs.
default args can properly handle literals now.
Added File.read, File.read_info and others.
Small fixes.
Suspend the process if --no-halt is given.
Wrap up ETS commit.
Squashed commit from kondratovich/master
Change a bit how executable works.
Add Atom.exists?.
Add set to tuples.
Add empty? to STDLIB.
Supervisor starts the code server directly.
Extract formatter from ExUnit.
Add docs to ExUnit.
Add setup/teardown callbacks to ExUnit.
Update CHANGELOG.
Update RELEASE.
Update CHANGELOG.
Update ROADMAP.
Update docs.
Add support to nil.
Add nil.
Small refactoring.
some fix in test
readme fix
add test for number separator and fix README
Add support for '_' separator in numbers
Allow ' as valid symbol.
Allow elixir keywords on Erlang method invocation.
Add more info to the README and change code to reflect it.
Use default arguments internally.
Implemented default args.
Initial work on default args.
Expand pattern matching section.
Replace set_ivar() by @() throughout Elixir.
Allow allow @(k,v).
Add @() to README.
Add @() as syntax to atomatically update instance variables.
Rename __ivars__ to get_ivars and add set_ivars counterpart.
Update CHANGELOG.
Add release file.
Yay, boot Elixir as an Application.
Change gitignore, add elixir.app
Apply Max Lapshin advice here and remove init:stop().
1. gen_servers must be started via start_link under supervisor 2. any erlang process must be started in supervisor tree
proper library path detection
Update CHANGELOG.
Print some dots while running tests.
Add some full stack server and client test to GenTCP.
Add a bit of docs to GenTCP.
Added GenTCP, with examples
Bump version to 0.1.1.dev
Start a CHANGELOG.
Improve docs for records.
Be sure to compile everything when include change.
Improve tests and docs in STDLIB.
Expend README to mention records.
Add the ability to import records.
halt! with status code.
Add link to Textmate bundle.
Add process_chat.ex example.
Add more info on invoking Erlang methods to the README.
Rename examples.
Added delete to OrderedDict.
Remove bad examples from the README.
Improve coverage for lists.
Update README.
Lists are not evaluated to false anymore.
Another silly math error.
More instructions.
Tidy up README.
Update README.
Ensure modules cannot be initialized.
append performs better than flatten.
Improve strings performance.
Make IO more object oriented.
Make iex support utf-8 and don't call loop inside try because it does not have last call optimization.
Add --no-halt to description.
Add tty to iex.
Properly format syntax errors.
multiline iex
Reuse Code::Formatter in IEX.
Add tests for match arg.
Ensure paths are expanded.
Added OrderedDict#update instead of append.
Use update ivar instead.
Add anonymous functions.
added doc example and test for List#filter and List#select
Tests to ivar_append.
Remove callbacks.
Simplify a lot GenServer implementation.
Rename __parent__ to __parent_name__
Rework on the GenServer as object.
Use a hash in the server instead of its own state object.
Improve test suite.
Add performance section to README.
Don't remove Erlang functions from the backtrace.
Elixir cache is implicit.
Compile more Elixir stdlib.
Tidy up Hipe compilation. Currently, compiled modules are hardcoded.
Start playing with file compilation.
print syntax error correctly
multiline input in iex
In elixir_errors, pass syntax error token into error tuple
Add exunit bin.
Defined test cases are now implicitly detected.
Several improvements to ExUnit.
IEX: print syntax error message correctly (It's a native list of characters, not Elixir String)
Tidy up README.
Added String.include?
Update makefile.
Add the classic fibonacci example.
Improve output.
Improve tests.
Improve bin.
Store options in the Code::Server
Improve command line args.
Move options processing to Elixir.
Just compile what is required in Makefile.
Add attr_reader.
Tidying up
Small refactoring.
Properly format error messages in src/
Finish load paths.
Added load paths.
Implicit catch/after syntax in methods.
List comprehensions #ftw
Raise proper errors.
Update README.
Added super.
More work on super.
Base for implementing super.
add a test case for method_missing
added method_missing feature and make tests passed
`filename:absname` accepts binary string parameter since R14B01 R14B or prior version fails with binary string. In order to keep backward compatibility, use to_list instead.
Kill extra end.
Methods as atoms.
No need to always download iex.
Add delegate.
Added function arity and integer times.
Improper lists are properly inspected now.
Update README.
interactive elixir
add IO.gets methods
Add missing types.
Allow empty expressions in if/else/try/catch clauses.
Rename to try/catch.
Code::Server works.
Added sub and gsub.
Added replace to regular expression.
More README.
Adding docs to module.
Use ~~ for HEREDOC to solve ambiguity.
They are bit strings.
Add gen_server example
Update README.
Rename a few methods, make elixir_object_methods more slim.
Let's take one step back so we can give two forward here.
More improvements on gen_server.
More gen_server tests.
Start gen_server and handle interpolations before escaping.
Renaming.
Atom#to_s tests.
Ops, forgot to add AtomTest to the list.
Improve regexp support and add tests for atoms inspect.
Remove <<- and update examples.
Rename Pid to Process.
Allow callbacks to be defined on Object body.
Start the example folder with receive/after/<- example.
Callbacks are protected and propagate protos to mixins in modules.
Add tests.
Allow after expressions.
Initial work on receive expressions.
Ensure variables are never passed forward in begin blocks.
Add exceptions.
Allow multiple matches on case.
Added begin/rescue/after grammar.
Add \ to allow expression to span multiple lines and implicit string concatenation.
Be more restrictive regarding heredoc.
Test interpolation.
Update example.
Add HEREDOC to README.
Added HEREDOC.
Tidy up some internals in the object model.
Improve README.
Make executable works when in other directories
Add binary comprehensions.
Add inlist and inbin. Ensure variables inside list comprehension do not leak to the outer scope.
Small update to README.
Add license.
README: add Erlang version requirement description.
caseless test
add some regexp match tests
adding regexp_test in elixir (though test/erlang/regexp_test exists, I think they have different purposes)
list list_comprehension_test: Add a test case that selectively filters elements
Allow ordered dicts to be used on pattern matching.
Remove outdated TODOs.
Added list comprehensions.
String#to_atom, implement and test
adding string tests
Refactoring ExUnit::Cases#__tests__: Using map&select to be more compact
Update README.
A bunch of tests.
Create assertions file.
Update README.
Ignore nomatch_clause_type warnings, closes #1
More bracket method tests.
More work on bracket method in Erlang calls.
More brackets expressions.
Disambuigate base identifiers.
Some tests for brackets syntax.
Initial implementation of foo[].
Add very simple runner.
Update README.
Added case/match expressions.
Allow send to invoke protected methods.
Extend the grammar with case/match expressions.
Words.
Complete precedence table.
Improve STDLIB code.
Implemented ||.
Pass the counter around and merge it.
Move vars to the scope record.
Added && as operator.
Rearrange precedence.
Define Erlang operators.
Use elixir_scope to dry up the info passed between transformations.
More operators tests.
Rename elixir_object record.
Rename elixir_* records to elixir_*__ to avoid clashes.
Mention operators on the README.
Start working with comparison operators.
Simplify String objects as well.
Treat orddict as native types for performance.
Rename test file.
The evaluation order is now defined.
Dicts are not ordered by default.
Add case/when as key words.
Mention if/else and case/when expressions.
More info about methods on the README.
Added char lists.
Info about method visibility.
Reforce the concepts.
More info about the object model.
Give higher priority to method without args when confronted with binary operators.
Finish adding tests to the callbacks system.
Add the main behavior for callbacks and a hidden callback module definition.
Visibility now handles callbacks.
Refactor methods logic out from elixir_object.
Add the ability to define extra attributes and retrieve behavior.
More module tests.
Add a test for visibility retrieval.
Added __added_as_mixin__ and __added_as_proto__ hooks.
Some docs for __mixins__, __protos__ and __ivars__.
Move module methods to elixir_module_methods.
Remove Module methods from Object.
Docs for functions.
Add then to if clauses.
Added tests and docs for delete method in lists
added an assert_raise helper method for testing
Remove inheritance.
minor corrections to the readme
Minor correction in the Atom documentation for to_char_list
minor doc formatting improvements
Docs and tests for List##map, also added an alias for collect
minor change to a List##each test
Added test cases for List##each, including a small correction so each returns self after running
More info on the Object Model.
Docs, docs, docs.
Improve README.
Improve README.
Small change on README.
Improve Makefile.
added docs and tests for List +
Change visibility handling.
More tests.
Basic catch tests.
Finish ExUnit.
Implement to_s and inspect across different objects.
More work on ExUnit.
Tests for send.
Remove c from regexp.
More work on ExUnit.
String concatenation is done with ~ at the end of the line.
Split test units.
Start adding test/unit.
More regular expressions tests.
Bring tests back.
Finish more robust interpolation handling.
Handle pushbacks on strings and sigils.
Improve regexp code.
Comments.
Finish binary handling.
Add binaries.
Assert for local calls precedence inside arrays.
Small simplifications.
Revert Erlang local calls.
Strings as binaries.
Use ~ts as appropriate.
Add tests for alias_local.
Add support to __LINE__ and __FILE__.
Basic support to alias_local_method.
Update README.
Added unless.
Added if/elsif/else expressions.
Added true and false as booleans.
Remove unecessary protected.
Finish visibility patches.
Improved error messages.
More visibility tests.
Copy data on inheritance.
Add Erlang local calls.
Use lookup_element.
Implement visibility helpers.
Finished visibility basic implementation. Now we just need to define public/protected/private methods and use the visibility on method dispatch.
Start to pass visibility around.
Added ivars test.
Improve docs.
Internal structure for instance variable calls.
Improvements to the object model.
Add watchr script.
More regexp support.
Smarter Makefile.
More basic support to regexps.
Initial support for regexps.
Outline regexp specification.
Added ~q and ~Q as preprocessors.
Added implicit string concatenation.
Check for more separators on interpolation.
Handle interpolated atoms.
Atom separators test.
Base support for interpolated atoms and double quoted atoms
Add a list of string pre operators.
Allow escaped chars.
More interpolation tests.
Add _ to pattern matching.
Proper errors if compilation fails.
No need for umerge3.
Pass filename as arg on transform.
Initial work on local calls.
Add div and rem as operators.
Renamed README to include md extension.
More object tests.
Add more items to the README.
More green tests.
Rename file.
More strings and atom docs and tests.
Add chars as $c
More dict tests.
Add docs to dict.
Added more erlang call assertions.
Added h|t.
Rename to def_method.
Bunch of changes to support proper initialization.
Finish inheritance.
Improve strings support.
Refactor string building.
More work on inheritance.
Basic support to inheritance.
Remove dispatch chain.
No need to mixin self.
Ensure UTF8 on strings.
Remove warnings on compilation.
Allow interpolation to be escaped.
Rename builtin to dict
Finished string interpolation.
Rudimentary support to interpolation.
Initial support to strings.
Rename to builtin_test.
Allow method calls with dicts to skip parenthesis.
Move transformations to another file.
Added instance variables.
Basic constructor support.
Special case new to handle arguments.
Use tail-recursion to transform lists.
Added dicts.
Added object instantiation.
Implement more methods on the Object API.
Allow function declarations inside object but automatically wrap them into a module.
Added the basics for method definition inside objects.
Allow implicit mixins.
Test default self is object.
Rename elixir_module to elixir_object.
Add more tests to mixins.
Rename erl to Erlang.
Complete implicit self implementation.
Tests for implicit self.
Add implicit self (still missing implicit self with parens).
Added the basics for implicit self.
Properly consider variables on nested scopes.
Pass variable scoping forward.
Lists now work.
More strict grammar rules.
Unary operators cannot be dispatch methods otherwise they are not usable in matches.
Bring inline functions back.
Added tuples.
Do not allow inline functions to be nested.
Allow method calls on native types.
Remove ETS constants.
More tests.
Major break though in the object model.
Remove ?assertEqual macros.
Added atoms to the parser.
Rename to elixir_numeric_methods.
Add smallish roadmap.
Convert operators to method calls.
Allow comments.
Added a Module module.
Added erlang calls.
Bootstrap of the object model.
Improve coverage a bit.
More advance in the Object Model.
Solve shift-reduce conflicts.
Invoke methods in module with self.
More cleanup.
Clean up method definition by using abstract forms.
Cleanup unused module tables.
Rework on module definition.
Allow multiline assignments.
More tests.
Constants are now stored and looked up.
Small changes on tests.
Added constants with basic lookup.
Reference it as constant instead of module name.
Minor changes.
Export all functions by default.
Allow nested modules.
Methods now receive self.
Method invocation now works.
Added prototypes.
Added method call to the grammar.
Create an include file with common definitions.
Refactor to elixir_module.
Added method compilation in modules.
Scratch methods support.
Split module tests.
Do not allow declarations inside functions.
Compile modules from module declaration.
Added modules and ensure their body is executable.
Allow expressions on function calls.
Support function calls.
Add tests for multiline functions.
Refactor expressions.
Solve shift conflicts.
Reduce the number of shift/reduce conflicts.
Functions accept args.
I HAZ FUNCTIONZ + CLOJUREZ.
Add ; as optional separator.
Small organization of method names.
Allow multiline expressions.
Tests for float.
More variables tests.
Basic assignment works.
Prettify Makefile output.
Proper operator precedence.
Allow whitespaces.
Basic operations in progress.
Add test suite and start to parse the tree.
Handling arithmetic operators.
Added basic lexer.
First commit.
